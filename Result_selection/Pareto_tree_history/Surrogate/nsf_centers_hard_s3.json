{"1": [{"determining": "( ( Max( FirstVNF_RAM_Server,RRS ) * CRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( ( RRSe - Min( MUR ,Max( RRSe,RCSe ) ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * FirstVNF_CPU ) + ( ARS - Const ) )", "choosing": "Min( ( CS / CS ) ,Max( RMSe,DS ) )", "obj1": 0.8244111349036403, "obj2": 0.2183186429677587}, {"determining": "( ( ACS + BR ) + ( RRS - ACS ) )", "choosing": "( ( Min( MLU ,MLU ) / CS ) / Min( CS ,MUC ) )", "obj1": 0.6916488222698073, "obj2": 0.2558746715076788}, {"determining": "( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( DS ,( ( ( ( MUC - ( RRSe * RMSe ) ) + ( RRSe / Min( DS ,MUM ) ) ) + ( Max( RMSe,RMSe ) / MUR ) ) / RRSe ) ) * ( ( ( RMSe + ( ( ( RMSe + MUR ) * RCSe ) * MLU ) ) - DS ) * MUR ) ) ,( MUM - Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - AMS ) / MRS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUM - MUC ) / Max( MUR,MUC ) ) + Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) )", "obj1": 0.8650963597430407, "obj2": 0.13827203430162646}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( MRS,Const ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( ( RCSe + MUC ) / ( CS + ( MUC + RRSe ) ) ) / ( ( MUR + CS ) + MUR ) ) ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_CPU_Server ) ,Min( ( CRS - FirstVNF_RAM_Server ) ,Min( ( Min( BR ,AMS ) * ( ( MRS * AMS ) - MDR ) ) ,MDR ) ) )", "choosing": "Min( ( Min( ( RMSe + MLU ) ,MUM ) * RCSe ) ,( RCSe / Max( MLU,( Min( DS ,( CS / CS ) ) * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),( BR + DDR ) ) )", "choosing": "( Max( MUR,CS ) + ( ( RMSe - ( MUR + MUR ) ) / ( ( Min( MUM ,( Max( ( MLU + MUR ),RCSe ) * MLU ) ) + MUC ) / ( RRSe + ( MUM * ( RMSe / ( RMSe - RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / ( BR * Const ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS - MUR ),Min( CS ,RMSe ) ) / ( Max( Min( RRSe ,( RRSe / DS ) ),MUM ) / ( RMSe + ( ( Min( RRSe ,Max( MLU,( MUC + MUC ) ) ) / MUR ) * ( ( ( DS * MUR ) + ( Min( RMSe ,RMSe ) / RCSe ) ) / MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + FirstVNF_RAM_Server ) + ( ( RRS * ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU * MRS ),Min( Min( FirstVNF_CPU ,Min( ( RRS * ( Max( MDR,Const ) / ( Const - MRS ) ) ) ,AMS ) ) ,FirstVNF_Mem ) )", "choosing": "( ( DS * ( MLU * ( DS * MUC ) ) ) + ( RRSe - Max( RCSe,MUM ) ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( AMS,FirstVNF_RAM ) / ( ACS - ( FirstVNF_RAM_Server * Min( ( CRS + Const ) ,( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) ) ) ) ,( ( ( ( AMS + ( FirstVNF_RAM_Server - ( RRS / FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM_Server ) - RRS ) + Const ) )", "choosing": "( ( MUC - RCSe ) + ( ( Max( MUM,Min( RCSe ,( CS + MLU ) ) ) - MLU ) + Min( ( ( ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR * FirstVNF_Mem ) * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( ( DS * Max( RRSe,CS ) ) - ( MUC - RRSe ) ) * Max( Max( DS,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ),Min( ACS ,MDR ) ),Min( ( CRS * FirstVNF_Mem_Server ) ,( MRS + CRS ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + ( MRS - BR ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( ARS - CRS ) ) ) )", "choosing": "Max( ( DS + Min( ( CS * RRSe ) ,Max( MLU,DS ) ) ),( RRSe / ( Min( CS ,MUR ) / MUR ) ) )", "obj1": 0.8265524625267666, "obj2": 0.19847432567198947}, {"determining": "( ( Max( ( ARS * Min( ARS ,Max( ( AMS - RRS ),FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU + CRS ) ) / ( ( MRS * MRS ) * ( CRS + CRS ) ) ) - ( ACS + ( FirstVNF_CPU / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( RMSe - MUR ) ) ,( Max( MLU,Max( RMSe,( ( MUR / ( DS + MUM ) ) - RCSe ) ) ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( Min( FirstVNF_RAM ,DDR ) - Max( ( FirstVNF_CPU / ( Min( AMS ,MRS ) * MDR ) ),( AMS / ( FirstVNF_Mem - AMS ) ) ) ) - Max( MRS,RRS ) ) ) ,( ( ( Const * PN ) - ( FirstVNF_RAM_Server / PN ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( ( CS * MUC ) - MUC ) / ( Max( DS,RRSe ) * Max( Max( RRSe,( RRSe * RMSe ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + Min( CRS ,FirstVNF_CPU ) ) ,Min( ( RRS + Const ) ,( AMS * Const ) ) ) - ( ( ( ( MDR / MDR ) * FirstVNF_CPU ) * ( CRS - ( Min( Const ,FirstVNF_CPU ) * ( MDR / ( RRS + FirstVNF_Mem ) ) ) ) ) - RRS ) )", "choosing": "Max( ( RMSe - MUM ),( ( ( Min( RMSe ,( Max( RRSe,( MUR - RMSe ) ) / CS ) ) - RMSe ) - MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM * ACS ) ,( FirstVNF_Mem * Const ) ) - Max( ( FirstVNF_Mem / ARS ),( BR / FirstVNF_Mem_Server ) ) ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ( FirstVNF_RAM - ACS ) * Max( DDR,MDR ) ) ) )", "choosing": "Max( ( Max( MUM,MUM ) - MLU ),( ( MLU + RMSe ) - MUM ) )", "obj1": 0.9036402569593148, "obj2": 0.09889775830910538}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( DS * MUC ) - Min( ( MUR / MUC ) ,CS ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( ( CS + MUM ) - MUC ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) - ( Max( MRS,FirstVNF_Mem_Server ) - ( MDR + ( FirstVNF_RAM_Server / ( BR + PN ) ) ) ) ) / Min( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,Min( CRS ,BR ) ) ,( ( AMS * ACS ) + ( ACS / RRS ) ) ) )", "choosing": "Min( ( MUC / ( MUM + ( MUM * MLU ) ) ) ,Max( ( ( CS + MUM ) - RRSe ),RMSe ) )", "obj1": 0.8501070663811563, "obj2": 0.18072804901076725}, {"determining": "( ( ( ( ARS + FirstVNF_Mem_Server ) * Max( ACS,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM + ACS ) - Max( ARS,PN ) ) ) - Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem_Server ) ) ,Max( Max( MDR,PN ),( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( MUM / CS ) ) - Min( ( DS / RRSe ) ,( RRSe + RCSe ) ) ) / ( ( ( MUC * DS ) * ( RCSe - MUM ) ) + Min( ( DS / DS ) ,( MLU - RCSe ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.1002187174705565}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM + ( MDR / AMS ) ) / ( ( DDR * FirstVNF_Mem ) - ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( ( ( ( Min( AMS ,FirstVNF_Mem ) + AMS ) * ( Max( ACS,Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) / RRS ) ) + FirstVNF_CPU_Server ) + CRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUC * DS ) ) ,( ( MLU + MUM ) - Min( MUM ,DS ) ) ) * ( ( Min( RRSe ,( Min( ( MUM / Max( RCSe,MUC ) ) ,RRSe ) * ( CS + ( RCSe + ( RCSe - RCSe ) ) ) ) ) - ( CS - RCSe ) ) / Max( Max( RCSe,RRSe ),( MLU + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( ( ACS - ( FirstVNF_Mem_Server / RRS ) ) ,FirstVNF_RAM ) * ( RRS - RRS ) )", "choosing": "( Min( Min( RCSe ,MUR ) ,Min( RMSe ,Max( MUC,MUC ) ) ) / ( MLU * RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( ( ( Min( AMS ,RRS ) / ARS ) + DDR ) / Max( MDR,DDR ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUR ),( MUC + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,DS ) - Max( CS,CS ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.26524366540367245}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( FirstVNF_RAM_Server / CRS ) ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( Min( PN ,FirstVNF_CPU ) + ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( Max( ( FirstVNF_CPU_Server / Const ),( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) - DDR ) + FirstVNF_Mem ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,Max( RRS,ACS ) ) ) * Min( Min( ( ACS - AMS ) ,( CRS * ARS ) ) ,( DDR - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( MLU * ( Min( ( DS + DS ) ,DS ) / ( RRSe + MUM ) ) ) ,MLU ) * ( DS - Max( Max( ( DS / MLU ),MUM ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,RRS ) * CRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( ( RRSe - Min( MUR ,Max( RRSe,RCSe ) ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Max( FirstVNF_CPU,( Max( ( ( Const / FirstVNF_Mem ) * MRS ),FirstVNF_CPU ) - ARS ) ) ) * RRS )", "choosing": "Max( Min( MUM ,Max( Min( DS ,DS ),( RMSe + MUR ) ) ),Max( ( ( RCSe + RMSe ) - Min( MUM ,RMSe ) ),Max( ( MUC - MUC ),( ( Max( ( Min( MUR ,MUR ) - RRSe ),Max( MUR,MUM ) ) / RRSe ) - MUR ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.2618185292445951}, {"determining": "( ( AMS - DDR ) - ( BR * FirstVNF_CPU ) )", "choosing": "Min( ( CS / CS ) ,( CS / RCSe ) )", "obj1": 0.828693790149893, "obj2": 0.11821548854831804}, {"determining": "( Max( ARS,BR ) - ( Min( BR ,CRS ) / ( MDR * MRS ) ) )", "choosing": "( ( Max( ( MUR * MUR ),( MUM + DS ) ) - Max( ( RRSe - RCSe ),Min( RCSe ,MLU ) ) ) - ( ( Max( MUR,MUC ) + ( MUC - RMSe ) ) + ( ( MUM * MLU ) + Max( RRSe,Max( ( DS + DS ),( RMSe * MUC ) ) ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.040030773334810386}, {"determining": "( ( Max( ( FirstVNF_CPU_Server / Const ),( PN + FirstVNF_Mem ) ) + Min( ( CRS / FirstVNF_Mem ) ,Max( FirstVNF_CPU,ACS ) ) ) * Min( Min( Min( CRS ,ARS ) ,( ACS - AMS ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe / ( MUR + RCSe ) ) * Max( DS,Max( Max( RRSe,MUM ),CS ) ) )", "obj1": 0.7387580299785867, "obj2": 0.21471607872919024}, {"determining": "( ( ( ( ARS + FirstVNF_Mem_Server ) * Max( ACS,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM + ACS ) - Max( ARS,PN ) ) ) - Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem_Server ) ) ,Max( Max( MDR,PN ),( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( MUM / CS ) ) - Min( ( DS / RRSe ) ,( RRSe + RCSe ) ) ) / ( ( ( MUC * DS ) * ( RCSe - MUM ) ) + Min( ( DS / DS ) ,( MLU - RCSe ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.1002187174705565}, {"determining": "( ( Max( ( ARS * Min( ARS ,Max( ( AMS - RRS ),FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU + CRS ) ) / ( ( MRS * MRS ) * ( CRS + CRS ) ) ) - ( ACS + ( FirstVNF_CPU / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( RMSe - MUR ) ) ,( Max( MLU,Max( RMSe,( ( MUR / ( DS + MUM ) ) - RCSe ) ) ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.06510215871685594}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_RAM_Server / ARS ) * ( FirstVNF_Mem / ( ( AMS + ARS ) * FirstVNF_RAM_Server ) ) ) ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( RRSe,( MUM - RMSe ) )", "obj1": 0.8222698072805139, "obj2": 0.17037121063180324}, {"determining": "( ( ( FirstVNF_Mem - ( MDR * Min( FirstVNF_Mem ,Const ) ) ) * FirstVNF_CPU_Server ) / Max( CRS,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUR,MUM ),( Max( DS,MUM ) * MUM ) ) * ( RCSe / RCSe ) )", "obj1": 0.7944325481798715, "obj2": 0.20908104027225144}, {"determining": "( ( Min( ( FirstVNF_RAM * ACS ) ,( FirstVNF_Mem * Const ) ) - Max( ( FirstVNF_Mem / ARS ),( BR / FirstVNF_Mem_Server ) ) ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ( FirstVNF_RAM - ACS ) * Max( DDR,MDR ) ) ) )", "choosing": "Max( ( Max( MUM,MUM ) - MLU ),( ( MLU + RMSe ) - MUM ) )", "obj1": 0.9036402569593148, "obj2": 0.09583613957666418}, {"determining": "Min( Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ),Min( ACS ,MDR ) ),Min( ( CRS * FirstVNF_Mem_Server ) ,( MRS + CRS ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + ( MRS - BR ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( ARS - CRS ) ) ) )", "choosing": "Max( ( DS + Min( ( CS * RRSe ) ,Max( MLU,DS ) ) ),( RRSe / ( Min( CS ,MUR ) / MUR ) ) )", "obj1": 0.8179871520342612, "obj2": 0.19358627251326213}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - Const ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUM ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( ( ACS - ( FirstVNF_Mem_Server / RRS ) ) ,FirstVNF_RAM ) * ( RRS - RRS ) )", "choosing": "( Min( Min( RCSe ,MUR ) ,Min( RMSe ,Max( MUC,MUC ) ) ) / ( MLU * RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( Min( ( ACS - ( PN / Max( ( CRS - FirstVNF_Mem ),( ( FirstVNF_RAM_Server - Const ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) ) ,FirstVNF_RAM ) * ( RRS - RRS ) )", "choosing": "( Min( Min( RCSe ,( ( MUR / DS ) / ( ( ( MUC - MLU ) * CS ) - ( RMSe - ( Max( MLU,MUC ) * Max( RCSe,MUC ) ) ) ) ) ) ,Min( RMSe ,Max( MUC,MUC ) ) ) / ( MLU * RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( ( Max( ( ARS * Min( ARS ,Max( ( AMS - RRS ),FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU + CRS ) ) / ( ( MRS * MRS ) * ( CRS + CRS ) ) ) - ( ACS + ( FirstVNF_CPU / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( RMSe - MUR ) ) ,( Max( MLU,Max( RMSe,( ( MUR / ( DS + MUM ) ) - RCSe ) ) ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.06510215871685594}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) - ( FirstVNF_Mem / ( ACS * ( FirstVNF_Mem_Server + DDR ) ) ) )", "choosing": "Max( Max( Max( ( MUR / RCSe ),CS ),MUR ),( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) * CS ) )", "obj1": 0.8201284796573876, "obj2": 0.18056847388167238}, {"determining": "( ( ( FirstVNF_Mem - ( MDR * Min( FirstVNF_Mem ,Const ) ) ) * FirstVNF_CPU_Server ) / Max( CRS,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUR,MUM ),( Max( DS,MUM ) * MUM ) ) * ( RCSe / RCSe ) )", "obj1": 0.7944325481798715, "obj2": 0.20908104027225144}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM + ( MDR / AMS ) ) / ( ( DDR * FirstVNF_Mem ) - ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( ( ( ( Min( AMS ,FirstVNF_Mem ) + AMS ) * ( Max( ACS,Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) / RRS ) ) + FirstVNF_CPU_Server ) + CRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUC * DS ) ) ,( ( MLU + MUM ) - Min( MUM ,DS ) ) ) * ( ( Min( RRSe ,( Min( ( MUM / Max( RCSe,MUC ) ) ,RRSe ) * ( CS + ( RCSe + ( RCSe - RCSe ) ) ) ) ) - ( CS - RCSe ) ) / Max( Max( RCSe,RRSe ),( MLU + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ACS + BR ) + ( RRS - ACS ) )", "choosing": "( ( Min( MLU ,MLU ) / CS ) / Min( CS ,MUC ) )", "obj1": 0.6916488222698073, "obj2": 0.2558746715076788}, {"determining": "( ( ( FirstVNF_CPU * MDR ) * ( RRS + FirstVNF_CPU ) ) + ( ( ( MRS / FirstVNF_Mem_Server ) * ( MRS * FirstVNF_Mem ) ) - ARS ) )", "choosing": "Max( Max( Max( RCSe,RMSe ),MUM ),Max( RMSe,RMSe ) )", "obj1": 0.6852248394004282, "obj2": 0.2611578819991498}, {"determining": "Min( ( MDR + FirstVNF_CPU ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + MUC ) ,( CS + ( ( DS * RMSe ) + ( Min( MUC ,MUM ) + Max( MUR,RMSe ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.26035723235934255}, {"determining": "( ( DDR - ( AMS - FirstVNF_Mem ) ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "Min( Min( ( Min( ( MUM - MUR ) ,RRSe ) * ( DS + CS ) ) ,MUM ) ,( Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) * ( Min( RRSe ,DS ) - ( ( ( ( Min( RCSe ,MUM ) - RRSe ) / MLU ) * MUR ) - RCSe ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.2559101405859584}, {"determining": "( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( DS ,( ( ( ( MUC - ( RRSe * RMSe ) ) + ( RRSe / Min( DS ,MUM ) ) ) + ( Max( RMSe,RMSe ) / MUR ) ) / RRSe ) ) * ( ( ( RMSe + ( ( ( RMSe + MUR ) * RCSe ) * MLU ) ) - DS ) * MUR ) ) ,( MUM - Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( MRS,Const ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( ( RCSe + MUC ) / ( CS + ( MUC + RRSe ) ) ) / ( ( MUR + CS ) + MUR ) ) ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_CPU_Server ) ,Min( ( CRS - FirstVNF_RAM_Server ) ,Min( ( Min( BR ,AMS ) * ( ( MRS * AMS ) - MDR ) ) ,MDR ) ) )", "choosing": "Min( ( Min( ( RMSe + MLU ) ,MUM ) * RCSe ) ,( RCSe / Max( MLU,( Min( DS ,( CS / CS ) ) * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),( BR + DDR ) ) )", "choosing": "( Max( MUR,CS ) + ( ( RMSe - ( MUR + MUR ) ) / ( ( Min( MUM ,( Max( ( MLU + MUR ),RCSe ) * MLU ) ) + MUC ) / ( RRSe + ( MUM * ( RMSe / ( RMSe - RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / ( BR * Const ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS - MUR ),Min( CS ,RMSe ) ) / ( Max( Min( RRSe ,( RRSe / DS ) ),MUM ) / ( RMSe + ( ( Min( RRSe ,Max( MLU,( MUC + MUC ) ) ) / MUR ) * ( ( ( DS * MUR ) + ( Min( RMSe ,RMSe ) / RCSe ) ) / MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + FirstVNF_RAM_Server ) + ( ( RRS * ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( AMS,FirstVNF_RAM ) / ( ACS - ( FirstVNF_RAM_Server * Min( ( CRS + Const ) ,( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) ) ) ) ,( ( ( ( AMS + ( FirstVNF_RAM_Server - ( RRS / FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM_Server ) - RRS ) + Const ) )", "choosing": "( ( MUC - RCSe ) + ( ( Max( MUM,Min( RCSe ,( CS + MLU ) ) ) - MLU ) + Min( ( ( ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR * FirstVNF_Mem ) * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( ( DS * Max( RRSe,CS ) ) - ( MUC - RRSe ) ) * Max( Max( DS,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ARS * Min( ARS ,Max( ( AMS - RRS ),FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU + CRS ) ) / ( ( MRS * MRS ) * ( CRS + CRS ) ) ) - ( ACS + ( FirstVNF_CPU / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( RMSe - MUR ) ) ,( Max( MLU,Max( RMSe,( ( MUR / ( DS + MUM ) ) - RCSe ) ) ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( Min( FirstVNF_RAM ,DDR ) - Max( ( FirstVNF_CPU / ( Min( AMS ,MRS ) * MDR ) ),( AMS / ( FirstVNF_Mem - AMS ) ) ) ) - Max( MRS,RRS ) ) ) ,( ( ( Const * PN ) - ( FirstVNF_RAM_Server / PN ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( ( CS * MUC ) - MUC ) / ( Max( DS,RRSe ) * Max( Max( RRSe,( RRSe * RMSe ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + Min( CRS ,FirstVNF_CPU ) ) ,Min( ( RRS + Const ) ,( AMS * Const ) ) ) - ( ( ( ( MDR / MDR ) * FirstVNF_CPU ) * ( CRS - ( Min( Const ,FirstVNF_CPU ) * ( MDR / ( RRS + FirstVNF_Mem ) ) ) ) ) - RRS ) )", "choosing": "Max( ( RMSe - MUM ),( ( ( Min( RMSe ,( Max( RRSe,( MUR - RMSe ) ) / CS ) ) - RMSe ) - MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( DS * MUC ) - Min( ( MUR / MUC ) ,CS ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( ( CS + MUM ) - MUC ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( FirstVNF_RAM_Server / CRS ) ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( Min( PN ,FirstVNF_CPU ) + ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,( PN / MRS ) ) ) ,( ( FirstVNF_RAM_Server - BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - ( ( ( RCSe / RMSe ) + MLU ) + Min( RCSe ,MUM ) ) ) ) ,( ( DS / DS ) - MUR ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * CRS ) - ( FirstVNF_Mem + PN ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) - ( PN + FirstVNF_Mem ) ) * CRS ) - Min( FirstVNF_RAM ,( Min( Max( FirstVNF_Mem_Server,( ( ( MDR / FirstVNF_RAM ) + ARS ) / MRS ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUC ,MUC ) * Max( MUR,( Min( ( ( CS - RCSe ) - Min( MLU ,( MUC - MUR ) ) ) ,MUC ) / Max( ( MUM / RRSe ),RRSe ) ) ) ) + ( ( DS + MUC ) / Max( RCSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( BR - ( MRS * ( BR * DDR ) ) ) * ( Const * ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ),CRS ) - ( ( ARS * RRS ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUM * ( MUM * Min( ( ( CS * Max( DS,MUM ) ) / MUM ) ,MUR ) ) ) + ( MUM * MUR ) ),Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + FirstVNF_RAM_Server ) + ( ( RRS * ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - ( ( ARS / FirstVNF_RAM ) + ( FirstVNF_RAM + RRS ) ) )", "choosing": "( Min( ( ( RRSe - RRSe ) + ( MUR - Min( ( ( RCSe / MLU ) * Min( ( DS * RMSe ) ,RCSe ) ) ,( MUM * MUC ) ) ) ) ,( ( ( RCSe - DS ) / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + CRS ),( ARS - FirstVNF_CPU ) ) / ( FirstVNF_CPU / ( CRS + DDR ) ) ) - ( ACS + ( ( BR * FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( Min( MLU ,Max( RMSe,Max( ( RMSe / DS ),MUC ) ) ) + Min( Min( MUM ,RRSe ) ,RCSe ) ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem ) / Max( RRS,DDR ) ) ,Min( ( ( FirstVNF_RAM + DDR ) - Min( BR ,DDR ) ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,Min( ( ( CS + CS ) / RRSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU * ( ( PN + RRS ) / FirstVNF_Mem_Server ) ),Min( PN ,ACS ) ) - ( ( MRS / AMS ) / ( FirstVNF_CPU_Server + RRS ) ) )", "choosing": "Max( ( RMSe - Max( ( MLU - CS ),( MLU + MUC ) ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( ACS / RRS ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + RRS ) - ( MRS / AMS ) ) - ( FirstVNF_RAM * CRS ) )", "choosing": "Min( ( RRSe / ( Max( Min( MUC ,CS ),MUM ) + Min( MUM ,MLU ) ) ) ,( RCSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * Max( Max( CRS,Max( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MRS ) ),CRS ) ),FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + Const ) ) )", "choosing": "( Min( MLU ,MUR ) + ( MLU / ( MUM * ( Min( MUR ,RMSe ) - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS - ARS ) / MRS ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( MRS + DDR ) + DDR ) ) )", "choosing": "( ( Max( ( RMSe / MUR ),MUC ) + ( MUM / MUR ) ) * Min( ( MUC - MLU ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / ACS ) ,( FirstVNF_Mem * Const ) ) - Max( ( FirstVNF_Mem / ( PN - DDR ) ),( BR / FirstVNF_Mem_Server ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * ( Const - ( RRS - ( BR - MRS ) ) ) ) ),FirstVNF_CPU_Server ),MDR ) )", "choosing": "Max( ( ( MLU + RMSe ) - RMSe ),( CS - ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) ,( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / MDR ) - Min( FirstVNF_Mem ,( ( BR + FirstVNF_RAM_Server ) * ( ( BR * FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( ( CS * MUR ) / MUM ) / RRSe ) + RCSe ) ) + Max( MUC,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( AMS ,( ( FirstVNF_CPU * DDR ) + Max( ARS,CRS ) ) ) ) - Max( Const,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( ( ( CS - DS ) + Max( RRSe,RCSe ) ) - RMSe ) ) * ( MLU / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + FirstVNF_Mem ) - ( MDR + ( ( FirstVNF_RAM + ( FirstVNF_CPU * ARS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Max( ( CS + MUC ),RMSe ) / Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM + ( MDR / AMS ) ) / ( ( DDR * FirstVNF_Mem ) - ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( ( ( ( Min( AMS ,FirstVNF_Mem ) + AMS ) * ( Max( ACS,Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) / RRS ) ) + FirstVNF_CPU_Server ) + CRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUC * DS ) ) ,( ( MLU + MUM ) - Min( MUM ,DS ) ) ) * ( ( Min( RRSe ,( Min( ( MUM / Max( RCSe,MUC ) ) ,RRSe ) * ( CS + ( RCSe + ( RCSe - RCSe ) ) ) ) ) - ( CS - RCSe ) ) / Max( Max( RCSe,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM + ( MDR / AMS ) ) / ( ( DDR * FirstVNF_Mem ) - ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( ( ( ( Min( AMS ,FirstVNF_Mem ) + AMS ) * ( Max( ACS,Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) / RRS ) ) + FirstVNF_CPU_Server ) + CRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUC * DS ) ) ,( ( MLU + MUM ) - Min( MUM ,DS ) ) ) * ( ( Min( RRSe ,( Min( ( MUM / Max( RCSe,MUC ) ) ,RRSe ) * ( CS + ( RCSe + ( RCSe - RCSe ) ) ) ) ) - ( CS - RCSe ) ) / Max( Max( RCSe,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + ( ( ARS - AMS ) / MRS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( RCSe - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,FirstVNF_CPU ) ,Min( Max( RRS,BR ) ,Max( ( DDR - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ),FirstVNF_Mem ) ) ) + Max( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - MDR ) ),RRS ) )", "choosing": "( Min( MUR ,DS ) / Min( MUC ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( CRS ,( ( RRS - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_RAM / CRS ) ,FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem - AMS ),DDR ),FirstVNF_RAM ) ) )", "choosing": "( ( ( MUM + RCSe ) * ( RMSe - CS ) ) + ( Max( ( ( DS - MUR ) / Min( ( MUR - CS ) ,MUM ) ),( MUC - ( Min( ( ( MUM * MLU ) / MUR ) ,MLU ) + MUM ) ) ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * FirstVNF_Mem_Server ) - Max( Max( ( AMS / PN ),Max( ACS,( Const / Const ) ) ),RRS ) )", "choosing": "Max( Min( RMSe ,CS ),( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - Max( DDR,Max( ( Max( ( Const * CRS ),FirstVNF_CPU ) + ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( ARS - Const ) / ( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "Max( Min( ( ( DS - Min( Max( CS,( Min( MUM ,RMSe ) / RRSe ) ) ,MLU ) ) - MUM ) ,RMSe ),( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / Min( FirstVNF_CPU ,( ( RRS * AMS ) / AMS ) ) ) - ( ACS + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,Max( RCSe,DS ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) - ( Max( MRS,FirstVNF_Mem_Server ) - ( MDR + ( FirstVNF_RAM_Server / ( RRS - Const ) ) ) ) ) / ( BR - ( ARS + Const ) ) )", "choosing": "Min( ( ( MUM + ( ( ( CS - RRSe ) - MUM ) * MLU ) ) / MUC ) ,Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU,CRS ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( ( MUC + ( RCSe + ( ( RCSe * RMSe ) + RCSe ) ) ) * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,Max( FirstVNF_CPU,CRS ) ) * ( PN * Min( Max( DDR,RRS ) ,( Const - DDR ) ) ) )", "choosing": "Max( Min( MUC ,( ( ( MUC + ( ( MUC - RRSe ) + ( ( RCSe * RMSe ) + RCSe ) ) ) / Max( Min( RCSe ,MUR ),CS ) ) + CS ) ),Max( ( ( MLU + CS ) * MUR ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( CS ,RCSe ) / MUC ) ,( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * PN ) / ( RRS - FirstVNF_CPU ) )", "choosing": "Min( ( Min( CS ,RCSe ) / MUC ) ,( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) * ACS ) + ( Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) - Const ) )", "choosing": "Min( ( CS / RMSe ) ,Max( ( MUM * ( ( MUR + ( ( ( RRSe - RRSe ) + MUC ) / ( DS / MUR ) ) ) / RMSe ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( CS / CS ) ,Max( RMSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Max( ( Max( MRS,FirstVNF_RAM ) / FirstVNF_CPU ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - ( MRS / MRS ) ) ) + Const ) - FirstVNF_CPU_Server ) - ( BR + FirstVNF_CPU ) )", "choosing": "Min( ( Min( MUR ,Max( MUR,MUC ) ) - DS ) ,( Min( ( MLU / MLU ) ,CS ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MLU ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( FirstVNF_RAM_Server / CRS ) ) ) ,( FirstVNF_RAM + ( Min( PN ,FirstVNF_CPU ) + ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),MUM ) - RMSe ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( FirstVNF_RAM_Server / CRS ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( FirstVNF_RAM_Server / CRS ) ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( Min( PN ,FirstVNF_CPU ) + ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( DS * MUC ) - Min( ( MUR / MUC ) ,CS ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( ( CS + MUM ) - MUC ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( DS * MUC ) - Min( ( MUR / MUC ) ,CS ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( ( CS + MUM ) - MUC ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( DS * MUC ) - Min( ( MUR / MUC ) ,CS ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( ( CS + MUM ) - MUC ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( ( ( RRSe / MLU ) + ( DS / RMSe ) ) - ( MLU + Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / Max( FirstVNF_RAM_Server,( ( ARS - ACS ) * FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_Mem / Const ) ,( Const - DDR ) ) )", "choosing": "( ( ( MUC - ( ( MUR * RCSe ) + DS ) ) - ( RRSe * MUM ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( Max( RRSe,CS ) + ( RCSe / MUM ) ) / Min( RCSe ,( MLU * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( RMSe ,MUC ) - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,( ( AMS / FirstVNF_CPU_Server ) / Min( ACS ,FirstVNF_CPU ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * ( Max( MUC,RMSe ) + ( RRSe + MUC ) ) ) ,( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / FirstVNF_CPU_Server ) / Min( ACS ,( ( MDR + BR ) - Max( ( Min( ( PN * ( AMS / BR ) ) ,Const ) - MRS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * MLU ),RMSe ) + ( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_CPU_Server ) ,Min( ( CRS - FirstVNF_RAM_Server ) ,Min( ( Min( BR ,AMS ) * ( ( MRS * AMS ) - MDR ) ) ,MDR ) ) )", "choosing": "Min( ( Min( ( RMSe + MLU ) ,MUM ) * RCSe ) ,( RCSe / Max( MLU,( Min( DS ,( CS / CS ) ) * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / FirstVNF_CPU_Server ) / Min( ACS ,( ( MDR + BR ) - Max( ( Min( ( PN * ( AMS / BR ) ) ,Const ) - MRS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * MLU ),RMSe ) + ( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / ( ( MRS * FirstVNF_CPU ) - Const ) ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + ( ( ( ( MUC + MLU ) - CS ) * RCSe ) + Max( CS,( Min( ( Max( MUM,RRSe ) + MLU ) ,MUR ) * MUC ) ) ) ) ,( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / ( ( MRS * FirstVNF_CPU ) - Const ) ) ,Min( ACS ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + ( ( ( ( MUC + MLU ) - CS ) * RCSe ) + Max( CS,( Min( ( Max( MUM,RRSe ) + MLU ) ,MUR ) * MUC ) ) ) ) ,( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ARS * Min( ARS ,Max( ( AMS - RRS ),FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU + CRS ) ) / ( ( MRS * MRS ) * ( CRS + CRS ) ) ) - ( ACS + ( FirstVNF_CPU / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( ( RCSe - DS ) / DS ) - MUC ) ) + ( MUR / MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.06510215871685594}, {"determining": "( ( Max( ( ARS * Min( ARS ,Max( ( AMS - RRS ),FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU + CRS ) ) / ( ( MRS * MRS ) * ( CRS + CRS ) ) ) - ( ACS + ( FirstVNF_CPU / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( RMSe - MUR ) ) ,( Max( MLU,Max( RMSe,( ( MUR / ( DS + MUM ) ) - RCSe ) ) ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.06510215871685594}], "3": [{"determining": "Min( ( Max( ACS,FirstVNF_RAM ) / ( BR - ACS ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( ( Max( AMS,FirstVNF_RAM ) / MRS ) * ARS ) ) )", "choosing": "( ( ( MUR + MUR ) - Max( MUM,( MUM * MLU ) ) ) + Min( RRSe ,Max( RCSe,Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Max( FirstVNF_CPU,( Max( ( ( Const / FirstVNF_Mem ) * MRS ),FirstVNF_CPU ) - ARS ) ) ) * RRS )", "choosing": "Max( Min( MUM ,Max( Min( DS ,DS ),( RMSe + MUR ) ) ),Max( ( ( RCSe + RMSe ) - Min( MUM ,RMSe ) ),Max( ( MUC - MUC ),( ( Max( ( Min( MUR ,MUR ) - RRSe ),Max( MUR,MUM ) ) / RRSe ) - MUR ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.2618185292445951}, {"determining": "( ( Max( ( FirstVNF_CPU_Server / Const ),( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) - DDR ) + FirstVNF_Mem ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,Max( RRS,ACS ) ) ) * Min( Min( ( ACS - AMS ) ,( CRS * ARS ) ) ,( DDR - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( MLU * ( Min( ( DS + DS ) ,DS ) / ( RRSe + MUM ) ) ) ,MLU ) * ( DS - Max( Max( ( DS / MLU ),MUM ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Max( BR,FirstVNF_Mem_Server ) ) * RRS )", "choosing": "( ( ( ( RCSe / RRSe ) + ( MUM / CS ) ) - Min( ( DS / RRSe ) ,( RRSe + RCSe ) ) ) / ( ( ( MUC * DS ) * ( RCSe - MUM ) ) + Min( ( DS / DS ) ,( MLU - RCSe ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.2618185292445951}, {"determining": "( Max( CRS,DDR ) - Max( CRS,DDR ) )", "choosing": "( Min( CS ,MUR ) + Max( ( MUM + MUR ),( ( Min( Max( Min( DS ,RRSe ),( DS / CS ) ) ,Max( MLU,( DS + RCSe ) ) ) / ( ( ( Min( RRSe ,RMSe ) / ( RMSe + MUM ) ) - MLU ) * MUR ) ) * RRSe ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12527271140761326}, {"determining": "( ( AMS - DDR ) - BR )", "choosing": "Min( ( ( ( DS - ( MUC - ( CS + MUM ) ) ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.8222698072805139, "obj2": 0.11414552909644919}, {"determining": "( ( ( CRS / FirstVNF_CPU ) - DDR ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,( MUM / ( RCSe + MUC ) ) ) ,( RCSe / MUM ) )", "obj1": 0.867237687366167, "obj2": 0.0658143028845096}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MLU ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.9400428265524625, "obj2": 0.029533656341369466}, {"determining": "( ( Max( ( FirstVNF_CPU_Server / Const ),( PN + FirstVNF_Mem ) ) + Min( ( CRS / FirstVNF_Mem ) ,Max( FirstVNF_CPU,ACS ) ) ) * Min( Min( Min( CRS ,ARS ) ,( ACS - AMS ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe / ( MUR + RCSe ) ) * Max( DS,Max( Max( RRSe,MUM ),CS ) ) )", "obj1": 0.7387580299785867, "obj2": 0.21471607872919024}, {"determining": "( ( ( ( AMS - DDR ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) + BR ) - Min( MRS ,RRS ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * CS ) ) ) + MUM ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04560658611472505}, {"determining": "( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( DS ,( ( ( ( MUC - ( RRSe * RMSe ) ) + ( RRSe / Min( DS ,MUM ) ) ) + ( Max( RMSe,RMSe ) / MUR ) ) / RRSe ) ) * ( ( ( RMSe + ( ( ( RMSe + MUR ) * RCSe ) * MLU ) ) - DS ) * MUR ) ) ,( MUM - Max( RRSe,MUR ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "( ( ( FirstVNF_Mem / ( Min( ( ( RRS * FirstVNF_RAM ) / ( BR * Min( CRS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) / Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),CRS ) )", "choosing": "( Max( Max( MUR,MUM ),( Max( DS,MUM ) * MUM ) ) * ( RCSe / ( CS + ( MUC - ( Min( ( MLU / RCSe ) ,RCSe ) - ( DS * Max( MUC,MUM ) ) ) ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.2422670775565713}, {"determining": "Min( ( ( MRS * Max( Max( CRS,Max( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MRS ) ),CRS ) ),FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + Const ) ) )", "choosing": "( Min( MLU ,MUR ) + ( MLU / ( MUM * ( Min( MUR ,RMSe ) - MLU ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.23146669177398502}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / FirstVNF_Mem ),( ( Const + FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( ( ARS - ACS ) * FirstVNF_CPU_Server ) ) ) ) ) ,( ( AMS * FirstVNF_Mem ) - ( CRS + Const ) ) )", "choosing": "( ( RMSe + RMSe ) + ( MUC / CS ) )", "obj1": 0.728051391862955, "obj2": 0.2280575372843936}, {"determining": "( Min( BR ,AMS ) - ( ( AMS - ( FirstVNF_CPU - FirstVNF_RAM ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( MUC * ( MUM * ( RRSe / MLU ) ) ) ,( ( Min( MUC ,CS ) - MUC ) * CS ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "( FirstVNF_Mem_Server * Min( Min( Min( CRS ,ARS ) ,( ACS - AMS ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe / ( MUR + RCSe ) ) * Max( DS,Max( Max( Max( ( MUR / RCSe ),CS ),MUM ),CS ) ) )", "obj1": 0.7387580299785867, "obj2": 0.21471607872919024}, {"determining": "( ( ACS + BR ) + ( RRS - ACS ) )", "choosing": "( ( Min( MLU ,MLU ) / CS ) / Min( CS ,MUC ) )", "obj1": 0.6916488222698073, "obj2": 0.2558746715076788}, {"determining": "( Min( ( ACS - ( PN / Max( ( CRS - FirstVNF_Mem ),( ( FirstVNF_RAM_Server - Const ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) ) ,FirstVNF_RAM ) * ( RRS - RRS ) )", "choosing": "( Min( Min( RCSe ,( ( MUR / DS ) / ( ( ( MUC - MLU ) * CS ) - ( RMSe - ( Max( MLU,MUC ) * Max( RCSe,MUC ) ) ) ) ) ) ,Min( RMSe ,Max( MUC,MUC ) ) ) / ( MLU * RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( Min( ( ACS - ( FirstVNF_Mem_Server / RRS ) ) ,FirstVNF_RAM ) * ( RRS - RRS ) )", "choosing": "( Min( Min( RCSe ,MUR ) ,Min( RMSe ,Max( MUC,MUC ) ) ) / ( MLU * RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( ( ( FirstVNF_CPU * MDR ) * ( RRS + FirstVNF_CPU ) ) + ( ( ( MRS / FirstVNF_Mem_Server ) * ( MRS * FirstVNF_Mem ) ) - ARS ) )", "choosing": "Max( Max( Max( RCSe,RMSe ),MUM ),Max( RMSe,RMSe ) )", "obj1": 0.6852248394004282, "obj2": 0.2611578819991498}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - Min( Max( DDR,RRS ) ,( Const - DDR ) ) ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( FirstVNF_RAM_Server / CRS ) ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( Min( PN ,FirstVNF_CPU ) + ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - ( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) ) ) * ( MUC - MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.25893605910134054}, {"determining": "( ( Min( Min( BR ,Min( RRS ,Const ) ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_RAM + MDR ) - ( FirstVNF_CPU_Server / AMS ) ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( DDR - ( AMS - FirstVNF_Mem ) ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "Min( Min( ( Min( ( MUM - MUR ) ,RRSe ) * ( DS + CS ) ) ,MUM ) ,( Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) * ( Min( RRSe ,DS ) - ( ( ( ( Min( RCSe ,MUM ) - RRSe ) / MLU ) * MUR ) - RCSe ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.2559101405859584}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - Const ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUM ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( Min( Min( BR ,( FirstVNF_RAM_Server - ( ARS / AMS ) ) ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Min( FirstVNF_Mem ,( Max( BR,FirstVNF_CPU_Server ) * MRS ) ) )", "choosing": "( ( ( ( MUM - ( ( RCSe - CS ) - ( RCSe / DS ) ) ) * MUC ) / MLU ) + Max( MUR,RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( AMS - DDR ) )", "choosing": "( Min( MUM ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + ( CS / RCSe ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( MDR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2611578819991498}, {"determining": "( ( Max( FirstVNF_RAM_Server,RRS ) * CRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( ( RRSe - Min( MUR ,Max( RRSe,RCSe ) ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( DS ,( ( ( ( MUC - ( RRSe * RMSe ) ) + ( RRSe / Min( DS ,MUM ) ) ) + ( Max( RMSe,RMSe ) / MUR ) ) / RRSe ) ) * ( ( ( RMSe + ( ( ( RMSe + MUR ) * RCSe ) * MLU ) ) - DS ) * MUR ) ) ,( MUM - Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( MRS,Const ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( ( RCSe + MUC ) / ( CS + ( MUC + RRSe ) ) ) / ( ( MUR + CS ) + MUR ) ) ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_CPU_Server ) ,Min( ( CRS - FirstVNF_RAM_Server ) ,Min( ( Min( BR ,AMS ) * ( ( MRS * AMS ) - MDR ) ) ,MDR ) ) )", "choosing": "Min( ( Min( ( RMSe + MLU ) ,MUM ) * RCSe ) ,( RCSe / Max( MLU,( Min( DS ,( CS / CS ) ) * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),( BR + DDR ) ) )", "choosing": "( Max( MUR,CS ) + ( ( RMSe - ( MUR + MUR ) ) / ( ( Min( MUM ,( Max( ( MLU + MUR ),RCSe ) * MLU ) ) + MUC ) / ( RRSe + ( MUM * ( RMSe / ( RMSe - RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / ( BR * Const ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS - MUR ),Min( CS ,RMSe ) ) / ( Max( Min( RRSe ,( RRSe / DS ) ),MUM ) / ( RMSe + ( ( Min( RRSe ,Max( MLU,( MUC + MUC ) ) ) / MUR ) * ( ( ( DS * MUR ) + ( Min( RMSe ,RMSe ) / RCSe ) ) / MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + FirstVNF_RAM_Server ) + ( ( RRS * ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( AMS,FirstVNF_RAM ) / ( ACS - ( FirstVNF_RAM_Server * Min( ( CRS + Const ) ,( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) ) ) ) ,( ( ( ( AMS + ( FirstVNF_RAM_Server - ( RRS / FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM_Server ) - RRS ) + Const ) )", "choosing": "( ( MUC - RCSe ) + ( ( Max( MUM,Min( RCSe ,( CS + MLU ) ) ) - MLU ) + Min( ( ( ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR * FirstVNF_Mem ) * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( ( DS * Max( RRSe,CS ) ) - ( MUC - RRSe ) ) * Max( Max( DS,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ARS * Min( ARS ,Max( ( AMS - RRS ),FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU + CRS ) ) / ( ( MRS * MRS ) * ( CRS + CRS ) ) ) - ( ACS + ( FirstVNF_CPU / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( RMSe - MUR ) ) ,( Max( MLU,Max( RMSe,( ( MUR / ( DS + MUM ) ) - RCSe ) ) ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( Min( FirstVNF_RAM ,DDR ) - Max( ( FirstVNF_CPU / ( Min( AMS ,MRS ) * MDR ) ),( AMS / ( FirstVNF_Mem - AMS ) ) ) ) - Max( MRS,RRS ) ) ) ,( ( ( Const * PN ) - ( FirstVNF_RAM_Server / PN ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( ( CS * MUC ) - MUC ) / ( Max( DS,RRSe ) * Max( Max( RRSe,( RRSe * RMSe ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + Min( CRS ,FirstVNF_CPU ) ) ,Min( ( RRS + Const ) ,( AMS * Const ) ) ) - ( ( ( ( MDR / MDR ) * FirstVNF_CPU ) * ( CRS - ( Min( Const ,FirstVNF_CPU ) * ( MDR / ( RRS + FirstVNF_Mem ) ) ) ) ) - RRS ) )", "choosing": "Max( ( RMSe - MUM ),( ( ( Min( RMSe ,( Max( RRSe,( MUR - RMSe ) ) / CS ) ) - RMSe ) - MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( DS * MUC ) - Min( ( MUR / MUC ) ,CS ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( ( CS + MUM ) - MUC ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( FirstVNF_RAM_Server / CRS ) ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( Min( PN ,FirstVNF_CPU ) + ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,( PN / MRS ) ) ) ,( ( FirstVNF_RAM_Server - BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - ( ( ( RCSe / RMSe ) + MLU ) + Min( RCSe ,MUM ) ) ) ) ,( ( DS / DS ) - MUR ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * CRS ) - ( FirstVNF_Mem + PN ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) - ( PN + FirstVNF_Mem ) ) * CRS ) - Min( FirstVNF_RAM ,( Min( Max( FirstVNF_Mem_Server,( ( ( MDR / FirstVNF_RAM ) + ARS ) / MRS ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUC ,MUC ) * Max( MUR,( Min( ( ( CS - RCSe ) - Min( MLU ,( MUC - MUR ) ) ) ,MUC ) / Max( ( MUM / RRSe ),RRSe ) ) ) ) + ( ( DS + MUC ) / Max( RCSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( BR - ( MRS * ( BR * DDR ) ) ) * ( Const * ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ),CRS ) - ( ( ARS * RRS ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUM * ( MUM * Min( ( ( CS * Max( DS,MUM ) ) / MUM ) ,MUR ) ) ) + ( MUM * MUR ) ),Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + FirstVNF_RAM_Server ) + ( ( RRS * ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - ( ( ARS / FirstVNF_RAM ) + ( FirstVNF_RAM + RRS ) ) )", "choosing": "( Min( ( ( RRSe - RRSe ) + ( MUR - Min( ( ( RCSe / MLU ) * Min( ( DS * RMSe ) ,RCSe ) ) ,( MUM * MUC ) ) ) ) ,( ( ( RCSe - DS ) / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + CRS ),( ARS - FirstVNF_CPU ) ) / ( FirstVNF_CPU / ( CRS + DDR ) ) ) - ( ACS + ( ( BR * FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( Min( MLU ,Max( RMSe,Max( ( RMSe / DS ),MUC ) ) ) + Min( Min( MUM ,RRSe ) ,RCSe ) ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem ) / Max( RRS,DDR ) ) ,Min( ( ( FirstVNF_RAM + DDR ) - Min( BR ,DDR ) ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,Min( ( ( CS + CS ) / RRSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU * ( ( PN + RRS ) / FirstVNF_Mem_Server ) ),Min( PN ,ACS ) ) - ( ( MRS / AMS ) / ( FirstVNF_CPU_Server + RRS ) ) )", "choosing": "Max( ( RMSe - Max( ( MLU - CS ),( MLU + MUC ) ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( ACS / RRS ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + RRS ) - ( MRS / AMS ) ) - ( FirstVNF_RAM * CRS ) )", "choosing": "Min( ( RRSe / ( Max( Min( MUC ,CS ),MUM ) + Min( MUM ,MLU ) ) ) ,( RCSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * Max( Max( CRS,Max( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MRS ) ),CRS ) ),FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + Const ) ) )", "choosing": "( Min( MLU ,MUR ) + ( MLU / ( MUM * ( Min( MUR ,RMSe ) - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS - ARS ) / MRS ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( MRS + DDR ) + DDR ) ) )", "choosing": "( ( Max( ( RMSe / MUR ),MUC ) + ( MUM / MUR ) ) * Min( ( MUC - MLU ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / ACS ) ,( FirstVNF_Mem * Const ) ) - Max( ( FirstVNF_Mem / ( PN - DDR ) ),( BR / FirstVNF_Mem_Server ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * ( Const - ( RRS - ( BR - MRS ) ) ) ) ),FirstVNF_CPU_Server ),MDR ) )", "choosing": "Max( ( ( MLU + RMSe ) - RMSe ),( CS - ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) ,( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / MDR ) - Min( FirstVNF_Mem ,( ( BR + FirstVNF_RAM_Server ) * ( ( BR * FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( ( CS * MUR ) / MUM ) / RRSe ) + RCSe ) ) + Max( MUC,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( AMS ,( ( FirstVNF_CPU * DDR ) + Max( ARS,CRS ) ) ) ) - Max( Const,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( ( ( CS - DS ) + Max( RRSe,RCSe ) ) - RMSe ) ) * ( MLU / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + FirstVNF_Mem ) - ( MDR + ( ( FirstVNF_RAM + ( FirstVNF_CPU * ARS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Max( ( CS + MUC ),RMSe ) / Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM + ( MDR / AMS ) ) / ( ( DDR * FirstVNF_Mem ) - ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( ( ( ( Min( AMS ,FirstVNF_Mem ) + AMS ) * ( Max( ACS,Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) / RRS ) ) + FirstVNF_CPU_Server ) + CRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUC * DS ) ) ,( ( MLU + MUM ) - Min( MUM ,DS ) ) ) * ( ( Min( RRSe ,( Min( ( MUM / Max( RCSe,MUC ) ) ,RRSe ) * ( CS + ( RCSe + ( RCSe - RCSe ) ) ) ) ) - ( CS - RCSe ) ) / Max( Max( RCSe,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM + ( MDR / AMS ) ) / ( ( DDR * FirstVNF_Mem ) - ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( ( ( ( Min( AMS ,FirstVNF_Mem ) + AMS ) * ( Max( ACS,Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) / RRS ) ) + FirstVNF_CPU_Server ) + CRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUC * DS ) ) ,( ( MLU + MUM ) - Min( MUM ,DS ) ) ) * ( ( Min( RRSe ,( Min( ( MUM / Max( RCSe,MUC ) ) ,RRSe ) * ( CS + ( RCSe + ( RCSe - RCSe ) ) ) ) ) - ( CS - RCSe ) ) / Max( Max( RCSe,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + ( ( ARS - AMS ) / MRS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( RCSe - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,FirstVNF_CPU ) ,Min( Max( RRS,BR ) ,Max( ( DDR - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ),FirstVNF_Mem ) ) ) + Max( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - MDR ) ),RRS ) )", "choosing": "( Min( MUR ,DS ) / Min( MUC ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( CRS ,( ( RRS - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_RAM / CRS ) ,FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem - AMS ),DDR ),FirstVNF_RAM ) ) )", "choosing": "( ( ( MUM + RCSe ) * ( RMSe - CS ) ) + ( Max( ( ( DS - MUR ) / Min( ( MUR - CS ) ,MUM ) ),( MUC - ( Min( ( ( MUM * MLU ) / MUR ) ,MLU ) + MUM ) ) ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * FirstVNF_Mem_Server ) - Max( Max( ( AMS / PN ),Max( ACS,( Const / Const ) ) ),RRS ) )", "choosing": "Max( Min( RMSe ,CS ),( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - Max( DDR,Max( ( Max( ( Const * CRS ),FirstVNF_CPU ) + ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( ARS - Const ) / ( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "Max( Min( ( ( DS - Min( Max( CS,( Min( MUM ,RMSe ) / RRSe ) ) ,MLU ) ) - MUM ) ,RMSe ),( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / Min( FirstVNF_CPU ,( ( RRS * AMS ) / AMS ) ) ) - ( ACS + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,Max( RCSe,DS ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) - ( Max( MRS,FirstVNF_Mem_Server ) - ( MDR + ( FirstVNF_RAM_Server / ( RRS - Const ) ) ) ) ) / ( BR - ( ARS + Const ) ) )", "choosing": "Min( ( ( MUM + ( ( ( CS - RRSe ) - MUM ) * MLU ) ) / MUC ) ,Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU,CRS ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( ( MUC + ( RCSe + ( ( RCSe * RMSe ) + RCSe ) ) ) * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,Max( FirstVNF_CPU,CRS ) ) * ( PN * Min( Max( DDR,RRS ) ,( Const - DDR ) ) ) )", "choosing": "Max( Min( MUC ,( ( ( MUC + ( ( MUC - RRSe ) + ( ( RCSe * RMSe ) + RCSe ) ) ) / Max( Min( RCSe ,MUR ),CS ) ) + CS ) ),Max( ( ( MLU + CS ) * MUR ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( CS ,RCSe ) / MUC ) ,( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * PN ) / ( RRS - FirstVNF_CPU ) )", "choosing": "Min( ( Min( CS ,RCSe ) / MUC ) ,( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) * ACS ) + ( Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) - Const ) )", "choosing": "Min( ( CS / RMSe ) ,Max( ( MUM * ( ( MUR + ( ( ( RRSe - RRSe ) + MUC ) / ( DS / MUR ) ) ) / RMSe ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( CS / CS ) ,Max( RMSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Max( ( Max( MRS,FirstVNF_RAM ) / FirstVNF_CPU ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - ( MRS / MRS ) ) ) + Const ) - FirstVNF_CPU_Server ) - ( BR + FirstVNF_CPU ) )", "choosing": "Min( ( Min( MUR ,Max( MUR,MUC ) ) - DS ) ,( Min( ( MLU / MLU ) ,CS ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MLU ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( FirstVNF_RAM_Server / CRS ) ) ) ,( FirstVNF_RAM + ( Min( PN ,FirstVNF_CPU ) + ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),MUM ) - RMSe ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( FirstVNF_RAM_Server / CRS ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( FirstVNF_RAM_Server / CRS ) ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( Min( PN ,FirstVNF_CPU ) + ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( DS * MUC ) - Min( ( MUR / MUC ) ,CS ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( ( CS + MUM ) - MUC ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( DS * MUC ) - Min( ( MUR / MUC ) ,CS ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( ( CS + MUM ) - MUC ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( DS * MUC ) - Min( ( MUR / MUC ) ,CS ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( ( CS + MUM ) - MUC ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( ( ( RRSe / MLU ) + ( DS / RMSe ) ) - ( MLU + Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / Max( FirstVNF_RAM_Server,( ( ARS - ACS ) * FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_Mem / Const ) ,( Const - DDR ) ) )", "choosing": "( ( ( MUC - ( ( MUR * RCSe ) + DS ) ) - ( RRSe * MUM ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( Max( RRSe,CS ) + ( RCSe / MUM ) ) / Min( RCSe ,( MLU * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( RMSe ,MUC ) - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,( ( AMS / FirstVNF_CPU_Server ) / Min( ACS ,FirstVNF_CPU ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * ( Max( MUC,RMSe ) + ( RRSe + MUC ) ) ) ,( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / FirstVNF_CPU_Server ) / Min( ACS ,( ( MDR + BR ) - Max( ( Min( ( PN * ( AMS / BR ) ) ,Const ) - MRS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( DS * MLU ),RMSe ) + ( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_CPU_Server ) ,Min( ( CRS - FirstVNF_RAM_Server ) ,Min( ( Min( BR ,AMS ) * ( ( MRS * AMS ) - MDR ) ) ,MDR ) ) )", "choosing": "Min( ( Min( ( RMSe + MLU ) ,MUM ) * RCSe ) ,( RCSe / Max( MLU,( Min( DS ,( CS / CS ) ) * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( Min( Const ,FirstVNF_RAM ) * ACS ) + ( Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) - Const ) )", "choosing": "Min( ( CS / RMSe ) ,Max( ( MUM * ( ( MUR + ( ( ( RRSe - RRSe ) + MUC ) / ( DS / MUR ) ) ) / RMSe ) ),RCSe ) )", "obj1": 0.6680942184154176, "obj2": 0.2646759700439173}, {"determining": "Min( Min( ( Min( AMS ,FirstVNF_CPU_Server ) / Min( Max( ARS,MRS ) ,Const ) ) ,Max( BR,FirstVNF_Mem ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( ( MUC / ( ( RCSe - ( MUR * ( DS / MUC ) ) ) - RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ACS,FirstVNF_RAM ) / ( BR - ACS ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( ( Max( AMS,FirstVNF_RAM ) / MRS ) * ARS ) ) )", "choosing": "( ( ( MUR + MUR ) - Max( MUM,( MUM * MLU ) ) ) + Min( RRSe ,Max( RCSe,Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) * ACS ) + ( Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) - Const ) )", "choosing": "Min( ( CS / RMSe ) ,Max( ( MUM * ( ( MUR + ( ( ( RRSe - RRSe ) + MUC ) / ( DS / MUR ) ) ) / RMSe ) ),RCSe ) )", "obj1": 0.6680942184154176, "obj2": 0.2646759700439173}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7987152034261242, "obj2": 0.100629924167468}, {"determining": "( ( ( CRS / FirstVNF_CPU ) - DDR ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,( MUM / ( RCSe + MUC ) ) ) ,( RCSe / MUM ) )", "obj1": 0.867237687366167, "obj2": 0.0658143028845096}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) )", "choosing": "( ( Max( ( RMSe / MUR ),MUC ) + ( MUM / MUR ) ) * Min( ( MUC - MLU ) ,MUM ) )", "obj1": 0.7516059957173448, "obj2": 0.12527271140761326}, {"determining": "( ( Max( ( FirstVNF_CPU_Server / Const ),( PN + FirstVNF_Mem ) ) + Min( ( CRS / FirstVNF_Mem ) ,Max( FirstVNF_CPU,ACS ) ) ) * Min( Min( BR ,( ACS - AMS ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe / ( MUR + RCSe ) ) * Max( DS,Max( Max( RRSe,MUM ),RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.2102737720752929}, {"determining": "( ( ( ( AMS - DDR ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) + BR ) - Min( MRS ,RRS ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * CS ) ) ) + MUM ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04560658611472505}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MLU ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.9400428265524625, "obj2": 0.02953365634136946}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( MUC ,RRSe ) - ( MUR - DS ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.017766055223910938}, {"determining": "( ( ( FirstVNF_Mem / ( Min( ( ( RRS * FirstVNF_RAM ) / ( BR * Min( CRS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) / Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),CRS ) )", "choosing": "( Max( Max( MUR,MUM ),( Max( DS,MUM ) * MUM ) ) * ( RCSe / ( CS + ( MUC - ( Min( ( MLU / RCSe ) ,RCSe ) - ( DS * Max( MUC,MUM ) ) ) ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.2422670775565713}, {"determining": "( Max( CRS,DDR ) - Max( CRS,DDR ) )", "choosing": "( Min( CS ,MUR ) + Max( ( MUM + MUR ),( ( Min( Max( Min( DS ,RRSe ),( DS / CS ) ) ,Max( MLU,( DS + RCSe ) ) ) / ( ( ( Min( RRSe ,RMSe ) / ( RMSe + MUM ) ) - MLU ) * MUR ) ) * RRSe ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12527271140761326}, {"determining": "Min( ( FirstVNF_Mem_Server * Max( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / FirstVNF_Mem ),( ( Const + FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( ( ARS - ACS ) * FirstVNF_CPU_Server ) ) ) ) ) ,( ( AMS * FirstVNF_Mem ) - ( CRS + Const ) ) )", "choosing": "( ( RMSe + RMSe ) + ( MUC / CS ) )", "obj1": 0.728051391862955, "obj2": 0.2280575372843936}, {"determining": "Min( ( ( MRS * Max( Max( CRS,Max( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MRS ) ),CRS ) ),FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + Const ) ) )", "choosing": "( Min( MLU ,MUR ) + ( MLU / ( MUM * ( Min( MUR ,RMSe ) - MLU ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.23146669177398502}, {"determining": "( FirstVNF_Mem_Server * Min( Min( Min( CRS ,ARS ) ,( ACS - AMS ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - RMSe ) ,MUM ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( MUC - ( CS + MUM ) ) ) ) ) + MUM ) ) )", "obj1": 0.7387580299785867, "obj2": 0.21471607872919024}, {"determining": "( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( DS ,( ( ( ( MUC - ( RRSe * RMSe ) ) + ( RRSe / Min( DS ,MUM ) ) ) + ( Max( RMSe,RMSe ) / MUR ) ) / RRSe ) ) * ( ( ( RMSe + ( ( ( RMSe + MUR ) * RCSe ) * MLU ) ) - DS ) * MUR ) ) ,( MUM - Max( RRSe,MUR ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "( ( ( ( AMS - ( ( MRS + Min( AMS ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ) * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "Max( Min( Max( Max( ( CS + ( MLU * Min( Max( MUR,MUC ) ,RRSe ) ) ),RRSe ),CS ) ,( RRSe - MUR ) ),Max( RMSe,RMSe ) )", "obj1": 0.6937901498929336, "obj2": 0.2546451987458516}, {"determining": "( FirstVNF_Mem_Server * Min( Min( Min( CRS ,ARS ) ,( ACS - AMS ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server * ( Const + BR ) ) ) ) )", "choosing": "( ( ( MUR - RMSe ) / ( MUR + RCSe ) ) * Max( DS,Max( Max( Max( ( MUR / RCSe ),CS ),MUM ),CS ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2603263360390013}, {"determining": "( ( Max( ( FirstVNF_CPU_Server / Const ),( PN + FirstVNF_Mem ) ) + Min( ( CRS / FirstVNF_Mem ) ,Max( FirstVNF_CPU,ACS ) ) ) * Min( Min( Min( CRS ,ARS ) ,( ACS - AMS ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe / ( MUR + RCSe ) ) * Max( DS,Max( Max( RRSe,MUM ),CS ) ) )", "obj1": 0.7387580299785867, "obj2": 0.21471607872919024}, {"determining": "( ( Min( ( ARS / CRS ) ,PN ) + FirstVNF_CPU_Server ) * ( RRS - RRS ) )", "choosing": "Min( ( ( ( Max( ( MLU - CS ),Max( MUC,( MUM - CS ) ) ) - ( MUC - ( MUR + MUM ) ) ) * RMSe ) - MUM ) ,( Max( ( MUM - ( MUM - RCSe ) ),MUC ) + RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( ( AMS - DDR ) - Min( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( MUC ,RRSe ) - MUC ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "Min( ( Max( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / FirstVNF_Mem ),ARS ) * FirstVNF_Mem_Server ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + Const ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( MUM / CS ) ) - Min( ( DS / RRSe ) ,( RRSe + RCSe ) ) ) / ( ( ( MUC * DS ) * ( RCSe - MUM ) ) + Min( ( DS / DS ) ,( MLU - RCSe ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.23146669177398502}, {"determining": "( Min( ( ACS - ( PN / Max( ( CRS - FirstVNF_Mem ),( ( FirstVNF_RAM_Server - Const ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) ) ,FirstVNF_RAM ) * ( RRS - RRS ) )", "choosing": "( Min( Min( RCSe ,( ( MUR / DS ) / ( ( ( MUC - MLU ) * CS ) - ( RMSe - ( Max( MLU,MUC ) * Max( RCSe,MUC ) ) ) ) ) ) ,Min( RMSe ,Max( MUC,MUC ) ) ) / ( MLU * RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( ( ( BR / ( BR / FirstVNF_RAM_Server ) ) * Max( BR,FirstVNF_Mem_Server ) ) * Min( ( DDR + PN ) ,MRS ) )", "choosing": "Max( ( ( DS * MUM ) / Max( RRSe,MUC ) ),Max( ( RRSe + DS ),Max( ( CS - MUM ),( MUC - ( MUC / CS ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.2618185292445951}, {"determining": "( ( BR + Max( FirstVNF_CPU,( Max( ( ( Const / FirstVNF_Mem ) * MRS ),FirstVNF_CPU ) - ARS ) ) ) * RRS )", "choosing": "Max( Min( MUM ,Max( Min( DS ,DS ),( RMSe + MUR ) ) ),Max( ( ( RCSe + RMSe ) - Min( MUM ,RMSe ) ),Max( ( MUC - MUC ),( ( Max( ( Min( MUR ,MUR ) - RRSe ),Max( MUR,MUM ) ) / RRSe ) - MUR ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.2618185292445951}, {"determining": "( ( Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) - ( Max( MRS,FirstVNF_Mem_Server ) - ( MDR + ( FirstVNF_RAM_Server / ( RRS - Const ) ) ) ) ) / ( BR - ( ARS + Const ) ) )", "choosing": "( ( MUC / ( MUM + ( ( ( CS - RRSe ) - MUM ) * MLU ) ) ) / Min( CS ,RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.2566515993873171}, {"determining": "( ( Min( Min( BR ,Min( RRS ,Const ) ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_RAM + MDR ) - ( FirstVNF_CPU_Server / AMS ) ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0010364794448971786}, {"determining": "( ( Min( Max( ( CRS + RRS ),AMS ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Min( CRS ,( Max( BR,FirstVNF_CPU_Server ) * AMS ) ) )", "choosing": "( ( ( ( ( Max( DS,MUC ) / ( MUM * CS ) ) - ( ( MLU - CS ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) ) * MUC ) / DS ) + Max( MUR,RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( Min( Min( BR ,Min( RRS ,Const ) ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_RAM + MDR ) - ( FirstVNF_CPU_Server / AMS ) ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0010364794448971786}, {"determining": "( ( Min( Min( BR ,Min( RRS ,Const ) ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_RAM + MDR ) - ( FirstVNF_CPU_Server / AMS ) ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ACS + BR ) + ( RRS - ACS ) )", "choosing": "( ( Min( MLU ,MLU ) / CS ) / Min( CS ,MUC ) )", "obj1": 0.6916488222698073, "obj2": 0.2558746715076788}, {"determining": "( ( DDR - ( AMS - FirstVNF_Mem ) ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "Min( Min( ( Min( ( MUM - MUR ) ,RRSe ) * ( DS + CS ) ) ,MUM ) ,( Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) * ( Min( RRSe ,DS ) - ( ( ( ( Min( RCSe ,MUM ) - RRSe ) / MLU ) * MUR ) - RCSe ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.2559101405859584}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Min( FirstVNF_Mem ,( Max( BR,FirstVNF_CPU_Server ) * MRS ) ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( CS / RMSe ) / DS ) ) ) * MUC ) / DS ) + Max( MUR,RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( Min( BR ,( FirstVNF_RAM_Server - ( ARS / AMS ) ) ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Min( FirstVNF_Mem ,( Max( BR,FirstVNF_CPU_Server ) * MRS ) ) )", "choosing": "( ( ( ( MUM - ( ( RCSe - CS ) - ( RCSe / DS ) ) ) * MUC ) / MLU ) + Max( MUR,RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Max( ( FirstVNF_CPU_Server / Const ),( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) - DDR ) + FirstVNF_Mem ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,Max( RRS,ACS ) ) ) * Min( Min( ( ACS - AMS ) ,( CRS * ARS ) ) ,( DDR - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( MLU * ( Min( ( DS + DS ) ,DS ) / ( RRSe + MUM ) ) ) ,MLU ) * ( DS - Max( Max( ( DS / MLU ),MUM ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,RRS ) * CRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( ( RRSe - Min( MUR ,Max( RRSe,RCSe ) ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( DS ,( ( ( ( MUC - ( RRSe * RMSe ) ) + ( RRSe / Min( DS ,MUM ) ) ) + ( Max( RMSe,RMSe ) / MUR ) ) / RRSe ) ) * ( ( ( RMSe + ( ( ( RMSe + MUR ) * RCSe ) * MLU ) ) - DS ) * MUR ) ) ,( MUM - Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( MRS,Const ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( ( RCSe + MUC ) / ( CS + ( MUC + RRSe ) ) ) / ( ( MUR + CS ) + MUR ) ) ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_CPU_Server ) ,Min( ( CRS - FirstVNF_RAM_Server ) ,Min( ( Min( BR ,AMS ) * ( ( MRS * AMS ) - MDR ) ) ,MDR ) ) )", "choosing": "Min( ( Min( ( RMSe + MLU ) ,MUM ) * RCSe ) ,( RCSe / Max( MLU,( Min( DS ,( CS / CS ) ) * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),( BR + DDR ) ) )", "choosing": "( Max( MUR,CS ) + ( ( RMSe - ( MUR + MUR ) ) / ( ( Min( MUM ,( Max( ( MLU + MUR ),RCSe ) * MLU ) ) + MUC ) / ( RRSe + ( MUM * ( RMSe / ( RMSe - RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / ( BR * Const ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS - MUR ),Min( CS ,RMSe ) ) / ( Max( Min( RRSe ,( RRSe / DS ) ),MUM ) / ( RMSe + ( ( Min( RRSe ,Max( MLU,( MUC + MUC ) ) ) / MUR ) * ( ( ( DS * MUR ) + ( Min( RMSe ,RMSe ) / RCSe ) ) / MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + FirstVNF_RAM_Server ) + ( ( RRS * ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( AMS,FirstVNF_RAM ) / ( ACS - ( FirstVNF_RAM_Server * Min( ( CRS + Const ) ,( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) ) ) ) ,( ( ( ( AMS + ( FirstVNF_RAM_Server - ( RRS / FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM_Server ) - RRS ) + Const ) )", "choosing": "( ( MUC - RCSe ) + ( ( Max( MUM,Min( RCSe ,( CS + MLU ) ) ) - MLU ) + Min( ( ( ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR * FirstVNF_Mem ) * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( ( DS * Max( RRSe,CS ) ) - ( MUC - RRSe ) ) * Max( Max( DS,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ARS * Min( ARS ,Max( ( AMS - RRS ),FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU + CRS ) ) / ( ( MRS * MRS ) * ( CRS + CRS ) ) ) - ( ACS + ( FirstVNF_CPU / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( RMSe - MUR ) ) ,( Max( MLU,Max( RMSe,( ( MUR / ( DS + MUM ) ) - RCSe ) ) ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( Min( FirstVNF_RAM ,DDR ) - Max( ( FirstVNF_CPU / ( Min( AMS ,MRS ) * MDR ) ),( AMS / ( FirstVNF_Mem - AMS ) ) ) ) - Max( MRS,RRS ) ) ) ,( ( ( Const * PN ) - ( FirstVNF_RAM_Server / PN ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( ( CS * MUC ) - MUC ) / ( Max( DS,RRSe ) * Max( Max( RRSe,( RRSe * RMSe ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + Min( CRS ,FirstVNF_CPU ) ) ,Min( ( RRS + Const ) ,( AMS * Const ) ) ) - ( ( ( ( MDR / MDR ) * FirstVNF_CPU ) * ( CRS - ( Min( Const ,FirstVNF_CPU ) * ( MDR / ( RRS + FirstVNF_Mem ) ) ) ) ) - RRS ) )", "choosing": "Max( ( RMSe - MUM ),( ( ( Min( RMSe ,( Max( RRSe,( MUR - RMSe ) ) / CS ) ) - RMSe ) - MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( DS * MUC ) - Min( ( MUR / MUC ) ,CS ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( ( CS + MUM ) - MUC ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( FirstVNF_RAM_Server / CRS ) ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( Min( PN ,FirstVNF_CPU ) + ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,( PN / MRS ) ) ) ,( ( FirstVNF_RAM_Server - BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - ( ( ( RCSe / RMSe ) + MLU ) + Min( RCSe ,MUM ) ) ) ) ,( ( DS / DS ) - MUR ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * CRS ) - ( FirstVNF_Mem + PN ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) - ( PN + FirstVNF_Mem ) ) * CRS ) - Min( FirstVNF_RAM ,( Min( Max( FirstVNF_Mem_Server,( ( ( MDR / FirstVNF_RAM ) + ARS ) / MRS ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUC ,MUC ) * Max( MUR,( Min( ( ( CS - RCSe ) - Min( MLU ,( MUC - MUR ) ) ) ,MUC ) / Max( ( MUM / RRSe ),RRSe ) ) ) ) + ( ( DS + MUC ) / Max( RCSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( BR - ( MRS * ( BR * DDR ) ) ) * ( Const * ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ),CRS ) - ( ( ARS * RRS ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUM * ( MUM * Min( ( ( CS * Max( DS,MUM ) ) / MUM ) ,MUR ) ) ) + ( MUM * MUR ) ),Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + FirstVNF_RAM_Server ) + ( ( RRS * ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - ( ( ARS / FirstVNF_RAM ) + ( FirstVNF_RAM + RRS ) ) )", "choosing": "( Min( ( ( RRSe - RRSe ) + ( MUR - Min( ( ( RCSe / MLU ) * Min( ( DS * RMSe ) ,RCSe ) ) ,( MUM * MUC ) ) ) ) ,( ( ( RCSe - DS ) / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + CRS ),( ARS - FirstVNF_CPU ) ) / ( FirstVNF_CPU / ( CRS + DDR ) ) ) - ( ACS + ( ( BR * FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( Min( MLU ,Max( RMSe,Max( ( RMSe / DS ),MUC ) ) ) + Min( Min( MUM ,RRSe ) ,RCSe ) ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem ) / Max( RRS,DDR ) ) ,Min( ( ( FirstVNF_RAM + DDR ) - Min( BR ,DDR ) ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,Min( ( ( CS + CS ) / RRSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU * ( ( PN + RRS ) / FirstVNF_Mem_Server ) ),Min( PN ,ACS ) ) - ( ( MRS / AMS ) / ( FirstVNF_CPU_Server + RRS ) ) )", "choosing": "Max( ( RMSe - Max( ( MLU - CS ),( MLU + MUC ) ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( ACS / RRS ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + RRS ) - ( MRS / AMS ) ) - ( FirstVNF_RAM * CRS ) )", "choosing": "Min( ( RRSe / ( Max( Min( MUC ,CS ),MUM ) + Min( MUM ,MLU ) ) ) ,( RCSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * Max( Max( CRS,Max( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MRS ) ),CRS ) ),FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + Const ) ) )", "choosing": "( Min( MLU ,MUR ) + ( MLU / ( MUM * ( Min( MUR ,RMSe ) - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS - ARS ) / MRS ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( MRS + DDR ) + DDR ) ) )", "choosing": "( ( Max( ( RMSe / MUR ),MUC ) + ( MUM / MUR ) ) * Min( ( MUC - MLU ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / ACS ) ,( FirstVNF_Mem * Const ) ) - Max( ( FirstVNF_Mem / ( PN - DDR ) ),( BR / FirstVNF_Mem_Server ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * ( Const - ( RRS - ( BR - MRS ) ) ) ) ),FirstVNF_CPU_Server ),MDR ) )", "choosing": "Max( ( ( MLU + RMSe ) - RMSe ),( CS - ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) ,( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / MDR ) - Min( FirstVNF_Mem ,( ( BR + FirstVNF_RAM_Server ) * ( ( BR * FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( ( CS * MUR ) / MUM ) / RRSe ) + RCSe ) ) + Max( MUC,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( AMS ,( ( FirstVNF_CPU * DDR ) + Max( ARS,CRS ) ) ) ) - Max( Const,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( ( ( CS - DS ) + Max( RRSe,RCSe ) ) - RMSe ) ) * ( MLU / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + FirstVNF_Mem ) - ( MDR + ( ( FirstVNF_RAM + ( FirstVNF_CPU * ARS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Max( ( CS + MUC ),RMSe ) / Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM + ( MDR / AMS ) ) / ( ( DDR * FirstVNF_Mem ) - ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( ( ( ( Min( AMS ,FirstVNF_Mem ) + AMS ) * ( Max( ACS,Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) / RRS ) ) + FirstVNF_CPU_Server ) + CRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUC * DS ) ) ,( ( MLU + MUM ) - Min( MUM ,DS ) ) ) * ( ( Min( RRSe ,( Min( ( MUM / Max( RCSe,MUC ) ) ,RRSe ) * ( CS + ( RCSe + ( RCSe - RCSe ) ) ) ) ) - ( CS - RCSe ) ) / Max( Max( RCSe,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM + ( MDR / AMS ) ) / ( ( DDR * FirstVNF_Mem ) - ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( ( ( ( Min( AMS ,FirstVNF_Mem ) + AMS ) * ( Max( ACS,Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) / RRS ) ) + FirstVNF_CPU_Server ) + CRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUC * DS ) ) ,( ( MLU + MUM ) - Min( MUM ,DS ) ) ) * ( ( Min( RRSe ,( Min( ( MUM / Max( RCSe,MUC ) ) ,RRSe ) * ( CS + ( RCSe + ( RCSe - RCSe ) ) ) ) ) - ( CS - RCSe ) ) / Max( Max( RCSe,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + ( ( ARS - AMS ) / MRS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( RCSe - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,FirstVNF_CPU ) ,Min( Max( RRS,BR ) ,Max( ( DDR - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ),FirstVNF_Mem ) ) ) + Max( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - MDR ) ),RRS ) )", "choosing": "( Min( MUR ,DS ) / Min( MUC ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( CRS ,( ( RRS - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_RAM / CRS ) ,FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem - AMS ),DDR ),FirstVNF_RAM ) ) )", "choosing": "( ( ( MUM + RCSe ) * ( RMSe - CS ) ) + ( Max( ( ( DS - MUR ) / Min( ( MUR - CS ) ,MUM ) ),( MUC - ( Min( ( ( MUM * MLU ) / MUR ) ,MLU ) + MUM ) ) ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * FirstVNF_Mem_Server ) - Max( Max( ( AMS / PN ),Max( ACS,( Const / Const ) ) ),RRS ) )", "choosing": "Max( Min( RMSe ,CS ),( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - Max( DDR,Max( ( Max( ( Const * CRS ),FirstVNF_CPU ) + ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( ARS - Const ) / ( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "Max( Min( ( ( DS - Min( Max( CS,( Min( MUM ,RMSe ) / RRSe ) ) ,MLU ) ) - MUM ) ,RMSe ),( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / Min( FirstVNF_CPU ,( ( RRS * AMS ) / AMS ) ) ) - ( ACS + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,Max( RCSe,DS ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) - ( Max( MRS,FirstVNF_Mem_Server ) - ( MDR + ( FirstVNF_RAM_Server / ( RRS - Const ) ) ) ) ) / ( BR - ( ARS + Const ) ) )", "choosing": "Min( ( ( MUM + ( ( ( CS - RRSe ) - MUM ) * MLU ) ) / MUC ) ,Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU,CRS ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( ( MUC + ( RCSe + ( ( RCSe * RMSe ) + RCSe ) ) ) * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,Max( FirstVNF_CPU,CRS ) ) * ( PN * Min( Max( DDR,RRS ) ,( Const - DDR ) ) ) )", "choosing": "Max( Min( MUC ,( ( ( MUC + ( ( MUC - RRSe ) + ( ( RCSe * RMSe ) + RCSe ) ) ) / Max( Min( RCSe ,MUR ),CS ) ) + CS ) ),Max( ( ( MLU + CS ) * MUR ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( CS ,RCSe ) / MUC ) ,( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * PN ) / ( RRS - FirstVNF_CPU ) )", "choosing": "Min( ( Min( CS ,RCSe ) / MUC ) ,( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) * ACS ) + ( Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) - Const ) )", "choosing": "Min( ( CS / RMSe ) ,Max( ( MUM * ( ( MUR + ( ( ( RRSe - RRSe ) + MUC ) / ( DS / MUR ) ) ) / RMSe ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( CS / CS ) ,Max( RMSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Max( ( Max( MRS,FirstVNF_RAM ) / FirstVNF_CPU ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - ( MRS / MRS ) ) ) + Const ) - FirstVNF_CPU_Server ) - ( BR + FirstVNF_CPU ) )", "choosing": "Min( ( Min( MUR ,Max( MUR,MUC ) ) - DS ) ,( Min( ( MLU / MLU ) ,CS ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MLU ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( FirstVNF_RAM_Server / CRS ) ) ) ,( FirstVNF_RAM + ( Min( PN ,FirstVNF_CPU ) + ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),MUM ) - RMSe ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( FirstVNF_RAM_Server / CRS ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( FirstVNF_RAM_Server / CRS ) ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( Min( PN ,FirstVNF_CPU ) + ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( DS * MUC ) - Min( ( MUR / MUC ) ,CS ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( ( CS + MUM ) - MUC ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( DS * MUC ) - Min( ( MUR / MUC ) ,CS ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( ( CS + MUM ) - MUC ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( Min( Const ,FirstVNF_RAM ) * ACS ) + ( Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) - Const ) )", "choosing": "Min( ( CS / RMSe ) ,Max( ( MUM * ( ( MUR + ( ( ( RRSe - RRSe ) + MUC ) / ( DS / MUR ) ) ) / RMSe ) ),RCSe ) )", "obj1": 0.6680942184154176, "obj2": 0.2646759700439173}, {"determining": "Min( Min( ( Min( RRS ,Const ) + ( Const - FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_RAM_Server / CRS ) ,Min( FirstVNF_RAM ,AMS ) ) ) ,( Max( MRS,FirstVNF_CPU ) + ( Min( PN ,FirstVNF_CPU ) + ( ( FirstVNF_CPU_Server * MRS ) - FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( Max( CS,Min( ( RMSe * RCSe ) ,MUR ) ) + ( MUM / MUM ) ),RCSe ) - MLU ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( AMS ,FirstVNF_CPU_Server ) / Min( Max( ARS,MRS ) ,Const ) ) ,Max( BR,FirstVNF_Mem ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( ( MUC / ( ( RCSe - ( MUR * ( DS / MUC ) ) ) - RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) * ACS ) + ( Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) - Const ) )", "choosing": "Min( ( CS / RMSe ) ,Max( ( MUM * ( ( MUR + ( ( ( RRSe - RRSe ) + MUC ) / ( DS / MUR ) ) ) / RMSe ) ),RCSe ) )", "obj1": 0.6680942184154176, "obj2": 0.2646759700439173}, {"determining": "( ( ( FirstVNF_Mem - ( MDR * ( FirstVNF_CPU + FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server - BR ) * ( FirstVNF_CPU_Server / CRS ) ) )", "choosing": "( DS * ( RCSe / ( CS + ( MUC - Max( MLU,( CS + RRSe ) ) ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.1741701381712744}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( MUM / RCSe ) )", "obj1": 0.867237687366167, "obj2": 0.06581430288450957}, {"determining": "( Max( CRS,DDR ) - Max( CRS,DDR ) )", "choosing": "( Min( CS ,MUR ) + Max( ( MUM + MUR ),( ( Min( Max( Min( DS ,RRSe ),( DS / CS ) ) ,Max( MLU,( DS + RCSe ) ) ) / ( ( ( Min( RRSe ,RMSe ) / ( RMSe + MUM ) ) - MLU ) * MUR ) ) * RRSe ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12527271140761326}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,Min( ( RRSe / ( MUR - MUR ) ) ,( Min( MLU ,Max( RMSe,Max( Min( MLU ,( MUM * MUR ) ),MUC ) ) ) + Min( Min( MUM ,MUR ) ,RCSe ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.08024559190285734}, {"determining": "( ( ( FirstVNF_Mem / ( Min( ( ( RRS * FirstVNF_RAM ) / ( BR * Min( CRS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) / Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),CRS ) )", "choosing": "( Max( Max( MUR,MUM ),( Max( DS,MUM ) * MUM ) ) * ( RCSe / ( CS + ( MUC - ( Min( ( MLU / RCSe ) ,RCSe ) - ( DS * Max( MUC,MUM ) ) ) ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.2422670775565713}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7987152034261242, "obj2": 0.100629924167468}, {"determining": "( ( ( FirstVNF_Mem / ( Min( ( ( RRS * FirstVNF_RAM ) / ( BR * Min( CRS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) / Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),CRS ) )", "choosing": "( Max( Max( MUR,MUM ),( Max( DS,MUM ) * MUM ) ) * ( RCSe / ( CS + ( MUC - ( Min( ( MLU / RCSe ) ,RCSe ) - ( DS * Max( MUC,MUM ) ) ) ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.19351954271828534}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8029978586723768, "obj2": 0.0990681794851054}, {"determining": "( ( ( ( AMS - DDR ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) + BR ) - Min( MRS ,RRS ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * CS ) ) ) + MUM ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04560658611472505}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + BR ) - Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,( DS * ( MLU + MUR ) ) ) + ( MUM - MLU ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04560658611472505}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) )", "choosing": "( ( Max( ( RMSe / MUR ),MUC ) + ( MUM / MUR ) ) * Min( ( MUC - MLU ) ,MUM ) )", "obj1": 0.7516059957173448, "obj2": 0.12527271140761326}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02611225818446143}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( MUC ,RRSe ) - ( MUR - DS ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.017766055223910938}, {"determining": "( ( ( FirstVNF_Mem / ( Min( ( ( RRS * FirstVNF_RAM ) / ( BR * Min( CRS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) / Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),CRS ) )", "choosing": "( Max( Max( MUR,MUM ),( Max( DS,MUM ) * MUM ) ) * ( RCSe / ( CS + ( MUC - ( Min( ( MLU / RCSe ) ,RCSe ) - ( DS * Max( MUC,MUM ) ) ) ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.19351954271828534}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MLU ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.9400428265524625, "obj2": 0.02953365634136946}, {"determining": "( Min( ( ( MRS + CRS ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) ,FirstVNF_Mem ) - ( AMS - DDR ) )", "choosing": "Min( ( ( ( DS - ( MUC - ( CS + MUM ) ) ) * RMSe ) - MUM ) ,( ( RMSe - CS ) + ( Min( MUM ,( ( MUM - MLU ) * Min( Min( Max( CS,MUR ) ,RMSe ) ,( CS - MUR ) ) ) ) - ( ( MUR / CS ) - ( ( MLU - MUR ) * Min( Min( MLU ,MLU ) ,( DS - DS ) ) ) ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.017766055223910938}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "( ( ( MUM / RMSe ) / Min( MUC ,RCSe ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 0.9400428265524625, "obj2": 0.02953365634136946}, {"determining": "( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( DS ,( ( ( ( MUC - ( RRSe * RMSe ) ) + ( RRSe / Min( DS ,MUM ) ) ) + ( Max( RMSe,RMSe ) / MUR ) ) / RRSe ) ) * ( ( ( RMSe + ( ( ( RMSe + MUR ) * RCSe ) * MLU ) ) - DS ) * MUR ) ) ,( MUM - Max( RRSe,MUR ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "( ( ( ( AMS - ( ( MRS + Min( AMS ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ) * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "Max( Min( Max( Max( ( CS + ( MLU * Min( Max( MUR,MUC ) ,RRSe ) ) ),RRSe ),CS ) ,( RRSe - MUR ) ),Max( RMSe,RMSe ) )", "obj1": 0.6937901498929336, "obj2": 0.2546451987458516}, {"determining": "( ( Max( ( BR + FirstVNF_Mem ),( FirstVNF_CPU_Server / Const ) ) + Min( ( CRS / FirstVNF_Mem ) ,Max( ( MDR / Max( ( BR * MDR ),FirstVNF_RAM ) ),ACS ) ) ) * Min( Min( Min( CRS ,ARS ) ,( ACS - AMS ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( AMS - DDR ) ) ) )", "choosing": "( ( RCSe / Min( MUR ,CS ) ) * Max( DS,Max( CS,Max( RMSe,( MUR - DS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.26030942196551576}, {"determining": "( ( ( FirstVNF_Mem - ( ( ( FirstVNF_RAM + MDR ) - ( FirstVNF_CPU_Server / AMS ) ) * Min( FirstVNF_Mem ,Const ) ) ) * FirstVNF_CPU_Server ) / Max( CRS,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUR,MUM ),( Max( ( MUM + MLU ),MUM ) * MUM ) ) * ( RCSe / RCSe ) )", "obj1": 0.702355460385439, "obj2": 0.24635693407795473}, {"determining": "( ( AMS - DDR ) - Min( ( AMS - ( ( ( ( ( MDR * CRS ) + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) + PN ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / ( Min( MUC ,RRSe ) - ( DS / RMSe ) ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "( ( BR + Max( FirstVNF_CPU,( Max( ( ( Const / FirstVNF_Mem ) * MRS ),FirstVNF_CPU ) - ARS ) ) ) * RRS )", "choosing": "Max( Min( MUM ,Max( Min( DS ,DS ),( RMSe + MUR ) ) ),Max( ( ( RCSe + RMSe ) - Min( MUM ,RMSe ) ),Max( ( MUC - MUC ),( ( Max( ( Min( MUR ,MUR ) - RRSe ),Max( MUR,MUM ) ) / RRSe ) - MUR ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.2618185292445951}, {"determining": "( ( ( ( AMS - DDR ) - ( ( CRS - Min( FirstVNF_Mem_Server ,PN ) ) + FirstVNF_Mem ) ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( MUC - ( CS + DS ) ) ) ) ) + MUM ) ) )", "obj1": 0.9443254817987152, "obj2": 0.027870155622976504}, {"determining": "( ( ( BR / ( BR / FirstVNF_RAM_Server ) ) * Max( BR,FirstVNF_Mem_Server ) ) * Min( ( DDR + PN ) ,MRS ) )", "choosing": "Max( ( ( DS * MUM ) / Max( RRSe,MUC ) ),Max( ( RRSe + DS ),Max( ( CS - MUM ),( MUC - ( MUC / CS ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.2618185292445951}, {"determining": "( ( ( ( Min( ( BR * ( Const * BR ) ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - Max( FirstVNF_RAM,MDR ) ) ) - Min( FirstVNF_Mem ,( Max( BR,FirstVNF_CPU_Server ) * AMS ) ) ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( ( Max( RCSe,( ( RRSe - DS ) - MUM ) ) / MLU ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) - CS ) ,RRSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0020729588897943573}, {"determining": "( Min( ( ACS - ( AMS + DDR ) ) ,FirstVNF_RAM ) * ( RRS - RRS ) )", "choosing": "Min( ( ( ( DS - ( MUC - ( CS + ( ( MLU - DS ) / Min( CS ,MUC ) ) ) ) ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( ( Min( ( ARS / CRS ) ,PN ) + FirstVNF_CPU_Server ) * ( RRS - RRS ) )", "choosing": "Min( ( ( ( Max( ( MLU - CS ),Max( MUC,( MUM - CS ) ) ) - ( MUC - ( MUR + MUM ) ) ) * RMSe ) - MUM ) ,( Max( ( MUM - ( MUM - RCSe ) ),MUC ) + RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( ( Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem_Server,MRS ) - ( MDR + ( FirstVNF_RAM_Server / ( RRS - Const ) ) ) ) ) / ( BR - ( ARS + ( MRS / ACS ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( MUM - CS ) ) - Min( ( DS / RRSe ) ,( RRSe + RCSe ) ) ) / ( ( ( RCSe - MUM ) * ( RMSe * RMSe ) ) + Min( ( DS / DS ) ,( MLU - RCSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.2566515993873171}, {"determining": "( ( ACS + BR ) + ( RRS - ACS ) )", "choosing": "( ( Min( MLU ,MLU ) / CS ) / Min( CS ,MUC ) )", "obj1": 0.6916488222698073, "obj2": 0.2558746715076788}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM + RRS ) - ( FirstVNF_CPU_Server / AMS ) ) ) - Min( FirstVNF_Mem ,( Max( BR,FirstVNF_CPU_Server ) * AMS ) ) )", "choosing": "( ( ( ( DS * RRSe ) / MUC ) / DS ) + Max( MUR,RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( DDR - ( AMS - FirstVNF_Mem ) ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "Min( Min( ( Min( ( MUM - MUR ) ,RRSe ) * ( DS + CS ) ) ,MUM ) ,( Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) * ( Min( RRSe ,DS ) - ( ( ( ( Min( RCSe ,MUM ) - RRSe ) / MLU ) * MUR ) - RCSe ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.2559101405859584}, {"determining": "( ( Min( Max( ( CRS + RRS ),AMS ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Min( CRS ,( Max( BR,FirstVNF_CPU_Server ) * AMS ) ) )", "choosing": "( ( ( ( ( Max( DS,MUC ) / ( MUM * CS ) ) - ( ( MLU - CS ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) ) * MUC ) / DS ) + Max( MUR,RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) ) * ( Min( RCSe ,RMSe ) + Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) ) ) ) / DS ) + Max( MUR,RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Min( FirstVNF_Mem ,( Max( BR,FirstVNF_CPU_Server ) * MRS ) ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( CS / RMSe ) / DS ) ) ) * MUC ) / DS ) + Max( MUR,RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( Min( BR ,Min( RRS ,Const ) ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_RAM + MDR ) - ( FirstVNF_CPU_Server / AMS ) ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0010364794448971786}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_RAM + MDR ) - ( FirstVNF_CPU_Server / AMS ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,PN ),Min( CRS ,CRS ) ),Max( ( RRS - ( Min( FirstVNF_Mem ,Const ) - ( FirstVNF_Mem_Server / Const ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUM ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / Max( Max( RCSe,RCSe ),( RRSe + RRSe ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0010364794448971786}, {"determining": "( ( Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) - ( Max( MRS,FirstVNF_Mem_Server ) - ( MDR + ( FirstVNF_RAM_Server / ( RRS - Const ) ) ) ) ) / ( BR - ( ARS + Const ) ) )", "choosing": "( ( MUC / ( MUM + ( ( ( CS - RRSe ) - MUM ) * MLU ) ) ) / Min( CS ,RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.2566515993873171}, {"determining": "Min( ( Max( ACS,FirstVNF_RAM ) / ( BR - ACS ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( ( Max( AMS,FirstVNF_RAM ) / MRS ) * ARS ) ) )", "choosing": "( ( ( MUR + MUR ) - Max( MUM,( MUM * MLU ) ) ) + Min( RRSe ,Max( RCSe,Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_CPU_Server / Const ),( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) - DDR ) + FirstVNF_Mem ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,Max( RRS,ACS ) ) ) * Min( Min( ( ACS - AMS ) ,( CRS * ARS ) ) ,( DDR - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( MLU * ( Min( ( DS + DS ) ,DS ) / ( RRSe + MUM ) ) ) ,MLU ) * ( DS - Max( Max( ( DS / MLU ),MUM ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,RRS ) * CRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( ( RRSe - Min( MUR ,Max( RRSe,RCSe ) ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( DS ,( ( ( ( MUC - ( RRSe * RMSe ) ) + ( RRSe / Min( DS ,MUM ) ) ) + ( Max( RMSe,RMSe ) / MUR ) ) / RRSe ) ) * ( ( ( RMSe + ( ( ( RMSe + MUR ) * RCSe ) * MLU ) ) - DS ) * MUR ) ) ,( MUM - Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( MRS,Const ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( ( RCSe + MUC ) / ( CS + ( MUC + RRSe ) ) ) / ( ( MUR + CS ) + MUR ) ) ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_CPU_Server ) ,Min( ( CRS - FirstVNF_RAM_Server ) ,Min( ( Min( BR ,AMS ) * ( ( MRS * AMS ) - MDR ) ) ,MDR ) ) )", "choosing": "Min( ( Min( ( RMSe + MLU ) ,MUM ) * RCSe ) ,( RCSe / Max( MLU,( Min( DS ,( CS / CS ) ) * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),( BR + DDR ) ) )", "choosing": "( Max( MUR,CS ) + ( ( RMSe - ( MUR + MUR ) ) / ( ( Min( MUM ,( Max( ( MLU + MUR ),RCSe ) * MLU ) ) + MUC ) / ( RRSe + ( MUM * ( RMSe / ( RMSe - RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / ( BR * Const ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS - MUR ),Min( CS ,RMSe ) ) / ( Max( Min( RRSe ,( RRSe / DS ) ),MUM ) / ( RMSe + ( ( Min( RRSe ,Max( MLU,( MUC + MUC ) ) ) / MUR ) * ( ( ( DS * MUR ) + ( Min( RMSe ,RMSe ) / RCSe ) ) / MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + FirstVNF_RAM_Server ) + ( ( RRS * ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( AMS,FirstVNF_RAM ) / ( ACS - ( FirstVNF_RAM_Server * Min( ( CRS + Const ) ,( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) ) ) ) ,( ( ( ( AMS + ( FirstVNF_RAM_Server - ( RRS / FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM_Server ) - RRS ) + Const ) )", "choosing": "( ( MUC - RCSe ) + ( ( Max( MUM,Min( RCSe ,( CS + MLU ) ) ) - MLU ) + Min( ( ( ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR * FirstVNF_Mem ) * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( ( DS * Max( RRSe,CS ) ) - ( MUC - RRSe ) ) * Max( Max( DS,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ARS * Min( ARS ,Max( ( AMS - RRS ),FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU + CRS ) ) / ( ( MRS * MRS ) * ( CRS + CRS ) ) ) - ( ACS + ( FirstVNF_CPU / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( RMSe - MUR ) ) ,( Max( MLU,Max( RMSe,( ( MUR / ( DS + MUM ) ) - RCSe ) ) ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( Min( FirstVNF_RAM ,DDR ) - Max( ( FirstVNF_CPU / ( Min( AMS ,MRS ) * MDR ) ),( AMS / ( FirstVNF_Mem - AMS ) ) ) ) - Max( MRS,RRS ) ) ) ,( ( ( Const * PN ) - ( FirstVNF_RAM_Server / PN ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( ( CS * MUC ) - MUC ) / ( Max( DS,RRSe ) * Max( Max( RRSe,( RRSe * RMSe ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + Min( CRS ,FirstVNF_CPU ) ) ,Min( ( RRS + Const ) ,( AMS * Const ) ) ) - ( ( ( ( MDR / MDR ) * FirstVNF_CPU ) * ( CRS - ( Min( Const ,FirstVNF_CPU ) * ( MDR / ( RRS + FirstVNF_Mem ) ) ) ) ) - RRS ) )", "choosing": "Max( ( RMSe - MUM ),( ( ( Min( RMSe ,( Max( RRSe,( MUR - RMSe ) ) / CS ) ) - RMSe ) - MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( DS * MUC ) - Min( ( MUR / MUC ) ,CS ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( ( CS + MUM ) - MUC ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( FirstVNF_RAM_Server / CRS ) ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( Min( PN ,FirstVNF_CPU ) + ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,( PN / MRS ) ) ) ,( ( FirstVNF_RAM_Server - BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - ( ( ( RCSe / RMSe ) + MLU ) + Min( RCSe ,MUM ) ) ) ) ,( ( DS / DS ) - MUR ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * CRS ) - ( FirstVNF_Mem + PN ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) - ( PN + FirstVNF_Mem ) ) * CRS ) - Min( FirstVNF_RAM ,( Min( Max( FirstVNF_Mem_Server,( ( ( MDR / FirstVNF_RAM ) + ARS ) / MRS ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUC ,MUC ) * Max( MUR,( Min( ( ( CS - RCSe ) - Min( MLU ,( MUC - MUR ) ) ) ,MUC ) / Max( ( MUM / RRSe ),RRSe ) ) ) ) + ( ( DS + MUC ) / Max( RCSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( BR - ( MRS * ( BR * DDR ) ) ) * ( Const * ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ),CRS ) - ( ( ARS * RRS ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUM * ( MUM * Min( ( ( CS * Max( DS,MUM ) ) / MUM ) ,MUR ) ) ) + ( MUM * MUR ) ),Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + FirstVNF_RAM_Server ) + ( ( RRS * ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - ( ( ARS / FirstVNF_RAM ) + ( FirstVNF_RAM + RRS ) ) )", "choosing": "( Min( ( ( RRSe - RRSe ) + ( MUR - Min( ( ( RCSe / MLU ) * Min( ( DS * RMSe ) ,RCSe ) ) ,( MUM * MUC ) ) ) ) ,( ( ( RCSe - DS ) / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + CRS ),( ARS - FirstVNF_CPU ) ) / ( FirstVNF_CPU / ( CRS + DDR ) ) ) - ( ACS + ( ( BR * FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( Min( MLU ,Max( RMSe,Max( ( RMSe / DS ),MUC ) ) ) + Min( Min( MUM ,RRSe ) ,RCSe ) ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem ) / Max( RRS,DDR ) ) ,Min( ( ( FirstVNF_RAM + DDR ) - Min( BR ,DDR ) ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,Min( ( ( CS + CS ) / RRSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU * ( ( PN + RRS ) / FirstVNF_Mem_Server ) ),Min( PN ,ACS ) ) - ( ( MRS / AMS ) / ( FirstVNF_CPU_Server + RRS ) ) )", "choosing": "Max( ( RMSe - Max( ( MLU - CS ),( MLU + MUC ) ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( ACS / RRS ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + RRS ) - ( MRS / AMS ) ) - ( FirstVNF_RAM * CRS ) )", "choosing": "Min( ( RRSe / ( Max( Min( MUC ,CS ),MUM ) + Min( MUM ,MLU ) ) ) ,( RCSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * Max( Max( CRS,Max( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MRS ) ),CRS ) ),FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + Const ) ) )", "choosing": "( Min( MLU ,MUR ) + ( MLU / ( MUM * ( Min( MUR ,RMSe ) - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS - ARS ) / MRS ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( MRS + DDR ) + DDR ) ) )", "choosing": "( ( Max( ( RMSe / MUR ),MUC ) + ( MUM / MUR ) ) * Min( ( MUC - MLU ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / ACS ) ,( FirstVNF_Mem * Const ) ) - Max( ( FirstVNF_Mem / ( PN - DDR ) ),( BR / FirstVNF_Mem_Server ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * ( Const - ( RRS - ( BR - MRS ) ) ) ) ),FirstVNF_CPU_Server ),MDR ) )", "choosing": "Max( ( ( MLU + RMSe ) - RMSe ),( CS - ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) ,( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / MDR ) - Min( FirstVNF_Mem ,( ( BR + FirstVNF_RAM_Server ) * ( ( BR * FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( ( CS * MUR ) / MUM ) / RRSe ) + RCSe ) ) + Max( MUC,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( AMS ,( ( FirstVNF_CPU * DDR ) + Max( ARS,CRS ) ) ) ) - Max( Const,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( ( ( CS - DS ) + Max( RRSe,RCSe ) ) - RMSe ) ) * ( MLU / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + FirstVNF_Mem ) - ( MDR + ( ( FirstVNF_RAM + ( FirstVNF_CPU * ARS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Max( ( CS + MUC ),RMSe ) / Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM + ( MDR / AMS ) ) / ( ( DDR * FirstVNF_Mem ) - ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( ( ( ( Min( AMS ,FirstVNF_Mem ) + AMS ) * ( Max( ACS,Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) / RRS ) ) + FirstVNF_CPU_Server ) + CRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUC * DS ) ) ,( ( MLU + MUM ) - Min( MUM ,DS ) ) ) * ( ( Min( RRSe ,( Min( ( MUM / Max( RCSe,MUC ) ) ,RRSe ) * ( CS + ( RCSe + ( RCSe - RCSe ) ) ) ) ) - ( CS - RCSe ) ) / Max( Max( RCSe,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM + ( MDR / AMS ) ) / ( ( DDR * FirstVNF_Mem ) - ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( ( ( ( Min( AMS ,FirstVNF_Mem ) + AMS ) * ( Max( ACS,Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) / RRS ) ) + FirstVNF_CPU_Server ) + CRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUC * DS ) ) ,( ( MLU + MUM ) - Min( MUM ,DS ) ) ) * ( ( Min( RRSe ,( Min( ( MUM / Max( RCSe,MUC ) ) ,RRSe ) * ( CS + ( RCSe + ( RCSe - RCSe ) ) ) ) ) - ( CS - RCSe ) ) / Max( Max( RCSe,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + ( ( ARS - AMS ) / MRS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( RCSe - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,FirstVNF_CPU ) ,Min( Max( RRS,BR ) ,Max( ( DDR - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ),FirstVNF_Mem ) ) ) + Max( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - MDR ) ),RRS ) )", "choosing": "( Min( MUR ,DS ) / Min( MUC ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( CRS ,( ( RRS - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_RAM / CRS ) ,FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem - AMS ),DDR ),FirstVNF_RAM ) ) )", "choosing": "( ( ( MUM + RCSe ) * ( RMSe - CS ) ) + ( Max( ( ( DS - MUR ) / Min( ( MUR - CS ) ,MUM ) ),( MUC - ( Min( ( ( MUM * MLU ) / MUR ) ,MLU ) + MUM ) ) ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * FirstVNF_Mem_Server ) - Max( Max( ( AMS / PN ),Max( ACS,( Const / Const ) ) ),RRS ) )", "choosing": "Max( Min( RMSe ,CS ),( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - Max( DDR,Max( ( Max( ( Const * CRS ),FirstVNF_CPU ) + ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( ARS - Const ) / ( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "Max( Min( ( ( DS - Min( Max( CS,( Min( MUM ,RMSe ) / RRSe ) ) ,MLU ) ) - MUM ) ,RMSe ),( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / Min( FirstVNF_CPU ,( ( RRS * AMS ) / AMS ) ) ) - ( ACS + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,Max( RCSe,DS ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) - ( Max( MRS,FirstVNF_Mem_Server ) - ( MDR + ( FirstVNF_RAM_Server / ( RRS - Const ) ) ) ) ) / ( BR - ( ARS + Const ) ) )", "choosing": "Min( ( ( MUM + ( ( ( CS - RRSe ) - MUM ) * MLU ) ) / MUC ) ,Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU,CRS ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( ( MUC + ( RCSe + ( ( RCSe * RMSe ) + RCSe ) ) ) * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,Max( FirstVNF_CPU,CRS ) ) * ( PN * Min( Max( DDR,RRS ) ,( Const - DDR ) ) ) )", "choosing": "Max( Min( MUC ,( ( ( MUC + ( ( MUC - RRSe ) + ( ( RCSe * RMSe ) + RCSe ) ) ) / Max( Min( RCSe ,MUR ),CS ) ) + CS ) ),Max( ( ( MLU + CS ) * MUR ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( CS ,RCSe ) / MUC ) ,( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * PN ) / ( RRS - FirstVNF_CPU ) )", "choosing": "Min( ( Min( CS ,RCSe ) / MUC ) ,( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) * ACS ) + ( Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) - Const ) )", "choosing": "Min( ( CS / RMSe ) ,Max( ( MUM * ( ( MUR + ( ( ( RRSe - RRSe ) + MUC ) / ( DS / MUR ) ) ) / RMSe ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( CS / CS ) ,Max( RMSe,DS ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( Min( Const ,FirstVNF_RAM ) * ACS ) + ( Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) - Const ) )", "choosing": "Min( ( CS / RMSe ) ,Max( ( MUM * ( ( MUR + ( ( ( RRSe - RRSe ) + MUC ) / ( DS / MUR ) ) ) / RMSe ) ),RCSe ) )", "obj1": 0.6680942184154176, "obj2": 0.2646759700439173}, {"determining": "Min( ( Max( AMS,FirstVNF_RAM ) / ( ACS - ( FirstVNF_RAM_Server * Min( ( CRS + Const ) ,( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) ) ) ) ,( ( ( ( AMS + ( FirstVNF_RAM_Server - ( RRS / FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM_Server ) - RRS ) + Const ) )", "choosing": "( ( MUC - RCSe ) + ( ( Max( MUM,Min( RCSe ,( CS + MLU ) ) ) - MLU ) + Min( ( ( ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( RRS ,Const ) + ( Const - FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_RAM_Server / CRS ) ,Min( FirstVNF_RAM ,AMS ) ) ) ,( Max( MRS,FirstVNF_CPU ) + ( Min( PN ,FirstVNF_CPU ) + ( ( FirstVNF_CPU_Server * MRS ) - FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( Max( CS,Min( ( RMSe * RCSe ) ,MUR ) ) + ( MUM / MUM ) ),RCSe ) - MLU ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) * ACS ) + ( Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) - Const ) )", "choosing": "Min( ( CS / RMSe ) ,Max( ( MUM * ( ( MUR + ( ( ( RRSe - RRSe ) + MUC ) / ( DS / MUR ) ) ) / RMSe ) ),RCSe ) )", "obj1": 0.6680942184154176, "obj2": 0.2646759700439173}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7044967880085653, "obj2": 0.14919518277980906}, {"determining": "( ( FirstVNF_Mem + ( FirstVNF_Mem + Min( PN ,DDR ) ) ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - ( Min( CRS ,FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( Min( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) ,MLU ) * MUC ) ,( ( RRSe + MLU ) / RCSe ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.6980728051391863, "obj2": 0.21114758546783732}, {"determining": "( Max( ( CRS - MDR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( ( RCSe + RMSe ),MUC ) - ( MLU + RMSe ) ) ) + ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) )", "obj1": 0.7751605995717344, "obj2": 0.11322783193007936}, {"determining": "( ( ( ( AMS - ( ( MRS + Min( AMS ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ) * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "Max( Min( Max( Max( ( CS + ( MLU * Min( Max( MUR,MUC ) ,RRSe ) ) ),RRSe ),CS ) ,( RRSe - MUR ) ),Max( RMSe,RMSe ) )", "obj1": 0.6937901498929336, "obj2": 0.2546451987458516}, {"determining": "( Max( CRS,DDR ) - Max( CRS,DDR ) )", "choosing": "( Min( CS ,MUR ) + Max( ( MUM + MUR ),( ( Min( Max( Min( DS ,RRSe ),( DS / CS ) ) ,Max( MLU,( DS + RCSe ) ) ) / ( ( ( Min( RRSe ,RMSe ) / ( RMSe + MUM ) ) - MLU ) * MUR ) ) * RRSe ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12527271140761326}, {"determining": "( ( ( ( AMS - DDR ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) + BR ) - Min( MRS ,RRS ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * CS ) ) ) + MUM ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04560658611472505}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( PN,Max( FirstVNF_RAM_Server,AMS ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( Max( MUR,Max( ( CS + MUM ),( MLU - MUC ) ) ),Min( ( ( RMSe * CS ) - CS ) ,RRSe ) )", "obj1": 0.867237687366167, "obj2": 0.06581430288450957}, {"determining": "( ( ( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( ( ( DS - ( MUC - ( CS + MUM ) ) ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.9079229122055674, "obj2": 0.04560658611472505}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12527271140761326}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( MUM / RCSe ) )", "obj1": 0.867237687366167, "obj2": 0.06581430288450957}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10242404097444119}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MLU + MLU ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.9400428265524625, "obj2": 0.02953365634136946}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( MLU + MLU ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.8029978586723768, "obj2": 0.0990681794851054}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( CRS + MDR ) + ( ( FirstVNF_RAM_Server * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,Min( ( RRSe / ( MUR - MUR ) ) ,( Min( Max( RMSe,Max( Min( Min( CS ,RRSe ) ,( MUM * MUR ) ),MUC ) ) ,MLU ) / Min( Min( MUM ,MUR ) ,RCSe ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.08024559190285734}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( CS / CS ) ,Max( RMSe,DS ) ) ) ,( MUM / RCSe ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351357}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8029978586723768, "obj2": 0.0990681794851054}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( MUC ,RRSe ) - ( MUR - DS ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.017766055223910938}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + ( FirstVNF_CPU - MDR ) ) )", "choosing": "( Max( RRSe,( CS + Max( Max( RMSe,MUC ),( ( RRSe * MLU ) * DS ) ) ) ) + ( Min( MUC ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.9400428265524625, "obj2": 0.02953365634136946}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,Min( ( RRSe / ( MUR - MUR ) ) ,( Min( MLU ,Max( RMSe,Max( Min( MLU ,( MUM * MUR ) ),MUC ) ) ) + Min( Min( MUM ,MUR ) ,RCSe ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.08024559190285734}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / DDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( ( CS * ( MUC + MUC ) ) / MUM ) ,MUR ) * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9507494646680942, "obj2": 0.024239844646141085}, {"determining": "( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( DS ,( ( ( ( MUC - ( RRSe * RMSe ) ) + ( RRSe / Min( DS ,MUM ) ) ) + ( Max( RMSe,RMSe ) / MUR ) ) / RRSe ) ) * ( ( ( RMSe + ( ( ( RMSe + MUR ) * RCSe ) * MLU ) ) - DS ) * MUR ) ) ,( MUM - Max( RRSe,MUR ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "( ( CRS / DDR ) - Min( FirstVNF_Mem ,( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( MUM / ( ( MLU - RCSe ) * MUR ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.9700214132762313, "obj2": 0.017766055223910938}, {"determining": "( ( Max( ( BR + FirstVNF_Mem ),( FirstVNF_CPU_Server / Const ) ) + Min( ( CRS / FirstVNF_Mem ) ,Max( ( MDR / Max( ( BR * MDR ),FirstVNF_RAM ) ),ACS ) ) ) * Min( Min( Min( CRS ,ARS ) ,( ACS - AMS ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( AMS - DDR ) ) ) )", "choosing": "( ( RCSe / Min( MUR ,CS ) ) * Max( DS,Max( CS,Max( RMSe,( MUR - DS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.26030942196551576}, {"determining": "( ( AMS - DDR ) - Min( ( AMS - ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) + PN ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / ( Min( MUC ,RRSe ) - CS ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "( ( ( BR / ( BR / FirstVNF_RAM_Server ) ) * Max( BR,FirstVNF_Mem_Server ) ) * Min( ( DDR + PN ) ,MRS ) )", "choosing": "Max( ( ( DS * MUM ) / Max( RRSe,MUC ) ),Max( ( RRSe + DS ),Max( ( CS - MUM ),( MUC - ( MUC / CS ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.2618185292445951}, {"determining": "( ( ( ( AMS - DDR ) - ( ( CRS - Min( FirstVNF_Mem_Server ,PN ) ) + FirstVNF_Mem ) ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( MUC - ( CS + DS ) ) ) ) ) + MUM ) ) )", "obj1": 0.9443254817987152, "obj2": 0.027870155622976504}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7987152034261242, "obj2": 0.100629924167468}, {"determining": "( ( BR + Max( FirstVNF_CPU,( Max( ( ( Const / FirstVNF_Mem ) * MRS ),FirstVNF_CPU ) - ARS ) ) ) * RRS )", "choosing": "Max( Min( MUM ,Max( Min( DS ,DS ),( RMSe + MUR ) ) ),Max( ( ( RCSe + RMSe ) - Min( MUM ,RMSe ) ),Max( ( MUC - MUC ),( ( Max( ( Min( MUR ,MUR ) - RRSe ),Max( MUR,MUM ) ) / RRSe ) - MUR ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.2618185292445951}, {"determining": "( ( ( ( Min( ( BR * ( Const * BR ) ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - Max( FirstVNF_RAM,MDR ) ) ) - Min( FirstVNF_Mem ,( Max( BR,FirstVNF_CPU_Server ) * AMS ) ) ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( ( Max( RCSe,( ( RRSe - DS ) - MUM ) ) / MLU ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) - CS ) ,RRSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0020729588897943573}, {"determining": "( ( Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) - ( Max( MRS,FirstVNF_Mem_Server ) - ( MDR + ( FirstVNF_RAM_Server / ( RRS - Const ) ) ) ) ) / ( BR - ( ARS + Const ) ) )", "choosing": "( ( MUC / ( MUM + ( ( ( CS - RRSe ) - MUM ) * MLU ) ) ) / Min( CS ,RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.2566515993873171}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02611225818446143}, {"determining": "( ( ACS + BR ) + ( RRS - ACS ) )", "choosing": "( ( Min( MLU ,MLU ) / CS ) / Min( CS ,MUC ) )", "obj1": 0.6916488222698073, "obj2": 0.2558746715076788}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( PN ,ARS ) ) / ( ( MRS - Max( DDR,FirstVNF_Mem ) ) - ( FirstVNF_RAM + MDR ) ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) ) * ( Min( RCSe ,RMSe ) + Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) ) ) ) / Min( RCSe ,Max( ( MLU - MUM ),Min( CS ,RRSe ) ) ) ) + Max( MUR,RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( DDR - ( AMS - FirstVNF_Mem ) ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "Min( Min( ( Min( ( MUM - MUR ) ,RRSe ) * ( DS + CS ) ) ,MUM ) ,( Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) * ( Min( RRSe ,DS ) - ( ( ( ( Min( RCSe ,MUM ) - RRSe ) / MLU ) * MUR ) - RCSe ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.2559101405859584}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM + RRS ) - ( FirstVNF_CPU_Server / AMS ) ) ) - Min( FirstVNF_Mem ,( Max( BR,FirstVNF_CPU_Server ) * AMS ) ) )", "choosing": "( ( ( ( DS * RRSe ) / MUC ) / DS ) + Max( MUR,RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02611225818446143}, {"determining": "( ( Min( Const ,CRS ) / Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) ) - ( ( MDR + ( ( FirstVNF_CPU_Server + MDR ) / FirstVNF_RAM ) ) + MRS ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( CS - RCSe ) / RMSe ) / DS ) ) ) * Max( Max( Max( MUC,( ( MUR + MUM ) * ( DS - CS ) ) ),( ( ( DS * MUR ) + Min( MLU ,MLU ) ) + ( ( MLU / RMSe ) * CS ) ) ),Min( Min( MUR ,( RRSe + MUC ) ) ,MUC ) ) ) / DS ) + Max( MUR,RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) ) * ( Min( RCSe ,RMSe ) + Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) ) ) ) / DS ) + Max( MUR,RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( Min( BR ,Min( RRS ,Const ) ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_RAM + MDR ) - ( FirstVNF_CPU_Server / AMS ) ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0010364794448971786}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_RAM + MDR ) - ( FirstVNF_CPU_Server / AMS ) ) ) - Max( ( Max( ( FirstVNF_CPU * ( ( PN + RRS ) / FirstVNF_Mem_Server ) ),Min( PN ,ACS ) ) - ( ( MRS / AMS ) / ( FirstVNF_CPU_Server + RRS ) ) ),Max( ( RRS - ( Min( FirstVNF_Mem ,Const ) - ( FirstVNF_Mem_Server / Const ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUM ,( ( RMSe - Max( ( MLU - CS ),( MLU + MUC ) ) ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / Max( Max( RCSe,RCSe ),( RRSe + RRSe ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0010364794448971786}, {"determining": "( ( Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem_Server,MRS ) - ( MDR + ( FirstVNF_RAM_Server / ( RRS - Const ) ) ) ) ) / ( BR - ( ARS + ( MRS / ACS ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( MUM - CS ) ) - Min( ( DS / RRSe ) ,( RRSe + RCSe ) ) ) / ( ( ( RCSe - MUM ) * ( RMSe * RMSe ) ) + Min( ( DS / DS ) ,( MLU - RCSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.2566515993873171}, {"determining": "Min( Min( ( Min( AMS ,FirstVNF_CPU_Server ) / Min( Max( ARS,MRS ) ,Const ) ) ,Max( BR,FirstVNF_Mem ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( ( MUC / ( ( RCSe - ( MUR * ( DS / MUC ) ) ) - RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ACS,FirstVNF_RAM ) / ( BR - ACS ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( ( Max( AMS,FirstVNF_RAM ) / MRS ) * ARS ) ) )", "choosing": "( ( ( MUR + MUR ) - Max( MUM,( MUM * MLU ) ) ) + Min( RRSe ,Max( RCSe,Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_CPU_Server / Const ),( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) - DDR ) + FirstVNF_Mem ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,Max( RRS,ACS ) ) ) * Min( Min( ( ACS - AMS ) ,( CRS * ARS ) ) ,( DDR - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( MLU * ( Min( ( DS + DS ) ,DS ) / ( RRSe + MUM ) ) ) ,MLU ) * ( DS - Max( Max( ( DS / MLU ),MUM ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,RRS ) * CRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( ( RRSe - Min( MUR ,Max( RRSe,RCSe ) ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( DS ,( ( ( ( MUC - ( RRSe * RMSe ) ) + ( RRSe / Min( DS ,MUM ) ) ) + ( Max( RMSe,RMSe ) / MUR ) ) / RRSe ) ) * ( ( ( RMSe + ( ( ( RMSe + MUR ) * RCSe ) * MLU ) ) - DS ) * MUR ) ) ,( MUM - Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( MRS,Const ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( ( RCSe + MUC ) / ( CS + ( MUC + RRSe ) ) ) / ( ( MUR + CS ) + MUR ) ) ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_CPU_Server ) ,Min( ( CRS - FirstVNF_RAM_Server ) ,Min( ( Min( BR ,AMS ) * ( ( MRS * AMS ) - MDR ) ) ,MDR ) ) )", "choosing": "Min( ( Min( ( RMSe + MLU ) ,MUM ) * RCSe ) ,( RCSe / Max( MLU,( Min( DS ,( CS / CS ) ) * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),( BR + DDR ) ) )", "choosing": "( Max( MUR,CS ) + ( ( RMSe - ( MUR + MUR ) ) / ( ( Min( MUM ,( Max( ( MLU + MUR ),RCSe ) * MLU ) ) + MUC ) / ( RRSe + ( MUM * ( RMSe / ( RMSe - RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / ( BR * Const ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS - MUR ),Min( CS ,RMSe ) ) / ( Max( Min( RRSe ,( RRSe / DS ) ),MUM ) / ( RMSe + ( ( Min( RRSe ,Max( MLU,( MUC + MUC ) ) ) / MUR ) * ( ( ( DS * MUR ) + ( Min( RMSe ,RMSe ) / RCSe ) ) / MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + FirstVNF_RAM_Server ) + ( ( RRS * ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( AMS,FirstVNF_RAM ) / ( ACS - ( FirstVNF_RAM_Server * Min( ( CRS + Const ) ,( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) ) ) ) ,( ( ( ( AMS + ( FirstVNF_RAM_Server - ( RRS / FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM_Server ) - RRS ) + Const ) )", "choosing": "( ( MUC - RCSe ) + ( ( Max( MUM,Min( RCSe ,( CS + MLU ) ) ) - MLU ) + Min( ( ( ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR * FirstVNF_Mem ) * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( ( DS * Max( RRSe,CS ) ) - ( MUC - RRSe ) ) * Max( Max( DS,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ARS * Min( ARS ,Max( ( AMS - RRS ),FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU + CRS ) ) / ( ( MRS * MRS ) * ( CRS + CRS ) ) ) - ( ACS + ( FirstVNF_CPU / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( RMSe - MUR ) ) ,( Max( MLU,Max( RMSe,( ( MUR / ( DS + MUM ) ) - RCSe ) ) ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( Min( FirstVNF_RAM ,DDR ) - Max( ( FirstVNF_CPU / ( Min( AMS ,MRS ) * MDR ) ),( AMS / ( FirstVNF_Mem - AMS ) ) ) ) - Max( MRS,RRS ) ) ) ,( ( ( Const * PN ) - ( FirstVNF_RAM_Server / PN ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( ( CS * MUC ) - MUC ) / ( Max( DS,RRSe ) * Max( Max( RRSe,( RRSe * RMSe ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + Min( CRS ,FirstVNF_CPU ) ) ,Min( ( RRS + Const ) ,( AMS * Const ) ) ) - ( ( ( ( MDR / MDR ) * FirstVNF_CPU ) * ( CRS - ( Min( Const ,FirstVNF_CPU ) * ( MDR / ( RRS + FirstVNF_Mem ) ) ) ) ) - RRS ) )", "choosing": "Max( ( RMSe - MUM ),( ( ( Min( RMSe ,( Max( RRSe,( MUR - RMSe ) ) / CS ) ) - RMSe ) - MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( DS * MUC ) - Min( ( MUR / MUC ) ,CS ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( ( CS + MUM ) - MUC ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( FirstVNF_RAM_Server / CRS ) ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( Min( PN ,FirstVNF_CPU ) + ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,( PN / MRS ) ) ) ,( ( FirstVNF_RAM_Server - BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - ( ( ( RCSe / RMSe ) + MLU ) + Min( RCSe ,MUM ) ) ) ) ,( ( DS / DS ) - MUR ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * CRS ) - ( FirstVNF_Mem + PN ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) - ( PN + FirstVNF_Mem ) ) * CRS ) - Min( FirstVNF_RAM ,( Min( Max( FirstVNF_Mem_Server,( ( ( MDR / FirstVNF_RAM ) + ARS ) / MRS ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUC ,MUC ) * Max( MUR,( Min( ( ( CS - RCSe ) - Min( MLU ,( MUC - MUR ) ) ) ,MUC ) / Max( ( MUM / RRSe ),RRSe ) ) ) ) + ( ( DS + MUC ) / Max( RCSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( BR - ( MRS * ( BR * DDR ) ) ) * ( Const * ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ),CRS ) - ( ( ARS * RRS ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUM * ( MUM * Min( ( ( CS * Max( DS,MUM ) ) / MUM ) ,MUR ) ) ) + ( MUM * MUR ) ),Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + FirstVNF_RAM_Server ) + ( ( RRS * ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - ( ( ARS / FirstVNF_RAM ) + ( FirstVNF_RAM + RRS ) ) )", "choosing": "( Min( ( ( RRSe - RRSe ) + ( MUR - Min( ( ( RCSe / MLU ) * Min( ( DS * RMSe ) ,RCSe ) ) ,( MUM * MUC ) ) ) ) ,( ( ( RCSe - DS ) / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + CRS ),( ARS - FirstVNF_CPU ) ) / ( FirstVNF_CPU / ( CRS + DDR ) ) ) - ( ACS + ( ( BR * FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( Min( MLU ,Max( RMSe,Max( ( RMSe / DS ),MUC ) ) ) + Min( Min( MUM ,RRSe ) ,RCSe ) ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem ) / Max( RRS,DDR ) ) ,Min( ( ( FirstVNF_RAM + DDR ) - Min( BR ,DDR ) ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,Min( ( ( CS + CS ) / RRSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU * ( ( PN + RRS ) / FirstVNF_Mem_Server ) ),Min( PN ,ACS ) ) - ( ( MRS / AMS ) / ( FirstVNF_CPU_Server + RRS ) ) )", "choosing": "Max( ( RMSe - Max( ( MLU - CS ),( MLU + MUC ) ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( ACS / RRS ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + RRS ) - ( MRS / AMS ) ) - ( FirstVNF_RAM * CRS ) )", "choosing": "Min( ( RRSe / ( Max( Min( MUC ,CS ),MUM ) + Min( MUM ,MLU ) ) ) ,( RCSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * Max( Max( CRS,Max( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MRS ) ),CRS ) ),FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + Const ) ) )", "choosing": "( Min( MLU ,MUR ) + ( MLU / ( MUM * ( Min( MUR ,RMSe ) - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS - ARS ) / MRS ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( MRS + DDR ) + DDR ) ) )", "choosing": "( ( Max( ( RMSe / MUR ),MUC ) + ( MUM / MUR ) ) * Min( ( MUC - MLU ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / ACS ) ,( FirstVNF_Mem * Const ) ) - Max( ( FirstVNF_Mem / ( PN - DDR ) ),( BR / FirstVNF_Mem_Server ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * ( Const - ( RRS - ( BR - MRS ) ) ) ) ),FirstVNF_CPU_Server ),MDR ) )", "choosing": "Max( ( ( MLU + RMSe ) - RMSe ),( CS - ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) ,( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / MDR ) - Min( FirstVNF_Mem ,( ( BR + FirstVNF_RAM_Server ) * ( ( BR * FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( ( CS * MUR ) / MUM ) / RRSe ) + RCSe ) ) + Max( MUC,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( AMS ,( ( FirstVNF_CPU * DDR ) + Max( ARS,CRS ) ) ) ) - Max( Const,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( ( ( CS - DS ) + Max( RRSe,RCSe ) ) - RMSe ) ) * ( MLU / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + FirstVNF_Mem ) - ( MDR + ( ( FirstVNF_RAM + ( FirstVNF_CPU * ARS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Max( ( CS + MUC ),RMSe ) / Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM + ( MDR / AMS ) ) / ( ( DDR * FirstVNF_Mem ) - ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( ( ( ( Min( AMS ,FirstVNF_Mem ) + AMS ) * ( Max( ACS,Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) / RRS ) ) + FirstVNF_CPU_Server ) + CRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUC * DS ) ) ,( ( MLU + MUM ) - Min( MUM ,DS ) ) ) * ( ( Min( RRSe ,( Min( ( MUM / Max( RCSe,MUC ) ) ,RRSe ) * ( CS + ( RCSe + ( RCSe - RCSe ) ) ) ) ) - ( CS - RCSe ) ) / Max( Max( RCSe,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM + ( MDR / AMS ) ) / ( ( DDR * FirstVNF_Mem ) - ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( ( ( ( Min( AMS ,FirstVNF_Mem ) + AMS ) * ( Max( ACS,Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) / RRS ) ) + FirstVNF_CPU_Server ) + CRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUC * DS ) ) ,( ( MLU + MUM ) - Min( MUM ,DS ) ) ) * ( ( Min( RRSe ,( Min( ( MUM / Max( RCSe,MUC ) ) ,RRSe ) * ( CS + ( RCSe + ( RCSe - RCSe ) ) ) ) ) - ( CS - RCSe ) ) / Max( Max( RCSe,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + ( ( ARS - AMS ) / MRS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( RCSe - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,FirstVNF_CPU ) ,Min( Max( RRS,BR ) ,Max( ( DDR - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ),FirstVNF_Mem ) ) ) + Max( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - MDR ) ),RRS ) )", "choosing": "( Min( MUR ,DS ) / Min( MUC ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( CRS ,( ( RRS - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_RAM / CRS ) ,FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_Mem - AMS ),DDR ),FirstVNF_RAM ) ) )", "choosing": "( ( ( MUM + RCSe ) * ( RMSe - CS ) ) + ( Max( ( ( DS - MUR ) / Min( ( MUR - CS ) ,MUM ) ),( MUC - ( Min( ( ( MUM * MLU ) / MUR ) ,MLU ) + MUM ) ) ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * FirstVNF_Mem_Server ) - Max( Max( ( AMS / PN ),Max( ACS,( Const / Const ) ) ),RRS ) )", "choosing": "Max( Min( RMSe ,CS ),( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - Max( DDR,Max( ( Max( ( Const * CRS ),FirstVNF_CPU ) + ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( ARS - Const ) / ( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "Max( Min( ( ( DS - Min( Max( CS,( Min( MUM ,RMSe ) / RRSe ) ) ,MLU ) ) - MUM ) ,RMSe ),( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / Min( FirstVNF_CPU ,( ( RRS * AMS ) / AMS ) ) ) - ( ACS + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,Max( RCSe,DS ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) - ( Max( MRS,FirstVNF_Mem_Server ) - ( MDR + ( FirstVNF_RAM_Server / ( RRS - Const ) ) ) ) ) / ( BR - ( ARS + Const ) ) )", "choosing": "Min( ( ( MUM + ( ( ( CS - RRSe ) - MUM ) * MLU ) ) / MUC ) ,Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU,CRS ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( ( MUC + ( RCSe + ( ( RCSe * RMSe ) + RCSe ) ) ) * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( Min( Const ,FirstVNF_RAM ) * ACS ) + ( Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) - Const ) )", "choosing": "Min( ( CS / RMSe ) ,Max( ( MUM * ( ( MUR + ( ( ( RRSe - RRSe ) + MUC ) / ( DS / MUR ) ) ) / RMSe ) ),RCSe ) )", "obj1": 0.6680942184154176, "obj2": 0.2646759700439173}, {"determining": "Min( ( Max( ACS,FirstVNF_RAM ) / ( ACS - ( FirstVNF_RAM_Server * Min( FirstVNF_RAM ,( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) ) ) ) ,( Min( FirstVNF_Mem ,RRS ) - ( PN / FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - MUC ) + ( ( MUM - MLU ) + Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( AMS,FirstVNF_RAM ) / ( ACS - ( FirstVNF_RAM_Server * Min( ( CRS + Const ) ,( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) ) ) ) ,( ( ( ( AMS + ( FirstVNF_RAM_Server - ( RRS / FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM_Server ) - RRS ) + Const ) )", "choosing": "( ( MUC - RCSe ) + ( ( Max( MUM,Min( RCSe ,( CS + MLU ) ) ) - MLU ) + Min( ( ( ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) * ACS ) + ( Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) - Const ) )", "choosing": "Min( ( CS / RMSe ) ,Max( ( MUM * ( ( MUR + ( ( ( RRSe - RRSe ) + MUC ) / ( DS / MUR ) ) ) / RMSe ) ),RCSe ) )", "obj1": 0.6680942184154176, "obj2": 0.2646759700439173}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7044967880085653, "obj2": 0.14919518277980906}, {"determining": "( ( FirstVNF_Mem + ( FirstVNF_Mem + Min( PN ,DDR ) ) ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - ( Min( CRS ,FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( Min( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) ,MLU ) * MUC ) ,( ( RRSe + MLU ) / RCSe ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.6980728051391863, "obj2": 0.21114758546783732}, {"determining": "( ( ( ( AMS - ( ( MRS + Min( AMS ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ) * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "Max( Min( Max( Max( ( CS + ( MLU * Min( Max( MUR,MUC ) ,RRSe ) ) ),RRSe ),CS ) ,( RRSe - MUR ) ),Max( RMSe,RMSe ) )", "obj1": 0.6937901498929336, "obj2": 0.2546451987458516}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( MDR + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - RMSe ) ,MUM ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( MUC - ( CS + MUM ) ) ) ) ) + MUM ) ) )", "obj1": 0.6980728051391863, "obj2": 0.21114758546783732}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.867237687366167, "obj2": 0.06581430288450957}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( PN,Max( FirstVNF_RAM_Server,AMS ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( Max( MUR,Max( ( CS + MUM ),( MLU - MUC ) ) ),Min( ( ( RMSe * CS ) - CS ) ,RRSe ) )", "obj1": 0.867237687366167, "obj2": 0.06581430288450957}, {"determining": "( ( ( Max( ARS,CRS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server - CRS ) + ( ( CRS / ( BR * FirstVNF_Mem_Server ) ) + RRS ) ) )", "choosing": "Min( ( RCSe - MLU ) ,( MUM + MUM ) )", "obj1": 0.8394004282655246, "obj2": 0.08024559190285732}, {"determining": "( Max( CRS,DDR ) - Max( CRS,DDR ) )", "choosing": "( Min( CS ,MUR ) + Max( ( MUM + MUR ),( ( Min( Max( Min( DS ,RRSe ),( DS / CS ) ) ,Max( MLU,( DS + RCSe ) ) ) / ( ( ( Min( RRSe ,RMSe ) / ( RMSe + MUM ) ) - MLU ) * MUR ) ) * RRSe ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12527271140761326}, {"determining": "( ( ( ( AMS - DDR ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) + BR ) - Min( MRS ,RRS ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * CS ) ) ) + MUM ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04560658611472505}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,Min( Max( MRS,( Min( FirstVNF_RAM ,AMS ) / Const ) ) ,FirstVNF_CPU_Server ) ) ) - Max( DDR,CRS ) ) - Min( FirstVNF_Mem ,( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ARS - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM + MLU ) - Min( MUM ,DS ) ) * MUM ) * ( Max( Min( RRSe ,RCSe ),( ( ( ( RCSe + DS ) / Min( RMSe ,RMSe ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04078645296014756}, {"determining": "( ( ( ( Max( Max( AMS,Min( FirstVNF_CPU ,Max( FirstVNF_CPU,DDR ) ) ),FirstVNF_Mem ) - DDR ) - Max( ( CRS - Const ),FirstVNF_Mem ) ) + CRS ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( ( ( DS - ( ( CS + ( ( MLU / MUC ) - MUM ) ) / Max( MUC,DS ) ) ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.9336188436830836, "obj2": 0.032926306841320946}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8029978586723768, "obj2": 0.0990681794851054}, {"determining": "( ( ( PN * PN ) + Max( Max( ( MDR / Min( BR ,ARS ) ),( FirstVNF_Mem - FirstVNF_CPU ) ),( AMS / RRS ) ) ) - Min( PN ,CRS ) )", "choosing": "Max( ( RRSe - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + ( Min( CS ,MLU ) + ( CS / RRSe ) ) ) ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12215571553131707}, {"determining": "( ( ( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( CS / ( Max( MUC,( MLU / DS ) ) - ( DS / RMSe ) ) ) ,( MUM - ( RRSe + MUR ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04560658611472505}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( MUC - MUM ) )", "obj1": 0.7516059957173448, "obj2": 0.12527271140761326}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,RMSe )", "obj1": 0.9785867237687366, "obj2": 0.01085215545731404}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( CRS - MDR ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( Min( RMSe ,( ( CS + RCSe ) - Min( ( RCSe - MLU ) ,RMSe ) ) ) - RMSe ) ) * MUC ) )", "obj1": 0.7815845824411135, "obj2": 0.10973697897566259}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( MLU + MLU ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.8029978586723768, "obj2": 0.0990681794851054}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10449965192844662}, {"determining": "( Max( ( CRS - MDR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( ( RCSe + RMSe ),MUC ) - ( MLU + RMSe ) ) ) + ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) )", "obj1": 0.7751605995717344, "obj2": 0.11322783193007936}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / DDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( ( CS * ( MUC + MUC ) ) / MUM ) ,MUR ) * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9507494646680942, "obj2": 0.02423984464614108}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( MUC ,RRSe ) - ( MUR - DS ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.017766055223910938}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RMSe + ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) )", "obj1": 0.7751605995717344, "obj2": 0.11322783193007936}, {"determining": "( ( Max( ( BR + FirstVNF_Mem ),( FirstVNF_CPU_Server / Const ) ) + Min( ( CRS / FirstVNF_Mem ) ,Max( ( MDR / Max( ( BR * MDR ),FirstVNF_RAM ) ),ACS ) ) ) * Min( Min( Min( CRS ,ARS ) ,( ACS - AMS ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( AMS - DDR ) ) ) )", "choosing": "( ( RCSe / Min( MUR ,CS ) ) * Max( DS,Max( CS,Max( RMSe,( MUR - DS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.26030942196551576}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351357}, {"determining": "( ( AMS - DDR ) - ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU / Const ) ) )", "choosing": "( ( ( MUM + RCSe ) * ( CS - RMSe ) ) + ( Max( Max( ( DS - MUR ),Min( ( MUR - CS ) ,MUM ) ),( MUC - ( Min( ( RRSe - DS ) ,MLU ) + MUM ) ) ) + ( MUM - MLU ) ) )", "obj1": 0.9400428265524625, "obj2": 0.029533656341369455}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) + MDR ) - ( FirstVNF_CPU_Server / AMS ) ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + ACS ) ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( MUC - CS ) / RMSe ) - DS ) ) ) * ( Min( RCSe ,( CS * Min( ( MUR - RMSe ) ,DS ) ) ) + Max( ( Min( MUM ,MUR ) / ( MUR * RCSe ) ),( CS * DS ) ) ) ) / Min( RCSe ,Max( RCSe,Min( CS ,RRSe ) ) ) ) + Max( MUR,RCSe ) )", "obj1": 0.9850107066381156, "obj2": 0.007176292792102603}, {"determining": "( ( BR + Max( FirstVNF_CPU,( Max( ( ( Const / FirstVNF_Mem ) * MRS ),FirstVNF_CPU ) - ARS ) ) ) * RRS )", "choosing": "Max( Min( MUM ,Max( Min( DS ,DS ),( RMSe + MUR ) ) ),Max( ( ( RCSe + RMSe ) - Min( MUM ,RMSe ) ),Max( ( MUC - MUC ),( ( Max( ( Min( MUR ,MUR ) - RRSe ),Max( MUR,MUM ) ) / RRSe ) - MUR ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.2618185292445951}, {"determining": "( Max( AMS,DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Min( ( ARS + FirstVNF_CPU ) ,RRS ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( CS / ( Min( MUC ,RRSe ) - CS ) ) ,( MUR - DS ) ) ) ,Min( ( RRSe / ( MUR - MUR ) ) ,( Min( MLU ,Max( RMSe,Max( Min( MLU ,( MUR * MUR ) ),MUC ) ) ) + ( Min( MUM ,MUR ) + RCSe ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10107778959158592}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9464668094218416, "obj2": 0.026112258184461425}, {"determining": "( ( ( ( AMS - DDR ) - ( ( CRS - Min( FirstVNF_Mem_Server ,PN ) ) + FirstVNF_Mem ) ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( MUC - ( CS + DS ) ) ) ) ) + MUM ) ) )", "obj1": 0.9443254817987152, "obj2": 0.027870155622976504}, {"determining": "( ( ( BR / ( BR / FirstVNF_RAM_Server ) ) * Max( BR,FirstVNF_Mem_Server ) ) * Min( ( DDR + PN ) ,MRS ) )", "choosing": "Max( ( ( DS * MUM ) / Max( RRSe,MUC ) ),Max( ( RRSe + DS ),Max( ( CS - MUM ),( MUC - ( MUC / CS ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.2618185292445951}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( CS / CS ) ,Max( RMSe,DS ) ) ) ,( MUM / RCSe ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351357}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.9700214132762313, "obj2": 0.017766055223910938}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7987152034261242, "obj2": 0.100629924167468}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( ( RCSe / RRSe ) * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12328186985804794}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( Min( ( FirstVNF_CPU_Server - Max( PN,Min( FirstVNF_CPU_Server ,Const ) ) ) ,( Min( ARS ,AMS ) - ( PN + FirstVNF_Mem ) ) ) ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( RCSe - MLU ) * ( Min( RCSe ,RMSe ) + Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) ) ) ) / Min( RCSe ,Max( RCSe,Min( CS ,RRSe ) ) ) ) + Max( MUR,RCSe ) )", "obj1": 0.987152034261242, "obj2": 0.006348634504465954}, {"determining": "( ( Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_CPU + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU_Server - CRS ) - ( MDR + ( FirstVNF_RAM_Server / ( RRS - Const ) ) ) ) ) / ( BR - ( ARS + Const ) ) )", "choosing": "( Max( RRSe,CS ) + Min( ( RCSe * ( CS + RRSe ) ) ,Min( CS ,RCSe ) ) )", "obj1": 0.6873661670235546, "obj2": 0.2566515993873171}, {"determining": "( ( ACS + BR ) + ( RRS - ACS ) )", "choosing": "( ( Min( MLU ,MLU ) / CS ) / Min( CS ,MUC ) )", "obj1": 0.6916488222698073, "obj2": 0.2558746715076788}, {"determining": "( ( ( ( Min( ( BR * ( Const * BR ) ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - Max( FirstVNF_RAM,MDR ) ) ) - Min( FirstVNF_Mem ,( Max( BR,FirstVNF_CPU_Server ) * AMS ) ) ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( ( Max( RCSe,( ( RRSe - DS ) - MUM ) ) / MLU ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) - CS ) ,RRSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0020729588897943573}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( DDR * PN ) ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) ) * ( Min( RCSe ,RMSe ) + Max( ( Min( MUM ,MUR ) / ( RRSe * RCSe ) ),( CS * DS ) ) ) ) / Min( RCSe ,Max( MUM,Min( Max( DS,RCSe ) ,RRSe ) ) ) ) + Max( MUR,RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( DDR - ( AMS - FirstVNF_Mem ) ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "Min( Min( ( Min( ( MUM - MUR ) ,RRSe ) * ( DS + CS ) ) ,MUM ) ,( Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) * ( Min( RRSe ,DS ) - ( ( ( ( Min( RCSe ,MUM ) - RRSe ) / MLU ) * MUR ) - RCSe ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.2559101405859584}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) ) - ( ( MDR + ( ( FirstVNF_CPU_Server + MDR ) / FirstVNF_RAM ) ) + MRS ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) ) * ( Min( RCSe ,RMSe ) + Min( Min( MUR ,( RRSe + MUC ) ) ,MUC ) ) ) / DS ) + Max( MUR,RCSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0020729588897943573}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( PN ,ARS ) ) / ( ( MRS - Max( DDR,FirstVNF_Mem ) ) - ( FirstVNF_RAM + MDR ) ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) ) * ( Min( RCSe ,RMSe ) + Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) ) ) ) / Min( RCSe ,Max( ( MLU - MUM ),Min( CS ,RRSe ) ) ) ) + Max( MUR,RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( RMSe - Max( ( MLU - CS ),( MLU + MUC ) ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( Const ,CRS ) / Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) ) - ( ( MDR + ( ( FirstVNF_CPU_Server + MDR ) / FirstVNF_RAM ) ) + MRS ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( CS - RCSe ) / RMSe ) / DS ) ) ) * Max( Max( Max( MUC,( ( MUR + MUM ) * ( DS - CS ) ) ),( ( ( DS * MUR ) + Min( MLU ,MLU ) ) + ( ( MLU / RMSe ) * CS ) ) ),Min( Min( MUR ,( RRSe + MUC ) ) ,MUC ) ) ) / DS ) + Max( MUR,RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( Min( BR ,Min( RRS ,Const ) ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_RAM + MDR ) - ( FirstVNF_CPU_Server / AMS ) ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0010364794448971786}, {"determining": "( ( Max( MDR,AMS ) * BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( Min( ( RMSe + RMSe ) ,MLU ) ,DS ) ) * ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( MUC - ( CS + MUR ) ) ) ) ) + MUM ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0010364794448971786}, {"determining": "( ( Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) - ( Max( MRS,FirstVNF_Mem_Server ) - ( MDR + ( FirstVNF_RAM_Server / ( RRS - Const ) ) ) ) ) / ( BR - ( ARS + Const ) ) )", "choosing": "( ( MUC / ( MUM + ( ( ( CS - RRSe ) - MUM ) * MLU ) ) ) / Min( CS ,RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.2566515993873171}, {"determining": "Min( Min( ( Min( RRS ,Const ) + ( Const - FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_RAM_Server / CRS ) ,Min( FirstVNF_RAM ,AMS ) ) ) ,( Max( MRS,FirstVNF_CPU ) + ( Min( PN ,FirstVNF_CPU ) + ( ( FirstVNF_CPU_Server * MRS ) - FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( Max( CS,Min( ( RMSe * RCSe ) ,MUR ) ) + ( MUM / MUM ) ),RCSe ) - MLU ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( AMS ,FirstVNF_CPU_Server ) / Min( Max( ARS,MRS ) ,Const ) ) ,Max( BR,FirstVNF_Mem ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( ( MUC / ( ( RCSe - ( MUR * ( DS / MUC ) ) ) - RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ACS,FirstVNF_RAM ) / ( BR - ACS ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( ( Max( AMS,FirstVNF_RAM ) / MRS ) * ARS ) ) )", "choosing": "( ( ( MUR + MUR ) - Max( MUM,( MUM * MLU ) ) ) + Min( RRSe ,Max( RCSe,Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_CPU_Server / Const ),( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) - DDR ) + FirstVNF_Mem ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,Max( RRS,ACS ) ) ) * Min( Min( ( ACS - AMS ) ,( CRS * ARS ) ) ,( DDR - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( MLU * ( Min( ( DS + DS ) ,DS ) / ( RRSe + MUM ) ) ) ,MLU ) * ( DS - Max( Max( ( DS / MLU ),MUM ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,RRS ) * CRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( ( RRSe - Min( MUR ,Max( RRSe,RCSe ) ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( DS ,( ( ( ( MUC - ( RRSe * RMSe ) ) + ( RRSe / Min( DS ,MUM ) ) ) + ( Max( RMSe,RMSe ) / MUR ) ) / RRSe ) ) * ( ( ( RMSe + ( ( ( RMSe + MUR ) * RCSe ) * MLU ) ) - DS ) * MUR ) ) ,( MUM - Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( MRS,Const ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( ( RCSe + MUC ) / ( CS + ( MUC + RRSe ) ) ) / ( ( MUR + CS ) + MUR ) ) ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_CPU_Server ) ,Min( ( CRS - FirstVNF_RAM_Server ) ,Min( ( Min( BR ,AMS ) * ( ( MRS * AMS ) - MDR ) ) ,MDR ) ) )", "choosing": "Min( ( Min( ( RMSe + MLU ) ,MUM ) * RCSe ) ,( RCSe / Max( MLU,( Min( DS ,( CS / CS ) ) * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),( BR + DDR ) ) )", "choosing": "( Max( MUR,CS ) + ( ( RMSe - ( MUR + MUR ) ) / ( ( Min( MUM ,( Max( ( MLU + MUR ),RCSe ) * MLU ) ) + MUC ) / ( RRSe + ( MUM * ( RMSe / ( RMSe - RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / ( BR * Const ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS - MUR ),Min( CS ,RMSe ) ) / ( Max( Min( RRSe ,( RRSe / DS ) ),MUM ) / ( RMSe + ( ( Min( RRSe ,Max( MLU,( MUC + MUC ) ) ) / MUR ) * ( ( ( DS * MUR ) + ( Min( RMSe ,RMSe ) / RCSe ) ) / MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + FirstVNF_RAM_Server ) + ( ( RRS * ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( AMS,FirstVNF_RAM ) / ( ACS - ( FirstVNF_RAM_Server * Min( ( CRS + Const ) ,( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) ) ) ) ,( ( ( ( AMS + ( FirstVNF_RAM_Server - ( RRS / FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM_Server ) - RRS ) + Const ) )", "choosing": "( ( MUC - RCSe ) + ( ( Max( MUM,Min( RCSe ,( CS + MLU ) ) ) - MLU ) + Min( ( ( ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR * FirstVNF_Mem ) * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( ( DS * Max( RRSe,CS ) ) - ( MUC - RRSe ) ) * Max( Max( DS,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ARS * Min( ARS ,Max( ( AMS - RRS ),FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU + CRS ) ) / ( ( MRS * MRS ) * ( CRS + CRS ) ) ) - ( ACS + ( FirstVNF_CPU / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( RMSe - MUR ) ) ,( Max( MLU,Max( RMSe,( ( MUR / ( DS + MUM ) ) - RCSe ) ) ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( Min( FirstVNF_RAM ,DDR ) - Max( ( FirstVNF_CPU / ( Min( AMS ,MRS ) * MDR ) ),( AMS / ( FirstVNF_Mem - AMS ) ) ) ) - Max( MRS,RRS ) ) ) ,( ( ( Const * PN ) - ( FirstVNF_RAM_Server / PN ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( ( CS * MUC ) - MUC ) / ( Max( DS,RRSe ) * Max( Max( RRSe,( RRSe * RMSe ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + Min( CRS ,FirstVNF_CPU ) ) ,Min( ( RRS + Const ) ,( AMS * Const ) ) ) - ( ( ( ( MDR / MDR ) * FirstVNF_CPU ) * ( CRS - ( Min( Const ,FirstVNF_CPU ) * ( MDR / ( RRS + FirstVNF_Mem ) ) ) ) ) - RRS ) )", "choosing": "Max( ( RMSe - MUM ),( ( ( Min( RMSe ,( Max( RRSe,( MUR - RMSe ) ) / CS ) ) - RMSe ) - MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( DS * MUC ) - Min( ( MUR / MUC ) ,CS ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( ( CS + MUM ) - MUC ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( FirstVNF_RAM_Server / CRS ) ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( Min( PN ,FirstVNF_CPU ) + ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,( PN / MRS ) ) ) ,( ( FirstVNF_RAM_Server - BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - ( ( ( RCSe / RMSe ) + MLU ) + Min( RCSe ,MUM ) ) ) ) ,( ( DS / DS ) - MUR ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * CRS ) - ( FirstVNF_Mem + PN ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) - ( PN + FirstVNF_Mem ) ) * CRS ) - Min( FirstVNF_RAM ,( Min( Max( FirstVNF_Mem_Server,( ( ( MDR / FirstVNF_RAM ) + ARS ) / MRS ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUC ,MUC ) * Max( MUR,( Min( ( ( CS - RCSe ) - Min( MLU ,( MUC - MUR ) ) ) ,MUC ) / Max( ( MUM / RRSe ),RRSe ) ) ) ) + ( ( DS + MUC ) / Max( RCSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( BR - ( MRS * ( BR * DDR ) ) ) * ( Const * ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ),CRS ) - ( ( ARS * RRS ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUM * ( MUM * Min( ( ( CS * Max( DS,MUM ) ) / MUM ) ,MUR ) ) ) + ( MUM * MUR ) ),Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + FirstVNF_RAM_Server ) + ( ( RRS * ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - ( ( ARS / FirstVNF_RAM ) + ( FirstVNF_RAM + RRS ) ) )", "choosing": "( Min( ( ( RRSe - RRSe ) + ( MUR - Min( ( ( RCSe / MLU ) * Min( ( DS * RMSe ) ,RCSe ) ) ,( MUM * MUC ) ) ) ) ,( ( ( RCSe - DS ) / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + CRS ),( ARS - FirstVNF_CPU ) ) / ( FirstVNF_CPU / ( CRS + DDR ) ) ) - ( ACS + ( ( BR * FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( Min( MLU ,Max( RMSe,Max( ( RMSe / DS ),MUC ) ) ) + Min( Min( MUM ,RRSe ) ,RCSe ) ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem ) / Max( RRS,DDR ) ) ,Min( ( ( FirstVNF_RAM + DDR ) - Min( BR ,DDR ) ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,Min( ( ( CS + CS ) / RRSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU * ( ( PN + RRS ) / FirstVNF_Mem_Server ) ),Min( PN ,ACS ) ) - ( ( MRS / AMS ) / ( FirstVNF_CPU_Server + RRS ) ) )", "choosing": "Max( ( RMSe - Max( ( MLU - CS ),( MLU + MUC ) ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( ACS / RRS ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + RRS ) - ( MRS / AMS ) ) - ( FirstVNF_RAM * CRS ) )", "choosing": "Min( ( RRSe / ( Max( Min( MUC ,CS ),MUM ) + Min( MUM ,MLU ) ) ) ,( RCSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * Max( Max( CRS,Max( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MRS ) ),CRS ) ),FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + Const ) ) )", "choosing": "( Min( MLU ,MUR ) + ( MLU / ( MUM * ( Min( MUR ,RMSe ) - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS - ARS ) / MRS ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( MRS + DDR ) + DDR ) ) )", "choosing": "( ( Max( ( RMSe / MUR ),MUC ) + ( MUM / MUR ) ) * Min( ( MUC - MLU ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / ACS ) ,( FirstVNF_Mem * Const ) ) - Max( ( FirstVNF_Mem / ( PN - DDR ) ),( BR / FirstVNF_Mem_Server ) ) ) / Max( Max( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * ( Const - ( RRS - ( BR - MRS ) ) ) ) ),FirstVNF_CPU_Server ),MDR ) )", "choosing": "Max( ( ( MLU + RMSe ) - RMSe ),( CS - ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) ,( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / MDR ) - Min( FirstVNF_Mem ,( ( BR + FirstVNF_RAM_Server ) * ( ( BR * FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - ( ( ( ( CS * MUR ) / MUM ) / RRSe ) + RCSe ) ) + Max( MUC,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( AMS ,( ( FirstVNF_CPU * DDR ) + Max( ARS,CRS ) ) ) ) - Max( Const,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( ( ( CS - DS ) + Max( RRSe,RCSe ) ) - RMSe ) ) * ( MLU / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + FirstVNF_Mem ) - ( MDR + ( ( FirstVNF_RAM + ( FirstVNF_CPU * ARS ) ) + FirstVNF_CPU ) ) )", "choosing": "( Max( ( CS + MUC ),RMSe ) / Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM + ( MDR / AMS ) ) / ( ( DDR * FirstVNF_Mem ) - ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( ( ( ( Min( AMS ,FirstVNF_Mem ) + AMS ) * ( Max( ACS,Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) / RRS ) ) + FirstVNF_CPU_Server ) + CRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUC * DS ) ) ,( ( MLU + MUM ) - Min( MUM ,DS ) ) ) * ( ( Min( RRSe ,( Min( ( MUM / Max( RCSe,MUC ) ) ,RRSe ) * ( CS + ( RCSe + ( RCSe - RCSe ) ) ) ) ) - ( CS - RCSe ) ) / Max( Max( RCSe,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM + ( MDR / AMS ) ) / ( ( DDR * FirstVNF_Mem ) - ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( ( ( ( Min( AMS ,FirstVNF_Mem ) + AMS ) * ( Max( ACS,Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) / RRS ) ) + FirstVNF_CPU_Server ) + CRS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUC * DS ) ) ,( ( MLU + MUM ) - Min( MUM ,DS ) ) ) * ( ( Min( RRSe ,( Min( ( MUM / Max( RCSe,MUC ) ) ,RRSe ) * ( CS + ( RCSe + ( RCSe - RCSe ) ) ) ) ) - ( CS - RCSe ) ) / Max( Max( RCSe,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + ( ( ARS - AMS ) / MRS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( RCSe - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( Min( Const ,FirstVNF_RAM ) * ACS ) + ( Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) - Const ) )", "choosing": "Min( ( CS / RMSe ) ,Max( ( MUM * ( ( MUR + ( ( ( RRSe - RRSe ) + MUC ) / ( DS / MUR ) ) ) / RMSe ) ),RCSe ) )", "obj1": 0.6680942184154176, "obj2": 0.2646759700439173}, {"determining": "( DDR - ( ( ARS / FirstVNF_RAM ) + ( FirstVNF_RAM + RRS ) ) )", "choosing": "( Min( ( ( RRSe - RRSe ) + ( MUR - Min( ( ( RCSe / MLU ) * Min( ( DS * RMSe ) ,RCSe ) ) ,( MUM * MUC ) ) ) ) ,( ( ( RCSe - DS ) / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ACS,FirstVNF_RAM ) / ( ACS - ( FirstVNF_RAM_Server * Min( FirstVNF_RAM ,( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) ) ) ) ,( Min( FirstVNF_Mem ,RRS ) - ( PN / FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - MUC ) + ( ( MUM - MLU ) + Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) * ACS ) + ( Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) - Const ) )", "choosing": "Min( ( CS / RMSe ) ,Max( ( MUM * ( ( MUR + ( ( ( RRSe - RRSe ) + MUC ) / ( DS / MUR ) ) ) / RMSe ) ),RCSe ) )", "obj1": 0.6680942184154176, "obj2": 0.2646759700439173}, {"determining": "( ( ( PN * PN ) / Min( Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ,MRS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( Min( DS ,RMSe ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) ,( RCSe / MUR ) )", "obj1": 0.7044967880085653, "obj2": 0.14919518277980906}, {"determining": "( ( FirstVNF_Mem + ( FirstVNF_Mem + Min( PN ,DDR ) ) ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - ( Min( CRS ,FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( Min( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) ,MLU ) * MUC ) ,( ( RRSe + MLU ) / RCSe ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.6980728051391863, "obj2": 0.21114758546783732}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.6766595289079229, "obj2": 0.21162579955440117}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - PN ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06206918034881139}, {"determining": "( Max( CRS,DDR ) - Max( CRS,DDR ) )", "choosing": "( Min( CS ,MUR ) + Max( ( MUM + MUR ),( ( Min( Max( Min( DS ,RRSe ),( DS / CS ) ) ,Max( MLU,( DS + RCSe ) ) ) / ( ( ( Min( RRSe ,RMSe ) / ( RMSe + MUM ) ) - MLU ) * MUR ) ) * RRSe ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12527271140761326}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( CRS - MDR ),Min( FirstVNF_CPU ,( ( AMS - ( ( MRS + Min( AMS ,FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ) * FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( Max( ( MLU / ( CS + ( MLU * Min( Max( MUR,MUC ) ,RRSe ) ) ) ),RCSe ) - RMSe ) )", "obj1": 0.8094218415417559, "obj2": 0.09626752419941922}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( Min( ( MUR - DS ) ,( CS / ( Min( MUC ,RRSe ) - CS ) ) ) - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08383760437265844}, {"determining": "( ( ( ( AMS - DDR ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) + BR ) - Min( MRS ,RRS ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * CS ) ) ) + MUM ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04560658611472505}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7044967880085653, "obj2": 0.14919518277980906}, {"determining": "( ( ( ( Max( Max( AMS,Min( FirstVNF_CPU ,Max( FirstVNF_CPU,DDR ) ) ),FirstVNF_Mem ) - DDR ) - Max( ( CRS - Const ),FirstVNF_Mem ) ) + CRS ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( ( ( DS - ( ( CS + ( ( MLU / MUC ) - MUM ) ) / Max( MUC,DS ) ) ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.9336188436830836, "obj2": 0.032926306841320946}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.7516059957173448, "obj2": 0.12527271140761326}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11558949063040223}, {"determining": "( ( ( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( CS / ( Max( MUC,( MLU / DS ) ) - ( DS / RMSe ) ) ) ,( MUM - ( RRSe + MUR ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04560658611472505}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9186295503211992, "obj2": 0.039861470842971446}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( PN,Max( FirstVNF_RAM_Server,AMS ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( Max( MUR,Max( ( CS + MUM ),( MLU - MUC ) ) ),Min( ( ( RMSe * CS ) - CS ) ,RRSe ) )", "obj1": 0.8479657387580299, "obj2": 0.07455662128591008}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10449965192844662}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.867237687366167, "obj2": 0.06581430288450957}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / DDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( ( CS * ( MUC + MUC ) ) / MUM ) ,MUR ) * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9507494646680942, "obj2": 0.02423984464614108}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( PN,Max( FirstVNF_RAM_Server,AMS ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( Max( MUR,Max( ( CS + MUM ),( MLU - MUC ) ) ),Min( ( ( RMSe * CS ) - CS ) ,RRSe ) )", "obj1": 0.8479657387580299, "obj2": 0.07455662128591008}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - AMS ) - Max( Max( Min( FirstVNF_Mem_Server ,PN ),( CRS + CRS ) ),Max( ( RRS / ( FirstVNF_RAM_Server - ( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( ( MUM / MUC ) * CS ) - ( MUM + MLU ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,Min( Max( MRS,( Min( FirstVNF_RAM ,AMS ) / Const ) ) ,FirstVNF_CPU_Server ) ) ) - Max( DDR,CRS ) ) - Min( FirstVNF_Mem ,( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ARS - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM + MLU ) - Min( MUM ,DS ) ) * MUM ) * ( Max( Min( RRSe ,RCSe ),( ( ( ( RCSe + DS ) / Min( RMSe ,RMSe ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04078645296014756}, {"determining": "( Min( DDR ,( ARS * BR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( Min( Min( MUM ,MUR ) ,RCSe ) + Min( MLU ,Max( RMSe,Max( Min( CS ,Min( MLU ,MUR ) ),MUC ) ) ) ) ) * ( MUR / MUR ) )", "obj1": 0.867237687366167, "obj2": 0.06581430288450957}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( CS / CS ) ,Max( RMSe,DS ) ) ) ,( MUM / RCSe ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351357}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( MUC ,RRSe ) - ( MUR - DS ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.017766055223910938}, {"determining": "( ( AMS - ARS ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),Min( Min( MUR ,( RRSe + MUC ) ) ,MUC ) ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12215571553131707}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RMSe + ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) )", "obj1": 0.7815845824411135, "obj2": 0.10973697897566259}, {"determining": "( ( ( Max( ARS,CRS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server - CRS ) + ( ( CRS / ( BR * FirstVNF_Mem_Server ) ) + RRS ) ) )", "choosing": "Min( ( RCSe - MLU ) ,( MUM + MUM ) )", "obj1": 0.8394004282655246, "obj2": 0.08024559190285732}, {"determining": "( ( ( MDR - ACS ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( ( MUM / CS ) + RMSe ) + MLU ) * RMSe ) - MUM ) ,( RMSe + MUC ) )", "obj1": 0.7794432548179872, "obj2": 0.11126125463202445}, {"determining": "( ( ( PN * PN ) / Max( MRS,ACS ) ) - Min( PN ,CRS ) )", "choosing": "Max( ( MUR - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,( ( MUR / MUM ) * ( MUC - MUR ) ) ) ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.027726689654212013}, {"determining": "( ( ( PN * PN ) + Max( Max( ( MDR / Min( BR ,ARS ) ),( FirstVNF_Mem - FirstVNF_CPU ) ),( AMS / RRS ) ) ) - Min( PN ,CRS ) )", "choosing": "Max( ( RRSe - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + ( Min( CS ,MLU ) + ( CS / RRSe ) ) ) ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12215571553131707}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351357}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( Min( MRS ,RRS ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( MUR - DS ) ,( CS / ( Min( MUC ,RRSe ) - CS ) ) ) ) ,Min( ( RRSe / ( MUR - MUR ) ) ,( Min( MLU ,Max( RMSe,Max( Min( MLU ,( MUM * MUR ) ),MUC ) ) ) + Min( Min( ( RRSe * RCSe ) ,MUR ) ,RCSe ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.08024559190285732}, {"determining": "( ( AMS - ( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( RCSe - MUC ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7987152034261242, "obj2": 0.100629924167468}, {"determining": "( Max( ( CRS - MDR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( ( RCSe + RMSe ),MUC ) - ( MLU + RMSe ) ) ) + ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) )", "obj1": 0.7751605995717344, "obj2": 0.11322783193007936}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( CRS - MDR ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( Min( RMSe ,( ( CS + RCSe ) - Min( ( RCSe - MLU ) ,RMSe ) ) ) - RMSe ) ) * MUC ) )", "obj1": 0.7815845824411135, "obj2": 0.10973697897566259}, {"determining": "( ( AMS - DDR ) - ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU / Const ) ) )", "choosing": "( ( ( MUM + RCSe ) * ( CS - RMSe ) ) + ( Max( Max( ( DS - MUR ),Min( ( MUR - CS ) ,MUM ) ),( MUC - ( Min( ( RRSe - DS ) ,MLU ) + MUM ) ) ) + ( MUM - MLU ) ) )", "obj1": 0.9400428265524625, "obj2": 0.029533656341369455}, {"determining": "( ( AMS - MDR ) - Max( ( BR + FirstVNF_CPU ),MRS ) )", "choosing": "( ( Max( ( ( Min( CS ,( RRSe - MUC ) ) * RRSe ) / MLU ),RCSe ) - DS ) * ( MUC - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.029533656341369455}, {"determining": "( ( ( PN * PN ) / ( FirstVNF_CPU_Server * ARS ) ) - Max( Min( FirstVNF_CPU ,DDR ),DDR ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( ( MLU + MUR ) ,CS ),( ( ( ( RMSe + DS ) / ( MUC / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8029978586723768, "obj2": 0.0990681794851054}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( ( RCSe / RRSe ) * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12328186985804794}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8029978586723768, "obj2": 0.0990681794851054}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( CRS - MDR ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( Min( RMSe ,( ( CS + RCSe ) - Min( ( RCSe - MLU ) ,RMSe ) ) ) - RMSe ) ) * MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.11322783193007936}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( MDR + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - RMSe ) ,MUM ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( MUC - ( CS + MUM ) ) ) ) ) + MUM ) ) )", "obj1": 0.6980728051391863, "obj2": 0.21114758546783732}, {"determining": "( ( ( PN * Min( ( ( MDR / ACS ) + ( ( ARS - AMS ) / MRS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) )", "choosing": "( ( Max( ( ( MUM - ( RCSe - RMSe ) ) / RMSe ),RCSe ) - RMSe ) * ( MUC - MUM ) )", "obj1": 0.987152034261242, "obj2": 0.006157678848088088}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * CS ) ) ) + MUM ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10107778959158592}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( ( Max( RCSe,( ( RRSe - DS ) - MUM ) ) / MLU ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) - CS ) ,RRSe ) )", "obj1": 0.9464668094218416, "obj2": 0.026112258184461425}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( Max( PN,DDR ) * FirstVNF_RAM ) ) - ( FirstVNF_RAM - ACS ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MLU * ( ( ( Min( ( MUM / ( MUC + DS ) ) ,MLU ) / MUM ) / RRSe ) + RCSe ) ) + Max( MUC,RCSe ) )", "obj1": 0.9700214132762313, "obj2": 0.017766055223910938}, {"determining": "( ( ( ( Min( ( BR * ( Const * BR ) ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - Max( FirstVNF_RAM,MDR ) ) ) - Min( FirstVNF_Mem ,( Max( BR,FirstVNF_CPU_Server ) * AMS ) ) ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( ( Max( RCSe,( ( RRSe - DS ) - MUM ) ) / MLU ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) - CS ) ,RRSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0020729588897943573}, {"determining": "( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ARS ,( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( ( ( MUM - Max( MUR,Max( DS,( Min( RRSe ,RMSe ) * RRSe ) ) ) ) * ( ( CS / MUM ) + ( ( Min( RMSe ,MUM ) - Min( ( RMSe - MUC ) ,MLU ) ) * MUM ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( Max( AMS,DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Min( ( ARS + FirstVNF_CPU ) ,RRS ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( CS / ( Min( MUC ,RRSe ) - CS ) ) ,( MUR - DS ) ) ) ,Min( ( RRSe / ( MUR - MUR ) ) ,( Min( MLU ,Max( RMSe,Max( Min( MLU ,( MUR * MUR ) ),MUC ) ) ) + ( Min( MUM ,MUR ) + RCSe ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10107778959158592}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) ) - ( ( MDR + ( ( FirstVNF_CPU_Server + MDR ) / FirstVNF_RAM ) ) + MRS ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) ) * ( Min( RCSe ,RMSe ) + Min( Min( MUR ,( RRSe + MUC ) ) ,MUC ) ) ) / DS ) + Max( MUR,RCSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0020729588897943573}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( DDR * PN ) ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) ) * ( Min( RCSe ,RMSe ) + Max( ( Min( MUM ,MUR ) / ( RRSe * RCSe ) ),( CS * DS ) ) ) ) / Min( RCSe ,Max( MUM,Min( Max( DS,RCSe ) ,RRSe ) ) ) ) + Max( MUR,RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9464668094218416, "obj2": 0.026112258184461425}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( RMSe - Max( ( MLU - CS ),( MLU + MUC ) ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( Min( BR ,Min( RRS ,Const ) ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_RAM + MDR ) - ( FirstVNF_CPU_Server / AMS ) ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0010364794448971786}, {"determining": "( ( Max( MDR,AMS ) * BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( Min( ( RMSe + RMSe ) ,MLU ) ,DS ) ) * ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( MUC - ( CS + MUR ) ) ) ) ) + MUM ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0010364794448971786}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) + MDR ) - ( FirstVNF_CPU_Server / AMS ) ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + ACS ) ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( MUC - CS ) / RMSe ) - DS ) ) ) * ( Min( RCSe ,( CS * Min( ( MUR - RMSe ) ,DS ) ) ) + Max( ( Min( MUM ,MUR ) / ( MUR * RCSe ) ),( CS * DS ) ) ) ) / Min( RCSe ,Max( RCSe,Min( CS ,RRSe ) ) ) ) + Max( MUR,RCSe ) )", "obj1": 0.9850107066381156, "obj2": 0.007176292792102603}, {"determining": "( ( Min( Max( RRS,DDR ) ,Min( ARS ,PN ) ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM - PN ) ) - ( FirstVNF_RAM + MDR ) ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( RCSe ,RMSe ) + Max( ( CS * DS ),( Min( Min( RMSe ,RMSe ) ,MUR ) / ( RRSe * RCSe ) ) ) ) * ( MUM - ( ( MLU - RCSe ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) ) ) / Min( Min( ( ( CS + MUM ) - CS ) ,MUC ) ,Max( RCSe,Min( CS ,RRSe ) ) ) ) + Max( MUR,RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( ( FirstVNF_Mem - DDR ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * RCSe ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9850107066381156, "obj2": 0.007176292792102603}, {"determining": "Min( ( Max( AMS,FirstVNF_RAM ) / ( ACS - ( FirstVNF_RAM_Server * Min( ( CRS + Const ) ,( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) ) ) ) ,( ( ( ( AMS + ( FirstVNF_RAM_Server - ( RRS / FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM_Server ) - RRS ) + Const ) )", "choosing": "( ( MUC - RCSe ) + ( ( Max( MUM,Min( RCSe ,( CS + MLU ) ) ) - MLU ) + Min( ( ( ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( RRS ,Const ) + ( Const - FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_RAM_Server / CRS ) ,Min( FirstVNF_RAM ,AMS ) ) ) ,( Max( MRS,FirstVNF_CPU ) + ( Min( PN ,FirstVNF_CPU ) + ( ( FirstVNF_CPU_Server * MRS ) - FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( Max( CS,Min( ( RMSe * RCSe ) ,MUR ) ) + ( MUM / MUM ) ),RCSe ) - MLU ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( AMS ,FirstVNF_CPU_Server ) / Min( Max( ARS,MRS ) ,Const ) ) ,Max( BR,FirstVNF_Mem ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( ( MUC / ( ( RCSe - ( MUR * ( DS / MUC ) ) ) - RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ACS,FirstVNF_RAM ) / ( BR - ACS ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( ( Max( AMS,FirstVNF_RAM ) / MRS ) * ARS ) ) )", "choosing": "( ( ( MUR + MUR ) - Max( MUM,( MUM * MLU ) ) ) + Min( RRSe ,Max( RCSe,Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_CPU_Server / Const ),( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) - DDR ) + FirstVNF_Mem ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,Max( RRS,ACS ) ) ) * Min( Min( ( ACS - AMS ) ,( CRS * ARS ) ) ,( DDR - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( MLU * ( Min( ( DS + DS ) ,DS ) / ( RRSe + MUM ) ) ) ,MLU ) * ( DS - Max( Max( ( DS / MLU ),MUM ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,RRS ) * CRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( ( RRSe - Min( MUR ,Max( RRSe,RCSe ) ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( DS ,( ( ( ( MUC - ( RRSe * RMSe ) ) + ( RRSe / Min( DS ,MUM ) ) ) + ( Max( RMSe,RMSe ) / MUR ) ) / RRSe ) ) * ( ( ( RMSe + ( ( ( RMSe + MUR ) * RCSe ) * MLU ) ) - DS ) * MUR ) ) ,( MUM - Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( MRS,Const ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( ( RCSe + MUC ) / ( CS + ( MUC + RRSe ) ) ) / ( ( MUR + CS ) + MUR ) ) ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_CPU_Server ) ,Min( ( CRS - FirstVNF_RAM_Server ) ,Min( ( Min( BR ,AMS ) * ( ( MRS * AMS ) - MDR ) ) ,MDR ) ) )", "choosing": "Min( ( Min( ( RMSe + MLU ) ,MUM ) * RCSe ) ,( RCSe / Max( MLU,( Min( DS ,( CS / CS ) ) * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),( BR + DDR ) ) )", "choosing": "( Max( MUR,CS ) + ( ( RMSe - ( MUR + MUR ) ) / ( ( Min( MUM ,( Max( ( MLU + MUR ),RCSe ) * MLU ) ) + MUC ) / ( RRSe + ( MUM * ( RMSe / ( RMSe - RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / ( BR * Const ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS - MUR ),Min( CS ,RMSe ) ) / ( Max( Min( RRSe ,( RRSe / DS ) ),MUM ) / ( RMSe + ( ( Min( RRSe ,Max( MLU,( MUC + MUC ) ) ) / MUR ) * ( ( ( DS * MUR ) + ( Min( RMSe ,RMSe ) / RCSe ) ) / MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + FirstVNF_RAM_Server ) + ( ( RRS * ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( AMS,FirstVNF_RAM ) / ( ACS - ( FirstVNF_RAM_Server * Min( ( CRS + Const ) ,( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) ) ) ) ,( ( ( ( AMS + ( FirstVNF_RAM_Server - ( RRS / FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM_Server ) - RRS ) + Const ) )", "choosing": "( ( MUC - RCSe ) + ( ( Max( MUM,Min( RCSe ,( CS + MLU ) ) ) - MLU ) + Min( ( ( ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR * FirstVNF_Mem ) * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( ( DS * Max( RRSe,CS ) ) - ( MUC - RRSe ) ) * Max( Max( DS,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ARS * Min( ARS ,Max( ( AMS - RRS ),FirstVNF_RAM_Server ) ) ),( FirstVNF_CPU + CRS ) ) / ( ( MRS * MRS ) * ( CRS + CRS ) ) ) - ( ACS + ( FirstVNF_CPU / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( RMSe - MUR ) ) ,( Max( MLU,Max( RMSe,( ( MUR / ( DS + MUM ) ) - RCSe ) ) ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( Min( FirstVNF_RAM ,DDR ) - Max( ( FirstVNF_CPU / ( Min( AMS ,MRS ) * MDR ) ),( AMS / ( FirstVNF_Mem - AMS ) ) ) ) - Max( MRS,RRS ) ) ) ,( ( ( Const * PN ) - ( FirstVNF_RAM_Server / PN ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( ( CS * MUC ) - MUC ) / ( Max( DS,RRSe ) * Max( Max( RRSe,( RRSe * RMSe ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + Min( CRS ,FirstVNF_CPU ) ) ,Min( ( RRS + Const ) ,( AMS * Const ) ) ) - ( ( ( ( MDR / MDR ) * FirstVNF_CPU ) * ( CRS - ( Min( Const ,FirstVNF_CPU ) * ( MDR / ( RRS + FirstVNF_Mem ) ) ) ) ) - RRS ) )", "choosing": "Max( ( RMSe - MUM ),( ( ( Min( RMSe ,( Max( RRSe,( MUR - RMSe ) ) / CS ) ) - RMSe ) - MUC ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Max( ( ( DS * MUC ) - Min( ( MUR / MUC ) ,CS ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( ( CS + MUM ) - MUC ) ) ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_RAM ,AMS ) ,( FirstVNF_RAM_Server / CRS ) ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( Min( PN ,FirstVNF_CPU ) + ( MRS * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,( PN / MRS ) ) ) ,( ( FirstVNF_RAM_Server - BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - ( ( ( RCSe / RMSe ) + MLU ) + Min( RCSe ,MUM ) ) ) ) ,( ( DS / DS ) - MUR ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * CRS ) - ( FirstVNF_Mem + PN ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU + MDR ) - ( PN + FirstVNF_Mem ) ) * CRS ) - Min( FirstVNF_RAM ,( Min( Max( FirstVNF_Mem_Server,( ( ( MDR / FirstVNF_RAM ) + ARS ) / MRS ) ) ,FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUC ,MUC ) * Max( MUR,( Min( ( ( CS - RCSe ) - Min( MLU ,( MUC - MUR ) ) ) ,MUC ) / Max( ( MUM / RRSe ),RRSe ) ) ) ) + ( ( DS + MUC ) / Max( RCSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( BR - ( MRS * ( BR * DDR ) ) ) * ( Const * ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ),CRS ) - ( ( ARS * RRS ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUM * ( MUM * Min( ( ( CS * Max( DS,MUM ) ) / MUM ) ,MUR ) ) ) + ( MUM * MUR ) ),Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + FirstVNF_RAM_Server ) + ( ( RRS * ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - ( ( ARS / FirstVNF_RAM ) + ( FirstVNF_RAM + RRS ) ) )", "choosing": "( Min( ( ( RRSe - RRSe ) + ( MUR - Min( ( ( RCSe / MLU ) * Min( ( DS * RMSe ) ,RCSe ) ) ,( MUM * MUC ) ) ) ) ,( ( ( RCSe - DS ) / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + CRS ),( ARS - FirstVNF_CPU ) ) / ( FirstVNF_CPU / ( CRS + DDR ) ) ) - ( ACS + ( ( BR * FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( Min( MLU ,Max( RMSe,Max( ( RMSe / DS ),MUC ) ) ) + Min( Min( MUM ,RRSe ) ,RCSe ) ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem ) / Max( RRS,DDR ) ) ,Min( ( ( FirstVNF_RAM + DDR ) - Min( BR ,DDR ) ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,Min( ( ( CS + CS ) / RRSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU * ( ( PN + RRS ) / FirstVNF_Mem_Server ) ),Min( PN ,ACS ) ) - ( ( MRS / AMS ) / ( FirstVNF_CPU_Server + RRS ) ) )", "choosing": "Max( ( RMSe - Max( ( MLU - CS ),( MLU + MUC ) ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( ACS / RRS ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS + RRS ) - ( MRS / AMS ) ) - ( FirstVNF_RAM * CRS ) )", "choosing": "Min( ( RRSe / ( Max( Min( MUC ,CS ),MUM ) + Min( MUM ,MLU ) ) ) ,( RCSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,( PN / MRS ) ) ) ,( ( FirstVNF_RAM_Server - BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - ( ( ARS / FirstVNF_RAM ) + ( FirstVNF_RAM + RRS ) ) )", "choosing": "( Min( ( ( RRSe - RRSe ) + ( MUR - Min( ( ( RCSe / MLU ) * Min( ( DS * RMSe ) ,RCSe ) ) ,( MUM * MUC ) ) ) ) ,( ( ( RCSe - DS ) / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.6638115631691649, "obj2": 0.21253206344280148}, {"determining": "( ( FirstVNF_Mem + ( FirstVNF_Mem + Min( PN ,DDR ) ) ) - Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - ( Min( CRS ,FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( Min( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) ,MLU ) * MUC ) ,( ( RRSe + MLU ) / RCSe ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.6980728051391863, "obj2": 0.21114758546783732}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.15862825114162066}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Min( MRS ,( FirstVNF_CPU_Server * ( FirstVNF_RAM + PN ) ) ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU - ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS / ( MUR - MUC ) ) / Max( Max( Min( RRSe ,( MUC - MLU ) ),( Min( MUR ,MUM ) / MUC ) ),( RRSe - Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) ) / MUM ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7494646680942184, "obj2": 0.12610626052540352}, {"determining": "( ( DDR - DDR ) - ( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * Max( FirstVNF_RAM,MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU ) )", "choosing": "Min( Min( RMSe ,Min( Max( ( ( CS * RMSe ) - DS ),DS ) ,( CS / CS ) ) ) ,Min( MUR ,Max( RCSe,RRSe ) ) )", "obj1": 0.8843683083511777, "obj2": 0.05543512976182435}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + MUM ),( MLU - MUC ) ) ),Min( ( ( RMSe * CS ) - CS ) ,RRSe ) )", "obj1": 0.7044967880085653, "obj2": 0.14919518277980906}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( Min( ( MUR - DS ) ,( CS / ( Min( MUC ,RRSe ) - CS ) ) ) - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08383760437265844}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09626648854953507}, {"determining": "( ( ( PN * PN ) / Min( Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ,MRS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( Min( DS ,RMSe ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) ,( RCSe / MUR ) )", "obj1": 0.7044967880085653, "obj2": 0.14919518277980906}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.6766595289079229, "obj2": 0.21162579955440117}, {"determining": "( Max( Min( FirstVNF_CPU ,ACS ),FirstVNF_Mem_Server ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( Max( FirstVNF_RAM_Server,AMS ),PN ) * ( ( AMS + ( BR / ACS ) ) * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( Max( ( MUM / ( Max( MUR,( ( ( DS - MLU ) + MUC ) / RMSe ) ) / ( CS * RRSe ) ) ),Max( ( CS + MUM ),( MLU - RCSe ) ) ),Min( ( CS - ( RMSe * CS ) ) ,RRSe ) )", "obj1": 0.8479657387580299, "obj2": 0.07447578608042749}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - PN ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06206918034881139}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + ( RRSe + MLU ) ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.8629550321199143, "obj2": 0.067968514511997}, {"determining": "( ( ( FirstVNF_CPU * PN ) / Min( MRS ,( RRS * CRS ) ) ) - Min( RRS ,( PN * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( Max( DS,DS ) * MUM ) + RCSe ),( CS - ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( Max( ( RMSe / CS ),( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) ) ) + ( Max( RMSe,MUM ) + ( Max( RRSe,( ( DS * RRSe ) / ( MUR * MLU ) ) ) + Max( DS,( MUR - Min( CS ,Max( MUR,( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10432976869921111}, {"determining": "( ( ( ( AMS - DDR ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) + BR ) - Min( MRS ,RRS ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * CS ) ) ) + MUM ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04560658611472505}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / DDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( ( CS * ( MUC + MUC ) ) / MUM ) ,MUR ) * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9507494646680942, "obj2": 0.02423984464614108}, {"determining": "( ( ( ( Max( Max( AMS,Min( FirstVNF_CPU ,Max( FirstVNF_CPU,DDR ) ) ),FirstVNF_Mem ) - DDR ) - Max( ( CRS - Const ),FirstVNF_Mem ) ) + CRS ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( ( ( DS - ( ( CS + ( ( MLU / MUC ) - MUM ) ) / Max( MUC,DS ) ) ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.9336188436830836, "obj2": 0.032926306841320946}, {"determining": "( ( ( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( CS / ( Max( MUC,( MLU / DS ) ) - ( DS / RMSe ) ) ) ,( MUM - ( RRSe + MUR ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04560658611472505}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( RRSe - RRSe ) + ( MUR - Min( ( ( RCSe / MLU ) * Min( ( DS * RMSe ) ,RCSe ) ) ,( MUM * MUC ) ) ) ) ,( ( ( RCSe - DS ) / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351357}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( MUC ,RRSe ) - ( MUR - DS ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.017766055223910938}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( ( RMSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03564567345901551}, {"determining": "( ( AMS * DDR ) - ( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( BR ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( RRSe / ( MUR - MUR ) ) ,Min( ( MLU * Max( RMSe,Max( Min( MLU ,( MUM * MUR ) ),( MUC - ( CS + MUM ) ) ) ) ) ,Min( Min( MUM ,MUR ) ,( Max( ( Min( RCSe ,MUC ) * RMSe ),RRSe ) * DS ) ) ) ) )", "obj1": 0.9122055674518201, "obj2": 0.043957322580812246}, {"determining": "( ( AMS * DDR ) - Min( Max( ( RRS / CRS ),Max( CRS,FirstVNF_RAM ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUR,Min( ( ( ( DS + MUR ) + ( MUM - MUM ) ) + RMSe ) ,CS ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.037846105089607646}, {"determining": "( Max( MRS,( AMS / FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( Min( MUM ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07774815509418347}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( CRS - MDR ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( Min( RMSe ,( ( CS + RCSe ) - Min( ( RCSe - MLU ) ,RMSe ) ) ) - RMSe ) ) * MUC ) )", "obj1": 0.7815845824411135, "obj2": 0.10973697897566259}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,Min( Max( MRS,( Min( FirstVNF_RAM ,AMS ) / Const ) ) ,FirstVNF_CPU_Server ) ) ) - Max( DDR,CRS ) ) - Min( FirstVNF_Mem ,( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ARS - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM + MLU ) - Min( MUM ,DS ) ) * MUM ) * ( Max( Min( RRSe ,RCSe ),( ( ( ( RCSe + DS ) / Min( RMSe ,RMSe ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04078645296014756}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - AMS ) - Max( Max( Min( FirstVNF_Mem_Server ,PN ),( CRS + CRS ) ),Max( ( RRS / ( FirstVNF_RAM_Server - ( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( ( MUM / MUC ) * CS ) - ( MUM + MLU ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( ( MDR - ACS ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( ( MUM / CS ) + RMSe ) + MLU ) * RMSe ) - MUM ) ,( RMSe + MUC ) )", "obj1": 0.7794432548179872, "obj2": 0.11126125463202445}, {"determining": "( ( ( PN * PN ) / Max( MRS,ACS ) ) - Min( PN ,CRS ) )", "choosing": "Max( ( MUR - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,( ( MUR / MUM ) * ( MUC - MUR ) ) ) ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.027726689654212013}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9186295503211992, "obj2": 0.039861470842971446}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - ( MUR + ( ( ( RRSe - RRSe ) + MUC ) / ( DS / MUR ) ) ) ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09706108923606527}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Min( MRS ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_RAM + PN ) ) ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU - ( MDR * RRS ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS / ( MUR - MUC ) ) / Max( Max( ( DS - MUC ),MLU ),( RRSe - Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) ) / MUM ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7601713062098501, "obj2": 0.12040203753382982}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( CS / CS ) ,Max( RMSe,DS ) ) ) ,( MUM / RCSe ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351357}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RMSe + ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) )", "obj1": 0.7815845824411135, "obj2": 0.10973697897566259}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11558949063040223}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.867237687366167, "obj2": 0.06581430288450957}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( ACS ,MRS ) ) - Max( CRS,DDR ) ) ) * Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Max( ( ( ARS * Min( ( ( FirstVNF_Mem_Server / Const ) / CRS ) ,BR ) ) - ACS ),BR ) ) )", "choosing": "( ( DS / MLU ) + ( Min( DS ,MLU ) + Max( ( MUR - ( MUC / DS ) ),( ( MUC / ( MUM + ( RMSe / MLU ) ) ) / ( MUM - DS ) ) ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11450487707414407}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( Min( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) ,MLU ) * MUC ) ,( ( RRSe + MLU ) / RCSe ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.867237687366167, "obj2": 0.06581430288450957}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_Mem / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( MUM + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11558949063040223}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Min( MRS ,( FirstVNF_CPU_Server * ( FirstVNF_RAM + PN ) ) ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU - ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS / ( MUR - MUC ) ) / Max( Max( Min( RRSe ,( MUC - MLU ) ),( Min( MUR ,MUM ) / MUC ) ),( RRSe - Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) ) / MUM ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7601713062098501, "obj2": 0.12040203753382982}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( CS / ( MUR - MUC ) ) / Max( Max( Min( RRSe ,( MUC - MLU ) ),( Min( MUR ,MUM ) / MUC ) ),( RRSe - Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) ) / MUM ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RMSe ) ) ) ) + ( MUC - MLU ) ) )", "obj1": 0.9400428265524625, "obj2": 0.029533656341369455}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * CS ) ) ) + MUM ) ) )", "obj1": 0.7987152034261242, "obj2": 0.1001712740451242}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - AMS ) - Max( Max( Min( FirstVNF_Mem_Server ,PN ),( CRS + CRS ) ),Max( ( RRS / ( FirstVNF_RAM_Server - ( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( ( MUM / MUC ) * CS ) - ( MUM + MLU ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( AMS - DDR ) - ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU / Const ) ) )", "choosing": "( ( ( MUM + RCSe ) * ( CS - RMSe ) ) + ( Max( Max( ( DS - MUR ),Min( ( MUR - CS ) ,MUM ) ),( MUC - ( Min( ( RRSe - DS ) ,MLU ) + MUM ) ) ) + ( MUM - MLU ) ) )", "obj1": 0.9400428265524625, "obj2": 0.029533656341369455}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( PN * ( ( MRS * FirstVNF_RAM ) - MRS ) ) / Min( MRS ,FirstVNF_Mem ) ) - Max( FirstVNF_Mem,DDR ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( Max( MUM,RMSe ),RMSe ) + RMSe ) - CS ) ) + ( Min( RRSe ,MLU ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.841541755888651, "obj2": 0.07891197874031525}, {"determining": "( ( ( PN * PN ) / ( FirstVNF_CPU_Server * ARS ) ) - Max( Min( FirstVNF_CPU ,DDR ),DDR ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( ( MLU + MUR ) ,CS ),( ( ( ( RMSe + DS ) / ( MUC / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8029978586723768, "obj2": 0.0990681794851054}, {"determining": "( ( ( PN * Min( ( ( MDR / ACS ) + ( ( ARS - AMS ) / MRS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) )", "choosing": "( ( Max( ( ( MUM - ( RCSe - RMSe ) ) / RMSe ),RCSe ) - RMSe ) * ( MUC - MUM ) )", "obj1": 0.987152034261242, "obj2": 0.006157678848088088}, {"determining": "( ( AMS - ARS ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( RRSe - RRSe ) + ( MUR - Min( ( ( RCSe / MLU ) * Min( ( DS * RMSe ) ,RCSe ) ) ,( MUM * MUC ) ) ) ) ,( ( ( RCSe - DS ) / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( Max( ( CRS - MDR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( ( RCSe + RMSe ),MUC ) - ( MLU + RMSe ) ) ) + ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) )", "obj1": 0.7751605995717344, "obj2": 0.11322783193007936}, {"determining": "( Max( AMS,DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Min( ( ARS + FirstVNF_CPU ) ,RRS ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( CS / ( Min( MUC ,RRSe ) - CS ) ) ,( MUR - DS ) ) ) ,Min( ( RRSe / ( MUR - MUR ) ) ,( Min( MLU ,Max( RMSe,Max( Min( MLU ,( MUR * MUR ) ),MUC ) ) ) + ( Min( MUM ,MUR ) + RCSe ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10107778959158592}, {"determining": "Min( ( Max( AMS,FirstVNF_RAM ) / ( ACS - ( FirstVNF_RAM_Server * Min( ( CRS + Const ) ,( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) ) ) ) ,( Min( FirstVNF_Mem ,RRS ) - ( ( AMS / FirstVNF_RAM ) * ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( MUR + ( ( MUM - MLU ) + Min( ( ( ( RRSe / Max( ( RCSe - RMSe ),( CS / RRSe ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( Max( ( MLU / RMSe ),RCSe ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7580299785867237, "obj2": 0.12184055910907218}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Max( Max( Min( ( Max( MDR,AMS ) * BR ) ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( MUR,( DS - ( MUC - ( CS + MUR ) ) ) ),Min( ( ( ( Max( RCSe,( ( RRSe - DS ) - MUM ) ) / MLU ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) - CS ) ,RRSe ) )", "obj1": 0.9464668094218416, "obj2": 0.026112258184461425}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - RMSe ) ,MUM ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) / ( DS - ( MUC - ( CS + MUM ) ) ) ) ) + MUM ) ) )", "obj1": 0.9700214132762313, "obj2": 0.017766055223910938}, {"determining": "( ( ( Max( ARS,CRS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server - CRS ) + ( ( CRS / ( BR * FirstVNF_Mem_Server ) ) + RRS ) ) )", "choosing": "Min( ( RCSe - MLU ) ,( MUM + MUM ) )", "obj1": 0.8394004282655246, "obj2": 0.08024559190285732}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( CRS - MDR ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( Min( RMSe ,( ( CS + RCSe ) - Min( ( RCSe - MLU ) ,RMSe ) ) ) - RMSe ) ) * MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.11322783193007936}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8029978586723768, "obj2": 0.0990681794851054}, {"determining": "( ( AMS - ARS ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),Min( Min( MUR ,( RRSe + MUC ) ) ,MUC ) ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * CS ) ) ) + MUM ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10107778959158592}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - PN ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( ( RCSe / RRSe ) * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12328186985804794}, {"determining": "( Max( CRS,DDR ) - Max( CRS,DDR ) )", "choosing": "( Min( CS ,MUR ) + Max( ( MUM + MUR ),( ( Min( Max( Min( DS ,RRSe ),( DS / CS ) ) ,Max( MLU,( DS + RCSe ) ) ) / ( ( ( Min( RRSe ,RMSe ) / ( RMSe + MUM ) ) - MLU ) * MUR ) ) * RRSe ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12527271140761326}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( ( Max( RCSe,( ( RRSe - DS ) - MUM ) ) / MLU ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) - CS ) ,RRSe ) )", "obj1": 0.9464668094218416, "obj2": 0.026112258184461425}, {"determining": "( ( AMS - MDR ) - Max( ( BR + FirstVNF_CPU ),MRS ) )", "choosing": "( ( Max( ( ( Min( CS ,( RRSe - MUC ) ) * RRSe ) / MLU ),RCSe ) - DS ) * ( MUC - MUM ) )", "obj1": 0.9935760171306209, "obj2": 0.0028086203074805115}, {"determining": "( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ARS ,( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( ( ( MUM - Max( MUR,Max( DS,( Min( RRSe ,RMSe ) * RRSe ) ) ) ) * ( ( CS / MUM ) + ( ( Min( RMSe ,MUM ) - Min( ( RMSe - MUC ) ,MLU ) ) * MUM ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( ( RCSe / RRSe ) * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12328186985804794}, {"determining": "( ( ( PN * PN ) + Max( Max( ( MDR / Min( BR ,ARS ) ),( FirstVNF_Mem - FirstVNF_CPU ) ),( AMS / RRS ) ) ) - Min( PN ,CRS ) )", "choosing": "Max( ( RRSe - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + ( Min( CS ,MLU ) + ( CS / RRSe ) ) ) ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12215571553131707}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( RMSe - Max( ( MLU - CS ),( MLU + MUC ) ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( Min( BR ,Min( RRS ,Const ) ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_RAM + MDR ) - ( FirstVNF_CPU_Server / AMS ) ) ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0010364794448971786}, {"determining": "( ( ( ( AMS - DDR ) - ( ( CRS - Const ) + ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / Min( FirstVNF_CPU ,( ( RRS * AMS ) / AMS ) ) ) ) ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( Min( MUC ,MUC ) * Max( MUR,( Min( MUM ,MUC ) / Max( ( MUM / RRSe ),RRSe ) ) ) ) + ( ( DS + MUC ) / Max( RCSe,DS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0010364794448971786}, {"determining": "( ( ( ( Min( ( BR * ( Const * BR ) ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - Max( FirstVNF_RAM,MDR ) ) ) - Min( FirstVNF_Mem ,( Max( BR,FirstVNF_CPU_Server ) * AMS ) ) ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( ( Max( RCSe,( ( RRSe - DS ) - MUM ) ) / MLU ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) - CS ) ,RRSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0020729588897943573}, {"determining": "( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ARS ,( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( ( ( MUM - Max( MUR,Max( DS,( Min( RRSe ,RMSe ) * RRSe ) ) ) ) * ( ( CS / MUM ) + ( ( Min( RMSe ,MUM ) - Min( ( RMSe - MUC ) ,MLU ) ) * MUM ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) + MDR ) - ( FirstVNF_CPU_Server / AMS ) ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + ACS ) ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( MUC - CS ) / RMSe ) - DS ) ) ) * ( Min( RCSe ,( CS * Min( ( MUR - RMSe ) ,DS ) ) ) + Max( ( Min( MUM ,MUR ) / ( MUR * RCSe ) ),( CS * DS ) ) ) ) / Min( RCSe ,Max( RCSe,Min( CS ,RRSe ) ) ) ) + Max( MUR,RCSe ) )", "obj1": 0.9850107066381156, "obj2": 0.007176292792102603}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) ) - MDR )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) ) * ( Min( RCSe ,RMSe ) + Min( Min( MUR ,( RRSe + MUC ) ) ,MUC ) ) ) / DS ) + Max( MUR,RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( AMS - ( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( RCSe - MUC ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( Min( MRS ,RRS ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( MUR - DS ) ,( CS / ( Min( MUC ,RRSe ) - CS ) ) ) ) ,Min( ( Min( ( DS + DS ) ,DS ) / ( MUR - MUR ) ) ,( Min( MLU ,Max( RMSe,Max( Min( MLU ,( MUM * MUR ) ),MUC ) ) ) + Min( Min( ( RRSe * RCSe ) ,MUR ) ,RCSe ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.08024559190285732}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) )", "choosing": "Min( ( CS / ( Max( MUC,( MLU / DS ) ) - ( Min( RRSe ,CS ) / RMSe ) ) ) ,( MUM - Max( RRSe,MUR ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12527271140761326}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) ) - ( ( MDR + ( ( FirstVNF_CPU_Server + MDR ) / FirstVNF_RAM ) ) + MRS ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) ) * ( Min( RCSe ,RMSe ) + Min( Min( MUR ,( RRSe + MUC ) ) ,MUC ) ) ) / DS ) + Max( MUR,RCSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0020729588897943573}, {"determining": "( ( AMS - MDR ) - Max( ( BR + FirstVNF_CPU ),MRS ) )", "choosing": "( ( Max( ( ( Min( CS ,( RRSe - MUC ) ) * RRSe ) / MLU ),RCSe ) - DS ) * ( MUC - MUM ) )", "obj1": 0.9935760171306209, "obj2": 0.0028086203074805115}, {"determining": "( ( ( ( RRS - FirstVNF_RAM ) / RRS ) / ( MDR + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( MUC ,RRSe ) - ( MUR - DS ) ) ) )", "obj1": 0.6980728051391863, "obj2": 0.21114758546783732}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12215571553131707}, {"determining": "( ( Min( ( FirstVNF_Mem - DDR ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * RCSe ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9850107066381156, "obj2": 0.007176292792102603}, {"determining": "( ( AMS - ( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( RCSe - MUC ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "Min( ( Max( ACS,FirstVNF_RAM ) / ( ACS - ( FirstVNF_RAM_Server * Min( FirstVNF_RAM ,( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) ) ) ) ,( Min( FirstVNF_Mem ,RRS ) - ( PN / FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - MUC ) + ( ( MUM - MLU ) + Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( AMS,FirstVNF_RAM ) / ( ACS - ( FirstVNF_RAM_Server * Min( ( CRS + Const ) ,( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) ) ) ) ,( ( ( ( AMS + ( FirstVNF_RAM_Server - ( RRS / FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM_Server ) - RRS ) + Const ) )", "choosing": "( ( MUC - RCSe ) + ( ( Max( MUM,Min( RCSe ,( CS + MLU ) ) ) - MLU ) + Min( ( ( ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( RRS ,Const ) + ( Const - FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_RAM_Server / CRS ) ,Min( FirstVNF_RAM ,AMS ) ) ) ,( Max( MRS,FirstVNF_CPU ) + ( Min( PN ,FirstVNF_CPU ) + ( ( FirstVNF_CPU_Server * MRS ) - FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( Max( CS,Min( ( RMSe * RCSe ) ,MUR ) ) + ( MUM / MUM ) ),RCSe ) - MLU ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( AMS ,FirstVNF_CPU_Server ) / Min( Max( ARS,MRS ) ,Const ) ) ,Max( BR,FirstVNF_Mem ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( ( MUC / ( ( RCSe - ( MUR * ( DS / MUC ) ) ) - RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ACS,FirstVNF_RAM ) / ( BR - ACS ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( ( Max( AMS,FirstVNF_RAM ) / MRS ) * ARS ) ) )", "choosing": "( ( ( MUR + MUR ) - Max( MUM,( MUM * MLU ) ) ) + Min( RRSe ,Max( RCSe,Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_CPU_Server / Const ),( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) - DDR ) + FirstVNF_Mem ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,Max( RRS,ACS ) ) ) * Min( Min( ( ACS - AMS ) ,( CRS * ARS ) ) ,( DDR - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( MLU * ( Min( ( DS + DS ) ,DS ) / ( RRSe + MUM ) ) ) ,MLU ) * ( DS - Max( Max( ( DS / MLU ),MUM ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,RRS ) * CRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( ( RRSe - Min( MUR ,Max( RRSe,RCSe ) ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( DS ,( ( ( ( MUC - ( RRSe * RMSe ) ) + ( RRSe / Min( DS ,MUM ) ) ) + ( Max( RMSe,RMSe ) / MUR ) ) / RRSe ) ) * ( ( ( RMSe + ( ( ( RMSe + MUR ) * RCSe ) * MLU ) ) - DS ) * MUR ) ) ,( MUM - Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( MRS,Const ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( ( RCSe + MUC ) / ( CS + ( MUC + RRSe ) ) ) / ( ( MUR + CS ) + MUR ) ) ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_CPU_Server ) ,Min( ( CRS - FirstVNF_RAM_Server ) ,Min( ( Min( BR ,AMS ) * ( ( MRS * AMS ) - MDR ) ) ,MDR ) ) )", "choosing": "Min( ( Min( ( RMSe + MLU ) ,MUM ) * RCSe ) ,( RCSe / Max( MLU,( Min( DS ,( CS / CS ) ) * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),( BR + DDR ) ) )", "choosing": "( Max( MUR,CS ) + ( ( RMSe - ( MUR + MUR ) ) / ( ( Min( MUM ,( Max( ( MLU + MUR ),RCSe ) * MLU ) ) + MUC ) / ( RRSe + ( MUM * ( RMSe / ( RMSe - RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / ( BR * Const ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( CS - MUR ),Min( CS ,RMSe ) ) / ( Max( Min( RRSe ,( RRSe / DS ) ),MUM ) / ( RMSe + ( ( Min( RRSe ,Max( MLU,( MUC + MUC ) ) ) / MUR ) * ( ( ( DS * MUR ) + ( Min( RMSe ,RMSe ) / RCSe ) ) / MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + FirstVNF_RAM_Server ) + ( ( RRS * ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ARS ,( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( ( ( MUM - Max( MUR,Max( DS,( Min( RRSe ,RMSe ) * RRSe ) ) ) ) * ( ( CS / MUM ) + ( ( Min( RMSe ,MUM ) - Min( ( RMSe - MUC ) ,MLU ) ) * MUM ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,( PN / MRS ) ) ) ,( ( FirstVNF_RAM_Server - BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( MUC - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.6638115631691649, "obj2": 0.21253206344280148}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - ( DS - ( MUC - ( CS + MUR ) ) ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.20979029547545777}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( ( Max( RCSe,( ( RRSe - DS ) - MUM ) ) / MLU ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) - CS ) ,RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.15862825114162066}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - PN ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( ( RCSe / RRSe ) * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7473233404710921, "obj2": 0.1270451193587748}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server - CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * ( ( RRS - ( AMS / FirstVNF_CPU ) ) + ( ACS / FirstVNF_RAM_Server ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( CS / ( Max( MUC,( MLU / DS ) ) - ( Min( RRSe ,CS ) / RMSe ) ) ) ,( MUM - Max( RRSe,MUR ) ) )", "obj1": 0.8201284796573876, "obj2": 0.09044157461274759}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( DDR,( Max( MRS,( AMS / FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + MUM ),( MLU - MUC ) ) ),Min( ( ( RMSe * CS ) - CS ) ,Max( ( ( ( CS * MLU ) - CS ) - CS ),( Min( MUM ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) - CS ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14539795468847896}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + MUM ),( MLU - MUC ) ) ),Min( ( ( RMSe * CS ) - CS ) ,RRSe ) )", "obj1": 0.715203426124197, "obj2": 0.14539795468847896}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.15862825114162066}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( Min( ( MUR - DS ) ,( CS / ( Min( MUC ,RRSe ) - CS ) ) ) - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08383760437265844}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.8843683083511777, "obj2": 0.05543512976182435}, {"determining": "( ( ( ( AMS - DDR ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) + BR ) - Min( MRS ,RRS ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * CS ) ) ) + MUM ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04560658611472505}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RRSe - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( Min( CS ,MLU ) ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.14919518277980906}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( MUC ,RRSe ) - ( MUR - ( ( MLU + Min( DS ,MLU ) ) - CS ) ) ) ) )", "obj1": 0.860813704496788, "obj2": 0.06937889248687885}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,MUR ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8822269807280514, "obj2": 0.0582741392789921}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( RCSe - MUC ),Min( ( ( CS * RMSe ) - CS ) ,( ( ( CS / ( MUR - MUC ) ) / Max( Max( Min( RRSe ,( MUC - MLU ) ),( Min( MUR ,MUM ) / MUC ) ),( RRSe - Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) ) / MUM ) ) )", "obj1": 0.9464668094218416, "obj2": 0.023619970541677138}, {"determining": "( ( ( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) + BR ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( CS / ( Max( MUC,( MLU / DS ) ) - ( DS / RMSe ) ) ) ,( MUM - ( RRSe + MUR ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04560658611472505}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.6766595289079229, "obj2": 0.21162579955440117}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( RMSe + DS ) + MLU ) * RMSe ) - MUM ) ,Max( RRSe,MUR ) )", "obj1": 0.7837259100642399, "obj2": 0.10902548030604077}, {"determining": "( ( ( FirstVNF_CPU * PN ) / Min( MRS ,( RRS * CRS ) ) ) - Min( RRS ,( PN * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( Max( DS,DS ) * MUM ) + RCSe ),( CS - ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( Max( ( RMSe / CS ),( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) ) ) + ( Max( RMSe,MUM ) + ( Max( RRSe,( ( DS * RRSe ) / ( MUR * MLU ) ) ) + Max( DS,( MUR - Min( CS ,Max( MUR,( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10432976869921111}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( MUC ,RRSe ) - ( MUR - DS ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.017766055223910938}, {"determining": "( ( DDR - AMS ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( PN,Max( FirstVNF_RAM_Server,AMS ) ) * ( ( FirstVNF_RAM + ( FirstVNF_RAM / ACS ) ) * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUM + ( MUM / RRSe ) ) - ( ( RMSe + MLU ) - CS ) ) + Min( DS ,MUR ) )", "obj1": 0.8479657387580299, "obj2": 0.07447578608042749}, {"determining": "( ( DDR - DDR ) - ( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * Max( FirstVNF_RAM,MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU ) )", "choosing": "Min( Min( RMSe ,Min( Max( ( ( CS * RMSe ) - DS ),DS ) ,( CS / CS ) ) ) ,Min( MUR ,Max( RCSe,RRSe ) ) )", "obj1": 0.8843683083511777, "obj2": 0.05543512976182435}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( MUM - MUR ) + ( ( Min( RRSe ,Max( MLU,( MUC + MUC ) ) ) / MUR ) * ( ( ( DS * MUR ) + ( Min( RMSe ,RMSe ) / RCSe ) ) / MLU ) ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * CS ) ) ) + MUM ) ) )", "obj1": 0.7644539614561028, "obj2": 0.11711339779601232}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( RRS / ( FirstVNF_RAM_Server - ( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( MUM - RMSe ) ) * MUC ) )", "obj1": 0.867237687366167, "obj2": 0.0652889390483314}, {"determining": "( ( ( PN * PN ) / Max( MRS,ACS ) ) - Min( PN ,CRS ) )", "choosing": "Max( ( MUR - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,( ( MUR / MUM ) * ( MUC - MUR ) ) ) ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.027726689654212013}, {"determining": "( Max( ( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / FirstVNF_Mem ) - ( ( DDR / FirstVNF_RAM_Server ) * Const ) ) ,Min( FirstVNF_CPU ,MDR ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( Min( PN ,PN ) / Min( MRS ,ACS ) ) - Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,Min( ( ( DS / RRSe ) / Max( MLU,( ( ( RMSe + MLU ) + ( MLU * MUC ) ) * Max( RCSe,RCSe ) ) ) ) ,( DS + MUC ) ) ) + ( RCSe / Max( MUC,DS ) ) )", "obj1": 0.9550321199143469, "obj2": 0.02189062093537176}, {"determining": "( ( ( ( Max( Max( AMS,Min( FirstVNF_CPU ,Max( FirstVNF_CPU,DDR ) ) ),FirstVNF_Mem ) - DDR ) - Max( ( CRS - Const ),FirstVNF_Mem ) ) + CRS ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( ( ( DS - ( ( CS + ( ( MLU / MUC ) - MUM ) ) / Max( MUC,DS ) ) ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.9336188436830836, "obj2": 0.032926306841320946}, {"determining": "( ( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * ( ( RRS - ( AMS / FirstVNF_CPU ) ) + FirstVNF_Mem ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,CS )", "obj1": 0.8629550321199143, "obj2": 0.06780940866303861}, {"determining": "( ( DDR - AMS ) - ( FirstVNF_CPU + ( Max( ( FirstVNF_RAM + Max( AMS,FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC - RCSe ) + ( ( Max( MUM,Min( RCSe ,( CS + MLU ) ) ) - ( MUR + RRSe ) ) + Min( ( ( ( DS / MUM ) - ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) ) + CS ) ,MLU ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351357}, {"determining": "( Max( Min( FirstVNF_CPU ,ACS ),FirstVNF_Mem_Server ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( Max( FirstVNF_RAM_Server,AMS ),PN ) * ( ( AMS + ( BR / ACS ) ) * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( Max( ( MUM / ( Max( MUR,( ( ( DS - MLU ) + MUC ) / RMSe ) ) / ( CS * RRSe ) ) ),Max( ( CS + MUM ),( MLU - RCSe ) ) ),Min( ( CS - ( RMSe * CS ) ) ,RRSe ) )", "obj1": 0.8479657387580299, "obj2": 0.07447578608042749}, {"determining": "( ( ( Max( ACS,Min( DDR ,RRS ) ) - FirstVNF_CPU ) * ( Min( ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU_Server ) ,AMS ) + ARS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( MUC + Max( MUM,( DS * Min( MUM ,RRSe ) ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09626648854953507}, {"determining": "( ( ( PN * PN ) + Min( MRS ,ACS ) ) - ( BR + ( ( Const * ARS ) * FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( Min( CS ,( RRSe - MUR ) ) * Max( ( MLU - ( CS * MUM ) ),RCSe ) ) / ( DS / Max( ( RCSe - ( RRSe / RMSe ) ),Min( ( MUC * RRSe ) ,MLU ) ) ) ),RCSe ) - DS ) * ( MUC - MUM ) )", "obj1": 0.8715203426124197, "obj2": 0.06323541762879147}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09626648854953507}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( ( RMSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03564567345901551}, {"determining": "( ( ( ( PN * PN ) / Min( CRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU - MDR ) )", "choosing": "( ( RMSe * ( ( ( MUC - ( MUR - MUM ) ) + ( RRSe / DS ) ) + MUM ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( MUC ,RRSe ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03375205056713581}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - PN ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( Max( DDR,CRS ) - ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / DS ) )", "obj1": 0.8736616702355461, "obj2": 0.06206918034881139}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + MUM ),( MLU - MUC ) ) ),Min( ( ( RMSe * CS ) - CS ) ,RRSe ) )", "obj1": 0.7044967880085653, "obj2": 0.14919518277980906}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( ACS ,MRS ) ) - Max( CRS,DDR ) ) ) * Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Max( ( ( ARS * Min( ( ( FirstVNF_Mem_Server / Const ) / CRS ) ,BR ) ) - ACS ),BR ) ) )", "choosing": "( ( DS / MLU ) + ( Min( DS ,MLU ) + Max( ( MUR - ( MUC / DS ) ),( ( MUC / ( MUM + ( RMSe / MLU ) ) ) / ( MUM - DS ) ) ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11450487707414407}, {"determining": "( ( ( ( DDR * PN ) / Min( MRS ,ACS ) ) - ( DDR / PN ) ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM - ( ( CS * ( MUM / MUC ) ) + Min( Min( RMSe ,RCSe ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( ( MUM / MUC ) * CS ) - ( MUM + MLU ) ) ) * Max( RMSe,CS ) )", "obj1": 0.9400428265524625, "obj2": 0.029533656341369455}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + CS ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( ( FirstVNF_Mem + FirstVNF_Mem ) - Max( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - Max( DDR,CRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( CS ,( MUC + MUM ) )", "obj1": 0.7944325481798715, "obj2": 0.10396485363386283}, {"determining": "( ( AMS * DDR ) - ( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( BR ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( RRSe / ( MUR - MUR ) ) ,Min( ( MLU * Max( RMSe,Max( Min( MLU ,( MUM * MUR ) ),( MUC - ( CS + MUM ) ) ) ) ) ,Min( Min( MUM ,MUR ) ,( Max( ( Min( RCSe ,MUC ) * RMSe ),RRSe ) * DS ) ) ) ) )", "obj1": 0.9122055674518201, "obj2": 0.043957322580812246}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( CS / ( MUR - MUC ) ) / Max( Max( Min( RRSe ,( MUC - MLU ) ),( Min( MUR ,MUM ) / MUC ) ),( RRSe - Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) ) / MUM ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RMSe ) ) ) ) + ( MUC - MLU ) ) )", "obj1": 0.9400428265524625, "obj2": 0.029533656341369455}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) )", "choosing": "( ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12300104266842092}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - Max( Max( Min( ( Max( MDR,AMS ) * BR ) ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( MUR,( DS - ( MUC - ( CS + MUR ) ) ) ),Min( ( ( ( Max( RCSe,( ( RRSe - DS ) - MUM ) ) / MLU ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) - CS ) ,RRSe ) )", "obj1": 0.9571734475374732, "obj2": 0.02047065664947762}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - PN ) - Max( Max( Min( PN ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06206918034881139}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - AMS ) - Max( Max( Min( FirstVNF_Mem_Server ,PN ),( CRS + CRS ) ),Max( ( RRS / ( FirstVNF_RAM_Server - ( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( ( MUM / MUC ) * CS ) - ( MUM + MLU ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - FirstVNF_CPU ) ) ,Min( Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( MRS + FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - ( RMSe - RMSe ) ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9250535331905781, "obj2": 0.03655318779361984}, {"determining": "( ( FirstVNF_RAM + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - Max( Min( ( AMS + FirstVNF_Mem ) ,Const ),PN ) ) ) ) ) - ( ( FirstVNF_Mem_Server / ACS ) - DDR ) )", "choosing": "Max( Max( RRSe,Max( Max( RCSe,Min( MUM ,MLU ) ),Max( CS,CS ) ) ),Min( ( ( MLU * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 0.8051391862955032, "obj2": 0.09843890190341886}, {"determining": "( ( ( Min( FirstVNF_RAM ,( CRS + RRS ) ) - Max( DDR,Min( FirstVNF_Mem_Server ,BR ) ) ) + BR ) - Min( MRS ,RRS ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RRSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * CS ) ) ) + ( ( RMSe - CS ) / ( MUR - MUC ) ) ) ) )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}, {"determining": "( ( ( ACS * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,( MRS / ACS ) ) ,ACS ) ) - Max( DDR,CRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( CS / Min( ( RMSe + ( ( RRSe * ( MUM + MUC ) ) * ( ( RCSe - RRSe ) * MLU ) ) ) ,Max( Max( DS,( DS * Min( DS ,RMSe ) ) ),MUC ) ) ) * RMSe ) ,( RMSe / MUC ) )", "obj1": 0.7773019271948608, "obj2": 0.11169448124691574}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Min( MRS ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( FirstVNF_RAM + PN ) ) ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU - ( MDR * RRS ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS / ( MUR - MUC ) ) / Max( Max( ( DS - MUC ),MLU ),( RRSe - Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) ) / MUM ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7601713062098501, "obj2": 0.12040203753382982}, {"determining": "( Max( MRS,( AMS / FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( Min( MUM ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07774815509418347}, {"determining": "Min( ( Max( AMS,FirstVNF_RAM ) / ( ACS - ( FirstVNF_RAM_Server * Min( ( CRS + Const ) ,( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) ) ) ) ,( Min( FirstVNF_Mem ,RRS ) - ( ( AMS / FirstVNF_RAM ) * ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( MUR + ( ( MUM - MLU ) + Min( ( ( ( RRSe / Max( ( RCSe - RMSe ),( CS / RRSe ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( ( Max( ARS,ARS ) / Min( MRS ,( CRS - FirstVNF_CPU ) ) ) - Max( ARS,CRS ) ) - Min( ( ( ( BR / ( RRS - FirstVNF_RAM_Server ) ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( DS - MUC ) / Min( Min( ( ( ( MLU / DS ) - ( RMSe / MLU ) ) - RMSe ) ,Max( ( MUM + MUC ),MUR ) ) ,DS ) ) ) * ( ( ( RCSe - MUC ) / MLU ) / Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04078645296014756}, {"determining": "( Min( BR ,CRS ) - Max( DDR,Min( FirstVNF_CPU ,( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( ( ( RCSe / MUM ) / CS ),( ( Max( DS,RCSe ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7580299785867237, "obj2": 0.12147301173234365}, {"determining": "( ( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ACS ) ,BR ) ) ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * ( ( RRS - ( AMS / FirstVNF_CPU ) ) + FirstVNF_Mem ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( RRSe / ( ( ( ( RCSe + DS ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) ) ,( ( MLU * Max( RMSe,Max( Min( MLU ,( MUM * MUR ) ),( MUC - ( CS + MUM ) ) ) ) ) + Min( Min( MUM ,MUR ) ,( Max( MUM,RRSe ) * DS ) ) ) ) )", "obj1": 0.9122055674518201, "obj2": 0.043957322580812246}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * CS ) ) ) + MUM ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10107778959158592}, {"determining": "( Max( ( CRS - MDR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( ( RCSe + RMSe ),MUC ) - ( MLU + RMSe ) ) ) + ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) )", "obj1": 0.7751605995717344, "obj2": 0.11322783193007936}, {"determining": "( ( AMS - DDR ) - Max( ( ( AMS - ( FirstVNF_RAM - Min( Const ,Max( CRS,( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ),FirstVNF_Mem ) )", "choosing": "( Max( MUR,RCSe ) + ( ( ( MUM - ( MUM - Min( ( MUM + MUC ) ,Max( ( RMSe + CS ),Min( MUM ,MUC ) ) ) ) ) * ( RMSe * MUM ) ) / Min( RCSe ,Max( RCSe,Min( CS ,MUR ) ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.017766055223910938}, {"determining": "( ( ( Max( ARS,CRS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server - CRS ) + ( ( CRS / ( BR * FirstVNF_Mem_Server ) ) + RRS ) ) )", "choosing": "Min( ( RCSe - MLU ) ,( MUM + MUM ) )", "obj1": 0.8394004282655246, "obj2": 0.08024559190285732}, {"determining": "( ( RRS - DDR ) - Max( FirstVNF_CPU,AMS ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - Min( DS ,MLU ) ) )", "obj1": 0.7987152034261242, "obj2": 0.10003232002670534}, {"determining": "( ( AMS * DDR ) - Min( Max( ( RRS / CRS ),Max( CRS,FirstVNF_RAM ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUR,Min( ( ( ( DS + MUR ) + ( MUM - MUM ) ) + RMSe ) ,CS ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.037846105089607646}, {"determining": "( Max( MRS,( AMS / FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( Min( MUM ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07774815509418347}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11558949063040223}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Min( MRS ,( Min( FirstVNF_RAM_Server ,MDR ) * ( FirstVNF_RAM + PN ) ) ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU - ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS / ( MUR - ( Min( MUC ,RRSe ) - ( MUR - DS ) ) ) ) / Max( Max( Min( RRSe ,( MUC - MLU ) ),( Max( RMSe,MUM ) / MUC ) ),( RRSe - Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) ) / MUM ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7601713062098501, "obj2": 0.12040203753382982}, {"determining": "( ( ( PN / PN ) / Min( MRS ,( FirstVNF_Mem * CRS ) ) ) - Max( ( ACS - Max( ARS,( ( RRS - CRS ) * FirstVNF_RAM ) ) ),FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( MUC - DS ) / RMSe ) / DS ) ) ) * ( Min( RCSe ,RMSe ) + Max( ( Min( MUM ,MUR ) / ( MUC * RCSe ) ),( CS * DS ) ) ) ) / Min( RCSe ,Max( RCSe,Min( CS ,RRSe ) ) ) ) + Max( MUR,RCSe ) )", "obj1": 0.8008565310492506, "obj2": 0.09978459703036413}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,Min( Max( MRS,( Min( FirstVNF_RAM ,AMS ) / Const ) ) ,FirstVNF_CPU_Server ) ) ) - Max( DDR,CRS ) ) - Min( FirstVNF_Mem ,( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ARS - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUM + MLU ) - Min( MUM ,DS ) ) * MUM ) * ( Max( Min( RRSe ,RCSe ),( ( ( ( RCSe + DS ) / Min( RMSe ,RMSe ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04078645296014756}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + Min( PN ,Max( ( BR + FirstVNF_CPU ),MRS ) ) ) - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( ( Min( CS ,( RRSe - MUC ) ) * RRSe ) - MUC ) / MLU ) ) )", "obj1": 0.9186295503211992, "obj2": 0.039861470842971446}, {"determining": "( Max( CRS,DDR ) - Max( CRS,DDR ) )", "choosing": "( Min( CS ,MUR ) + Max( ( MUM + MUR ),( ( Min( Max( Min( DS ,RRSe ),( DS / CS ) ) ,Max( MLU,( DS + RCSe ) ) ) / ( ( ( Min( RRSe ,RMSe ) / ( RMSe + MUM ) ) - MLU ) * MUR ) ) * RRSe ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12527271140761326}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.9229122055674518, "obj2": 0.037846105089607646}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9186295503211992, "obj2": 0.039861470842971446}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) + MDR ) - ( FirstVNF_CPU_Server / AMS ) ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem + ACS ) ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( MUC - CS ) / RMSe ) - DS ) ) ) * ( Min( RCSe ,( CS * Min( ( MUR - RMSe ) ,DS ) ) ) + Max( ( Min( MUM ,MUR ) / ( MUR * RCSe ) ),( CS * DS ) ) ) ) / Min( RCSe ,Max( RCSe,Min( CS ,RRSe ) ) ) ) + Max( MUR,RCSe ) )", "obj1": 0.9850107066381156, "obj2": 0.007176292792102603}, {"determining": "( Max( ( PN * PN ),Min( MRS ,ACS ) ) - Max( ( Min( CRS ,MDR ) - MDR ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / Min( RCSe ,Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( ( RRSe * MUC ) - MUC ) / DS ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10973697897566259}, {"determining": "( ( ( MDR - ACS ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( ( MUM / CS ) + RMSe ) + MLU ) * RMSe ) - MUM ) ,( RMSe + MUC ) )", "obj1": 0.7794432548179872, "obj2": 0.11126125463202445}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_Mem / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "Min( Min( RMSe ,Min( ( MUR - DS ) ,( CS / ( Min( MUC ,RRSe ) - CS ) ) ) ) ,Min( ( Min( ( DS + DS ) ,DS ) / ( MUR - MUR ) ) ,( Min( MLU ,Max( RMSe,Max( Min( MLU ,( MUM * MUR ) ),MUC ) ) ) + Min( Min( ( RRSe * RCSe ) ,MUR ) ,RCSe ) ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11558949063040223}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - ( ( DDR - ARS ) + FirstVNF_RAM_Server ) ) ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + DS ) )", "obj1": 0.8072805139186295, "obj2": 0.09706108923606527}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( RRSe - RRSe ) + ( MUR - Min( ( ( RCSe / MLU ) * Min( ( DS * RMSe ) ,RCSe ) ) ,( MUM * MUC ) ) ) ) ,( ( ( RCSe - DS ) / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351357}, {"determining": "( ( AMS - MDR ) - Max( ( BR + FirstVNF_CPU ),MRS ) )", "choosing": "Min( ( ( ( DS - ( ( CS + ( ( MLU / MUC ) - MUM ) ) / Max( MUC,DS ) ) ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.9935760171306209, "obj2": 0.0028086203074805115}, {"determining": "( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ARS ,( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( ( ( MUM - Max( MUR,Max( DS,( Min( RRSe ,RMSe ) * RRSe ) ) ) ) * ( ( CS / MUM ) + ( ( Min( RMSe ,MUM ) - Min( ( RMSe - MUC ) ,MLU ) ) * MUM ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( FirstVNF_CPU_Server - CRS ) ) ) - Max( DDR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( CS,RMSe ) + RMSe ) - CS ) ) + ( MUM - RCSe ) )", "obj1": 0.841541755888651, "obj2": 0.07891197874031525}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( CRS - MDR ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( ( Max( RCSe,( ( RRSe - DS ) - MUM ) ) / MLU ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) - CS ) ,RRSe ) )", "obj1": 0.7751605995717344, "obj2": 0.11322783193007936}, {"determining": "( ( ( PN * ( ( MRS * FirstVNF_RAM ) - MRS ) ) / Min( MRS ,FirstVNF_Mem ) ) - Max( FirstVNF_Mem,DDR ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( Max( MUM,RMSe ),RMSe ) + RMSe ) - CS ) ) + ( Min( RRSe ,MLU ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.841541755888651, "obj2": 0.07891197874031525}, {"determining": "( ( ( ( Min( ( BR * ( Const * BR ) ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - Max( FirstVNF_RAM,MDR ) ) ) - Min( FirstVNF_Mem ,( Max( BR,FirstVNF_CPU_Server ) * AMS ) ) ) / ( AMS + RRS ) ) - Max( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ),( AMS + ARS ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( ( Max( RCSe,( ( RRSe - DS ) - MUM ) ) / MLU ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) - CS ) ,RRSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0020729588897943573}, {"determining": "( Max( AMS,DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Min( ( ARS + FirstVNF_CPU ) ,RRS ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( CS / ( Min( MUC ,RRSe ) - CS ) ) ,( MUR - DS ) ) ) ,Min( ( RRSe / ( MUR - MUR ) ) ,( Min( MLU ,Max( RMSe,Max( Min( MLU ,( MUR * MUR ) ),MUC ) ) ) + ( Min( MUM ,MUR ) + RCSe ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10107778959158592}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( RMSe - Max( ( MLU - CS ),( MLU + MUC ) ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * RCSe ) ,Min( Max( ( MLU - CS ),( MLU + MUC ) ) ,RMSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Max( AMS,( ( FirstVNF_CPU_Server / AMS ) * ACS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * ( PN * ( DDR - ( FirstVNF_RAM * FirstVNF_Mem ) ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( RCSe - ( Max( MLU,( Max( MUM,CS ) * ( RRSe * DS ) ) ) / RMSe ) ),Min( ( Max( RCSe,( ( RRSe - DS ) - MUM ) ) - ( MUC * RMSe ) ) ,RRSe ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Min( MRS ,( FirstVNF_CPU_Server * ( FirstVNF_RAM + PN ) ) ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU_Server / AMS ) * ACS ) - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS / ( MUR - MUC ) ) / Max( Max( Min( RRSe ,( MUC - MLU ) ),( Min( MUR ,MUM ) / MUC ) ),( RRSe - Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) ) / MUM ),( ( MLU - RMSe ) - CS ) ) + ( Min( Max( MUM,Min( RCSe ,( CS + MLU ) ) ) ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7494646680942184, "obj2": 0.12610626052540352}, {"determining": "( ( AMS - ARS ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( RRSe - RRSe ) + ( MUR - Min( ( ( RCSe / MLU ) * Min( ( DS * RMSe ) ,RCSe ) ) ,( MUM * MUC ) ) ) ) ,( ( ( RCSe - DS ) / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( AMS - ARS ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( RRSe - RRSe ) + ( MUR - Min( ( ( RCSe / MLU ) * Min( ( DS * RMSe ) ,RCSe ) ) ,( MUM * MUC ) ) ) ) ,( ( ( RCSe - DS ) / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12215571553131707}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( Min( MRS ,RRS ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.8394004282655246, "obj2": 0.08024559190285732}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( MUC ,RRSe ) - ( MUR - ( ( MLU + RMSe ) - CS ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12527271140761326}], "11": [{"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( Max( Min( ( ( FirstVNF_CPU / Min( AMS ,ARS ) ) - ACS ) ,BR ),DDR ) + ( ( RRS * FirstVNF_Mem_Server ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( RRSe - MUR ) + ( MUR - Min( ( MUM * MUC ) ,( ( RCSe / MLU ) * Min( ( DS * RMSe ) ,RCSe ) ) ) ) ) ,( RRSe + MLU ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ARS ,( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( ( ( MUM - Max( MUR,Max( DS,( Min( RRSe ,RMSe ) * RRSe ) ) ) ) * ( ( CS / MUM ) + ( ( Min( RMSe ,MUM ) - Min( ( RMSe - MUC ) ,MLU ) ) * MUM ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - ( DS - ( MUC - ( CS + MUR ) ) ) ) ) )", "obj1": 0.6595289079229122, "obj2": 0.21424024848709716}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.6873661670235546, "obj2": 0.1723401189266256}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - ( DS - ( MUC - ( CS + MUR ) ) ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.20979029547545777}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RCSe + DS ) + MLU ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.715203426124197, "obj2": 0.14297391302556264}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RRSe - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( Min( CS ,MLU ) ,( MLU / RMSe ) ) ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13252649426168286}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( PN ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Min( ( MUR - DS ) ,( CS / ( Min( MUC ,RRSe ) - CS ) ) ) + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04516038100058905}, {"determining": "( ( DDR - AMS ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( MDR ,FirstVNF_CPU_Server ) + ( ( RRS * ( ( ( RRS + MDR ) - ( PN / FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server / ACS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( ( Min( ( RCSe + CS ) ,RCSe ) + Max( ( ( RRSe - CS ) + MLU ),( RMSe / ( MUR - DS ) ) ) ) + ( MUC / ( DS - MLU ) ) ) * Min( MUR ,( RMSe - ( MLU - ( RCSe / MUC ) ) ) ) ) * RMSe ) ,( CS * ( Min( Max( MUR,MUM ) ,RRSe ) - Min( MUR ,( CS + Min( RRSe ,MUM ) ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.09044157461274757}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( CS / CS ) ,Max( ( ( CS * RMSe ) - CS ),DS ) ) ) ,( MUM / RCSe ) )", "obj1": 0.8843683083511777, "obj2": 0.05543512976182435}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,Max( ( CS + CS ),MUC ) ),Min( ( ( ( Max( RCSe,( ( RRSe - DS ) - MUM ) ) / MLU ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) - CS ) ,RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.15862825114162066}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.15862825114162066}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( MUC ,RRSe ) - ( MUR - ( ( MLU + RMSe ) - CS ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.14919518277980906}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( PN ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) / ( MDR * FirstVNF_RAM_Server ) ) - ( ACS - Max( MRS,BR ) ) )", "choosing": "( ( ( ( MUM - ( MUM + MLU ) ) * ( ( CS / MUM ) + ( ( Max( RCSe,( CS * MUM ) ) / MUM ) * RCSe ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9635974304068522, "obj2": 0.01755358492864582}, {"determining": "( ( ( BR * PN ) / Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - ( ( DDR - ARS ) + FirstVNF_RAM_Server ) ) ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8565310492505354, "obj2": 0.07220911035827429}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( FirstVNF_RAM_Server + BR ) )", "choosing": "( Max( ( ( ( CS / ( MUR - MUC ) ) / Max( Max( Min( RRSe ,( MUC - MLU ) ),( Min( MUR ,MUM ) / MUC ) ),( RRSe - Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) ) / MUM ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RMSe ) ) ) ) + ( MUC - MLU ) ) )", "obj1": 0.7451820128479657, "obj2": 0.12849653499689231}, {"determining": "( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( MRS ,( Const * ( FirstVNF_RAM_Server * Const ) ) ) ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( Min( MUM ,MUC ) / RMSe ) / DS ) ) ) * ( Min( RCSe ,RMSe ) + Max( ( Min( MUM ,MUR ) / ( MUR * RCSe ) ),( CS * DS ) ) ) ) / Min( Max( RCSe,( CS - RRSe ) ) ,RCSe ) ) + Max( MUR,RCSe ) )", "obj1": 0.8115631691648822, "obj2": 0.09450525301044316}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.6766595289079229, "obj2": 0.21162579955440117}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.8843683083511777, "obj2": 0.05543512976182435}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( FirstVNF_RAM - FirstVNF_CPU ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RMSe + ( Max( ( MLU / RMSe ),RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10621623640299724}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( RRS / Min( Min( PN ,ARS ) ,( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) - RMSe ) ) * MUC ) )", "obj1": 0.867237687366167, "obj2": 0.06528893904833138}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( CRS ,FirstVNF_CPU_Server ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( ( RRSe - MUR ) * ( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RRSe - MUM ) / RRSe ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.6638115631691649, "obj2": 0.21253206344280148}, {"determining": "( ( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ACS ) ,BR ) ) ) - ( FirstVNF_CPU - ( AMS - MDR ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( RRSe / ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) ) ,( ( MLU * Max( RMSe,Max( Min( MLU ,( MUM * MUR ) ),( MUC - ( CS + MUM ) ) ) ) ) + Min( Min( MUM ,MUR ) ,( Max( MUM,RRSe ) * DS ) ) ) ) )", "obj1": 0.9100642398286938, "obj2": 0.04382559119713519}, {"determining": "( ( ( ( Max( Max( AMS,Min( FirstVNF_CPU ,Max( FirstVNF_CPU,DDR ) ) ),FirstVNF_Mem ) - DDR ) - Max( ( CRS - Const ),FirstVNF_Mem ) ) + CRS ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( ( ( DS - ( ( CS + ( ( MLU / MUC ) - MUM ) ) / Max( MUC,DS ) ) ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.9336188436830836, "obj2": 0.032926306841320946}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,Min( Max( ( MLU - CS ),( MLU + MUC ) ) ,RMSe ) )", "obj1": 0.9464668094218416, "obj2": 0.023619970541677138}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( Min( ( MUR - DS ) ,( CS / ( Min( MUC ,RRSe ) - CS ) ) ) - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08383760437265844}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08383760437265844}, {"determining": "( ( ( ( DDR * PN ) / Min( MRS ,ACS ) ) - ( DDR / PN ) ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM - ( ( CS * ( MUM / MUC ) ) + Min( Min( RMSe ,RCSe ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RRSe - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( Min( CS ,MLU ) ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.14919518277980906}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( RMSe + DS ) + MLU ) * RMSe ) - MUM ) ,Max( RRSe,MUR ) )", "obj1": 0.7837259100642399, "obj2": 0.10902548030604077}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( PN,Max( FirstVNF_RAM_Server,AMS ) ) * ( ( AMS + ( BR / ACS ) ) * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( MLU ,MUC ) ,( MUM + MUM ) )", "obj1": 0.8479657387580299, "obj2": 0.07447578608042749}, {"determining": "( ( FirstVNF_CPU - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( MUC,MUC ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( PN,Max( FirstVNF_RAM_Server,AMS ) ) * ( ( AMS + ( BR / ACS ) ) * PN ) ) / ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( Max( MUR,Max( ( ( CS * RMSe ) - CS ),( MLU - RCSe ) ) ),Min( ( ( RMSe * CS ) - CS ) ,RRSe ) )", "obj1": 0.860813704496788, "obj2": 0.06904358274477358}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( Max( DDR,FirstVNF_CPU_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) + Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "Max( ( ( MUM - MUR ) + ( ( Min( RRSe ,Max( MLU,( MUC + MUC ) ) ) / MUR ) * ( ( ( DS * MUR ) + ( Min( RMSe ,RMSe ) / RCSe ) ) / MLU ) ) ),( CS - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * Min( MUC ,Max( MUC,MLU ) ) ) ) ) + MUM ) ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * ( ( RRS - ( AMS / FirstVNF_CPU ) ) + FirstVNF_Mem ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,CS )", "obj1": 0.8629550321199143, "obj2": 0.06780940866303861}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( CRS - MDR ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11274280893936}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - ( MDR - ( AMS - DDR ) ) ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( Min( MUM ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) - CS ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( ( PN * ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ) ) / Min( MRS ,ACS ) ) - Max( DDR,FirstVNF_CPU_Server ) ) - Min( PN ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( Min( MUM ,( ( MUR / MUM ) * ( MUC - MUR ) ) ) + MLU ) - Min( MUM ,DS ) ) ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / Min( ( ( RCSe * Min( MUR ,DS ) ) - ( ( Min( RCSe ,Max( RCSe,RRSe ) ) / MUM ) + MUC ) ) ,Max( Max( MUC,MUR ),DS ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11076053059779897}, {"determining": "( Max( ( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / FirstVNF_Mem ) - ( ( DDR / FirstVNF_RAM_Server ) * Const ) ) ,Min( FirstVNF_CPU ,MDR ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( Min( PN ,PN ) / Min( MRS ,ACS ) ) - Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,Min( ( ( DS / RRSe ) / Max( MLU,( ( ( RMSe + MLU ) + ( MLU * MUC ) ) * Max( RCSe,RCSe ) ) ) ) ,( DS + MUC ) ) ) + ( RCSe / Max( MUC,DS ) ) )", "obj1": 0.9550321199143469, "obj2": 0.02189062093537176}, {"determining": "( ( ( PN * PN ) / Max( MRS,ACS ) ) - Min( PN ,CRS ) )", "choosing": "Max( ( MUR - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,( ( MUR / MUM ) * ( MUC - MUR ) ) ) ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.027726689654212013}, {"determining": "( Max( MRS,( ( PN * PN ) / Min( MRS ,ACS ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,( Min( MUM ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06141865686504652}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( AMS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( MUC ,RRSe ) - ( MUR - ( MUM - CS ) ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11977057750476389}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - AMS ) - Max( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ),Max( ( RRS / ( ( RRS - AMS ) / Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / BR ) ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( ( MUM / MUC ) * CS ) - Min( ( CS - CS ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( MUC - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.029533656341369455}, {"determining": "( ( FirstVNF_Mem + FirstVNF_Mem ) - Max( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - Max( DDR,CRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( CS ,( MUC + MUM ) )", "obj1": 0.7944325481798715, "obj2": 0.10396485363386283}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( ( MUM / MUC ) * CS ) - ( MUM + MLU ) ) ) * Max( RMSe,CS ) )", "obj1": 0.9400428265524625, "obj2": 0.029533656341369455}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,MUR ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8822269807280514, "obj2": 0.0582741392789921}, {"determining": "( ( ( Max( ARS,ARS ) / Min( MRS ,( CRS - FirstVNF_CPU ) ) ) - Max( ARS,CRS ) ) - Min( ( ( ( BR / ( RRS - FirstVNF_RAM_Server ) ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( DS - MUC ) / Min( Min( ( ( ( MLU / DS ) - ( RMSe / MLU ) ) - RMSe ) ,Max( ( MUM + MUC ),MUR ) ) ,DS ) ) ) * ( ( ( RCSe - MUC ) / MLU ) / Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04078645296014756}, {"determining": "( Max( CRS,DDR ) - Max( CRS,DDR ) )", "choosing": "( Min( CS ,MUR ) + Max( ( MUM + MUR ),( ( Min( Max( Min( DS ,RRSe ),( DS / CS ) ) ,Max( MLU,( DS + RCSe ) ) ) / ( ( ( Min( RRSe ,RMSe ) / ( RMSe + MUM ) ) - MLU ) * MUR ) ) * RRSe ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12527271140761326}, {"determining": "( ( DDR - AMS ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( PN,Max( FirstVNF_RAM_Server,AMS ) ) * ( ( FirstVNF_RAM + ( FirstVNF_RAM / ACS ) ) * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUM + ( MUM / RRSe ) ) - ( ( RMSe + MLU ) - CS ) ) + Min( DS ,MUR ) )", "obj1": 0.8479657387580299, "obj2": 0.07447578608042749}, {"determining": "( ( ( FirstVNF_CPU * PN ) / Min( MRS ,( RRS * CRS ) ) ) - Min( RRS ,( PN * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( Max( DS,DS ) * MUM ) + RCSe ),( CS - ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( Max( ( RMSe / CS ),( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) ) ) + ( Max( RMSe,MUM ) + ( Max( RRSe,( ( DS * RRSe ) / ( MUR * MLU ) ) ) + Max( DS,( MUR - Min( CS ,Max( MUR,( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10432976869921111}, {"determining": "( Max( MRS,( AMS / FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( Min( MUM ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07774815509418347}, {"determining": "( ( AMS - MDR ) - Max( ( BR + Max( ( BR + FirstVNF_CPU ),MRS ) ),MRS ) )", "choosing": "Min( ( ( ( DS - ( ( CS + ( ( MLU / MUC ) - MUM ) ) / Max( MUC,( ( MLU / MUC ) - MUM ) ) ) ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.9957173447537473, "obj2": 0.0018724135383203408}, {"determining": "( ( Min( Min( BR ,FirstVNF_RAM ) ,Min( Max( AMS,Max( RRS,FirstVNF_Mem_Server ) ) ,( CRS + Min( RRS ,( Min( RRS ,MDR ) / FirstVNF_RAM ) ) ) ) ) - ( MDR * FirstVNF_RAM_Server ) ) - Min( ( ( AMS - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MLU + MUM ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( ( CS + RMSe ) - CS ) ) * ( Min( RRSe ,RMSe ) * Min( CS ,( MUM * MLU ) ) ) ) - RCSe ) ) / Max( CS,( RRSe + MUC ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.0068165354960475375}, {"determining": "( ( ( PN * PN ) + Min( MRS ,ACS ) ) - ( BR + ( ( Const * ARS ) * FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( Min( CS ,( RRSe - MUR ) ) * Max( ( MLU - ( CS * MUM ) ),RCSe ) ) / ( DS / Max( ( RCSe - ( RRSe / RMSe ) ),Min( ( MUC * RRSe ) ,MLU ) ) ) ),RCSe ) - DS ) * ( MUC - MUM ) )", "obj1": 0.8715203426124197, "obj2": 0.06323541762879147}, {"determining": "( Min( BR ,CRS ) - Max( DDR,Min( FirstVNF_CPU ,( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( ( ( RCSe / MUM ) / CS ),( ( Max( DS,RCSe ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7580299785867237, "obj2": 0.12147301173234365}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM - Max( MUR,Max( DS,( Min( RRSe ,RMSe ) * RRSe ) ) ) ) * ( ( CS / MUM ) + ( ( Max( RCSe,RRSe ) / MUM ) * RCSe ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9164882226980728, "obj2": 0.04078645296014756}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + DS ) )", "obj1": 0.7965738758029979, "obj2": 0.10107778959158592}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12215571553131707}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ARS ,Max( MDR,DDR ) ) ) )", "choosing": "( RMSe + ( Max( ( Min( ( ( ( MUC / MUR ) * MUC ) * MLU ) ,( MUC / Min( ( MUR - MUM ) ,MLU ) ) ) / RMSe ),RCSe ) - RMSe ) )", "obj1": 0.8029978586723768, "obj2": 0.09885266756890304}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( ( RCSe / RRSe ) * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351357}, {"determining": "( ( RRS - DDR ) - Max( FirstVNF_CPU,AMS ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - Min( DS ,MLU ) ) )", "obj1": 0.7987152034261242, "obj2": 0.10003232002670534}, {"determining": "( ( ( PN / PN ) / Min( MRS ,( FirstVNF_Mem * CRS ) ) ) - Max( ( ACS - Max( ARS,( ( RRS - CRS ) * FirstVNF_RAM ) ) ),FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( MUC - DS ) / RMSe ) / DS ) ) ) * ( Min( RCSe ,RMSe ) + Max( ( Min( MUM ,MUR ) / ( MUC * RCSe ) ),( CS * DS ) ) ) ) / Min( RCSe ,Max( RCSe,Min( CS ,RRSe ) ) ) ) + Max( MUR,RCSe ) )", "obj1": 0.8008565310492506, "obj2": 0.09978459703036413}, {"determining": "( Max( MRS,( AMS / FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( Min( MUM ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07774815509418347}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( MUM / ( Max( MUR,( ( ( DS - MLU ) + MUC ) / RMSe ) ) / ( CS * RRSe ) ) ),Max( ( CS + MUM ),( MLU - RCSe ) ) ),Min( ( CS - ( RMSe * CS ) ) ,RRSe ) )", "obj1": 0.8822269807280514, "obj2": 0.0582741392789921}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11558949063040223}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( ( MUC - RCSe ) + ( ( Max( MUM,Min( RCSe ,( CS + MLU ) ) ) - MLU ) + Min( ( ( ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11450487707414407}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ,( AMS - MDR ) ) ) )", "choosing": "( ( ( DS - RCSe ) + CS ) * ( Min( MUR ,( ( MLU / MUC ) - MUM ) ) / ( RRSe * CS ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Min( ( FirstVNF_RAM - ( FirstVNF_CPU - Const ) ) ,CRS ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( Min( MUM ,( ( MUC - Min( RRSe ,Min( MUC ,DS ) ) ) * ( MLU / MUM ) ) ) / CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12300104266842092}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( ( RMSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03564567345901551}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.6638115631691649, "obj2": 0.21253206344280148}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) ,( FirstVNF_Mem * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( MUC - CS ) / RMSe ) / DS ) ) ) * Max( ( CS + MUM ),( MLU - MUC ) ) ) / Min( RCSe ,Max( RCSe,Min( CS ,RRSe ) ) ) ) + Max( MUR,RCSe ) )", "obj1": 0.8372591006423983, "obj2": 0.0808769934809355}, {"determining": "( ( ( ( PN * PN ) / Min( CRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU - MDR ) )", "choosing": "( ( RMSe * ( ( ( MUC - ( MUR - MUM ) ) + ( RRSe / DS ) ) + MUM ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( MUC ,RRSe ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03375205056713581}, {"determining": "( Max( ( PN * PN ),Min( MRS ,ACS ) ) - Max( ( Min( CRS ,MDR ) - MDR ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / Min( RCSe ,Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( ( RRSe * MUC ) - MUC ) / DS ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10973697897566259}, {"determining": "( Max( MDR,FirstVNF_CPU ) - Max( ( FirstVNF_CPU + BR ),( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( ARS / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,( RRSe - MUC ) ) * ( MLU + DS ) ) / MLU ),RCSe ) - DS ) * ( Min( MLU ,Max( Max( Min( MLU ,( MUM * MUR ) ),Max( ( CS * MUM ),MUC ) ),RMSe ) ) + Min( ( MUM / MUR ) ,RCSe ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06323541762879147}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - ( ( ( PN * PN ) + Max( MRS,( AMS / FirstVNF_CPU_Server ) ) ) - Min( PN ,CRS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03375205056713581}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( ( RMSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03564567345901551}, {"determining": "( ( ( PN * PN ) / Max( MRS,ACS ) ) - Min( PN ,CRS ) )", "choosing": "Max( ( MUR - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,( ( MUR / MUM ) * ( MUC - MUR ) ) ) ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.027726689654212013}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( ACS ,MRS ) ) - Max( CRS,DDR ) ) ) * Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Max( ( ( ARS * Min( ( ( FirstVNF_Mem_Server / Const ) / CRS ) ,BR ) ) - ACS ),BR ) ) )", "choosing": "( ( DS / MLU ) + ( Min( DS ,MLU ) + Max( ( MUR - ( MUC / DS ) ),( ( MUC / ( MUM + ( RMSe / MLU ) ) ) / ( MUM - DS ) ) ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11450487707414407}, {"determining": "( ( ( Max( ACS,Min( DDR ,RRS ) ) - FirstVNF_CPU ) * ( Min( ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU_Server ) ,AMS ) + ARS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( MUC + Max( MUM,( DS * Min( MUM ,RRSe ) ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09626648854953507}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - Max( ( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RMSe + ( RCSe / Max( MUC,DS ) ) )", "obj1": 0.9550321199143469, "obj2": 0.02189062093537176}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( RCSe - MUC ),Min( ( ( CS * RMSe ) - CS ) ,( ( ( CS / ( MUR - MUC ) ) / Max( Max( Min( RRSe ,( MUC - MLU ) ),( Min( MUR ,MUM ) / MUC ) ),( RRSe - Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) ) / MUM ) ) )", "obj1": 0.9464668094218416, "obj2": 0.023619970541677138}, {"determining": "( ( DDR - AMS ) - ( FirstVNF_CPU + ( Max( ( FirstVNF_RAM + Max( AMS,FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC - RCSe ) + ( ( Max( MUM,Min( RCSe ,( CS + MLU ) ) ) - ( MUR + RRSe ) ) + Min( ( ( ( DS / MUM ) - ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) ) + CS ) ,MLU ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351357}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - Max( Max( Min( ( Max( MDR,AMS ) * BR ) ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( MUR,( DS - ( MUC - ( CS + MUR ) ) ) ),Min( ( ( ( Max( RCSe,( ( RRSe - DS ) - MUM ) ) / MLU ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) - CS ) ,RRSe ) )", "obj1": 0.9571734475374732, "obj2": 0.02047065664947762}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - ( ( DDR - ARS ) + FirstVNF_RAM_Server ) ) ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * CS ) ) ) + MUM ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09706108923606527}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 0.8051391862955032, "obj2": 0.09843890190341886}, {"determining": "( ( AMS - ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - FirstVNF_CPU ) ) ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( ( MUM / MUC ) * CS ) - MUM ) ) * Max( RMSe,CS ) )", "obj1": 0.9935760171306209, "obj2": 0.0028086203074805115}, {"determining": "( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ARS ,( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( ( ( MUM - Max( MUR,Max( DS,( Min( RRSe ,RMSe ) * RRSe ) ) ) ) * ( ( CS / MUM ) + ( ( Min( RMSe ,MUM ) - Min( ( RMSe - MUC ) ,MLU ) ) * MUM ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( FirstVNF_CPU_Server - CRS ) ) ) - Max( DDR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( CS,RMSe ) + RMSe ) - CS ) ) + ( MUM - RCSe ) )", "obj1": 0.841541755888651, "obj2": 0.07891197874031525}, {"determining": "( ( ( Max( ARS,CRS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server - CRS ) + ( ( CRS / ( BR * FirstVNF_Mem_Server ) ) + RRS ) ) )", "choosing": "Min( ( RCSe - MLU ) ,( MUM + MUM ) )", "obj1": 0.8394004282655246, "obj2": 0.08024559190285732}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - Max( Max( Min( ( Max( MDR,AMS ) * BR ) ,FirstVNF_Mem_Server ),Min( CRS ,CRS ) ),Max( ( RRS - ( FirstVNF_RAM_Server - ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( MUR,( DS - ( MUC - ( CS + MUR ) ) ) ),Min( ( ( ( Max( RCSe,( ( RRSe - DS ) - MUM ) ) / MLU ) - ( ( ( RCSe - CS ) / RMSe ) / DS ) ) - CS ) ,RRSe ) )", "obj1": 0.9571734475374732, "obj2": 0.02047065664947762}, {"determining": "( ( ( ( PN * PN ) / ( ( ACS - ( Const * ACS ) ) / FirstVNF_CPU_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS / ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - FirstVNF_CPU ) ) ,( PN - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) )", "choosing": "Max( Max( Max( ( MUR + MUM ),RRSe ),Max( ( MUM * ( RRSe + MLU ) ),Max( CS,CS ) ) ),Min( ( ( CS * RMSe ) - CS ) ,RRSe ) )", "obj1": 0.9250535331905781, "obj2": 0.03655318779361984}, {"determining": "( ( AMS * DDR ) - Min( Max( ( RRS / CRS ),Max( CRS,FirstVNF_RAM ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUR,Min( ( ( ( DS + MUR ) + ( MUM - MUM ) ) + RMSe ) ,CS ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.037846105089607646}, {"determining": "( ( ( FirstVNF_RAM * MRS ) + BR ) - Min( MRS ,RRS ) )", "choosing": "Max( ( RMSe + ( MUM - MUR ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe * RCSe ) ) ,DS ) ) - Max( RMSe,( RCSe * ( MUC + RCSe ) ) ) ) + ( ( RMSe / CS ) / ( MUR - MUC ) ) ) ) )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS / ( MUR - Max( MUR,MUM ) ) ) / Max( Max( Min( RRSe ,( MUC - MLU ) ),( Min( MUR ,MUM ) / MUC ) ),Min( RRSe ,Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) ) / MUM ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RMSe ) ) ) ) + ( MUC - MLU ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11558949063040223}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( FirstVNF_CPU_Server - CRS ) ) ) - Max( DDR,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( CS,RMSe ) + RMSe ) - CS ) ) + ( MUM - RCSe ) )", "obj1": 0.841541755888651, "obj2": 0.07891197874031525}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Min( MRS ,( ( ( FirstVNF_CPU * PN ) / Min( MRS ,( FirstVNF_Mem * CRS ) ) ) * ( FirstVNF_RAM + PN ) ) ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU - ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS / ( MUR - MUC ) ) / Max( Max( Min( RRSe ,( MUC - MLU ) ),( Max( RMSe,MUM ) / MUC ) ),( RRSe - Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) ) / MUM ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( RMSe / CS ),( MUR - MUC ) ) ) )", "obj1": 0.7601713062098501, "obj2": 0.12040203753382982}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( Max( MUM,RMSe ),RMSe ) + RMSe ) - CS ) ) + ( Min( RRSe ,MLU ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.9229122055674518, "obj2": 0.037846105089607646}], "12": [{"determining": "( Max( MDR,FirstVNF_CPU ) - Max( ( FirstVNF_CPU + BR ),( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( ARS / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,( RRSe - MUC ) ) * ( MLU + DS ) ) / MLU ),RCSe ) - DS ) * ( Min( MLU ,Max( Max( Min( MLU ,( MUM * MUR ) ),Max( ( CS * MUM ),MUC ) ),RMSe ) ) + Min( ( MUM / MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( Max( Min( ( ( FirstVNF_CPU / Min( AMS ,ARS ) ) - ACS ) ,BR ),DDR ) + ( ( RRS * FirstVNF_Mem_Server ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( RRSe - MUR ) + ( MUR - Min( ( MUM * MUC ) ,( ( RCSe / MLU ) * Min( ( DS * RMSe ) ,RCSe ) ) ) ) ) ,( RRSe + MLU ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - ( DS - ( MUC - ( CS + MUR ) ) ) ) ) )", "obj1": 0.6595289079229122, "obj2": 0.21424024848709716}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.6873661670235546, "obj2": 0.1723401189266256}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - ( DS - ( MUC - ( CS + MUR ) ) ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.20979029547545777}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( DDR,( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - ( ( ( PN * PN ) + Max( MRS,( AMS / FirstVNF_CPU_Server ) ) ) - Min( PN ,CRS ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15561275826852736}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( CS / CS ) ,Max( ( ( CS * RMSe ) - CS ),DS ) ) ) ,( MUM / RCSe ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( PN ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Min( ( MUR - DS ) ,( CS / ( Min( MUC ,RRSe ) - CS ) ) ) + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04516038100058905}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RCSe + DS ) + MLU ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.715203426124197, "obj2": 0.14297391302556264}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.728051391862955, "obj2": 0.13733666162560573}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RRSe - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( Min( CS ,MLU ) ,( MLU / RMSe ) ) ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13252649426168286}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - ( MDR - ( AMS - DDR ) ) ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( Min( MUM ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) - CS ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7451820128479657, "obj2": 0.12701098554624485}, {"determining": "( ( ( PN + PN ) / Min( Min( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( CS - Max( CS,MUR ) ) ) + Max( Max( ( MUR * MUM ),MUR ),DS ) )", "obj1": 0.7130620985010707, "obj2": 0.14801846963681994}, {"determining": "( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( MRS ,( Const * ( FirstVNF_RAM_Server * Const ) ) ) ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( Min( MUM ,MUC ) / RMSe ) / DS ) ) ) * ( Min( RCSe ,RMSe ) + Max( ( Min( MUM ,MUR ) / ( MUR * RCSe ) ),( CS * DS ) ) ) ) / Min( Max( RCSe,( CS - RRSe ) ) ,RCSe ) ) + Max( MUR,RCSe ) )", "obj1": 0.8115631691648822, "obj2": 0.09450525301044316}, {"determining": "( ( ( PN * PN ) / Min( ( ( FirstVNF_Mem - RRS ) * ACS ) ,( ARS * CRS ) ) ) - Max( ( Max( CRS,DDR ) - Max( CRS,DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,( DS + ( CS + ( ( MUC + CS ) + MLU ) ) ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.6745182012847966, "obj2": 0.20995177436548362}, {"determining": "( ( DDR - AMS ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( MDR ,FirstVNF_CPU_Server ) + ( ( RRS * ( ( ( RRS + MDR ) - ( PN / FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server / ACS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( ( Min( ( RCSe + CS ) ,RCSe ) + Max( ( ( RRSe - CS ) + MLU ),( RMSe / ( MUR - DS ) ) ) ) + ( MUC / ( DS - MLU ) ) ) * Min( MUR ,( RMSe - ( MLU - ( RCSe / MUC ) ) ) ) ) * RMSe ) ,( CS * ( Min( Max( MUR,MUM ) ,RRSe ) - Min( MUR ,( CS + Min( RRSe ,MUM ) ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.09044157461274757}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * ( Min( ( ( BR + ACS ) + ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ,PN ) / ARS ) ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe - RCSe ),( MUC * ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),( RRSe / DS ) ) ) - RMSe ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.14919518277980906}, {"determining": "( ( ( CRS - ( ( FirstVNF_CPU * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU / ( Max( ( RRS + PN ),( ( ACS * FirstVNF_Mem_Server ) * BR ) ) + ( ( CRS * PN ) / ( AMS - MRS ) ) ) ) ) - ( AMS * Min( FirstVNF_RAM ,Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM - RRSe ) + RMSe ) ,( MUC * Min( ( ( MLU - ( RCSe - MUC ) ) + MUC ) ,( RCSe - RRSe ) ) ) ) * Max( Max( ( Min( RRSe ,( ( MUR - RMSe ) / DS ) ) / RRSe ),( RCSe * ( CS * Min( ( MUR - RMSe ) ,MUC ) ) ) ),( MLU * ( ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) ) ) ) * ( Min( DS ,RCSe ) - MUM ) )", "obj1": 0.9678800856531049, "obj2": 0.0154417967447389}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server - CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * ( ( RRS - ( AMS / DDR ) ) + ( ACS / FirstVNF_RAM_Server ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUR,( ( MLU + RMSe ) - ( ( Max( DS,RCSe ) * MUM ) - RCSe ) ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.09044157461274757}, {"determining": "( ( AMS - DDR ) - Min( ( ( MDR - ( FirstVNF_CPU - ( ( DDR + ARS ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( Max( RMSe,MUM ),RMSe ) - RMSe ) - CS ) ) + ( ( ( ( RRSe * MLU ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13553679842075486}, {"determining": "( ( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ACS ) ,BR ) ) ) - ( FirstVNF_CPU - ( AMS - MDR ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( RRSe / ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) ) ,( ( MLU * Max( RMSe,Max( Min( MLU ,( MUM * MUR ) ),( MUC - ( CS + MUM ) ) ) ) ) + Min( Min( MUM ,MUR ) ,( Max( MUM,RRSe ) * DS ) ) ) ) )", "obj1": 0.9100642398286938, "obj2": 0.04382559119713519}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( AMS - DDR ) - ( ( ( PN * PN ) + Max( MRS,( AMS / FirstVNF_CPU_Server ) ) ) - Min( PN ,CRS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( RCSe - MUC ) / MLU ) * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9336188436830836, "obj2": 0.032815843797975634}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ,( AMS - MDR ) ) ) )", "choosing": "( ( ( DS - RCSe ) + CS ) * ( Min( MUR ,( ( MLU / MUC ) - MUM ) ) / ( RRSe * CS ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( RCSe - MUC ),Min( ( ( CS * RMSe ) - CS ) ,( ( ( CS / ( MUR - MUC ) ) / Max( Max( Min( RRSe ,( MUC - MLU ) ),( Min( MUR ,MUM ) / MUC ) ),( RRSe - Min( ( RRSe / MUC ) ,MUM ) ) ) ) / MUM ) ) )", "obj1": 0.9464668094218416, "obj2": 0.023619970541677138}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( Min( ( MUR - DS ) ,( CS / ( Min( MUC ,RRSe ) - CS ) ) ) - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08383760437265844}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( ( ( DS - RCSe ) + CS ) * ( Min( MUR ,( ( MLU / MUC ) - MUM ) ) / ( RRSe * CS ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08383760437265844}, {"determining": "( Min( FirstVNF_Mem ,( ( PN * Min( RRS ,Const ) ) / Min( MRS ,ACS ) ) ) - Max( FirstVNF_RAM,Min( BR ,( ( FirstVNF_CPU - ( ( Min( Const ,FirstVNF_Mem ) / BR ) - AMS ) ) - ACS ) ) ) )", "choosing": "( Max( ( ( MLU - RMSe ) - CS ),( Min( ( CS / Max( MUC,MUC ) ) ,Max( ( Min( RRSe ,( MUC - DS ) ) * ( Min( MUR ,MUM ) / MUC ) ),Min( RRSe ,Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) ) / ( MUM + RCSe ) ) ) + ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RMSe ) ) ) ) + ( MUC - MLU ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008551351229343194}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Min( ( ARS * Max( ( AMS + FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ,( MDR - Const ) ) ,( FirstVNF_Mem_Server - PN ) ) ,Min( ( FirstVNF_CPU - MDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS / MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( DS - CS ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUC + CS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.21253206344280148}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( Max( DDR,FirstVNF_CPU_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) + Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "Max( ( ( MUM - MUR ) + ( ( Min( RRSe ,Max( MLU,( MUC + MUC ) ) ) / MUR ) * ( ( ( DS * MUR ) + ( Min( RMSe ,RMSe ) / RCSe ) ) / MLU ) ) ),( CS - ( ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * Min( MUC ,Max( MUC,MLU ) ) ) ) ) + MUM ) ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( CRS - MDR ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11274280893936}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - Max( DDR,CRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( ( Min( CS ,( RRSe - MUR ) ) * Max( ( MLU - ( CS * MUM ) ),RCSe ) ) / ( DS / Max( ( RCSe - ( RRSe / RMSe ) ),Min( ( MUC * RRSe ) ,MLU ) ) ) ),RCSe ) - DS ) * ( MUC - MUM ) )", "obj1": 0.7880085653104925, "obj2": 0.10683432351462833}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RRSe - Min( RRSe ,CS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04078645296014756}, {"determining": "( Max( CRS,DDR ) - Max( CRS,DDR ) )", "choosing": "( Min( CS ,MUR ) + Max( ( MUM + MUR ),( ( Min( Max( Min( DS ,RRSe ),( DS / CS ) ) ,Max( MLU,( DS + RCSe ) ) ) / ( ( ( Min( RRSe ,RMSe ) / ( RMSe + MUM ) ) - MLU ) * MUR ) ) * RRSe ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12527271140761326}, {"determining": "( ( ( Max( ARS,ARS ) / Min( MRS ,( CRS - FirstVNF_CPU ) ) ) - Max( ARS,CRS ) ) - Min( ( ( ( BR / ( RRS - FirstVNF_RAM_Server ) ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( DS - MUC ) / Min( Min( ( ( ( MLU / DS ) - ( RMSe / MLU ) ) - RMSe ) ,Max( ( MUM + MUC ),MUR ) ) ,DS ) ) ) * ( ( ( RCSe - MUC ) / MLU ) / Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04078645296014756}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( RMSe + DS ) + MLU ) * RMSe ) - MUM ) ,Max( RRSe,MUR ) )", "obj1": 0.7837259100642399, "obj2": 0.10902548030604077}, {"determining": "( Max( ( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / FirstVNF_Mem ) - ( ( DDR / FirstVNF_RAM_Server ) * Const ) ) ,Min( FirstVNF_CPU ,MDR ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( Min( PN ,PN ) / Min( MRS ,ACS ) ) - Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,Min( ( ( DS / RRSe ) / Max( MLU,( ( ( RMSe + MLU ) + ( MLU * MUC ) ) * Max( RCSe,RCSe ) ) ) ) ,( DS + MUC ) ) ) + ( RCSe / Max( MUC,DS ) ) )", "obj1": 0.9550321199143469, "obj2": 0.02189062093537176}, {"determining": "( ( ( PN * PN ) / Max( MRS,ACS ) ) - Min( PN ,CRS ) )", "choosing": "Max( ( MUR - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,( ( MUR / MUM ) * ( MUC - MUR ) ) ) ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.027726689654212013}, {"determining": "( ( ( ( DDR * PN ) / Min( MRS ,ACS ) ) - ( DDR / PN ) ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM - ( ( CS * ( MUM / MUC ) ) + Min( Min( RMSe ,RCSe ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( AMS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( MUC ,RRSe ) - ( MUR - ( MUM - CS ) ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11977057750476389}, {"determining": "( ( ( BR * PN ) / Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - ( ( DDR - ARS ) + FirstVNF_RAM_Server ) ) ) ) ) - Max( DDR,Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,RMSe ) ) + DS ) )", "obj1": 0.8522483940042827, "obj2": 0.07393991781396465}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS - ( ( CS + ( ( MLU / MUC ) - MUM ) ) / Max( MUC,DS ) ) ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.9400428265524625, "obj2": 0.029533656341369455}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( ( RRS - FirstVNF_CPU ) - AMS ) ) ,PN ) ) / ( ( ARS * RRS ) * ( PN / Max( ( ( ACS * ( FirstVNF_CPU_Server - AMS ) ) / ( FirstVNF_RAM / ( BR - FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,Min( Min( ( Max( RCSe,CS ) * Min( MUR ,MUC ) ) ,Min( Min( DS ,( MUM - RMSe ) ) ,RMSe ) ) ,RMSe ) ) + ( Max( DS,MLU ) / MUR ) )", "obj1": 0.8458244111349036, "obj2": 0.07634108306466689}, {"determining": "( ( ( BR * PN ) / Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - ( ( DDR - ARS ) + FirstVNF_RAM_Server ) ) ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8565310492505354, "obj2": 0.07220911035827429}, {"determining": "( ( AMS / PN ) - Max( Min( ( Max( BR,FirstVNF_Mem ) - Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - Min( ( Max( MUC,DS ) / RCSe ) ,RMSe ) ) ) - CS ) ) + ( Min( MUM ,MLU ) + ( MUM - ( DS - ( ( Min( RRSe ,CS ) - MUC ) * ( MLU / MUM ) ) ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.0691507164687673}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( MUC - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.029533656341369455}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,MUR ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8822269807280514, "obj2": 0.0582741392789921}, {"determining": "( ( AMS * DDR ) - Min( Max( ( RRS / CRS ),Max( CRS,FirstVNF_RAM ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUR,Min( ( ( ( DS + MUR ) + ( MUM - MUM ) ) + RMSe ) ,CS ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.037846105089607646}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( CRS ,FirstVNF_CPU_Server ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( ( RRSe - MUR ) * ( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RRSe - MUM ) / RRSe ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.6638115631691649, "obj2": 0.21253206344280148}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( MUC ,RRSe ) - ( MUR - ( ( MLU + RMSe ) - CS ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.14919518277980906}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( RRS / Min( Min( PN ,ARS ) ,( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( Min( CS ,MLU ) ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) ) ) ) )", "obj1": 0.867237687366167, "obj2": 0.06528893904833138}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - Max( DDR,CRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( CS ,( RMSe / MUC ) )", "obj1": 0.7901498929336188, "obj2": 0.10583359548767235}, {"determining": "( ( FirstVNF_CPU - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( MUC,MUC ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( PN ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( Min( MUM ,( ( MUR / MUM ) * ( MUC - MUR ) ) ) + MLU ) - Min( MUM ,DS ) ) ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11073932124423959}, {"determining": "( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ARS ,( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( ( ( MUM - Max( MUR,Max( DS,( Min( RRSe ,RMSe ) * RRSe ) ) ) ) * ( ( CS / MUM ) + ( ( Min( RMSe ,MUM ) - Min( ( RMSe - MUC ) ,MLU ) ) * MUM ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( PN ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) / ( MDR * FirstVNF_RAM_Server ) ) - ( ACS - Max( MRS,BR ) ) )", "choosing": "( ( ( ( MUM - ( MUM + MLU ) ) * ( ( CS / MUM ) + ( ( Max( RCSe,( CS * MUM ) ) / MUM ) * RCSe ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9635974304068522, "obj2": 0.01755358492864582}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( RRS / Min( Min( PN ,ARS ) ,( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) - RMSe ) ) * MUC ) )", "obj1": 0.867237687366167, "obj2": 0.06528893904833138}, {"determining": "( ( ( Max( ARS,CRS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server - CRS ) + ( ( CRS / ( BR * FirstVNF_Mem_Server ) ) + RRS ) ) )", "choosing": "Min( ( RCSe - MLU ) ,( MUM + MUM ) )", "obj1": 0.8394004282655246, "obj2": 0.08024559190285732}, {"determining": "( ( ( FirstVNF_RAM * MRS ) + BR ) - Min( MRS ,RRS ) )", "choosing": "Max( ( RMSe + ( MUM - MUR ) ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe * RCSe ) ) ,DS ) ) - Max( RMSe,( RCSe * ( MUC + RCSe ) ) ) ) + ( ( RMSe / CS ) / ( MUR - MUC ) ) ) ) )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}, {"determining": "( ( ( FirstVNF_CPU * PN ) / Min( MRS ,( RRS * CRS ) ) ) - Min( RRS ,( PN * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( Max( DS,DS ) * MUM ) + RCSe ),( CS - ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( Max( ( RMSe / CS ),( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) ) ) + ( Max( RMSe,MUM ) + ( Max( RRSe,( ( DS * RRSe ) / ( MUR * MLU ) ) ) + Max( DS,( MUR - Min( CS ,Max( MUR,( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10432976869921111}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( PN,Max( FirstVNF_RAM_Server,AMS ) ) * ( ( AMS + ( BR / ACS ) ) * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( MLU ,MUC ) ,( MUM + MUM ) )", "obj1": 0.8479657387580299, "obj2": 0.07447578608042749}, {"determining": "( ( ( Max( MRS,( RRS - RRS ) ) * PN ) / Min( MRS ,MRS ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( CS + DS ) * MUM ) - RCSe ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06323541762879145}, {"determining": "( Max( MRS,( ( PN * PN ) / Min( MRS ,ACS ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,( Min( MUM ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06141865686504652}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) )", "obj1": 0.8051391862955032, "obj2": 0.09843890190341886}, {"determining": "( Min( BR ,CRS ) - Max( DDR,Min( FirstVNF_CPU ,( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( ( ( RCSe / MUM ) / CS ),( ( Max( DS,RCSe ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7580299785867237, "obj2": 0.12147301173234365}, {"determining": "( ( CRS - DDR ) - Min( DDR ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,Max( ( MLU + CS ),MUC ) ),Min( ( ( Min( ( ( RCSe - DS ) + RRSe ) ,CS ) * RCSe ) - CS ) ,RRSe ) )", "obj1": 0.854389721627409, "obj2": 0.07238653184363282}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Min( MRS ,( ( ( FirstVNF_CPU * PN ) / Min( MRS ,( FirstVNF_Mem * CRS ) ) ) * ( FirstVNF_RAM + PN ) ) ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU - ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS / ( MUR - MUC ) ) / Max( Max( Min( RRSe ,( MUC - MLU ) ),( Max( RMSe,MUM ) / MUC ) ),( RRSe - Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) ) / MUM ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( RMSe / CS ),( MUR - MUC ) ) ) )", "obj1": 0.7601713062098501, "obj2": 0.12040203753382982}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( Max( MUM,RMSe ),RMSe ) + RMSe ) - CS ) ) + ( Min( RRSe ,MLU ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.9229122055674518, "obj2": 0.037846105089607646}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Min( FirstVNF_Mem_Server ,MDR ) ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( AMS - ( MDR - FirstVNF_CPU ) ) ) ,FirstVNF_Mem ) ) / ( MDR * Max( FirstVNF_CPU_Server,DDR ) ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( Min( RCSe ,Max( ( MUC + RMSe ),MUM ) ) + Min( ( DS + MLU ) ,RCSe ) )", "obj1": 0.9635974304068522, "obj2": 0.01755358492864582}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10107778959158592}, {"determining": "( ( FirstVNF_Mem + FirstVNF_Mem ) - Max( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - Max( DDR,CRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( CS ,( MUC + MUM ) )", "obj1": 0.7944325481798715, "obj2": 0.10396485363386283}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12215571553131707}, {"determining": "( Max( ( PN * PN ),Min( MRS ,ACS ) ) - Max( ( Min( CRS ,MDR ) - MDR ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / Min( RCSe ,Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( ( RRSe * MUC ) - MUC ) / DS ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10973697897566259}, {"determining": "( ( Min( Min( BR ,FirstVNF_RAM ) ,Min( Max( Max( RRS,FirstVNF_Mem_Server ),AMS ) ,( CRS + ( ( FirstVNF_Mem_Server - AMS ) + BR ) ) ) ) - ( MDR * FirstVNF_RAM_Server ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - CRS ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( ( Min( RRSe ,( MUC - MLU ) ) * ( Min( MUR ,MUM ) / MUC ) ),Min( RRSe ,Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) / Max( CS,( RRSe + MUC ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004922912604167835}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - AMS ) - Max( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ),Max( ( RRS / ( ( RRS - AMS ) / Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / BR ) ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( ( MUM / MUC ) * CS ) - Min( ( CS - CS ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ARS ,Max( MDR,DDR ) ) ) )", "choosing": "( RMSe + ( Max( ( Min( ( ( ( MUC / MUR ) * MUC ) * MLU ) ,( MUC / Min( ( MUR - MUM ) ,MLU ) ) ) / RMSe ),RCSe ) - RMSe ) )", "obj1": 0.8029978586723768, "obj2": 0.09885266756890304}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351357}, {"determining": "( ( RRS - DDR ) - Max( FirstVNF_CPU,AMS ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - Min( DS ,MLU ) ) )", "obj1": 0.7987152034261242, "obj2": 0.10003232002670534}, {"determining": "( ( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * ( ( RRS - ( AMS / FirstVNF_CPU ) ) + FirstVNF_Mem ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,CS )", "obj1": 0.8629550321199143, "obj2": 0.06780940866303861}, {"determining": "( ( ( PN / PN ) / Min( MRS ,( FirstVNF_Mem * CRS ) ) ) - Max( ( ACS - Max( ARS,( ( RRS - CRS ) * FirstVNF_RAM ) ) ),FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( MUC - DS ) / RMSe ) / DS ) ) ) * ( Min( RCSe ,RMSe ) + Max( ( Min( MUM ,MUR ) / ( MUC * RCSe ) ),( CS * DS ) ) ) ) / Min( RCSe ,Max( RCSe,Min( CS ,RRSe ) ) ) ) + Max( MUR,RCSe ) )", "obj1": 0.8008565310492506, "obj2": 0.09978459703036413}, {"determining": "( ( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * ( ( RRS - ( AMS / FirstVNF_CPU ) ) + FirstVNF_Mem ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,CS )", "obj1": 0.8629550321199143, "obj2": 0.06780940866303861}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - Max( MUC,MUC ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.8822269807280514, "obj2": 0.0582741392789921}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11558949063040223}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - MDR ) ,BR ) ) )", "choosing": "( ( MUC - RCSe ) + ( ( Max( MUM,Min( RCSe ,( CS + MLU ) ) ) - MLU ) + Min( ( ( ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) - ( CS / MUM ) ) + RRSe ) ,MLU ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11450487707414407}, {"determining": "( ( ( ( PN - PN ) / Min( ( PN - CRS ) ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - ( MDR - ( DDR - AMS ) ) ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( RMSe + ( RCSe / ( ( RMSe / ( RMSe - MUC ) ) * DS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( Min( ARS ,( CRS + ( ( FirstVNF_Mem_Server - AMS ) + BR ) ) ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS / ( MUR - Max( MUR,MUM ) ) ) / Max( Max( Min( RRSe ,( MUC - MLU ) ),( Min( MUR ,MUM ) / MUC ) ),Min( RRSe ,Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) ) / MUM ),( ( MLU - RCSe ) - CS ) ) + ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RMSe ) ) ) ) + ( MUC - MLU ) ) )", "obj1": 0.7794432548179872, "obj2": 0.11050302208081984}, {"determining": "( ( ( ( PN * PN ) / Min( CRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU - MDR ) )", "choosing": "( ( RMSe * ( ( ( MUC - ( MUR - MUM ) ) + ( RRSe / DS ) ) + MUM ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( MUC ,RRSe ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03375205056713581}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) )", "choosing": "( ( DS / MLU ) + ( Min( DS ,MLU ) + Max( ( MUR - ( MUC / DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12300104266842092}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( ( RMSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03564567345901551}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) ,( FirstVNF_Mem * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( MUC - CS ) / RMSe ) / DS ) ) ) * Max( ( CS + MUM ),( MLU - MUC ) ) ) / Min( RCSe ,Max( RCSe,Min( CS ,RRSe ) ) ) ) + Max( MUR,RCSe ) )", "obj1": 0.8372591006423983, "obj2": 0.0808769934809355}, {"determining": "( ( FirstVNF_CPU - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Max( ( MUM / ( Max( MUR,( ( ( DS - MLU ) + MUC ) / RMSe ) ) / ( CS * RRSe ) ) ),Max( ( CS + MUM ),( MLU - RCSe ) ) ),Min( ( CS - ( RMSe * CS ) ) ,RRSe ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( BR + FirstVNF_CPU ),( ( MDR - FirstVNF_CPU_Server ) + ( ( ( DDR * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,( RRSe - MUC ) ) * ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / MLU ),RMSe ) - DS ) * ( Min( MLU ,Max( RMSe,Max( Min( MLU ,( MUM * MUR ) ),MUC ) ) ) + Min( Min( MUM ,MUR ) ,RCSe ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06323541762879145}, {"determining": "( ( ( ( PN * PN ) / Min( CRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU - MDR ) )", "choosing": "( ( RMSe * ( ( ( MUC - ( MUR - MUM ) ) + ( RRSe / DS ) ) + MUM ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( MUC ,RRSe ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03375205056713581}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( ( RMSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03564567345901551}, {"determining": "( ( ( PN * PN ) / Max( CRS,ACS ) ) - Min( PN ,CRS ) )", "choosing": "Max( ( MUR - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + ( ( CS - RCSe ) - ( ( ( MUC - CS ) / RMSe ) / DS ) ) ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.027726689654212013}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( ( MUC - RCSe ) + ( ( Max( MUM,Min( RCSe ,( CS + MLU ) ) ) - MLU ) + Min( ( ( ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11450487707414407}, {"determining": "( ( ( Max( ACS,Min( DDR ,RRS ) ) - FirstVNF_CPU ) * ( Min( ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU_Server ) ,AMS ) + ARS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( MUC + Max( MUM,( DS * Min( MUM ,RRSe ) ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09626648854953507}, {"determining": "( ( Min( Min( FirstVNF_RAM ,BR ) ,Min( ARS ,( CRS + ( ( FirstVNF_Mem_Server - AMS ) + BR ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( ( CS * RMSe ) - CS ) ) * ( Min( RRSe ,RMSe ) * RRSe ) ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9850107066381156, "obj2": 0.0068165354960475375}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - Max( ( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) - CS ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9550321199143469, "obj2": 0.02189062093537176}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,Min( Max( ( MLU - CS ),( MLU + MUC ) ) ,RMSe ) )", "obj1": 0.9464668094218416, "obj2": 0.023619970541677138}], "13": [{"determining": "( ( CRS - MDR ) - Max( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ),Max( ( RRS / ( ( RRS - AMS ) / Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / BR ) ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( ( MUM / MUC ) * CS ) - Min( ( CS - CS ) ,( Min( MUM ,DS ) - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,FirstVNF_CPU ) - Max( ( FirstVNF_CPU + BR ),( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( ARS / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,( RRSe - MUC ) ) * ( MLU + DS ) ) / MLU ),RCSe ) - DS ) * ( Min( MLU ,Max( Max( Min( MLU ,( MUM * MUR ) ),Max( ( CS * MUM ),MUC ) ),RMSe ) ) + Min( ( MUM / MUR ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( MUR - MUM ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.6552462526766595, "obj2": 0.21952861063407628}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.6873661670235546, "obj2": 0.1723401189266256}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Min( ( ARS * Max( ( AMS + FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ,( MDR - Const ) ) ,( FirstVNF_Mem_Server - PN ) ) ,Min( ( FirstVNF_CPU - MDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS / MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( DS - CS ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUC + CS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.21253206344280148}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.1723401189266256}, {"determining": "( ( ( PN + PN ) / Min( Min( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( CS - Max( CS,MUR ) ) ) + Max( Max( ( MUR * MUM ),MUR ),DS ) )", "obj1": 0.69593147751606, "obj2": 0.15533564952188034}, {"determining": "( ( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * ( ( RRS - ( AMS / FirstVNF_CPU ) ) + FirstVNF_Mem ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( RMSe,CS ) ,CS )", "obj1": 0.8972162740899358, "obj2": 0.05161667728056558}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RCSe + DS ) + MLU ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.715203426124197, "obj2": 0.14297391302556264}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( ( ( DS - RCSe ) + CS ) * ( Min( MUR ,( ( MLU / MUC ) - MUM ) ) / ( RRSe * CS ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08383760437265843}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),( ( Const + FirstVNF_CPU ) - FirstVNF_RAM_Server ) ) / CRS ) * ( Max( MDR,AMS ) / MRS ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( DS - ( MUM * ( MUC * CS ) ) ) / RMSe ) )", "obj1": 0.7044967880085653, "obj2": 0.1488856037723845}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RRSe - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( Min( CS ,MLU ) ,( MLU / RMSe ) ) ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13252649426168286}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * ( AMS + ( BR / ACS ) ) ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),RRSe ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9036402569593148, "obj2": 0.04717487408395464}, {"determining": "( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( MRS ,( Const * ( FirstVNF_RAM_Server * Const ) ) ) ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( Min( MUM ,MUC ) / RMSe ) / DS ) ) ) * ( Min( RCSe ,RMSe ) + Max( ( Min( MUM ,MUR ) / ( MUR * RCSe ) ),( CS * DS ) ) ) ) / Min( Max( RCSe,( CS - RRSe ) ) ,RCSe ) ) + Max( MUR,RCSe ) )", "obj1": 0.8115631691648822, "obj2": 0.09450525301044316}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - ( DS - ( MUC - ( CS + MUR ) ) ) ) ) )", "obj1": 0.6595289079229122, "obj2": 0.21424024848709716}, {"determining": "( ( DDR - AMS ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( MDR ,FirstVNF_CPU_Server ) + ( ( RRS * ( ( ( RRS + MDR ) - ( PN / FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server / ACS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( ( Min( ( RCSe + CS ) ,RCSe ) + Max( ( ( RRSe - CS ) + MLU ),( RMSe / ( MUR - DS ) ) ) ) + ( MUC / ( DS - MLU ) ) ) * Min( MUR ,( RMSe - ( MLU - ( RCSe / MUC ) ) ) ) ) * RMSe ) ,( CS * ( Min( Max( MUR,MUM ) ,RRSe ) - Min( MUR ,( CS + Min( RRSe ,MUM ) ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.09044157461274757}, {"determining": "( ( ( ( PN * AMS ) / ( MRS + MRS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - PN ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR / ( MUM * RRSe ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RRSe - Min( RRSe ,DS ) ) ) * MLU ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03782915877699088}, {"determining": "( ( ( PN * PN ) / Min( ( Max( PN,Max( FirstVNF_RAM_Server,AMS ) ) * ( ( AMS + ( BR / ACS ) ) * PN ) ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( MUC ,RRSe ) - ( MUR - ( MUC - CS ) ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.15533564952188034}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - ( MDR - ( AMS - DDR ) ) ) ) ,( ( ( MDR * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( CS - CS ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( ( Min( RRSe ,( MUC - MLU ) ) * ( Min( MUR ,MUM ) / MUC ) ),Min( RRSe ,Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) / Max( CS,( RRSe + MUC ) ) ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( DDR - AMS ) - ( ( FirstVNF_RAM_Server - CRS ) + ( ( ( ( DDR * RRS ) * ( ( ( MDR + FirstVNF_RAM_Server ) - ( AMS / DDR ) ) + ( ACS / Const ) ) ) / ( RRS - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( CS ,( ( ( ( MUC * RRSe ) / RRSe ) * Max( RRSe,( ( DS * RCSe ) + ( RMSe + RRSe ) ) ) ) / MUC ) )", "obj1": 0.8201284796573876, "obj2": 0.09044157461274757}, {"determining": "( ( ( PN + PN ) / Min( Min( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( CS - Max( CS,MUR ) ) ) + Max( Max( ( MUR * MUM ),MUR ),DS ) )", "obj1": 0.7130620985010707, "obj2": 0.14801846963681994}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,Min( Max( ( MLU - CS ),( MLU + MUC ) ) ,RMSe ) )", "obj1": 0.9464668094218416, "obj2": 0.023619970541677138}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.728051391862955, "obj2": 0.13733666162560573}, {"determining": "( Max( ( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / FirstVNF_Mem ) - ( ( DDR / FirstVNF_RAM_Server ) * Const ) ) ,Min( FirstVNF_CPU ,MDR ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( Min( PN ,PN ) / Min( MRS ,ACS ) ) - Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,Min( ( ( DS / RRSe ) / Max( MLU,( ( ( RMSe + MLU ) + ( MLU * MUC ) ) * Max( RCSe,RCSe ) ) ) ) ,( DS + MUC ) ) ) + ( RCSe / Max( MUC,DS ) ) )", "obj1": 0.9550321199143469, "obj2": 0.02189062093537176}, {"determining": "( ( ( Max( ARS,CRS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server - CRS ) + ( ( CRS / ( BR * FirstVNF_Mem_Server ) ) + RRS ) ) )", "choosing": "Min( ( RCSe - MLU ) ,( MUM + MUM ) )", "obj1": 0.8394004282655246, "obj2": 0.08024559190285732}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,( FirstVNF_CPU - ( AMS - MDR ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,MUR ) ) ) * RRSe ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07689478982072817}, {"determining": "( ( ( Max( ACS,Min( DDR ,RRS ) ) - FirstVNF_CPU ) * ( Min( ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU_Server ) ,AMS ) + ARS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( MUC + Max( MUM,( DS * Min( MUM ,RRSe ) ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09626648854953507}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( PN ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Min( ( MUR - DS ) ,( CS / ( Min( MUC ,RRSe ) - CS ) ) ) + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04516038100058905}, {"determining": "( ( AMS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_CPU / AMS ) + MRS ) + ( ARS / FirstVNF_Mem_Server ) ) ) ,Const ) + FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( ( RMSe - ( MUM + MLU ) ) * ( ( ( DS + MUR ) / ( RRSe + RRSe ) ) + MUM ) ) ) + Min( DS ,RCSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03149822720264822}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( MUM - MUR ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + MUM ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * CS ) ) ) + MUM ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10602155374210107}, {"determining": "( ( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,( ( FirstVNF_CPU / ( FirstVNF_CPU - MDR ) ) - ACS ) ) ) ) - Max( DDR,Min( ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ACS ) ,BR ) ) ) - ( FirstVNF_CPU - ( AMS - MDR ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( MUM + MUC ) ,( ( RCSe * Min( RCSe ,( CS + MLU ) ) ) + Min( Min( MUM ,MUR ) ,( Max( MUM,RRSe ) * DS ) ) ) ) )", "obj1": 0.9122055674518201, "obj2": 0.043373141944708975}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) )", "choosing": "( ( DS / MLU ) + ( Min( DS ,MLU ) + Max( ( MUR - ( MUC / DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12463614112864008}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.728051391862955, "obj2": 0.13733666162560573}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( ( CRS - MDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,Max( ( RRSe - MUR ),( MUC * DS ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( ( Max( ARS,ARS ) / Min( MRS ,( CRS - FirstVNF_CPU ) ) ) - Max( ARS,CRS ) ) - Min( ( ( ( BR / ( RRS - FirstVNF_RAM_Server ) ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( DS - MUC ) / Min( Min( ( ( ( MLU / DS ) - ( RMSe / MLU ) ) - RMSe ) ,Max( ( MUM + MUC ),MUR ) ) ,DS ) ) ) * ( ( ( RCSe - MUC ) / MLU ) / Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04078645296014756}, {"determining": "( ( ( BR * PN ) / Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - ( ( DDR - ARS ) + FirstVNF_RAM_Server ) ) ) ) ) - Max( DDR,( ( ( PN * PN ) / Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( MUR + Min( Max( ( DS - Min( MUC ,CS ) ),Min( MLU ,MUC ) ) ,RMSe ) ) + DS ) )", "obj1": 0.8051391862955032, "obj2": 0.0979977721550015}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ,( AMS - MDR ) ) ) )", "choosing": "( ( ( ( MUM - ( MUM + MLU ) ) * ( ( CS / MUM ) + ( ( Max( RCSe,RRSe ) / MUM ) * RCSe ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( PN,Max( FirstVNF_RAM_Server,AMS ) ) * ( ( AMS + ( BR / ACS ) ) * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( MLU ,MUC ) ,( MUM + MUM ) )", "obj1": 0.8479657387580299, "obj2": 0.07447578608042749}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( RMSe + DS ) + MLU ) * RMSe ) - MUM ) ,Max( RRSe,MUR ) )", "obj1": 0.7837259100642399, "obj2": 0.10902548030604077}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( ( BR / ACS ),Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( ( MUC - RCSe ) + ( ( MUC - ( CS + MUM ) ) + Min( ( ( ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11928224939672435}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - ( ( DDR - ARS ) + FirstVNF_RAM_Server ) ) ) ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( ( RCSe + RCSe ) ,MLU ) ) ) ) ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11550097453954544}, {"determining": "( ( ( BR * PN ) / Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - ( ( DDR - ARS ) + FirstVNF_RAM_Server ) ) ) ) ) - Max( DDR,Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,RMSe ) ) + DS ) )", "obj1": 0.8522483940042827, "obj2": 0.07393991781396465}, {"determining": "( ( ( PN * PN ) / Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS - Min( MUC ,CS ) ),( MUM - ( ( CS - RCSe ) - ( ( Min( MUM ,MUC ) / RMSe ) / DS ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10298105818267826}, {"determining": "( Min( FirstVNF_Mem ,( ( PN * Min( RRS ,Const ) ) / Min( MRS ,ACS ) ) ) - Max( FirstVNF_RAM,Min( BR ,( ( FirstVNF_CPU - ( ( Min( Const ,FirstVNF_Mem ) / BR ) - AMS ) ) - ACS ) ) ) )", "choosing": "( Max( ( ( MLU - RMSe ) - CS ),( Min( ( CS / Max( MUC,MUC ) ) ,Max( ( Min( RRSe ,( MUC - DS ) ) * ( Min( MUR ,MUM ) / MUC ) ),Min( RRSe ,Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) ) / ( MUM + RCSe ) ) ) + ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RMSe ) ) ) ) + ( MUC - MLU ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008551351229343194}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_CPU_Server / ( FirstVNF_Mem + ( ARS / AMS ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - Min( CS ,( ( CS / RRSe ) - MUC ) ) ) ) + ( Min( DS ,MLU ) + ( MUM - ( DS - ( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.0691507164687673}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RRSe - Min( RRSe ,CS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04078645296014756}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,MUR ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8822269807280514, "obj2": 0.0582741392789921}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( RRSe - MUR ) + ( MUR - Min( ( MUM * MUC ) ,( ( RCSe / MLU ) * Min( ( DS * RMSe ) ,RCSe ) ) ) ) ) ,( RRSe + MLU ) ) * ( MUR / MUR ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351357}, {"determining": "( ( ( PN * PN ) / Max( MRS,ACS ) ) - Min( PN ,CRS ) )", "choosing": "Max( ( MUR - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,( ( MUR / MUM ) * ( MUC - MUR ) ) ) ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.027726689654212013}, {"determining": "( ( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * ( ( RRS - ( AMS / FirstVNF_CPU ) ) + FirstVNF_Mem ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,CS )", "obj1": 0.8629550321199143, "obj2": 0.06780940866303861}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUR - DS ) ,( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUR,( ( MLU + RMSe ) - CS ) ) ) ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) )", "choosing": "( ( DS / MLU ) + ( Min( DS ,MLU ) + Max( ( MUR - ( MUC / DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12300104266842092}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( CS / CS ) ,Max( ( ( CS * RMSe ) - CS ),DS ) ) ) ,( MUM / RCSe ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( FirstVNF_CPU - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( MUC,MUC ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( ( RRS - FirstVNF_CPU ) - AMS ) ) ,PN ) ) / ( ( ARS * RRS ) * ( PN / Max( ( ( ACS * ( FirstVNF_CPU_Server - AMS ) ) / ( FirstVNF_RAM / ( BR - FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,Min( Min( ( Max( RCSe,CS ) * Min( MUR ,MUC ) ) ,Min( Min( DS ,( MUM - RMSe ) ) ,RMSe ) ) ,RMSe ) ) + ( Max( DS,MLU ) / MUR ) )", "obj1": 0.8458244111349036, "obj2": 0.07634108306466689}, {"determining": "( ( ( ( DDR * PN ) / Min( MRS ,ACS ) ) - ( DDR / PN ) ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM - ( ( CS * ( MUM / MUC ) ) + Min( Min( RMSe ,RCSe ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( ( CRS - ( ( FirstVNF_CPU * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU / ( Max( ( RRS + PN ),( ( ACS * FirstVNF_Mem_Server ) * BR ) ) + ( ( CRS * PN ) / ( AMS - MRS ) ) ) ) ) - ( AMS * Min( FirstVNF_RAM ,Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM - RRSe ) + RMSe ) ,( MUC * Min( ( ( MLU - ( RCSe - MUC ) ) + MUC ) ,( RCSe - RRSe ) ) ) ) * Max( Max( ( Min( RRSe ,( ( MUR - RMSe ) / DS ) ) / RRSe ),( RCSe * ( CS * Min( ( MUR - RMSe ) ,MUC ) ) ) ),( MLU * ( ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) ) ) ) * ( Min( DS ,RCSe ) - MUM ) )", "obj1": 0.9678800856531049, "obj2": 0.0154417967447389}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( PN ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( Min( MUM ,( ( MUR / MUM ) * ( MUC - MUR ) ) ) + MLU ) - Min( MUM ,DS ) ) ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11073932124423959}, {"determining": "( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ARS ,( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( ( ( MUM - Max( MUR,Max( DS,( Min( RRSe ,RMSe ) * RRSe ) ) ) ) * ( ( CS / MUM ) + ( ( Min( RMSe ,MUM ) - Min( ( RMSe - MUC ) ,MLU ) ) * MUM ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( PN ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) / ( MDR * FirstVNF_RAM_Server ) ) - ( ACS - Max( MRS,BR ) ) )", "choosing": "( ( ( ( MUM - ( MUM + MLU ) ) * ( ( CS / MUM ) + ( ( Max( RCSe,( CS * MUM ) ) / MUM ) * RCSe ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9635974304068522, "obj2": 0.01755358492864582}, {"determining": "( ( ( ( ( ( AMS + ( ( BR / ACS ) / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - Max( MUC,MUC ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / CS ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06487123460975822}, {"determining": "( ( Min( Min( BR ,FirstVNF_RAM ) ,Min( Max( Max( RRS,FirstVNF_Mem_Server ),AMS ) ,( CRS + ( ( FirstVNF_Mem_Server - AMS ) + BR ) ) ) ) - ( MDR * FirstVNF_RAM_Server ) ) - Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( ( MUR - DS ) + MLU ) - Min( MUM ,DS ) ) ) * ( Max( ( Min( RRSe ,( MUC - MLU ) ) * ( Min( MUR ,MUM ) / MUC ) ),Min( RRSe ,Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) / Max( CS,( RRSe + MUC ) ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0028086203074805115}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) ) + ( Min( RRSe ,MLU ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.9293361884368309, "obj2": 0.03485637690090755}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( Max( Min( ( ( FirstVNF_CPU / Min( AMS ,ARS ) ) - ACS ) ,BR ),DDR ) + ( ( ( PN * PN ) / Min( ( AMS * ( BR * FirstVNF_RAM ) ) ,ACS ) ) - Max( ACS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( ( RRSe - MUR ) + ( MUR - Min( ( MUM * Min( RCSe ,( DS / MUC ) ) ) ,( MUM * MUC ) ) ) ) ,( RRSe + MLU ) ) * ( MUR / MUR ) )", "obj1": 0.9957173447537473, "obj2": 0.0022346293007595094}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,ACS ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( Min( DS ,MLU ) + ( MUM - MLU ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06141865686504652}, {"determining": "( ( ( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) / Min( MRS ,( ARS * CRS ) ) ) - Max( DDR,( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - ( ( ( PN * PN ) + Max( MRS,( AMS / FirstVNF_CPU_Server ) ) ) - Min( PN ,CRS ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) )", "obj1": 0.9421841541755889, "obj2": 0.028597449572209287}, {"determining": "( ( AMS - DDR ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( Max( MUM,RMSe ),RMSe ) + RMSe ) - CS ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13610041472526688}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( AMS + ( BR / ACS ) ) * ( ( Max( RRS,FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) / MRS ) ) * FirstVNF_RAM ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( MRS ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUR * ( ( ( MUM - RMSe ) / RRSe ) / RCSe ) ) + RMSe ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.7730192719486081, "obj2": 0.1131139914196241}, {"determining": "( Min( BR ,CRS ) - Max( DDR,Min( FirstVNF_CPU ,( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( ( ( RCSe / MUM ) / CS ),( ( Max( DS,RCSe ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7580299785867237, "obj2": 0.12147301173234365}, {"determining": "( ( CRS - DDR ) - Min( DDR ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,Max( ( MLU + CS ),MUC ) ),Min( ( ( Min( ( ( RCSe - DS ) + RRSe ) ,CS ) * RCSe ) - CS ) ,RRSe ) )", "obj1": 0.854389721627409, "obj2": 0.07238653184363282}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - Max( ( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,MDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ),Min( Max( AMS,RRS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,( ( MUC - ( ( DS / ( MLU + DS ) ) * CS ) ) * ( MUM / MLU ) ) ) - CS ) * ( ( CS + ( ( Max( RMSe,MLU ) / ( MUC - Min( MUC ,RRSe ) ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9550321199143469, "obj2": 0.02189062093537176}, {"determining": "( ( ( BR * PN ) / Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - ( ( DDR - ARS ) + FirstVNF_RAM_Server ) ) ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8565310492505354, "obj2": 0.07220911035827429}, {"determining": "( ( AMS - DDR ) - Min( ( ( MDR - ( FirstVNF_CPU - ( ( DDR + ARS ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( Max( RMSe,MUM ),RMSe ) - RMSe ) - CS ) ) + ( ( ( ( RRSe * MLU ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13553679842075486}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( DDR * Const ) ,( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - ARS ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( Const ,BR ) )", "choosing": "( ( ( DS / RCSe ) + CS ) * ( Min( MUR ,( ( MUC / MLU ) - ( RRSe + ( ( ( RMSe * RRSe ) / RMSe ) * ( Max( RRSe,DS ) / CS ) ) ) ) ) / ( RRSe * CS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01755358492864582}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351357}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - Max( DDR,CRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( CS ,( RMSe / MUC ) )", "obj1": 0.7901498929336188, "obj2": 0.10583359548767235}, {"determining": "( Max( ( PN * PN ),Min( MRS ,ACS ) ) - Max( ( Min( CRS ,MDR ) - MDR ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / Min( RCSe ,Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( ( RRSe * MUC ) - MUC ) / DS ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10973697897566259}, {"determining": "( ( ( ( ( ( Max( AMS,( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( CRS + MRS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( MUM ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) - CS ) * ( ( RRSe - RMSe ) / ( DS * Min( DS ,MLU ) ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06780940866303861}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( CS - RCSe ) + ( Min( RRSe ,MLU ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8008565310492506, "obj2": 0.0991269556148047}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( RRS / Min( Min( PN ,FirstVNF_Mem_Server ) ,( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Max( ( RMSe - Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ),( ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) - RMSe ) ) * MUC ) )", "obj1": 0.867237687366167, "obj2": 0.06528893904833138}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ARS ,Max( MDR,DDR ) ) ) )", "choosing": "( RMSe + ( Max( ( Min( ( ( ( MUC / MUR ) * MUC ) * MLU ) ,( MUC / Min( ( MUR - MUM ) ,MLU ) ) ) / RMSe ),RCSe ) - RMSe ) )", "obj1": 0.8029978586723768, "obj2": 0.09885266756890304}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,CS )", "obj1": 0.8822269807280514, "obj2": 0.0582741392789921}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS - ( ( CS + ( ( MLU / MUC ) - MUM ) ) / Max( MUC,DS ) ) ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.9400428265524625, "obj2": 0.029533656341369455}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) ,( FirstVNF_Mem * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUM - ( ( CS - RCSe ) - ( ( ( MUC - CS ) / RMSe ) / DS ) ) ) * Max( ( CS + MUM ),( MLU - MUC ) ) ) / Min( RCSe ,Max( RCSe,Min( CS ,RRSe ) ) ) ) + Max( MUR,RCSe ) )", "obj1": 0.8372591006423983, "obj2": 0.0808769934809355}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( ( RMSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03564567345901551}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / RMSe ),RCSe ) - RMSe ) * ( ( RMSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03564567345901551}, {"determining": "( ( AMS - ( ( AMS - ( FirstVNF_RAM / FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - FirstVNF_CPU ) ) ) - ( FirstVNF_Mem * ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM / ( ( ( RRSe / ( MUM * RCSe ) ) * CS ) - MUM ) ) * Max( RMSe,CS ) )", "obj1": 0.9678800856531049, "obj2": 0.0154417967447389}, {"determining": "( ( FirstVNF_CPU - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * ( FirstVNF_CPU - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Max( ( MUM / ( Max( MUR,( ( ( DS - MLU ) + MUC ) / RMSe ) ) / ( CS * RRSe ) ) ),Max( ( CS + MUM ),( MLU - ( MUC - Min( MUC ,RRSe ) ) ) ) ),Min( ( CS - ( RMSe * CS ) ) ,RRSe ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( CRS - MDR ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11274280893936}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) )", "obj1": 0.9400428265524625, "obj2": 0.029533656341369455}, {"determining": "( ( AMS - DDR ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - CRS ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( Max( MUM,RMSe ),RMSe ) + RMSe ) - CS ) ) + ( RMSe - MUC ) )", "obj1": 0.7323340471092077, "obj2": 0.13553679842075486}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( ( AMS + ( BR / ACS ) ) * PN ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( CS - ( MLU + ( RMSe / ( Min( MLU ,MUM ) / ( Max( DS,RRSe ) + MLU ) ) ) ) ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.7965738758029979, "obj2": 0.10107778959158592}, {"determining": "( ( ( Max( MRS,( RRS - RRS ) ) * PN ) / Min( MRS ,MRS ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( CS + DS ) * MUM ) - RCSe ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06323541762879145}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( RRS / Min( Min( PN ,ARS ) ,( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( Min( CS ,MLU ) ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) ) ) ) )", "obj1": 0.867237687366167, "obj2": 0.06528893904833138}, {"determining": "( Min( FirstVNF_Mem ,( ( PN * PN ) / Min( MRS ,ACS ) ) ) - Max( FirstVNF_RAM,Min( ( ( FirstVNF_CPU - ( ( Min( Const ,FirstVNF_Mem ) / BR ) - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( RMSe + ( RCSe / Max( MUC,DS ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008551351229343194}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ,( AMS - MDR ) ) ) )", "choosing": "( ( ( DS - RCSe ) + CS ) * ( Min( MUR ,( ( MLU / MUC ) - MUM ) ) / ( RRSe * CS ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}], "14": [{"determining": "( Max( ( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / FirstVNF_Mem ) - ( ( DDR / FirstVNF_RAM_Server ) * Const ) ) ,Min( FirstVNF_CPU ,MDR ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( Min( PN ,PN ) / Min( MRS ,ACS ) ) - Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,Min( ( ( DS / RRSe ) / Max( MLU,( ( ( RMSe + MLU ) + ( MLU * MUC ) ) * Max( RCSe,RCSe ) ) ) ) ,( DS + MUC ) ) ) + ( RCSe / Max( MUC,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - MDR ) - Max( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ),Max( ( RRS / ( ( RRS - AMS ) / Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / BR ) ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( ( MUM / MUC ) * CS ) - Min( ( CS - CS ) ,( Min( MUM ,DS ) - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU,DDR ) - BR ) / ( MRS / ( PN * Max( MRS,FirstVNF_CPU ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( Max( AMS,FirstVNF_RAM ) * ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( RRSe,MUM ) - ( Max( ( MUR + Max( CS,Min( RRSe ,RCSe ) ) ),RCSe ) / ( CS - RRSe ) ) ) ) + ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * RRSe ) - RCSe ) ) / Max( ( RCSe - MUC ),MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Min( ( ARS * Max( ( AMS + FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ,( MDR - Const ) ) ,( FirstVNF_Mem_Server - PN ) ) ,Min( ( FirstVNF_CPU - MDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS / MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( DS - CS ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUC + CS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.21253206344280148}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( CS,MUR ) - CS ) ) + Max( ( ( MUM - ( MUM + MLU ) ) * ( ( ( MUM + RCSe ) / MUM ) + ( ( Max( RCSe,RRSe ) / MUM ) * RCSe ) ) ),DS ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) - AMS ) + ( ( ( PN * ( ( AMS / DDR ) - FirstVNF_RAM ) ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUR * ( MUR - MUR ) ),( MUC / MLU ) ) + Max( Max( RMSe,MUM ),RMSe ) )", "obj1": 0.6916488222698073, "obj2": 0.1646724073543021}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.6873661670235546, "obj2": 0.1723401189266256}, {"determining": "( ( ( Max( RRS,CRS ) + MRS ) - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),Min( ( MLU - RMSe ) ,CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUM,( Max( Min( RRSe ,MUM ),RCSe ) + ( MUR - MUR ) ) ) - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.1723401189266256}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( ( ( DS - RCSe ) + CS ) * ( Min( MUR ,( ( MLU / MUC ) - MUM ) ) / ( RRSe * CS ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08383760437265843}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( PN,Max( FirstVNF_RAM_Server,AMS ) ) * ( ( ( RRS - FirstVNF_CPU ) + ( BR / ACS ) ) * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( MLU ,Max( ( CS + Min( RRSe ,MUM ) ),MUR ) ) ,( MUM + MUM ) )", "obj1": 0.8950749464668094, "obj2": 0.052676985295776614}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - ( DS - ( MUC - ( CS + MUR ) ) ) ) ) )", "obj1": 0.6595289079229122, "obj2": 0.21424024848709716}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( CS / CS ) ,Max( ( ( CS * RMSe ) - CS ),DS ) ) ) ,( MUM / RCSe ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( Const + MDR ) - ( ( CRS + FirstVNF_RAM_Server ) + ( ( MDR - Max( Const,ACS ) ) + ( ( ( FirstVNF_CPU - ( CRS + ACS ) ) * CRS ) / ( FirstVNF_CPU / RRS ) ) ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( ( MUC - MLU ) + Min( RCSe ,Max( Max( Max( MUM,MUR ),MUC ),( CS * Max( RCSe,RMSe ) ) ) ) ) - CS ) ) + Max( Max( MUM,MUM ),RMSe ) )", "obj1": 0.7901498929336188, "obj2": 0.10424020351736495}, {"determining": "( ( AMS - DDR ) - Min( ( ( FirstVNF_CPU - ( DDR - ( ( RRS * PN ) / ( RRS - CRS ) ) ) ) - ( ( Min( MRS ,ACS ) / ( PN * ( FirstVNF_CPU_Server * ( PN / BR ) ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM + Min( ( Min( MUC ,RRSe ) - CS ) ,CS ) ) ,( ( Max( Max( MUM,Max( ( RCSe - RRSe ),MUC ) ),RMSe ) + RMSe ) - CS ) ) + ( RMSe - MUC ) )", "obj1": 0.8051391862955032, "obj2": 0.0968437433835534}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( DS - RCSe ) + CS ) * ( Min( MUR ,( ( MLU / MUC ) - MUM ) ) / ( RRSe * CS ) ) )", "obj1": 0.9464668094218416, "obj2": 0.023619970541677138}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13969309976923822}, {"determining": "( ( ( ( ( ( Min( AMS ,( BR / Const ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + Min( ( RRS / ACS ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUC - Min( CS ,( RMSe / Max( CS,CS ) ) ) ) * ( MLU / MUM ) ) ) - CS ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( MUR - MUC ) / CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.0678094086630386}, {"determining": "( ( ( AMS * PN ) + Min( MRS ,ACS ) ) - ( ( ( ( CRS / Max( FirstVNF_Mem,PN ) ) / ( RRS - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( MLU,( ( ( DS + ( MLU - RMSe ) ) - ( Max( ( DS + RMSe ),( MUR / MUR ) ) / MLU ) ) - Min( Min( CS ,RRSe ) ,MUC ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1488856037723845}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14120853970428296}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_CPU_Server / ( FirstVNF_Mem + ( ARS / AMS ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - Min( CS ,( ( CS / RRSe ) - MUC ) ) ) ) + ( Min( DS ,MLU ) + ( MUM - ( DS - ( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.0691507164687673}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),( ( Const + FirstVNF_CPU ) - FirstVNF_RAM_Server ) ) / CRS ) * ( Max( MDR,AMS ) / MRS ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( DS - ( MUM * ( MUC * CS ) ) ) / RMSe ) )", "obj1": 0.7044967880085653, "obj2": 0.1488856037723845}, {"determining": "( ( ( Max( ARS,CRS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server - CRS ) + ( ( CRS / ( BR * FirstVNF_Mem_Server ) ) + RRS ) ) )", "choosing": "Min( ( RCSe - MLU ) ,( MUM + MUM ) )", "obj1": 0.8394004282655246, "obj2": 0.08024559190285732}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,( FirstVNF_CPU - ( AMS - MDR ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,MUR ) ) ) * RRSe ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07689478982072817}, {"determining": "( ( MRS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,DS ) ) ) ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.027534874534566683}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RCSe + Min( ( MUR - MUM ) ,RRSe ) ) + MLU ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.708779443254818, "obj2": 0.14607184164731712}, {"determining": "( ( AMS - ( ( AMS - ( Min( ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU_Server ) ,AMS ) + AMS ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - FirstVNF_CPU ) ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( RRSe / MUC ) * CS ) - MUM ) ) * MUC )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( PN ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Min( ( MUR - DS ) ,( CS / ( Min( MUC ,RRSe ) - CS ) ) ) + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04516038100058905}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( AMS + ( BR / ACS ) ) * ( ( Max( RRS,FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) / MRS ) ) * FirstVNF_RAM ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( MRS ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUR * ( ( ( MUM - RMSe ) / RRSe ) / RCSe ) ) + RMSe ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.7730192719486081, "obj2": 0.1131139914196241}, {"determining": "( ( AMS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_CPU / AMS ) + MRS ) + ( ARS / FirstVNF_Mem_Server ) ) ) ,Const ) + FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( ( RMSe - ( MUM + MLU ) ) * ( ( ( DS + MUR ) / ( RRSe + RRSe ) ) + MUM ) ) ) + Min( DS ,RCSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03149822720264822}, {"determining": "( ( AMS - DDR ) - ( ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( PN / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( ( Min( ( MLU * Min( Min( ( MLU - MUR ) ,RRSe ) ,( RMSe - ( MUM + MUR ) ) ) ) ,MUM ) + MLU ) ,RCSe ) ,( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUC,( ( MLU + RMSe ) - Max( DS,MUC ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10194909861953194}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * ( AMS + ( BR / ACS ) ) ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( CS * MLU ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9036402569593148, "obj2": 0.04717487408395464}, {"determining": "( ( ( PN * PN ) / Min( ( CRS * ACS ) ,( ARS * CRS ) ) ) - Max( ( Max( CRS,DDR ) - ( AMS - DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,( Min( RRSe ,MLU ) + ( CS + ( ( MUC + CS ) + MLU ) ) ) ) + ( Min( RCSe ,RMSe ) + Max( ( Min( MUM ,MUR ) / ( MUR * RCSe ) ),( CS * DS ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.1453213231004034}, {"determining": "( ( ( ( PN * PN ) / Min( FirstVNF_Mem ,ARS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( ( CS * CS ) - CS ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / ( CS / Min( RRSe ,MUM ) ) ) ) )", "obj1": 0.9122055674518201, "obj2": 0.0433224919460127}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) )", "choosing": "( ( DS / MLU ) + ( Min( DS ,MLU ) + Max( ( MUR - ( MUC / DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12463614112864008}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ARS ,( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( ( ( MUM - Max( MUR,Max( DS,( Min( RRSe ,RMSe ) * RRSe ) ) ) ) * ( ( CS / MUM ) + ( ( Min( RMSe ,MUM ) - Min( ( RMSe - MUC ) ,MLU ) ) * MUM ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( BR ,CRS ) - Max( DDR,Min( FirstVNF_CPU ,( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( ( ( RCSe / MUM ) / CS ),( ( Max( DS,RCSe ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7580299785867237, "obj2": 0.12147301173234365}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04078645296014756}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( PN ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( Min( MUM ,( ( MUR / MUM ) * ( MUC - MUR ) ) ) + MLU ) - Min( MUM ,DS ) ) ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11073932124423959}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( RMSe + DS ) + MLU ) * RMSe ) - MUM ) ,Max( RRSe,MUR ) )", "obj1": 0.7837259100642399, "obj2": 0.10902548030604077}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) / Max( ( RRS / ( ( RRS - ARS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( ACS ,Max( ( Const - MDR ),( AMS * Max( FirstVNF_CPU,( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) - ( ( FirstVNF_Mem - ( ACS * Min( RRS ,MDR ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.09889585072700044}, {"determining": "( ( ( ( PN * AMS ) / ( MRS + MRS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - PN ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR / ( MUM * RRSe ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RRSe - Min( RRSe ,DS ) ) ) * MLU ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03782915877699088}, {"determining": "( ( ( Max( MRS,( RRS - RRS ) ) * PN ) / Min( MRS ,MRS ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( CS + DS ) * MUM ) - RCSe ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06323541762879145}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ARS ,Max( MDR,DDR ) ) ) )", "choosing": "( RMSe + ( Max( ( Min( ( ( ( MUC / MUR ) * MUC ) * MLU ) ,( MUC / Min( ( MUR - MUM ) ,MLU ) ) ) / RMSe ),RCSe ) - RMSe ) )", "obj1": 0.8029978586723768, "obj2": 0.09885266756890304}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * ( AMS + ( BR / ACS ) ) ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),RRSe ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9036402569593148, "obj2": 0.04717487408395464}, {"determining": "( ( ( BR * PN ) / Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - ( ( DDR - ARS ) + FirstVNF_RAM_Server ) ) ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8565310492505354, "obj2": 0.07220911035827429}, {"determining": "( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( CRS - Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - PN )", "choosing": "Min( ( RCSe + RCSe ) ,Max( ( RRSe - ( ( DS / MUC ) * CS ) ),( MUC * DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * ( ( RRS - ( AMS / FirstVNF_CPU ) ) + FirstVNF_Mem ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( RMSe,CS ) ,CS )", "obj1": 0.8972162740899358, "obj2": 0.05161667728056558}, {"determining": "( ( PN + FirstVNF_Mem_Server ) - ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + DDR ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( MUM / MUC ) * ( Min( CS ,( ( RRSe * MLU ) * RRSe ) ) / ( CS + MUM ) ) ) - ( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ) * ( MUC - RMSe ) ) ) * MUM ) * Max( RMSe,CS ) )", "obj1": 0.7408993576017131, "obj2": 0.1308530050781932}, {"determining": "( Max( ( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / FirstVNF_Mem ) - ( ( DDR / FirstVNF_RAM_Server ) * Const ) ) ,Min( FirstVNF_CPU ,MDR ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( Min( PN ,PN ) / Min( MRS ,ACS ) ) - Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,Min( ( ( DS / RRSe ) / Max( MLU,( ( ( RMSe + MLU ) + ( MLU * MUC ) ) * Max( RCSe,RCSe ) ) ) ) ,( DS + MUC ) ) ) + ( RCSe / Max( MUC,DS ) ) )", "obj1": 0.9550321199143469, "obj2": 0.02189062093537176}, {"determining": "( ( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUM ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) - CS ) * ( ( CS + ( ( RCSe / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008452873906675429}, {"determining": "( Max( ( PN * PN ),Min( MRS ,ACS ) ) - Max( ( Min( CRS ,MDR ) - MDR ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / Min( RCSe ,Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( ( RRSe * MUC ) - MUC ) / DS ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10973697897566259}, {"determining": "( ( ( PN * ( ( ( FirstVNF_CPU * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) / Max( ( RRS / ( Min( ACS ,MRS ) / ( ACS - AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,Max( ( ( FirstVNF_Mem / MDR ) + BR ),( PN / DDR ) ) ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( Max( ( ( DS * ( CS / MLU ) ) + RRSe ),DS ),( CS - ( MLU - RMSe ) ) ) + ( MUM - ( Max( Max( Max( Max( RMSe,( MUR + MUR ) ),RCSe ),RRSe ),Min( MUC ,MUR ) ) - RMSe ) ) )", "obj1": 0.734475374732334, "obj2": 0.1340181960703011}, {"determining": "( ( AMS - DDR ) - ( Min( FirstVNF_RAM_Server ,( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( CS * RRSe ),( DS + Min( DS ,( Min( MLU ,( CS + RRSe ) ) * ( MLU * RMSe ) ) ) ) ) + RMSe ),( MUC - ( ( ( MUR + Min( ( RCSe / ( RCSe + MUM ) ) ,DS ) ) - ( ( CS - ( RRSe * RCSe ) ) + ( DS * CS ) ) ) + MUM ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10602155374210107}, {"determining": "( ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) - ( ( MRS * Min( MDR ,( ARS * RRS ) ) ) + RRS ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( RRSe / ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) ) ,( ( MLU * Min( RCSe ,( CS + MLU ) ) ) + ( Min( ( ( ( MUC * RMSe ) * RCSe ) - RRSe ) ,MUR ) / ( Max( MUM,RRSe ) * DS ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03782915877699088}, {"determining": "( ( ( Max( ARS,ARS ) / Min( MRS ,( CRS - FirstVNF_CPU ) ) ) - Max( ARS,CRS ) ) - Min( ( ( ( BR / ( RRS - FirstVNF_RAM_Server ) ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( DS - MUC ) / Min( Min( ( ( ( MLU / DS ) - ( RMSe / MLU ) ) - RMSe ) ,Max( ( MUM + MUC ),MUR ) ) ,DS ) ) ) * ( ( ( RCSe - MUC ) / MLU ) / Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04078645296014756}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RRSe - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( Min( CS ,MLU ) ,( MLU / RMSe ) ) ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13252649426168286}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,MUR ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8822269807280514, "obj2": 0.0582741392789921}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - AMS ) - ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( MUM / MUC ) * CS ) - Min( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ) ,( Max( Max( MUM,RMSe ),RMSe ) - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.9850107066381156, "obj2": 0.00766784038951006}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( ( ( Min( ( CRS - MDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) + FirstVNF_Mem ) )", "choosing": "( ( Max( ( RCSe / RMSe ),RCSe ) - RMSe ) * ( ( RMSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) )", "obj1": 0.9571734475374732, "obj2": 0.02141052323594556}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( ( BR / ACS ),Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( ( MUC - RCSe ) + ( ( MUC - ( CS + MUM ) ) + Min( ( ( ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11928224939672435}, {"determining": "( ( FirstVNF_CPU - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( MUC,MUC ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( ( RRS - FirstVNF_CPU ) - AMS ) ) ,PN ) ) / ( ( ARS * RRS ) * ( PN / Max( ( ( ACS * ( FirstVNF_CPU_Server - AMS ) ) / ( FirstVNF_RAM / ( BR - FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,Min( Min( ( Max( RCSe,CS ) * Min( MUR ,MUC ) ) ,Min( Min( DS ,( MUM - RMSe ) ) ,RMSe ) ) ,RMSe ) ) + ( Max( DS,MLU ) / MUR ) )", "obj1": 0.8458244111349036, "obj2": 0.07634108306466689}, {"determining": "( ( ( ( DDR * PN ) / Min( MRS ,ACS ) ) - ( DDR / PN ) ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM - ( ( CS * ( MUM / MUC ) ) + Min( Min( RMSe ,RCSe ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * ( ( RRS - ( AMS / FirstVNF_CPU ) ) + FirstVNF_Mem ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( RMSe,CS ) ,CS )", "obj1": 0.8972162740899358, "obj2": 0.05161667728056558}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUR - Max( MUC,DS ) ) + RMSe ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.7751605995717344, "obj2": 0.11215861202452748}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( ( Max( ( PN + ( FirstVNF_RAM_Server / ARS ) ),( Const + FirstVNF_Mem_Server ) ) - Max( FirstVNF_Mem_Server,CRS ) ),( Min( Min( Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ,Max( RRS,DDR ) ) ,Min( Min( Min( DDR ,BR ) ,MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) - CRS ) ) )", "choosing": "( RMSe + ( ( MLU - Min( ( MUR - ( ( ( MLU - MUR ) * ( RRSe / CS ) ) / ( MLU / CS ) ) ) ,( RCSe / MUR ) ) ) - Min( RMSe ,CS ) ) )", "obj1": 0.715203426124197, "obj2": 0.14297391302556264}, {"determining": "( PN - ( RRS + ( ( MDR - FirstVNF_CPU_Server ) + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( RCSe + CS ) ,RCSe ) + ( RMSe / RCSe ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( ( CRS - ( ( FirstVNF_CPU * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU / ( Max( ( RRS + PN ),( ( ACS * FirstVNF_Mem_Server ) * BR ) ) + ( ( CRS * PN ) / ( AMS - MRS ) ) ) ) ) - ( AMS * Min( FirstVNF_RAM ,Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM - RRSe ) + RMSe ) ,( MUC * Min( ( ( MLU - ( RCSe - MUC ) ) + MUC ) ,( RCSe - RRSe ) ) ) ) * Max( Max( ( Min( RRSe ,( ( MUR - RMSe ) / DS ) ) / RRSe ),( RCSe * ( CS * Min( ( MUR - RMSe ) ,MUC ) ) ) ),( MLU * ( ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) ) ) ) * ( Min( DS ,RCSe ) - MUM ) )", "obj1": 0.9678800856531049, "obj2": 0.0154417967447389}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( CRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351357}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( PN ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) / ( MDR * FirstVNF_RAM_Server ) ) - ( ACS - Max( MRS,BR ) ) )", "choosing": "( ( ( ( MUM - ( MUM + MLU ) ) * ( ( CS / MUM ) + ( ( Max( RCSe,( CS * MUM ) ) / MUM ) * RCSe ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9635974304068522, "obj2": 0.01755358492864582}, {"determining": "( ( ( ( ( ( AMS + ( ( BR / ACS ) / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - Max( MUC,MUC ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / CS ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06487123460975822}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - ( MDR - ( AMS - DDR ) ) ) ) ,( ( ( MDR * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( ( ( RCSe / MUM ) / CS ),( ( Max( DS,RCSe ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7451820128479657, "obj2": 0.12691071287050784}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( PN,Max( FirstVNF_RAM_Server,AMS ) ) * ( ( AMS + ( BR / ACS ) ) * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( MLU ,MUC ) ,( MUM + MUM ) )", "obj1": 0.8479657387580299, "obj2": 0.07447578608042749}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,ACS ) ) ) - ( FirstVNF_CPU + ( ( ( AMS - ( ARS * MRS ) ) - MDR ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - FirstVNF_CPU_Server ) ) - ACS ) ,BR ) ) )", "choosing": "( ( RRSe + ( MLU * MUR ) ) + Min( Min( DS ,MLU ) ,( MUM - MLU ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06141865686504652}, {"determining": "( ( AMS - DDR ) - Min( ( ( MDR - ( AMS - ( ( Const * PN ) / ( RRS - PN ) ) ) ) - ( ( Min( CRS ,AMS ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Min( ( ( ( DS / DS ) - ( CS * MUM ) ) * MUR ) ,( CS * ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) ) + RRSe ) - CS ) ) + ( ( MLU + MUC ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13596384568248096}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RCSe + DS ) + MLU ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.715203426124197, "obj2": 0.14297391302556264}, {"determining": "( ( CRS - DDR ) - Min( DDR ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,Max( ( MLU + CS ),MUC ) ),Min( ( ( Min( ( ( RCSe - DS ) + RRSe ) ,CS ) * RCSe ) - CS ) ,RRSe ) )", "obj1": 0.854389721627409, "obj2": 0.07238653184363282}, {"determining": "( ( ( PN * PN ) / Min( Min( ( FirstVNF_CPU_Server / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - ( ( ( PN * PN ) + Max( MRS,( AMS / FirstVNF_CPU_Server ) ) ) - Min( PN ,CRS ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) ) + Max( ( ( MUM - ( MUM + MLU ) ) * ( ( CS / MUM ) + ( ( Max( RCSe,RRSe ) / MUM ) * RCSe ) ) ),DS ) )", "obj1": 0.7387580299785867, "obj2": 0.1310666715012962}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( DDR * Const ) ,( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - ARS ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( Const ,BR ) )", "choosing": "( ( ( DS / RCSe ) + CS ) * ( Min( MUR ,( ( MUC / MLU ) - ( RRSe + ( ( ( RMSe * RRSe ) / RMSe ) * ( Max( RRSe,DS ) / CS ) ) ) ) ) / ( RRSe * CS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01755358492864582}, {"determining": "( ( ( BR * PN ) / Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - ( ( DDR - ARS ) + FirstVNF_RAM_Server ) ) ) ) ) - Max( DDR,Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,RMSe ) ) + DS ) )", "obj1": 0.8522483940042827, "obj2": 0.07393991781396465}, {"determining": "( ( AMS - ( FirstVNF_RAM_Server - AMS ) ) - Min( ( ( CRS - ( ARS / BR ) ) - ( ( ( PN * FirstVNF_CPU ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Max( RCSe,RRSe ) - ( RMSe / MUM ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( Min( MUR ,( Max( CS,MUC ) - MUM ) ) / ( ( MUR / ( Min( MUM ,MUC ) / CS ) ) / RRSe ) ) - MLU ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12195306071101018}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( ( Min( RRSe ,( MUC - MLU ) ) * ( Min( MUR ,MUM ) / MUC ) ),Min( RRSe ,Min( ( RRSe / MUC ) ,( MUR - MUM ) ) ) ) / Max( CS,( RRSe + MUC ) ) ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.728051391862955, "obj2": 0.13733666162560573}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( ( RCSe - MLU ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03281584379797564}, {"determining": "( ( ( Min( ARS ,ACS ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( DDR + CRS ) ) ) / Min( MRS ,Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - ( ( DDR - ARS ) + FirstVNF_RAM_Server ) ) ) ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - MLU ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,Min( MUR ,Min( RMSe ,RCSe ) ) ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( ( RCSe + RCSe ) ,MLU ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.11661651730662026}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( RRS / Min( Min( PN ,FirstVNF_Mem_Server ) ,( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Max( ( RMSe - Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ),( ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) - RMSe ) ) * MUC ) )", "obj1": 0.867237687366167, "obj2": 0.06528893904833138}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.8822269807280514, "obj2": 0.0582741392789921}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - ( ( DDR - ARS ) + FirstVNF_RAM_Server ) ) ) ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( Min( MUC ,RRSe ) - CS ) / ( MUM + Min( ( RCSe + RCSe ) ,MLU ) ) ) ) ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11550097453954544}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ,( AMS - MDR ) ) ) )", "choosing": "( ( ( DS - RCSe ) + CS ) * ( Min( MUR ,( ( MLU / MUC ) - MUM ) ) / ( RRSe * CS ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - ( ( DDR - ARS ) + FirstVNF_RAM_Server ) ) ) ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( ( RCSe + RCSe ) ,MLU ) ) ) ) ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11550097453954544}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,MUR ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.728051391862955, "obj2": 0.13733666162560573}, {"determining": "( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS - ( ( CS + ( ( MLU / MUC ) - MUM ) ) / Max( MUC,DS ) ) ) * RMSe ) - MUM ) ,( RMSe / MUC ) )", "obj1": 0.9400428265524625, "obj2": 0.029533656341369455}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( Max( Min( ( ( FirstVNF_CPU / Min( AMS ,ARS ) ) - ACS ) ,BR ),DDR ) + ( ( ( PN * PN ) / Min( ( AMS * ( BR * FirstVNF_RAM ) ) ,ACS ) ) - Max( ACS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( ( RRSe - MUR ) + ( MUR - Min( ( MUM * Min( RCSe ,( DS / MUC ) ) ) ,( MUM * MUC ) ) ) ) ,( RRSe + MLU ) ) * ( MUR / MUR ) )", "obj1": 0.9957173447537473, "obj2": 0.0022346293007595094}], "15": [{"determining": "( ( CRS - DDR ) - Min( DDR ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,Max( ( MLU + CS ),MUC ) ),Min( ( ( Min( ( ( Min( RRSe ,CS ) - DS ) + RRSe ) ,CS ) * RCSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU,DDR ) - BR ) / ( MRS / ( PN * Max( MRS,FirstVNF_CPU ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( Max( AMS,FirstVNF_RAM ) * ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( RRSe,MUM ) - ( Max( ( MUR + Max( CS,Min( RRSe ,RCSe ) ) ),RCSe ) / ( CS - RRSe ) ) ) ) + ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * RRSe ) - RCSe ) ) / Max( ( RCSe - MUC ),MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( Max( ( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / FirstVNF_Mem ) - ( ( DDR / FirstVNF_RAM_Server ) * Const ) ) ,Min( FirstVNF_CPU ,MDR ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( Min( PN ,PN ) / Min( MRS ,ACS ) ) - Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,Min( ( ( DS / RRSe ) / Max( MLU,( ( ( RMSe + MLU ) + ( MLU * MUC ) ) * Max( RCSe,RCSe ) ) ) ) ,( DS + MUC ) ) ) + ( RCSe / Max( MUC,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * Max( AMS,FirstVNF_RAM ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RMSe + ( RCSe / Max( MUC,DS ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Min( ( ARS * Max( ( AMS + FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ,( MDR - Const ) ) ,( FirstVNF_Mem_Server - PN ) ) ,Min( ( FirstVNF_CPU - MDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS / MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( DS - CS ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUC + CS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.21253206344280148}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) - AMS ) + ( ( ( PN * ( ( AMS / DDR ) - FirstVNF_RAM ) ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUR * ( MUR - MUR ) ),( MUC / MLU ) ) + Max( Max( RMSe,MUM ),RMSe ) )", "obj1": 0.6916488222698073, "obj2": 0.1646724073543021}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( AMS - ( ( RRS * FirstVNF_Mem_Server ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( ( RRSe - CS ),( ( ( ( Min( MUR ,MUC ) + DS ) / Min( RCSe ,Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( ( RRSe * MUC ) - MUC ) / DS ) ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( RCSe + DS ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - RCSe ) - MUM ) ) * MUC )", "obj1": 0.8265524625267666, "obj2": 0.08460880674637018}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( DS - RCSe ) + CS ) * ( Min( MUR ,( ( MLU / MUC ) - MUM ) ) / ( RRSe * CS ) ) )", "obj1": 0.9464668094218416, "obj2": 0.023619970541677138}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - ( DS - ( MUC - ( CS + MUR ) ) ) ) ) )", "obj1": 0.6595289079229122, "obj2": 0.21424024848709716}, {"determining": "( Max( ( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / FirstVNF_Mem ) - ( ( DDR / FirstVNF_RAM_Server ) * Const ) ) ,Min( FirstVNF_CPU ,MDR ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( Min( PN ,PN ) / Min( MRS ,ACS ) ) - Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,Min( ( ( DS / RRSe ) / Max( MLU,( ( ( RMSe + MLU ) + ( MLU * MUC ) ) * Max( RCSe,RCSe ) ) ) ) ,( DS + MUC ) ) ) + ( RCSe / Max( MUC,DS ) ) )", "obj1": 0.9550321199143469, "obj2": 0.02189062093537176}, {"determining": "( ( ( ( ( ( Min( AMS ,( BR / Const ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + Min( ( RRS / ACS ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUC - Min( CS ,( RMSe / Max( CS,CS ) ) ) ) * ( MLU / MUM ) ) ) - CS ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( MUR - MUC ) / CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.0678094086630386}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),( ( Const + FirstVNF_CPU ) - FirstVNF_RAM_Server ) ) / CRS ) * ( Max( MDR,AMS ) / MRS ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( DS - ( MUM * ( MUC * CS ) ) ) / RMSe ) )", "obj1": 0.7044967880085653, "obj2": 0.1488856037723845}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( CS,MUR ) - CS ) ) + Max( ( ( MUM - ( MUM + MLU ) ) * ( ( ( MUM + RCSe ) / MUM ) + ( ( Max( RCSe,RRSe ) / MUM ) * RCSe ) ) ),DS ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( AMS - MDR ) - Max( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( RMSe + DS ) + MLU ) * RMSe ) - MUM ) ,Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( ( RCSe + RCSe ) ,MLU ) ) ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) - DDR ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR - DS ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( ( ( DS - RCSe ) + CS ) * ( Min( MUR ,( ( MLU / MUC ) - MUM ) ) / ( RRSe * CS ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08383760437265843}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( MUM ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( MUC * DS ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ARS ,( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( ( ( MUM - Max( MUR,Max( DS,( Min( RRSe ,RMSe ) * RRSe ) ) ) ) * ( ( CS / MUM ) + ( ( Min( RMSe ,MUM ) - Min( ( RMSe - MUC ) ,MLU ) ) * MUM ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( ( ARS + ( CRS * FirstVNF_CPU_Server ) ) ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( DS - CS ) / ( RCSe / Max( MUC,MUR ) ) ) - MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05370340325151346}, {"determining": "( Min( PN ,MRS ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( MDR - Const ) + ( ( RRS - FirstVNF_CPU ) / ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( Min( ( Min( MUM ,Max( RRSe,( ( ( MLU + MUC ) + CS ) * MUM ) ) ) + Max( ( CS - MLU ),RMSe ) ) ,RCSe ) ,( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUC,( ( MLU + RMSe ) - Max( MUC,DS ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( ( ( AMS * PN ) + Min( MRS ,ACS ) ) - ( ( ( ( CRS / Max( FirstVNF_Mem,PN ) ) / ( RRS - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( MLU,( ( ( DS + ( MLU - RMSe ) ) - ( Max( ( DS + RMSe ),( MUR / MUR ) ) / MLU ) ) - Min( Min( CS ,RRSe ) ,MUC ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1488856037723845}, {"determining": "( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) / Max( ( RRS / ( ( RRS - ARS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( ACS ,Max( ( Const - MDR ),( AMS * Max( FirstVNF_CPU,( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) - ( ( FirstVNF_Mem - ( ACS * Min( RRS ,MDR ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.09889585072700044}, {"determining": "( ( AMS - DDR ) - Min( ( ( FirstVNF_CPU - ( DDR - ( ( RRS * PN ) / ( RRS - CRS ) ) ) ) - ( ( Min( MRS ,ACS ) / ( PN * ( FirstVNF_CPU_Server * ( PN / BR ) ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM + Min( ( Min( MUC ,RRSe ) - CS ) ,CS ) ) ,( ( Max( Max( MUM,Max( ( RCSe - RRSe ),MUC ) ),RMSe ) + RMSe ) - CS ) ) + ( RMSe - MUC ) )", "obj1": 0.8051391862955032, "obj2": 0.0968437433835534}, {"determining": "( ( RRS - DDR ) - ( MDR + Max( FirstVNF_CPU_Server,ARS ) ) )", "choosing": "( ( Min( ( MUC - Max( ( Min( CS ,MUC ) / CS ),RCSe ) ) ,Max( MUR,MLU ) ) / ( ( DS - MUC ) / ( RCSe / Max( RRSe,CS ) ) ) ) * ( RRSe + ( DS - ( DS * MUM ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351353}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( AMS + ( BR / ACS ) ) * ( ( Max( RRS,FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) / MRS ) ) * FirstVNF_RAM ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( MRS ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUR * ( ( ( MUM - RMSe ) / RRSe ) / RCSe ) ) + RMSe ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.7730192719486081, "obj2": 0.1131139914196241}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( CS / CS ) ,Max( ( ( CS * RMSe ) - CS ),DS ) ) ) ,( MUM / RCSe ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( ( ( DDR * PN ) / Min( MRS ,ACS ) ) - ( DDR / PN ) ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM - ( ( CS * ( MUM / MUC ) ) + Min( Min( RMSe ,RCSe ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( PN ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Min( ( MUR - DS ) ,( CS / ( Min( MUC ,RRSe ) - CS ) ) ) + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04516038100058905}, {"determining": "( PN - ( RRS + ( ( MDR - FirstVNF_CPU_Server ) + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( RCSe + CS ) ,RCSe ) + ( RMSe / RCSe ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( Min( BR ,CRS ) - Max( DDR,Min( FirstVNF_CPU ,( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( ( ( RCSe / MUM ) / CS ),( ( Max( DS,RCSe ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7580299785867237, "obj2": 0.12147301173234365}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( Max( ARS,CRS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server - CRS ) + ( ( CRS / ( BR * FirstVNF_Mem_Server ) ) + RRS ) ) )", "choosing": "Min( ( RCSe - MLU ) ,( MUM + MUM ) )", "obj1": 0.8394004282655246, "obj2": 0.08024559190285732}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,ACS ) ) ) - ( FirstVNF_CPU + ( ( ( AMS - ( ARS * MRS ) ) - MDR ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - FirstVNF_CPU_Server ) ) - ACS ) ,BR ) ) )", "choosing": "( ( RRSe + ( MLU * MUR ) ) + Min( Min( DS ,MLU ) ,( MUM - MLU ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06141865686504652}, {"determining": "( ( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * ( ( RRS - ( AMS / FirstVNF_CPU ) ) + FirstVNF_Mem ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( RMSe,CS ) ,CS )", "obj1": 0.8972162740899358, "obj2": 0.05161667728056558}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( DDR * Const ) ,( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - ARS ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( Const ,BR ) )", "choosing": "( ( ( DS / RCSe ) + CS ) * ( Min( MUR ,( ( MUC / MLU ) - ( RRSe + ( ( ( RMSe * RRSe ) / RMSe ) * ( Max( RRSe,DS ) / CS ) ) ) ) ) / ( RRSe * CS ) ) )", "obj1": 0.9293361884368309, "obj2": 0.03507880997033913}, {"determining": "( PN - ( ( ( AMS - PN ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( ( CRS - MDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( ( Min( MUC ,RRSe ) - CS ) + CS ) ,RCSe ) + Max( ( ( RRSe - CS ) + MLU ),( RMSe / ( MUR - DS ) ) ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.9400428265524625, "obj2": 0.02834459500362879}, {"determining": "( ( ( Max( MRS,( RRS - RRS ) ) * PN ) / Min( MRS ,MRS ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( CS + DS ) * MUM ) - RCSe ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06323541762879145}, {"determining": "( ( ( PN * ( ( AMS + ( BR / ACS ) ) * PN ) ) / Min( MRS ,ACS ) ) - Max( ( RRS / Min( Min( PN ,FirstVNF_Mem_Server ) ,( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Max( ( RMSe - Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ),( ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( Max( RMSe,CS ),RCSe ),RRSe ) ) - RMSe ) ) * MUC ) )", "obj1": 0.892933618843683, "obj2": 0.0521862111163124}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * ( AMS + ( BR / ACS ) ) ) * PN ) / Min( MRS ,ACS ) ) - ( ( DDR - ARS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),RRSe ) / ( ( ( MUM + RCSe ) - MUC ) / MLU ) ) )", "obj1": 0.841541755888651, "obj2": 0.07847962549732689}, {"determining": "( ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) - ( ( MRS * Min( MDR ,( ARS * RRS ) ) ) + RRS ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( RRSe / ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) ) ,( ( MLU * Min( RCSe ,( CS + MLU ) ) ) + ( Min( ( ( ( MUC * RMSe ) * RCSe ) - RRSe ) ,MUR ) / ( Max( MUM,RRSe ) * DS ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03782915877699088}, {"determining": "( ( ( PN * PN ) / Min( ( Min( CRS ,MDR ) - Max( MDR,RRS ) ) ,MRS ) ) - Min( MDR ,RRS ) )", "choosing": "Max( Max( Max( Min( CS ,CS ),MUC ),MUR ),Min( ( ( ( ( ( Max( DS,DS ) / DS ) / MUM ) / Min( MUM ,RRSe ) ) - ( ( RMSe / ( RCSe - CS ) ) / DS ) ) - CS ) ,Min( DS ,RCSe ) ) )", "obj1": 0.8565310492505354, "obj2": 0.07145032507447265}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - FirstVNF_CPU ) - Min( ( ( Min( RRS ,MRS ) - PN ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( RRSe / Min( ( MUM * ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) ) ,MUR ) ) ,( ( MLU * Min( RCSe ,( CS * RRSe ) ) ) + Min( Min( MUM ,MUR ) ,( Max( MUM,RRSe ) * DS ) ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.030096311955257984}, {"determining": "( ( PN + FirstVNF_Mem_Server ) - ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + DDR ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( MUM / MUC ) * ( Min( CS ,( ( RRSe * MLU ) * RRSe ) ) / ( CS + MUM ) ) ) - ( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ) * ( MUC - RMSe ) ) ) * MUM ) * Max( RMSe,CS ) )", "obj1": 0.7408993576017131, "obj2": 0.1308530050781932}, {"determining": "( ( AMS - DDR ) - ( ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( PN / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( ( Min( ( MLU * Min( Min( ( MLU - MUR ) ,RRSe ) ,( RMSe - ( MUM + MUR ) ) ) ) ,MUM ) + MLU ) ,RCSe ) ,( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUC,( ( MLU + RMSe ) - Max( DS,MUC ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10194909861953194}, {"determining": "( ( ( PN * ( ( ( FirstVNF_CPU * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) / Max( ( RRS / ( Min( ACS ,MRS ) / ( ACS - AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,Max( ( ( FirstVNF_Mem / MDR ) + BR ),( PN / DDR ) ) ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( Max( ( ( DS * ( CS / MLU ) ) + RRSe ),DS ),( CS - ( MLU - RMSe ) ) ) + ( MUM - ( Max( Max( Max( Max( RMSe,( MUR + MUR ) ),RCSe ),RRSe ),Min( MUC ,MUR ) ) - RMSe ) ) )", "obj1": 0.734475374732334, "obj2": 0.1340181960703011}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.7858672376873662, "obj2": 0.10602155374210107}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RRSe - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( Min( CS ,MLU ) ,( MLU / RMSe ) ) ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13252649426168286}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,MUR ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8822269807280514, "obj2": 0.0582741392789921}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) ) - ( ( ( Min( ( CRS - MDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) + FirstVNF_Mem ) )", "choosing": "( ( Max( ( ( CS + ( ( RCSe / Max( MUC,RMSe ) ) * DS ) ) / RMSe ),RCSe ) - RMSe ) * ( ( RMSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) )", "obj1": 0.9571734475374732, "obj2": 0.020932069847633832}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( DDR * Const ) ,( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - ARS ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( Const ,BR ) )", "choosing": "( ( ( DS / RCSe ) + CS ) * ( Min( MUR ,( ( MUC / MLU ) - ( RRSe + ( ( ( RMSe * RRSe ) / RMSe ) * ( Max( RRSe,DS ) / CS ) ) ) ) ) / ( RRSe * CS ) ) )", "obj1": 0.9293361884368309, "obj2": 0.03507880997033913}, {"determining": "( ( ( ( PN * AMS ) / ( MRS + MRS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - PN ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR / ( MUM * RRSe ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RRSe - Min( RRSe ,DS ) ) ) * MLU ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03782915877699088}, {"determining": "( ( AMS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_CPU / AMS ) + MRS ) + ( ARS / FirstVNF_Mem_Server ) ) ) ,Const ) + FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( ( RMSe - ( MUM + MLU ) ) * ( ( ( DS + MUR ) / ( RRSe + RRSe ) ) + MUM ) ) ) + Min( DS ,RCSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03149822720264822}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13861467158085988}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12356032049026387}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) / Max( ( RRS / ( ( ACS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) - RMSe ) ) )", "obj1": 0.728051391862955, "obj2": 0.13700805663206167}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( ( BR / ACS ),Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( ( MUC - RCSe ) + ( ( MUC - ( CS + MUM ) ) + Min( ( ( ( RRSe / Max( ( MUC - RMSe ),Min( DS ,CS ) ) ) - ( CS / MUM ) ) + CS ) ,MLU ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11928224939672435}, {"determining": "( ( FirstVNF_CPU - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( MUC,MUC ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( ( RRS - FirstVNF_CPU ) - AMS ) ) ,PN ) ) / ( ( ARS * RRS ) * ( PN / Max( ( ( ACS * ( FirstVNF_CPU_Server - AMS ) ) / ( FirstVNF_RAM / ( BR - FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,Min( Min( ( Max( RCSe,CS ) * Min( MUR ,MUC ) ) ,Min( Min( DS ,( MUM - RMSe ) ) ,RMSe ) ) ,RMSe ) ) + ( Max( DS,MLU ) / MUR ) )", "obj1": 0.8458244111349036, "obj2": 0.07634108306466689}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUR - Max( MUC,DS ) ) + RMSe ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.7751605995717344, "obj2": 0.11215861202452748}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( PN ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( Min( MUM ,( ( MUR / MUM ) * ( MUC - MUR ) ) ) + MLU ) - Min( MUM ,DS ) ) ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11073932124423959}, {"determining": "( ( ( PN * RRS ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( AMS ,( MRS - FirstVNF_CPU ) ),Max( MDR,PN ) ) )", "choosing": "( Max( ( RMSe + RCSe ),( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RMSe ) ) ) ) + ( ( Min( DS ,Max( MUC,MUM ) ) + RCSe ) - DS ) ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.8586723768736617, "obj2": 0.0691507164687673}, {"determining": "( ( ( CRS - ( ( FirstVNF_CPU * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU / ( Max( ( RRS + PN ),( ( ACS * FirstVNF_Mem_Server ) * BR ) ) + ( ( CRS * PN ) / ( AMS - MRS ) ) ) ) ) - ( AMS * Min( FirstVNF_RAM ,Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM - RRSe ) + RMSe ) ,( MUC * Min( ( ( MLU - ( RCSe - MUC ) ) + MUC ) ,( RCSe - RRSe ) ) ) ) * Max( Max( ( Min( RRSe ,( ( MUR - RMSe ) / DS ) ) / RRSe ),( RCSe * ( CS * Min( ( MUR - RMSe ) ,MUC ) ) ) ),( MLU * ( ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) ) ) ) * ( Min( DS ,RCSe ) - MUM ) )", "obj1": 0.9678800856531049, "obj2": 0.0154417967447389}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( PN / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / ( CS + Min( RRSe ,MUM ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10194909861953194}, {"determining": "( ( Const + MDR ) - ( ( CRS + FirstVNF_RAM_Server ) + ( ( MDR - Max( Const,ACS ) ) + ( ( ( FirstVNF_CPU - ( CRS + ACS ) ) * CRS ) / ( FirstVNF_CPU / RRS ) ) ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( ( MUC - MLU ) + Min( RCSe ,Max( Max( Max( MUM,MUR ),MUC ),( CS * Max( RCSe,RMSe ) ) ) ) ) - CS ) ) + Max( Max( MUM,MUM ),RMSe ) )", "obj1": 0.7901498929336188, "obj2": 0.10424020351736495}, {"determining": "( ( ( ( ( ( ( MDR - ( AMS - DDR ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * ( ( RRS - ( AMS / FirstVNF_CPU ) ) + FirstVNF_Mem ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) - CS ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) / MLU ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( PN ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) / ( MDR * FirstVNF_RAM_Server ) ) - ( ACS - Max( MRS,BR ) ) )", "choosing": "( ( ( ( MUM - ( MUM + MLU ) ) * ( ( CS / MUM ) + ( ( Max( RCSe,( CS * MUM ) ) / MUM ) * RCSe ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9635974304068522, "obj2": 0.01755358492864582}, {"determining": "( ( AMS - ( FirstVNF_RAM_Server - AMS ) ) - Min( ( ( CRS - ( ARS / BR ) ) - ( ( ( PN * FirstVNF_CPU ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Max( RCSe,RRSe ) - ( RMSe / MUM ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( Min( MUR ,( Max( CS,MUC ) - MUM ) ) / ( ( MUR / ( Min( MUM ,MUC ) / CS ) ) / RRSe ) ) - MLU ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12195306071101018}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7323340471092077, "obj2": 0.1355773814631923}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13969309976923822}, {"determining": "( ( AMS - ( ( AMS - ( Min( ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU_Server ) ,AMS ) + AMS ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - FirstVNF_CPU ) ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( RRSe / MUC ) * CS ) - MUM ) ) * MUC )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( PN,Max( FirstVNF_RAM_Server,AMS ) ) * ( ( AMS + ( BR / ACS ) ) * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / MLU ) + ( Min( DS ,MLU ) + Max( ( MUR - ( MUC / DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07447578608042749}, {"determining": "( ( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( DDR - ARS ) ) )", "choosing": "( ( Min( MUM ,( ( MUC - Min( RRSe ,CS ) ) * ( MLU - RMSe ) ) ) - CS ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9100642398286938, "obj2": 0.044360285333073554}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( AMS - DDR ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - Min( CS ,( ( CS / RRSe ) - MUC ) ) ) ) + ( Min( DS ,MLU ) + ( MUM - ( DS - ( ( MUC - Min( RRSe ,CS ) ) * ( MLU / MUM ) ) ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10424020351736495}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( Min( ( ARS * Max( AMS,FirstVNF_RAM ) ) ,( MDR - Const ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( RMSe + ( RCSe / RCSe ) )", "obj1": 0.7173447537473233, "obj2": 0.14178723693788775}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( RMSe + DS ) + MLU ) * RMSe ) - MUM ) ,Max( RRSe,MUR ) )", "obj1": 0.7837259100642399, "obj2": 0.10902548030604077}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( ( DS - RCSe ) + CS ) * ( Min( MUR ,( ( MLU / MUC ) - MUM ) ) / ( RRSe * CS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01755358492864582}, {"determining": "( ( ( PN * ( Max( ( FirstVNF_Mem_Server * ( ( Const + FirstVNF_RAM_Server ) * Max( BR,AMS ) ) ),( CRS + CRS ) ) / Max( FirstVNF_RAM,PN ) ) ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) )", "choosing": "( ( DS / Min( ( ( Max( Max( RMSe,RMSe ),( DS * CS ) ) - Min( RRSe ,( Min( RRSe ,CS ) / MUC ) ) ) - ( MUR * MUR ) ) ,RMSe ) ) + ( Min( DS ,MLU ) + Max( ( ( MUC / DS ) - MUR ),( ( MUM - CS ) / Min( MUC ,( Min( MUM ,CS ) + CS ) ) ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09795964395784029}, {"determining": "( ( ( BR * PN ) / Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - ( ( DDR - ARS ) + FirstVNF_RAM_Server ) ) ) ) ) - Max( DDR,Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,RMSe ) ) + DS ) )", "obj1": 0.8522483940042827, "obj2": 0.07393991781396465}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,MUR ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.721627408993576, "obj2": 0.14048973718339133}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( MUR / ( MUM * RRSe ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RRSe - Min( RRSe ,DS ) ) ) * MLU ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.708779443254818, "obj2": 0.14607184164731712}, {"determining": "( ( AMS - ( ( AMS - ( Min( ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU_Server ) ,AMS ) + AMS ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - FirstVNF_CPU ) ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( RRSe / MUC ) * CS ) - MUM ) ) * MUC )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,DDR ) ) - Min( ( ( AMS - ( ( ( ARS + Max( RRS,BR ) ) * PN ) - FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUR,( ( MUR / Max( Max( CS,DS ),Max( DS,RRSe ) ) ) - Max( MUC,RCSe ) ) ) ) ) )", "obj1": 0.9336188436830836, "obj2": 0.032815843797975634}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( Max( Min( ( ( FirstVNF_CPU / Min( AMS ,ARS ) ) - ACS ) ,BR ),DDR ) + ( ( ( PN * PN ) / Min( ( AMS * ( BR * FirstVNF_RAM ) ) ,ACS ) ) - Max( ACS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( ( RRSe - MUR ) + ( MUR - Min( ( MUM * Min( RCSe ,( DS / MUC ) ) ) ,( MUM * MUC ) ) ) ) ,( RRSe + MLU ) ) * ( MUR / MUR ) )", "obj1": 0.9957173447537473, "obj2": 0.0022346293007595094}, {"determining": "( ( ( Min( ARS ,ACS ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( DDR + CRS ) ) ) / Min( MRS ,Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - ( ( DDR - ARS ) + FirstVNF_RAM_Server ) ) ) ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - MLU ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,Min( MUR ,Min( RMSe ,RCSe ) ) ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( ( RCSe + RCSe ) ,MLU ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.11661651730662026}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04078645296014756}, {"determining": "( ( ( ( PN * PN ) / Min( FirstVNF_Mem ,ARS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( ( CS * CS ) - CS ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / ( CS / Min( RRSe ,MUM ) ) ) ) )", "obj1": 0.9122055674518201, "obj2": 0.0433224919460127}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( RRS / Min( Min( PN ,FirstVNF_Mem_Server ) ,( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( RMSe,CS ) ,CS )", "obj1": 0.867237687366167, "obj2": 0.06528893904833138}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( ( Max( ( PN + ( FirstVNF_RAM_Server / ARS ) ),( Const + FirstVNF_Mem_Server ) ) - Max( FirstVNF_Mem_Server,CRS ) ),( Min( Min( Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ,Max( RRS,DDR ) ) ,Min( Min( Min( DDR ,BR ) ,MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) - CRS ) ) )", "choosing": "( RMSe + ( ( MLU - Min( ( MUR - ( ( ( MLU - MUR ) * ( RRSe / CS ) ) / ( MLU / CS ) ) ) ,( RCSe / MUR ) ) ) - Min( RMSe ,CS ) ) )", "obj1": 0.715203426124197, "obj2": 0.14297391302556264}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.8822269807280514, "obj2": 0.0582741392789921}, {"determining": "( ( AMS - DDR ) - ( ( AMS + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( ( Max( MLU,MUC ) + CS ) * MUM ) ) ,MUM ) + MLU ) ,RCSe ) ,( CS * ( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09732447011674712}, {"determining": "( ( ( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( DDR,CRS ) ) * PN ) / Min( MRS ,Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - ( ( CRS - ACS ) + FirstVNF_RAM_Server ) ) ) ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - MUM ) - CS ) ) + Max( ( MUM + RCSe ),( ( ( ( RMSe * RMSe ) * MLU ) + RMSe ) - CS ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11550097453954544}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_Mem ) / Max( CRS,AMS ) )", "choosing": "( ( MUM * ( ( ( MUM / ( MLU + ( DS - DS ) ) ) * CS ) - Min( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - ( ( DS + MUR ) * ( Max( DS,DS ) - ( DS * MLU ) ) ) ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}], "16": [{"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( ( Max( ( PN + ( FirstVNF_RAM_Server / ARS ) ),( Const + FirstVNF_Mem_Server ) ) - Max( FirstVNF_Mem_Server,CRS ) ),( Min( Min( Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ,Max( RRS,DDR ) ) ,Min( Min( Min( DDR ,BR ) ,MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) - CRS ) ) )", "choosing": "( RMSe + ( ( MLU - Min( ( MUR - ( ( ( MLU - MUR ) * ( RRSe / CS ) ) / ( MLU / CS ) ) ) ,( RCSe / MUR ) ) ) - Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU,DDR ) - BR ) / ( MRS / ( PN * Max( MRS,FirstVNF_CPU ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( Max( AMS,FirstVNF_RAM ) * ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( RRSe,MUM ) - ( Max( ( MUR + Max( CS,Min( RRSe ,RCSe ) ) ),RCSe ) / ( CS - RRSe ) ) ) ) + ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * RRSe ) - RCSe ) ) / Max( ( RCSe - MUC ),MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( ( CRS - DDR ) - Min( DDR ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUR,Max( ( MLU + CS ),MUC ) ),Min( ( ( Min( ( ( Min( RRSe ,CS ) - DS ) + RRSe ) ,CS ) * RCSe ) - CS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_CPU - FirstVNF_CPU ) * FirstVNF_Mem_Server ) * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( RRS,FirstVNF_Mem ) ,Min( ( ARS * Max( AMS,FirstVNF_RAM ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( Max( MUM,RMSe ) / RMSe ) + RMSe ) / CS ) ) + ( RRSe / MUM ) )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Min( ( ARS * Max( ( AMS + FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ,( MDR - Const ) ) ,( FirstVNF_Mem_Server - PN ) ) ,Min( ( FirstVNF_CPU - MDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS / MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( DS - CS ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUC + CS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.21253206344280148}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) - AMS ) + ( ( ( PN * ( ( AMS / DDR ) - FirstVNF_RAM ) ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUR * ( MUR - MUR ) ),( MUC / MLU ) ) + Max( Max( RMSe,MUM ),RMSe ) )", "obj1": 0.6916488222698073, "obj2": 0.1646724073543021}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( CS,MUR ) - CS ) ) + Max( ( ( MUM - ( MUM + MLU ) ) * ( ( ( MUM + RCSe ) / MUM ) + ( ( Max( RCSe,RRSe ) / MUM ) * RCSe ) ) ),DS ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( AMS - ( ( AMS - ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - FirstVNF_CPU_Server ) ,AMS ) + AMS ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - FirstVNF_CPU ) ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( RRSe / MUC ) * CS ) - Min( MUM ,( RMSe + MUR ) ) ) ) * MUC )", "obj1": 0.892933618843683, "obj2": 0.05097826469797029}, {"determining": "( ( AMS - ( ( Max( ( ACS - CRS ),CRS ) * FirstVNF_Mem ) * CRS ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( ARS + ACS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM - ( ( ( RRSe / MUM ) * ( ( Max( RRSe,MUM ) / DS ) + RMSe ) ) - RMSe ) ) * ( CS - MLU ) )", "obj1": 0.8479657387580299, "obj2": 0.07373656025155062}, {"determining": "( ( AMS - MDR ) - Max( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( RMSe + DS ) + MLU ) * RMSe ) - MUM ) ,Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( ( RCSe + RCSe ) ,MLU ) ) ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( PN * PN ) / Min( ( Min( CRS ,MDR ) - Max( MDR,RRS ) ) ,MRS ) ) - Min( MDR ,RRS ) )", "choosing": "Max( Max( Max( Min( CS ,CS ),MUC ),MUR ),Min( ( ( ( ( ( Max( DS,DS ) / DS ) / MUM ) / Min( MUM ,RRSe ) ) - ( ( RMSe / ( RCSe - CS ) ) / DS ) ) - CS ) ,Min( DS ,RCSe ) ) )", "obj1": 0.8565310492505354, "obj2": 0.07145032507447265}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( RRS / Min( Min( PN ,FirstVNF_Mem_Server ) ,( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( RMSe,CS ) ,CS )", "obj1": 0.867237687366167, "obj2": 0.06528893904833138}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( ( ARS + ( CRS * FirstVNF_CPU_Server ) ) ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( DS - CS ) / ( RCSe / Max( MUC,MUR ) ) ) - MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05370340325151346}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( ACS ,MRS ) ) - Max( DDR,MRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),MDR ) ) ,Min( ARS ,MRS ) ) ) - Min( DDR ,Min( RRS ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RMSe * ( CS / MLU ) ) + RRSe ) - CS ),( ( MLU - RMSe ) - ( DS / DS ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( RMSe - Min( RRSe ,RMSe ) ) * ( MLU / MUM ) ) / MUC ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12332273701197077}, {"determining": "( ( ( ( ( ( Min( AMS ,( BR / Const ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + Min( ( RRS / ACS ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUC - Min( CS ,( RMSe / Max( CS,CS ) ) ) ) * ( MLU / MUM ) ) ) - CS ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( MUR - MUC ) / CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.0678094086630386}, {"determining": "( ( ( AMS * PN ) + Min( MRS ,ACS ) ) - ( ( ( ( CRS / Max( FirstVNF_Mem,PN ) ) / ( RRS - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( MLU,( ( ( DS + ( MLU - RMSe ) ) - ( Max( ( DS + RMSe ),( MUR / MUR ) ) / MLU ) ) - Min( Min( CS ,RRSe ) ,MUC ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1488856037723845}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( AMS - ( ( RRS * FirstVNF_Mem_Server ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( ( RRSe - CS ),( ( ( ( Min( MUR ,MUC ) + DS ) / Min( RCSe ,Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( ( RRSe * MUC ) - MUC ) / DS ) ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( ( CS + ( ( MLU / MUC ) - MUM ) ),RMSe ) + RMSe ) - CS ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09249920691046348}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( ( ( DS - RCSe ) + CS ) * ( Min( MUR ,( ( MLU / MUC ) - MUM ) ) / ( RRSe * CS ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08383760437265843}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.7858672376873662, "obj2": 0.10602155374210107}, {"determining": "( ( Min( Min( FirstVNF_RAM ,ARS ) ,Min( ARS ,( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( ( ( MUM - Max( MUR,Max( DS,( Min( RRSe ,RMSe ) * RRSe ) ) ) ) * ( ( CS / MUM ) + ( ( Min( RMSe ,MUM ) - Min( ( RMSe - MUC ) ,MLU ) ) * MUM ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( ( RRS - FirstVNF_CPU ) - AMS ) ) ,PN ) ) / ( ( ARS * RRS ) * ( PN / Max( ( ( ACS * ( FirstVNF_CPU_Server - AMS ) ) / ( FirstVNF_RAM / ( BR - FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,Min( Min( ( Max( RCSe,CS ) * Min( MUR ,MUC ) ) ,Min( Min( DS ,( MUM - RMSe ) ) ,RMSe ) ) ,RMSe ) ) + ( Max( DS,MLU ) / MUR ) )", "obj1": 0.8458244111349036, "obj2": 0.07634108306466689}, {"determining": "( ( ( CRS - ( ( FirstVNF_CPU * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU / ( Max( ( RRS + PN ),( ( ACS * FirstVNF_Mem_Server ) * BR ) ) + ( ( CRS * PN ) / ( AMS - MRS ) ) ) ) ) - ( AMS * Min( FirstVNF_RAM ,Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM - RRSe ) + RMSe ) ,( MUC * Min( ( ( MLU - ( RCSe - MUC ) ) + MUC ) ,( RCSe - RRSe ) ) ) ) * Max( Max( ( Min( RRSe ,( ( MUR - RMSe ) / DS ) ) / RRSe ),( RCSe * ( CS * Min( ( MUR - RMSe ) ,MUC ) ) ) ),( MLU * ( ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) ) ) ) * ( Min( DS ,RCSe ) - MUM ) )", "obj1": 0.9678800856531049, "obj2": 0.0154417967447389}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( AMS - DDR ) - ( ( AMS / CRS ) + ( Min( ARS ,FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( Min( Max( Max( Max( ( MUR + MUM ),Max( RCSe,DS ) ),( RRSe / Max( RRSe,RMSe ) ) ),( ( Max( MLU,MUC ) + CS ) * MUM ) ) ,MUM ) + MLU ) ,RCSe ) ,( CS * ( ( ( ( RCSe + ( MUC - ( MUC / MUC ) ) ) / ( ( ( MUC / MUC ) + MUC ) / ( ( CS * RMSe ) - CS ) ) ) * MUM ) - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08776968964183635}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),( ( Const + FirstVNF_CPU ) - FirstVNF_RAM_Server ) ) / CRS ) * ( Max( MDR,AMS ) / MRS ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( DS - ( MUM * ( MUC * CS ) ) ) / RMSe ) )", "obj1": 0.7044967880085653, "obj2": 0.1488856037723845}, {"determining": "( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) / Max( ( RRS / ( ( RRS - ARS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( ACS ,Max( ( Const - MDR ),( AMS * Max( FirstVNF_CPU,( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) - ( ( FirstVNF_Mem - ( ACS * Min( RRS ,MDR ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.09889585072700044}, {"determining": "( Min( PN ,MRS ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( MDR - Const ) + ( ( RRS - FirstVNF_CPU ) / ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( Min( ( Min( MUM ,Max( RRSe,( ( ( MLU + MUC ) + CS ) * MUM ) ) ) + Max( ( CS - MLU ),RMSe ) ) ,RCSe ) ,( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUC,( ( MLU + RMSe ) - Max( MUC,DS ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,ACS ) ) ) - ( ( ( DDR - ACS ) + FirstVNF_RAM_Server ) + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( Min( DS ,MLU ) + ( MUM - MLU ) ),( ( MLU - RMSe ) - CS ) ) + ( CS * MLU ) )", "obj1": 0.7623126338329764, "obj2": 0.1189846864826748}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( DS - RCSe ) + CS ) * ( Min( MUR ,( ( MLU / MUC ) - MUM ) ) / ( RRSe * CS ) ) )", "obj1": 0.9464668094218416, "obj2": 0.023619970541677138}, {"determining": "( ( AMS - DDR ) - Min( ( ( FirstVNF_CPU - ( DDR - ( ( RRS * PN ) / ( RRS - CRS ) ) ) ) - ( ( Min( MRS ,ACS ) / ( PN * ( FirstVNF_CPU_Server * ( PN / BR ) ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM + Min( ( Min( MUC ,RRSe ) - CS ) ,CS ) ) ,( ( Max( Max( MUM,Max( ( RCSe - RRSe ),MUC ) ),RMSe ) + RMSe ) - CS ) ) + ( RMSe - MUC ) )", "obj1": 0.8051391862955032, "obj2": 0.0968437433835534}, {"determining": "( ( ( PN * RRS ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( AMS ,( MRS - FirstVNF_CPU ) ),Max( MDR,PN ) ) )", "choosing": "( Max( ( RMSe + RCSe ),( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RMSe ) ) ) ) + ( ( Min( DS ,Max( MUC,MUM ) ) + RCSe ) - DS ) ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.8586723768736617, "obj2": 0.0691507164687673}, {"determining": "( ( RRS - DDR ) - ( MDR + Max( FirstVNF_CPU_Server,ARS ) ) )", "choosing": "( ( Min( ( MUC - Max( ( Min( CS ,MUC ) / CS ),RCSe ) ) ,Max( MUR,MLU ) ) / ( ( DS - MUC ) / ( RCSe / Max( RRSe,CS ) ) ) ) * ( RRSe + ( DS - ( DS * MUM ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351353}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( MUR / ( MUM * RRSe ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RRSe - Min( RRSe ,DS ) ) ) * MLU ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.708779443254818, "obj2": 0.14607184164731712}, {"determining": "( ( ( ACS - DDR ) + FirstVNF_RAM_Server ) - ( ( BR * CRS ) - DDR ) )", "choosing": "( ( RMSe * ( Max( MLU,( MUM - ( Max( CS,( RRSe * CS ) ) * CS ) ) ) - Min( RCSe ,MUC ) ) ) * Max( MUM,CS ) )", "obj1": 0.841541755888651, "obj2": 0.07834067147890801}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( ( Max( MLU,MUC ) + CS ) * MUM ) ) ,MUM ) + MLU ) ,RCSe ) ,( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUC,( ( MLU + RMSe ) - Max( MUC,DS ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( Min( FirstVNF_CPU ,MDR ) ,( Min( BR ,DDR ) - ( FirstVNF_RAM_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( MUM * RRSe ) ) * ( Max( Min( RRSe ,CS ),( ( Max( ( RCSe + DS ),( RRSe - Min( RRSe ,DS ) ) ) * MLU ) - RCSe ) ) / ( MLU / Min( MUM ,RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14552932475083827}, {"determining": "( Max( ( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / FirstVNF_Mem ) - ( ( DDR / FirstVNF_RAM_Server ) * Const ) ) ,Min( FirstVNF_CPU ,MDR ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( Min( PN ,PN ) / Min( MRS ,ACS ) ) - Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,Min( ( ( DS / RRSe ) / Max( MLU,( ( ( RMSe + MLU ) + ( MLU * MUC ) ) * Max( RCSe,RCSe ) ) ) ) ,( DS + MUC ) ) ) + ( RCSe / Max( MUC,DS ) ) )", "obj1": 0.9550321199143469, "obj2": 0.02189062093537176}, {"determining": "( FirstVNF_RAM - ( Max( CRS,BR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( RRSe / RCSe ),( RCSe * ( ( RCSe + MUR ) / Min( RMSe ,Min( ( CS + RRSe ) ,DS ) ) ) ) ) ,( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) )", "obj1": 0.9486081370449678, "obj2": 0.022683763772516966}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - ( DS - ( MUC - ( CS + MUR ) ) ) ) ) )", "obj1": 0.6595289079229122, "obj2": 0.21424024848709716}, {"determining": "( ( AMS - DDR ) - Min( ( RRS - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MLU,( DS + ( CS + ( ( MUC + CS ) + DS ) ) ) ) + ( CS - MLU ) )", "obj1": 0.7580299785867237, "obj2": 0.12070992699863656}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) * ( ( FirstVNF_RAM / Const ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( MLU ,Min( ( CS / CS ) ,Max( ( ( ( ( RMSe - MUR ) / Max( RRSe,MUM ) ) + RMSe ) - CS ),DS ) ) ) ,( MUM / RCSe ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( ( ( DDR * PN ) / Min( MRS ,ACS ) ) - ( DDR / PN ) ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM - ( ( CS * ( MUM / MUC ) ) + Min( Min( RMSe ,RCSe ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( PN ,FirstVNF_Mem_Server ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - ARS ) ) ,FirstVNF_Mem ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( PN ,BR ) )", "choosing": "( ( ( DS / RCSe ) + CS ) * ( Min( MUR ,( ( MUC / MLU ) - ( RRSe + ( ( ( RMSe * RRSe ) / RMSe ) * ( ( MUR * MUC ) / CS ) ) ) ) ) / ( RRSe * ( Min( ( MUR - DS ) ,( CS / ( Min( MUC ,RRSe ) - CS ) ) ) + RMSe ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035078809970339124}, {"determining": "( ( ( ( ( AMS + ( RRS / ACS ) ) * PN ) * FirstVNF_RAM ) - DDR ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR - DS ) + ( ( ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07960860125335804}, {"determining": "( PN - ( RRS + ( ( MDR - FirstVNF_CPU_Server ) + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( RCSe + CS ) ,RCSe ) + ( RMSe / RCSe ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( ( FirstVNF_CPU + ( ( Max( BR,BR ) + Max( ( ACS + FirstVNF_CPU ),FirstVNF_RAM_Server ) ) + ( ( BR * PN ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ,( AMS - MDR ) ) ) )", "choosing": "( ( ( ( ( MUM / MUC ) * CS ) - Min( ( ( ( DS * ( MUM * MLU ) ) + RRSe ) - CS ) ,( MUM - RMSe ) ) ) * MUM ) * Max( Max( ( MLU / MUR ),MUR ),CS ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( ( ( PN * MDR ) / Min( MRS ,ACS ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) * MRS ) ) ) )", "choosing": "( ( CS + ( DS * ( MUR / MUC ) ) ) + ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( ( RCSe - DS ),RCSe ),RRSe ) ) - RMSe ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08460880674637018}, {"determining": "( ( FirstVNF_CPU - ( BR / FirstVNF_RAM ) ) - Min( ( FirstVNF_Mem_Server / ( MDR * Max( Min( DDR ,FirstVNF_Mem_Server ),CRS ) ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( Min( MUC ,Max( RMSe,CS ) ) - CS ) ,( ( RRSe / ( ( ( ( MLU + RCSe ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUM ) ) - ( CS * RCSe ) ) )", "obj1": 0.9379014989293362, "obj2": 0.03009631195525798}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13969309976923822}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,ACS ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - RRS ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( Min( DS ,MLU ) + ( MUM - MLU ) ),( RRSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10959053612816724}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( Min( ACS ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( ( RMSe + DS ) + MLU ) * RMSe ) - MUM ) ,Max( RRSe,MUR ) )", "obj1": 0.7837259100642399, "obj2": 0.10902548030604077}, {"determining": "( ( ( MRS / Min( ( FirstVNF_CPU_Server - MRS ) ,RRS ) ) / FirstVNF_RAM_Server ) - ( ( ( MDR - ( AMS - DDR ) ) - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RCSe + DS ),( ( MLU - RMSe ) - CS ) ) + ( MUM - ( Max( ( MUC + ( Min( ( MLU + MUM ) ,MUR ) * MLU ) ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) - RMSe ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13744958548362998}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,MUR ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8822269807280514, "obj2": 0.0582741392789921}, {"determining": "( ( AMS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_CPU / AMS ) + MRS ) + ( ARS / FirstVNF_Mem_Server ) ) ) ,Const ) + FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( ( RMSe - ( MUM + MLU ) ) * ( ( ( DS + MUR ) / ( RRSe + RRSe ) ) + MUM ) ) ) + Min( DS ,RCSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03149822720264822}, {"determining": "( ( AMS - ( FirstVNF_RAM_Server - AMS ) ) - Min( ( ( CRS - ( ARS / BR ) ) - ( ( ( PN * FirstVNF_CPU ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Max( RCSe,RRSe ) - ( RMSe / MUM ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( Min( MUR ,( Max( CS,MUC ) - MUM ) ) / ( ( MUR / ( Min( MUM ,MUC ) / CS ) ) / RRSe ) ) - MLU ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12195306071101018}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( FirstVNF_CPU - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( MUC,MUC ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUR - Max( MUC,DS ) ) + RMSe ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.7751605995717344, "obj2": 0.11215861202452748}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( ( PN * ( ( ( FirstVNF_CPU * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) / Max( ( RRS / ( Min( ACS ,MRS ) / ( ACS - AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,Max( ( ( FirstVNF_Mem / MDR ) + BR ),( PN / DDR ) ) ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( Max( ( ( DS * ( CS / MLU ) ) + RRSe ),DS ),( CS - ( MLU - RMSe ) ) ) + ( MUM - ( Max( Max( Max( Max( RMSe,( MUR + MUR ) ),RCSe ),RRSe ),Min( MUC ,MUR ) ) - RMSe ) ) )", "obj1": 0.734475374732334, "obj2": 0.1340181960703011}, {"determining": "( Min( ( CRS * ARS ) ,( ( MDR / MRS ) / ACS ) ) - ( Min( CRS ,Const ) + ( FirstVNF_CPU + ( ( ( ( Const + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( CS / MUM ) - RCSe ) - ( MLU + Min( CS ,RRSe ) ) ) + Min( CS ,( ( RRSe / ( MLU * RRSe ) ) / RCSe ) ) ) - MUM ) ) * MUC )", "obj1": 0.7922912205567452, "obj2": 0.10296995276521294}, {"determining": "( ( Min( PN ,( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + ARS ) ) / Max( ( RRS / ( Min( Const ,AMS ) / Min( BR ,FirstVNF_CPU_Server ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( ARS - FirstVNF_RAM ) + ( ( ( PN * ( PN + ( BR / ACS ) ) ) / FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( ( CS * MUM ) - MLU ) - Min( RRSe ,MUC ) ),DS ) ) + MUM ) - CS ) + ( ( MUR * RMSe ) + Max( RRSe,CS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13483140996736265}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( PN ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Min( ( MUR - DS ) ,( CS / ( Min( MUC ,RRSe ) - CS ) ) ) + RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04516038100058905}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( PN ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) / ( MDR * FirstVNF_RAM_Server ) ) - ( ACS - Max( MRS,BR ) ) )", "choosing": "( ( ( ( MUM - ( MUM + MLU ) ) * ( ( CS / MUM ) + ( ( Max( RCSe,( CS * MUM ) ) / MUM ) * RCSe ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9635974304068522, "obj2": 0.01755358492864582}, {"determining": "( ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) - DDR ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR - DS ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08883449571926295}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RRSe - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( Min( CS ,MLU ) ,( MLU / RMSe ) ) ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13252649426168286}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,AMS ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC + RCSe ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUM / MUC ) * CS ) / ( RRSe * CS ) ) )", "obj1": 0.9207708779443254, "obj2": 0.038180681009732174}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( MRS - MRS ) ) )", "choosing": "( ( MUM * ( ( MUM + CS ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,MUR ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13615000351030565}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( CS / RRSe ) ,Max( ( ( CS * ( Min( MUM ,DS ) / ( MUC * MUM ) ) ) - CS ),Min( RRSe ,RMSe ) ) ) ) ,( MUM / RCSe ) )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}, {"determining": "( ( ( Max( MRS,( RRS - RRS ) ) * PN ) / Min( MRS ,MRS ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( CS + DS ) * MUM ) - RCSe ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06323541762879145}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,ACS ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( Min( DS ,MLU ) + ( MUM - MLU ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06141865686504652}, {"determining": "( PN - ( DDR / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * MDR ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / Min( ( ( Max( Max( RMSe,RMSe ),( DS * CS ) ) - Min( RRSe ,( Min( RRSe ,CS ) / MUC ) ) ) - ( MUR * MUR ) ) ,RMSe ) ) + ( Min( DS ,MLU ) + Max( ( ( MUR / DS ) - MUR ),( ( MUM - CS ) / Min( MUC ,( Min( MUM ,CS ) + ( Max( MUR,MLU ) / ( CS / RRSe ) ) ) ) ) ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( AMS - DDR ) - ( ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( PN / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( ( Min( ( MLU * Min( Min( ( MLU - MUR ) ,RRSe ) ,( RMSe - ( MUM + MUR ) ) ) ) ,MUM ) + MLU ) ,RCSe ) ,( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUC,( ( MLU + RMSe ) - Max( DS,MUC ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10194909861953194}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( MUM ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( MUC * DS ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( PN + FirstVNF_Mem_Server ) - ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + DDR ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( MUM / MUC ) * ( Min( CS ,( ( RRSe * MLU ) * RRSe ) ) / ( CS + MUM ) ) ) - ( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ) * ( MUC - RMSe ) ) ) * MUM ) * Max( RMSe,CS ) )", "obj1": 0.7408993576017131, "obj2": 0.1308530050781932}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( Min( CS ,Min( ( ( DS / RRSe ) / Max( MLU,( ( ( RMSe + MLU ) + ( MLU * MUC ) ) * Max( RCSe,RCSe ) ) ) ) ,( DS + MUC ) ) ) + ( RCSe / Max( MUC,DS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01755358492864582}, {"determining": "( ( ( PN * ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) )", "choosing": "( ( DS / MLU ) + ( Min( DS ,MLU ) + Max( ( MUR - ( MUC / DS ) ),( ( MUM - CS ) / ( MUC / ( CS + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.0979289818356018}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_Mem ) / Max( CRS,AMS ) )", "choosing": "( ( MUM * ( ( ( MUM / ( MLU + ( DS - DS ) ) ) * CS ) - Min( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - ( ( DS + MUR ) * ( Max( DS,DS ) - ( DS * MLU ) ) ) ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( ( AMS - ( ( AMS - ( Min( ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU_Server ) ,AMS ) + AMS ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - FirstVNF_CPU ) ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( RRSe / MUC ) * CS ) - MUM ) ) * MUC )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( PN ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "Max( ( RMSe - Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ),( ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( Max( RMSe,CS ),RCSe ),RRSe ) ) - RMSe ) ) * MUC ) )", "obj1": 0.9079229122055674, "obj2": 0.04516038100058905}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,DDR ) ) - Min( ( ( AMS - ( ( ( ARS + Max( RRS,BR ) ) * PN ) - FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUR,( ( MUR / Max( Max( CS,DS ),Max( DS,RRSe ) ) ) - Max( MUC,RCSe ) ) ) ) ) )", "obj1": 0.9336188436830836, "obj2": 0.032815843797975634}, {"determining": "( ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) - DDR ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( Min( MUM ,( ( MUR / MUM ) * ( MUC - MUR ) ) ) + MLU ) - Min( MUM ,DS ) ) ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,MUR ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.728051391862955, "obj2": 0.1367221924025906}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( Max( Min( ( ( FirstVNF_CPU / Min( AMS ,ARS ) ) - ACS ) ,BR ),DDR ) + ( ( ( PN * PN ) / Min( ( AMS * ( BR * FirstVNF_RAM ) ) ,ACS ) ) - Max( ACS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( ( RRSe - MUR ) + ( MUR - Min( ( MUM * Min( RCSe ,( DS / MUC ) ) ) ,( MUM * MUC ) ) ) ) ,( RRSe + MLU ) ) * ( MUR / MUR ) )", "obj1": 0.9957173447537473, "obj2": 0.0022346293007595094}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( RMSe + ( RCSe / Max( MUC,( ( ( RMSe * RRSe ) / RMSe ) * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14061344669043446}, {"determining": "( ( Const + MDR ) - ( ( CRS + FirstVNF_RAM_Server ) + ( ( MDR - Max( Const,ACS ) ) + ( ( ( FirstVNF_CPU - ( CRS + ACS ) ) * CRS ) / ( FirstVNF_CPU / RRS ) ) ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( ( MUC - MLU ) + Min( RCSe ,Max( Max( Max( MUM,MUR ),MUC ),( CS * Max( RCSe,RMSe ) ) ) ) ) - CS ) ) + Max( Max( MUM,MUM ),RMSe ) )", "obj1": 0.7901498929336188, "obj2": 0.10424020351736495}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( MRS ,Max( ( AMS + FirstVNF_Mem_Server ),( FirstVNF_Mem - ( ( DDR - ACS ) + FirstVNF_RAM_Server ) ) ) ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + Max( ( MUM + RCSe ),( ( ( MUR - Max( MUC,DS ) ) + RMSe ) - CS ) ) )", "obj1": 0.7665952890792291, "obj2": 0.11654010604865371}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) + CS ) * ( Min( MUR ,( ( MUC / MLU ) - ( RRSe + ( ( ( RMSe * RRSe ) / RMSe ) * ( ( MUR * MUC ) / CS ) ) ) ) ) / ( RRSe * CS ) ) )", "obj1": 0.715203426124197, "obj2": 0.14297391302556264}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04078645296014756}, {"determining": "( ( ( ( PN * PN ) / Min( FirstVNF_Mem ,ARS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( ( CS * CS ) - CS ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / ( CS / Min( RRSe ,MUM ) ) ) ) )", "obj1": 0.9122055674518201, "obj2": 0.0433224919460127}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( ( Max( ( PN + ( FirstVNF_RAM_Server / ARS ) ),( Const + FirstVNF_Mem_Server ) ) - Max( FirstVNF_Mem_Server,CRS ) ),( Min( Min( Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ,Max( RRS,DDR ) ) ,Min( Min( Min( DDR ,BR ) ,MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) - CRS ) ) )", "choosing": "( RMSe + ( ( MLU - Min( ( MUR - ( ( ( MLU - MUR ) * ( RRSe / CS ) ) / ( MLU / CS ) ) ) ,( RCSe / MUR ) ) ) - Min( RMSe ,CS ) ) )", "obj1": 0.715203426124197, "obj2": 0.14297391302556264}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.8822269807280514, "obj2": 0.0582741392789921}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / MLU ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.0433224919460127}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( PN / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / ( CS + Min( RRSe ,MUM ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10194909861953194}], "17": [{"determining": "( ( ( ( ( ( Min( AMS ,( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + Min( ( RRS / ACS ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUC - Min( ( RMSe / Max( DS,CS ) ) ,CS ) ) * ( MLU / MUM ) ) ) - CS ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( MUR - MUC ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU,DDR ) - BR ) / ( MRS / ( PN * Max( MRS,FirstVNF_CPU ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( Max( AMS,FirstVNF_RAM ) * ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( RRSe,MUM ) - ( Max( ( MUR + Max( CS,Min( RRSe ,RCSe ) ) ),RCSe ) / ( CS - RRSe ) ) ) ) + ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * RRSe ) - RCSe ) ) / Max( ( RCSe - MUC ),MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( ( Max( ( PN + ( FirstVNF_RAM_Server / ARS ) ),( Const + FirstVNF_Mem_Server ) ) - Max( FirstVNF_Mem_Server,CRS ) ),( Min( Min( Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ,Max( RRS,DDR ) ) ,Min( Min( Min( DDR ,BR ) ,MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) - CRS ) ) )", "choosing": "( RMSe + ( ( MLU - Min( ( MUR - ( ( ( MLU - MUR ) * ( RRSe / CS ) ) / ( MLU / CS ) ) ) ,( RCSe / MUR ) ) ) - Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( FirstVNF_Mem_Server ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( Max( MUM,RMSe ),RMSe ) + RMSe ) / CS ) ) + ( ( ( ( ( MUC / ( CS - Min( MUM ,MLU ) ) ) + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Min( ( ARS * Max( ( AMS + FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ,( MDR - Const ) ) ,( FirstVNF_Mem_Server - PN ) ) ,Min( ( FirstVNF_CPU - MDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS / MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( DS - CS ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUC + CS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.21253206344280148}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) - AMS ) + ( ( ( PN * ( ( AMS / DDR ) - FirstVNF_RAM ) ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUR * ( MUR - MUR ) ),( MUC / MLU ) ) + Max( Max( RMSe,MUM ),RMSe ) )", "obj1": 0.6916488222698073, "obj2": 0.1646724073543021}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( AMS - ( ( RRS * FirstVNF_Mem_Server ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( ( RRSe - CS ),( ( ( ( Min( MUR ,MUC ) + DS ) / Min( RCSe ,Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( ( RRSe * MUC ) - MUC ) / DS ) ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - ( DS - ( MUC - ( CS + MUR ) ) ) ) ) )", "obj1": 0.6595289079229122, "obj2": 0.21424024848709716}, {"determining": "( MDR - ( FirstVNF_CPU + ( Max( MDR,( AMS - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( MDR - BR ) ) ) ) ) + ( Min( ( FirstVNF_Mem - ( RRS / MDR ) ) ,MRS ) / ( FirstVNF_CPU - RRS ) ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( MLU,MUC ) ) * ( Min( MUR ,( ( ( MUR / RCSe ) - ( DS - ( MUC + CS ) ) ) - MUR ) ) - ( RRSe * CS ) ) )", "obj1": 0.9550321199143469, "obj2": 0.020902055740568814}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * DDR ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + PN ) / RRS ) ,MDR ) - RRS ) - ( ( PN * PN ) / Min( Min( FirstVNF_CPU_Server ,ARS ) ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( CS / MLU ) * RRSe ) + RRSe ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( ( RRSe / MUC ),RCSe ),RRSe ) ) - RMSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.1646724073543021}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( ( PN * PN ) / Min( ( AMS - Max( MDR,RRS ) ) ,MRS ) ) - Min( MDR ,AMS ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( ( RCSe / Min( MUM ,RRSe ) ),RCSe ),RRSe ) ) - RMSe ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04262563972784058}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( ACS ,MRS ) ) - Max( DDR,MRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),MDR ) ) ,Min( ARS ,MRS ) ) ) - Min( DDR ,Min( RRS ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RMSe * ( CS / MLU ) ) + RRSe ) - CS ),( ( MLU - RMSe ) - ( DS / DS ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( RMSe - Min( RRSe ,RMSe ) ) * ( MLU / MUM ) ) / MUC ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12332273701197077}, {"determining": "( ( ( ( ( ( Min( AMS ,( BR / Const ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + Min( ( RRS / ACS ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUC - Min( CS ,( RMSe / Max( CS,CS ) ) ) ) * ( MLU / MUM ) ) ) - CS ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( MUR - MUC ) / CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.0678094086630386}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( ( CS + ( ( MLU / MUC ) - MUM ) ),RMSe ) + RMSe ) - CS ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09249920691046348}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( RRS - DDR ) - ( MDR + Max( FirstVNF_CPU_Server,ARS ) ) )", "choosing": "( ( Min( ( MUC - Max( ( Min( CS ,MUC ) / CS ),RCSe ) ) ,Max( MUR,MLU ) ) / ( ( DS - MUC ) / ( RCSe / Max( RRSe,CS ) ) ) ) * ( RRSe + ( DS - ( DS * MUM ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351353}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( ( RRS - FirstVNF_CPU ) - AMS ) ) ,PN ) ) / ( ( ARS * RRS ) * ( PN / Max( ( ( ACS * ( FirstVNF_CPU_Server - AMS ) ) / ( FirstVNF_RAM / ( BR - FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,Min( Min( ( Max( RCSe,CS ) * Min( MUR ,MUC ) ) ,Min( Min( DS ,( MUM - RMSe ) ) ,RMSe ) ) ,RMSe ) ) + ( Max( DS,MLU ) / MUR ) )", "obj1": 0.8458244111349036, "obj2": 0.07634108306466689}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( RMSe + ( RCSe / Max( MUC,( ( ( RMSe * RRSe ) / RMSe ) * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14061344669043446}, {"determining": "( ( FirstVNF_CPU - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( MUC,MUC ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) )", "choosing": "( ( ( DS - ( ( ( CS * MLU ) - CS ) - CS ) ) + CS ) * ( ( ( MUM / MUC ) * CS ) / ( RRSe * CS ) ) )", "obj1": 0.854389721627409, "obj2": 0.07074996226840143}, {"determining": "( ( ( CRS - ( ( FirstVNF_CPU * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU / ( Max( ( RRS + PN ),( ( ACS * FirstVNF_Mem_Server ) * BR ) ) + ( ( CRS * PN ) / ( AMS - MRS ) ) ) ) ) - ( AMS * Min( FirstVNF_RAM ,Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM - RRSe ) + RMSe ) ,( MUC * Min( ( ( MLU - ( RCSe - MUC ) ) + MUC ) ,( RCSe - RRSe ) ) ) ) * Max( Max( ( Min( RRSe ,( ( MUR - RMSe ) / DS ) ) / RRSe ),( RCSe * ( CS * Min( ( MUR - RMSe ) ,MUC ) ) ) ),( MLU * ( ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) ) ) ) * ( Min( DS ,RCSe ) - MUM ) )", "obj1": 0.9678800856531049, "obj2": 0.0154417967447389}, {"determining": "( ( ( ( ( AMS + ( RRS / ACS ) ) * PN ) * Min( MRS ,Min( ARS ,MRS ) ) ) - DDR ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR - DS ) + ( ( ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( MLU / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06903859228296548}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( PN ,FirstVNF_Mem_Server ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - ARS ) ) ,FirstVNF_Mem ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( PN ,BR ) )", "choosing": "( ( ( DS / RCSe ) + CS ) * ( Min( MUR ,( ( MUC / MLU ) - ( RRSe + ( ( ( RMSe * RRSe ) / RMSe ) * ( ( MUR * MUC ) / CS ) ) ) ) ) / ( RRSe * ( Min( ( MUR - DS ) ,( CS / ( Min( MUC ,RRSe ) - CS ) ) ) + RMSe ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035078809970339124}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( PN * PN ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( RRSe * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUM / MUC ) * CS ) / ( RRSe * CS ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04500375317653972}, {"determining": "( ( AMS - ( ( AMS - ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - FirstVNF_CPU_Server ) ,AMS ) + AMS ) ) - ( ( FirstVNF_RAM / CRS ) - FirstVNF_CPU ) ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU * ( ( MDR - ( AMS - DDR ) ) + ( ( RRS / FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( RMSe + ( ( ( RMSe / ( ( ( CS / CS ) / ( ( MUM * MUC ) / MUM ) ) + Min( ( ( MUC * MUM ) / Min( CS ,DS ) ) ,Max( MUC,MUC ) ) ) ) / RCSe ) - Max( ( ( ( ( ( MLU * MUC ) / Min( MUM ,RCSe ) ) / ( MUC - ( MUR - MUR ) ) ) * MUM ) - RCSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.892933618843683, "obj2": 0.05097826469797029}, {"determining": "( FirstVNF_RAM - ( Max( CRS,BR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( RRSe / RCSe ),( RCSe * ( ( RCSe + MUR ) / Min( RMSe ,Min( ( CS + RRSe ) ,DS ) ) ) ) ) ,( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) )", "obj1": 0.9486081370449678, "obj2": 0.022683763772516966}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * Max( ( AMS + ( FirstVNF_Mem_Server - Const ) ),PN ) ) / ( RRS - FirstVNF_CPU ) ) ) + ( BR / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( ( Min( Max( RRSe,( ( MUM + ( RMSe - MUC ) ) * MUM ) ) ,MUM ) + MLU ),RCSe ) ,( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RRSe ) ) ) ) + ( Max( ( MUC * RMSe ),Max( ( ( MUM + RCSe ) + RRSe ),CS ) ) * ( DS * ( ( MLU * ( DS - RCSe ) ) - MUC ) ) ) ) - CS ) )", "obj1": 0.8051391862955032, "obj2": 0.0961490366534311}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.7858672376873662, "obj2": 0.10602155374210107}, {"determining": "( ( ( ARS + ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * Max( ( ARS / MRS ),FirstVNF_RAM ) ) ,( MDR - ( AMS / AMS ) ) ) ) ,Min( Min( FirstVNF_CPU ,MDR ) ,( CRS - MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUC ,RRSe ) - RCSe ) * ( Max( ( ( ( ( RMSe + DS ) / ( RCSe / Max( RCSe,MUR ) ) ) * MUM ) - RCSe ),Min( RRSe ,CS ) ) / Max( ( RCSe - MUC ),RMSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10775077868645525}, {"determining": "( ( ( ACS - DDR ) + FirstVNF_RAM_Server ) - ( ( BR * CRS ) - DDR ) )", "choosing": "( ( RMSe * ( Max( MLU,( MUM - ( Max( CS,( RRSe * CS ) ) * CS ) ) ) - Min( RCSe ,MUC ) ) ) * Max( MUM,CS ) )", "obj1": 0.841541755888651, "obj2": 0.07834067147890801}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RRSe - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( Min( CS ,MLU ) ,( MLU / RMSe ) ) ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13252649426168286}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( Min( FirstVNF_CPU ,MDR ) ,( Min( BR ,DDR ) - ( FirstVNF_RAM_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( MUM * RRSe ) ) * ( Max( Min( RRSe ,CS ),( ( Max( ( RCSe + DS ),( RRSe - Min( RRSe ,DS ) ) ) * MLU ) - RCSe ) ) / ( MLU / Min( MUM ,RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14552932475083827}, {"determining": "( ( Const + MDR ) - ( ( CRS + FirstVNF_RAM_Server ) + ( ( MDR - Max( Const,ACS ) ) + ( ( ( FirstVNF_CPU - ( CRS + ACS ) ) * CRS ) / ( FirstVNF_CPU / RRS ) ) ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( ( MUC - MLU ) + Min( RCSe ,Max( Max( Max( MUM,MUR ),MUC ),( CS * Max( RCSe,RMSe ) ) ) ) ) - CS ) ) + Max( Max( MUM,MUM ),RMSe ) )", "obj1": 0.7901498929336188, "obj2": 0.10424020351736495}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( DDR / Const ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,MUR ) ) ) * MUM ) - RCSe ) ) / ( ( ( MLU - CS ) - MUC ) / MLU ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07346518441454433}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.7708779443254818, "obj2": 0.1135343073575226}, {"determining": "( ( AMS - ( ( Max( ( ACS - CRS ),CRS ) * FirstVNF_Mem ) * CRS ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( ARS + ACS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM - ( ( ( RRSe / MUM ) * ( ( Max( RRSe,MUM ) / DS ) + RMSe ) ) - RMSe ) ) * ( CS - MLU ) )", "obj1": 0.8479657387580299, "obj2": 0.07373656025155062}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( CS / CS ) ,Max( ( ( CS * RMSe ) - CS ),DS ) ) ) ,( MUM / RCSe ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( ( ( DDR * PN ) / Min( MRS ,ACS ) ) - ( DDR / PN ) ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM - ( ( CS * ( MUM / MUC ) ) + Min( Min( RMSe ,RCSe ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( Max( Min( ( ( FirstVNF_CPU / Min( AMS ,ARS ) ) - FirstVNF_Mem ) ,BR ),DDR ) + ( ( FirstVNF_Mem * MRS ) - Max( ACS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( MUM * DS ),Max( Min( ( Min( RRSe ,RMSe ) * Max( MUC,DS ) ) ,RMSe ),RRSe ) ),Min( Max( ( RMSe + CS ),MUR ) ,MLU ) ) ,RMSe ) * ( MUR / MUR ) )", "obj1": 0.9057815845824411, "obj2": 0.04669035392725908}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( ( ARS + ( CRS * FirstVNF_CPU_Server ) ) ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( DS - CS ) / ( RCSe / Max( MUC,MUR ) ) ) - MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05370340325151346}, {"determining": "( PN - ( RRS + ( ( MDR - FirstVNF_CPU_Server ) + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( RCSe + CS ) ,RCSe ) + ( RMSe / RCSe ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,ACS ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( Min( Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ,Max( RRS,DDR ) ) / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( Min( DS ,MLU ) + ( MUM - MLU ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( ( ( MLU - MUR ) * ( RRSe / CS ) ) - MLU ) ) )", "obj1": 0.8736616702355461, "obj2": 0.061418656865046516}, {"determining": "( Min( PN ,MRS ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( MDR - Const ) + ( ( RRS - FirstVNF_CPU ) / ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( Min( ( Min( MUM ,Max( RRSe,( ( ( MLU + MUC ) + CS ) * MUM ) ) ) + Max( ( CS - MLU ),RMSe ) ) ,RCSe ) ,( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUC,( ( MLU + RMSe ) - Max( MUC,DS ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( ( FirstVNF_Mem_Server - ( ( AMS - CRS ) - ( ( BR + ( BR + RRS ) ) + FirstVNF_CPU ) ) ) - ( Max( ( Min( Const ,ACS ) - FirstVNF_Mem ),DDR ) + ( CRS - Const ) ) )", "choosing": "( ( ( Min( Max( ( CS * ( MUR + ( MUR * RRSe ) ) ),( ( ( MUR * DS ) - RCSe ) * MLU ) ) ,( MUM - RMSe ) ) / ( MLU - DS ) ) * ( ( ( RRSe / CS ) * CS ) - CS ) ) * MUC )", "obj1": 0.9914346895074947, "obj2": 0.0037448270766406817}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / Min( ( ( Max( Max( RMSe,RMSe ),( DS * CS ) ) - Min( RRSe ,( Min( RRSe ,CS ) / MUC ) ) ) - ( MUR * MUR ) ) ,RMSe ) ) + ( Min( DS ,MLU ) + Max( ( ( MUC / DS ) - MUR ),( ( MUM - CS ) / Min( MUC ,( Min( MUM ,CS ) + CS ) ) ) ) ) )", "obj1": 0.9421841541755889, "obj2": 0.02652886352489466}, {"determining": "( ( AMS - DDR ) - ( ( ( Min( ARS ,FirstVNF_CPU_Server ) / AMS ) + CRS ) + ( ( MDR - ( ( MDR + PN ) - MRS ) ) + ( ( FirstVNF_RAM * Max( ( AMS + ( PN + ACS ) ),PN ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Max( Min( Min( DS ,MUR ) ,( ( ( RRSe + ( Max( RCSe,RRSe ) * RMSe ) ) - ( CS - MUM ) ) + RMSe ) ),Max( ( MLU + CS ),MUC ) ),Min( ( ( Min( ( RRSe + ( Min( RRSe ,CS ) - DS ) ) ,CS ) * RCSe ) - MUC ) ,RRSe ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( ( ( FirstVNF_Mem_Server * PN ) / Min( MRS ,RRS ) ) - Min( PN ,RRS ) )", "choosing": "( ( Max( MLU,( ( MUC - ( ( RCSe - RRSe ) + MUR ) ) / ( RCSe / RCSe ) ) ) - RRSe ) + ( MLU / RRSe ) )", "obj1": 0.8265524625267666, "obj2": 0.08460880674637018}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + ( BR / FirstVNF_CPU ) ) - ( AMS - DDR ) ) + ( ( RRS - FirstVNF_CPU ) / ( FirstVNF_Mem * PN ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( RCSe,( Max( ( MUR + ( RMSe * DS ) ),( MUM * RRSe ) ) / DS ) ),RRSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10070440115259738}, {"determining": "( ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) - DDR ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,( DDR - ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( Min( MUM ,( ( MUR / MUM ) * ( MUC - MUR ) ) ) + MLU ) - Min( MUM ,DS ) ) ) * ( ( ( CS * MLU ) + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11507712562225204}, {"determining": "( ( ( MRS / Min( ( FirstVNF_CPU_Server - MRS ) ,RRS ) ) / FirstVNF_RAM_Server ) - ( ( ( MDR - ( AMS - DDR ) ) - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RCSe + DS ),( ( MLU - RMSe ) - CS ) ) + ( MUM - ( Max( ( MUC + ( Min( ( MLU + MUM ) ,MUR ) * MLU ) ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) - RMSe ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13744958548362998}, {"determining": "( ( ( AMS * PN ) + Min( MRS ,ACS ) ) - ( ( ( ( CRS / Max( FirstVNF_Mem,PN ) ) / ( RRS - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( MLU,( ( ( DS + ( MLU - RMSe ) ) - ( Max( ( DS + RMSe ),( MUR / MUR ) ) / MLU ) ) - Min( Min( CS ,RRSe ) ,MUC ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1488856037723845}, {"determining": "( FirstVNF_Mem - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) ,Min( ( MDR - ARS ) ,MDR ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe + ( DS - ( DS * MUM ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( ( DS + RCSe ) * ( CS + MUC ) ) + ( MUC - Min( RRSe ,CS ) ) ) * ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) ) - ( ( ( ( RMSe + DS ) + MLU ) * RMSe ) - MUM ) ) ) / ( ( MUM - MUC ) / ( RCSe / Max( RRSe,CS ) ) ) ) )", "obj1": 0.9421841541755889, "obj2": 0.02652886352489466}, {"determining": "( ( PN + FirstVNF_Mem_Server ) - ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + DDR ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( MUM / MUC ) * ( Min( CS ,( ( RRSe * MLU ) * RRSe ) ) / ( CS + MUM ) ) ) - ( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ) * ( MUC - RMSe ) ) ) * MUM ) * Max( RMSe,CS ) )", "obj1": 0.7408993576017131, "obj2": 0.1308530050781932}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( CS,MUR ) - CS ) ) + Max( ( ( MUM - ( MUM + MLU ) ) * ( ( ( MUM + RCSe ) / MUM ) + ( ( Max( RCSe,RRSe ) / MUM ) * RCSe ) ) ),DS ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,MUR ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8822269807280514, "obj2": 0.0582741392789921}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( PN,Max( FirstVNF_RAM_Server,AMS ) ) * ( ( AMS + ( AMS - DDR ) ) * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( MUM + Max( RRSe,( ( Max( MLU,MUC ) + CS ) * MUM ) ) ) ) * MUC ) )", "obj1": 0.7066381156316917, "obj2": 0.14725748014231752}, {"determining": "( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) / Max( ( RRS / ( ( RRS - ARS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( ACS ,Max( ( Const - MDR ),( AMS * Max( FirstVNF_CPU,( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) - ( ( FirstVNF_Mem - ( ACS * Min( RRS ,MDR ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.09889585072700044}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( ( ( DS - RCSe ) + CS ) * ( Min( MUR ,( ( MLU / MUC ) - MUM ) ) / ( RRSe * CS ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08383760437265843}, {"determining": "( ( AMS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_CPU / AMS ) + MRS ) + ( ARS / FirstVNF_Mem_Server ) ) ) ,Const ) + FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( ( RMSe - ( MUM + MLU ) ) * ( ( ( DS + MUR ) / ( RRSe + RRSe ) ) + MUM ) ) ) + Min( DS ,RCSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03149822720264822}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,ACS ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - RRS ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( Min( DS ,MLU ) + ( MUM - MLU ) ),( RRSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10944893004553725}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUR - Max( MUC,DS ) ) + RMSe ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.7751605995717344, "obj2": 0.11215861202452748}, {"determining": "( ( AMS - ( FirstVNF_RAM_Server - AMS ) ) - Min( ( ( CRS - ( ARS / BR ) ) - ( ( ( PN * FirstVNF_CPU ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Max( RCSe,RRSe ) - ( RMSe / MUM ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( Min( MUR ,( Max( CS,MUC ) - MUM ) ) / ( ( MUR / ( Min( MUM ,MUC ) / CS ) ) / RRSe ) ) - MLU ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12195306071101018}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( FirstVNF_RAM_Server * MRS ) / PN ) / FirstVNF_CPU ) - ( ( ( PN * ACS ) / Min( MRS ,PN ) ) - ( DDR - Min( FirstVNF_Mem_Server ,Min( Min( MDR ,RRS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Min( ( ( RRSe + Max( MUC,RRSe ) ) - DS ) ,( CS / ( Min( RCSe ,RMSe ) - CS ) ) ) + RMSe ) - CS ) ) + ( ( MUM - MUR ) + Min( DS ,MLU ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03784610508960765}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( ( ( ( MUM / MUC ) * CS ) - Min( ( ( ( DS * ( MUM * MLU ) ) + RRSe ) - CS ) ,( MUM - RMSe ) ) ) * MUM ) * Max( Max( ( MLU / MUR ),MUR ),CS ) )", "obj1": 0.715203426124197, "obj2": 0.14297391302556264}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( RRS / Min( Min( PN ,FirstVNF_Mem_Server ) ,( ACS + ACS ) ) ),Min( Const ,FirstVNF_CPU ) ) )", "choosing": "Max( Max( MLU,Max( MUC,( MLU + CS ) ) ),Min( ( ( Min( ( ( Min( RRSe ,RRSe ) - DS ) + RRSe ) ,CS ) * RCSe ) - CS ) ,RRSe ) )", "obj1": 0.867237687366167, "obj2": 0.06528893904833138}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) + CS ) * ( Min( MUR ,( ( MUC / MLU ) - ( RRSe + ( ( ( RMSe * RRSe ) / RMSe ) * ( ( MUR * MUC ) / CS ) ) ) ) ) / ( RRSe * CS ) ) )", "obj1": 0.715203426124197, "obj2": 0.14297391302556264}, {"determining": "( ( ( Min( Min( Const ,( FirstVNF_Mem - ( Min( PN ,ARS ) - FirstVNF_Mem ) ) ) ,PN ) / ( ( Min( MRS ,ACS ) / ( PN * PN ) ) - Max( DDR,CRS ) ) ) - AMS ) - ( DDR / Const ) )", "choosing": "( ( MUR + DS ) * Max( RMSe,CS ) )", "obj1": 0.9957173447537473, "obj2": 0.0022102696923504655}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( ( PN * ( ( ( FirstVNF_CPU * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) / Max( ( RRS / ( Min( ACS ,MRS ) / ( ACS - AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,Max( ( ( FirstVNF_Mem / MDR ) + BR ),( PN / DDR ) ) ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( Max( ( ( DS * ( CS / MLU ) ) + RRSe ),DS ),( CS - ( MLU - RMSe ) ) ) + ( MUM - ( Max( Max( Max( Max( RMSe,( MUR + MUR ) ),RCSe ),RRSe ),Min( MUC ,MUR ) ) - RMSe ) ) )", "obj1": 0.734475374732334, "obj2": 0.1340181960703011}, {"determining": "( Min( ( CRS * ARS ) ,( ( MDR / MRS ) / ACS ) ) - ( Min( CRS ,Const ) + ( FirstVNF_CPU + ( ( ( ( Const + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( CS / MUM ) - RCSe ) - ( MLU + Min( CS ,RRSe ) ) ) + Min( CS ,( ( RRSe / ( MLU * RRSe ) ) / RCSe ) ) ) - MUM ) ) * MUC )", "obj1": 0.7922912205567452, "obj2": 0.10296995276521294}, {"determining": "( ( FirstVNF_CPU - ( BR / FirstVNF_RAM ) ) - Min( ( FirstVNF_Mem_Server / ( MDR * Max( Min( DDR ,FirstVNF_Mem_Server ),CRS ) ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( Min( MUC ,Max( RMSe,CS ) ) - CS ) ,( ( RRSe / ( ( ( ( MLU + RCSe ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUM ) ) - ( CS * RCSe ) ) )", "obj1": 0.9379014989293362, "obj2": 0.03009631195525798}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13969309976923822}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),( ( Const + FirstVNF_CPU ) - FirstVNF_RAM_Server ) ) / CRS ) * ( Max( MDR,AMS ) / MRS ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( DS - ( MUM * ( MUC * CS ) ) ) / RMSe ) )", "obj1": 0.7044967880085653, "obj2": 0.1488856037723845}, {"determining": "( ( ( ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * Min( BR ,MRS ) ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( ( DS - RCSe ) + DS ) * ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( AMS - DDR ) - Min( ( RRS - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MLU,( DS + ( CS + ( ( MUC + CS ) + DS ) ) ) ) + ( CS - MLU ) )", "obj1": 0.7580299785867237, "obj2": 0.12070992699863656}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( PN ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) / ( MDR * FirstVNF_RAM_Server ) ) - ( ACS - Max( MRS,BR ) ) )", "choosing": "( ( ( ( MUM - ( MUM + MLU ) ) * ( ( CS / MUM ) + ( ( Max( RCSe,( CS * MUM ) ) / MUM ) * RCSe ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9635974304068522, "obj2": 0.01755358492864582}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( RRS / Min( Min( PN ,FirstVNF_Mem_Server ) ,( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( RMSe,CS ) ,CS )", "obj1": 0.867237687366167, "obj2": 0.06528893904833138}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + RRS ) ) ,( AMS - MDR ) ) ) )", "choosing": "( ( MUM * ( ( ( MUM - CS ) / ( MUC / ( CS + Min( MUM ,MLU ) ) ) ) - Min( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( ( PN * ( ( ( FirstVNF_CPU_Server * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * ( ( RRS * AMS ) * ( FirstVNF_RAM_Server - BR ) ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,RMSe ) ),( ( MUM - CS ) / ( MUC / ( ( ( RMSe / MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1357289960758355}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( CS / RRSe ) ,Max( ( ( CS * ( Min( MUM ,DS ) / ( MUC * MUM ) ) ) - CS ),Min( RRSe ,RMSe ) ) ) ) ,( MUM / RCSe ) )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}, {"determining": "( ( AMS - ( ( AMS - ( Min( ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU_Server ) ,AMS ) + AMS ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - FirstVNF_CPU ) ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( PN * PN ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ,( AMS - MDR ) ) ) )", "choosing": "( Min( ( MUM * Min( RCSe ,( DS / MUC ) ) ) ,( MUM * MUC ) ) * Max( RMSe,CS ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( AMS - ( ( AMS - ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - FirstVNF_CPU_Server ) ,AMS ) + AMS ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - FirstVNF_CPU ) ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( RRSe / MUC ) * CS ) - Min( MUM ,( RMSe + MUR ) ) ) ) * MUC )", "obj1": 0.892933618843683, "obj2": 0.05097826469797029}, {"determining": "( ( ( PN * PN ) / ( MRS / ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * Max( AMS,FirstVNF_RAM ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( RRSe,MUM ) - CS ) ) + ( Max( ( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * MUM ) - RCSe ),Min( RRSe ,CS ) ) / Max( ( RCSe - MUC ),MLU ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03692211390947389}, {"determining": "( ( AMS - DDR ) - ( ( AMS / CRS ) + ( Min( ARS ,FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( Min( Max( Max( Max( ( MUR + MUM ),Max( RCSe,DS ) ),( RRSe / Max( RRSe,RMSe ) ) ),( ( Max( MLU,MUC ) + CS ) * MUM ) ) ,MUM ) + MLU ) ,RCSe ) ,( CS * ( ( ( ( RCSe + ( MUC - ( MUC / MUC ) ) ) / ( ( ( MUC / MUC ) + MUC ) / ( ( CS * RMSe ) - CS ) ) ) * MUM ) - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08776968964183635}, {"determining": "( ( ( Max( MRS,( RRS - RRS ) ) * PN ) / Min( MRS ,MRS ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( CS + DS ) * MUM ) - RCSe ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06323541762879145}, {"determining": "( ( AMS - DDR ) - ( ( AMS + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( AMS - RRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( DS - RCSe ) ,( CS * ( ( ( ( RCSe + DS ) / ( ( RCSe + DS ) / ( ( CS * RMSe ) - CS ) ) ) * MUM ) - RCSe ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09741488675835099}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,ACS ) ) ) - ( ( ( DDR - ACS ) + FirstVNF_RAM_Server ) + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( Min( DS ,MLU ) + ( MUM - MLU ) ),( ( MLU - RMSe ) - CS ) ) + ( CS * MLU ) )", "obj1": 0.7601713062098501, "obj2": 0.1197819392334161}, {"determining": "( ( Min( PN ,( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + ARS ) ) / Max( ( RRS / ( Min( Const ,AMS ) / Min( BR ,FirstVNF_CPU_Server ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( ARS - FirstVNF_RAM ) + ( ( ( PN * ( PN + ( BR / ACS ) ) ) / FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( ( CS * MUM ) - MLU ) - Min( RRSe ,MUC ) ),DS ) ) + MUM ) - CS ) + ( ( MUR * RMSe ) + Max( RRSe,CS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13483140996736265}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,ACS ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - RRS ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( Min( DS ,MLU ) + ( MUM - MLU ) ),( RRSe - CS ) ) + ( Min( DS ,MLU ) + ( ( Max( ( CS + ( ( MLU / MUC ) - MUM ) ),RMSe ) + RMSe ) - CS ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10944893004553725}, {"determining": "( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( RRS * ( AMS - ( MDR / FirstVNF_RAM ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) - PN )", "choosing": "( ( ( ( ( MUM - MUC ) / ( MUR - CS ) ) - RCSe ) + CS ) * ( Min( MUR ,( ( MUC * RMSe ) - CS ) ) / ( RRSe * CS ) ) )", "obj1": 0.9464668094218416, "obj2": 0.023619970541677138}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( ( ( MUM - ( MUM + MLU ) ) * ( ( CS / MUM ) + ( ( Max( RCSe,( CS * MUM ) ) / MUM ) * RCSe ) ) ) / DS ) + Min( DS ,RCSe ) )", "obj1": 0.9635974304068522, "obj2": 0.01755358492864582}], "18": [{"determining": "( ( ( ( ( RRS - FirstVNF_CPU ) / ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) ) * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( RRSe * ( Min( MUR ,( ( MUC / MLU ) - ( MUR - MLU ) ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU,DDR ) - BR ) / ( MRS / ( PN * Max( MRS,FirstVNF_CPU ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( Max( AMS,FirstVNF_RAM ) * ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( RRSe,MUM ) - ( Max( ( MUR + Max( CS,Min( RRSe ,RCSe ) ) ),RCSe ) / ( CS - RRSe ) ) ) ) + ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * RRSe ) - RCSe ) ) / Max( ( RCSe - MUC ),MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( ( ( ( ( ( Min( AMS ,( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + Min( ( RRS / ACS ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUC - Min( ( RMSe / Max( DS,CS ) ) ,CS ) ) * ( MLU / MUM ) ) ) - CS ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( MUR - MUC ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( FirstVNF_Mem_Server ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( Max( MUM,RMSe ),RMSe ) + RMSe ) / CS ) ) + ( ( ( ( ( MUC / ( CS - Min( MUM ,MLU ) ) ) + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Min( ( ARS * Max( ( AMS + FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ,( MDR - Const ) ) ,( FirstVNF_Mem_Server - PN ) ) ,Min( ( FirstVNF_CPU - MDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS / MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( DS - CS ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUC + CS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.21253206344280148}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) - AMS ) + ( ( ( PN * ( ( AMS / DDR ) - FirstVNF_RAM ) ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUR * ( MUR - MUR ) ),( MUC / MLU ) ) + Max( Max( RMSe,MUM ),RMSe ) )", "obj1": 0.6916488222698073, "obj2": 0.1646724073543021}, {"determining": "( ( ( ACS - DDR ) + FirstVNF_RAM_Server ) - ( ( BR * CRS ) - DDR ) )", "choosing": "( ( RMSe * ( Max( MLU,( MUM - ( Max( CS,( RRSe * CS ) ) * CS ) ) ) - Min( RCSe ,MUC ) ) ) * Max( MUM,CS ) )", "obj1": 0.841541755888651, "obj2": 0.07834067147890801}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( CS,MUR ) - CS ) ) + Max( ( ( MUM - ( MUM + MLU ) ) * ( ( ( MUM + RCSe ) / MUM ) + ( ( Max( RCSe,RRSe ) / MUM ) * RCSe ) ) ),DS ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( AMS - DDR ) - ( ( AMS / CRS ) + ( Min( ARS ,FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( Min( Max( Max( Max( ( MUR + MUM ),Max( RCSe,DS ) ),( RRSe / Max( RRSe,RMSe ) ) ),( ( Max( MLU,MUC ) + CS ) * MUM ) ) ,MUM ) + MLU ) ,RCSe ) ,( CS * ( ( ( ( RCSe + ( MUC - ( MUC / MUC ) ) ) / ( ( ( MUC / MUC ) + MUC ) / ( ( CS * RMSe ) - CS ) ) ) * MUM ) - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08776968964183635}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * DDR ) ) ) * ( ( Min( ( ( FirstVNF_CPU_Server + PN ) / RRS ) ,MDR ) - RRS ) - ( ( PN * PN ) / Min( Min( FirstVNF_CPU_Server ,ARS ) ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( ( CS / MLU ) * RRSe ) + RRSe ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( ( RRSe / MUC ),RCSe ),RRSe ) ) - RMSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.1646724073543021}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),MDR ) ) ,Min( Min( MRS ,( ARS * CRS ) ) ,MRS ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( RMSe - Min( RRSe ,MUC ) ) * ( MLU / MUM ) ) / MUC ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.1233168272603603}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( ( ARS + ( CRS * FirstVNF_CPU_Server ) ) ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( DS - CS ) / ( RCSe / Max( MUC,MUR ) ) ) - MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05370340325151346}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( FirstVNF_RAM_Server * MRS ) / PN ) / FirstVNF_CPU ) - ( ( ( PN * ACS ) / Min( MRS ,PN ) ) - ( DDR - Min( FirstVNF_Mem_Server ,Min( Min( MDR ,RRS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Min( ( ( RRSe + Max( MUC,RRSe ) ) - DS ) ,( CS / ( Min( RCSe ,RMSe ) - CS ) ) ) + RMSe ) - CS ) ) + ( ( MUM - MUR ) + Min( DS ,MLU ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03784610508960765}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,( Min( MUM ,( RMSe + MUR ) ) - RMSe ) ) + ( RRSe / ( Min( MUR ,( ( ( MUM - RCSe ) - RCSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03982903683742803}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - FirstVNF_CPU ) - Min( ( ( AMS - PN ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( RRSe / ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) ) ,( ( MLU * Min( RCSe ,( CS + MLU ) ) ) + Min( Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ,( Max( MUM,RRSe ) * DS ) ) ) ) )", "obj1": 0.8822269807280514, "obj2": 0.05796435886291537}, {"determining": "( ( ( FirstVNF_Mem_Server * PN ) / Min( MRS ,RRS ) ) - Min( PN ,RRS ) )", "choosing": "( ( Max( MLU,( ( MUC - ( ( RCSe - RRSe ) + MUR ) ) / ( RCSe / RCSe ) ) ) - RRSe ) + ( MLU / RRSe ) )", "obj1": 0.8265524625267666, "obj2": 0.08460880674637018}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( RRS - DDR ) - ( MDR + Max( FirstVNF_CPU_Server,ARS ) ) )", "choosing": "( ( Min( ( MUC - Max( ( Min( CS ,MUC ) / CS ),RCSe ) ) ,Max( MUR,MLU ) ) / ( ( DS - MUC ) / ( RCSe / Max( RRSe,CS ) ) ) ) * ( RRSe + ( DS - ( DS * MUM ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019137495597351353}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( ( RRS - FirstVNF_CPU ) - AMS ) ) ,PN ) ) / ( ( ARS * RRS ) * ( PN / Max( ( ( ACS * ( FirstVNF_CPU_Server - AMS ) ) / ( FirstVNF_RAM / ( BR - FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,Min( Min( ( Max( RCSe,CS ) * Min( MUR ,MUC ) ) ,Min( Min( DS ,( MUM - RMSe ) ) ,RMSe ) ) ,RMSe ) ) + ( Max( DS,MLU ) / MUR ) )", "obj1": 0.8458244111349036, "obj2": 0.07634108306466689}, {"determining": "( ( PN + FirstVNF_Mem_Server ) - ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + DDR ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( MUM / MUC ) * ( Min( CS ,( ( RRSe * MLU ) * RRSe ) ) / ( CS + MUM ) ) ) - ( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ) * ( MUC - RMSe ) ) ) * MUM ) * Max( RMSe,CS ) )", "obj1": 0.7408993576017131, "obj2": 0.1308530050781932}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / ( ACS - CRS ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( ( ( RRSe / MUM ) + CS ) * MUM ) ) ,MUM ) + MLU ) ,RCSe ) ,( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUC,( ( MLU + RMSe ) - Max( MUC,DS ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( ( ( Max( MRS,( RRS - RRS ) ) * PN ) / Min( MRS ,MRS ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( CS + DS ) * MUM ) - RCSe ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06323541762879145}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) / Max( ( RRS / ( ( RRS - ARS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( ACS ,Max( ( Const - MDR ),( AMS * Max( FirstVNF_CPU,( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) - ( ( FirstVNF_Mem - ( ACS * Min( RRS ,MDR ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.09889585072700044}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( ( ( CRS - Const ) + FirstVNF_Mem ) - ( Max( MDR,MDR ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) - Min( Min( PN ,FirstVNF_Mem_Server ) ,Const ) )", "choosing": "( ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) * ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( Min( MLU ,Max( Min( CS ,CS ),( DS * RRSe ) ) ) / RRSe ) ) - MLU ) ) + ( ( MUM + RCSe ) + ( ( MUM * MUM ) * RMSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10932327704583977}, {"determining": "( Min( ( CRS * ARS ) ,( ( MDR / MRS ) / ACS ) ) - ( Min( CRS ,Const ) + ( FirstVNF_CPU + ( ( ( ( Const + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( CS / MUM ) - RCSe ) - ( MLU + Min( CS ,RRSe ) ) ) + Min( CS ,( ( RRSe / ( MLU * RRSe ) ) / RCSe ) ) ) - MUM ) ) * MUC )", "obj1": 0.7922912205567452, "obj2": 0.10296995276521294}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * Max( ( AMS + ( FirstVNF_Mem_Server - Const ) ),PN ) ) / ( RRS - FirstVNF_CPU ) ) ) + ( BR / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( ( Min( Max( RRSe,( ( MUM + ( RMSe - MUC ) ) * MUM ) ) ,MUM ) + MLU ),RCSe ) ,( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RRSe ) ) ) ) + ( Max( ( MUC * RMSe ),Max( ( ( MUM + RCSe ) + RRSe ),CS ) ) * ( DS * ( ( MLU * ( DS - RCSe ) ) - MUC ) ) ) ) - CS ) )", "obj1": 0.8051391862955032, "obj2": 0.0961490366534311}, {"determining": "( ( ( ARS + ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * Max( ( ARS / MRS ),FirstVNF_RAM ) ) ,( MDR - ( AMS / AMS ) ) ) ) ,Min( Min( FirstVNF_CPU ,MDR ) ,( CRS - MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUC ,RRSe ) - RCSe ) * ( Max( ( ( ( ( RMSe + DS ) / ( RCSe / Max( RCSe,MUR ) ) ) * MUM ) - RCSe ),Min( RRSe ,CS ) ) / Max( ( RCSe - MUC ),RMSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10775077868645525}, {"determining": "( ( ( PN * Min( Max( DDR,CRS ) ,( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) / Min( FirstVNF_CPU ,Min( ( Max( Min( AMS ,FirstVNF_CPU_Server ),RRS ) * CRS ) ,ARS ) ) ) - Max( MRS,BR ) )", "choosing": "( Max( ( ( ( ( CS + ( MLU / RCSe ) ) * MLU ) - CS ) - CS ),( Max( MLU,RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - ( MUC * DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13738186726219762}, {"determining": "( ( AMS - ( ( AMS - ( Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - FirstVNF_CPU_Server ) ,AMS ) + AMS ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - FirstVNF_CPU ) ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) ) ) ) )", "choosing": "( RMSe + ( Max( ( RMSe / MLU ),RCSe ) - Max( Min( RRSe ,CS ),( ( ( Max( ( MLU + CS ),MUC ) / ( MUC - Min( RRSe ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04218042107369828}, {"determining": "( ( Const + MDR ) - ( ( CRS + FirstVNF_RAM_Server ) + ( ( MDR - Max( Const,ACS ) ) + ( ( ( FirstVNF_CPU - ( CRS + ACS ) ) * CRS ) / ( FirstVNF_CPU / RRS ) ) ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( ( MUC - MLU ) + Min( RCSe ,Max( Max( Max( MUM,MUR ),MUC ),( CS * Max( RCSe,RMSe ) ) ) ) ) - CS ) ) + Max( Max( MUM,MUM ),RMSe ) )", "obj1": 0.7901498929336188, "obj2": 0.10424020351736495}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - ( DS - ( MUC - ( CS + MUR ) ) ) ) ) )", "obj1": 0.6595289079229122, "obj2": 0.21424024848709716}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.7708779443254818, "obj2": 0.1135343073575226}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "Min( Min( ( Min( MUM ,Max( RRSe,( ( ( MLU + MUC ) + CS ) * MUM ) ) ) + Max( ( CS - MLU ),RMSe ) ) ,RCSe ) ,( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUC,( ( MLU + RMSe ) - Max( MUC,DS ) ) ) ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( RMSe + ( RCSe / Max( MUC,( ( ( RMSe * RRSe ) / RMSe ) * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14061344669043446}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,RCSe ) + ( RCSe * Min( MUR ,Max( RMSe,MUC ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09698071317545862}, {"determining": "( PN - ( RRS + ( ( MDR - FirstVNF_CPU_Server ) + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( RCSe + CS ) ,RCSe ) + ( RMSe / RCSe ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RMSe ),( ( Max( Max( MUM,RMSe ),RMSe ) + Min( RMSe ,DS ) ) / CS ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( ( RRS - FirstVNF_CPU ) ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( ( ( ( MUM / MUC ) * CS ) - Min( ( ( ( ( CS * RMSe ) * ( MUM * MLU ) ) + RRSe ) - CS ) ,( MUM - RMSe ) ) ) * MUM ) * Max( Max( ( MLU / MUR ),MUR ),CS ) )", "obj1": 0.9143468950749465, "obj2": 0.04192594786362674}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUR - Max( MUC,DS ) ) + RMSe ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.7751605995717344, "obj2": 0.11215861202452748}, {"determining": "( ( ( CRS - ( ( FirstVNF_CPU * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU / ( Max( ( RRS + PN ),( ( ACS * FirstVNF_Mem_Server ) * BR ) ) + ( ( CRS * PN ) / ( AMS - MRS ) ) ) ) ) - ( AMS * Min( FirstVNF_RAM ,Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM - RRSe ) + RMSe ) ,( MUC * Min( ( ( MLU - ( RCSe - MUC ) ) + MUC ) ,( RCSe - RRSe ) ) ) ) * Max( Max( ( Min( RRSe ,( ( MUR - RMSe ) / DS ) ) / RRSe ),( RCSe * ( CS * Min( ( MUR - RMSe ) ,MUC ) ) ) ),( MLU * ( ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) ) ) ) * ( Min( DS ,RCSe ) - MUM ) )", "obj1": 0.9678800856531049, "obj2": 0.0154417967447389}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RRSe - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( Min( CS ,MLU ) ,( MLU / RMSe ) ) ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13252649426168286}, {"determining": "( ( AMS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_CPU / AMS ) + MRS ) + ( ARS / FirstVNF_Mem_Server ) ) ) ,Const ) + FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( ( RMSe - ( MUM + MLU ) ) * ( ( ( DS + MUR ) / ( RRSe + RRSe ) ) + MUM ) ) ) + Min( DS ,RCSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03149822720264822}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / ACS ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( MDR * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( CS - CS ) * ( ( ( ( CS / Max( ( DS + MUR ),RMSe ) ) * DS ) + CS ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011507668252596791}, {"determining": "( ( ( ( ( ( Min( AMS ,( BR / Const ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + Min( ( RRS / ACS ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUC - Min( CS ,( RMSe / Max( CS,CS ) ) ) ) * ( MLU / MUM ) ) ) - CS ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( MUR - MUC ) / CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.0678094086630386}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS - FirstVNF_CPU ) / ( Min( Max( ( MDR + MDR ),( CRS + CRS ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * PN ) ) ) ) )", "choosing": "( ( DS / Min( Max( RMSe,Min( MUM ,( Min( ( CS - MUC ) ,MUR ) + CS ) ) ) ,RMSe ) ) + ( Min( DS ,MLU ) + Max( ( ( MUC / DS ) - MUR ),( ( MUM - CS ) / Min( ( Min( MUM ,CS ) + CS ) ,MUC ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021596383751361997}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( PN * PN ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ,( AMS - MDR ) ) ) )", "choosing": "( Min( ( MUM * Min( RCSe ,( DS / MUC ) ) ) ,( MUM * MUC ) ) * Max( RMSe,CS ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( ( ( DDR * PN ) / Min( MRS ,ACS ) ) - ( DDR / PN ) ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM - ( ( CS * ( MUM / MUC ) ) + Min( Min( RMSe ,RCSe ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( ( AMS * PN ) + Min( MRS ,ACS ) ) - ( ( ( ( CRS / Max( FirstVNF_Mem,PN ) ) / ( RRS - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( MLU,( ( ( DS + ( MLU - RMSe ) ) - ( Max( ( DS + RMSe ),( MUR / MUR ) ) / MLU ) ) - Min( Min( CS ,RRSe ) ,MUC ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1488856037723845}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / ( ( MUM - ( MUM + MLU ) ) * ( ( CS + MUM ) + ( ( Max( RCSe,( RRSe * MUC ) ) / MUM ) * RCSe ) ) ) ) + Min( DS ,RCSe ) )", "obj1": 0.9421841541755889, "obj2": 0.02652886352489466}, {"determining": "( ( AMS - DDR ) - Min( ( RRS - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MLU,( DS + ( CS + ( ( MUC + CS ) + DS ) ) ) ) + ( CS - MLU ) )", "obj1": 0.7623126338329764, "obj2": 0.11894151007642274}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / Min( ( ( Max( Max( RMSe,RMSe ),( DS * CS ) ) - Min( RRSe ,( Min( RRSe ,CS ) / MUC ) ) ) - ( MUR * MUR ) ) ,RMSe ) ) + ( Min( DS ,MLU ) + Max( ( ( MUC / DS ) - MUR ),( ( MUM - CS ) / Min( MUC ,( Min( MUM ,CS ) + CS ) ) ) ) ) )", "obj1": 0.9421841541755889, "obj2": 0.02652886352489466}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( AMS - ( ( RRS * FirstVNF_Mem_Server ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( ( RRSe - CS ),( ( ( ( Min( MUR ,MUC ) + DS ) / Min( RCSe ,Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( ( RRSe * MUC ) - MUC ) / DS ) ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUR - Max( MUC,DS ) ) + RMSe ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.7773019271948608, "obj2": 0.11129440078449877}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( PN,Max( FirstVNF_RAM_Server,AMS ) ) * ( ( AMS + ( AMS - DDR ) ) * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( MUM + Max( RRSe,( ( Max( MLU,MUC ) + CS ) * MUM ) ) ) ) * MUC ) )", "obj1": 0.7066381156316917, "obj2": 0.14725748014231752}, {"determining": "( ( Min( PN ,( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + ARS ) ) / Max( ( RRS / ( Min( Const ,AMS ) / Min( BR ,FirstVNF_CPU_Server ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( ARS - FirstVNF_RAM ) + ( ( ( PN * ( PN + ( BR / ACS ) ) ) / FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( ( CS * MUM ) - MLU ) - Min( RRSe ,MUC ) ),DS ) ) + MUM ) - CS ) + ( ( MUR * RMSe ) + Max( RRSe,CS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13483140996736265}, {"determining": "( ( ( ( ( ( AMS + ( BR / MRS ) ) * PN ) * ( AMS + ( BR / ( FirstVNF_CPU_Server / ( MRS * FirstVNF_Mem_Server ) ) ) ) ) * MRS ) / Min( MRS ,ACS ) ) - ( ( DDR - ARS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe * ( Max( Max( ( Min( DS ,MLU ) + ( MUM - MLU ) ),( RRSe - CS ) ),( MLU - ( Max( CS,( MUR * CS ) ) * CS ) ) ) - MUM ) ) * Max( RMSe,CS ) )", "obj1": 0.8329764453961456, "obj2": 0.08352980552434709}, {"determining": "( ( FirstVNF_CPU - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( MUC,MUC ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / DS ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) / Max( ( RRS / ( ( ACS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( ( MDR - ( AMS - DDR ) ) - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ( AMS - PN ) ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RCSe + DS ),( Min( RCSe ,( CS + MLU ) ) - CS ) ) + ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) - RMSe ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13886095920937638}, {"determining": "( ( ( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + Max( ( PN * PN ),( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( ARS - ( CRS + ARS ) ) ) ) - ( PN * ( ( Max( BR,MRS ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MUM / ( MLU - RRSe ) ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( ( RCSe - DS ),RCSe ),RRSe ) ) )", "obj1": 0.854389721627409, "obj2": 0.07074996226840143}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( DDR / Const ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,MUR ) ) ) * MUM ) - RCSe ) ) / ( ( ( MLU - CS ) - MUC ) / MLU ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07346518441454433}, {"determining": "( ( AMS - DDR ) - Min( ( ( FirstVNF_CPU - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( RRSe / CS ) * CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) - RMSe ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12132692671276389}, {"determining": "( ( AMS - ( ( AMS - ( Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,AMS ) + AMS ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - FirstVNF_CPU ) ) ) - ( ( ( CRS + ( FirstVNF_RAM * ( ( ( PN + CRS ) * CRS ) + MRS ) ) ) * Min( BR ,( ARS - ( BR / ( Min( DDR ,PN ) + Const ) ) ) ) ) + ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( ( CS - RCSe ) + ( ( ( MUC + MLU ) + ( RRSe * ( MLU / RRSe ) ) ) - Min( MUM ,( ( RMSe / DS ) * ( RRSe * MUR ) ) ) ) ) - RCSe ) + CS ) * ( Min( MUR ,( ( CS * RMSe ) - RCSe ) ) / ( RRSe * CS ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07373656025155062}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( MUR / ( MUM * RRSe ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( RRSe - Min( RRSe ,DS ) ) ) * MLU ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14526683511519817}, {"determining": "( ( AMS - DDR ) - ( ( AMS + ( Max( FirstVNF_Mem,BR ) / FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_CPU_Server ) + ( ( ( MRS * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( ( Max( MUR,MUC ) + CS ) * MUM ) ) ,MUM ) + MLU ) ,RCSe ) ,( Max( Min( DS ,( RRSe / ( ( MUM * RCSe ) - MUM ) ) ),RMSe ) / ( RRSe * CS ) ) )", "obj1": 0.8650963597430407, "obj2": 0.06712301331890215}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( ( ( DS - RCSe ) + CS ) * ( Min( MUR ,( ( MLU / MUC ) - MUM ) ) / ( RRSe * CS ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08383760437265843}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( RCSe + CS ) ,RCSe ) + Max( ( ( RRSe - Min( ( RRSe * RRSe ) ,DS ) ) + DS ),( ( ( MLU * MLU ) - MUR ) / RCSe ) ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09249920691046348}, {"determining": "( ( AMS - DDR ) - Min( ( RRS - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( FirstVNF_CPU - MDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MLU,( DS + ( MUR - MUC ) ) ) + ( CS - MLU ) )", "obj1": 0.734475374732334, "obj2": 0.1329412527772102}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_Mem_Server ) ) ) ),CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( CS - ( DS / RCSe ) ) * ( Min( MUR ,( ( CS / RRSe ) - ( RCSe - CS ) ) ) / ( RRSe * CS ) ) )", "obj1": 0.715203426124197, "obj2": 0.14297391302556264}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( MDR - ( AMS - DDR ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Max( MUR,Max( ( MLU + CS ),MUC ) ),Min( ( ( Min( Min( MUM ,RCSe ) ,CS ) * RCSe ) - CS ) ,RRSe ) )", "obj1": 0.9314775160599572, "obj2": 0.03313760888143231}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),( ( Const + FirstVNF_CPU ) - FirstVNF_RAM_Server ) ) / CRS ) * ( Max( MDR,AMS ) / MRS ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( DS - ( MUM * ( MUC * CS ) ) ) / RMSe ) )", "obj1": 0.7044967880085653, "obj2": 0.1488856037723845}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( ( ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * Min( BR ,MRS ) ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( ( DS - RCSe ) + DS ) * ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( AMS - ( ( AMS - ( Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,AMS ) + AMS ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - FirstVNF_CPU ) ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( MDR - ( ( RRS * ( AMS - DDR ) ) / ( RRS - FirstVNF_CPU ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( MUM * ( DS - MUM ) ) * MUC )", "obj1": 0.9657387580299786, "obj2": 0.01665820186713929}, {"determining": "( FirstVNF_RAM - ( Max( CRS,BR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( RRSe / RCSe ),( RCSe * ( ( RCSe + MUR ) / Min( RMSe ,Min( ( CS + RRSe ) ,DS ) ) ) ) ) ,( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) )", "obj1": 0.9486081370449678, "obj2": 0.022683763772516966}, {"determining": "( ( ( Min( Min( Const ,( FirstVNF_Mem - ( Min( PN ,ARS ) - FirstVNF_Mem ) ) ) ,PN ) / ( ( Min( MRS ,ACS ) / ( PN * PN ) ) - Max( DDR,CRS ) ) ) - AMS ) - ( DDR / Const ) )", "choosing": "( ( MUR + DS ) * Max( RMSe,CS ) )", "obj1": 0.9957173447537473, "obj2": 0.0022102696923504655}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( BR * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) ) ,( MUM / RCSe ) )", "obj1": 0.9807280513918629, "obj2": 0.008425860922441533}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( Min( FirstVNF_CPU ,Const ) / BR ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( DDR / Const ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,MUR ) ) ) * MUM ) - RCSe ) ) / ( ( ( ( RCSe / MUC ) - CS ) - MUC ) / MLU ) ) )", "obj1": 0.9892933618843683, "obj2": 0.00529045998089639}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,ACS ) ) ) - Max( ( RRS / Min( Min( PN ,FirstVNF_Mem_Server ) ,( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( Min( DS ,MLU ) + ( MUM - MLU ) ),( RRSe - CS ) ) + ( Min( DS ,MLU ) + ( ( Max( ( CS + ( ( MLU / MUC ) - MUM ) ),Max( RMSe,CS ) ) + RMSe ) - CS ) ) )", "obj1": 0.867237687366167, "obj2": 0.06528893904833138}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( Min( Max( Max( MRS,FirstVNF_CPU_Server ),BR ) ,Max( Const,DDR ) ) / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( MLU,( Min( MUM ,( RMSe + ( MUC - MUC ) ) ) - RMSe ) ) + ( RRSe / ( Min( MUR ,( ( MUM - MLU ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.061418656865046516}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + ( BR / FirstVNF_CPU ) ) - ( AMS - DDR ) ) + ( ( RRS - FirstVNF_CPU ) / ( FirstVNF_Mem * PN ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( RCSe,( Max( ( MUR + ( RMSe * DS ) ),( MUM * RRSe ) ) / DS ) ),RRSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10070440115259738}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( ( RRSe / MUM ),RCSe ),RRSe ) ) )", "obj1": 0.7601713062098501, "obj2": 0.11970601998041881}, {"determining": "( MDR - ( FirstVNF_CPU + ( Max( MDR,( AMS - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( MDR - BR ) ) ) ) ) + ( Min( ( FirstVNF_Mem - ( RRS / MDR ) ) ,MRS ) / ( FirstVNF_CPU - RRS ) ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( MLU,MUC ) ) * ( Min( MUR ,( ( ( MUR / RCSe ) - ( DS - ( MUC + CS ) ) ) - MUR ) ) - ( RRSe * CS ) ) )", "obj1": 0.9550321199143469, "obj2": 0.020902055740568814}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( ( PN * PN ) / Min( MRS ,ACS ) ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - ( ( MLU * MUC ) / Min( MUM ,RCSe ) ) ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.14010738159773573}, {"determining": "( ( BR / ARS ) - ( ( FirstVNF_CPU_Server + ( CRS + ( ( ( FirstVNF_RAM_Server + Const ) - FirstVNF_Mem_Server ) * BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / Const ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( RRSe / ( Max( MUM,RRSe ) - Max( ( MUC * MUM ),( RCSe + MLU ) ) ) ) - RMSe ) + CS ),( ( MLU + RMSe ) - CS ) ) + ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.7858672376873662, "obj2": 0.10602155374210107}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( ( ( ( MUM / MUC ) * CS ) - Min( ( ( ( DS * ( MUM * MLU ) ) + RRSe ) - CS ) ,( MUM - RMSe ) ) ) * MUM ) * Max( Max( ( MLU / MUR ),MUR ),CS ) )", "obj1": 0.708779443254818, "obj2": 0.14607184164731712}, {"determining": "( ( AMS - DDR ) - Min( ( MDR - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06903859228296548}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( PN * PN ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( RRSe * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUM / MUC ) * CS ) / ( ( ( MLU - MUR ) * ( RRSe / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04500375317653972}, {"determining": "( ( AMS - DDR ) - Min( ( RRS - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MLU,( DS + ( CS + ( ( MUC + CS ) + DS ) ) ) ) + ( CS - MLU ) )", "obj1": 0.7580299785867237, "obj2": 0.12070992699863656}, {"determining": "( PN - ( FirstVNF_CPU / ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( ( RRS * PN ),( CRS + BR ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * PN ) / Max( BR,AMS ) ) ) ) )", "choosing": "Min( ( RMSe + MUM ) ,Max( ( RRSe - RCSe ),( MUC * DS ) ) )", "obj1": 0.9464668094218416, "obj2": 0.023619970541677138}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( ( ( ( Min( Const ,BR ) + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( Max( ACS,AMS ) - FirstVNF_CPU ) ) + Max( MDR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RRSe ,MUC ) - MLU ) ,( MLU - Max( Max( MUM,MUR ),MUC ) ) ) ,( CS * ( Min( RRSe ,( MUR - MLU ) ) + Max( MUC,( ( ( CS + ( MUR * MLU ) ) + RMSe ) - Max( MUC,DS ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) - DDR ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,( DDR - ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( Min( MUM ,( ( MUR / MUM ) * ( MUC - MUR ) ) ) + MLU ) - Min( MUM ,DS ) ) ) * ( ( ( CS * MLU ) + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11507712562225204}], "19": [{"determining": "( MDR - ( FirstVNF_CPU + ( Max( MDR,( AMS - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( MDR - BR ) ) ) ) ) + ( Min( ( FirstVNF_Mem - ( RRS / MDR ) ) ,MRS ) / ( FirstVNF_CPU - RRS ) ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( MLU,MUC ) ) * ( Min( MUR ,( ( ( MUR / RCSe ) - ( DS - ( MUC + CS ) ) ) - MUR ) ) - ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU,DDR ) - BR ) / ( MRS / ( PN * Max( MRS,FirstVNF_CPU ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( Max( AMS,FirstVNF_RAM ) * ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( RRSe,MUM ) - ( Max( ( MUR + Max( CS,Min( RRSe ,RCSe ) ) ),RCSe ) / ( CS - RRSe ) ) ) ) + ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * RRSe ) - RCSe ) ) / Max( ( RCSe - MUC ),MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( ( ( ( ( RRS - FirstVNF_CPU ) / ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) ) * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( RRSe * ( Min( MUR ,( ( MUC / MLU ) - ( MUR - MLU ) ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( FirstVNF_Mem_Server ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( Max( MUM,RMSe ),RMSe ) + RMSe ) / CS ) ) + ( ( ( ( ( MUC / ( CS - Min( MUM ,MLU ) ) ) + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Min( ( ARS * Max( ( AMS + FirstVNF_RAM_Server ),FirstVNF_RAM ) ) ,( MDR - Const ) ) ,( FirstVNF_Mem_Server - PN ) ) ,Min( ( FirstVNF_CPU - MDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS / MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( DS - CS ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUC + CS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.21253206344280148}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) - AMS ) + ( ( ( PN * ( ( AMS / DDR ) - FirstVNF_RAM ) ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUR * ( MUR - MUR ) ),( MUC / MLU ) ) + Max( Max( RMSe,MUM ),RMSe ) )", "obj1": 0.6916488222698073, "obj2": 0.1646724073543021}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( Max( PN,DDR ) - Min( Min( ( FirstVNF_Mem_Server * AMS ) ,FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( MLU,( Min( MUM ,( MUR + RMSe ) ) + RMSe ) ) + ( RRSe / ( Min( MUR ,( ( ( CS * MUM ) - ( Min( MUM ,RRSe ) + MUM ) ) + RCSe ) ) + Max( RMSe,( RMSe - CS ) ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( PN * PN ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( RRSe * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUM / MUC ) * CS ) / ( ( ( MLU - MUR ) * ( RRSe / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04500375317653972}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( ( MUC * MLU ) / Min( RCSe ,MUR ) ) / ( MUC - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.6916488222698073, "obj2": 0.1646724073543021}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( FirstVNF_RAM_Server * MRS ) / PN ) / FirstVNF_CPU ) - ( ( ( PN * ACS ) / Min( MRS ,PN ) ) - ( DDR - Min( FirstVNF_Mem_Server ,Min( Min( MDR ,RRS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Min( ( ( RRSe + Max( MUC,RRSe ) ) - DS ) ,( CS / ( Min( RCSe ,RMSe ) - CS ) ) ) + RMSe ) - CS ) ) + ( ( MUM - MUR ) + Min( DS ,MLU ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03784610508960765}, {"determining": "( ( ( FirstVNF_Mem_Server * PN ) / Min( MRS ,RRS ) ) - Min( PN ,RRS ) )", "choosing": "( ( Max( MLU,( ( MUC - ( ( RCSe - RRSe ) + MUR ) ) / ( RCSe / RCSe ) ) ) - RRSe ) + ( MLU / RRSe ) )", "obj1": 0.8265524625267666, "obj2": 0.08460880674637018}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,( Min( MUM ,( RMSe + MUR ) ) - RMSe ) ) + ( RRSe / ( Min( MUR ,( ( ( MUM - RCSe ) - RCSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03982903683742803}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( ( RRS - FirstVNF_CPU ) - AMS ) ) ,PN ) ) / ( ( ARS * RRS ) * ( PN / Max( ( ( ACS * ( FirstVNF_CPU_Server - AMS ) ) / ( FirstVNF_RAM / ( BR - FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,Min( Min( ( Max( RCSe,CS ) * Min( MUR ,MUC ) ) ,Min( Min( DS ,( MUM - RMSe ) ) ,RMSe ) ) ,RMSe ) ) + ( Max( DS,MLU ) / MUR ) )", "obj1": 0.8458244111349036, "obj2": 0.07634108306466689}, {"determining": "( ( PN + FirstVNF_Mem_Server ) - ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + DDR ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( MUM / MUC ) * ( Min( CS ,( ( RRSe * MLU ) * RRSe ) ) / ( CS + MUM ) ) ) - ( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ) * ( MUC - RMSe ) ) ) * MUM ) * Max( RMSe,CS ) )", "obj1": 0.7408993576017131, "obj2": 0.1308530050781932}, {"determining": "( ( AMS - DDR ) - ( ( AMS / CRS ) + ( Min( ARS ,FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( Min( Max( Max( Max( ( MUR + MUM ),Max( RCSe,DS ) ),( RRSe / Max( RRSe,RMSe ) ) ),( ( Max( MLU,MUC ) + CS ) * MUM ) ) ,MUM ) + MLU ) ,RCSe ) ,( CS * ( ( ( ( RCSe + ( MUC - ( MUC / MUC ) ) ) / ( ( ( MUC / MUC ) + MUC ) / ( ( CS * RMSe ) - CS ) ) ) * MUM ) - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08776968964183635}, {"determining": "( ( ( ACS - DDR ) + FirstVNF_RAM_Server ) - ( ( BR * CRS ) - DDR ) )", "choosing": "( ( RMSe * ( Max( MLU,( MUM - ( Max( CS,( RRSe * CS ) ) * CS ) ) ) - Min( RCSe ,MUC ) ) ) * Max( MUM,CS ) )", "obj1": 0.841541755888651, "obj2": 0.07834067147890801}, {"determining": "( ( ( Max( MRS,( RRS - RRS ) ) * PN ) / Min( MRS ,MRS ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( CS + DS ) * MUM ) - RCSe ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06323541762879145}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( ( RRS * PN ),( CRS + CRS ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * ACS ) / Max( BR,AMS ) ) ) ) )", "choosing": "Min( ( CS - MLU ) ,Max( ( RRSe - Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ),( MUC * DS ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( ( FirstVNF_Mem_Server * PN ) ,DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) + Min( ( RCSe + MUM ) ,( MUM - MUR ) ) ) * ( Min( MUR ,( ( MUC / MLU ) - ( MUR - MLU ) ) ) / ( RRSe * CS ) ) )", "obj1": 0.7002141327623126, "obj2": 0.15127689062732072}, {"determining": "( Min( ( CRS * ARS ) ,( ( MDR / MRS ) / ACS ) ) - ( Min( CRS ,Const ) + ( FirstVNF_CPU + ( ( ( ( Const + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( CS / MUM ) - RCSe ) - ( MLU + Min( CS ,RRSe ) ) ) + Min( CS ,( ( RRSe / ( MLU * RRSe ) ) / RCSe ) ) ) - MUM ) ) * MUC )", "obj1": 0.7922912205567452, "obj2": 0.10296995276521294}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * Max( ( AMS + ( FirstVNF_Mem_Server - Const ) ),PN ) ) / ( RRS - FirstVNF_CPU ) ) ) + ( BR / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( ( Min( Max( RRSe,( ( MUM + ( RMSe - MUC ) ) * MUM ) ) ,MUM ) + MLU ),RCSe ) ,( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RRSe ) ) ) ) + ( Max( ( MUC * RMSe ),Max( ( ( MUM + RCSe ) + RRSe ),CS ) ) * ( DS * ( ( MLU * ( DS - RCSe ) ) - MUC ) ) ) ) - CS ) )", "obj1": 0.8051391862955032, "obj2": 0.0961490366534311}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( ( RRS - FirstVNF_CPU ) ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( ( Max( ( ( ( RCSe + DS ) / ( ( CS * MUC ) - CS ) ) * MUM ),Min( CS ,Min( RMSe ,( RCSe / Max( MUM,CS ) ) ) ) ) - Min( ( ( ( ( CS * RMSe ) * ( MUM * MLU ) ) + RRSe ) - CS ) ,( MUM - RMSe ) ) ) * MUM ) * Max( Max( ( MLU / MUR ),MUR ),CS ) )", "obj1": 0.9935760171306209, "obj2": 0.0032923778242144783}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) - DDR ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,( DDR - ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( Min( MUM ,( ( MUR / MUM ) * ( MUC - MUR ) ) ) + MLU ) - Min( MUM ,DS ) ) ) * ( ( ( CS * MLU ) + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11507712562225204}, {"determining": "( ( Const + MDR ) - ( ( CRS + FirstVNF_RAM_Server ) + ( ( MDR - Max( Const,ACS ) ) + ( ( ( FirstVNF_CPU - ( CRS + ACS ) ) * CRS ) / ( FirstVNF_CPU / RRS ) ) ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( ( MUC - MLU ) + Min( RCSe ,Max( Max( Max( MUM,MUR ),MUC ),( CS * Max( RCSe,RMSe ) ) ) ) ) - CS ) ) + Max( Max( MUM,MUM ),RMSe ) )", "obj1": 0.7901498929336188, "obj2": 0.10424020351736495}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - ( DS - ( MUC - ( CS + MUR ) ) ) ) ) )", "obj1": 0.6595289079229122, "obj2": 0.21424024848709716}, {"determining": "( ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + Max( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * FirstVNF_RAM ),( RRS - FirstVNF_CPU ) ) ) ) - ( FirstVNF_Mem_Server / ACS ) )", "choosing": "( Max( ( MUM + RCSe ),( MUM - Max( RCSe,MLU ) ) ) + ( ( ( ( ( ( MUM / CS ) - CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU - MUR ) * ( RRSe / CS ) ) + ( RRSe / ( Min( MUR ,( ( MUM - RCSe ) + RCSe ) ) + Max( ( MUM - RCSe ),( MUR - CS ) ) ) ) )", "obj1": 0.9036402569593148, "obj2": 0.04705939052084388}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( MDR - ( AMS - DDR ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Max( MUR,Max( ( MLU + CS ),MUC ) ),Min( ( ( Min( Min( MUM ,RCSe ) ,CS ) * RCSe ) - CS ) ,RRSe ) )", "obj1": 0.9314775160599572, "obj2": 0.03313760888143231}, {"determining": "( PN - ( RRS + ( ( MDR - FirstVNF_CPU_Server ) + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( RCSe + CS ) ,RCSe ) + ( RMSe / RCSe ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - FirstVNF_CPU ) - Min( ( ( AMS - PN ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( RRSe / ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) ) ,( ( MLU * Min( RCSe ,( CS + MLU ) ) ) + Min( Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ,( Max( MUM,RRSe ) * DS ) ) ) ) )", "obj1": 0.8822269807280514, "obj2": 0.05796435886291537}, {"determining": "( ( AMS - DDR ) - Min( ( MDR - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( Min( DS ,MLU ) + Max( ( MUR - Max( Min( ( RRSe * RRSe ) ,DS ),DS ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06023803152019083}, {"determining": "( ( ( CRS - ( ( FirstVNF_CPU * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU / ( Max( ( RRS + PN ),( ( ACS * FirstVNF_Mem_Server ) * BR ) ) + ( ( CRS * PN ) / ( AMS - MRS ) ) ) ) ) - ( AMS * Min( FirstVNF_RAM ,Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM - RRSe ) + RMSe ) ,( MUC * Min( ( ( MLU - ( RCSe - MUC ) ) + MUC ) ,( RCSe - RRSe ) ) ) ) * Max( Max( ( Min( RRSe ,( ( MUR - RMSe ) / DS ) ) / RRSe ),( RCSe * ( CS * Min( ( MUR - RMSe ) ,MUC ) ) ) ),( MLU * ( ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) ) ) ) * ( Min( DS ,RCSe ) - MUM ) )", "obj1": 0.9678800856531049, "obj2": 0.0154417967447389}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_Mem_Server ) ) ) ),CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( CS - ( DS / RCSe ) ) * ( Min( MUR ,( ( CS / RRSe ) - ( RCSe - CS ) ) ) / ( RRSe * CS ) ) )", "obj1": 0.715203426124197, "obj2": 0.14297391302556264}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( ( ARS + ( CRS * FirstVNF_CPU_Server ) ) ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( DS - CS ) / ( RCSe / Max( MUC,MUR ) ) ) - MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05370340325151346}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RRSe - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( Min( CS ,MLU ) ,( MLU / RMSe ) ) ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13252649426168286}, {"determining": "( ( AMS - MRS ) - ( Min( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_CPU / AMS ) + MRS ) + ( ARS / FirstVNF_Mem_Server ) ) ) ,Const ) + FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( ( RMSe - ( MUM + MLU ) ) * ( ( ( DS + MUR ) / ( RRSe + RRSe ) ) + MUM ) ) ) + Min( DS ,RCSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03149822720264822}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / ACS ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( MDR * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( CS - CS ) * ( ( ( ( CS / Max( ( DS + MUR ),RMSe ) ) * DS ) + CS ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011507668252596791}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),MDR ) ) ,Min( Min( MRS ,( ARS * CRS ) ) ,MRS ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( RMSe - Min( RRSe ,MUC ) ) * ( MLU / MUM ) ) / MUC ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.1233168272603603}, {"determining": "( ( ( ( ( ( Min( AMS ,( BR / Const ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + Min( ( RRS / ACS ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUC - Min( CS ,( RMSe / Max( CS,CS ) ) ) ) * ( MLU / MUM ) ) ) - CS ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( MUR - MUC ) / CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.0678094086630386}, {"determining": "( ( Min( PN ,( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + ARS ) ) / Max( ( RRS / ( Min( Const ,AMS ) / Min( BR ,FirstVNF_CPU_Server ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( ARS - FirstVNF_RAM ) + ( ( ( PN * ( PN + ( BR / ACS ) ) ) / FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( ( CS * MUM ) - MLU ) - Min( RRSe ,MUC ) ),DS ) ) + MUM ) - CS ) + ( ( MUR * RMSe ) + Max( RRSe,CS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13483140996736265}, {"determining": "( ( ( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + Max( ( PN * PN ),( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( ARS - ( CRS + ARS ) ) ) ) - ( PN * ( ( Max( BR,MRS ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MUM / ( MLU - RRSe ) ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( ( RCSe - DS ),RCSe ),RRSe ) ) )", "obj1": 0.854389721627409, "obj2": 0.07074996226840143}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS - FirstVNF_CPU ) / ( Min( Max( ( MDR + MDR ),( CRS + CRS ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * PN ) ) ) ) )", "choosing": "( ( DS / Min( Max( RMSe,Min( MUM ,( Min( ( CS - MUC ) ,MUR ) + CS ) ) ) ,RMSe ) ) + ( Min( DS ,MLU ) + Max( ( ( MUC / DS ) - MUR ),( ( MUM - CS ) / Min( ( Min( MUM ,CS ) + CS ) ,MUC ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021596383751361997}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( PN * PN ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ,( AMS - MDR ) ) ) )", "choosing": "( Min( ( MUM * Min( RCSe ,( DS / MUC ) ) ) ,( MUM * MUC ) ) * Max( RMSe,CS ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( MDR - ( FirstVNF_CPU + ( Max( MDR,( AMS - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( MDR - BR ) ) ) ) ) + ( Min( ( FirstVNF_Mem - ( RRS / MDR ) ) ,MRS ) / ( FirstVNF_CPU - RRS ) ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( MLU,MUC ) ) * ( Min( MUR ,( ( ( MUR / RCSe ) - ( DS - ( MUC + CS ) ) ) - MUR ) ) - ( RRSe * CS ) ) )", "obj1": 0.9550321199143469, "obj2": 0.020902055740568814}, {"determining": "( ( ( ( DDR * PN ) / Min( MRS ,ACS ) ) - ( DDR / PN ) ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM - ( ( CS * ( MUM / MUC ) ) + Min( Min( RMSe ,RCSe ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - ( FirstVNF_CPU_Server * ( ACS * FirstVNF_CPU_Server ) ) ) + ( ( Min( Max( ( PN * PN ),( MDR + CRS ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS / ( ( MLU + ( MUC * RCSe ) ) * ( ( CS + MUM ) + ( ( Max( RCSe,( MUC * RRSe ) ) * MUM ) * RCSe ) ) ) ) + Min( DS ,( ( DS * ( MUM * MLU ) ) + RRSe ) ) )", "obj1": 0.9443254817987152, "obj2": 0.02559265675573449}, {"determining": "( PN - ( FirstVNF_CPU / ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( ( RRS * PN ),( CRS + BR ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * PN ) / Max( BR,AMS ) ) ) ) )", "choosing": "Min( ( RMSe + MUM ) ,Max( ( RRSe - RCSe ),( MUC * DS ) ) )", "obj1": 0.9464668094218416, "obj2": 0.023619970541677138}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( CS,MUR ) - CS ) ) + Max( ( ( MUM - ( MUM + MLU ) ) * ( ( ( MUM + RCSe ) / MUM ) + ( ( Max( RCSe,RRSe ) / MUM ) * RCSe ) ) ),DS ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( ( Max( MLU,MUC ) + CS ) * MUM ) ) ,MUM ) + MLU ) ,RCSe ) ,( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUC,( ( MLU + RMSe ) - Max( MUC,DS ) ) ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13738186726219762}, {"determining": "( ( ( ( CRS - Const ) + FirstVNF_Mem ) - ( Max( MDR,MDR ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) - Min( Min( PN ,FirstVNF_Mem_Server ) ,Const ) )", "choosing": "( ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) * ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( Min( MLU ,Max( Min( CS ,CS ),( DS * RRSe ) ) ) / RRSe ) ) - MLU ) ) + ( ( MUM + RCSe ) + ( ( MUM * MUM ) * RMSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10932327704583977}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + CRS ) ) / Max( ( RRS / ( ( ACS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( ( MDR - ( AMS - DDR ) ) - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ( AMS - PN ) ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RCSe + DS ),( Min( RCSe ,( CS + MLU ) ) - CS ) ) + ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) - RMSe ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13886095920937638}, {"determining": "( ( AMS - DDR ) - Min( ( ( FirstVNF_CPU - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( RRSe / CS ) * CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) - RMSe ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12132692671276389}, {"determining": "( ( AMS - ( ( AMS - ( Min( ( FirstVNF_CPU - PN ) ,AMS ) + AMS ) ) - ( ( FirstVNF_Mem + Min( DDR ,PN ) ) - FirstVNF_CPU ) ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( MDR - Max( ARS,PN ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RMSe * ( Max( MLU,( MLU - ( Max( Max( RMSe,CS ),( MUR * CS ) ) * CS ) ) ) - MUM ) ) * Max( RMSe,CS ) )", "obj1": 0.8479657387580299, "obj2": 0.07373656025155062}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( Max( DDR,CRS ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( Min( Min( RRS ,PN ) ,FirstVNF_Mem_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + CS ),( ( Max( ( CS + ( ( MLU / MUC ) - MUM ) ),RMSe ) + RMSe ) - CS ) ) + ( RRSe + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.961456102783726, "obj2": 0.017242066078165582}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,( Min( MUM ,( RMSe + MUR ) ) - RMSe ) ) + ( RRSe / ( Min( MUR ,( ( MUM - RCSe ) + RCSe ) ) + Max( RMSe,( MUR - Max( MUC,MUR ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03560325475189679}, {"determining": "( ( AMS - DDR ) - ( ( AMS + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( PN - CRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( ( MUR * MLU ) * MUM ) ) ,MUM ) + MLU ) ,RCSe ) ,( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RRSe ) ) ) ) + ( MUC - MLU ) ) - CS ) )", "obj1": 0.8308351177730193, "obj2": 0.08357373720013955}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( MUR / ( MUM * RRSe ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RRSe - Max( MUC,MUC ) ) / ( RRSe - Min( RRSe ,DS ) ) ) * MLU ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7130620985010707, "obj2": 0.1452463400758357}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,RCSe ) + ( RCSe * Min( MUR ,Max( RMSe,MUC ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09698071317545862}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUR - Max( MUC,DS ) ) + RMSe ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.7773019271948608, "obj2": 0.11129440078449877}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( MDR - ( AMS - ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ),CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) + CS ) * ( Min( MUR ,( ( Min( MUR ,( ( MUC / MLU ) - ( MUR - MLU ) ) ) / ( RRSe * CS ) ) - ( RRSe + ( ( ( RMSe * RRSe ) / RMSe ) * ( ( MUR * MUC ) / CS ) ) ) ) ) / ( RRSe * CS ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14173833228066227}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( DS - MUM ) ) * MUC )", "obj1": 0.8115631691648822, "obj2": 0.09249920691046348}, {"determining": "( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( BR * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) ) ,( MUM / RCSe ) )", "obj1": 0.9807280513918629, "obj2": 0.008425860922441533}, {"determining": "( Min( ( Min( BR ,DDR ) - MDR ) ,( PN * PN ) ) - Min( ( RRS - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MLU,Min( MUR ,( ( MUC / MLU ) - ( MUR - MLU ) ) ) ) + ( CS - MLU ) )", "obj1": 0.880085653104925, "obj2": 0.05917771063395671}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM * ( ( RCSe + CS ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( RMSe + DS ) / ( RCSe / Max( MUC,MUR ) ) ) * MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03560325475189679}, {"determining": "( Min( Min( Const ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( ( ( FirstVNF_RAM / ( FirstVNF_CPU / ( DDR - Max( ( FirstVNF_Mem * AMS ),FirstVNF_CPU ) ) ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( ( Min( MUC ,CS ) * ( DS * DS ) ) ,MLU ) - ( ( ( MLU - MLU ) - ( Min( MLU ,RCSe ) * MUC ) ) + Min( MUC ,DS ) ) ) + ( ( ( ( DS + RCSe ) + ( RCSe / Max( MUM,RRSe ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) / Max( ( RRS / ( ( RRS - ARS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( ACS ,Max( ( Const - MDR ),( AMS * Max( FirstVNF_CPU,( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) - ( ( FirstVNF_Mem - ( ACS * Min( RRS ,MDR ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.09889585072700044}, {"determining": "( ( BR / ARS ) - ( ( FirstVNF_CPU_Server + ( CRS + ( ( ( FirstVNF_RAM_Server + Const ) - FirstVNF_Mem_Server ) * BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / Const ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( RRSe / ( Max( MUM,RRSe ) - Max( ( MUC * MUM ),( RCSe + MLU ) ) ) ) - RMSe ) + CS ),( ( MLU + RMSe ) - CS ) ) + ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.987152034261242, "obj2": 0.006122207485254351}, {"determining": "( ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) - DDR ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR - DS ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08883449571926298}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( FirstVNF_CPU ,Min( MRS ,ARS ) ) ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) )", "choosing": "( Max( ( ( ( ( CS + RMSe ) * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( DS + ( MUR - MUC ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11169673736695913}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( ( ( ( Min( Const ,BR ) + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( Max( ACS,AMS ) - FirstVNF_CPU ) ) + Max( MDR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RRSe ,MUC ) - MLU ) ,( MLU - Max( Max( MUM,MUR ),MUC ) ) ) ,( CS * ( Min( RRSe ,( MUR - MLU ) ) + Max( MUC,( ( ( CS + ( MUR * MLU ) ) + RMSe ) - Max( MUC,DS ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( FirstVNF_RAM - ( Max( CRS,BR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( RRSe / RCSe ),( RCSe * ( ( RCSe + MUR ) / Min( RMSe ,Min( ( CS + RRSe ) ,DS ) ) ) ) ) ,( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) )", "obj1": 0.9486081370449678, "obj2": 0.022683763772516966}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( AMS + ( ACS / ACS ) ) * PN ) * FirstVNF_RAM ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUR - Max( MUC,DS ) ) + RMSe ) - CS ) ) + Max( Max( MUM,RMSe ),( RRSe * CS ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09852314346766206}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * PN ) * CRS ) / ( FirstVNF_CPU - RRS ) ) ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RRSe ) ) ) ) + ( ( RCSe - MUC ) - MLU ) ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.8394004282655246, "obj2": 0.08024559190285734}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUR - Max( MUC,DS ) ) + RMSe ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.7730192719486081, "obj2": 0.1133676267628713}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,ACS ) ) ) - Max( ( RRS / Min( Min( PN ,FirstVNF_Mem_Server ) ,( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS / MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( DS - CS ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUC + CS ) ) )", "obj1": 0.867237687366167, "obj2": 0.06528893904833138}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) ) )", "choosing": "( Max( MLU,( Min( MUM ,( RMSe + ( ( MUR * MUC ) / CS ) ) ) - RMSe ) ) + ( RRSe / ( Min( MUR ,( ( MUM - MLU ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.061418656865046516}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + ( BR / FirstVNF_CPU ) ) - ( AMS - DDR ) ) + ( ( RRS - FirstVNF_CPU ) / ( FirstVNF_Mem * PN ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( RCSe,( Max( ( MUR + ( RMSe * DS ) ),( MUM * RRSe ) ) / DS ) ),RRSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10070440115259738}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ),( CRS + CRS ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) - FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - RRSe ) ) + ( ( MUR + Min( ( RCSe / ( RCSe * DS ) ) ,DS ) ) + DS ) )", "obj1": 0.7601713062098501, "obj2": 0.118976346100128}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( ( ( Min( Max( ARS,MRS ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ) - ( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( Min( RRS ,Max( FirstVNF_Mem_Server,( FirstVNF_RAM_Server + BR ) ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.14000796508245458}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( RMSe + ( RCSe / Max( MUC,( ( ( RMSe * RRSe ) / RMSe ) * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14061344669043446}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( BR + ( FirstVNF_Mem_Server - ( ( MRS + MDR ) - Const ) ) ) ) ) + ( ( CRS - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUM - MUR ) ) + Max( Max( MUM,( RRSe + ( RMSe - Min( Max( Min( MUM ,MLU ),MLU ) ,RMSe ) ) ) ),RMSe ) )", "obj1": 0.7858672376873662, "obj2": 0.10602155374210107}, {"determining": "( ( AMS - DDR ) - Min( ( ( Min( FirstVNF_CPU ,MDR ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( ( Max( Max( ( MLU / MUR ),MUR ),CS ) / MUM ),RCSe ),RRSe ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06903859228296548}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.7708779443254818, "obj2": 0.1135343073575226}, {"determining": "( ( ( PN + PN ) / Min( MRS ,MRS ) ) - Min( Const ,BR ) )", "choosing": "( ( RRSe + MUR ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.9336188436830836, "obj2": 0.032815843797975634}, {"determining": "( ( ( AMS * PN ) + Min( MRS ,ACS ) ) - ( ( ( ( CRS / Max( FirstVNF_Mem,PN ) ) / ( RRS - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( MLU,( ( ( DS + ( MLU - RMSe ) ) - ( Max( ( DS + RMSe ),( MUR / MUR ) ) / MLU ) ) - Min( Min( CS ,RRSe ) ,MUC ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1488856037723845}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / Min( RRS ,( ( ( FirstVNF_CPU + ACS ) / FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( Min( ( MUR + CS ) ,MLU ) / ( Min( DS ,MLU ) + DS ) ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / ( ACS - CRS ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( ( ( RRSe / MUM ) + CS ) * MUM ) ) ,MUM ) + MLU ) ,RCSe ) ,( CS * ( Min( ( MUR - MUM ) ,RRSe ) - Max( MUC,( ( MLU + RMSe ) - Max( MUC,DS ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,PN ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( ( RRS * ACS ) / ( Min( FirstVNF_Mem_Server ,PN ) + RRS ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUC / MUM ) * CS ) / ( ( ( MLU - MUR ) * ( ( ( RRSe + DS ) / ( RRSe - Min( RRSe ,DS ) ) ) / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10866636235444524}], "20": [{"determining": "( ( ( Max( FirstVNF_CPU,DDR ) - BR ) / ( MRS / ( PN * Max( MRS,FirstVNF_CPU ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( Max( AMS,FirstVNF_RAM ) * ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( RRSe,MUM ) - ( Max( ( MUR + Max( CS,Min( RRSe ,RCSe ) ) ),RCSe ) / ( CS - RRSe ) ) ) ) + ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * RRSe ) - RCSe ) ) / Max( ( RCSe - MUC ),MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( FirstVNF_CPU - ( AMS + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * Min( ( CRS - MDR ) ,( MDR / MDR ) ) ) / ( RRS - ( ( ( MRS - CRS ) - ( FirstVNF_CPU_Server + MDR ) ) - ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Min( ( Max( Max( ( Min( ( RRSe / RMSe ) ,Max( Min( MLU ,RCSe ),( RMSe * MLU ) ) ) - RMSe ),RCSe ),MUC ) / MLU ) ,( ( Min( ( RCSe + RCSe ) ,RCSe ) + Max( ( ( RRSe - Min( ( RRSe * RRSe ) ,DS ) ) + DS ),( ( ( MLU * MLU ) - MUR ) / RCSe ) ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR - ( FirstVNF_CPU + ( Max( MDR,( AMS - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( MDR - BR ) ) ) ) ) + ( Min( ( FirstVNF_Mem - ( RRS / MDR ) ) ,MRS ) / ( FirstVNF_CPU - RRS ) ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( MLU,MUC ) ) * ( Min( MUR ,( ( ( MUR / RCSe ) - ( DS - ( MUC + CS ) ) ) - MUR ) ) - ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( ARS * CRS ) ) ) - Max( Min( FirstVNF_Mem_Server ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( ( CS + RMSe ) / ( MUM + Min( RRSe ,MLU ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( DS / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - ( DS - ( MUC - ( CS + MUR ) ) ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) - AMS ) + ( ( ( PN * ( ( AMS / DDR ) - FirstVNF_RAM ) ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUR * ( MUR - MUR ) ),( MUC / MLU ) ) + Max( Max( RMSe,MUM ),RMSe ) )", "obj1": 0.6916488222698073, "obj2": 0.1646724073543021}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( ( ARS + ( CRS * FirstVNF_CPU_Server ) ) ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( DS - CS ) / ( RCSe / Max( MUC,MUR ) ) ) - MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05370340325151346}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( FirstVNF_RAM_Server * MRS ) / PN ) / FirstVNF_CPU ) - ( ( ( PN * ACS ) / Min( MRS ,PN ) ) - ( DDR - Min( FirstVNF_Mem_Server ,Min( Min( MDR ,RRS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Min( ( ( RRSe + Max( MUC,RRSe ) ) - DS ) ,( CS / ( Min( RCSe ,RMSe ) - CS ) ) ) + RMSe ) - CS ) ) + ( ( MUM - MUR ) + Min( DS ,MLU ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03784610508960765}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( ( ( FirstVNF_RAM + Const ) - DDR ) - AMS ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RMSe ),( MUR / DS ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( MLU - ( ( RRSe / RRSe ) / DS ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,MRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Max( RCSe,RCSe ) ) ) ) ) ) )", "obj1": 0.9164882226980728, "obj2": 0.03975476963578531}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( ( MUC * MLU ) / Min( RCSe ,MUR ) ) / ( MUC - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.6916488222698073, "obj2": 0.1646724073543021}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( BR + ( FirstVNF_Mem_Server - ( ( MRS + MDR ) - Const ) ) ) ) ) + ( ( CRS - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUM - MUR ) ) + Max( Max( MUM,( RRSe + ( RMSe - Min( Max( Min( MUM ,MLU ),MLU ) ,RMSe ) ) ) ),RMSe ) )", "obj1": 0.7858672376873662, "obj2": 0.10602155374210107}, {"determining": "( ( ( FirstVNF_Mem_Server * PN ) / Min( MRS ,RRS ) ) - Min( PN ,RRS ) )", "choosing": "( ( Max( MLU,( ( MUC - ( ( RCSe - RRSe ) + MUR ) ) / ( RCSe / RCSe ) ) ) - RRSe ) + ( MLU / RRSe ) )", "obj1": 0.8265524625267666, "obj2": 0.08460880674637018}, {"determining": "( ( ( CRS - ( ( FirstVNF_CPU * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU / ( Max( ( RRS + PN ),( ( ACS * FirstVNF_Mem_Server ) * BR ) ) + ( ( CRS * PN ) / ( AMS - MRS ) ) ) ) ) - ( AMS * Min( FirstVNF_RAM ,Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM - RRSe ) + RMSe ) ,( MUC * Min( ( ( MLU - ( RCSe - MUC ) ) + MUC ) ,( RCSe - RRSe ) ) ) ) * Max( Max( ( Min( RRSe ,( ( MUR - RMSe ) / DS ) ) / RRSe ),( RCSe * ( CS * Min( ( MUR - RMSe ) ,MUC ) ) ) ),( MLU * ( ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) ) ) ) * ( Min( DS ,RCSe ) - MUM ) )", "obj1": 0.9678800856531049, "obj2": 0.0154417967447389}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( ( ( Min( ( FirstVNF_RAM_Server / Const ) ,FirstVNF_Mem ) * MRS ) / BR ) * MRS ) - ( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( Min( MUM ,RCSe ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( CS - MLU ) ) ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14751038104518993}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( Min( RRS ,Max( FirstVNF_Mem_Server,( FirstVNF_RAM_Server + BR ) ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( CS - CS ) * ( ( ( DS * CS ) + CS ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.7130620985010707, "obj2": 0.1450072915564299}, {"determining": "( ( AMS - DDR ) - Min( ( ( FirstVNF_CPU - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( RRSe / CS ) * CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) - RMSe ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12132692671276389}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( AMS - DDR ) - ( ( AMS / CRS ) + ( Min( ARS ,FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( Min( Max( Max( Max( ( MUR + MUM ),Max( RCSe,DS ) ),( RRSe / Max( RRSe,RMSe ) ) ),( ( Max( MLU,MUC ) + CS ) * MUM ) ) ,MUM ) + MLU ) ,RCSe ) ,( CS * ( ( ( ( RCSe + ( MUC - ( MUC / MUC ) ) ) / ( ( ( MUC / MUC ) + MUC ) / ( ( CS * RMSe ) - CS ) ) ) * MUM ) - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08776968964183635}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( Min( ( CRS * ARS ) ,( ( MDR / MRS ) / ACS ) ) - ( Min( CRS ,Const ) + ( FirstVNF_CPU + ( ( ( ( Const + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( CS / MUM ) - RCSe ) - ( MLU + Min( CS ,RRSe ) ) ) + Min( CS ,( ( RRSe / ( MLU * RRSe ) ) / RCSe ) ) ) - MUM ) ) * MUC )", "obj1": 0.7922912205567452, "obj2": 0.10296995276521294}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * Max( ( AMS + ( FirstVNF_Mem_Server - Const ) ),PN ) ) / ( RRS - FirstVNF_CPU ) ) ) + ( BR / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( ( Min( Max( RRSe,( ( MUM + ( RMSe - MUC ) ) * MUM ) ) ,MUM ) + MLU ),RCSe ) ,( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RRSe ) ) ) ) + ( Max( ( MUC * RMSe ),Max( ( ( MUM + RCSe ) + RRSe ),CS ) ) * ( DS * ( ( MLU * ( DS - RCSe ) ) - MUC ) ) ) ) - CS ) )", "obj1": 0.8051391862955032, "obj2": 0.0961490366534311}, {"determining": "( ( Const + MDR ) - ( ( CRS + FirstVNF_RAM_Server ) + ( ( MDR - Max( Const,ACS ) ) + ( ( ( FirstVNF_CPU - ( CRS + ACS ) ) * CRS ) / ( FirstVNF_CPU / RRS ) ) ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( ( MUC - MLU ) + Min( RCSe ,Max( Max( Max( MUM,MUR ),MUC ),( CS * Max( RCSe,RMSe ) ) ) ) ) - CS ) ) + Max( Max( MUM,MUM ),RMSe ) )", "obj1": 0.7901498929336188, "obj2": 0.10424020351736495}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) ) )", "choosing": "( Max( MLU,( Min( MUM ,( RMSe + ( ( MUR * MUC ) / CS ) ) ) - RMSe ) ) + ( RRSe / ( Min( MUR ,( ( MUM - MLU ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.061418656865046516}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ARS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) + ( Min( FirstVNF_RAM_Server ,DDR ) + CRS ) ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RMSe ),Min( MUR ,RCSe ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( ( RRS - FirstVNF_CPU ) - AMS ) ) ,PN ) ) / ( ( ARS * RRS ) * ( PN / Max( ( ( ACS * ( FirstVNF_CPU_Server - AMS ) ) / ( FirstVNF_RAM / ( BR - FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,Min( Min( ( Max( RCSe,CS ) * Min( MUR ,MUC ) ) ,Min( Min( DS ,( MUM - RMSe ) ) ,RMSe ) ) ,RMSe ) ) + ( Max( DS,MLU ) / MUR ) )", "obj1": 0.8458244111349036, "obj2": 0.07634108306466689}, {"determining": "( ( ( ( ( ( Min( AMS ,( BR / Const ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + Min( ( RRS / ACS ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUC - Min( CS ,( RMSe / Max( CS,CS ) ) ) ) * ( MLU / MUM ) ) ) - CS ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( MUR - MUC ) / CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.0678094086630386}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU - MUR ) * ( RRSe / CS ) ) + ( RRSe / ( Min( MUR ,( ( MUM - RCSe ) + RCSe ) ) + Max( ( MUM - RCSe ),( MUR - CS ) ) ) ) )", "obj1": 0.9036402569593148, "obj2": 0.04705939052084388}, {"determining": "( ( Min( PN ,( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + ARS ) ) / Max( ( RRS / ( Min( Const ,AMS ) / Min( BR ,FirstVNF_CPU_Server ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( ARS - FirstVNF_RAM ) + ( ( ( PN * ( PN + ( BR / ACS ) ) ) / FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( ( CS * MUM ) - MLU ) - Min( RRSe ,MUC ) ),DS ) ) + MUM ) - CS ) + ( ( MUR * RMSe ) + Max( RRSe,CS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13483140996736265}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( PN - ( RRS + ( ( MDR - FirstVNF_CPU_Server ) + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( RCSe + CS ) ,RCSe ) + ( RMSe / RCSe ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( MUM - RCSe ) - RCSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) * MUC )", "obj1": 0.8137044967880086, "obj2": 0.09132377344714748}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - DDR ) ) ) ) ,( ( ( Min( RRS ,Max( FirstVNF_Mem_Server,( FirstVNF_RAM_Server + BR ) ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + ( DS / ( ( MUM - ( MUM + MLU ) ) * ( ( CS + MUM ) + ( ( Max( RCSe,( RRSe * MUC ) ) / MUM ) * RCSe ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13532866165199556}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - PN ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),RRSe ) + Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( AMS - ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( AMS - ( FirstVNF_Mem + Min( PN ,DDR ) ) ) ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( FirstVNF_CPU - ( AMS - DDR ) ) + ( ( RRS - PN ) / Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( Min( Max( RRSe,( ( MUR * MLU ) * MUM ) ) ,MUM ) + MLU ) * ( ( MLU * ( ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) ) - MUM ) ) * Max( CS,CS ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( PN * PN ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( RRSe * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUM / MUC ) * CS ) / ( ( ( MLU - MUR ) * ( RRSe / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04500375317653972}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( ( RRS * PN ),( CRS + CRS ) ) ,( MDR - FirstVNF_CPU_Server ) ) * PN ) / Max( BR,AMS ) ) ) ) )", "choosing": "Min( ( CS - MUM ) ,Max( ( RRSe - RCSe ),( MUC * DS ) ) )", "obj1": 0.9357601713062098, "obj2": 0.030557988067021053}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / ACS ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( MDR * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( CS - CS ) * ( ( ( ( CS / Max( ( DS + MUR ),RMSe ) ) * DS ) + CS ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011507668252596791}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),MDR ) ) ,Min( Min( MRS ,( ARS * CRS ) ) ,MRS ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( RMSe - Min( RRSe ,MUC ) ) * ( MLU / MUM ) ) / MUC ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.1233168272603603}, {"determining": "( ( ( AMS * PN ) + Min( MRS ,ACS ) ) - ( ( ( ( CRS / Max( FirstVNF_Mem,PN ) ) / ( RRS - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( MLU,( ( ( DS + ( MLU - RMSe ) ) - ( Max( ( DS + RMSe ),( MUR / MUR ) ) / MLU ) ) - Min( Min( CS ,RRSe ) ,MUC ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1488856037723845}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_Mem_Server ) ) ) ),CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( CS - ( DS / RCSe ) ) * ( Min( MUR ,( ( CS / RRSe ) - ( RCSe - CS ) ) ) / ( RRSe * CS ) ) )", "obj1": 0.715203426124197, "obj2": 0.14297391302556264}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( ( FirstVNF_Mem_Server * PN ) ,DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) + Min( ( RCSe + MUM ) ,( MUM - MUR ) ) ) * ( Min( MUR ,( ( MUC / MLU ) - ( MUR - MLU ) ) ) / ( RRSe * CS ) ) )", "obj1": 0.7002141327623126, "obj2": 0.15127689062732072}, {"determining": "( ( ( ( DDR * PN ) / Min( MRS ,ACS ) ) - ( DDR / PN ) ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM - ( ( CS * ( MUM / MUC ) ) + Min( Min( RMSe ,RCSe ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( PN + FirstVNF_Mem_Server ) - ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + DDR ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( MUM / MUC ) * ( Min( CS ,( ( RRSe * MLU ) * RRSe ) ) / ( CS + MUM ) ) ) - ( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ) * ( MUC - RMSe ) ) ) * MUM ) * Max( RMSe,CS ) )", "obj1": 0.7408993576017131, "obj2": 0.1308530050781932}, {"determining": "( Min( Min( Const ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( ( ( FirstVNF_RAM / ( FirstVNF_CPU / ( DDR - Max( ( FirstVNF_Mem * AMS ),FirstVNF_CPU ) ) ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( ( Min( MUC ,CS ) * ( DS * DS ) ) ,MLU ) - ( ( ( MLU - MLU ) - ( Min( MLU ,RCSe ) * MUC ) ) + Min( MUC ,DS ) ) ) + ( ( ( ( DS + RCSe ) + ( RCSe / Max( MUM,RRSe ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( Max( PN,DDR ) - Min( Min( ( FirstVNF_Mem_Server * AMS ) ,FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( MLU,( Min( MUM ,( MUR + RMSe ) ) + RMSe ) ) + ( RRSe / ( Min( MUR ,( ( ( CS * MUM ) - ( Min( MUM ,RRSe ) + MUM ) ) + RCSe ) ) + Max( RMSe,( RMSe - CS ) ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( ( RRS * PN ),( CRS + CRS ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * ACS ) / Max( BR,AMS ) ) ) ) )", "choosing": "Min( ( CS - MLU ) ,Max( ( RRSe - Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ),( MUC * DS ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( BR / ARS ) - ( ( FirstVNF_CPU_Server + ( CRS + ( ( ( FirstVNF_RAM_Server + Const ) - FirstVNF_Mem_Server ) * BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / Const ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( RRSe / ( Max( MUM,RRSe ) - Max( ( MUC * MUM ),( RCSe + MLU ) ) ) ) - RMSe ) + CS ),( ( MLU + RMSe ) - CS ) ) + ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.987152034261242, "obj2": 0.006122207485254351}, {"determining": "( MDR - ( FirstVNF_CPU + ( Max( MDR,( AMS - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( MDR - BR ) ) ) ) ) + ( Min( ( FirstVNF_Mem - ( RRS / MDR ) ) ,MRS ) / ( FirstVNF_CPU - RRS ) ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( MLU,MUC ) ) * ( Min( MUR ,( ( ( MUR / RCSe ) - ( DS - ( MUC + CS ) ) ) - MUR ) ) - ( RRSe * CS ) ) )", "obj1": 0.9550321199143469, "obj2": 0.020902055740568814}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( ( RRS - FirstVNF_CPU ) ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( ( Max( ( ( ( RCSe + DS ) / ( ( CS * MUC ) - CS ) ) * MUM ),Min( CS ,Min( RMSe ,( RCSe / Max( MUM,CS ) ) ) ) ) - Min( ( ( ( ( CS * RMSe ) * ( MUM * MLU ) ) + RRSe ) - CS ) ,( MUM - RMSe ) ) ) * MUM ) * Max( Max( ( MLU / MUR ),MUR ),CS ) )", "obj1": 0.9935760171306209, "obj2": 0.0032923778242144783}, {"determining": "( ( BR / ARS ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) * BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( RRSe,MUM ) - CS ) ) + ( Max( ( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * MUM ) - RCSe ),Min( RRSe ,CS ) ) / Max( ( RCSe - MUC ),MLU ) ) )", "obj1": 0.987152034261242, "obj2": 0.006122207485254351}, {"determining": "( ( ( ( CRS - Const ) + FirstVNF_Mem ) - ( Max( MDR,MDR ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) - Min( Min( PN ,FirstVNF_Mem_Server ) ,Const ) )", "choosing": "( ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) * ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( Min( MLU ,Max( Min( CS ,CS ),( DS * RRSe ) ) ) / RRSe ) ) - MLU ) ) + ( ( MUM + RCSe ) + ( ( MUM * MUM ) * RMSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10932327704583977}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( CRS + ARS ),( FirstVNF_Mem_Server * PN ) ) / Max( ( RRS / ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( Const ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - Min( ( MDR * ( ( CRS - ( MDR - MDR ) ) + FirstVNF_Mem ) ) ,( ARS - RRS ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),MUR ) ) + RMSe ) - CS ) + Min( ( ( ( DS - MUR ) / RRSe ) + DS ) ,RCSe ) )", "obj1": 0.7237687366167024, "obj2": 0.13882850723145823}, {"determining": "( ( AMS - ( ( AMS - ( Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,AMS ) + AMS ) ) - ( ( FirstVNF_Mem + Min( PN ,DDR ) ) - FirstVNF_CPU ) ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( RRSe * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUM / MUC ) * CS ) / ( ( ( MLU - MUR ) * ( RRSe / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07373656025155062}, {"determining": "( ( AMS - DDR ) - ( ( AMS + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( PN - CRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( ( MUR * MLU ) * MUM ) ) ,MUM ) + MLU ) ,RCSe ) ,( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RRSe ) ) ) ) + ( MUC - MLU ) ) - CS ) )", "obj1": 0.8308351177730193, "obj2": 0.08357373720013955}, {"determining": "( ( ( CRS / ACS ) - DDR ) - ( ( ( AMS / FirstVNF_RAM ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) - ( ( ( ( Max( FirstVNF_CPU,PN ) / FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * PN ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * Max( ( ( CS - DS ) / CS ),Max( ( RRSe + RMSe ),( CS - MUC ) ) ) ) - DS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) - CS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( ( RMSe / MUR ) + DS ) + Min( MUM ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.034481114243576895}, {"determining": "( ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) - DDR ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,( DDR - ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM * ( ( Min( MUM ,( ( MUR / MUM ) * ( MUC - MUR ) ) ) + MLU ) - Min( MUM ,DS ) ) ) * ( ( ( CS * MLU ) + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11507712562225204}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,( AMS + Max( PN,ACS ) ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( RMSe + ( RCSe / Max( MUC,( ( MLU + RMSe ) - Max( MUC,DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.149479259547605}, {"determining": "( ( AMS - ( ( AMS - ( Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,AMS ) + AMS ) ) - ( MRS - ( FirstVNF_Mem + Min( PN ,DDR ) ) ) ) ) - Min( MRS ,CRS ) )", "choosing": "( ( ( MUC / Min( MUC ,( MUR * Min( CS ,( Max( DS,MLU ) * CS ) ) ) ) ) * ( Max( MLU,( MLU - ( Max( CS,( MUR * CS ) ) * CS ) ) ) - MUM ) ) * Max( RMSe,CS ) )", "obj1": 0.9957173447537473, "obj2": 0.0018724135383203408}, {"determining": "( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) / Max( ( RRS / ( ( RRS - ARS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( ACS ,Max( ( Const - MDR ),( AMS * Max( FirstVNF_CPU,( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) - ( ( FirstVNF_Mem - ( ACS * Min( RRS ,MDR ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.09889585072700044}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + Max( ( RRS * PN ),( CRS + CRS ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RRSe ) ) ) ) + ( MUC - MLU ) ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.7601713062098501, "obj2": 0.118976346100128}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RRSe ) ) ) ) + ( ( RCSe - MUC ) - MLU ) ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.7366167023554604, "obj2": 0.13252649426168286}, {"determining": "( ( ( ACS - DDR ) + FirstVNF_RAM_Server ) - ( ( BR * CRS ) - DDR ) )", "choosing": "( ( RMSe * ( Max( MLU,( MUM - ( Max( CS,( RRSe * CS ) ) * CS ) ) ) - Min( RCSe ,MUC ) ) ) * Max( MUM,CS ) )", "obj1": 0.841541755888651, "obj2": 0.07834067147890801}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + Max( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ),( CRS + CRS ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) - FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - RRSe ) ) + ( ( MUR + Min( ( RCSe / ( RCSe * DS ) ) ,DS ) ) + DS ) )", "obj1": 0.7601713062098501, "obj2": 0.118976346100128}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,RCSe ) + ( RCSe * Min( MUR ,Max( RMSe,MUC ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09698071317545862}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( ( ( ( Min( Const ,BR ) + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( Max( ACS,AMS ) - FirstVNF_CPU ) ) + Max( MDR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RRSe ,MUC ) - MLU ) ,( MLU - Max( Max( MUM,MUR ),MUC ) ) ) ,( CS * ( Min( RRSe ,( MUR - MLU ) ) + Max( MUC,( ( ( CS + ( MUR * MLU ) ) + RMSe ) - Max( MUC,DS ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( PN * PN ) ) )", "choosing": "( ( RMSe * ( Max( MLU,( MLU - ( Max( CS,( MUR * CS ) ) * CS ) ) ) - MUM ) ) * Max( RMSe,CS ) )", "obj1": 0.9079229122055674, "obj2": 0.04500375317653972}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( PN * PN ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM * ( ( RCSe + CS ) - Min( MUM ,DS ) ) ) * ( Min( RCSe ,( DS / MUC ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06339134307910388}, {"determining": "( FirstVNF_RAM - ( Max( CRS,BR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( RRSe / RCSe ),( RCSe * ( ( RCSe + MUR ) / Min( RMSe ,Min( ( CS + RRSe ) ,DS ) ) ) ) ) ,( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) )", "obj1": 0.9486081370449678, "obj2": 0.022683763772516966}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_CPU - ( CRS + CRS ) ) * CRS ) / ( FirstVNF_CPU - RRS ) ) ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( Min( DS ,Max( RCSe,( MLU * Max( RMSe,RRSe ) ) ) ) + ( MUC - MLU ) ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.8436830835117773, "obj2": 0.07800563098780842}, {"determining": "( ( ( Max( MRS,( RRS - RRS ) ) * PN ) / Min( MRS ,MRS ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( CS + DS ) * MUM ) - RCSe ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06323541762879145}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.7708779443254818, "obj2": 0.1135343073575226}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( AMS + ( ACS / ACS ) ) * PN ) * FirstVNF_RAM ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUR - Max( MUC,DS ) ) + RMSe ) - CS ) ) + Max( Max( MUM,RMSe ),( RRSe * CS ) ) )", "obj1": 0.8008565310492506, "obj2": 0.0983532602384265}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( Max( DDR,CRS ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( Min( Min( RRS ,PN ) ,FirstVNF_Mem_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Min( Max( RMSe,MUR ) ,Min( Min( ( MUM - RMSe ) ,MLU ) ,RMSe ) ) - RMSe ) ) + ( RRSe / ( Min( MUR ,( ( MUM - RCSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.961456102783726, "obj2": 0.017242066078165582}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * PN ) * CRS ) / ( FirstVNF_CPU - RRS ) ) ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RRSe ) ) ) ) + ( ( RCSe - MUC ) - MLU ) ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.8394004282655246, "obj2": 0.08024559190285734}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,ACS ) ) ) - Max( ( RRS / Min( Min( PN ,FirstVNF_Mem_Server ) ,( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS / MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( DS - CS ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUC + CS ) ) )", "obj1": 0.867237687366167, "obj2": 0.06528893904833138}, {"determining": "( ( AMS - Max( FirstVNF_Mem_Server,PN ) ) - ( ( Max( BR,( MDR / FirstVNF_Mem ) ) * FirstVNF_Mem ) + ( CRS - Const ) ) )", "choosing": "( ( ( Max( MLU,( MLU - ( Max( CS,MUR ) * CS ) ) ) - MUM ) * ( Max( RCSe,CS ) * Max( RMSe,( ( RCSe / ( CS / ( RRSe / RRSe ) ) ) - CS ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + ( BR / FirstVNF_CPU ) ) - ( AMS - DDR ) ) + ( ( RRS - FirstVNF_CPU ) / ( FirstVNF_Mem * PN ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( RCSe,( Max( ( MUR + ( RMSe * DS ) ),( MUM * RRSe ) ) / DS ) ),RRSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10070440115259738}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( RMSe + ( RCSe / Max( MUC,( ( ( RMSe * RRSe ) / RMSe ) * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14061344669043446}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06963264761802167}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + Max( ( RRS * PN ),( CRS + CRS ) ) ) ) ) + ( ( Min( CRS ,ACS ) / ARS ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( ( MLU + RMSe ) - CS ) ) + Max( MUM,MLU ) )", "obj1": 0.7665952890792291, "obj2": 0.11594669858062781}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RRSe - Max( MUC,MUC ) ),( ( MUM - CS ) / ( MUC / ( MUM + Min( Min( CS ,MLU ) ,( MLU / RMSe ) ) ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13252649426168286}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( ( Min( BR ,RRS ) / PN ) / Min( Const ,( ( Min( RRS ,MRS ) * CRS ) * ARS ) ) ) + ( ( ( ( AMS + Max( ACS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( Min( DS ,MUR ) + Max( ( MUR - Max( MUC,DS ) ),Min( RRSe ,DS ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( AMS - ( ( AMS - ( Min( ( FirstVNF_CPU - PN ) ,AMS ) + AMS ) ) - ( ( FirstVNF_Mem + Min( DDR ,PN ) ) - FirstVNF_CPU ) ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( MDR - Max( ARS,PN ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RMSe * ( Max( MLU,( MLU - ( Max( Max( RMSe,CS ),( MUR * CS ) ) * CS ) ) ) - MUM ) ) * Max( RMSe,CS ) )", "obj1": 0.8479657387580299, "obj2": 0.07373656025155062}, {"determining": "( ( ( ( PN * PN ) / ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) - Min( ( ( AMS - PN ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( RRSe / ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) ) ,( ( MLU * Min( RCSe ,( CS + MLU ) ) ) + Min( Max( Max( ( RCSe / DS ),RCSe ),CS ) ,( Max( MUM,RRSe ) * DS ) ) ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0032923778242144783}, {"determining": "( Min( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) ,Min( MRS ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU_Server - MDR ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( RRSe / ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) ) ,( ( MLU * Min( RCSe ,( CS + MLU ) ) ) + Min( Max( Max( ( ( MUR - MUC ) / RCSe ),RCSe ),RRSe ) ,( Max( MUM,RRSe ) * DS ) ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13738186726219762}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),MDR ) ) ,Min( Min( MRS ,( ARS * CRS ) ) ,MRS ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( RMSe - Min( RRSe ,MUC ) ) * ( MLU / MUM ) ) / MUC ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.1233168272603603}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,PN ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( ( RRS * ACS ) / ( Min( FirstVNF_Mem_Server ,PN ) + RRS ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUC / MUM ) * CS ) / ( ( ( MLU - MUR ) * ( ( ( RRSe + DS ) / ( RRSe - Min( RRSe ,DS ) ) ) / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10866636235444524}], "21": [{"determining": "( ( ( Max( FirstVNF_CPU,DDR ) - BR ) / ( MRS / ( PN * Max( MRS,FirstVNF_CPU ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( Max( AMS,FirstVNF_RAM ) * ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( RRSe,MUM ) - ( Max( ( MUR + Max( CS,Min( RRSe ,RCSe ) ) ),RCSe ) / ( CS - RRSe ) ) ) ) + ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * RRSe ) - RCSe ) ) / Max( ( RCSe - MUC ),MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( ( ( Max( ( AMS + ( ACS / BR ) ),( ACS / FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RMSe + ( ( ( ( RMSe / RRSe ) / DS ) - MUM ) + ( ( ( RCSe + ( RMSe / RMSe ) ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( AMS + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * Min( ( CRS - MDR ) ,( MDR / MDR ) ) ) / ( RRS - ( ( ( MRS - CRS ) - ( FirstVNF_CPU_Server + MDR ) ) - ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Min( ( Max( Max( ( Min( ( RRSe / RMSe ) ,Max( Min( MLU ,RCSe ),( RMSe * MLU ) ) ) - RMSe ),RCSe ),MUC ) / MLU ) ,( ( Min( ( RCSe + RCSe ) ,RCSe ) + Max( ( ( RRSe - Min( ( RRSe * RRSe ) ,DS ) ) + DS ),( ( ( MLU * MLU ) - MUR ) / RCSe ) ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( CRS * ARS ) ) ) - Max( Min( FirstVNF_Mem_Server ,Min( PN ,MDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( MUM - RRSe ) - RCSe ) + RCSe ) ) + Max( Max( ( ( RCSe - MUM ) * ( ( MUR * Min( RMSe ,MUM ) ) + Min( MLU ,RRSe ) ) ),( RCSe + ( RRSe - ( RMSe - RCSe ) ) ) ),( MUR - CS ) ) ) * MUC )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( MUC + MUR ) / ( MUC - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( Max( ( PN / FirstVNF_RAM_Server ),( CRS - DDR ) ) - MDR ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - MUC ) ) ) + ( DS * MLU ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( DS / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - ( DS - ( MUC - ( CS + MUR ) ) ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( FirstVNF_RAM - ( Max( CRS,BR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( RRSe / RCSe ),( RCSe * ( ( RCSe + MUR ) / Min( RMSe ,Min( ( CS + RRSe ) ,DS ) ) ) ) ) ,( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) )", "obj1": 0.9486081370449678, "obj2": 0.022683763772516966}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) - AMS ) + ( ( ( PN * ( ( AMS / DDR ) - FirstVNF_RAM ) ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUR * ( MUR - MUR ) ),( MUC / MLU ) ) + Max( Max( RMSe,MUM ),RMSe ) )", "obj1": 0.6916488222698073, "obj2": 0.1646724073543021}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( ( ( ( MUM / CS ) * CS ) / ( MLU - ( Max( CS,DS ) * CS ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.880085653104925, "obj2": 0.05832721216984692}, {"determining": "( ( ( CRS / ACS ) - DDR ) - ( ( ( AMS / FirstVNF_RAM ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) - ( ( ( ( Max( FirstVNF_CPU,PN ) / FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * PN ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * Max( ( ( CS - DS ) / CS ),Max( ( RRSe + RMSe ),( CS - MUC ) ) ) ) - DS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) - CS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( ( RMSe / MUR ) + DS ) + Min( MUM ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.034481114243576895}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( ( ARS + ( CRS * FirstVNF_CPU_Server ) ) ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( DS - CS ) / ( RCSe / Max( MUC,MUR ) ) ) - MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05370340325151346}, {"determining": "( ( ( ( ( ( Min( AMS ,( BR / Const ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) ) - ( ( Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_Mem ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + Min( ( RRS / ACS ) ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,( ( MUC - Min( CS ,( RMSe / Max( CS,CS ) ) ) ) * ( MLU / MUM ) ) ) - CS ) * ( ( CS + ( ( Max( RMSe,MLU ) / Max( MUC,RMSe ) ) * DS ) ) / ( ( MUR - MUC ) / CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.0678094086630386}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RRSe ) ) ) ) + ( MUC - MLU ) ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( PN - ( FirstVNF_CPU + ( ( RRS - RRS ) + ( ( Min( Max( ( RRS * ACS ),( CRS + Const ) ) ,( MDR - FirstVNF_CPU_Server ) ) * PN ) / Max( ( ( AMS + ( CRS / ACS ) ) * PN ),AMS ) ) ) ) )", "choosing": "Min( ( CS - MUM ) ,( Max( ( Max( MUR,MUM ) + Min( ( MUR / MUM ) ,Max( DS,RCSe ) ) ),RCSe ) / RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03055798806702105}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) ) )", "choosing": "( Max( MLU,( Min( MUM ,( RMSe + ( ( MUR * MUC ) / CS ) ) ) - RMSe ) ) + ( RRSe / ( Min( MUR ,( ( MUM - MLU ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.061418656865046516}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( ( MUC * MLU ) / Min( RCSe ,MUR ) ) / ( MUC - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.6916488222698073, "obj2": 0.1646724073543021}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( BR + ( FirstVNF_Mem_Server - ( ( MRS + MDR ) - Const ) ) ) ) ) + ( ( CRS - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUM - MUR ) ) + Max( Max( MUM,( RRSe + ( RMSe - Min( Max( Min( MUM ,MLU ),MLU ) ,RMSe ) ) ) ),RMSe ) )", "obj1": 0.7858672376873662, "obj2": 0.10602155374210107}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06963264761802167}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RMSe ),( ( Max( Max( MUM,RMSe ),RMSe ) + Min( RMSe ,DS ) ) / CS ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( MLU - ( Max( CS,( MUR * CS ) ) * CS ) ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07361890616614923}, {"determining": "( ( ( CRS - ( ( FirstVNF_CPU * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU / ( Max( ( RRS + PN ),( ( ACS * FirstVNF_Mem_Server ) * BR ) ) + ( ( CRS * PN ) / ( AMS - MRS ) ) ) ) ) - ( AMS * Min( FirstVNF_RAM ,Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM - RRSe ) + RMSe ) ,( MUC * Min( ( ( MLU - ( RCSe - MUC ) ) + MUC ) ,( RCSe - RRSe ) ) ) ) * Max( Max( ( Min( RRSe ,( ( MUR - RMSe ) / DS ) ) / RRSe ),( RCSe * ( CS * Min( ( MUR - RMSe ) ,MUC ) ) ) ),( MLU * ( ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) ) ) ) * ( Min( DS ,RCSe ) - MUM ) )", "obj1": 0.9678800856531049, "obj2": 0.0154417967447389}, {"determining": "( ( AMS - DDR ) - ( ( AMS + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( PN - CRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( ( MUR * MLU ) * MUM ) ) ,MUM ) + MLU ) ,RCSe ) ,( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RRSe ) ) ) ) + ( MUC - MLU ) ) - CS ) )", "obj1": 0.8308351177730193, "obj2": 0.08357373720013955}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( Min( RRS ,Max( FirstVNF_Mem_Server,( FirstVNF_RAM_Server + BR ) ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( CS - CS ) * ( ( ( DS * CS ) + CS ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.7130620985010707, "obj2": 0.1450072915564299}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,ACS ) ) ) - Max( ( RRS / Min( Min( PN ,FirstVNF_Mem_Server ) ,( Const - MRS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - Max( DDR,Min( ( ( FirstVNF_CPU / ( AMS - MDR ) ) - ACS ) ,BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS / MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( DS - CS ) ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUC + CS ) ) )", "obj1": 0.867237687366167, "obj2": 0.06528893904833138}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + ( BR / FirstVNF_CPU ) ) - ( AMS - DDR ) ) + ( ( RRS - FirstVNF_CPU ) / ( FirstVNF_Mem * PN ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( RCSe,( Max( ( MUR + ( RMSe * DS ) ),( MUM * RRSe ) ) / DS ) ),RRSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10070440115259738}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}, {"determining": "( MDR - ( FirstVNF_CPU + ( Max( MDR,( AMS - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( MDR - BR ) ) ) ) ) + ( Min( ( FirstVNF_Mem - ( RRS / MDR ) ) ,MRS ) / ( FirstVNF_CPU - RRS ) ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( MLU,MUC ) ) * ( Min( MUR ,( ( ( MUR / RCSe ) - ( DS - ( MUC + CS ) ) ) - MUR ) ) - ( RRSe * CS ) ) )", "obj1": 0.9550321199143469, "obj2": 0.020902055740568814}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( FirstVNF_RAM_Server * MRS ) / PN ) / FirstVNF_CPU ) - ( ( ( PN * ACS ) / Min( MRS ,PN ) ) - ( DDR - Min( FirstVNF_Mem_Server ,Min( Min( MDR ,RRS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Min( ( ( RRSe + Max( MUC,RRSe ) ) - DS ) ,( CS / ( Min( RCSe ,RMSe ) - CS ) ) ) + RMSe ) - CS ) ) + ( ( MUM - MUR ) + Min( DS ,MLU ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03784610508960765}, {"determining": "( Min( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) ,Min( MRS ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU_Server - MDR ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( RRSe / ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) ) ,( ( MLU * Min( RCSe ,( CS + MLU ) ) ) + Min( Max( Max( ( ( MUR - MUC ) / RCSe ),RCSe ),RRSe ) ,( Max( MUM,RRSe ) * DS ) ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13738186726219762}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( Min( Min( ( MUR - RRSe ) ,MUM ) ,( Max( MUM,RRSe ) - Max( DS,( RCSe + MLU ) ) ) ) * DS ) ) )", "obj1": 0.961456102783726, "obj2": 0.01691534990556115}, {"determining": "( Min( ( CRS * ARS ) ,( ( MDR / MRS ) / ACS ) ) - ( Min( CRS ,Const ) + ( FirstVNF_CPU + ( ( ( ( Const + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( CS / MUM ) - RCSe ) - ( MLU + Min( CS ,RRSe ) ) ) + Min( CS ,( ( RRSe / ( MLU * RRSe ) ) / RCSe ) ) ) - MUM ) ) * MUC )", "obj1": 0.7922912205567452, "obj2": 0.10296995276521294}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * Max( ( AMS + ( FirstVNF_Mem_Server - Const ) ),PN ) ) / ( RRS - FirstVNF_CPU ) ) ) + ( BR / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( ( Min( Max( RRSe,( ( MUM + ( RMSe - MUC ) ) * MUM ) ) ,MUM ) + MLU ),RCSe ) ,( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RRSe ) ) ) ) + ( Max( ( MUC * RMSe ),Max( ( ( MUM + RCSe ) + RRSe ),CS ) ) * ( DS * ( ( MLU * ( DS - RCSe ) ) - MUC ) ) ) ) - CS ) )", "obj1": 0.8051391862955032, "obj2": 0.0961490366534311}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.7708779443254818, "obj2": 0.1135343073575226}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,PN ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( ( RRS * ACS ) / ( Min( FirstVNF_Mem_Server ,PN ) + RRS ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUC / MUM ) * CS ) / ( ( ( MLU - MUR ) * ( ( ( RRSe + DS ) / ( RRSe - Min( RRSe ,DS ) ) ) / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10866636235444524}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( CRS + ARS ),( FirstVNF_Mem_Server * PN ) ) / Max( ( RRS / ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( Const ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - Min( ( MDR * ( ( CRS - ( MDR - MDR ) ) + FirstVNF_Mem ) ) ,( ARS - RRS ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),MUR ) ) + RMSe ) - CS ) + Min( ( ( ( DS - MUR ) / RRSe ) + DS ) ,RCSe ) )", "obj1": 0.7237687366167024, "obj2": 0.13882850723145823}, {"determining": "( ( Const + MDR ) - ( ( CRS + FirstVNF_RAM_Server ) + ( ( MDR - Max( Const,ACS ) ) + ( ( ( FirstVNF_CPU - ( CRS + ACS ) ) * CRS ) / ( FirstVNF_CPU / RRS ) ) ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( ( MUC - MLU ) + Min( RCSe ,Max( Max( Max( MUM,MUR ),MUC ),( CS * Max( RCSe,RMSe ) ) ) ) ) - CS ) ) + Max( Max( MUM,MUM ),RMSe ) )", "obj1": 0.7901498929336188, "obj2": 0.10424020351736495}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( Min( Min( Const ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( ( ( FirstVNF_RAM / ( FirstVNF_CPU / ( DDR - Max( ( FirstVNF_Mem * AMS ),FirstVNF_CPU ) ) ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( ( Min( MUC ,CS ) * ( DS * DS ) ) ,MLU ) - ( ( ( MLU - MLU ) - ( Min( MLU ,RCSe ) * MUC ) ) + Min( MUC ,DS ) ) ) + ( ( ( ( DS + RCSe ) + ( RCSe / Max( MUM,RRSe ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - PN ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( MLU,MUC ) ) * ( Min( MUR ,( ( ( MUR / RCSe ) - ( DS - ( MUC + CS ) ) ) - MUR ) ) - ( RRSe * CS ) ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( PN + FirstVNF_Mem_Server ) - ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + DDR ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( MUM / MUC ) * ( Min( CS ,( ( RRSe * MLU ) * RRSe ) ) / ( CS + MUM ) ) ) - ( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ) * ( MUC - RMSe ) ) ) * MUM ) * Max( RMSe,CS ) )", "obj1": 0.7408993576017131, "obj2": 0.1308530050781932}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( AMS + ( Min( FirstVNF_CPU ,MDR ) / ACS ) ) * PN ) * FirstVNF_RAM ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( Max( MUM,CS ) - Max( MUC,DS ) ) + RMSe ) - CS ) ) + Max( Max( MUM,RMSe ),( RRSe * CS ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11176608083187946}, {"determining": "( ( ( BR / FirstVNF_RAM ) - CRS ) - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,BR ) ) - Min( FirstVNF_RAM ,BR ) ) ) ) )", "choosing": "( Min( Min( ( ( MUC + MUM ) + DS ) ,( ( ( RRSe + MLU ) + ( MUR - ( ( CS + MUM ) + RRSe ) ) ) / MLU ) ) ,( Max( ( ( RRSe * RMSe ) + Max( Min( Max( MUM,RMSe ) ,( DS + RCSe ) ),( ( RRSe * MUM ) + CS ) ) ),Max( MLU,RCSe ) ) - DS ) ) + ( RRSe / ( Min( Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * MLU ) ,CS ) ) ,( ( MLU - RMSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07903302093109636}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( PN - ( RRS + ( ( MDR - FirstVNF_CPU_Server ) + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( RCSe + CS ) ,RCSe ) + ( RMSe / RCSe ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( Min( PN ,( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + ARS ) ) / Max( ( RRS / ( Min( Const ,AMS ) / Min( BR ,FirstVNF_CPU_Server ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( ARS - FirstVNF_RAM ) + ( ( ( PN * ( PN + ( BR / ACS ) ) ) / FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( ( CS * MUM ) - MLU ) - Min( RRSe ,MUC ) ),DS ) ) + MUM ) - CS ) + ( ( MUR * RMSe ) + Max( RRSe,CS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13483140996736265}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( RRSe / ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) ) ,( ( MLU * Min( RCSe ,( CS + MLU ) ) ) + Min( Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ,( Max( MUM,RRSe ) * Max( CS,RCSe ) ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13508911914850183}, {"determining": "( ( ( AMS - DDR ) - ( MDR * CRS ) ) - Min( ( ( MDR - ( AMS * ( ( RRS * Max( PN,CRS ) ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( Max( MLU,RCSe ) - RRSe ) + Max( ( MUR - CS ),RMSe ) ) * MUR )", "obj1": 0.8137044967880086, "obj2": 0.09132377344714745}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server - ACS ) ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - RRS ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( MUM - RCSe ) - ( Min( RRSe ,RCSe ) / MUC ) ) + RCSe ) ) + Max( RMSe,( ( MUR + Min( ( RMSe / ( RCSe * DS ) ) ,DS ) ) + DS ) ) ) * MUC )", "obj1": 0.8265524625267666, "obj2": 0.08452872380389284}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( ( RRS - FirstVNF_CPU ) - AMS ) ) ,PN ) ) / ( ( ARS * RRS ) * ( PN / Max( ( ( ACS * ( FirstVNF_CPU_Server - AMS ) ) / ( FirstVNF_RAM / ( BR - FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,Min( Min( ( Max( RCSe,CS ) * Min( MUR ,MUC ) ) ,Min( Min( DS ,( MUM - RMSe ) ) ,RMSe ) ) ,RMSe ) ) + ( Max( DS,MLU ) / MUR ) )", "obj1": 0.8458244111349036, "obj2": 0.07634108306466689}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server - PN ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RMSe * ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) - MUM ) ) * Max( RMSe,CS ) )", "obj1": 0.9807280513918629, "obj2": 0.008425860922441533}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( PN * PN ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( RRSe * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUM / MUC ) * CS ) / ( ( ( MLU - MUR ) * ( RRSe / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04500375317653972}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),MDR ) ) ,Min( Min( MRS ,( ARS * CRS ) ) ,MRS ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( RMSe - Min( RRSe ,MUC ) ) * ( MLU / MUM ) ) / MUC ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.1233168272603603}, {"determining": "( ( ( AMS * PN ) + Min( MRS ,ACS ) ) - ( ( ( ( CRS / Max( FirstVNF_Mem,PN ) ) / ( RRS - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( MLU,( ( ( DS + ( MLU - RMSe ) ) - ( Max( ( DS + RMSe ),( MUR / MUR ) ) / MLU ) ) - Min( Min( CS ,RRSe ) ,MUC ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1488856037723845}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( AMS - DDR ) - ( ( Max( PN,MRS ) - Const ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( MUM - RCSe ) - RCSe ) + RCSe ) ) + Max( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ),( MUR - CS ) ) ) * MUC )", "obj1": 0.8244111349036403, "obj2": 0.08597266995631866}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( DDR * FirstVNF_Mem_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( CS * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03937117530999083}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( ( RRS * PN ),( CRS + CRS ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * ACS ) / Max( BR,AMS ) ) ) ) )", "choosing": "Min( ( CS - MLU ) ,Max( ( RRSe - Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ),( MUC * DS ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( ( ( FirstVNF_CPU - ( FirstVNF_Mem + Min( PN ,DDR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) )", "choosing": "( ( RMSe / RMSe ) + Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010953646649026403}, {"determining": "( ( ( ( DDR * PN ) / Min( MRS ,ACS ) ) - ( DDR / PN ) ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM - ( ( CS * ( MUM / MUC ) ) + Min( Min( RMSe ,RCSe ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ARS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) + ( Min( FirstVNF_RAM_Server ,DDR ) + CRS ) ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RMSe ),Min( MUR ,RCSe ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( ( ( FirstVNF_RAM + Const ) - DDR ) - AMS ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RMSe ),( MUR / DS ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( MLU - ( ( RRSe / RRSe ) / DS ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( ( RRS - FirstVNF_CPU ) ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( ( Max( ( ( ( RCSe + DS ) / ( ( CS * MUC ) - CS ) ) * MUM ),Min( CS ,Min( RMSe ,( RCSe / Max( MUM,CS ) ) ) ) ) - Min( ( ( ( ( CS * RMSe ) * ( MUM * MLU ) ) + RRSe ) - CS ) ,( MUM - RMSe ) ) ) * MUM ) * Max( Max( ( MLU / MUR ),MUR ),CS ) )", "obj1": 0.9935760171306209, "obj2": 0.0032923778242144783}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( ( ( Min( ( FirstVNF_RAM_Server / Const ) ,FirstVNF_Mem ) * MRS ) / BR ) * MRS ) - ( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( Min( MUM ,RCSe ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( CS - MLU ) ) ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14751038104518993}, {"determining": "( ( AMS - DDR ) - Min( ( ( FirstVNF_CPU - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( RRSe / CS ) * CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) - RMSe ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12132692671276389}, {"determining": "( ( ( PN * PN ) / ( MRS / ( FirstVNF_RAM_Server * Max( MRS,FirstVNF_CPU ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * Max( AMS,FirstVNF_RAM ) ) ,( MDR - Const ) ) ) ,Min( ( ( FirstVNF_Mem - ( MRS * FirstVNF_RAM ) ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( Max( MUM,RMSe ),MUM ) - CS ) ) + ( Max( ( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * MUM ) - RCSe ),Min( RRSe ,CS ) ) / Max( ( RCSe - MUC ),MLU ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03692211390947389}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,( AMS + Max( PN,ACS ) ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( RMSe + ( RCSe / Max( MUC,( ( MLU + RMSe ) - Max( MUC,DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.149479259547605}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( ( ( Min( Max( ARS,MRS ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ) - ( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - Min( MUM ,( MLU + RMSe ) ) ) ) ) ) )", "obj1": 0.7173447537473233, "obj2": 0.1429393779291331}, {"determining": "( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) / Max( ( RRS / ( ( RRS - ARS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( ACS ,Max( ( Const - MDR ),( AMS * Max( FirstVNF_CPU,( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) - ( ( FirstVNF_Mem - ( ACS * Min( RRS ,MDR ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.09889585072700044}, {"determining": "( ( BR - MDR ) - Min( ( Min( MRS ,ACS ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / MLU ),RCSe ) - ( MUC * MUR ) ) + RMSe )", "obj1": 0.7580299785867237, "obj2": 0.12084723780119266}, {"determining": "( ( AMS - DDR ) - ( ( AMS / CRS ) + ( Min( ARS ,FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( Min( Max( Max( Max( ( MUR + MUM ),Max( RCSe,DS ) ),( RRSe / Max( RRSe,RMSe ) ) ),( ( Max( MLU,MUC ) + CS ) * MUM ) ) ,MUM ) + MLU ) ,RCSe ) ,( CS * ( ( ( ( RCSe + ( MUC - ( MUC / MUC ) ) ) / ( ( ( MUC / MUC ) + MUC ) / ( ( CS * RMSe ) - CS ) ) ) * MUM ) - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08776968964183635}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( RRS,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( RMSe + ( RMSe / Max( MUC,( ( ( RMSe * RRSe ) / RMSe ) * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14061344669043446}, {"determining": "( ( BR / ARS ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) * BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( RRSe / ( Max( MUM,RRSe ) - Max( DS,( RCSe + MLU ) ) ) ) - RMSe ) + MUM ),( ( MLU + RMSe ) - CS ) ) + ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.987152034261242, "obj2": 0.006122207485254351}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - RRSe ) ) + ( ( MUR + Min( ( RCSe / ( RCSe * DS ) ) ,DS ) ) + DS ) )", "obj1": 0.8115631691648822, "obj2": 0.09236025289204464}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,RCSe ) + ( RCSe * Min( MUR ,Max( RMSe,MUC ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09698071317545862}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( ( CRS - Const ) + FirstVNF_Mem ) - ( Max( MDR,MDR ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) - Min( Min( PN ,FirstVNF_Mem_Server ) ,Const ) )", "choosing": "( ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) * ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( Min( MLU ,Max( Min( CS ,CS ),( DS * RRSe ) ) ) / RRSe ) ) - MLU ) ) + ( ( MUM + RCSe ) + ( ( MUM * MUM ) * RMSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10932327704583977}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_Mem_Server ) ) ) ),CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( CS - ( DS / RCSe ) ) * ( Min( MUR ,( ( CS / RRSe ) - ( RCSe - CS ) ) ) / ( RRSe * CS ) ) )", "obj1": 0.715203426124197, "obj2": 0.14297391302556264}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( ( ( ( Min( Const ,BR ) + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( Max( ACS,AMS ) - FirstVNF_CPU ) ) + Max( MDR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RRSe ,MUC ) - MLU ) ,( MLU - Max( Max( MUM,MUR ),MUC ) ) ) ,( CS * ( Min( RRSe ,( MUR - MLU ) ) + Max( MUC,( ( ( CS + ( MUR * MLU ) ) + RMSe ) - Max( MUC,DS ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ) ,( PN * PN ) ) )", "choosing": "( ( RMSe * ( Max( MLU,( CS - ( ( MUM - RCSe ) / MLU ) ) ) - MUM ) ) * Max( RMSe,CS ) )", "obj1": 0.9079229122055674, "obj2": 0.04500375317653972}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( PN * PN ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM * ( ( RCSe + CS ) - Min( MUM ,DS ) ) ) * ( Min( RCSe ,( DS / MUC ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06339134307910388}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( ( PN * ACS ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( MUM - RCSe ) - RCSe ) + RCSe ) ) + ( ( Min( ( ( RRSe + Max( MUC,MUM ) ) - DS ) ,( CS / ( Min( MUC ,RMSe ) - CS ) ) ) + RMSe ) - CS ) ) * MUC )", "obj1": 0.8436830835117773, "obj2": 0.07708841782278829}, {"determining": "( ( ( Max( MRS,( RRS - RRS ) ) * PN ) / Min( MRS ,MRS ) ) - ( DDR + FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( CS + DS ) * MUM ) - RCSe ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06323541762879145}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),MDR ) ) ,Min( Min( MRS ,( ARS * CRS ) ) ,MRS ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( ( MLU / MLU ) - Min( RRSe ,MUC ) ) * ( MLU / MUM ) ) / MUC ) ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.12758489567994977}, {"determining": "( ( ( ACS - DDR ) + FirstVNF_RAM_Server ) - ( ( BR * CRS ) - DDR ) )", "choosing": "( ( RMSe * ( Max( MLU,( MUM - ( Max( CS,( RRSe * CS ) ) * CS ) ) ) - Min( RCSe ,MUC ) ) ) * Max( MUM,CS ) )", "obj1": 0.841541755888651, "obj2": 0.07834067147890801}, {"determining": "( ( AMS - DDR ) - ( ( Max( Const,ARS ) / PN ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( AMS + ( BR / ACS ) ),PN ) * FirstVNF_RAM ) / ( FirstVNF_CPU - RRS ) ) ) ) )", "choosing": "( Max( ( MUM + RMSe ),( ( Min( RMSe ,DS ) + Max( Max( MUM,RMSe ),RMSe ) ) / MUR ) ) + ( ( Max( MUC,RMSe ) + RRSe ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7601713062098501, "obj2": 0.118976346100128}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / ACS ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( MDR * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( CS - CS ) * ( ( ( ( CS / Max( ( DS + MUR ),RMSe ) ) * DS ) + CS ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011507668252596791}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - PN ) ) ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),RRSe ) + Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + Max( ( RRS * PN ),( CRS + CRS ) ) ) ) ) + ( ( Min( CRS ,ACS ) / ARS ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( ( MLU + RMSe ) - CS ) ) + Max( MUM,MLU ) )", "obj1": 0.7665952890792291, "obj2": 0.11594669858062781}, {"determining": "( ( AMS - DDR ) - Min( ( ( FirstVNF_CPU - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( Min( MRS ,ACS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( RRSe / CS ) * CS ) - CS ),RRSe ) + ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) - RMSe ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13211622285403343}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( ( Min( BR ,RRS ) / PN ) / Min( Const ,( ( Min( RRS ,MRS ) * CRS ) * ARS ) ) ) + ( ( ( ( AMS + Max( ACS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( Min( DS ,MUR ) + Max( ( MUR - Max( MUC,DS ) ),Min( RRSe ,DS ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}], "22": [{"determining": "( ( ( Max( FirstVNF_CPU,DDR ) - BR ) / ( MRS / ( PN * Max( MRS,FirstVNF_CPU ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( Max( AMS,FirstVNF_RAM ) * ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( RRSe,MUM ) - ( Max( ( MUR + Max( CS,Min( RRSe ,RCSe ) ) ),RCSe ) / ( CS - RRSe ) ) ) ) + ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * RRSe ) - RCSe ) ) / Max( ( RCSe - MUC ),MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( ( Const + MDR ) - ( ( CRS + FirstVNF_RAM_Server ) + ( ( MDR - Max( Const,ACS ) ) + ( Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / ( FirstVNF_CPU / RRS ) ) ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( ( MUC - MLU ) + Min( RCSe ,Max( Max( Max( MUM,MUR ),MUC ),( CS * Max( RCSe,RMSe ) ) ) ) ) - CS ) ) + Max( Max( MUM,MUM ),( ( DS * ( CS / MLU ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( AMS + ( ACS / BR ) ),( ACS / FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RMSe + ( ( ( ( RMSe / RRSe ) / DS ) - MUM ) + ( ( ( RCSe + ( RMSe / RMSe ) ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( CRS * ARS ) ) ) - Max( Min( FirstVNF_Mem_Server ,Min( PN ,MDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( MUM - RRSe ) - RCSe ) + RCSe ) ) + Max( Max( ( ( RCSe - MUM ) * ( ( MUR * Min( RMSe ,MUM ) ) + Min( MLU ,RRSe ) ) ),( RCSe + ( RRSe - ( RMSe - RCSe ) ) ) ),( MUR - CS ) ) ) * MUC )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ARS ) ,( MDR - Min( MDR ,AMS ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( DS / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - RCSe ) ) + ( Max( RCSe,( MUM + MUM ) ) - RRSe ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( Max( ( PN / FirstVNF_RAM_Server ),( CRS - DDR ) ) - MDR ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - MUC ) ) ) + ( DS * MLU ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) - AMS ) + ( ( ( PN * ( ( AMS / DDR ) - FirstVNF_RAM ) ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUR * ( MUR - MUR ) ),( MUC / MLU ) ) + Max( Max( RMSe,MUM ),RMSe ) )", "obj1": 0.6916488222698073, "obj2": 0.1646724073543021}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS - ( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ) ) ) - ( Min( Max( MDR,( ARS - Const ) ) ,ARS ) / ( MRS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.18430055749208246}, {"determining": "( ( ( CRS / ACS ) - DDR ) - ( ( ( AMS / FirstVNF_RAM ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) - ( ( ( ( Max( FirstVNF_CPU,PN ) / FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * PN ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * Max( ( ( CS - DS ) / CS ),Max( ( RRSe + RMSe ),( CS - MUC ) ) ) ) - DS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) - CS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( ( RMSe / MUR ) + DS ) + Min( MUM ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.034481114243576895}, {"determining": "( FirstVNF_RAM - ( Max( CRS,BR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( RRSe / RCSe ),( RCSe * ( ( RCSe + MUR ) / Min( RMSe ,Min( ( CS + RRSe ) ,DS ) ) ) ) ) ,( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) )", "obj1": 0.9486081370449678, "obj2": 0.022683763772516966}, {"determining": "( ( ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( ( ARS + ( CRS * FirstVNF_CPU_Server ) ) ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,ACS ) * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( ( ( ( DS - CS ) / ( RCSe / Max( MUC,MUR ) ) ) - MUM ) - RCSe ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05370340325151346}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( CS - ( DS / RCSe ) ) * ( Min( MUR ,( ( CS / RRSe ) - ( RCSe - CS ) ) ) / ( RRSe * CS ) ) ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( DDR * FirstVNF_Mem_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( CS * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03937117530999083}, {"determining": "( PN - ( FirstVNF_CPU + ( ( RRS - RRS ) + ( ( Min( Max( ( RRS * ACS ),( CRS + Const ) ) ,( MDR - FirstVNF_CPU_Server ) ) * PN ) / Max( ( ( AMS + ( CRS / ACS ) ) * PN ),AMS ) ) ) ) )", "choosing": "Min( ( CS - MUM ) ,( Max( ( Max( MUR,MUM ) + Min( ( MUR / MUM ) ,Max( DS,RCSe ) ) ),RCSe ) / RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03055798806702105}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( MUC + MUR ) / ( MUC - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( ( AMS - DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( ( MUC * MLU ) / Min( RCSe ,MUR ) ) / ( MUC - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.6916488222698073, "obj2": 0.1646724073543021}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),MDR ) ) ,Min( Min( MRS ,( ARS * CRS ) ) ,MRS ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( RMSe - Min( RRSe ,MUC ) ) * ( MLU / MUM ) ) / MUC ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.1233168272603603}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( ( ( CRS - ( ( FirstVNF_CPU * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU / ( Max( ( RRS + PN ),( ( ACS * FirstVNF_Mem_Server ) * BR ) ) + ( ( CRS * PN ) / ( AMS - MRS ) ) ) ) ) - ( AMS * Min( FirstVNF_RAM ,Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM - RRSe ) + RMSe ) ,( MUC * Min( ( ( MLU - ( RCSe - MUC ) ) + MUC ) ,( RCSe - RRSe ) ) ) ) * Max( Max( ( Min( RRSe ,( ( MUR - RMSe ) / DS ) ) / RRSe ),( RCSe * ( CS * Min( ( MUR - RMSe ) ,MUC ) ) ) ),( MLU * ( ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) ) ) ) * ( Min( DS ,RCSe ) - MUM ) )", "obj1": 0.9678800856531049, "obj2": 0.0154417967447389}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( Min( RRS ,Max( FirstVNF_Mem_Server,( FirstVNF_RAM_Server + BR ) ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( CS - CS ) * ( ( ( DS * CS ) + CS ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.7130620985010707, "obj2": 0.1450072915564299}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( RRS,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( ( RRS - FirstVNF_CPU ) ,MDR ) ) ) ) ) )", "choosing": "( RMSe + ( RMSe / Max( MUC,( ( ( RMSe * RRSe ) / RMSe ) * ( ( RCSe * MUC ) / CS ) ) ) ) )", "obj1": 0.867237687366167, "obj2": 0.06528893904833137}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( RRSe * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUM / MUC ) * CS ) / ( ( ( MLU - RCSe ) * ( RRSe / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03765677617143672}, {"determining": "( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) / Max( ( RRS / ( ( RRS - ARS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( ACS ,Max( ( Const - MDR ),( AMS * Max( FirstVNF_CPU,( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) - ( ( FirstVNF_Mem - ( ACS * Min( RRS ,MDR ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.09889585072700044}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - Min( Min( DDR ,ACS ) ,FirstVNF_Mem_Server ) ) ) - ( ( ( PN * PN ) / Min( MRS ,CRS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( Max( MUM,CS ) - Max( MUC,( RCSe * ( RRSe / DS ) ) ) ) + MUM ) - CS ) ) + Max( Max( MUM,RMSe ),( RRSe * CS ) ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( Min( ( CRS * ARS ) ,( ( MDR / MRS ) / ACS ) ) - ( Min( CRS ,Const ) + ( FirstVNF_CPU + ( ( ( ( Const + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( CS / MUM ) - RCSe ) - ( MLU + Min( CS ,RRSe ) ) ) + Min( CS ,( ( RRSe / ( MLU * RRSe ) ) / RCSe ) ) ) - MUM ) ) * MUC )", "obj1": 0.7922912205567452, "obj2": 0.10296995276521294}, {"determining": "( ( AMS - DDR ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * Max( ( AMS + ( FirstVNF_Mem_Server - Const ) ),PN ) ) / ( RRS - FirstVNF_CPU ) ) ) + ( BR / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( ( Min( Max( RRSe,( ( MUM + ( RMSe - MUC ) ) * MUM ) ) ,MUM ) + MLU ),RCSe ) ,( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RRSe ) ) ) ) + ( Max( ( MUC * RMSe ),Max( ( ( MUM + RCSe ) + RRSe ),CS ) ) * ( DS * ( ( MLU * ( DS - RCSe ) ) - MUC ) ) ) ) - CS ) )", "obj1": 0.8051391862955032, "obj2": 0.0961490366534311}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,PN ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( ( RRS * ACS ) / ( Min( FirstVNF_Mem_Server ,PN ) + RRS ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUC / MUM ) * CS ) / ( ( ( MLU - MUR ) * ( ( ( RRSe + DS ) / ( RRSe - Min( RRSe ,DS ) ) ) / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10866636235444524}, {"determining": "( ( BR * CRS ) - ( ( PN * Max( Max( MRS,( ( Min( FirstVNF_Mem_Server ,PN ) * ( FirstVNF_Mem / PN ) ) / FirstVNF_RAM ) ),( DDR + FirstVNF_Mem_Server ) ) ) + ( FirstVNF_CPU + ( ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RMSe * ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) - MUM ) ) * ( RMSe * ( Max( MLU,( MUM - ( Max( ( MLU / RMSe ),( RRSe * CS ) ) * CS ) ) ) / Min( RCSe ,MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( ( RRS - FirstVNF_CPU ) - AMS ) ) ,PN ) ) / ( ( ARS * RRS ) * ( PN / Max( ( ( ACS * ( FirstVNF_CPU_Server - AMS ) ) / ( FirstVNF_RAM / ( BR - FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,Min( Min( ( Max( RCSe,CS ) * Min( MUR ,MUC ) ) ,Min( Min( DS ,( MUM - RMSe ) ) ,RMSe ) ) ,RMSe ) ) + ( Max( DS,MLU ) / MUR ) )", "obj1": 0.8458244111349036, "obj2": 0.07634108306466689}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( CRS + ARS ),( FirstVNF_Mem_Server * PN ) ) / Max( ( RRS / ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( Const ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - Min( ( MDR * ( ( CRS - ( MDR - MDR ) ) + FirstVNF_Mem ) ) ,( ARS - RRS ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),MUR ) ) + RMSe ) - CS ) + Min( ( ( ( DS - MUR ) / RRSe ) + DS ) ,RCSe ) )", "obj1": 0.7237687366167024, "obj2": 0.13882850723145823}, {"determining": "( ( ( PN * PN ) / ( MRS / ( FirstVNF_RAM_Server * Max( Const,FirstVNF_CPU ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * Max( Min( DDR ,MDR ),FirstVNF_RAM ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( MUR ,( ( ( MUR / RCSe ) - ( DS - ( MUC + CS ) ) ) * MUR ) ),( Max( RRSe,MUM ) - CS ) ) + ( Max( ( ( ( ( RCSe + DS ) / ( ( MLU / DS ) - Min( RRSe ,CS ) ) ) * MUM ) - RCSe ),Min( RRSe ,CS ) ) / Max( ( RCSe - MUC ),MLU ) ) )", "obj1": 0.9271948608137045, "obj2": 0.036922113909473885}, {"determining": "( ( AMS - DDR ) - ( ( ( Min( CRS ,ACS ) / ARS ) + ( ( ( Max( Const,( FirstVNF_CPU_Server / ACS ) ) * PN ) * FirstVNF_RAM ) / ( MDR - Min( AMS ,DDR ) ) ) ) + ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + Max( ( RRS * PN ),( CRS + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( ( MLU + RMSe ) - CS ) ) + Max( MUM,( ( ( Max( ( MUM / CS ),CS ) / ( MLU - ( Max( MUM,DS ) * CS ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "( ( Const + MDR ) - ( ( CRS + FirstVNF_RAM_Server ) + ( ( MDR - Max( Const,ACS ) ) + ( ( ( FirstVNF_CPU - ( CRS + ACS ) ) * CRS ) / ( FirstVNF_CPU / RRS ) ) ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( ( MUC - MLU ) + Min( RCSe ,Max( Max( Max( MUM,MUR ),MUC ),( CS * Max( RCSe,RMSe ) ) ) ) ) - CS ) ) + Max( Max( MUM,MUM ),RMSe ) )", "obj1": 0.7901498929336188, "obj2": 0.10424020351736495}, {"determining": "( ( ( ( CRS - Const ) + FirstVNF_Mem ) - ( Max( MDR,MDR ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) - Min( Min( PN ,FirstVNF_Mem_Server ) ,Const ) )", "choosing": "( ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) * ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( Min( MLU ,Max( Min( CS ,CS ),( DS * RRSe ) ) ) / RRSe ) ) - MLU ) ) + ( ( MUM + RCSe ) + ( ( MUM * MUM ) * RMSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10932327704583977}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / ( ACS - CRS ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) ),( ( Max( Max( MUM,RMSe ),RMSe ) + Min( RMSe ,DS ) ) / CS ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - PN ) ) ) ) + ( ( RRS * PN ) / Min( Min( FirstVNF_RAM_Server ,( ( AMS - FirstVNF_CPU_Server ) * MDR ) ) ,( Const / ( DDR / ( ARS * MRS ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUC - Max( Max( MLU,( RCSe * MUC ) ),( Max( MUR,MUR ) * ( ( Max( CS,MUM ) + ( MUR + MLU ) ) + ( ( RMSe - MUC ) - RMSe ) ) ) ) ) ) + Max( Min( MUC ,RCSe ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( ( ( ( ( Min( AMS ,( BR / Const ) ) * PN ) * FirstVNF_RAM ) * PN ) / Min( MRS ,Min( ARS ,MRS ) ) ) - DDR ) - Min( ( ( FirstVNF_CPU - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( RRSe / CS ) * CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( MUM - ( Max( Min( MUC ,MUR ),Max( Max( RMSe,MLU ),RRSe ) ) - RMSe ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06776246004373573}, {"determining": "( ( PN * ( RRS - AMS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( Min( Min( ( MUR - RRSe ) ,MUM ) ,( ( MUM * ( ( RCSe + CS ) - Min( MUM ,DS ) ) ) * ( Min( RCSe ,( DS / MUC ) ) / ( ( RCSe - MUC ) / MLU ) ) ) ) * DS ) ) )", "obj1": 0.9914346895074947, "obj2": 0.0037448270766406817}, {"determining": "( ( BR / ARS ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) * BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( RRSe / ( Max( MUM,RRSe ) - Max( DS,( RCSe + MLU ) ) ) ) - RMSe ) + MUM ),( ( MLU + RMSe ) - CS ) ) + ( ( MUR + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.987152034261242, "obj2": 0.006122207485254351}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - PN ) ) ) ) + ( FirstVNF_RAM_Server * PN ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( MLU,MUC ) ) * ( CS * Max( ( ( CS - DS ) / CS ),Max( ( RMSe + RRSe ),( CS - MUC ) ) ) ) )", "obj1": 0.9057815845824411, "obj2": 0.046200626758347775}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,RCSe ) + ( RCSe * Min( MUR ,Max( RMSe,MUC ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09698071317545862}, {"determining": "( PN - ( RRS + ( ( MDR - FirstVNF_CPU_Server ) + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( RCSe + CS ) ,RCSe ) + ( RMSe / RCSe ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe + MLU ) * ( ( RCSe + CS ) - Min( MUM ,DS ) ) ) * ( Min( RCSe ,( DS / MUC ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.841541755888651, "obj2": 0.07688270782256065}, {"determining": "( ( ( AMS - DDR ) - ( MDR * CRS ) ) - Min( ( ( MDR - ( AMS * ( ( RRS * Max( PN,CRS ) ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( Max( MLU,RCSe ) - RRSe ) + Max( ( MUR - CS ),RMSe ) ) * MUR )", "obj1": 0.8137044967880086, "obj2": 0.09132377344714745}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server - ACS ) ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - RRS ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( MUM - RCSe ) - ( Min( RRSe ,RCSe ) / MUC ) ) + RCSe ) ) + Max( RMSe,( ( MUR + Min( ( RMSe / ( RCSe * DS ) ) ,DS ) ) + DS ) ) ) * MUC )", "obj1": 0.8265524625267666, "obj2": 0.08452872380389284}, {"determining": "( ( ( AMS - ( ( MDR - FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) + DDR ) - ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( ARS * ARS ) / ( Min( Min( RRS ,PN ) ,FirstVNF_Mem_Server ) - PN ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe / ( MLU + RRSe ) ) + RMSe ) / DS ) + ( ( MLU - ( ( CS * RCSe ) / DS ) ) + ( RCSe * MUM ) ) )", "obj1": 0.9850107066381156, "obj2": 0.006553447384121194}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( ( MUM / CS ) * Min( MUR ,MUC ) ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.9100642398286938, "obj2": 0.04319458334755771}, {"determining": "( ( ( AMS * PN ) + Min( MRS ,ACS ) ) - ( ( ( ( CRS / Max( FirstVNF_Mem,PN ) ) / ( RRS - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( MLU,( ( ( DS + ( MLU - RMSe ) ) - ( Max( ( DS + RMSe ),( MUR / MUR ) ) / MLU ) ) - Min( Min( CS ,RRSe ) ,MUC ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1488856037723845}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06963264761802167}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( ( RRS * PN ),( CRS + CRS ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * ACS ) / Max( BR,AMS ) ) ) ) )", "choosing": "Min( ( CS - MLU ) ,Max( ( RRSe - Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ),( MUC * DS ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( ( PN * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( CS + ( MUR * MLU ) ) + RMSe ) - Max( MUC,DS ) ) - MUM ) ) * MUC )", "obj1": 0.9528907922912205, "obj2": 0.021684113093131275}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_Mem_Server ) ) ) ),CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( CS - ( DS / RCSe ) ) * ( Min( MUR ,( ( CS / RRSe ) - ( RCSe - CS ) ) ) / ( RRSe * CS ) ) )", "obj1": 0.715203426124197, "obj2": 0.14297391302556264}, {"determining": "( ( ( ( FirstVNF_CPU - ( FirstVNF_Mem + Min( PN ,DDR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) )", "choosing": "( ( RMSe / RMSe ) + Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010953646649026403}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( Min( ( ( ( ( FirstVNF_RAM + Const ) - DDR ) - AMS ) / Const ) ,DDR ),( CRS - Min( Min( Max( RRS,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( RMSe + ( RMSe / Max( MUC,( ( ( RMSe * RRSe ) / RMSe ) * ( ( MLU - ( ( RRSe / RRSe ) / DS ) ) / CS ) ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.129691049402703}, {"determining": "( ( ( ( DDR * PN ) / Min( MRS ,ACS ) ) - ( DDR / PN ) ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM - ( ( CS * ( MUM / MUC ) ) + Min( Min( RMSe ,RCSe ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( ( ( ( Min( Const ,BR ) + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( Max( ACS,AMS ) - FirstVNF_CPU ) ) + Max( MDR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RRSe ,MUC ) - MLU ) ,( MLU - Max( Max( MUM,MUR ),MUC ) ) ) ,( CS * ( Min( RRSe ,( MUR - MLU ) ) + Max( MUC,( ( ( CS + ( MUR * MLU ) ) + RMSe ) - Max( MUC,DS ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( Min( Min( Const ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( ( ( FirstVNF_RAM / ( FirstVNF_CPU / ( DDR - Max( ( FirstVNF_Mem * AMS ),FirstVNF_CPU ) ) ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( ( Min( MUC ,CS ) * ( DS * DS ) ) ,MLU ) - ( ( ( MLU - MLU ) - ( Min( MLU ,RCSe ) * MUC ) ) + Min( MUC ,DS ) ) ) + ( ( ( ( DS + RCSe ) + ( RCSe / Max( MUM,RRSe ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( ( AMS - DDR ) - ( ( ( Const / AMS ) + ( RRS / MDR ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( ACS * RRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( CS * ( MUM / MUC ) ) - ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( ( CS - DS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUC + RMSe ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RRSe ) ) ) ) + ( MUC - MLU ) ) - CS ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( PN * PN ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM * ( ( RCSe + CS ) - Min( MUM ,DS ) ) ) * ( Min( RCSe ,( DS / MUC ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06339134307910388}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RMSe ),( ( Max( Max( MUM,RMSe ),RMSe ) + Min( RMSe ,DS ) ) / CS ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( MLU - ( Max( CS,( MUR * CS ) ) * CS ) ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07361890616614923}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.7708779443254818, "obj2": 0.1135343073575226}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( FirstVNF_CPU * ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( RMSe,( Max( MUC,MUM ) + ( ( MLU / MUM ) - MUM ) ) ) + RMSe ) - CS ) ) + ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10602155374210107}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server - PN ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RMSe * ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) - MUM ) ) * Max( RMSe,CS ) )", "obj1": 0.9807280513918629, "obj2": 0.008425860922441533}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( ( ( Min( ( FirstVNF_RAM_Server / Const ) ,FirstVNF_Mem ) * MRS ) / BR ) * MRS ) - ( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( Min( MUM ,RCSe ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( CS - MLU ) ) ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14751038104518993}, {"determining": "( ( AMS - DDR ) - ( ( AMS + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( PN - CRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( ( MUR * MLU ) * MUM ) ) ,MUM ) + MLU ) ,RCSe ) ,( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RRSe ) ) ) ) + ( MUC - MLU ) ) - CS ) )", "obj1": 0.8308351177730193, "obj2": 0.08357373720013955}, {"determining": "( ( PN - DDR ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( Max( MUM,( MUM + RMSe ) ) + Min( ( MUM + RCSe ) ,( ( MLU / RMSe ) - CS ) ) )", "obj1": 0.880085653104925, "obj2": 0.05832721216984692}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( Max( PN,PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( RRS,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Max( FirstVNF_Mem,AMS ) ) ) ) ) )", "choosing": "( RMSe + ( RMSe / Max( MUC,( MUC / MLU ) ) ) )", "obj1": 0.7173447537473233, "obj2": 0.1419242806518657}, {"determining": "( ( BR - MDR ) - Min( ( Min( MRS ,ACS ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / MLU ),RCSe ) - ( MUC * MUR ) ) + RMSe )", "obj1": 0.7580299785867237, "obj2": 0.12084723780119266}, {"determining": "( ( ( AMS - DDR ) - ( ( Max( PN,MRS ) - Const ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / CRS ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUM / MUC ) * ( Min( CS ,( ( RRSe * MLU ) * RRSe ) ) / ( CS + MUM ) ) ) - ( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ) * ( MUC - RMSe ) ) ) * MUM ) * MUC )", "obj1": 0.8222698072805139, "obj2": 0.08714810341963468}, {"determining": "( ( ( AMS - DDR ) - ( MDR * CRS ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * ( CRS - MDR ) ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( Max( RMSe,RRSe ) - RCSe ) + RCSe ) ) + Max( ( MUR - CS ),RMSe ) ) * MUC )", "obj1": 0.728051391862955, "obj2": 0.13661760687721167}, {"determining": "( ( AMS - DDR ) - ( ( Max( Const,ARS ) / PN ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( AMS + ( BR / ACS ) ),PN ) * FirstVNF_RAM ) / ( FirstVNF_CPU - RRS ) ) ) ) )", "choosing": "( Max( ( MUM + RMSe ),( ( Min( RMSe ,DS ) + Max( Max( MUM,RMSe ),RMSe ) ) / MUR ) ) + ( ( Max( MUC,RMSe ) + RRSe ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7601713062098501, "obj2": 0.118976346100128}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( ( RMSe * ( Max( MLU,( MUM - ( Max( CS,( RRSe * CS ) ) * CS ) ) ) - Min( RCSe ,MUC ) ) ) * Max( MUM,CS ) )", "obj1": 0.961456102783726, "obj2": 0.01691534990556115}, {"determining": "( ( AMS - DDR ) - Min( ( Min( MRS ,ACS ) - ( ( ( PN * PN ) / Min( MRS ,DDR ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * CS ) - Max( Min( RRSe ,CS ),( ( ( ( ( MUC * MLU ) / Min( RCSe ,MUR ) ) / ( ( MLU - RMSe ) - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11856735755534367}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) / ( RRS * ( CRS - PN ) ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUC - CS ) * MUC )", "obj1": 0.8115631691648822, "obj2": 0.09236025289204462}, {"determining": "( Min( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) ,Min( MRS ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU_Server - MDR ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( RRSe / ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) ) ,( ( MLU * Min( RCSe ,( CS + MLU ) ) ) + Min( Max( Max( ( ( MUR - MUC ) / RCSe ),RCSe ),RRSe ) ,( Max( MUM,RRSe ) * DS ) ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13738186726219762}, {"determining": "( ( ( BR / FirstVNF_RAM ) - CRS ) - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,BR ) ) - Min( FirstVNF_RAM ,BR ) ) ) ) )", "choosing": "( Min( Min( ( ( MUC + MUM ) + DS ) ,( ( ( RRSe + MLU ) + ( MUR - ( ( CS + MUM ) + RRSe ) ) ) / MLU ) ) ,( Max( ( ( RRSe * RMSe ) + Max( Min( Max( MUM,RMSe ) ,( DS + RCSe ) ),( ( RRSe * MUM ) + CS ) ) ),Max( MLU,RCSe ) ) - DS ) ) + ( RRSe / ( Min( Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * MLU ) ,CS ) ) ,( ( MLU - RMSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07903302093109636}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + ARS ) ) / Max( ( RRS - ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( DDR / ACS ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),DS ) ) + RMSe ) - ( ( MLU - RRSe ) * Min( RCSe ,MLU ) ) ) + Min( ( Max( ( MUC * RMSe ),( ( RRSe + ( MUM + RCSe ) ) / CS ) ) * ( DS * ( DS / RMSe ) ) ) ,RCSe ) )", "obj1": 0.7366167023554604, "obj2": 0.13297463456560124}, {"determining": "( ( Min( PN ,( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + ARS ) ) / Max( ( RRS / ( Min( Const ,AMS ) / Min( BR ,FirstVNF_CPU_Server ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( ARS - FirstVNF_RAM ) + ( ( ( PN * ( PN + ( BR / ACS ) ) ) / FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( ( CS * MUM ) - MLU ) - Min( RRSe ,MUC ) ),DS ) ) + MUM ) - CS ) + ( ( MUR * RMSe ) + Max( RRSe,CS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13483140996736265}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) ) )", "choosing": "( Max( MLU,( Min( MUM ,( RMSe + ( ( MUR * MUC ) / CS ) ) ) - RMSe ) ) + ( RRSe / ( ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06245513630994369}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( RRSe / ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) ) ,( ( MLU * Min( RCSe ,( CS + MLU ) ) ) + Min( Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ,( Max( MUM,RRSe ) * Max( CS,RCSe ) ) ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.13309461048855714}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + ( BR / FirstVNF_CPU ) ) - ( AMS - DDR ) ) + ( ( RRS - FirstVNF_CPU ) / ( FirstVNF_Mem * PN ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( RCSe,( Max( ( MUR + ( RMSe * DS ) ),( MUM * RRSe ) ) / DS ) ),RRSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10070440115259738}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( RRSe / ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) ) ,( ( MLU * Min( RCSe ,( CS + MLU ) ) ) + Min( Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ,( Max( MUM,RRSe ) * Max( CS,RCSe ) ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13508911914850183}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( BR + ( FirstVNF_Mem_Server - ( ( MRS + MDR ) - Const ) ) ) ) ) + ( ( CRS - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUM - MUR ) ) + Max( Max( MUM,( RRSe + ( RMSe - Min( Max( Min( MUM ,MLU ),MLU ) ,RMSe ) ) ) ),RMSe ) )", "obj1": 0.7858672376873662, "obj2": 0.10602155374210107}], "23": [{"determining": "( ( ( Max( FirstVNF_CPU,DDR ) - BR ) / ( MRS / ( PN * Max( MRS,FirstVNF_CPU ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( Max( AMS,FirstVNF_RAM ) * ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( Max( RRSe,MUM ) - ( Max( ( MUR + Max( CS,Min( RRSe ,RCSe ) ) ),RCSe ) / ( CS - RRSe ) ) ) ) + ( Max( Min( RRSe ,CS ),( ( ( ( RCSe + DS ) / ( MUC - Min( RRSe ,CS ) ) ) * RRSe ) - RCSe ) ) / Max( ( RCSe - MUC ),MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( Min( FirstVNF_Mem ,( CRS - FirstVNF_CPU ) ) - Max( FirstVNF_RAM,( ( ( ( RRS + AMS ) - ( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ACS ) - MDR ) ) * ACS ) + BR ) ) )", "choosing": "( Max( ( RCSe / MUC ),( ( ( CS / Max( MUC,MUC ) ) / Max( ( Min( RRSe ,( MUC - MLU ) ) * ( Min( MUR ,MUM ) / MUC ) ),Min( RRSe ,( ( RRSe / RRSe ) / ( MUR - MUM ) ) ) ) ) / MLU ) ) + ( Min( ( DS - RRSe ) ,Max( RCSe,( CS * CS ) ) ) + ( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MDR ) - ( ( CRS + FirstVNF_RAM_Server ) + ( ( MDR - Max( Const,ACS ) ) + ( Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / ( FirstVNF_CPU / RRS ) ) ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( ( MUC - MLU ) + Min( RCSe ,Max( Max( Max( MUM,MUR ),MUC ),( CS * Max( RCSe,RMSe ) ) ) ) ) - CS ) ) + Max( Max( MUM,MUM ),( ( DS * ( CS / MLU ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( MRS ,( CRS * ARS ) ) ) - Max( Min( FirstVNF_Mem_Server ,Min( PN ,MDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21492697156784324}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( CRS * BR ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( Min( ACS ,FirstVNF_Mem ) * ( MRS - MRS ) ) + Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) + Max( ( MUM + DS ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUM ) / ( MUC / RMSe ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16262622589152173}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( Max( ( PN / FirstVNF_RAM_Server ),( CRS - DDR ) ) - MDR ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - MUC ) ) ) + ( DS * MLU ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ARS ) ,( MDR - Min( MDR ,AMS ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( ( ( Max( DS,MUC ) * ( DS / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) ) ) - RCSe ) ) + ( Max( RCSe,( MUM + MUM ) ) - RRSe ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS - ( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ) ) ) - ( Min( Max( MDR,( ARS - Const ) ) ,ARS ) / ( MRS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.18430055749208246}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - PN ) ) ) ) + ( ( RRS * PN ) / Min( Min( FirstVNF_RAM_Server ,( ( AMS - FirstVNF_CPU_Server ) * MDR ) ) ,( Const / ( DDR / ( ARS * MRS ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUC - Max( Max( MLU,( RCSe * MUC ) ),( Max( MUR,MUR ) * ( ( Max( CS,MUM ) + ( MUR + MLU ) ) + ( ( RMSe - MUC ) - RMSe ) ) ) ) ) ) + Max( Min( MUC ,RCSe ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( ( AMS * PN ) + Min( MRS ,ACS ) ) - ( ( ( ( CRS / Max( FirstVNF_Mem,PN ) ) / ( RRS - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( MLU,( ( ( DS + ( MLU - RMSe ) ) - ( Max( ( DS + RMSe ),( MUR / MUR ) ) / MLU ) ) - Min( Min( CS ,RRSe ) ,MUC ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1488856037723845}, {"determining": "( ( ( PN * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( CRS - Const ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( CS + ( MUR * MLU ) ) + RMSe ) - Max( MUC,DS ) ) - MUM ) ) * MUC )", "obj1": 0.9528907922912205, "obj2": 0.021684113093131275}, {"determining": "( FirstVNF_RAM - ( Max( CRS,BR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( RRSe / RCSe ),( RCSe * ( ( RCSe + MUR ) / Min( RMSe ,Min( ( CS + RRSe ) ,DS ) ) ) ) ) ,( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) )", "obj1": 0.9486081370449678, "obj2": 0.022683763772516966}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( DDR * FirstVNF_Mem_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( CS * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03937117530999083}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( MUC + MUR ) / ( MUC - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - PN ) ) ) ) + ( FirstVNF_RAM_Server * PN ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( MLU,MUC ) ) * ( CS * Max( ( ( CS - DS ) / CS ),Max( ( RMSe + RRSe ),( CS - MUC ) ) ) ) )", "obj1": 0.9057815845824411, "obj2": 0.046200626758347775}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.7708779443254818, "obj2": 0.1135343073575226}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( ( ( Min( ( FirstVNF_RAM_Server / Const ) ,FirstVNF_Mem ) * MRS ) / BR ) * MRS ) - ( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( Min( MUM ,RCSe ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( CS - MLU ) ) ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14751038104518993}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( ( ( ( DDR * PN ) / Min( MRS ,ACS ) ) - ( DDR / PN ) ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM - ( ( CS * ( MUM / MUC ) ) + Min( Min( RMSe ,RCSe ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server - ACS ) ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - RRS ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( MUM - RCSe ) - ( Min( RRSe ,RCSe ) / MUC ) ) + RCSe ) ) + Max( RMSe,( ( MUR + Min( ( RMSe / ( RCSe * DS ) ) ,DS ) ) + DS ) ) ) * MUC )", "obj1": 0.8265524625267666, "obj2": 0.08452872380389284}, {"determining": "( ( ( PN * PN ) / Min( Min( DDR ,( ( DDR - ( ( RRS * PN ) / Min( DDR ,Const ) ) ) / Const ) ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,( Min( Const ,CRS ) / Max( ARS,( MDR / ARS ) ) ) ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( CS - ( DS / RCSe ) ) - ( Min( MUR ,Min( Max( DS,Max( DS,MUC ) ) ,( MUC * ( RRSe - MUM ) ) ) ) / Min( RRSe ,CS ) ) ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( ( MUM / CS ) * Min( MUR ,MUC ) ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.9100642398286938, "obj2": 0.04319458334755771}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( ( AMS - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RMSe ) * ( Min( RCSe ,( DS / MUC ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06737141636040715}, {"determining": "( ( BR - MDR ) - Min( ( Min( MRS ,ACS ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / MLU ),RCSe ) - ( MUC * MUR ) ) + RMSe )", "obj1": 0.7580299785867237, "obj2": 0.12084723780119266}, {"determining": "( ( ( AMS - DDR ) - ( ( Max( PN,MRS ) - Const ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / CRS ) ) ) - ( ( ( PN * PN ) / ( AMS + ( BR / ACS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUM / MUC ) * ( Min( CS ,( ( RRSe * MLU ) * RRSe ) ) / ( CS + MUM ) ) ) - ( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ) * ( MUC - RMSe ) ) ) * MUM ) * ( ( ( RRSe / ( Max( MUM,RRSe ) - Max( DS,( RCSe + MLU ) ) ) ) - RMSe ) + MUM ) )", "obj1": 0.9785867237687366, "obj2": 0.00946811445939851}, {"determining": "( ( ( CRS / ACS ) - DDR ) - ( ( ( AMS / FirstVNF_RAM ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) - ( ( ( ( Max( FirstVNF_CPU,PN ) / FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * PN ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * Max( ( ( CS - DS ) / CS ),Max( ( RRSe + RMSe ),( CS - MUC ) ) ) ) - DS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) - CS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( ( RMSe / MUR ) + DS ) + Min( MUM ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.034481114243576895}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}, {"determining": "( ( AMS - DDR ) - ( RRS * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( ( ( CS * ( RRSe / MUC ) ) / ( ( Min( RMSe ,RCSe ) / ( CS * RMSe ) ) * CS ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.867237687366167, "obj2": 0.06375195210034096}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + BR ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM * ( ( RCSe + CS ) - Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * MLU ) ,CS ) ) ) ) * ( Min( RCSe ,( DS / MUC ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05313496868946401}, {"determining": "( ( ( PN + PN ) / Max( ACS,ARS ) ) - ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( ( ( Min( Min( RRS ,PN ) ,FirstVNF_Mem_Server ) * PN ) / ( ARS * ARS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( MUM + Min( RCSe ,MLU ) ) - RCSe ) - RCSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) * MUC )", "obj1": 0.9336188436830836, "obj2": 0.03279376239300475}, {"determining": "( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) / Max( ( RRS / ( ( RRS - ARS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( ACS ,Max( ( Const - MDR ),( AMS * Max( FirstVNF_CPU,( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) - ( ( FirstVNF_Mem - ( ACS * Min( RRS ,MDR ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.09889585072700044}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - Min( Min( DDR ,ACS ) ,FirstVNF_Mem_Server ) ) ) - ( ( ( PN * PN ) / Min( MRS ,CRS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( Max( MUM,CS ) - Max( MUC,( RCSe * ( RRSe / DS ) ) ) ) + MUM ) - CS ) ) + Max( Max( MUM,RMSe ),( RRSe * CS ) ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( ( ( ( PN * PN ) / Min( ( RRS - FirstVNF_CPU ) ,ACS ) ) - Max( DDR,CRS ) ) - MDR ) ) ) )", "choosing": "( ( Min( MUR ,( ( ( CS * RMSe ) - ( DS - ( MUC + CS ) ) ) - MUM ) ) * ( RRSe / CS ) ) + ( RRSe / RCSe ) )", "obj1": 0.8051391862955032, "obj2": 0.09575044733093178}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,PN ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( ( RRS * ACS ) / ( Min( FirstVNF_Mem_Server ,PN ) + RRS ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUC / MUM ) * CS ) / ( ( ( MLU - MUR ) * ( ( ( RRSe + DS ) / ( RRSe - Min( RRSe ,DS ) ) ) / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10866636235444524}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( ( RRS - FirstVNF_CPU ) - AMS ) ) ,PN ) ) / ( ( ARS * RRS ) * ( PN / Max( ( ( ACS * ( FirstVNF_CPU_Server - AMS ) ) / ( FirstVNF_RAM / ( BR - FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,Min( Min( ( Max( RCSe,CS ) * Min( MUR ,MUC ) ) ,Min( Min( DS ,( MUM - RMSe ) ) ,RMSe ) ) ,RMSe ) ) + ( Max( DS,MLU ) / MUR ) )", "obj1": 0.8458244111349036, "obj2": 0.07634108306466689}, {"determining": "( Min( ( CRS * ARS ) ,( ( MDR / MRS ) / ACS ) ) - ( Min( CRS ,Const ) + ( FirstVNF_CPU + ( ( ( ( Const + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( CS / MUM ) - RCSe ) - ( MLU + Min( CS ,RRSe ) ) ) + Min( CS ,( ( RRSe / ( MLU * RRSe ) ) / RCSe ) ) ) - MUM ) ) * MUC )", "obj1": 0.7922912205567452, "obj2": 0.10296995276521294}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,RCSe ) + ( RCSe * Min( MUR ,Max( RMSe,MUC ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09698071317545862}, {"determining": "( ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( CRS - FirstVNF_CPU_Server ) + ( ( ( MRS * ( FirstVNF_RAM_Server - Min( ARS ,BR ) ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( AMS - DDR ) )", "choosing": "( Max( Min( MUM ,DS ),( ( Max( ( CS + Min( RRSe ,MLU ) ),RMSe ) + RMSe ) - CS ) ) + ( ( MUM * ( ( RCSe / Max( MUC,DS ) ) / Min( Min( RCSe ,( ( MUM * RMSe ) + MLU ) ) ,( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) ) ) + ( ( DS / ( RMSe / RRSe ) ) / MLU ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10389759211014703}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( CS - ( DS / RCSe ) ) * ( Min( MUR ,( ( CS / RRSe ) - ( RCSe - CS ) ) ) / ( RRSe * CS ) ) ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( ( PN * ACS ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) - Max( ( ( ( PN * PN ) / Min( ( RRS - FirstVNF_CPU ) ,ACS ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( DS / ( ( ( ( RMSe / RRSe ) / DS ) - MLU ) + MUR ) ) + CS ) * ( Min( MUR ,( ( MUC / MLU ) - ( MUR - MLU ) ) ) / ( RRSe * CS ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( PN - ( RRS + ( ( MDR - FirstVNF_CPU_Server ) + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( RCSe + CS ) ,RCSe ) + ( RMSe / RCSe ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),MDR ) ) ,Min( Min( MRS ,( ARS * CRS ) ) ,MRS ) ) ) - ( BR / ACS ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( CS / Min( MUC ,RRSe ) ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.1248655117886628}, {"determining": "( ( ( CRS - ( ( FirstVNF_CPU * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU / ( Max( ( RRS + PN ),( ( ACS * FirstVNF_Mem_Server ) * BR ) ) + ( ( CRS * PN ) / ( AMS - MRS ) ) ) ) ) - ( AMS * Min( FirstVNF_RAM ,Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM - RRSe ) + RMSe ) ,( MUC * Min( ( ( MLU - ( RCSe - MUC ) ) + MUC ) ,( RCSe - RRSe ) ) ) ) * Max( Max( ( Min( RRSe ,( ( MUR - RMSe ) / DS ) ) / RRSe ),( RCSe * ( CS * Min( ( MUR - RMSe ) ,MUC ) ) ) ),( MLU * ( ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) ) ) ) * ( Min( DS ,RCSe ) - MUM ) )", "obj1": 0.9678800856531049, "obj2": 0.0154417967447389}, {"determining": "( ( ( AMS - DDR ) - ( MDR * CRS ) ) - Min( ( ( MDR - ( AMS * ( ( RRS * Max( MRS,CRS ) ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) * MUR )", "obj1": 0.860813704496788, "obj2": 0.06812359486736466}, {"determining": "( ( ( AMS - DDR ) - ( MDR * CRS ) ) - Min( ( ( MDR - ( AMS * ( ( RRS * Max( PN,CRS ) ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( Max( MLU,RCSe ) - RRSe ) + Max( ( MUR - CS ),RMSe ) ) * MUR )", "obj1": 0.8137044967880086, "obj2": 0.09132377344714745}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( CRS + ARS ),( FirstVNF_Mem_Server * PN ) ) / Max( ( RRS / ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( Const ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - Min( ( MDR * ( ( CRS - ( MDR - MDR ) ) + FirstVNF_Mem ) ) ,( ARS - RRS ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),MUR ) ) + RMSe ) - CS ) + Min( ( ( ( DS - MUR ) / RRSe ) + DS ) ,RCSe ) )", "obj1": 0.7237687366167024, "obj2": 0.13882850723145823}, {"determining": "( Min( Min( Const ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( ( ( FirstVNF_RAM / ( FirstVNF_CPU / ( DDR - Max( ( FirstVNF_Mem * AMS ),FirstVNF_CPU ) ) ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( ( Min( MUC ,CS ) * ( DS * DS ) ) ,MLU ) - ( ( ( MLU - MLU ) - ( Min( MLU ,RCSe ) * MUC ) ) + Min( MUC ,DS ) ) ) + ( ( ( ( DS + RCSe ) + ( RCSe / Max( MUM,RRSe ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( PN - ( FirstVNF_CPU + ( ( RRS - RRS ) + ( ( Min( Max( ( RRS * ACS ),( CRS + Const ) ) ,( MDR - FirstVNF_CPU_Server ) ) * PN ) / Max( ( ( AMS + ( CRS / ACS ) ) * PN ),AMS ) ) ) ) )", "choosing": "Min( ( CS - MUM ) ,( Max( ( Max( MUR,MUM ) + Min( ( MUR / MUM ) ,Max( DS,RCSe ) ) ),RCSe ) / RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03055798806702105}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) + Max( DDR,CRS ) ),( ( MRS * FirstVNF_RAM ) - Min( Min( Max( ( AMS * ( FirstVNF_RAM_Server / MRS ) ),FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( RMSe + ( ( ( Min( RCSe ,MUR ) / ( MUC * MLU ) ) / ( MUC - Min( MUR ,CS ) ) ) * ( Min( ( MUM * MUR ) ,RCSe ) * ( ( MUC - ( Min( MLU ,MUR ) * ( MUC + MLU ) ) ) + MUM ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14289497015214622}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( ( RRS + AMS ) - ( ( PN + ACS ) - MDR ) ) * ACS ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( RRSe / ( ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06141865686504652}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( ( ( ( Min( Const ,BR ) + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( Max( ACS,AMS ) - FirstVNF_CPU ) ) + Max( MDR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RRSe ,MUC ) - MLU ) ,( MLU - Max( Max( MUM,MUR ),MUC ) ) ) ,( CS * ( Min( RRSe ,( MUR - MLU ) ) + Max( MUC,( ( ( CS + ( MUR * MLU ) ) + RMSe ) - Max( MUC,DS ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( ( AMS - DDR ) - ( ( ( Const / AMS ) + ( RRS / MDR ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( ACS * RRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( CS * ( MUM / MUC ) ) - ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( ( CS - DS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUC + RMSe ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( AMS - ACS ) - Max( DDR,( ACS - FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( Max( CS,( RRSe - ( DS + RRSe ) ) ) - ( MUC - MUC ) ) ) + ( DS * MLU ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07361890616614923}, {"determining": "( Max( AMS,DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( PN ,( ARS - ( MDR - ACS ) ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( ( CS + Max( ( MUR / DS ),MLU ) ),CS ) + RMSe ) - CS ) ) + ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10602155374210107}, {"determining": "( ( ( ( CRS - Const ) + FirstVNF_Mem ) - ( Max( MDR,MDR ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) - Min( Min( PN ,FirstVNF_Mem_Server ) ,Const ) )", "choosing": "( ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) * ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( Min( MLU ,Max( Min( CS ,CS ),( DS * RRSe ) ) ) / RRSe ) ) - MLU ) ) + ( ( MUM + RCSe ) + ( ( MUM * MUM ) * RMSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10932327704583977}, {"determining": "( ( ( ( PN * PN ) / Min( ( Const * ACS ) ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) / Min( ( AMS + Min( ( RRS / DDR ) ,( DDR - FirstVNF_CPU_Server ) ) ) ,MRS ) ) ) ,( ( ( Min( FirstVNF_CPU ,Max( Min( DDR ,MDR ),( FirstVNF_RAM_Server + BR ) ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( CS - CS ) * ( Min( RCSe ,( MUC * RRSe ) ) / ( ( MLU * DS ) - ( MUM + DS ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.1408258701748762}, {"determining": "( ( AMS - DDR ) - ( ( Max( Const,ARS ) / PN ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( AMS + ( BR / ACS ) ),PN ) * FirstVNF_RAM ) / ( FirstVNF_CPU - RRS ) ) ) ) )", "choosing": "( Max( ( MUM + RMSe ),( ( Min( RMSe ,DS ) + Max( Max( MUM,RMSe ),RMSe ) ) / MUR ) ) + ( ( Max( MUC,RMSe ) + RRSe ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7601713062098501, "obj2": 0.118976346100128}, {"determining": "( PN - ( FirstVNF_CPU + ( Max( MDR,( ACS - AMS ) ) + ( ( Min( Max( ( RRS * PN ),( CRS + CRS ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * ACS ) / Max( BR,AMS ) ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( ( CS * MUM ) - MLU ) - Min( ( MLU * MUR ) ,Min( CS ,MUR ) ) ),DS ) ) + CS ) - CS ) + Min( MLU ,RCSe ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( AMS - DDR ) - ( ( AMS + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( PN - CRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( ( MUR * MLU ) * MUM ) ) ,MUM ) + MLU ) ,RCSe ) ,( ( Min( DS ,Max( RCSe,( CS * Max( RMSe,RRSe ) ) ) ) + ( MUC - MLU ) ) - CS ) )", "obj1": 0.8308351177730193, "obj2": 0.08357373720013955}, {"determining": "( ( ( PN * PN ) / ( MRS / ( FirstVNF_RAM_Server * Max( Const,FirstVNF_CPU ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * Max( Min( DDR ,MDR ),FirstVNF_RAM ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( MUR ,( ( ( MUR / RCSe ) - ( DS - ( MUC + CS ) ) ) * MUR ) ),( Max( RRSe,MUM ) - CS ) ) + ( Max( ( ( ( ( RCSe + DS ) / ( ( MLU / DS ) - Min( RRSe ,CS ) ) ) * MUM ) - RCSe ),Min( RRSe ,CS ) ) / Max( ( RCSe - MUC ),MLU ) ) )", "obj1": 0.9271948608137045, "obj2": 0.036922113909473885}, {"determining": "( ( Min( MRS ,ACS ) - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( RMSe * MUM ) - RCSe ) ) ) )", "obj1": 0.892933618843683, "obj2": 0.052815831778225575}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( ( CS * MUM ) - MLU ) - Min( RRSe ,MUC ) ),DS ) ) + CS ) - CS ) + Min( MLU ,RCSe ) )", "obj1": 0.880085653104925, "obj2": 0.05832721216984692}, {"determining": "( ( AMS - DDR ) - ( ( ( Min( CRS ,ACS ) / ARS ) + ( ( ( Max( Const,( FirstVNF_CPU_Server / ACS ) ) * PN ) * FirstVNF_RAM ) / ( MDR - Min( AMS ,DDR ) ) ) ) + ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + Max( ( RRS * PN ),( CRS + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( ( MLU + RMSe ) - CS ) ) + Max( MUM,( ( ( Max( ( MUM / CS ),CS ) / ( MLU - ( Max( MUM,DS ) * CS ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( ( RMSe * ( Max( MLU,( MUM - ( Max( CS,( RRSe * CS ) ) * CS ) ) ) - Min( RCSe ,MUC ) ) ) * Max( MUM,CS ) )", "obj1": 0.961456102783726, "obj2": 0.01691534990556115}, {"determining": "( ( CRS * ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( ( AMS + ( BR / ACS ) ) * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + Max( RRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUR + DS ) ,Max( Min( RRSe ,RCSe ),( Min( Min( ( MUR - RRSe ) ,MUM ) ,( RMSe / RRSe ) ) * DS ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( CRS + ARS ),( FirstVNF_Mem_Server * PN ) ) / Max( ( RRS / ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( Const ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - Min( ( MDR * ( ( CRS - ( MDR - MDR ) ) + FirstVNF_Mem ) ) ,( ARS - RRS ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),MUR ) ) + RMSe ) - CS ) + Min( ( ( ( DS - MUR ) / RRSe ) + DS ) ,RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.13637482425588668}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( ( RRS * PN ),( CRS + CRS ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * ACS ) / Max( BR,AMS ) ) ) ) )", "choosing": "Min( ( CS - MLU ) ,Max( ( RRSe - Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ),( MUC * DS ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + Max( ( RRS * PN ),( CRS + CRS ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( Max( MLU,RCSe ) - RRSe ) + Max( ( MUR - CS ),RMSe ) ) * MUR )", "obj1": 0.7623126338329764, "obj2": 0.11825815667156432}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( RRS * ( CRS - CRS ) ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( ( MUM + Min( RCSe ,MLU ) ) - RCSe ) - RCSe ) + ( MLU - ( ( RRSe / RRSe ) / DS ) ) ) ) + Max( RMSe,( MUR - CS ) ) ) * MUC )", "obj1": 0.8115631691648822, "obj2": 0.09213022238122473}, {"determining": "( ( ( BR / FirstVNF_RAM ) - CRS ) - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,BR ) ) - Min( FirstVNF_RAM ,BR ) ) ) ) )", "choosing": "( Min( Min( ( ( MUC + MUM ) + DS ) ,( ( ( RRSe + MLU ) + ( MUR - ( ( CS + MUM ) + RRSe ) ) ) / MLU ) ) ,( Max( ( ( RRSe * RMSe ) + Max( Min( Max( MUM,RMSe ) ,( DS + RCSe ) ),( ( RRSe * MUM ) + CS ) ) ),Max( MLU,RCSe ) ) - DS ) ) + ( RRSe / ( Min( Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * MLU ) ,CS ) ) ,( ( MLU - RMSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07903302093109636}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe + MLU ) * ( ( RCSe + CS ) - Min( MUM ,DS ) ) ) * ( Min( RCSe ,( DS / MUC ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.841541755888651, "obj2": 0.07688270782256065}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( FirstVNF_CPU * ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( RMSe,( Max( MUC,MUM ) + ( ( MLU / MUM ) - MUM ) ) ) + RMSe ) - CS ) ) + ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10602155374210107}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( Min( RRS ,Max( FirstVNF_Mem_Server,( FirstVNF_RAM_Server + BR ) ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( CS - CS ) * ( ( ( DS * CS ) + CS ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.7130620985010707, "obj2": 0.1450072915564299}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + ARS ) ) / Max( ( RRS - ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( DDR / ACS ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),DS ) ) + RMSe ) - ( ( MLU - RRSe ) * Min( RCSe ,MLU ) ) ) + Min( ( Max( ( MUC * RMSe ),( ( RRSe + ( MUM + RCSe ) ) / CS ) ) * ( DS * ( DS / RMSe ) ) ) ,RCSe ) )", "obj1": 0.7366167023554604, "obj2": 0.13297463456560124}, {"determining": "( ( Min( PN ,( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + ARS ) ) / Max( ( RRS / ( Min( Const ,AMS ) / Min( BR ,FirstVNF_CPU_Server ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( ARS - FirstVNF_RAM ) + ( ( ( PN * ( PN + ( BR / ACS ) ) ) / FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( ( CS * MUM ) - MLU ) - Min( RRSe ,MUC ) ),DS ) ) + MUM ) - CS ) + ( ( MUR * RMSe ) + Max( RRSe,CS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13483140996736265}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) ) )", "choosing": "( Max( MLU,( Min( MUM ,( RMSe + ( ( MUR * MUC ) / CS ) ) ) - RMSe ) ) + ( RRSe / ( ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06245513630994369}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + ARS ) ) / Max( ( RRS - ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( DDR / ACS ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),DS ) ) + RMSe ) - ( ( MLU - RRSe ) * Min( RCSe ,MLU ) ) ) + Min( ( Max( ( MUC * RMSe ),( ( RRSe + ( MUM + RCSe ) ) / CS ) ) * ( DS * ( DS / RMSe ) ) ) ,RCSe ) )", "obj1": 0.7773019271948608, "obj2": 0.11129010550442489}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - CS ) ,Min( ( RRSe / ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) ) ,( ( MLU * Min( RCSe ,( CS + MLU ) ) ) + Min( Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ,( Max( MUM,RRSe ) * Max( CS,RCSe ) ) ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.13309461048855714}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + ( BR / FirstVNF_CPU ) ) - ( AMS - DDR ) ) + ( ( RRS - FirstVNF_CPU ) / ( FirstVNF_Mem * PN ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( RCSe,( Max( ( MUR + ( RMSe * DS ) ),( MUM * RRSe ) ) / DS ) ),RRSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10070440115259738}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( RRSe * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUM / MUC ) * CS ) / ( ( ( MLU - RCSe ) * ( RRSe / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03765677617143672}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / ( ACS - CRS ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) ),( ( Max( Max( MUM,RMSe ),RMSe ) + Min( RMSe ,DS ) ) / CS ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( ( PN - DDR ) - ( DDR * FirstVNF_Mem ) )", "choosing": "( Max( MUM,( MUM + RMSe ) ) + Min( ( MUM + RCSe ) ,( ( MLU / RMSe ) - CS ) ) )", "obj1": 0.880085653104925, "obj2": 0.05832721216984692}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ACS ,Min( Min( MRS ,( ARS * CRS ) ) ,MRS ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( ( ( ( CS / Min( MUC ,RRSe ) ) / RMSe ) - Min( MUM ,RCSe ) ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( RMSe - Min( RRSe ,MUC ) ) * ( MLU / MUM ) ) / MUC ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.1233168272603603}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06963264761802167}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( Max( PN,PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( RRS,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Max( FirstVNF_Mem,AMS ) ) ) ) ) )", "choosing": "( RMSe + ( RMSe / Max( MUC,( MUC / MLU ) ) ) )", "obj1": 0.7173447537473233, "obj2": 0.1419242806518657}], "24": [{"determining": "( ( BR - FirstVNF_CPU_Server ) - Max( CRS,MRS ) )", "choosing": "( ( RCSe * Min( MUR ,( RMSe - MUC ) ) ) + ( ( Min( RMSe ,MUC ) * Max( ( RCSe - MUR ),RRSe ) ) + Max( RMSe,( ( RCSe * RMSe ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,( CRS - FirstVNF_CPU ) ) - Max( FirstVNF_RAM,( ( ( ( RRS + AMS ) - ( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ACS ) - MDR ) ) * ACS ) + BR ) ) )", "choosing": "( Max( ( RCSe / MUC ),( ( ( CS / Max( MUC,MUC ) ) / Max( ( Min( RRSe ,( MUC - MLU ) ) * ( Min( MUR ,MUM ) / MUC ) ),Min( RRSe ,( ( RRSe / RRSe ) / ( MUR - MUM ) ) ) ) ) / MLU ) ) + ( Min( ( DS - RRSe ) ,Max( RCSe,( CS * CS ) ) ) + ( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ,( ARS * CRS ) ) ) - ( DDR + DDR ) )", "choosing": "( Max( ( Min( CS ,Max( MUM,MUC ) ) + RCSe ),( ( MLU + ( Min( MLU ,( RMSe / RMSe ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RMSe + RMSe ) ) ) ) ) - CS ) ) + Max( ( MUM - Min( RRSe ,MLU ) ),Min( DS ,MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21479865826395328}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( CRS * BR ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( Min( ACS ,FirstVNF_Mem ) * ( MRS - MRS ) ) + Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) + Max( ( MUM + DS ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUM ) / ( MUC / RMSe ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16262622589152173}, {"determining": "( ( ( PN * PN ) / Min( ( ( FirstVNF_CPU * ( RRS * DDR ) ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS + ( ( FirstVNF_Mem_Server / PN ) - DDR ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_CPU - MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( DS / DS ) + ( Min( ( MUR - ( MUC / MUR ) ) ,DS ) - RMSe ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - Min( RRSe ,MLU ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( Max( ( PN / FirstVNF_RAM_Server ),( CRS - DDR ) ) - MDR ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - MUC ) ) ) + ( DS * MLU ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS - ( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ) ) ) - ( Min( Max( MDR,( ARS - Const ) ) ,ARS ) / ( MRS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.18430055749208246}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( RRS,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( RMSe + ( RMSe / Max( MUC,( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server - ACS ) ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - RRS ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( MUM - RCSe ) - ( Min( RRSe ,RCSe ) / MUC ) ) + RCSe ) ) + Max( RMSe,( ( MUR + Min( ( RMSe / ( RCSe * DS ) ) ,DS ) ) + DS ) ) ) * MUC )", "obj1": 0.8265524625267666, "obj2": 0.08452872380389284}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( MUC + MUR ) / ( MUC - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( ( ( CRS / ACS ) - DDR ) - ( ( ( AMS / FirstVNF_RAM ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) - ( ( ( ( Max( FirstVNF_CPU,PN ) / FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * PN ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * Max( ( ( CS - DS ) / CS ),Max( ( RRSe + RMSe ),( CS - MUC ) ) ) ) - DS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) - CS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( ( RMSe / MUR ) + DS ) + Min( MUM ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.034481114243576895}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( Min( MRS ,( ARS * CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Max( MRS,ARS ) ) - PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / RMSe ) - MUR ) ,DS ) - ( ( ( MLU / MUM ) - MUM ) + MUC ) ) ,Max( ( RRSe - RCSe ),( Min( Min( ( MUR - RRSe ) ,MUM ) ,( RRSe / MUM ) ) * DS ) ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * PN ) / Max( ( ARS * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ),( ( ( ( ( PN * PN ) / Min( ACS ,MRS ) ) - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) * DDR ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS - RCSe ) - Max( MLU,MUC ) ) * ( CS * Max( ( MUC / ( ( ( MLU * MLU ) / RCSe ) - MLU ) ),Max( ( ( ( RMSe - Max( CS,RMSe ) ) / MUC ) + RRSe ),( CS - MUC ) ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( CRS + ARS ),( FirstVNF_Mem_Server * PN ) ) / Max( ( RRS / ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( Const ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - Min( ( MDR * ( ( CRS - ( MDR - MDR ) ) + FirstVNF_Mem ) ) ,( ARS - RRS ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),MUR ) ) + RMSe ) - CS ) + Min( ( ( ( DS - MUR ) / RRSe ) + DS ) ,RCSe ) )", "obj1": 0.7237687366167024, "obj2": 0.13882850723145823}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - PN ) ) ) ) + ( ( RRS * PN ) / Min( Min( FirstVNF_RAM_Server ,( ( AMS - FirstVNF_CPU_Server ) * MDR ) ) ,( Const / ( DDR / ( ARS * MRS ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUC - Max( Max( MLU,( RCSe * MUC ) ),( Max( MUR,MUR ) * ( ( Max( CS,MUM ) + ( MUR + MLU ) ) + ( ( RMSe - MUC ) - RMSe ) ) ) ) ) ) + Max( Min( MUC ,RCSe ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( ( ( AMS - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RMSe ) * ( Min( RCSe ,( DS / MUC ) ) / ( ( RCSe - MUC ) / MLU ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06737141636040715}, {"determining": "( FirstVNF_RAM - ( Max( CRS,BR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( RRSe / RCSe ),( RCSe * ( ( RCSe + MUR ) / Min( RMSe ,Min( ( CS + RRSe ) ,DS ) ) ) ) ) ,( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) )", "obj1": 0.9486081370449678, "obj2": 0.022683763772516966}, {"determining": "( ( ( AMS - DDR ) - ( ( Max( PN,MRS ) - Const ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / CRS ) ) ) - ( ( ( PN * PN ) / ( AMS + ( BR / ACS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUM / MUC ) * ( Min( CS ,( ( RRSe * MLU ) * RRSe ) ) / ( CS + MUM ) ) ) - ( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ) * ( MUC - RMSe ) ) ) * MUM ) * ( ( ( RRSe / ( Max( MUM,RRSe ) - Max( DS,( RCSe + MLU ) ) ) ) - RMSe ) + MUM ) )", "obj1": 0.9785867237687366, "obj2": 0.00946811445939851}, {"determining": "( ( ( BR / FirstVNF_RAM ) - CRS ) - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,BR ) ) - Min( FirstVNF_RAM ,BR ) ) ) ) )", "choosing": "( Min( Min( ( ( MUC + MUM ) + DS ) ,( ( ( RRSe + MLU ) + ( MUR - ( ( CS + MUM ) + RRSe ) ) ) / MLU ) ) ,( Max( ( ( RRSe * RMSe ) + Max( Min( Max( MUM,RMSe ) ,( DS + RCSe ) ),( ( RRSe * MUM ) + CS ) ) ),Max( MLU,RCSe ) ) - DS ) ) + ( RRSe / ( Min( Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * MLU ) ,CS ) ) ,( ( MLU - RMSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07903302093109636}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + ( BR / FirstVNF_CPU ) ) - ( AMS - DDR ) ) + ( ( RRS - FirstVNF_CPU ) / ( FirstVNF_Mem * PN ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( RCSe,( Max( ( MUR + ( RMSe * DS ) ),( MUM * RRSe ) ) / DS ) ),RRSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10070440115259738}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( DDR * FirstVNF_Mem_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( CS * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03937117530999083}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( Min( ( Max( AMS,FirstVNF_RAM ) * ARS ) ,( MDR - Const ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( RCSe * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUM / MUC ) * CS ) / ( ( ( MLU - RCSe ) * ( RRSe / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03207859757781143}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( MDR - ( AMS - DDR ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( ( RMSe * ( Max( MLU,( MUM - ( Max( CS,( RRSe * CS ) ) * CS ) ) ) - Min( ( Min( ( MUM + RCSe ) ,( ( MLU + RMSe ) - CS ) ) + Max( MUM,MLU ) ) ,MUC ) ) ) * Max( MUM,CS ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) / Max( ( RRS / ( ( RRS - ARS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( ACS ,Max( ( Const - MDR ),( AMS * Max( FirstVNF_CPU,( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) - ( ( FirstVNF_Mem - ( ACS * Min( RRS ,MDR ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.09889585072700044}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( RCSe + CS ) ,RCSe ) + Max( ( ( RRSe - Min( ( RRSe * RRSe ) ,DS ) ) + DS ),( ( ( MLU * MLU ) - MUR ) / RCSe ) ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( ( ( ( DDR * PN ) / Min( MRS ,ACS ) ) - ( DDR / PN ) ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM - ( ( CS * ( MUM / MUC ) ) + Min( Min( RMSe ,RCSe ) ,( MUM - RMSe ) ) ) ) * Max( RMSe,CS ) )", "obj1": 0.974304068522484, "obj2": 0.012721074699325386}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( ( RRS - FirstVNF_CPU ) - AMS ) ) ,PN ) ) / ( ( ARS * RRS ) * ( PN / Max( ( ( ACS * ( FirstVNF_CPU_Server - AMS ) ) / ( FirstVNF_RAM / ( BR - FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,Min( Min( ( Max( RCSe,CS ) * Min( MUR ,MUC ) ) ,Min( Min( DS ,( MUM - RMSe ) ) ,RMSe ) ) ,RMSe ) ) + ( Max( DS,MLU ) / MUR ) )", "obj1": 0.8458244111349036, "obj2": 0.07634108306466689}, {"determining": "( Min( ( CRS * ARS ) ,( ( MDR / MRS ) / ACS ) ) - ( Min( CRS ,Const ) + ( FirstVNF_CPU + ( ( ( ( Const + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( CS / MUM ) - RCSe ) - ( MLU + Min( CS ,RRSe ) ) ) + Min( CS ,( ( RRSe / ( MLU * RRSe ) ) / RCSe ) ) ) - MUM ) ) * MUC )", "obj1": 0.7922912205567452, "obj2": 0.10296995276521294}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( Min( ( ( DDR - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( CS * ( Max( ( ( ( RCSe + DS ) / ( ( CS * MUC ) - CS ) ) * MUM ),Min( CS ,Min( RMSe ,( RCSe / Max( MUM,CS ) ) ) ) ) - MUM ) ) * MUC )", "obj1": 0.9250535331905781, "obj2": 0.03687296267001479}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,RCSe ) + ( RCSe * Min( MUR ,Max( RMSe,MUC ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09698071317545862}, {"determining": "( ( ( ( PN * PN ) / Min( ( Const * ACS ) ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) / Min( ( AMS + Min( ( RRS / DDR ) ,( DDR - FirstVNF_CPU_Server ) ) ) ,MRS ) ) ) ,( ( ( Min( FirstVNF_CPU ,Max( Min( DDR ,MDR ),( FirstVNF_RAM_Server + BR ) ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( CS - CS ) * ( Min( RCSe ,( MUC * RRSe ) ) / ( ( MLU * DS ) - ( MUM + DS ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.1408258701748762}, {"determining": "( ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( CRS - FirstVNF_CPU_Server ) + ( ( ( MRS * ( FirstVNF_RAM_Server - Min( ARS ,BR ) ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( AMS - DDR ) )", "choosing": "( Max( Min( MUM ,DS ),( ( Max( ( CS + Min( RRSe ,MLU ) ),RMSe ) + RMSe ) - CS ) ) + ( ( MUM * ( ( RCSe / Max( MUC,DS ) ) / Min( Min( RCSe ,( ( MUM * RMSe ) + MLU ) ) ,( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) ) ) + ( ( DS / ( RMSe / RRSe ) ) / MLU ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10389759211014703}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( ( PN * PN ) / Min( Min( DDR ,( ( DDR - ( ( RRS * PN ) / Min( DDR ,Const ) ) ) / Const ) ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,( Min( Const ,CRS ) / Max( ARS,( MDR / ARS ) ) ) ) ) )", "choosing": "( Max( ( MUM + MLU ),( ( CS - ( DS / RCSe ) ) - ( Min( MUR ,Min( Max( DS,Max( DS,MUC ) ) ,( MUC * ( RRSe - MUM ) ) ) ) / Min( RRSe ,CS ) ) ) ) + Max( Max( MUM,RMSe ),RMSe ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( ( CRS - ( ( FirstVNF_CPU * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU / ( Max( ( RRS + PN ),( ( ACS * FirstVNF_Mem_Server ) * BR ) ) + ( ( CRS * PN ) / ( AMS - MRS ) ) ) ) ) - ( AMS * Min( FirstVNF_RAM ,Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM - RRSe ) + RMSe ) ,( MUC * Min( ( ( MLU - ( RCSe - MUC ) ) + MUC ) ,( RCSe - RRSe ) ) ) ) * Max( Max( ( Min( RRSe ,( ( MUR - RMSe ) / DS ) ) / RRSe ),( RCSe * ( CS * Min( ( MUR - RMSe ) ,MUC ) ) ) ),( MLU * ( ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) ) ) ) * ( Min( DS ,RCSe ) - MUM ) )", "obj1": 0.9678800856531049, "obj2": 0.0154417967447389}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( CRS + ARS ),( FirstVNF_Mem_Server * PN ) ) / Max( ( RRS / ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( PN + ( BR / ACS ) ) * PN ) / FirstVNF_RAM ) * ( Max( AMS,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),DS ) ) + RMSe ) - CS ) + Min( ( Max( ( ( MUR + MLU ) * RMSe ),Max( ( ( MUM + CS ) + RRSe ),CS ) ) * ( ( DS / RMSe ) * DS ) ) ,RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.13626290939595512}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),MDR ) ) ,Min( Min( MRS ,( ARS * CRS ) ) ,MRS ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( MUM + RMSe ),( ( Min( RMSe ,DS ) + Max( Max( MUM,RMSe ),RMSe ) ) / MUR ) ) + ( ( Max( MUC,RMSe ) + RRSe ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7516059957173448, "obj2": 0.1244906175078136}, {"determining": "( ( ( PN * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( CS + ( MUR * MLU ) ) + RMSe ) - Max( ( ( MLU / DS ) - Min( RRSe ,CS ) ),DS ) ) - MUM ) ) * MUC )", "obj1": 0.9935760171306209, "obj2": 0.0028086203074805115}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.867237687366167, "obj2": 0.06375195210034096}, {"determining": "( ( ( ( FirstVNF_RAM / ( RRS - CRS ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server + Const ) ) ) - ( FirstVNF_CPU_Server - DDR ) )", "choosing": "( Max( ( MUM + ( ( RCSe + DS ) / ( RCSe / Max( RMSe,( Min( MUM ,RCSe ) + ( DS + RRSe ) ) ) ) ) ),( ( Max( Max( MUM,RMSe ),RMSe ) + Min( RMSe ,DS ) ) / CS ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.8886509635974305, "obj2": 0.054027123200161176}, {"determining": "( ( ( AMS - DDR ) - ( MDR * CRS ) ) - Min( ( ( MDR - ( AMS * ( ( RRS * Max( PN,CRS ) ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( Max( MLU,RCSe ) - RRSe ) + Max( ( MUR - CS ),RMSe ) ) * MUR )", "obj1": 0.8137044967880086, "obj2": 0.09132377344714745}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( ( Min( CRS ,ACS ) / ARS ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( MDR - ( AMS - DDR ) ) ) ) )", "choosing": "( ( MUM + RCSe ) + ( ( Min( RMSe ,MUC ) * Max( ( RCSe - MUR ),RRSe ) ) + Max( RMSe,( ( RCSe * RMSe ) / RCSe ) ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04160571489317434}, {"determining": "( ( AMS - DDR ) - ( ( ( Min( CRS ,ACS ) / ARS ) + ( ( ( Max( Const,( FirstVNF_CPU_Server / ACS ) ) * PN ) * FirstVNF_RAM ) / ( MDR - Min( AMS ,DDR ) ) ) ) + ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + Max( ( RRS * PN ),( CRS + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( ( MLU + RMSe ) - CS ) ) + Max( MUM,( ( ( Max( ( MUM / CS ),CS ) / ( MLU - ( Max( MUM,DS ) * CS ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / ( ACS - CRS ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( ( CS + ( ( MLU / RMSe ) - MUM ) ),RMSe ) + RMSe ) - CS ) ) + ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( ( CRS * ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( ( AMS + ( BR / ACS ) ) * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + Max( RRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUR + DS ) ,Max( Min( RRSe ,RCSe ),( Min( Min( ( MUR - RRSe ) ,MUM ) ,( RMSe / RRSe ) ) * DS ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + ARS ) ) / Max( ( RRS - ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( DDR / ACS ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),DS ) ) + RMSe ) - ( ( MLU - RRSe ) * Min( RCSe ,MLU ) ) ) + Min( ( Max( ( MUC * RMSe ),( ( RRSe + ( MUM + RCSe ) ) / CS ) ) * ( DS * ( DS / RMSe ) ) ) ,RCSe ) )", "obj1": 0.7687366167023555, "obj2": 0.11550828590172323}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( ( RRS + AMS ) - ( ( PN + ACS ) - MDR ) ) * ACS ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( RRSe / ( ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06141865686504652}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.7708779443254818, "obj2": 0.1135343073575226}, {"determining": "( Min( FirstVNF_CPU ,ARS ) - Min( ( ARS * CRS ) ,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( RRSe * CS ) ,CS ) ) ) ) - ( RMSe * ( MUR - ( ( DS + ( MUR - MUM ) ) / MUM ) ) ) ) + CS ) * ( ( ( MUM / MUC ) * CS ) / ( ( ( MLU - RCSe ) * ( CS / RRSe ) ) / ( MLU / CS ) ) ) )", "obj1": 0.9079229122055674, "obj2": 0.045003753176539735}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( ( ( ( Min( Const ,BR ) + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( Max( ACS,AMS ) - FirstVNF_CPU ) ) + Max( MDR,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RRSe ,MUC ) - MLU ) ,( MLU - Max( Max( MUM,MUR ),MUC ) ) ) ,( CS * ( Min( RRSe ,( MUR - MLU ) ) + Max( MUC,( ( ( CS + ( MUR * MLU ) ) + RMSe ) - Max( MUC,DS ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( CRS + ARS ),( FirstVNF_Mem_Server * PN ) ) / Max( ( RRS / ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( PN + ( ( RRS - FirstVNF_CPU ) / ACS ) ) * PN ) / FirstVNF_RAM ) * ( Max( AMS,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),DS ) ) + RMSe ) - CS ) + Min( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) ,RCSe ) )", "obj1": 0.7323340471092077, "obj2": 0.13414019495512716}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( ( AMS - DDR ) - ( ( ( Const / AMS ) + ( RRS / MDR ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( ACS * RRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( CS * ( MUM / MUC ) ) - ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( ( CS - DS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUC + RMSe ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.02070122008867116}, {"determining": "( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( ( CRS * ACS ) ,( ARS * ( ( MDR * BR ) - ( RRS + FirstVNF_CPU ) ) ) ) ) - Max( Min( Max( CRS,DDR ) ,Max( CRS,DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,( DS + ( MUC - MUR ) ) ) + ( MUR - Max( ( ( ( CS * MUM ) - MLU ) - Min( RRSe ,MUC ) ),DS ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( PN - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / CRS ) ) ) - ( ( ( PN * PN ) / ( AMS + ( BR / ACS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MUM / MUC ) * ( Min( CS ,( ( RRSe * MLU ) * RRSe ) ) / ( CS + MUM ) ) ) - MUM ) ,Max( Max( ( CS * MUC ),RCSe ),RRSe ) )", "obj1": 0.9635974304068522, "obj2": 0.01597914313640098}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( DS / ( RMSe / RRSe ) ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - MUC ) ) ) + ( DS * MLU ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07361890616614923}, {"determining": "( ( ( ( Min( Max( ( RRS * PN ),( CRS + CRS ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * ACS ) * ( ( ( PN * PN ) / Min( ACS ,MRS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( CRS + ARS ),( FirstVNF_Mem_Server * PN ) ) / Max( ( RRS / ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( CRS - FirstVNF_CPU_Server ) + ( ( ( ( PN + ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ACS ) ) * PN ) / FirstVNF_RAM ) * ( Max( AMS,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Min( RCSe ,MLU ) ) - MUM ),DS ) ) + RMSe ) - CS ) + Min( ( ( CS + MUM ) - MLU ) ,RCSe ) )", "obj1": 0.7109207708779444, "obj2": 0.14507384438070986}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( RMSe + ( RMSe / Max( MUC,( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,MRS ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( Const - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + ( RRSe + ( MUM + RCSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10866301061037446}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RMSe ),( ( Max( Max( MUM,RMSe ),RMSe ) + Min( RMSe ,DS ) ) / CS ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10602155374210107}, {"determining": "( PN - ( FirstVNF_CPU + ( ( RRS - RRS ) + ( ( Min( Max( ( RRS * ACS ),( CRS + Const ) ) ,( MDR - FirstVNF_CPU_Server ) ) * PN ) / Max( ( ( AMS + ( CRS / ACS ) ) * PN ),AMS ) ) ) ) )", "choosing": "Min( ( CS - MUM ) ,( Max( ( Max( MUR,MUM ) + Min( ( MUR / MUM ) ,Max( DS,RCSe ) ) ),RCSe ) / RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03055798806702105}, {"determining": "( ( AMS - DDR ) - ( ( Max( Const,ARS ) / PN ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( AMS + ( BR / ACS ) ),PN ) * FirstVNF_RAM ) / ( FirstVNF_CPU - RRS ) ) ) ) )", "choosing": "( Max( ( MUM + RMSe ),( ( Min( RMSe ,DS ) + Max( Max( MUM,RMSe ),RMSe ) ) / MUR ) ) + ( ( Max( MUC,RMSe ) + RRSe ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7601713062098501, "obj2": 0.118976346100128}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + AMS ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( MUM - RCSe ) - RCSe ) + RCSe ) ) + Max( RMSe,( ( MUR + Min( ( RCSe / ( RCSe * DS ) ) ,DS ) ) + DS ) ) ) * ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) )", "obj1": 0.8329764453961456, "obj2": 0.08250791504471446}, {"determining": "( PN - ( RRS + ( ( MDR - FirstVNF_CPU_Server ) + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( RCSe + CS ) ,RCSe ) + ( RMSe / RCSe ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( ( ( Min( ( FirstVNF_RAM_Server / Const ) ,FirstVNF_Mem ) * MRS ) / BR ) * MRS ) - ( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( Min( MUM ,RCSe ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( CS - MLU ) ) ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14751038104518993}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_CPU - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,PN ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( ( RRS * ACS ) / ( Min( FirstVNF_Mem_Server ,PN ) + RRS ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUC / MUM ) * CS ) / ( ( ( MLU - MUR ) * ( MUM / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11073932124423959}, {"determining": "( PN - ( Max( CRS,PN ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( PN,ACS ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * ACS ) / Max( BR,AMS ) ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUR - MUC ) - Min( RRSe ,MUC ) ),DS ) ) + CS ) - CS ) + Min( MLU ,Max( RCSe,MLU ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( ( ( ( PN * PN ) / Min( ( RRS - FirstVNF_CPU ) ,ACS ) ) - Max( DDR,CRS ) ) - CRS ) ) ) )", "choosing": "( ( Min( MUR ,( ( ( CS * RMSe ) - DS ) - MUM ) ) * ( RRSe / CS ) ) + ( RRSe / RCSe ) )", "obj1": 0.8072805139186295, "obj2": 0.09463313268055201}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + Max( ( RRS * PN ),( CRS + CRS ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( Max( MLU,RCSe ) - RRSe ) + Max( ( MUR - CS ),RMSe ) ) * MUR )", "obj1": 0.7623126338329764, "obj2": 0.11825815667156432}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - Const ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( RRS * ( CRS - CRS ) ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( ( MUM + Min( RCSe ,MLU ) ) - RCSe ) - RCSe ) + ( MLU - ( ( RRSe / RRSe ) / DS ) ) ) ) + Max( RMSe,( MUR - CS ) ) ) * MUC )", "obj1": 0.8115631691648822, "obj2": 0.09213022238122473}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( MRS * ( ( Min( Max( ARS,MRS ) ,( PN + PN ) ) * FirstVNF_Mem_Server ) / BR ) ) - ( ( Max( DDR,CRS ) + ( ( BR + ARS ) / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS + MRS ) ) - DDR ) ) ) ) ,( ( ( Min( MRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14479245195655024}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.07688270782256065}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * Min( DDR ,Const ) ) / BR ) * MRS ),( ( MDR - ( ( RRS * ( MRS - AMS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),( MUC / MUC ) ) + Max( ( MUM + DS ),( MUC + ( MUC + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1360145312841889}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + ARS ) ) / Max( ( RRS - ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( DDR / ACS ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),DS ) ) + RMSe ) - ( ( MLU - RRSe ) * Min( RCSe ,MLU ) ) ) + Min( ( Max( ( MUC * RMSe ),( ( RRSe + ( MUM + RCSe ) ) / CS ) ) * ( DS * ( DS / RMSe ) ) ) ,RCSe ) )", "obj1": 0.7366167023554604, "obj2": 0.13297463456560124}, {"determining": "( ( ( ( CRS - Const ) + FirstVNF_Mem ) - ( Max( MDR,MDR ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) - Min( Min( PN ,FirstVNF_Mem_Server ) ,Const ) )", "choosing": "( ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) * ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( Min( MLU ,Max( Min( CS ,CS ),( DS * RRSe ) ) ) / RRSe ) ) - MLU ) ) + ( ( MUM + RCSe ) + ( ( MUM * MUM ) * RMSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10932327704583977}, {"determining": "( ( ( AMS - DDR ) - ( ( Max( PN,MRS ) - Const ) + FirstVNF_Mem ) ) - ( DDR * MDR ) )", "choosing": "( ( ( ( ( MUM / MUC ) * ( Min( CS ,( ( RRSe * CS ) * RRSe ) ) / ( CS + MUM ) ) ) - ( ( ( ( ( CS / MLU ) * DS ) + RRSe ) - CS ) * ( MUC - RMSe ) ) ) * MUM ) * ( ( ( RRSe / ( Max( MUM,RRSe ) - Max( DS,( RCSe + MLU ) ) ) ) - Min( ( Min( ( RCSe + RRSe ) ,( DS - ( DS + CS ) ) ) + MUR ) ,( ( DS + RRSe ) * MLU ) ) ) + MUM ) )", "obj1": 0.9807280513918629, "obj2": 0.00851069833667898}, {"determining": "( ( BR - MDR ) - Min( ( Min( MRS ,ACS ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / MLU ),RCSe ) - ( MUC * MUR ) ) + RMSe )", "obj1": 0.7580299785867237, "obj2": 0.12084723780119266}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( PN * ( RRS - ( MDR / PN ) ) ) / Min( ACS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) ) / ( MDR * ARS ) ) - Min( FirstVNF_CPU_Server ,( ( AMS * ACS ) / ( ( ( DDR - Const ) * FirstVNF_RAM_Server ) + RRS ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( MUC + ( MUR - MLU ) ) ) + CS ) * ( Max( ( MUR / MUM ),( ( MUC * ( DS / DS ) ) * ( ( MUR + MLU ) * Min( Min( ( MUM + MUC ) ,MLU ) ,( RRSe / Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( Min( Max( MUC,( Max( RRSe,MLU ) * RRSe ) ) ,RCSe ) * MUC ),RRSe ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11169673736695913}, {"determining": "( Min( Min( Const ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( ( ( FirstVNF_RAM / ( FirstVNF_CPU / ( DDR - Max( ( FirstVNF_Mem * AMS ),FirstVNF_CPU ) ) ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( ( Min( MUC ,CS ) * ( DS * DS ) ) ,MLU ) - ( ( ( MLU - MLU ) - ( Min( MLU ,RCSe ) * MUC ) ) + Min( MUC ,DS ) ) ) + ( ( ( ( DS + RCSe ) + ( RCSe / Max( MUM,RRSe ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( PN - ( FirstVNF_CPU + ( ( DDR * FirstVNF_CPU ) + ( ( Min( Max( ( RRS * PN ),( CRS + CRS ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * ACS ) / ( BR + AMS ) ) ) ) )", "choosing": "Max( MLU,( ( ( DS + ( MLU - RMSe ) ) - ( Max( ( DS + RMSe ),( MUR / MUR ) ) / MLU ) ) * Min( Min( ( Min( MUC ,Min( DS ,Min( RCSe ,RCSe ) ) ) * Min( CS ,MUR ) ) ,RRSe ) ,MUC ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06963264761802167}, {"determining": "( ( AMS - ACS ) - Max( DDR,( ACS - FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( Max( CS,( RRSe - ( DS + RRSe ) ) ) - ( MUC - MUC ) ) ) + ( DS * MLU ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07361890616614923}, {"determining": "( ( AMS - DDR ) - ( RRS * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( ( ( CS * ( RRSe / MUC ) ) / ( ( Min( RMSe ,RCSe ) / ( CS * RMSe ) ) * CS ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.867237687366167, "obj2": 0.06375195210034096}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}], "25": [{"determining": "( ( AMS - ( ( AMS - ( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Const ) ) - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,DDR ) ) ) ) ) - ( ( CRS - Const ) + ( ( RRS + FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU - ( DDR - ( FirstVNF_CPU * Max( MRS,CRS ) ) ) ) + ( ( FirstVNF_CPU * ( ( ACS + FirstVNF_Mem ) / FirstVNF_RAM ) ) * Max( PN,ARS ) ) ) ) ) )", "choosing": "( Max( Max( MUM,RCSe ),( ( MLU + RMSe ) - ( ( RCSe - MLU ) / Min( MUM ,Max( ( Max( MUR,MUC ) / MUM ),MUC ) ) ) ) ) + Max( ( ( ( ( CS * ( ( RRSe + CS ) / RRSe ) ) / ( ( Min( RCSe ,RMSe ) / ( MUM + RCSe ) ) * ( CS * ( CS / MUC ) ) ) ) + RMSe ) + Min( ( RCSe / ( RMSe + RCSe ) ) ,DS ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - Max( CRS,MRS ) )", "choosing": "( ( RCSe * Min( MUR ,( RMSe - MUC ) ) ) + ( ( Min( RMSe ,MUC ) * Max( ( RCSe - MUR ),RRSe ) ) + Max( RMSe,( ( RCSe * RMSe ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ,( ARS * CRS ) ) ) - ( DDR + DDR ) )", "choosing": "( Max( ( Min( CS ,Max( MUM,MUC ) ) + RCSe ),( ( MLU + ( Min( MLU ,( RMSe / RMSe ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RMSe + RMSe ) ) ) ) ) - CS ) ) + Max( ( MUM - Min( RRSe ,MLU ) ),Min( DS ,MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21479865826395328}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( CRS * BR ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( Min( ACS ,FirstVNF_Mem ) * ( MRS - MRS ) ) + Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) + Max( ( MUM + DS ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUM ) / ( MUC / RMSe ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16262622589152173}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,Min( ACS ,FirstVNF_Mem ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - DDR ) ) ,( ARS - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( RRSe / ( ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) + Max( ( CS - Min( CS ,MUC ) ),( Min( Max( CS,DS ) ,RRSe ) * MLU ) ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( ( ( PN * PN ) / Min( ( ( FirstVNF_CPU * ( RRS * DDR ) ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS + ( ( FirstVNF_Mem_Server / PN ) - DDR ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_CPU - MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( DS / DS ) + ( Min( ( MUR - ( MUC / MUR ) ) ,DS ) - RMSe ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - Min( RRSe ,MLU ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS - ( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ) ) ) - ( Min( Max( MDR,( ARS - Const ) ) ,ARS ) / ( MRS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.18430055749208246}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server - ACS ) ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - RRS ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( MUM - RCSe ) - ( Min( RRSe ,RCSe ) / MUC ) ) + RCSe ) ) + Max( RMSe,( ( MUR + Min( ( RMSe / ( RCSe * DS ) ) ,DS ) ) + DS ) ) ) * MUC )", "obj1": 0.8265524625267666, "obj2": 0.08452872380389284}, {"determining": "( FirstVNF_RAM - ( Max( CRS,BR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( RRSe / RCSe ),( RCSe * ( ( RCSe + MUR ) / Min( RMSe ,Min( ( CS + RRSe ) ,DS ) ) ) ) ) ,( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) )", "obj1": 0.9486081370449678, "obj2": 0.022683763772516966}, {"determining": "( ( ( ( FirstVNF_RAM / ( RRS - CRS ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server + Const ) ) ) - ( FirstVNF_CPU_Server - DDR ) )", "choosing": "( Max( ( MUM + ( ( RCSe + DS ) / ( RCSe / Max( RMSe,( Min( MUM ,RCSe ) + ( DS + RRSe ) ) ) ) ) ),( ( Max( Max( MUM,RMSe ),RMSe ) + Min( RMSe ,DS ) ) / CS ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.8886509635974305, "obj2": 0.054027123200161176}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( CRS + ARS ),( FirstVNF_Mem_Server * PN ) ) / Max( ( RRS / ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( Max( AMS,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),DS ) ) + RMSe ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / Min( MUC ,RRSe ) ) / RMSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.7194860813704497, "obj2": 0.14125464311212405}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( MUC + MUR ) / ( MUC - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( Min( MRS ,( ARS * CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Max( MRS,ARS ) ) - PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / RMSe ) - MUR ) ,DS ) - ( ( ( MLU / MUM ) - MUM ) + MUC ) ) ,Max( ( RRSe - RCSe ),( Min( Min( ( MUR - RRSe ) ,MUM ) ,( RRSe / MUM ) ) * DS ) ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( MRS * ( ( Min( Max( ARS,MRS ) ,( PN + PN ) ) * FirstVNF_Mem_Server ) / BR ) ) - ( ( Max( DDR,CRS ) + ( ( BR + ARS ) / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS + MRS ) ) - DDR ) ) ) ) ,( ( ( Min( MRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14479245195655024}, {"determining": "( ( BR - MDR ) - Min( ( Min( MRS ,ACS ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / MLU ),RCSe ) - ( MUC * MUR ) ) + RMSe )", "obj1": 0.7580299785867237, "obj2": 0.12084723780119266}, {"determining": "( ( ( AMS - DDR ) - ( ( Max( PN,MRS ) - Const ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / CRS ) ) ) - ( ( ( PN * PN ) / ( AMS + ( BR / ACS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUM / MUC ) * ( Min( CS ,( ( RRSe * MLU ) * RRSe ) ) / ( CS + MUM ) ) ) - ( ( ( ( DS * ( CS / MLU ) ) + RRSe ) - CS ) * ( MUC - RMSe ) ) ) * MUM ) * ( ( ( RRSe / ( Max( MUM,RRSe ) - Max( DS,( RCSe + MLU ) ) ) ) - RMSe ) + MUM ) )", "obj1": 0.9785867237687366, "obj2": 0.00946811445939851}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( Min( MUC ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( Min( Min( ( MUR - RRSe ) ,MUM ) ,( RMSe / RRSe ) ) * DS ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,CS ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR - ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - PN ) ) ) ) + ( ( RRS * PN ) / Min( Min( FirstVNF_RAM_Server ,( ( AMS - FirstVNF_CPU_Server ) * MDR ) ) ,( Const / ( DDR / ( ARS * MRS ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUC - Max( Max( MLU,( RCSe * MUC ) ),( Max( MUR,MUR ) * ( ( Max( CS,MUM ) + ( MUR + MLU ) ) + ( ( RMSe - MUC ) - RMSe ) ) ) ) ) ) + Max( Min( MUC ,RCSe ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.02070122008867116}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06963264761802167}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + ( BR / FirstVNF_CPU ) ) - ( AMS - DDR ) ) + ( ( RRS - FirstVNF_CPU ) / ( FirstVNF_Mem * PN ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( RCSe,( Max( ( MUR + ( RMSe * DS ) ),( MUM * RRSe ) ) / DS ) ),RRSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10070440115259738}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),CRS ) ) ,Min( Min( MRS ,( CRS * ARS ) ) ,( DDR * MDR ) ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( RMSe + MUM ),( ( Min( RMSe ,DS ) + Max( Max( MUM,RMSe ),RMSe ) ) / Max( ( Min( RRSe ,( ( RRSe - RMSe ) - ( MLU + MUM ) ) ) * MLU ),( RCSe - Min( MLU ,MUR ) ) ) ) ) + ( ( Max( MUC,RMSe ) + RRSe ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7537473233404711, "obj2": 0.1240482876724804}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / AMS ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( DDR * FirstVNF_Mem_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( CS * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03937117530999083}, {"determining": "( ( ( ( ARS / AMS ) * ACS ) / ACS ) - ( Const / RRS ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,RCSe ) + ( RCSe * Min( MUR ,Max( RMSe,MUC ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09698071317545862}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( ( ( ( PN * PN ) / Min( ( RRS - FirstVNF_CPU ) ,ACS ) ) - Max( DDR,CRS ) ) - CRS ) ) ) )", "choosing": "( ( Min( MUR ,( ( ( CS * RMSe ) - DS ) - MUM ) ) * ( RRSe / CS ) ) + ( RRSe / RCSe ) )", "obj1": 0.8072805139186295, "obj2": 0.09463313268055201}, {"determining": "( ( ( ( CRS - Const ) + FirstVNF_Mem ) - ( Max( MDR,MDR ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) - Min( Min( PN ,FirstVNF_Mem_Server ) ,Const ) )", "choosing": "( ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) * ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( Min( MLU ,Max( Min( CS ,CS ),( DS * RRSe ) ) ) / RRSe ) ) - MLU ) ) + ( ( MUM + RCSe ) + ( ( MUM * MUM ) * RMSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10932327704583977}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RMSe ),( ( Max( Max( MUM,RMSe ),RMSe ) + Min( RMSe ,DS ) ) / CS ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10602155374210107}, {"determining": "( Min( FirstVNF_CPU ,ARS ) - Min( ( ARS * CRS ) ,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( RRSe * CS ) ,CS ) ) ) ) - ( RMSe * ( MUR - ( ( DS + ( MUR - MUM ) ) / MUM ) ) ) ) + CS ) * ( ( ( MUM / MUC ) * CS ) / ( ( ( MLU - RCSe ) * ( CS / RRSe ) ) / ( MLU / CS ) ) ) )", "obj1": 0.9079229122055674, "obj2": 0.045003753176539735}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( Max( FirstVNF_CPU,AMS ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Min( MUM ,DS ),( ( Max( ( CS + ( ( MLU / RMSe ) - MUM ) ),RMSe ) + RMSe ) - CS ) ) + ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - DS ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10729541060193881}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( ( RRS - FirstVNF_CPU ) - AMS ) ) ,PN ) ) / ( ( ARS * RRS ) * ( PN / Max( ( ( ACS * ( FirstVNF_CPU_Server - AMS ) ) / ( FirstVNF_RAM / ( BR - FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,Min( Min( ( Max( RCSe,CS ) * Min( MUR ,MUC ) ) ,Min( Min( DS ,( MUM - RMSe ) ) ,RMSe ) ) ,RMSe ) ) + ( Max( DS,MLU ) / MUR ) )", "obj1": 0.8458244111349036, "obj2": 0.07634108306466689}, {"determining": "( Min( ( CRS * ARS ) ,( ( MDR / MRS ) / ACS ) ) - ( Min( CRS ,Const ) + ( FirstVNF_CPU + ( ( ( ( Const + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( CS / MUM ) - RCSe ) - ( MLU + Min( CS ,RRSe ) ) ) + Min( CS ,( ( RRSe / ( MLU * RRSe ) ) / RCSe ) ) ) - MUM ) ) * MUC )", "obj1": 0.7922912205567452, "obj2": 0.10296995276521294}, {"determining": "( ( AMS - MDR ) - Min( Max( ( ( MRS + ACS ) - FirstVNF_RAM ),( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( MUC ,RMSe ) + ( ( ( MLU / MLU ) * MUC ) - Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),( ( ( ( MUC + MUR ) / ( MUC - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13238535161253467}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( ( Min( CRS ,ACS ) / ARS ) + ( ( ( ( AMS + ( BR / Max( FirstVNF_CPU_Server,CRS ) ) ) * PN ) * FirstVNF_RAM ) * ( ( AMS - DDR ) - MDR ) ) ) )", "choosing": "( ( MUM + RCSe ) + ( Max( RMSe,( ( RCSe * RMSe ) / RCSe ) ) + ( ( MUM - CS ) * Max( ( RCSe - MUR ),MUC ) ) ) )", "obj1": 0.8993576017130621, "obj2": 0.05039125522614337}, {"determining": "( ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) * PN ) / Max( ( ARS * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ),( ( ( ( ( PN * PN ) / Min( ACS ,MRS ) ) - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) * DDR ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS - RCSe ) - Max( MLU,MUC ) ) * ( CS * Max( ( MUC / ( ( ( MLU * MLU ) / RCSe ) - MLU ) ),Max( ( ( ( RMSe - Max( CS,RMSe ) ) / MUC ) + RRSe ),( CS - MUC ) ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( ( CRS - ( ( FirstVNF_CPU * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU / ( Max( ( RRS + PN ),( ( ACS * FirstVNF_Mem_Server ) * BR ) ) + ( ( CRS * PN ) / ( AMS - MRS ) ) ) ) ) - ( AMS * Min( FirstVNF_RAM ,Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM - RRSe ) + RMSe ) ,( MUC * Min( ( ( MLU - ( RCSe - MUC ) ) + MUC ) ,( RCSe - RRSe ) ) ) ) * Max( Max( ( Min( RRSe ,( ( MUR - RMSe ) / DS ) ) / RRSe ),( RCSe * ( CS * Min( ( MUR - RMSe ) ,MUC ) ) ) ),( MLU * ( ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) ) ) ) * ( Min( DS ,RCSe ) - MUM ) )", "obj1": 0.9678800856531049, "obj2": 0.0154417967447389}, {"determining": "( ( ( MDR - ACS ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( ( ARS - FirstVNF_Mem_Server ) - Min( Min( Max( BR,Max( ( FirstVNF_Mem_Server / MRS ),MRS ) ) ,Max( RRS,Max( FirstVNF_RAM,( MRS * ACS ) ) ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( MUR + RCSe ) + Max( MUM,( ( ( ( Max( DS,RCSe ) / ( RCSe - MUM ) ) * ( MUC - MUR ) ) - MUM ) + DS ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( AMS - DDR ) - ( ( ( Const / AMS ) + ( RRS / MDR ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( ACS * RRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( CS * ( MUM / MUC ) ) - ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( ( CS - DS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUC + RMSe ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( ( AMS - DDR ) - ( ( ( Const / AMS ) + ( ( FirstVNF_Mem - FirstVNF_Mem ) + ( ( FirstVNF_Mem_Server * MDR ) + PN ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( RRS - FirstVNF_CPU ) + Max( RRS,ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( ( MUM / MUC ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUC + RMSe ) / ( MUC / CS ) ) ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08303167990481702}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( ( AMS - DDR ) - ( ( ( Min( CRS ,ACS ) / ARS ) + ( ( ( Max( Const,( FirstVNF_CPU_Server / ACS ) ) * PN ) * FirstVNF_RAM ) / ( MDR - Min( AMS ,DDR ) ) ) ) + ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + Max( ( RRS * PN ),( CRS + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( ( MLU + RMSe ) - CS ) ) + Max( MUM,( ( ( Max( ( MUM / CS ),CS ) / ( MLU - ( Max( MUM,DS ) * CS ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "( Min( Min( Const ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( ( ( FirstVNF_RAM / ( FirstVNF_CPU / ( DDR - Max( ( FirstVNF_Mem * AMS ),FirstVNF_CPU ) ) ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( ( Min( MUC ,CS ) * ( DS * DS ) ) ,MLU ) - ( ( ( MLU - MLU ) - ( Min( MLU ,RCSe ) * MUC ) ) + Min( MUC ,DS ) ) ) + ( ( ( ( DS + RCSe ) + ( RCSe / Max( MUM,RRSe ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( PN - ( RRS + ( ( MDR - FirstVNF_CPU_Server ) + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( RCSe + CS ) ,RCSe ) + ( RMSe / RCSe ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),MDR ) ) ,Min( Min( MRS ,( ARS * CRS ) ) ,MRS ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( MUM + RMSe ),( ( Min( RMSe ,DS ) + Max( Max( MUM,RMSe ),RMSe ) ) / MUR ) ) + ( ( Max( MUC,RMSe ) + RRSe ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7516059957173448, "obj2": 0.1244906175078136}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.7708779443254818, "obj2": 0.1135343073575226}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( Const * PN ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( Min( ( Max( RRS,FirstVNF_RAM ) * ARS ) ,( MDR - Const ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR + Min( ( MLU * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( Min( MUM ,RRSe ) / ( ( ( RCSe - MLU ) * ( RRSe / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.9400428265524625, "obj2": 0.028909776797723035}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + ARS ) ) / Max( ( RRS - ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( DDR / ACS ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),DS ) ) + RMSe ) - ( ( MLU - RRSe ) * Min( RCSe ,MLU ) ) ) + Min( ( Max( ( MUC * RMSe ),( ( RRSe + ( MUM + RCSe ) ) / CS ) ) * ( DS * ( DS / RMSe ) ) ) ,RCSe ) )", "obj1": 0.7687366167023555, "obj2": 0.11550828590172323}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( ( RRS * PN ),( CRS + CRS ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * ACS ) / Max( BR,AMS ) ) ) ) )", "choosing": "( Max( ( MUM + CS ),( ( Max( ( CS + ( ( MLU / MUC ) - Max( MUM,RMSe ) ) ),RMSe ) + RMSe ) - CS ) ) + ( ( MUM * ( ( RCSe + DS ) / ( RCSe / Max( ( RCSe - RRSe ),DS ) ) ) ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( ( CRS * ARS ) ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( RRSe * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - ( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ) ) + CS ) * ( ( ( MUM / MUC ) * CS ) / ( ( ( MLU - RCSe ) * ( RRSe / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.9079229122055674, "obj2": 0.045003753176539735}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( DS / ( RMSe / RRSe ) ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - MUC ) ) ) + ( DS * MLU ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07361890616614923}, {"determining": "( ( ( ( Min( Max( ( RRS * PN ),( CRS + CRS ) ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * ACS ) * ( ( ( PN * PN ) / Min( ACS ,MRS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( CRS + ARS ),( FirstVNF_Mem_Server * PN ) ) / Max( ( RRS / ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( CRS - FirstVNF_CPU_Server ) + ( ( ( ( PN + ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ACS ) ) * PN ) / FirstVNF_RAM ) * ( Max( AMS,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Min( RCSe ,MLU ) ) - MUM ),DS ) ) + RMSe ) - CS ) + Min( ( ( CS + MUM ) - MLU ) ,RCSe ) )", "obj1": 0.7109207708779444, "obj2": 0.14507384438070986}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) / Max( ( RRS / ( ( RRS - ARS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( ACS ,Max( ( Const - MDR ),( AMS * Max( FirstVNF_CPU,( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) - ( ( FirstVNF_Mem - ( ACS * Min( RRS ,MDR ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.09889585072700044}, {"determining": "( PN - ( FirstVNF_CPU + ( ( RRS - RRS ) + ( ( Min( Max( ( RRS * ACS ),( CRS + Const ) ) ,( MDR - FirstVNF_CPU_Server ) ) * PN ) / Max( ( ( AMS + ( CRS / ACS ) ) * PN ),AMS ) ) ) ) )", "choosing": "Min( ( CS - MUM ) ,( Max( ( Max( MUR,MUM ) + Min( ( MUR / MUM ) ,Max( DS,RCSe ) ) ),RCSe ) / RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03055798806702105}, {"determining": "( ( AMS - DDR ) - ( ( Max( Const,ARS ) / PN ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( AMS + ( BR / ACS ) ),PN ) * FirstVNF_RAM ) / ( FirstVNF_CPU - RRS ) ) ) ) )", "choosing": "( Max( ( MUM + RMSe ),( ( Min( RMSe ,DS ) + Max( Max( MUM,RMSe ),RMSe ) ) / MUR ) ) + ( ( Max( MUC,RMSe ) + RRSe ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7601713062098501, "obj2": 0.118976346100128}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( Min( RRS ,Max( FirstVNF_Mem_Server,( FirstVNF_RAM_Server + BR ) ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( ( ( ( CS * Max( ( ( CS - DS ) / CS ),Max( ( RMSe + RRSe ),( CS - MUC ) ) ) ) - DS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) - CS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) / MUC ) ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.1384121933992136}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.867237687366167, "obj2": 0.06375195210034096}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( ( ( Min( ( FirstVNF_RAM_Server / Const ) ,FirstVNF_Mem ) * MRS ) / BR ) * MRS ) - ( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( Min( MUM ,RCSe ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( CS - MLU ) ) ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14751038104518993}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( CRS + ARS ),( FirstVNF_Mem_Server * PN ) ) / Max( ( RRS / ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - PN ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( AMS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUR ) - CS ) + Min( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) ,RCSe ) )", "obj1": 0.721627408993576, "obj2": 0.1396842147843895}, {"determining": "( ( Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,( PN * PN ) ) ) ) ) - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + ( ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) + MUR ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03428783224756011}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / ( ACS - CRS ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( MRS * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( ( CS + ( ( MLU / RMSe ) - MUM ) ),RMSe ) + RMSe ) - CS ) ) + ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + Min( RMSe ,MUC ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03584507988814355}, {"determining": "( ( MRS / ( ( AMS - ACS ) + FirstVNF_RAM ) ) - ( ( ( RRS + AMS ) - ( ( PN + ACS ) - MDR ) ) * ACS ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( Min( ( ( MUC / DS ) - MUM ) ,DS ) - RMSe ) ) - CS ) ) + ( RCSe + ( MUM * Min( Max( DS,MUM ) ,MUM ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06141865686504652}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( ( Min( CRS ,ACS ) / ARS ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( MDR - ( AMS - DDR ) ) ) ) )", "choosing": "( ( MUM + RCSe ) + ( ( Min( RMSe ,MUC ) * Max( ( RCSe - MUR ),RRSe ) ) + Max( RMSe,( ( RCSe * RMSe ) / RCSe ) ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04160571489317434}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + Max( ( RRS * PN ),( CRS + CRS ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( Max( MLU,RCSe ) - RRSe ) + Max( ( MUR - CS ),RMSe ) ) * MUR )", "obj1": 0.7623126338329764, "obj2": 0.11825815667156432}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( RRS,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( RMSe + ( RMSe / Max( MUC,( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( CRS * ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( ( AMS + ( BR / ACS ) ) * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + Max( RRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUR + DS ) ,Max( Min( RRSe ,RCSe ),( Min( Min( ( MUR - RRSe ) ,MUM ) ,( RMSe / RRSe ) ) * DS ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( BR / FirstVNF_RAM ) - CRS ) - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,BR ) ) - Min( FirstVNF_RAM ,BR ) ) ) ) )", "choosing": "( Min( Min( ( ( MUC + MUM ) + DS ) ,( ( ( RRSe + MLU ) + ( MUR - ( ( CS + MUM ) + RRSe ) ) ) / MLU ) ) ,( Max( ( ( RRSe * RMSe ) + Max( Min( Max( MUM,RMSe ) ,( DS + RCSe ) ),( ( RRSe * MUM ) + CS ) ) ),Max( MLU,RCSe ) ) - DS ) ) + ( RRSe / ( Min( Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * MLU ) ,CS ) ) ,( ( MLU - RMSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07903302093109636}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( RRS * ( ( FirstVNF_RAM_Server + DDR ) / CRS ) ),DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( MUR * RMSe ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - MUR ) / ( Min( Min( CS ,MLU ) ,( ( MUR - MUM ) / ( RRSe / RMSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.07688270782256065}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( Min( ( ( DDR - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( CS * ( Max( ( ( ( RCSe + DS ) / ( ( CS * MUC ) - CS ) ) * MUM ),Min( CS ,Min( RMSe ,( RCSe / Max( MUM,CS ) ) ) ) ) - MUM ) ) * MUC )", "obj1": 0.9250535331905781, "obj2": 0.03687296267001479}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * Min( DDR ,Const ) ) / BR ) * MRS ),( ( MDR - ( ( RRS * ( MRS - AMS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),( MUC / MUC ) ) + Max( ( MUM + DS ),( MUC + ( MUC + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1360145312841889}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( ( RRS + AMS ) - ( ( PN + ACS ) - MDR ) ) * ACS ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( RRSe / ( ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06141865686504652}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( ( AMS - DDR ),( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RRSe / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8329764453961456, "obj2": 0.08204345261651605}, {"determining": "( ( ( ( ( ( PN * PN ) / ( ( ARS / FirstVNF_CPU_Server ) / ( Max( DDR,ARS ) + DDR ) ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( ( ( ARS - AMS ) - Max( DDR,CRS ) ) - MDR ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( CS * RMSe ) - ( ( ( RRSe + CS ) / Max( MUC,DS ) ) * MUM ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( DS / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) )", "obj1": 0.8008565310492506, "obj2": 0.09809802782583836}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( MDR - ( AMS - DDR ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( CS - MUM ) ,( Max( ( Max( MUR,MUM ) + Min( ( MUR / MUM ) ,Max( DS,RCSe ) ) ),RCSe ) / RRSe ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( CRS + ARS ),( FirstVNF_Mem_Server * PN ) ) / Max( ( RRS / ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( PN + ( ( RRS - FirstVNF_CPU ) / ACS ) ) * PN ) / FirstVNF_RAM ) * ( Max( AMS,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( MUC + MUR ) / ( MUC - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13414019495512716}, {"determining": "( PN - ( Max( CRS,PN ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( PN,ACS ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * ACS ) / Max( BR,AMS ) ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUR - MUC ) - Min( RRSe ,MUC ) ),DS ) ) + CS ) - CS ) + Min( MLU ,Max( RCSe,MLU ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( Max( ( Min( ( DDR / RRS ) ,Const ) * FirstVNF_Mem ),Min( FirstVNF_Mem ,( Max( DDR,FirstVNF_RAM ) - PN ) ) ) - MRS ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUC / RRSe ) * RRSe )", "obj1": 0.9914346895074947, "obj2": 0.00384509975237769}, {"determining": "( Max( ( ARS - DDR ),FirstVNF_Mem ) - PN )", "choosing": "Min( ( ( ( MUM / MUC ) * ( Min( CS ,( ( RRSe * MLU ) * RRSe ) ) / ( ( RMSe * ( MUC + CS ) ) + MUM ) ) ) - MUM ) ,Max( Max( ( CS * RMSe ),RCSe ),RRSe ) )", "obj1": 0.9635974304068522, "obj2": 0.01597914313640098}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( PN * ( RRS - ( MDR / PN ) ) ) / Min( ACS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) ) / ( MDR * ARS ) ) - Min( FirstVNF_CPU_Server ,( ( AMS * ACS ) / ( ( ( DDR - Const ) * FirstVNF_RAM_Server ) + RRS ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( MUC + ( MUR - MLU ) ) ) + CS ) * ( Max( ( MUR / MUM ),( ( MUC * ( DS / DS ) ) * ( ( MUR + MLU ) * Min( Min( ( MUM + MUC ) ,MLU ) ,( RRSe / Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( Min( Max( MUC,( Max( RRSe,MLU ) * RRSe ) ) ,RCSe ) * MUC ),RRSe ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11169673736695913}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}, {"determining": "( ( AMS - DDR ) - ( ( ( FirstVNF_RAM / ( ACS - CRS ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( Max( ( CS + ( ( MLU / RMSe ) - MUM ) ),RMSe ) + RMSe ) - CS ) ) + ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( ( ( CRS / ACS ) - DDR ) - ( ( ( AMS / FirstVNF_RAM ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) - ( ( ( ( Max( FirstVNF_CPU,PN ) / FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * PN ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * Max( ( ( CS - DS ) / CS ),Max( ( RRSe + RMSe ),( CS - MUC ) ) ) ) - DS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) - CS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( ( RMSe / MUR ) + DS ) + Min( MUM ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.034481114243576895}], "26": [{"determining": "( ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ,( ARS * CRS ) ) ) - ( DDR + DDR ) )", "choosing": "( Max( ( Min( CS ,Max( MUM,MUC ) ) + RCSe ),( ( MLU + ( Min( MLU ,( RMSe / RMSe ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RMSe + RMSe ) ) ) ) ) - CS ) ) + Max( ( MUM - Min( RRSe ,MLU ) ),Min( DS ,MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21479865826395328}, {"determining": "( ( ( ( RRS - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( Const * PN ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( Min( ( Max( RRS,FirstVNF_RAM ) * ARS ) ,( MDR - Const ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / MUM ) * CS ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( Min( MUM ,RRSe ) / ( ( ( RCSe - MLU ) * ( RRSe / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( AMS - ( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Const ) ) - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,DDR ) ) ) ) ) - ( ( CRS - Const ) + ( ( RRS + FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU - ( DDR - ( FirstVNF_CPU * Max( MRS,CRS ) ) ) ) + ( ( FirstVNF_CPU * ( ( ACS + FirstVNF_Mem ) / FirstVNF_RAM ) ) * Max( PN,ARS ) ) ) ) ) )", "choosing": "( Max( Max( MUM,RCSe ),( ( MLU + RMSe ) - ( ( RCSe - MLU ) / Min( MUM ,Max( ( Max( MUR,MUC ) / MUM ),MUC ) ) ) ) ) + Max( ( ( ( ( CS * ( ( RRSe + CS ) / RRSe ) ) / ( ( Min( RCSe ,RMSe ) / ( MUM + RCSe ) ) * ( CS * ( CS / MUC ) ) ) ) + RMSe ) + Min( ( RCSe / ( RMSe + RCSe ) ) ,DS ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( RRS + MRS ) ,( MDR - ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( ( ( MLU / MUC ) + Max( MUR,DS ) ) * MUM ) ) ,Max( Max( RMSe,DS ),MUC ) ) + MLU ) ,RCSe ) ,( ( ( RMSe / MLU ) / RCSe ) - RCSe ) )", "obj1": 0.6509635974304069, "obj2": 0.21479865826395328}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( CRS * BR ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( Min( ACS ,FirstVNF_Mem ) * ( MRS - MRS ) ) + Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) + Max( ( MUM + DS ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUM ) / ( MUC / RMSe ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16262622589152173}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,( PN - FirstVNF_Mem_Server ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RMSe + ( RMSe / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,Min( ACS ,FirstVNF_Mem ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - DDR ) ) ,( ARS - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( RRSe / ( ( ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) + Max( ( CS - Min( CS ,MUC ) ),( Min( Max( CS,DS ) ,RRSe ) * MLU ) ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( ( Const + DDR ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ( Min( AMS ,AMS ) - DDR ) + ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,PN ) ) ),Min( BR ,( FirstVNF_CPU + BR ) ) ) )", "choosing": "( ( Min( MLU ,DS ) + ( MUM - Min( RRSe ,MLU ) ) ) + Max( ( ( ( MUR * ( MUC + Max( ( CS * MUR ),MUM ) ) ) / Min( RMSe ,MUM ) ) * RCSe ),( ( ( DS / DS ) + ( Max( MLU,RMSe ) / ( RMSe / RMSe ) ) ) - CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( ( CRS * ( FirstVNF_Mem * AMS ) ) ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( ( BR / RRS ) + FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - BR ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( ( CRS * ARS ) ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,MUM ),( ( MLU + CS ) - Min( ( MUR + ( ( RMSe - MUM ) - ( ( MLU + MUM ) * MUM ) ) ) ,RCSe ) ) ) + Max( ( MLU + DS ),( MUC + ( RCSe / ( ( RMSe / ( ( MUC / CS ) / CS ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04500375317653972}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS - ( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ) ) ) - ( Min( Max( MDR,( ARS - Const ) ) ,ARS ) / ( MRS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.18430055749208246}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( FirstVNF_RAM - ( Max( CRS,BR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( RRSe / RCSe ),( RCSe * ( ( RCSe + MUR ) / Min( RMSe ,Min( ( CS + RRSe ) ,DS ) ) ) ) ) ,( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) )", "obj1": 0.9486081370449678, "obj2": 0.022683763772516966}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.02070122008867116}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( ( RRS + AMS ) - ( ( PN + ACS ) - MDR ) ) * ACS ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - ( RRSe - Min( RRSe ,DS ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - Min( RRSe ,MLU ) ) ) )", "obj1": 0.8886509635974305, "obj2": 0.053109630821825675}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Min( FirstVNF_CPU_Server ,CRS ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( Max( MRS,Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) )", "choosing": "( Max( ( RCSe + RCSe ),( ( ( RMSe / ( CS / Min( ( MLU + RCSe ) ,RRSe ) ) ) - ( MUC / DS ) ) - CS ) ) + Max( Min( MUC ,MUR ),Max( Max( RCSe,( RCSe / DS ) ),RRSe ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06867523149530214}, {"determining": "( Min( ( CRS * ARS ) ,( ( MDR / MRS ) / ACS ) ) - ( Min( CRS ,Const ) + ( FirstVNF_CPU + ( ( ( ( Const + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( CS / MUM ) - RCSe ) - ( MLU + Min( CS ,RRSe ) ) ) + Min( CS ,( ( RRSe / ( MLU * RRSe ) ) / RCSe ) ) ) - MUM ) ) * MUC )", "obj1": 0.7922912205567452, "obj2": 0.10296995276521294}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - PN ) ) ) ) + ( ( RRS * PN ) / Min( Min( FirstVNF_RAM_Server ,( ( AMS - FirstVNF_CPU_Server ) * MDR ) ) ,( Const / ( DDR / ( ARS * MRS ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUC - Max( Max( MLU,( RCSe * MUC ) ),( Max( MUR,MUR ) * ( ( Max( CS,MUM ) + ( MUR + MLU ) ) + ( ( RMSe - MUC ) - RMSe ) ) ) ) ) ) + Max( Min( MUC ,RCSe ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),( ACS / FirstVNF_RAM ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC + ( MUC * RMSe ) ) ,( ( ( MUM / ( Min( ( MUC / MLU ) ,( CS / MUM ) ) / Min( RRSe ,Max( RMSe,RCSe ) ) ) ) / MLU ) + MUC ) ) + ( RMSe / ( MUC - ( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( AMS - DDR ) - ( ( ( Const / AMS ) + ( RRS / MDR ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( ACS * RRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( CS * ( MUM / MUC ) ) - ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( ( CS - DS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUC + RMSe ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( Min( MRS ,( ARS * CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,( CRS + CRS ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( ( Max( ( CS + ( ( MLU / MUC ) - Max( MUM,RMSe ) ) ),RMSe ) + RMSe ) * DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( BR / FirstVNF_RAM ) - CRS ) - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,BR ) ) - Min( FirstVNF_RAM ,BR ) ) ) ) )", "choosing": "( Min( Min( ( ( MUC + MUM ) + DS ) ,( ( ( RRSe + MLU ) + ( MUR - ( ( CS + MUM ) + RRSe ) ) ) / MLU ) ) ,( Max( ( ( RRSe * RMSe ) + Max( Min( Max( MUM,RMSe ) ,( DS + RCSe ) ),( ( RRSe * MUM ) + CS ) ) ),Max( MLU,RCSe ) ) - DS ) ) + ( RRSe / ( Min( Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * MLU ) ,CS ) ) ,( ( MLU - RMSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07903302093109636}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ARS * ( ( ( PN * PN ) / Min( ACS ,MRS ) ) - Max( DDR,CRS ) ) ) / ( BR - ( ( ( ( PN * PN ) / Min( ( RRS - FirstVNF_CPU ) ,ACS ) ) - Max( DDR,CRS ) ) - CRS ) ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( CS + MUM ) - MLU ) * RMSe ) - DS ) - MUM ) ) * ( RRSe / CS ) ) + ( RRSe / RCSe ) )", "obj1": 0.7965738758029979, "obj2": 0.10058620555502652}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * Const ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( Min( FirstVNF_RAM ,Const ) * ACS ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( DS - RCSe ) - RCSe ) + RCSe ) ) + ( ( MLU - RRSe ) * MUM ) ) * MUC )", "obj1": 0.8244111349036403, "obj2": 0.08556520324879002}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,MRS ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( PN / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( Max( PN,ACS ) ,RRS ) * ( ARS * FirstVNF_CPU_Server ) ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( MUR - MUC ) ) ,MUC ) ) + ( RCSe / ( ( RRSe / MUM ) * ( MUC / RCSe ) ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14320121385586693}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( ( ( Min( ( FirstVNF_RAM_Server / Const ) ,FirstVNF_Mem ) * MRS ) / BR ) * MRS ) - ( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( Min( MUM ,RCSe ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( CS - MLU ) ) ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14751038104518993}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,RCSe ) + ( RCSe * Min( MUR ,Max( RMSe,MUC ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09698071317545862}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( ( CRS - Const ) + FirstVNF_Mem ) - ( Max( MDR,MDR ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) - Min( Min( PN ,FirstVNF_Mem_Server ) ,Const ) )", "choosing": "( ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) * ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( Min( MLU ,Max( Min( CS ,CS ),( DS * RRSe ) ) ) / RRSe ) ) - MLU ) ) + ( ( MUM + RCSe ) + ( ( MUM * MUM ) * RMSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10932327704583977}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( Max( FirstVNF_CPU,AMS ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Min( MUM ,DS ),( ( Max( ( CS + ( ( MLU / RMSe ) - MUM ) ),RMSe ) + RMSe ) - CS ) ) + ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - DS ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) / ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10729541060193881}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( ( RRS - FirstVNF_CPU ) - AMS ) ) ,PN ) ) / ( ( ARS * RRS ) * ( PN / Max( ( ( ACS * ( FirstVNF_CPU_Server - AMS ) ) / ( FirstVNF_RAM / ( BR - FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,Min( Min( ( Max( RCSe,CS ) * Min( MUR ,MUC ) ) ,Min( Min( DS ,( MUM - RMSe ) ) ,RMSe ) ) ,RMSe ) ) + ( Max( DS,MLU ) / MUR ) )", "obj1": 0.8458244111349036, "obj2": 0.07634108306466689}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem_Server * PN ),( CRS + ARS ) ) / Max( ( RRS - ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( DDR / ACS ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),DS ) ) + RMSe ) - ( ( MLU - RRSe ) * Min( RCSe ,MLU ) ) ) + Min( ( Max( ( MUC * RMSe ),( ( RRSe + ( MUM + RCSe ) ) / CS ) ) * ( DS * ( DS / RMSe ) ) ) ,RCSe ) )", "obj1": 0.7687366167023555, "obj2": 0.11550828590172323}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,DDR ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( CS * ( MUC / RRSe ) ) ) ) + ( DS * MLU ) ) ) ) * MUC )", "obj1": 0.9250535331905781, "obj2": 0.035321987941091135}, {"determining": "( ( AMS - MDR ) - Min( Max( ( ( MRS + ACS ) - FirstVNF_RAM ),( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( MUC ,RMSe ) + ( ( ( MLU / MLU ) * MUC ) - Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),( ( ( ( MUC + MUR ) / ( MUC - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13238535161253467}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( PN / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( CS,DS ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10500368210854272}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) ,( ( ( Min( RRS ,Max( FirstVNF_Mem_Server,( FirstVNF_RAM_Server + BR ) ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( ( ( ( CS * Max( ( ( CS - DS ) / CS ),Max( ( RMSe + RRSe ),( CS - MUC ) ) ) ) - DS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) - CS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) / MUC ) ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.1384121933992136}, {"determining": "( ( AMS - AMS ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0018724135383203408}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,CS ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR - ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( CRS + ARS ),( FirstVNF_Mem_Server * PN ) ) / Max( ( RRS / ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - PN ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( AMS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUR ) - CS ) + Min( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) ,RCSe ) )", "obj1": 0.721627408993576, "obj2": 0.1396842147843895}, {"determining": "( ( ( CRS - ( ( FirstVNF_CPU * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU / ( Max( ( RRS + PN ),( ( ACS * FirstVNF_Mem_Server ) * BR ) ) + ( ( CRS * PN ) / ( AMS - MRS ) ) ) ) ) - ( AMS * Min( FirstVNF_RAM ,Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM - RRSe ) + RMSe ) ,( MUC * Min( ( ( MLU - ( RCSe - MUC ) ) + MUC ) ,( RCSe - RRSe ) ) ) ) * Max( Max( ( Min( RRSe ,( ( MUR - RMSe ) / DS ) ) / RRSe ),( RCSe * ( CS * Min( ( MUR - RMSe ) ,MUC ) ) ) ),( MLU * ( ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) ) ) ) * ( Min( DS ,RCSe ) - MUM ) )", "obj1": 0.9678800856531049, "obj2": 0.0154417967447389}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( ( Min( CRS ,ACS ) / ARS ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( MDR - ( ( ( ( PN * PN ) / ( AMS * ACS ) ) - Max( DDR,CRS ) ) - DDR ) ) ) ) )", "choosing": "( ( MUM + RCSe ) + ( ( Min( RMSe ,MUC ) * Max( ( RCSe - MUR ),RRSe ) ) + Max( RMSe,( RCSe + ( ( RMSe / ( CS / ( RCSe - MUR ) ) ) - ( DS * MUC ) ) ) ) ) )", "obj1": 0.987152034261242, "obj2": 0.00660166972191445}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( Max( ( Min( ( DDR / RRS ) ,Const ) * FirstVNF_Mem ),Min( FirstVNF_Mem ,( Max( DDR,FirstVNF_RAM ) - PN ) ) ) - MRS ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUC / RRSe ) * RRSe )", "obj1": 0.9914346895074947, "obj2": 0.00384509975237769}, {"determining": "( ( ( PN * PN ) / Min( ACS ,ACS ) ) - ( ( ( ( PN * PN ) / Min( ( RRS * ( BR / FirstVNF_RAM_Server ) ) ,MRS ) ) * Max( DDR,CRS ) ) * ( CRS - ( Const - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + MUM ) + ( RRSe / ( ( Max( RMSe,( MLU + Min( ( MUM + MUM ) ,( DS - DS ) ) ) ) - ( ( ( RCSe + MLU ) / ( ( RRSe * RMSe ) - CS ) ) * MUM ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( RRS * ( ( FirstVNF_RAM_Server + DDR ) / CRS ) ),DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( MUR * RMSe ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - MUR ) / ( Min( Min( CS ,MLU ) ,( ( MUR - MUM ) / ( RRSe / RMSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.07688270782256065}, {"determining": "( Min( MRS ,( ARS * CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Max( MRS,ARS ) ) - PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / RMSe ) - MUR ) ,DS ) - ( ( ( MLU / MUM ) - MUM ) + MUC ) ) ,Max( ( RRSe - RCSe ),( Min( Min( ( MUR - RRSe ) ,MUM ) ,( RRSe / MUM ) ) * DS ) ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( PN - ( FirstVNF_CPU + ( ( RRS - RRS ) + ( ( Min( Max( ( RRS * ACS ),( CRS + Const ) ) ,( MDR - FirstVNF_CPU_Server ) ) * PN ) / Max( ( ( AMS + ( CRS / ACS ) ) * PN ),AMS ) ) ) ) )", "choosing": "Min( ( CS - MUM ) ,( Max( ( Max( MUR,MUM ) + Min( ( MUR / MUM ) ,Max( DS,RCSe ) ) ),RCSe ) / RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03055798806702105}, {"determining": "( ( AMS - DDR ) - ( ( ( Min( CRS ,ACS ) / ARS ) + ( ( ( Max( Const,( FirstVNF_CPU_Server / ACS ) ) * PN ) * FirstVNF_RAM ) / ( MDR - Min( AMS ,DDR ) ) ) ) + ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + Max( ( RRS * PN ),( CRS + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( ( MLU + RMSe ) - CS ) ) + Max( MUM,( ( ( Max( ( MUM / CS ),CS ) / ( MLU - ( Max( MUM,DS ) * CS ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),CRS ) ) ,Min( Min( MRS ,( CRS * ARS ) ) ,( DDR * MDR ) ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( RMSe + MUM ),( ( Min( RMSe ,DS ) + Max( Max( MUM,RMSe ),RMSe ) ) / Max( ( Min( RRSe ,( ( RRSe - RMSe ) - ( MLU + MUM ) ) ) * MLU ),( RCSe - Min( MLU ,MUR ) ) ) ) ) + ( ( Max( MUC,RMSe ) + RRSe ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7537473233404711, "obj2": 0.1240482876724804}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( DS / ( RMSe / RRSe ) ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - MUC ) ) ) + ( DS * MLU ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07361890616614923}, {"determining": "( PN - ( RRS + ( ( MDR - FirstVNF_CPU_Server ) + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( RCSe + CS ) ,RCSe ) + ( RMSe / RCSe ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( FirstVNF_CPU_Server / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RMSe ),( ( RMSe / RRSe ) / DS ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625957}, {"determining": "( ( AMS - DDR ) - Min( ( Min( ( PN + ( Max( ARS,FirstVNF_CPU_Server ) / ACS ) ) ,ACS ) - ( ( ( ( Min( PN ,MDR ) * DDR ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * ( CS + MUM ) ) - Max( ( ( ( RCSe * RRSe ) * ( Min( ( CS + MLU ) ,Min( CS ,CS ) ) / ( ( CS - RMSe ) - ( CS - MUC ) ) ) ) - RCSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.9336188436830836, "obj2": 0.033223190056743075}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( MRS * ( ( Min( Max( ARS,MRS ) ,( PN + PN ) ) * FirstVNF_Mem_Server ) / BR ) ) - ( ( Max( DDR,CRS ) + ( ( BR + ARS ) / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS + MRS ) ) - DDR ) ) ) ) ,( ( ( Min( MRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14479245195655024}, {"determining": "( ( ( CRS / ACS ) - DDR ) - ( ( ( AMS / FirstVNF_RAM ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) - ( ( ( ( Max( FirstVNF_CPU,PN ) / FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * PN ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * Max( ( ( CS - DS ) / CS ),Max( ( RRSe + RMSe ),( CS - MUC ) ) ) ) - DS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) - CS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( ( RMSe / MUR ) + DS ) + Min( MUM ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.034481114243576895}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( ( RRS * PN ),( CRS + CRS ) ) ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * ACS ) / Max( BR,AMS ) ) ) ) )", "choosing": "( Max( ( MUM + CS ),( ( Max( ( CS + ( ( RRSe - RCSe ) - Max( MUM,RMSe ) ) ),RMSe ) + RMSe ) - CS ) ) + ( ( MUM * ( ( RCSe + DS ) / ( RCSe / Max( ( RCSe - RRSe ),DS ) ) ) ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( CRS * ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( ( AMS + ( BR / ACS ) ) * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + Max( RRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUR + DS ) ,Max( Min( RRSe ,RCSe ),( Min( Min( ( MUR - RRSe ) ,MUM ) ,( RMSe / RRSe ) ) * DS ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( RRS,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( RMSe + ( RMSe / ( ( ( RCSe + MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14484851237512394}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8501070663811563, "obj2": 0.0730435905630034}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( FirstVNF_Mem_Server * DDR ) ) + ( ( PN * FirstVNF_Mem_Server ) / ( ARS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( Min( CRS ,ARS ) ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( MUR ,CS ) ) ) ) - ( RMSe + ( MUR - ( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ) ) / CS ) * ( DS + ( CS / MUR ) ) )", "obj1": 0.8972162740899358, "obj2": 0.05011734083129198}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * Min( DDR ,Const ) ) / BR ) * MRS ),( ( MDR - ( ( RRS * ( MRS - AMS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),( MUC / MUC ) ) + Max( ( MUM + DS ),( MUC + ( MUC + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1360145312841889}, {"determining": "( ( AMS - DDR ) - ( ( Max( Const,ARS ) / PN ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( AMS + ( BR / ACS ) ),PN ) * FirstVNF_RAM ) / ( FirstVNF_CPU - RRS ) ) ) ) )", "choosing": "( Max( ( MUM + RMSe ),( ( Min( RMSe ,DS ) + Max( Max( MUM,RMSe ),RMSe ) ) / MUR ) ) + ( ( Max( MUC,RMSe ) + RRSe ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7601713062098501, "obj2": 0.118976346100128}, {"determining": "( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) / Max( ( RRS / ( ( RRS - ARS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( ACS ,Max( ( Const - MDR ),( AMS * Max( FirstVNF_CPU,( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) - ( ( FirstVNF_Mem - ( ACS * Min( RRS ,MDR ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.09889585072700044}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.867237687366167, "obj2": 0.06375195210034096}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) * ARS ) ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( RRSe * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - ( ( ( DS - MUC ) + RRSe ) - CS ) ) ) ) + CS ) * ( ( ( MUM / MUC ) * CS ) / ( ( ( MLU - RCSe ) * ( RRSe / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03765677617143672}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( Max( DDR,CRS ) - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( FirstVNF_Mem_Server,CRS ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) + Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),( ( ( ( ( MUR * RMSe ) / DS ) / ( MUC - Min( CS ,MUR ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.728051391862955, "obj2": 0.13673917937989133}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,PN ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( ( RRS * ACS ) / ( Min( FirstVNF_Mem_Server ,PN ) + RRS ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUC / MUM ) * CS ) / ( ( ( MLU - MUR ) * ( ( ( RRSe + DS ) / ( RRSe - Min( RRSe ,DS ) ) ) / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11066025792206194}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Min( FirstVNF_Mem ,Const ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) ) ) )", "obj1": 0.8993576017130621, "obj2": 0.04805417547773178}, {"determining": "( ( FirstVNF_Mem * PN ) - ( Max( AMS,AMS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( ( ( DS / ( ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) + MUR ) ) + CS ) * ( Min( MUR ,( ( MUC / MLU ) - ( MUM * MLU ) ) ) / ( ( ( ( CS + ( DS + ( CS + RMSe ) ) ) / CS ) * ( RCSe / RRSe ) ) + MLU ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( ( ( ( ARS / AMS ) * ACS ) / ACS ) - ( Const / RRS ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( ( Min( CRS ,ACS ) / ARS ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( MDR - ( AMS - DDR ) ) ) ) )", "choosing": "( ( MUM + RCSe ) + ( ( Min( RMSe ,MUC ) * Max( ( RCSe - MUR ),RRSe ) ) + Max( RMSe,( ( RCSe * RMSe ) / RCSe ) ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04160571489317434}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + Max( ( RRS * PN ),( CRS + CRS ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( Max( MLU,RCSe ) - RRSe ) + Max( ( MUR - CS ),RMSe ) ) * MUR )", "obj1": 0.7623126338329764, "obj2": 0.11825815667156432}, {"determining": "( ( ( MDR - ACS ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( ( ARS - FirstVNF_Mem_Server ) - Min( Min( Max( BR,Max( ( FirstVNF_Mem_Server / MRS ),MRS ) ) ,Max( RRS,Max( FirstVNF_RAM,( MRS * ACS ) ) ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( MUR + RCSe ) + Max( MUM,( ( ( ( Max( DS,RCSe ) / ( RCSe - MUM ) ) * ( MUC - MUR ) ) - MUM ) + DS ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( BR - MDR ) - Min( ( Min( MRS ,ACS ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / MLU ),RCSe ) - ( MUC * MUR ) ) + RMSe )", "obj1": 0.7580299785867237, "obj2": 0.12084723780119266}, {"determining": "( Min( Min( Const ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( ( ( FirstVNF_RAM / ( FirstVNF_CPU / ( DDR - Max( ( FirstVNF_Mem * AMS ),FirstVNF_CPU ) ) ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( ( Min( MUC ,CS ) * ( DS * DS ) ) ,MLU ) - ( ( ( MLU - MLU ) - ( Min( MLU ,RCSe ) * MUC ) ) + Min( MUC ,DS ) ) ) + ( ( ( ( DS + RCSe ) + ( RCSe / Max( MUM,RRSe ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( MDR - ( AMS - DDR ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( CS - MUM ) ,( Max( ( Max( MUR,MUM ) + Min( ( MUR / MUM ) ,Max( DS,RCSe ) ) ),RCSe ) / RRSe ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( AMS - DDR ) - Min( ( Min( MRS ,ACS ) - ( ( ( ( PN * PN ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( ( MLU - RRSe ) / MUM ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( ( MUC * MLU ) / Min( RCSe ,MUR ) ) / ( ( MLU - RMSe ) - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009193915904661206}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( CRS + ARS ),( FirstVNF_Mem_Server * PN ) ) / Max( ( RRS / ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( PN + ( ( RRS - FirstVNF_CPU ) / ACS ) ) * PN ) / FirstVNF_RAM ) * ( Max( AMS,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( MUC + MUR ) / CS ) * MUM ) - RCSe ) ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13414019495512716}, {"determining": "( PN - ( Max( CRS,PN ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( Max( PN,ACS ) ,Min( FirstVNF_Mem_Server ,MDR ) ) * ACS ) / Max( BR,AMS ) ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUR - MUC ) - Min( RRSe ,MUC ) ),DS ) ) + CS ) - CS ) + Min( MLU ,Max( RCSe,MLU ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( PN - Min( ( ( MDR + ( AMS - ( ( RRS * PN ) / CRS ) ) ) - ( ( ( PN * PN ) / ( AMS + ( BR / ACS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,( CRS + DDR ) ) )", "choosing": "Min( ( ( Max( MUM,MUC ) * ( Min( CS ,( ( ( CS / MUC ) * RRSe ) * RRSe ) ) / ( CS + MUM ) ) ) - MUM ) ,Max( Max( ( CS * MUC ),RCSe ),RRSe ) )", "obj1": 0.9635974304068522, "obj2": 0.01597914313640098}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( PN * ( RRS - ( MDR / PN ) ) ) / Min( ACS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) ) / ( MDR * ARS ) ) - Min( FirstVNF_CPU_Server ,( ( AMS * ACS ) / ( ( ( DDR - Const ) * FirstVNF_RAM_Server ) + RRS ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( MUC + ( MUR - MLU ) ) ) + CS ) * ( Max( ( MUR / MUM ),( ( MUC * ( DS / DS ) ) * ( ( MUR + MLU ) * Min( Min( ( MUM + MUC ) ,MLU ) ,( RRSe / Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( Min( Max( MUC,( Max( RRSe,MLU ) * RRSe ) ) ,RCSe ) * MUC ),RRSe ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11169673736695913}, {"determining": "( ( MRS / ( ( AMS - ACS ) + FirstVNF_RAM ) ) - ( ( ( RRS + AMS ) - ( ( PN + ACS ) - MDR ) ) * ACS ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( Min( ( ( MUC / DS ) - MUM ) ,DS ) - RMSe ) ) - CS ) ) + ( RCSe + ( MUM * Min( Max( DS,MUM ) ,MUM ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06141865686504652}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) + ( FirstVNF_CPU + ( ( ( AMS + ( CRS / ACS ) ) * PN ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - MUC ) ) ) + ( DS * Max( MUR,MUM ) ) ) ) ) * MUC )", "obj1": 0.9207708779443254, "obj2": 0.03772126428634335}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server - ACS ) ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - RRS ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( MUM - RCSe ) - ( Min( RRSe ,RCSe ) / MUC ) ) + RCSe ) ) + Max( RMSe,( ( MUR + Min( ( RMSe / ( RCSe * DS ) ) ,DS ) ) + DS ) ) ) * MUC )", "obj1": 0.8265524625267666, "obj2": 0.08452872380389284}], "27": [{"determining": "( ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ,( ARS * CRS ) ) ) - ( DDR + DDR ) )", "choosing": "( Max( ( Min( CS ,Max( MUM,MUC ) ) + RCSe ),( ( MLU + ( Min( MLU ,( RMSe / RMSe ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RMSe + RMSe ) ) ) ) ) - CS ) ) + Max( ( MUM - Min( RRSe ,MLU ) ),Min( DS ,MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21479865826395328}, {"determining": "( ( AMS - ARS ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MUC + RMSe ) - CS ) ) + ( ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe + ( RMSe * CS ) ) ) ,DS ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( Const * PN ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( Min( ( Max( RRS,FirstVNF_RAM ) * ARS ) ,( MDR - Const ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / MUM ) * CS ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( Min( MUM ,RRSe ) / ( ( ( RCSe - MLU ) * ( RRSe / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( RRS + MRS ) ,( MDR - ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( ( ( MLU / MUC ) + Max( MUR,DS ) ) * MUM ) ) ,Max( Max( RMSe,DS ),MUC ) ) + MLU ) ,RCSe ) ,( ( ( RMSe / MLU ) / RCSe ) - RCSe ) )", "obj1": 0.6509635974304069, "obj2": 0.21479865826395328}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( CRS * BR ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( Min( ACS ,FirstVNF_Mem ) * ( MRS - MRS ) ) + Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) + Max( ( MUM + DS ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUM ) / ( MUC / RMSe ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16262622589152173}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - DDR ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RMSe + ( ( ( ( MLU - RRSe ) / MUM ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( ( MUC * MLU ) / Min( RCSe ,MUR ) ) / ( ( MLU - RMSe ) - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,( PN - FirstVNF_Mem_Server ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RMSe + ( RMSe / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS - ( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ) ) ) - ( Min( Max( MDR,( ARS - Const ) ) ,ARS ) / ( MRS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.18430055749208246}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,RCSe ) + ( RCSe * Min( MUR ,Max( RMSe,MUC ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09698071317545862}, {"determining": "( FirstVNF_RAM - ( Max( CRS,BR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( RRSe / RCSe ),( RCSe * ( ( RCSe + MUR ) / Min( RMSe ,Min( ( CS + RRSe ) ,DS ) ) ) ) ) ,( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) )", "obj1": 0.9486081370449678, "obj2": 0.022683763772516966}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.02070122008867116}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( ( RRS + AMS ) - ( ( PN + ACS ) - MDR ) ) * ACS ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - ( RRSe - Min( RRSe ,DS ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - Min( RRSe ,MLU ) ) ) )", "obj1": 0.8886509635974305, "obj2": 0.053109630821825675}, {"determining": "( ( CRS + ( RRS * RRS ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( MDR - FirstVNF_CPU_Server ),( ( PN * PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( Max( BR,Min( ACS ,BR ) ) ,BR ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) + Max( ( ( Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) + MLU ) - CS ),( MUM + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1153020038080135}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - PN ) ) ) ) + ( ( RRS * PN ) / Min( Min( FirstVNF_RAM_Server ,( ( AMS - FirstVNF_CPU_Server ) * MDR ) ) ,( Const / ( DDR / ( ARS * MRS ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUC - Max( Max( MLU,( RCSe * MUC ) ),( Max( MUR,MUR ) * ( ( Max( CS,MUM ) + ( MUR + MLU ) ) + ( ( RMSe - MUC ) - RMSe ) ) ) ) ) ) + Max( Min( MUC ,RCSe ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( ( Const + DDR ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ( Min( AMS ,AMS ) - DDR ) + ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,PN ) ) ),Min( BR ,( FirstVNF_CPU + BR ) ) ) )", "choosing": "( ( Min( MLU ,DS ) + ( MUM - Min( RRSe ,MLU ) ) ) + Max( ( ( ( MUR * ( MUC + Max( ( CS * MUR ),MUM ) ) ) / Min( RMSe ,MUM ) ) * RCSe ),( ( ( DS / DS ) + ( Max( MLU,RMSe ) / ( RMSe / RMSe ) ) ) - CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( FirstVNF_Mem * PN ) - ( Max( AMS,AMS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( ( ( DS / ( ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) + MUR ) ) + CS ) * ( Min( MUR ,( ( MUC / MLU ) - ( MUM * MLU ) ) ) / ( ( ( ( CS + ( DS + ( CS + RMSe ) ) ) / CS ) * ( RCSe / RRSe ) ) + MLU ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( ( ( ( ARS / AMS ) * ACS ) / ACS ) - ( Const / RRS ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( ( CRS / Const ) - ( ( PN * FirstVNF_Mem ) / ( RRS - RRS ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,( RRS * Const ) ) ) )", "choosing": "( ( ( RCSe * ( RMSe + MLU ) ) / DS ) + Max( ( MUM + DS ),( MUC / ( RCSe + ( ( RMSe / Min( CS ,Max( DS,MUM ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( AMS - DDR ) - ( ( ( Const / AMS ) + ( RRS / MDR ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( ACS * RRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( CS * ( MUM / MUC ) ) - ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( ( CS - DS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUC + RMSe ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( Min( Min( Const ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( ( ( FirstVNF_RAM / ( FirstVNF_CPU / ( DDR - Max( ( FirstVNF_Mem * AMS ),FirstVNF_CPU ) ) ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( ( Min( MUC ,CS ) * ( DS * DS ) ) ,MLU ) - ( ( ( MLU - MLU ) - ( Min( MLU ,RCSe ) * MUC ) ) + Min( MUC ,DS ) ) ) + ( ( ( ( DS + RCSe ) + ( RCSe / Max( MUM,RRSe ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( ( CRS * ( FirstVNF_Mem * AMS ) ) ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( ( BR / RRS ) + FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - BR ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( ( CRS * ARS ) ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,MUM ),( ( MLU + CS ) - Min( ( MUR + ( ( RMSe - MUM ) - ( ( MLU + MUM ) * MUM ) ) ) ,RCSe ) ) ) + Max( ( MLU + DS ),( MUC + ( RCSe / ( ( RMSe / ( ( MUC / CS ) / CS ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04500375317653972}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( ( ( FirstVNF_RAM_Server * Max( FirstVNF_CPU,PN ) ) * Const ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) ,Max( ( RRS * PN ),( CRS + CRS ) ) ) ) ) + ( ( Min( CRS ,ACS ) / ARS ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( MDR - ( AMS - DDR ) ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( ( MLU + RMSe ) - CS ) ) + Min( ( ( CS * Min( RRSe ,( ( RRSe / Min( MUC ,RCSe ) ) + Max( RRSe,MUM ) ) ) ) + ( ( ( Min( ( RMSe / RCSe ) ,MUR ) / MUC ) / ( RMSe * DS ) ) + Max( MUC,MLU ) ) ) ,( MUR - MUC ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ARS * ( ( ( PN * PN ) / Min( ACS ,MRS ) ) - Max( DDR,CRS ) ) ) / ( BR - ( ( ( ( PN * PN ) / Min( ( RRS - FirstVNF_CPU ) ,ACS ) ) - Max( DDR,CRS ) ) - CRS ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( CS / Min( MUC ,RRSe ) ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10044725153660766}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( MDR - ( AMS - DDR ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( CS - MUM ) ,( Max( ( Max( MUR,MUM ) + Min( ( MUR / MUM ) ,Max( DS,RCSe ) ) ),RCSe ) / RRSe ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * Const ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( Min( FirstVNF_RAM ,Const ) * ACS ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( DS - RCSe ) - RCSe ) + RCSe ) ) + ( ( MLU - RRSe ) * MUM ) ) * MUC )", "obj1": 0.8244111349036403, "obj2": 0.08556520324879002}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Max( CS,DS ) ) - MUM ),DS ) ) + RMSe ) - CS ) + Min( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) ,RCSe ) )", "obj1": 0.8629550321199143, "obj2": 0.06707090764769245}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,MRS ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / MRS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( ( MLU - RRSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.7323340471092077, "obj2": 0.1340995338645569}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( CRS + ARS ),( FirstVNF_Mem_Server * PN ) ) / Max( ( RRS / ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - PN ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( AMS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUR ) - CS ) + Min( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) ,RCSe ) )", "obj1": 0.721627408993576, "obj2": 0.1396842147843895}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( Max( BR,BR ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Max( RMSe,Max( DS,DS ) ) / ( Max( RMSe,( MUR - CS ) ) + ( ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * ( DS * Max( RRSe,( MUC + DS ) ) ) ) - MUR ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14607184164731712}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) / Max( ( RRS / ( ( RRS - ARS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( ACS ,Max( ( Const - MDR ),( AMS * Max( FirstVNF_CPU,( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) - ( ( FirstVNF_Mem - ( ACS * Min( RRS ,MDR ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.09889585072700044}, {"determining": "( Min( ( CRS * ARS ) ,( ( MDR / MRS ) / ACS ) ) - ( Min( CRS ,Const ) + ( FirstVNF_CPU + ( ( ( ( Const + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( CS / MUM ) - RCSe ) - ( MLU + Min( CS ,RRSe ) ) ) + Min( CS ,( ( RRSe / ( MLU * RRSe ) ) / RCSe ) ) ) - MUM ) ) * MUC )", "obj1": 0.7922912205567452, "obj2": 0.10296995276521294}, {"determining": "( ( ( CRS / ACS ) - DDR ) - ( ( ( AMS / FirstVNF_RAM ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) - ( ( ( ( Max( FirstVNF_CPU,PN ) / FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * PN ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * Max( ( ( CS - DS ) / CS ),Max( ( RRSe + RMSe ),( CS - MUC ) ) ) ) - DS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) - CS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( ( RMSe / MUR ) + DS ) + Min( MUM ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.034481114243576895}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,MRS ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * FirstVNF_CPU ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + ( MUR * MUC ) ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.7173447537473233, "obj2": 0.1427651791746739}, {"determining": "( ( ( ( CRS - Const ) + FirstVNF_Mem ) - ( Max( MDR,MDR ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) - Min( Min( PN ,FirstVNF_Mem_Server ) ,Const ) )", "choosing": "( ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) * ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( Min( MLU ,Max( Min( CS ,CS ),( DS * RRSe ) ) ) / RRSe ) ) - MLU ) ) + ( ( MUM + RCSe ) + ( ( MUM * MUM ) * RMSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10932327704583977}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) - ( ( RRS - FirstVNF_CPU ) - AMS ) ) ,PN ) ) / ( ( ARS * RRS ) * ( PN / Max( ( ( ACS * ( FirstVNF_CPU_Server - AMS ) ) / ( FirstVNF_RAM / ( BR - FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,Min( Min( ( Max( RCSe,CS ) * Min( MUR ,MUC ) ) ,Min( Min( DS ,( MUM - RMSe ) ) ,RMSe ) ) ,RMSe ) ) + ( Max( DS,MLU ) / MUR ) )", "obj1": 0.8458244111349036, "obj2": 0.07634108306466689}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),( ACS / FirstVNF_RAM ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC + ( MUC * RMSe ) ) ,( ( ( MUM / ( Min( ( MUC / MLU ) ,( CS / MUM ) ) / Min( RRSe ,Max( RMSe,RCSe ) ) ) ) / MLU ) + MUC ) ) + ( RMSe / ( MUC - ( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( ( CRS - ( ( FirstVNF_CPU * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU / ( Max( ( RRS + PN ),( ( ACS * FirstVNF_Mem_Server ) * BR ) ) + ( ( CRS * PN ) / ( AMS - MRS ) ) ) ) ) - ( AMS * Min( FirstVNF_RAM ,Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( ( MUM - RRSe ) + RMSe ) ,( MUC * Min( ( ( MLU - ( RCSe - MUC ) ) + MUC ) ,( RCSe - RRSe ) ) ) ) * Max( Max( ( Min( RRSe ,( ( MUR - RMSe ) / DS ) ) / RRSe ),( RCSe * ( CS * Min( ( MUR - RMSe ) ,MUC ) ) ) ),( MLU * ( ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) ) ) ) * ( Min( DS ,RCSe ) - MUM ) )", "obj1": 0.9678800856531049, "obj2": 0.0154417967447389}, {"determining": "( ( ( MDR - ACS ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( ( ARS - FirstVNF_Mem_Server ) - Min( Min( Max( BR,Max( ( FirstVNF_Mem_Server / MRS ),MRS ) ) ,Max( RRS,Max( FirstVNF_RAM,( MRS * ACS ) ) ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( MUR + RCSe ) + Max( MUM,( ( ( ( Max( DS,RCSe ) / ( RCSe - MUM ) ) * ( MUC - MUR ) ) - MUM ) + DS ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( RRS * ( ( FirstVNF_RAM_Server + DDR ) / CRS ) ),DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( MUR * RMSe ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - MUR ) / ( Min( Min( CS ,MLU ) ,( ( MUR - MUM ) / ( RRSe / RMSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.07688270782256065}, {"determining": "( Min( MRS ,( ARS * CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Max( MRS,ARS ) ) - PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / RMSe ) - MUR ) ,DS ) - ( ( ( MLU / MUM ) - MUM ) + MUC ) ) ,Max( ( RRSe - RCSe ),( Min( Min( ( MUR - RRSe ) ,MUM ) ,( RRSe / MUM ) ) * DS ) ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( PN - ( FirstVNF_CPU + ( ( RRS - RRS ) + ( ( Min( Max( ( RRS * ACS ),( CRS + Const ) ) ,( MDR - FirstVNF_CPU_Server ) ) * PN ) / Max( ( ( AMS + ( CRS / ACS ) ) * PN ),AMS ) ) ) ) )", "choosing": "Min( ( CS - MUM ) ,( Max( ( Max( MUR,MUM ) + Min( ( MUR / MUM ) ,Max( DS,RCSe ) ) ),RCSe ) / RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03055798806702105}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( ACS / BR ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( MRS / ARS ) + CRS ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( MUM - RCSe ) - RCSe ) + ( MUC / Max( RCSe,( ( RMSe * CS ) / RRSe ) ) ) ) ) + Max( RMSe,( ( MUR + Min( ( RCSe / ( RCSe * DS ) ) ,DS ) ) + DS ) ) ) * MUC )", "obj1": 0.8265524625267666, "obj2": 0.08452872380389284}, {"determining": "( ( ( PN * PN ) / Min( ACS ,ACS ) ) - ( ( ( ( PN * PN ) / Min( ( RRS * ( BR / FirstVNF_RAM_Server ) ) ,MRS ) ) * Max( DDR,CRS ) ) * ( CRS - ( Const - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + MUM ) + ( RRSe / ( ( Max( RMSe,( MLU + Min( ( MUM + MUM ) ,( DS - DS ) ) ) ) - ( ( ( RCSe + MLU ) / ( ( RRSe * RMSe ) - CS ) ) * MUM ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,DDR ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( ARS * ACS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( Max( ( MUM + MUC ),( ( MUM - ( ( RMSe + RRSe ) * RMSe ) ) + CS ) ) + ( ( MUM - ( DS - ( CS * ( MUC / RRSe ) ) ) ) + ( DS * MLU ) ) ) ) * MUC )", "obj1": 0.9250535331905781, "obj2": 0.03532198794109113}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( DS + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06953431263103749}, {"determining": "( ( ( PN * ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( ( ( FirstVNF_CPU / MDR ) - ( FirstVNF_CPU_Server - CRS ) ) + ARS ),( FirstVNF_Mem_Server * PN ) ) / Max( ( RRS / ( Min( Const ,DDR ) / Min( FirstVNF_CPU_Server ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,Min( ARS ,MRS ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( PN + ( ( RRS - FirstVNF_CPU ) / ACS ) ) * PN ) / AMS ) * ( Max( AMS,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( ( ( ( ( RRSe + ( MUM + MUR ) ) / CS ) * MUM ) - RCSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.9100642398286938, "obj2": 0.04485273504365253}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( PN - ( RRS + ( ( MDR - FirstVNF_CPU_Server ) + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( RCSe + CS ) ,RCSe ) + ( RMSe / RCSe ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,MRS ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) * MUC )", "obj1": 0.9164882226980728, "obj2": 0.04003433005119974}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) + ( FirstVNF_CPU + ( ( ( AMS + ( CRS / ACS ) ) * PN ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - MUC ) ) ) + ( DS * Max( MUR,MUM ) ) ) ) ) * MUC )", "obj1": 0.9207708779443254, "obj2": 0.03772126428634334}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),CRS ) ) ,Min( Min( MRS ,( CRS * ARS ) ) ,( DDR * MDR ) ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( RMSe + MUM ),( ( Min( RMSe ,DS ) + Max( Max( MUM,RMSe ),RMSe ) ) / Max( ( Min( RRSe ,( ( RRSe - RMSe ) - ( MLU + MUM ) ) ) * MLU ),( RCSe - Min( MLU ,MUR ) ) ) ) ) + ( ( Max( MUC,RMSe ) + RRSe ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7537473233404711, "obj2": 0.1240482876724804}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( PN / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( CS,DS ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10500368210854272}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,( PN * PN ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( ( DS / ( ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) + MUR ) ) * ( Min( MUR ,( ( MUC / MLU ) - ( MUR - MLU ) ) ) / ( RRSe * CS ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8501070663811563, "obj2": 0.0730435905630034}, {"determining": "( ( AMS - DDR ) - Min( ( Min( ( PN + ( Max( ARS,FirstVNF_CPU_Server ) / ACS ) ) ,ACS ) - ( ( ( ( Min( PN ,MDR ) * DDR ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * ( CS + MUM ) ) - Max( ( ( ( RCSe * RRSe ) * ( Min( ( CS + MLU ) ,Min( CS ,CS ) ) / ( ( CS - RMSe ) - ( CS - MUC ) ) ) ) - RCSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.9336188436830836, "obj2": 0.033223190056743075}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * Min( DDR ,Const ) ) / BR ) * MRS ),( ( MDR - ( ( RRS * ( MRS - AMS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),( MUC / MUC ) ) + Max( ( MUM + DS ),( MUC + ( MUC + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1360145312841889}, {"determining": "( ( AMS - DDR ) - ( ( Max( Const,ARS ) / PN ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( AMS + ( BR / ACS ) ),PN ) * FirstVNF_RAM ) / ( FirstVNF_CPU - RRS ) ) ) ) )", "choosing": "( Max( ( MUM + RMSe ),( ( Min( RMSe ,DS ) + Max( Max( MUM,RMSe ),RMSe ) ) / MUR ) ) + ( ( Max( MUC,RMSe ) + RRSe ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7601713062098501, "obj2": 0.118976346100128}, {"determining": "( ( ( BR / FirstVNF_RAM ) - CRS ) - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,BR ) ) - Min( FirstVNF_RAM ,BR ) ) ) ) )", "choosing": "( Min( Min( ( ( MUC + MUM ) + DS ) ,( ( ( RRSe + MLU ) + ( MUR - ( ( CS + MUM ) + RRSe ) ) ) / MLU ) ) ,( Max( ( ( RRSe * RMSe ) + Max( Min( Max( MUM,RMSe ) ,( DS + RCSe ) ),( ( RRSe * MUM ) + CS ) ) ),Max( MLU,RCSe ) ) - DS ) ) + ( RRSe / ( Min( Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * MLU ) ,CS ) ) ,( ( MLU - RMSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07903302093109636}, {"determining": "( ( ( ( CRS + BR ) * PN ) / Min( ( ARS * CRS ) ,( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) - Max( ( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_RAM ) ) * Min( Max( CRS,MDR ) ,Min( Min( ARS ,ARS ) ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),( ( MUC + ( ( CS * ( MUC - ( CS - MLU ) ) ) - MUC ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - Min( ( ( CS * RMSe ) / MLU ) ,MLU ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.867237687366167, "obj2": 0.06375195210034096}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Min( FirstVNF_Mem ,Const ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_CPU + ( ( ( FirstVNF_RAM / CRS ) - MDR ) + Max( CRS,Const ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + ( ( CS * CS ) - CS ) ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.036757723861263504}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( Max( DDR,CRS ) - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( FirstVNF_Mem_Server,CRS ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) + Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),( ( ( ( ( MUR * RMSe ) / DS ) / ( MUC - Min( CS ,MUR ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.728051391862955, "obj2": 0.13673917937989133}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( ( RRS + AMS ) - ( ( PN + ACS ) - MDR ) ) * ACS ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( RCSe + CS ) ,RCSe ) + Max( ( ( RRSe - Min( ( RRSe * RRSe ) ,DS ) ) + DS ),( ( ( MLU * MLU ) - MUR ) / RCSe ) ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06141865686504652}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( ( ACS - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( ( DS - RRSe ) / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03984026148941209}, {"determining": "( ( AMS - DDR ) - ( ( ( ACS - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem - FirstVNF_Mem ) + ( ( FirstVNF_Mem_Server * MDR ) + PN ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( RRS,BR ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( CS * ( MUC / MUC ) ) / ( ( MUC / RRSe ) * CS ) ) + RMSe ) + Min( ( RCSe / ( RCSe + ( MUM + ( MUC + DS ) ) ) ) ,DS ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUC + RMSe ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10688779573927872}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + Max( ( RRS * PN ),( CRS + CRS ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( Max( MLU,RCSe ) - RRSe ) + Max( ( MUR - CS ),RMSe ) ) * MUR )", "obj1": 0.7623126338329764, "obj2": 0.11825815667156432}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server - ACS ) ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - RRS ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( MUM - RCSe ) - ( Min( RRSe ,RCSe ) / MUC ) ) + RCSe ) ) + Max( RMSe,( ( MUR + Min( ( RMSe / ( RCSe * DS ) ) ,DS ) ) + DS ) ) ) * MUC )", "obj1": 0.8265524625267666, "obj2": 0.08452872380389284}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( BR - MDR ) - Min( ( Min( MRS ,ACS ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / MLU ),RCSe ) - ( MUC * MUR ) ) + RMSe )", "obj1": 0.7580299785867237, "obj2": 0.12084723780119266}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( MRS / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RMSe ),( ( RMSe / RRSe ) / DS ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( ( CS / ( MUR * MLU ) ),RRSe ) ) ) * MUM ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10389759211014703}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ARS ) ) - Max( ( ( ACS * PN ) - Min( Const ,DDR ) ),( FirstVNF_CPU - Min( RRS ,Min( ( Min( BR ,( MRS / Const ) ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( MLU,( MUC * MLU ) ) + ( RRSe / ( ( ( MUM * ( ( ( MUC + RRSe ) / ( MUM - CS ) ) / ( ( CS * RMSe ) - ( RRSe * MUC ) ) ) ) - MUR ) + Max( DS,( MUR - CS ) ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14305537182660824}, {"determining": "( ( MRS / ( ( AMS - ACS ) + FirstVNF_RAM ) ) - ( ( ( RRS + AMS ) - ( ( PN + ACS ) - MDR ) ) * ACS ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( Min( ( ( MUC / DS ) - MUM ) ,DS ) - RMSe ) ) - CS ) ) + ( RCSe + ( MUM * Min( Max( DS,MUM ) ,MUM ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06141865686504652}, {"determining": "( ( ( AMS - DDR ) - Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS + ( AMS - DDR ) ) ,( MDR - Const ) ) ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / DS ) + ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,( ( MUR + Min( ( RCSe / ( RCSe * DS ) ) ,DS ) ) + DS ) ) ) * MUC )", "obj1": 0.7451820128479657, "obj2": 0.127340469430139}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) - ( ( MDR + ( AMS - ( ( FirstVNF_RAM * PN ) / CRS ) ) ) - ( ( ( PN * PN ) / ( AMS + ( BR / ACS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RMSe + ( RMSe / ( Min( CS ,( ( ( ( MUM + DS ) + Min( CS ,RMSe ) ) * RRSe ) * RRSe ) ) * MUC ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0032923778242144783}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( ( Min( CRS ,ACS ) / ARS ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( MDR - ( ( ( ( PN * PN ) / ( AMS * ACS ) ) - Max( DDR,CRS ) ) - DDR ) ) ) ) )", "choosing": "( ( MUM + RCSe ) + ( ( Min( RMSe ,MUC ) * Max( ( RCSe - MUR ),RRSe ) ) + Max( RMSe,( RCSe + ( ( RMSe / ( CS / ( RCSe - MUR ) ) ) - ( DS * MUC ) ) ) ) ) )", "obj1": 0.987152034261242, "obj2": 0.00660166972191445}, {"determining": "( PN - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / CRS ) ) ) - ( ( ( PN * PN ) / ( AMS + ( BR / ACS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RCSe * Min( MUR ,( RMSe - MUC ) ) ) + ( ( Min( RMSe ,MUC ) * Max( ( RCSe - MUR ),RRSe ) ) + Max( RMSe,( ( RCSe * RMSe ) / RCSe ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01597914313640098}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( PN * ( RRS - ( MDR / PN ) ) ) / Min( ACS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) ) / ( MDR * ARS ) ) - Min( FirstVNF_CPU_Server ,( ( AMS * ACS ) / ( ( ( DDR - Const ) * FirstVNF_RAM_Server ) + RRS ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( MUC + ( MUR - MLU ) ) ) + CS ) * ( Max( ( MUR / MUM ),( ( MUC * ( DS / DS ) ) * ( ( MUR + MLU ) * Min( Min( ( MUM + MUC ) ,MLU ) ,( RRSe / Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( Min( Max( MUC,( Max( RRSe,MLU ) * RRSe ) ) ,RCSe ) * MUC ),RRSe ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11169673736695913}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( MRS * ( ( Min( Max( ARS,MRS ) ,( PN + PN ) ) * FirstVNF_Mem_Server ) / BR ) ) - ( ( Max( DDR,CRS ) + ( ( BR + ARS ) / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS + MRS ) ) - DDR ) ) ) ) ,( ( ( Min( MRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14479245195655024}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( FirstVNF_CPU_Server / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RMSe ),( ( RMSe / RRSe ) / DS ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625957}, {"determining": "( Min( MRS ,( ARS * CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,( CRS + CRS ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( ( Max( ( CS + ( ( MLU / MUC ) - Max( MUM,RMSe ) ) ),RMSe ) + RMSe ) * DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( Min( MRS ,( ARS * CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,( CRS + CRS ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( Max( ( RCSe / MUC ),( ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) / MLU ) ) + ( Min( ( DS - RRSe ) ,Max( Max( ( ( CS * DS ) - Min( MUM ,RRSe ) ),MUR ),RCSe ) ) + ( MUC - MLU ) ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUR - MUC ) - Min( RRSe ,MUC ) ),DS ) ) + CS ) - CS ) + Min( MLU ,Max( RCSe,MLU ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07361890616614923}], "28": [{"determining": "( ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ,( ARS * CRS ) ) ) - ( DDR + DDR ) )", "choosing": "( Max( ( Min( CS ,Max( MUM,MUC ) ) + RCSe ),( ( MLU + ( Min( MLU ,( RMSe / RMSe ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RMSe + RMSe ) ) ) ) ) - CS ) ) + Max( ( MUM - Min( RRSe ,MLU ) ),Min( DS ,MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21479865826395328}, {"determining": "( ( Min( MRS ,( RRS - FirstVNF_CPU ) ) - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + CRS ) ) ) + ( Max( ( Max( ( CRS * ( AMS * ARS ) ),( ( RRS / FirstVNF_RAM ) + FirstVNF_Mem_Server ) ) + Max( AMS,ARS ) ),FirstVNF_Mem_Server ) - MRS ) ) )", "choosing": "( Max( MUC,( ( RMSe / RRSe ) / DS ) ) + ( ( ( ( RCSe + CS ) / ( RCSe / Max( RMSe,( RRSe - Min( MUR ,RCSe ) ) ) ) ) * MUM ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ARS ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MUC + RMSe ) - CS ) ) + ( ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe + ( RMSe * CS ) ) ) ,DS ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( RRS + MRS ) ,( MDR - ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( ( ( MLU / MUC ) + Max( MUR,DS ) ) * MUM ) ) ,Max( Max( RMSe,DS ),MUC ) ) + MLU ) ,RCSe ) ,( ( ( RMSe / MLU ) / RCSe ) - RCSe ) )", "obj1": 0.6509635974304069, "obj2": 0.21479865826395328}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( CRS * BR ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( Min( ACS ,FirstVNF_Mem ) * ( MRS - MRS ) ) + Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) + Max( ( MUM + DS ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUM ) / ( MUC / RMSe ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16262622589152173}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Max( MRS,ACS ) ) ,( ARS * CRS ) ) ) - ( Const + FirstVNF_RAM ) )", "choosing": "( RCSe + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,MUM ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - DDR ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RMSe + ( ( ( ( MLU - RRSe ) / MUM ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( ( MUC * MLU ) / Min( RCSe ,MUR ) ) / ( ( MLU - RMSe ) - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( Min( Min( Const ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( ( ( FirstVNF_RAM / ( FirstVNF_CPU / ( DDR - Max( ( FirstVNF_Mem * AMS ),FirstVNF_CPU ) ) ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( ( Min( MUC ,CS ) * ( DS * DS ) ) ,MLU ) - ( ( ( MLU - MLU ) - ( Min( MLU ,RCSe ) * MUC ) ) + Min( MUC ,DS ) ) ) + ( ( ( ( DS + RCSe ) + ( RCSe / Max( MUM,RRSe ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS - ( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ) ) ) - ( Min( Max( MDR,( ARS - Const ) ) ,ARS ) / ( MRS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.18430055749208246}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,RCSe ) + ( RCSe * Min( MUR ,Max( RMSe,MUC ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09698071317545862}, {"determining": "( FirstVNF_RAM - ( Max( CRS,BR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( RRSe / RCSe ),( RCSe * ( ( RCSe + MUR ) / Min( RMSe ,Min( ( CS + RRSe ) ,DS ) ) ) ) ) ,( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) )", "obj1": 0.9486081370449678, "obj2": 0.022683763772516966}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.02070122008867116}, {"determining": "( ( ( ( CRS - Const ) + FirstVNF_Mem ) - ( Max( MDR,MDR ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) - Min( Min( PN ,FirstVNF_Mem_Server ) ,Const ) )", "choosing": "( ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) * ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( Min( MLU ,Max( Min( CS ,CS ),( DS * RRSe ) ) ) / RRSe ) ) - MLU ) ) + ( ( MUM + RCSe ) + ( ( MUM * MUM ) * RMSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10932327704583977}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( ( RRS + AMS ) - ( ( PN + ACS ) - MDR ) ) * ACS ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - ( RRSe - Min( RRSe ,DS ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - Min( RRSe ,MLU ) ) ) )", "obj1": 0.8886509635974305, "obj2": 0.053109630821825675}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU + ( FirstVNF_Mem_Server / AMS ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( CS - ( MLU + CS ) ) ) + ( ( ( ( ( MUM + RCSe ) / ( CS * ( MUC / ( MUM - MLU ) ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.6937901498929336, "obj2": 0.15847625234314552}, {"determining": "( ( AMS - DDR ) - ( ( ( Const / AMS ) + ( RRS / MDR ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( ACS * RRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( CS * ( MUM / MUC ) ) - ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( ( CS - DS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUC + RMSe ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,MRS ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / MRS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( ( MLU - RRSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.7323340471092077, "obj2": 0.1340995338645569}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Max( CS,DS ) ) - MUM ),DS ) ) + RMSe ) - CS ) + Min( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) ,RCSe ) )", "obj1": 0.8629550321199143, "obj2": 0.06707090764769245}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( AMS - DDR ) - ( ( ( ACS - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem - FirstVNF_Mem ) + ( ( FirstVNF_Mem_Server * MDR ) + PN ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( RRS,BR ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( CS * ( MUC / MUC ) ) / ( ( MUC / RRSe ) * CS ) ) + RMSe ) + Min( ( RCSe / ( RCSe + ( MUM + ( MUC + DS ) ) ) ) ,DS ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUC + RMSe ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10688779573927872}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( ( Const + DDR ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ( Min( AMS ,AMS ) - DDR ) + ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,PN ) ) ),Min( BR ,( FirstVNF_CPU + BR ) ) ) )", "choosing": "( ( Min( MLU ,DS ) + ( MUM - Min( RRSe ,MLU ) ) ) + Max( ( ( ( MUR * ( MUC + Max( ( CS * MUR ),MUM ) ) ) / Min( RMSe ,MUM ) ) * RCSe ),( ( ( DS / DS ) + ( Max( MLU,RMSe ) / ( RMSe / RMSe ) ) ) - CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( Max( BR,BR ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Max( RMSe,Max( DS,DS ) ) / ( Max( RMSe,( MUR - CS ) ) + ( ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * ( DS * Max( RRSe,( MUC + DS ) ) ) ) - MUR ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14607184164731712}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( DS + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06953431263103749}, {"determining": "( ( ( ( ARS / AMS ) * ACS ) / ACS ) - ( Const / RRS ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( BR / FirstVNF_RAM ) - CRS ) - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,BR ) ) - Min( FirstVNF_RAM ,BR ) ) ) ) )", "choosing": "( Min( Min( ( ( MUC + MUM ) + DS ) ,( ( ( RRSe + MLU ) + ( MUR - ( ( CS + MUM ) + RRSe ) ) ) / MLU ) ) ,( Max( ( ( RRSe * RMSe ) + Max( Min( Max( MUM,RMSe ) ,( DS + RCSe ) ),( ( RRSe * MUM ) + CS ) ) ),Max( MLU,RCSe ) ) - DS ) ) + ( RRSe / ( Min( Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * MLU ) ,CS ) ) ,( ( MLU - RMSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07903302093109636}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( ( ( FirstVNF_RAM_Server * Max( FirstVNF_CPU,PN ) ) * Const ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) ,Max( ( RRS * PN ),( CRS + CRS ) ) ) ) ) + ( ( Min( CRS ,ACS ) / ARS ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( MDR - ( AMS - DDR ) ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( ( MLU + RMSe ) - CS ) ) + Min( ( ( CS * Min( RRSe ,( ( RRSe / Min( MUC ,RCSe ) ) + Max( RRSe,MUM ) ) ) ) + ( ( ( Min( ( RMSe / RCSe ) ,MUR ) / MUC ) / ( RMSe * DS ) ) + Max( MUC,MLU ) ) ) ,( MUR - MUC ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ARS * ( ( ( PN * PN ) / Min( ACS ,MRS ) ) - Max( DDR,CRS ) ) ) / ( BR - ( ( ( ( PN * PN ) / Min( ( RRS - FirstVNF_CPU ) ,ACS ) ) - Max( DDR,CRS ) ) - CRS ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( CS / Min( MUC ,RRSe ) ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10044725153660766}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}, {"determining": "( ( AMS - DDR ) - Min( ( Min( ( PN + ( Max( ARS,FirstVNF_CPU_Server ) / ACS ) ) ,ACS ) - ( ( ( ( Min( PN ,MDR ) * DDR ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * ( CS + MUM ) ) - Max( ( ( ( RCSe * RRSe ) * ( Min( ( CS + MLU ) ,Min( CS ,CS ) ) / ( ( CS - RMSe ) - ( CS - MUC ) ) ) ) - RCSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.9336188436830836, "obj2": 0.033223190056743075}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * Const ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( Min( FirstVNF_RAM ,Const ) * ACS ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( DS - RCSe ) - RCSe ) + RCSe ) ) + ( ( MLU - RRSe ) * MUM ) ) * MUC )", "obj1": 0.8244111349036403, "obj2": 0.08556520324879002}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) / Max( ( RRS / ( ( RRS - ARS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( ACS ,Max( ( Const - MDR ),( AMS * Max( FirstVNF_CPU,( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) - ( ( FirstVNF_Mem - ( ACS * Min( RRS ,MDR ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.09889585072700044}, {"determining": "( Min( ( CRS * ARS ) ,( ( MDR / MRS ) / ACS ) ) - ( Min( CRS ,Const ) + ( FirstVNF_CPU + ( ( ( ( Const + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( CS / MUM ) - RCSe ) - ( MLU + Min( CS ,RRSe ) ) ) + Min( CS ,( ( RRSe / ( MLU * RRSe ) ) / RCSe ) ) ) - MUM ) ) * MUC )", "obj1": 0.7922912205567452, "obj2": 0.10296995276521294}, {"determining": "( ( ( CRS / ACS ) - DDR ) - ( ( ( AMS / FirstVNF_RAM ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) - ( ( ( ( Max( FirstVNF_CPU,PN ) / FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * PN ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * Max( ( ( CS - DS ) / CS ),Max( ( RRSe + RMSe ),( CS - MUC ) ) ) ) - DS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) - CS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( ( RMSe / MUR ) + DS ) + Min( MUM ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.034481114243576895}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( ( ( ( MUC / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8436830835117773, "obj2": 0.07590801389043249}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( PN * ( RRS - ( MDR / PN ) ) ) / Min( ACS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) ) / ( MDR * ARS ) ) - Min( FirstVNF_CPU_Server ,( ( AMS * ACS ) / ( ( ( DDR - Const ) * FirstVNF_RAM_Server ) + RRS ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( MUC + ( MUR - MLU ) ) ) + CS ) * ( Max( ( MUR / MUM ),( ( MUC * ( DS / DS ) ) * ( ( MUR + MLU ) * Min( Min( ( MUM + MUC ) ,MLU ) ,( RRSe / Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( Min( Max( MUC,( Max( RRSe,MLU ) * RRSe ) ) ,RCSe ) * MUC ),RRSe ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11169673736695913}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( MRS * ( ( Min( Max( ARS,MRS ) ,( PN + PN ) ) * FirstVNF_Mem_Server ) / BR ) ) - ( ( Max( DDR,CRS ) + ( ( BR + ARS ) / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS + MRS ) ) - DDR ) ) ) ) ,( ( ( Min( MRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14479245195655024}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,MRS ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * FirstVNF_CPU ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + ( MUR * MUC ) ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.1377280848366056}, {"determining": "( PN - ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + ( DDR - FirstVNF_Mem ) ) * PN ) * AMS ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( CS - MUM ) ,( Max( ( Max( MUR,MUM ) + Min( MLU ,( ( CS * MLU ) + ( MLU * MUR ) ) ) ),RCSe ) / RRSe ) )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}, {"determining": "( PN - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / CRS ) ) ) - ( ( ( PN * PN ) / ( DDR - Max( ( ACS * AMS ),FirstVNF_CPU ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( RCSe * Min( MUR ,( RMSe - MUC ) ) ) + ( ( Min( RMSe ,MUC ) * ( ( ( DS + RCSe ) / ( RCSe / Max( MUM,RRSe ) ) ) * MUM ) ) + Max( RMSe,( ( RCSe * RMSe ) / RCSe ) ) ) )", "obj1": 0.9657387580299786, "obj2": 0.015021727013681447}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,PN ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( ( ( DS / ( ( ( ( CS - Max( MLU,MUR ) ) - RMSe ) * DS ) + MUR ) ) + CS ) * ( Min( MUR ,( ( MUC / MLU ) - ( MUR - MLU ) ) ) / ( RRSe * CS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01595793378284162}, {"determining": "( ( AMS - AMS ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( FirstVNF_CPU_Server / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / Max( RMSe,RRSe ) ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9057815845824411, "obj2": 0.04644389272603789}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,MRS ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) * MUC )", "obj1": 0.9164882226980728, "obj2": 0.04003433005119974}, {"determining": "( ( ( PN * PN ) / Min( ACS ,ACS ) ) - ( ( ( ( PN * PN ) / Min( ( RRS * ( BR / FirstVNF_RAM_Server ) ) ,MRS ) ) * Max( DDR,CRS ) ) * ( CRS - ( Const - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + MUM ) + ( RRSe / ( ( Max( RMSe,( MLU + Min( ( MUM + MUM ) ,( DS - DS ) ) ) ) - ( ( ( RCSe + MLU ) / ( ( RRSe * RMSe ) - CS ) ) * MUM ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( PN - ( FirstVNF_CPU + ( ( RRS - RRS ) + ( ( Min( Max( ( RRS * ACS ),( CRS + Const ) ) ,( MDR - FirstVNF_CPU_Server ) ) * PN ) / Max( ( ( AMS + ( CRS / ACS ) ) * PN ),AMS ) ) ) ) )", "choosing": "Min( ( CS - MUM ) ,( Max( ( Max( MUR,MUM ) + Min( ( MUR / MUM ) ,Max( DS,RCSe ) ) ),RCSe ) / RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03055798806702105}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR - DS ) + Max( MUR,MLU ) )", "obj1": 0.8265524625267666, "obj2": 0.08452872380389284}, {"determining": "( ( AMS - AMS ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + Max( MUM,( ( RCSe - ( CS + DS ) ) - DS ) ) ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( MDR - ACS ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( ( ARS - FirstVNF_Mem_Server ) - Min( Min( Max( BR,Max( ( FirstVNF_Mem_Server / MRS ),MRS ) ) ,Max( RRS,Max( FirstVNF_RAM,( MRS * ACS ) ) ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( MUR + RCSe ) + Max( MUM,( ( ( ( Max( DS,RCSe ) / ( RCSe - MUM ) ) * ( MUC - MUR ) ) - MUM ) + DS ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,DDR ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( ARS * ACS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( Max( ( MUM + MUC ),( ( MUM - ( ( RMSe + RRSe ) * RMSe ) ) + CS ) ) + ( ( MUM - ( DS - ( CS * ( MUC / RRSe ) ) ) ) + ( DS * MLU ) ) ) ) * MUC )", "obj1": 0.9250535331905781, "obj2": 0.03532198794109113}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,ACS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( ARS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( ( Min( RRS ,FirstVNF_RAM_Server ) * FirstVNF_Mem ) ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) + Max( ( MUM + MLU ),( MUC + ( RCSe + ( ( MLU / MUC ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.9100642398286938, "obj2": 0.04387645382458468}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( ( ( ( ( Min( MRS ,ACS ) / ( PN * PN ) ) * Max( DDR,CRS ) ) - Min( MRS ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( CRS / FirstVNF_CPU_Server ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( ( ( Min( ( MUC / MUC ) ,Min( ( MUM - RMSe ) ,MLU ) ) + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12483219760221323}, {"determining": "( Min( MRS ,( ARS * CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,( CRS + CRS ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( ( Max( ( CS + ( ( MLU / MUC ) - Max( MUM,RMSe ) ) ),RMSe ) + RMSe ) * DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( FirstVNF_CPU_Server / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RMSe ),( ( RMSe / RRSe ) / DS ) ) + ( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( RRS * ( ( FirstVNF_RAM_Server + DDR ) / CRS ) ),DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( MUR * RMSe ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - MUR ) / ( Min( Min( CS ,MLU ) ,( ( MUR - MUM ) / ( RRSe / RMSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.07688270782256065}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14155953081473807}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( FirstVNF_Mem * PN ) - ( Max( AMS,AMS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( ( ( DS / ( ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) + MUR ) ) + CS ) * ( Min( MUR ,( ( MUC / MLU ) - ( MUM * MLU ) ) ) / ( ( ( ( CS + ( DS + ( CS + RMSe ) ) ) / CS ) * ( RCSe / RRSe ) ) + MLU ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( CRS + ( RRS * RRS ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( MDR - FirstVNF_CPU_Server ),( ( PN * PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( Max( BR,Min( ACS ,BR ) ) ,BR ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) + Max( ( ( Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) + MLU ) - CS ),( MUM + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1153020038080135}, {"determining": "( Min( MRS ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,( CRS + CRS ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( ( Max( ( CS + ( ( DS - RRSe ) / ( MUC / RMSe ) ) ),RMSe ) + RMSe ) * DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * Min( DDR ,Const ) ) / BR ) * MRS ),( ( MDR - ( ( RRS * ( MRS - AMS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),( MUC / MUC ) ) + Max( ( MUM + DS ),( MUC + ( MUC + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1360145312841889}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( ( CRS * ( FirstVNF_Mem * AMS ) ) ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( ( BR / RRS ) + FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - BR ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( ( CRS * ARS ) ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,MUM ),( ( MLU + CS ) - Min( ( MUR + ( ( RMSe - MUM ) - ( ( MLU + MUM ) * MUM ) ) ) ,RCSe ) ) ) + Max( ( MLU + DS ),( MUC + ( RCSe / ( ( RMSe / ( ( MUC / CS ) / CS ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04500375317653972}, {"determining": "( ( ( ( CRS + BR ) * PN ) / Min( ( ARS * CRS ) ,( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) - Max( ( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_RAM ) ) * Min( Max( CRS,MDR ) ,Min( Min( ARS ,ARS ) ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),( ( MUC + ( ( CS * ( MUC - ( CS - MLU ) ) ) - MUC ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - Min( ( ( CS * RMSe ) / MLU ) ,MLU ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( MUC + ( MUC * RMSe ) ) ,( ( ( MUM / ( Min( ( MUC / MLU ) ,( CS / MUM ) ) / Min( RRSe ,Max( RMSe,RCSe ) ) ) ) / MLU ) + MUC ) ) + ( RMSe / ( MUC - ( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.867237687366167, "obj2": 0.06375195210034096}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( MRS / ( ( AMS - ACS ) + FirstVNF_RAM ) ) - ( ( ( RRS + AMS ) - ( ( PN + ACS ) - MDR ) ) * ACS ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( Min( ( ( MUC / DS ) - MUM ) ,DS ) - RMSe ) ) - CS ) ) + ( RCSe + ( MUM * Min( Max( DS,MUM ) ,MUM ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06141865686504652}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - PN ) ) ) ) + ( ( RRS * PN ) / Min( Min( FirstVNF_RAM_Server ,( ( AMS - FirstVNF_CPU_Server ) * MDR ) ) ,( Const / ( DDR / ( ARS * MRS ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUC - Max( Max( MLU,( RCSe * MUC ) ),( Max( MUR,MUR ) * ( ( Max( CS,MUM ) + ( MUR + MLU ) ) + ( ( RMSe - MUC ) - RMSe ) ) ) ) ) ) + Max( Min( MUC ,RCSe ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( Max( Max( MUM,MUM ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * MLU ) ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( ACS / BR ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( MRS / ARS ) + CRS ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( MUM - RCSe ) - RCSe ) + ( MUC / Max( RCSe,( ( RMSe * CS ) / RRSe ) ) ) ) ) + Max( RMSe,( ( MUR + Min( ( RCSe / ( RCSe * DS ) ) ,DS ) ) + DS ) ) ) * MUC )", "obj1": 0.8265524625267666, "obj2": 0.08452872380389284}, {"determining": "( ( BR - MDR ) - Min( ( Min( MRS ,ACS ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / MLU ),RCSe ) - ( MUC * MUR ) ) + RMSe )", "obj1": 0.7580299785867237, "obj2": 0.12084723780119266}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - DDR ) ) ) ) + ( FirstVNF_CPU + ( ( ( AMS + ( CRS / ACS ) ) * PN ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - MUC ) ) ) + ( DS * Max( MUR,MUM ) ) ) ) ) * MUC )", "obj1": 0.9207708779443254, "obj2": 0.03772126428634334}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ARS ) ) - Max( ( ( ACS * PN ) - Min( Const ,DDR ) ),( FirstVNF_CPU - Min( RRS ,Min( ( Min( BR ,( MRS / Const ) ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( MLU,( MUC * MLU ) ) + ( RRSe / ( ( ( MUM * ( ( ( MUC + RRSe ) / ( MUM - CS ) ) / ( ( CS * RMSe ) - ( RRSe * MUC ) ) ) ) - MUR ) + Max( DS,( MUR - CS ) ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14305537182660824}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( ( RRS + AMS ) - ( ( PN + ACS ) - MDR ) ) * ACS ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( Min( ( RCSe + CS ) ,RCSe ) + Max( ( ( RRSe - Min( ( RRSe * RRSe ) ,DS ) ) + DS ),( ( ( MLU * MLU ) - MUR ) / RCSe ) ) ) + ( MUC / ( DS - MLU ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06141865686504652}, {"determining": "( ( ( AMS - DDR ) - Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS + ( AMS - DDR ) ) ,( MDR - Const ) ) ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / DS ) + ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,( ( MUR + Min( ( RCSe / ( RCSe * DS ) ) ,DS ) ) + DS ) ) ) * MUC )", "obj1": 0.7451820128479657, "obj2": 0.127340469430139}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( Min( MRS ,( ARS * CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Const + ( ( ( Const / MRS ) - Const ) - FirstVNF_RAM ) ) / ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * ARS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( Min( Min( ( RRSe - MUR ) ,MUM ) ,( MUM / Max( RCSe,Min( Min( CS ,DS ) ,( DS - DS ) ) ) ) ) * DS ) ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( Max( ARS,MDR ) - ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( DDR - ( ( RRS * PN ) / ( RRS - PN ) ) ) ) + ( MRS - MRS ) ) ) )", "choosing": "( Min( ( Max( ( Max( MUC,DS ) / RCSe ),( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) * MUM ) ,RCSe ) + ( Max( MUR,MUR ) - CS ) )", "obj1": 0.721627408993576, "obj2": 0.1396842147843895}, {"determining": "( ( AMS - ARS ) - Max( Const,MDR ) )", "choosing": "( Max( RCSe,( ( MUC + RMSe ) - CS ) ) + ( ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( ( CS / MUM ) / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe + ( RMSe * CS ) ) ) ,DS ) ) + DS ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Min( MRS ,( ARS * CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Max( MRS,ARS ) ) - PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / RMSe ) - MUR ) ,DS ) - ( ( ( MLU / MUM ) - MUM ) + MUC ) ) ,Max( ( RRSe - RCSe ),( Min( Min( ( MUR - RRSe ) ,MUM ) ,( RRSe / MUM ) ) * DS ) ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - ( ( RRS * PN ) / ( RRS - PN ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MLU * ( ( MUM / Min( MLU ,( RMSe / RMSe ) ) ) * RCSe ) ) - MUM ) + Max( Min( MUC ,RCSe ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8843683083511777, "obj2": 0.055435129761824346}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( Min( CS ,( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( CS - ( ( MLU / MUR ) / MLU ) ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( Max( DDR,CRS ) - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( FirstVNF_Mem_Server,CRS ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) + Max( ( ( MUC - Min( DS ,MLU ) ) - MUM ),( ( ( ( ( MUR * RMSe ) / DS ) / ( MUC - Min( CS ,MUR ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.728051391862955, "obj2": 0.13673917937989133}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),CRS ) ) ,Min( Min( MRS ,( CRS * ARS ) ) ,( DDR * MDR ) ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( RMSe + MUM ),( ( Min( RMSe ,DS ) + Max( Max( MUM,RMSe ),RMSe ) ) / Max( ( Min( RRSe ,( ( RRSe - RMSe ) - ( MLU + MUM ) ) ) * MLU ),( RCSe - Min( MLU ,MUR ) ) ) ) ) + ( ( Max( MUC,RMSe ) + RRSe ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7537473233404711, "obj2": 0.1240482876724804}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( ( CRS / Const ) - ( ( PN * FirstVNF_Mem ) / ( RRS - RRS ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,( RRS * Const ) ) ) )", "choosing": "( ( ( RCSe * ( RMSe + MLU ) ) / DS ) + Max( ( MUM + DS ),( MUC / ( RCSe + ( ( RMSe / Min( CS ,Max( DS,MUM ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}], "29": [{"determining": "( ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ,( ARS * CRS ) ) ) - ( DDR + DDR ) )", "choosing": "( Max( ( Min( CS ,Max( MUM,MUC ) ) + RCSe ),( ( MLU + ( Min( MLU ,( RMSe / RMSe ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RMSe + RMSe ) ) ) ) ) - CS ) ) + Max( ( MUM - Min( RRSe ,MLU ) ),Min( DS ,MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21479865826395328}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) - ( MDR - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,DDR ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( CS * ( MUC / RRSe ) ) ) ) + ( DS * MLU ) ) ) ) * RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( RRS - FirstVNF_CPU ) ) - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + CRS ) ) ) + ( Max( ( Max( ( CRS * ( AMS * ARS ) ),( ( RRS / FirstVNF_RAM ) + FirstVNF_Mem_Server ) ) + Max( AMS,ARS ) ),FirstVNF_Mem_Server ) - MRS ) ) )", "choosing": "( Max( MUC,( ( RMSe / RRSe ) / DS ) ) + ( ( ( ( RCSe + CS ) / ( RCSe / Max( RMSe,( RRSe - Min( MUR ,RCSe ) ) ) ) ) * MUM ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( RRS + MRS ) ,( MDR - ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( ( ( MLU / MUC ) + Max( MUR,DS ) ) * MUM ) ) ,Max( Max( RMSe,DS ),MUC ) ) + MLU ) ,RCSe ) ,( ( ( RMSe / MLU ) / RCSe ) - RCSe ) )", "obj1": 0.6509635974304069, "obj2": 0.21479865826395328}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( CRS * BR ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( Min( ACS ,FirstVNF_Mem ) * ( MRS - MRS ) ) + Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) + Max( ( MUM + DS ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUM ) / ( MUC / RMSe ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16262622589152173}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - DDR ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RMSe + ( ( ( ( MLU - RRSe ) / MUM ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( ( MUC * MLU ) / Min( RCSe ,MUR ) ) / ( ( MLU - RMSe ) - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Max( MRS,ACS ) ) ,( ARS * CRS ) ) ) - ( Const + FirstVNF_RAM ) )", "choosing": "( RCSe + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,MUM ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS - ( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ) ) ) - ( Min( Max( MDR,( ARS - Const ) ) ,ARS ) / ( MRS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.18430055749208246}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,RCSe ) + ( RCSe * Min( MUR ,Max( RMSe,MUC ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09698071317545862}, {"determining": "( ( ( ( CRS - Const ) + FirstVNF_Mem ) - ( Max( MDR,MDR ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) - Min( Min( PN ,FirstVNF_Mem_Server ) ,Const ) )", "choosing": "( ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) * ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( Min( MLU ,Max( Min( CS ,CS ),( DS * RRSe ) ) ) / RRSe ) ) - MLU ) ) + ( ( MUM + RCSe ) + ( ( MUM * MUM ) * RMSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10932327704583977}, {"determining": "( FirstVNF_RAM - ( Max( CRS,BR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( RRSe / RCSe ),( RCSe * ( ( RCSe + MUR ) / Min( RMSe ,Min( ( CS + RRSe ) ,DS ) ) ) ) ) ,( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) )", "obj1": 0.9486081370449678, "obj2": 0.022683763772516966}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,PN ) ) / ( MDR * FirstVNF_RAM_Server ) ) - ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) )", "choosing": "( ( ( ( MUC / Max( Min( Min( ( MUR - RRSe ) ,MUM ) ,( MUM / RRSe ) ),( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUC / MUM ) * CS ) / ( ( ( MLU - MUR ) * ( ( ( RRSe + DS ) / ( RRSe - Min( RRSe ,DS ) ) ) / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10642526647437797}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.02070122008867116}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( DS + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06953431263103749}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS * FirstVNF_RAM ) ) ) - ( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR - Max( ( ( MUC - Max( CS,DS ) ) - MUM ),DS ) ) + RMSe ) - CS ) + Min( ( ( ( RCSe + DS ) / ( RCSe / Max( RMSe,RRSe ) ) ) * MUM ) ,RCSe ) )", "obj1": 0.8629550321199143, "obj2": 0.06707090764769245}, {"determining": "( ( CRS + ( RRS * RRS ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( MDR - FirstVNF_CPU_Server ),( ( PN * PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( Max( BR,Min( ACS ,BR ) ) ,BR ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) + Max( ( ( Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) + MLU ) - CS ),( MUM + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1153020038080135}, {"determining": "( ( AMS - DDR ) - ( ( ( Const / AMS ) + ( RRS / MDR ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( ACS * RRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( CS * ( MUM / MUC ) ) - ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( ( CS - DS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUC + RMSe ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( ( ( ( MUC / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8436830835117773, "obj2": 0.07590801389043249}, {"determining": "( ( ( Const + DDR ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ( Min( AMS ,AMS ) - DDR ) + ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,PN ) ) ),Min( BR ,( FirstVNF_CPU + BR ) ) ) )", "choosing": "( ( Min( MLU ,DS ) + ( MUM - Min( RRSe ,MLU ) ) ) + Max( ( ( ( MUR * ( MUC + Max( ( CS * MUR ),MUM ) ) ) / Min( RMSe ,MUM ) ) * RCSe ),( ( ( DS / DS ) + ( Max( MLU,RMSe ) / ( RMSe / RMSe ) ) ) - CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( MUC + ( MUC * RMSe ) ) ,( ( ( MUM / ( Min( ( MUC / MLU ) ,( CS / MUM ) ) / Min( RRSe ,Max( RMSe,RCSe ) ) ) ) / MLU ) + MUC ) ) + ( RMSe / ( MUC - ( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.867237687366167, "obj2": 0.06375195210034096}, {"determining": "( ( ( ( ARS / AMS ) * ACS ) / ACS ) - ( Const / RRS ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( BR / FirstVNF_RAM ) - CRS ) - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,BR ) ) - Min( FirstVNF_RAM ,BR ) ) ) ) )", "choosing": "( Min( Min( ( ( MUC + MUM ) + DS ) ,( ( ( RRSe + MLU ) + ( MUR - ( ( CS + MUM ) + RRSe ) ) ) / MLU ) ) ,( Max( ( ( RRSe * RMSe ) + Max( Min( Max( MUM,RMSe ) ,( DS + RCSe ) ),( ( RRSe * MUM ) + CS ) ) ),Max( MLU,RCSe ) ) - DS ) ) + ( RRSe / ( Min( Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * MLU ) ,CS ) ) ,( ( MLU - RMSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07903302093109636}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ARS * ( ( ( PN * PN ) / Min( ACS ,MRS ) ) - Max( DDR,CRS ) ) ) / ( BR - ( ( ( ( PN * PN ) / Min( ( RRS - FirstVNF_CPU ) ,ACS ) ) - Max( DDR,CRS ) ) - CRS ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( CS / Min( MUC ,RRSe ) ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.10044725153660766}, {"determining": "( Min( Min( Const ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( ( ( FirstVNF_RAM / ( FirstVNF_CPU / ( DDR - Max( ( FirstVNF_Mem * AMS ),FirstVNF_CPU ) ) ) ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + Max( PN,ACS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( ( Min( MUC ,CS ) * ( DS * DS ) ) ,MLU ) - ( ( ( MLU - MLU ) - ( Min( MLU ,RCSe ) * MUC ) ) + Min( MUC ,DS ) ) ) + ( ( ( ( DS + RCSe ) + ( RCSe / Max( MUM,RRSe ) ) ) * MUM ) + ( ( DS / ( RMSe / RRSe ) ) - MLU ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05070885320497407}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}, {"determining": "( ( AMS - DDR ) - Min( ( Min( ( PN + ( Max( ARS,FirstVNF_CPU_Server ) / ACS ) ) ,ACS ) - ( ( ( ( Min( PN ,MDR ) * DDR ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * ( CS + MUM ) ) - Max( ( ( ( RCSe * RRSe ) * ( Min( ( CS + MLU ) ,Min( CS ,CS ) ) / ( ( CS - RMSe ) - ( CS - MUC ) ) ) ) - RCSe ),Min( RRSe ,CS ) ) ) )", "obj1": 0.9336188436830836, "obj2": 0.033223190056743075}, {"determining": "( Min( ( CRS * ARS ) ,( ( MDR / MRS ) / ACS ) ) - ( Min( CRS ,Const ) + ( FirstVNF_CPU + ( ( ( ( Const + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( CS / MUM ) - RCSe ) - ( MLU + Min( CS ,RRSe ) ) ) + Min( CS ,( ( RRSe / ( MLU * RRSe ) ) / RCSe ) ) ) - MUM ) ) * MUC )", "obj1": 0.7922912205567452, "obj2": 0.10296995276521294}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( Max( BR,BR ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Max( RMSe,Max( DS,DS ) ) / ( Max( RMSe,( MUR - CS ) ) + ( ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * ( DS * Max( RRSe,( MUC + DS ) ) ) ) - MUR ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14607184164731712}, {"determining": "( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) / Max( ( RRS / ( ( RRS - ARS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( ACS ,Max( ( Const - MDR ),( AMS * Max( FirstVNF_CPU,( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) - ( ( FirstVNF_Mem - ( ACS * Min( RRS ,MDR ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.09889585072700044}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - ( Max( ( AMS / ( BR - RRS ) ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( ( ( RRS * ( FirstVNF_CPU_Server - MRS ) ) - Min( Min( ARS ,ACS ) ,Max( CRS,AMS ) ) ) - MDR ) ) ) * ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Min( RMSe ,Min( MUR ,RRSe ) ) + Min( RCSe ,RMSe ) )", "obj1": 0.7901498929336188, "obj2": 0.10435431481833916}, {"determining": "( ( ( CRS / ACS ) - DDR ) - ( ( ( AMS / FirstVNF_RAM ) + CRS ) + ( ( MDR - FirstVNF_CPU_Server ) - ( ( ( ( Max( FirstVNF_CPU,PN ) / FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * PN ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * Max( ( ( CS - DS ) / CS ),Max( ( RRSe + RMSe ),( CS - MUC ) ) ) ) - DS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( ( ( MLU + RMSe ) - CS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( ( ( ( RMSe / MUR ) + DS ) + Min( MUM ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.034481114243576895}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * Min( DDR ,Const ) ) / BR ) * MRS ),( ( MDR - ( ( RRS * ( MRS - AMS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),( MUC / MUC ) ) + Max( ( MUM + DS ),( MUC + ( MUC + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.13961263199391055}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( PN * ( RRS - ( MDR / PN ) ) ) / Min( ACS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) ) / ( MDR * ARS ) ) - Min( FirstVNF_CPU_Server ,( ( AMS * ACS ) / ( ( ( DDR - Const ) * FirstVNF_RAM_Server ) + RRS ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( MUC + ( MUR - MLU ) ) ) + CS ) * ( Max( ( MUR / MUM ),( ( MUC * ( DS / DS ) ) * ( ( MUR + MLU ) * Min( Min( ( MUM + MUC ) ,MLU ) ,( RRSe / Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( Min( Max( MUC,( Max( RRSe,MLU ) * RRSe ) ) ,RCSe ) * MUC ),RRSe ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11169673736695913}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MLU * ( ( MUM / Min( Min( ( RRSe * RRSe ) ,DS ) ,( RMSe / RMSe ) ) ) * RCSe ) ) - MUM ) + Max( Min( MUC ,RCSe ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8843683083511777, "obj2": 0.054712524604425605}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( ( RRSe * RRSe ) + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13739149415656085}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ( RRS * PN ) / ( RRS - ARS ) ) + ( ARS - ( AMS - DDR ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( Min( ARS ,BR ) - FirstVNF_CPU ) ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( DS + CS ),( ( RMSe * CS ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - ( RRSe - ( RCSe + RRSe ) ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014093100963887148}, {"determining": "( PN - ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + ( DDR - FirstVNF_Mem ) ) * PN ) * AMS ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( CS - MUM ) ,( Max( ( Max( MUR,MUM ) + Min( MLU ,( ( CS * MLU ) + ( MLU * MUR ) ) ) ),RCSe ) / RRSe ) )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) - FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( ( FirstVNF_Mem + FirstVNF_Mem ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( DS + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( RMSe - ( DS - ( Min( Max( RMSe,Min( CS ,DS ) ) ,MUR ) - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011161853601886085}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,MRS ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) * MUC )", "obj1": 0.9164882226980728, "obj2": 0.04003433005119974}, {"determining": "( ( ( MDR - ACS ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( ( ARS - FirstVNF_Mem_Server ) - Min( Min( Max( BR,Max( ( FirstVNF_Mem_Server / MRS ),MRS ) ) ,Max( RRS,Max( FirstVNF_RAM,( MRS * ACS ) ) ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( MUR + RCSe ) + Max( MUM,( ( ( ( Max( DS,RCSe ) / ( RCSe - MUM ) ) * ( MUC - MUR ) ) - MUM ) + DS ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( PN - ( FirstVNF_CPU + ( ( RRS - RRS ) + ( ( Min( Max( ( RRS * ACS ),( CRS + Const ) ) ,( MDR - FirstVNF_CPU_Server ) ) * PN ) / Max( ( ( AMS + ( CRS / ACS ) ) * PN ),AMS ) ) ) ) )", "choosing": "Min( ( CS - MUM ) ,( Max( ( Max( MUR,MUM ) + Min( ( MUR / MUM ) ,Max( DS,RCSe ) ) ),RCSe ) / RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03055798806702105}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( ACS / BR ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( MRS / ARS ) + CRS ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( MUM - RCSe ) - RCSe ) + ( MUC / Max( RCSe,( ( RMSe * CS ) / RRSe ) ) ) ) ) + Max( RMSe,( ( MUR + Min( ( RCSe / ( RCSe * DS ) ) ,DS ) ) + DS ) ) ) * MUC )", "obj1": 0.8265524625267666, "obj2": 0.08452872380389284}, {"determining": "( ( ( PN * PN ) / Min( ACS ,ACS ) ) - ( ( ( ( PN * PN ) / Min( ( RRS * ( BR / FirstVNF_RAM_Server ) ) ,MRS ) ) * Max( DDR,CRS ) ) * ( CRS - ( Const - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + MUM ) + ( RRSe / ( ( Max( RMSe,( MLU + Min( ( MUM + MUM ) ,( DS - DS ) ) ) ) - ( ( ( RCSe + MLU ) / ( ( RRSe * RMSe ) - CS ) ) * MUM ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( ( ( FirstVNF_RAM_Server * Max( FirstVNF_CPU,PN ) ) * Const ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) ,Max( ( RRS * PN ),( CRS + CRS ) ) ) ) ) + ( ( Min( CRS ,ACS ) / ARS ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( MDR - ( AMS - DDR ) ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( ( MLU + RMSe ) - CS ) ) + Min( ( ( CS * Min( RRSe ,( ( RRSe / Min( MUC ,RCSe ) ) + Max( RRSe,MUM ) ) ) ) + ( ( ( Min( ( RMSe / RCSe ) ,MUR ) / MUC ) / ( RMSe * DS ) ) + Max( MUC,MLU ) ) ) ,( MUR - MUC ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,ACS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( ARS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( ( Min( RRS ,FirstVNF_RAM_Server ) * FirstVNF_Mem ) ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) + Max( ( MUM + MLU ),( MUC + ( RCSe + ( ( MLU / MUC ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.9100642398286938, "obj2": 0.04387645382458468}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),MDR ) ) ,Min( Min( MRS ,( ARS * CRS ) ) ,MRS ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( MUM + RMSe ),( ( Min( RMSe ,DS ) + Max( Max( MUM,RMSe ),RMSe ) ) / MUR ) ) + ( ( Max( MUC,RMSe ) + RRSe ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12449061750781357}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU + ( FirstVNF_Mem_Server / AMS ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( CS - ( MLU + CS ) ) ) + ( ( ( ( ( MUM + RCSe ) / ( CS * ( MUC / ( MUM - MLU ) ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.6937901498929336, "obj2": 0.15847625234314552}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( RRS * ( ( FirstVNF_RAM_Server + DDR ) / CRS ) ),DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( MUR * RMSe ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - MUR ) / ( Min( Min( CS ,MLU ) ,( ( MUR - MUM ) / ( RRSe / RMSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.07688270782256065}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( ( RRS + AMS ) - ( ( PN + ( BR / ACS ) ) - MDR ) ) * ACS ) )", "choosing": "( ( ( MUR - DS ) + Max( MUR,MLU ) ) + ( Min( DS ,MLU ) + ( MUM - Min( RRSe ,MLU ) ) ) )", "obj1": 0.8886509635974305, "obj2": 0.053109630821825675}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ARS ) ) - Max( ( ( ACS * PN ) - Min( Const ,DDR ) ),( FirstVNF_CPU - Min( RRS ,Min( ( Min( BR ,( MRS / Const ) ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( MLU,( MUC * MLU ) ) + ( RRSe / ( ( ( MUM * ( ( ( MUC + RRSe ) / ( MUM - CS ) ) / ( ( CS * RMSe ) - ( RRSe * MUC ) ) ) ) - MUR ) + Max( DS,( MUR - CS ) ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14305537182660824}, {"determining": "( ( FirstVNF_Mem * PN ) - ( Max( AMS,AMS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( ( ( DS / ( ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) + MUR ) ) + CS ) * ( Min( MUR ,( ( MUC / MLU ) - ( MUM * MLU ) ) ) / ( ( ( ( CS + ( DS + ( CS + RMSe ) ) ) / CS ) * ( RCSe / RRSe ) ) + MLU ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( MDR + BR ) - FirstVNF_CPU )", "choosing": "( ( CS - RCSe ) * ( RRSe + Min( RMSe ,MUM ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15847625234314552}, {"determining": "( ( BR - MDR ) - Min( ( Min( MRS ,ACS ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / MLU ),RCSe ) - ( MUC * MUR ) ) + RMSe )", "obj1": 0.7580299785867237, "obj2": 0.12084723780119266}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,MRS ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / MRS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( ( MLU - RRSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13589503851627335}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( ( CRS * ( FirstVNF_Mem * AMS ) ) ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( ( BR / RRS ) + FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - BR ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( ( CRS * ARS ) ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,MUM ),( ( MLU + CS ) - Min( ( MUR + ( ( RMSe - MUM ) - ( ( MLU + MUM ) * MUM ) ) ) ,RCSe ) ) ) + Max( ( MLU + DS ),( MUC + ( RCSe / ( ( RMSe / ( ( MUC / CS ) / CS ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04500375317653972}, {"determining": "( ( AMS - AMS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8822269807280514, "obj2": 0.056071262568872654}, {"determining": "( ( ( ( CRS + BR ) * PN ) / Min( ( ARS * CRS ) ,( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) - Max( ( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_RAM ) ) * Min( Max( CRS,MDR ) ,Min( Min( ARS ,ARS ) ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),( ( MUC + ( ( CS * ( MUC - ( CS - MLU ) ) ) - MUC ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - Min( ( ( CS * RMSe ) / MLU ) ,MLU ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( ( RRS + AMS ) - ( ( PN + ACS ) - MDR ) ) * ACS ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - ( RRSe - Min( RRSe ,DS ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - Min( RRSe ,MLU ) ) ) )", "obj1": 0.8886509635974305, "obj2": 0.053109630821825675}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,DDR ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + ( MUR * MUC ) ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.03532198794109113}, {"determining": "( ( ( PN * PN ) / ( MRS * ACS ) ) - Max( ( ( ( PN * ( ARS + ( FirstVNF_CPU / ACS ) ) ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( RRS ,Min( Min( FirstVNF_CPU ,MDR ) ,( Min( BR ,DDR ) - MDR ) ) ) ) ) )", "choosing": "( Max( MUR,( MUC - MLU ) ) + ( RRSe / ( ( ( ( ( RMSe + ( MUM - MUC ) ) / Max( DS,RMSe ) ) * MUM ) / MUR ) + Max( ( MUR - CS ),RMSe ) ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14187993836329224}, {"determining": "( ( ( Max( MRS,( ( PN * PN ) / Min( MRS ,Min( MRS ,( AMS / AMS ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / Min( MRS ,Min( ARS ,MRS ) ) ) - ( ( ( RRS + AMS ) - ( ( PN + ACS ) - MDR ) ) * ACS ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ) - CS ) ) + ( MUR - MUC ) )", "obj1": 0.8736616702355461, "obj2": 0.06141865686504652}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( MUR + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14068250662544213}, {"determining": "( ( AMS - AMS ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0018724135383203408}, {"determining": "( Min( MRS ,( ARS * CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,ACS ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( Min( Min( ( MLU - RRSe ) ,MUM ) ,( MUM / RRSe ) ) * DS ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR - DS ) + Max( MUR,MLU ) )", "obj1": 0.8265524625267666, "obj2": 0.08452872380389284}, {"determining": "( ( MRS / ( ( AMS - ACS ) + FirstVNF_RAM ) ) - ( ( ( RRS + AMS ) - ( ( PN + ACS ) - MDR ) ) * ACS ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + ( Min( ( ( MUC / DS ) - MUM ) ,DS ) - RMSe ) ) - CS ) ) + ( RCSe + ( MUM * Min( Max( DS,MUM ) ,MUM ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06141865686504652}, {"determining": "( ( ( AMS - DDR ) - Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS + ( AMS - DDR ) ) ,( MDR - Const ) ) ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / DS ) + ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,( ( MUR + Min( ( RCSe / ( RCSe * DS ) ) ,DS ) ) + DS ) ) ) * MUC )", "obj1": 0.7451820128479657, "obj2": 0.127340469430139}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( Max( Max( MUM,MUM ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * MLU ) ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( Min( MRS ,( ARS * CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( Min( Min( ( MUR - RRSe ) ,MUM ) ,( MUM / RRSe ) ) * DS ) ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( Min( MRS ,( ARS * CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Const + ( ( ( Const / MRS ) - Const ) - FirstVNF_RAM ) ) / ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * ARS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( Min( Min( ( RRSe - MUR ) ,MUM ) ,( MUM / Max( RCSe,Min( Min( CS ,DS ) ,( DS - DS ) ) ) ) ) * DS ) ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( MRS * ( ( Min( Max( ARS,MRS ) ,( PN + PN ) ) * FirstVNF_Mem_Server ) / BR ) ) - ( ( Max( DDR,CRS ) + ( ( BR + ARS ) / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS + MRS ) ) - DDR ) ) ) ) ,( ( ( Min( MRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14479245195655024}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( Min( MRS ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,( CRS + CRS ) ) * PN ) / Max( ( ( RRS - AMS ) / Min( ACS ,AMS ) ),AMS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( ( Max( ( DS + ( ( DS - RRSe ) / ( MUC / RMSe ) ) ),RMSe ) + RMSe ) * DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),CRS ) ) ,Min( Min( MRS ,( CRS * ARS ) ) ,( DDR * MDR ) ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( RMSe + MUM ),( ( Min( RMSe ,DS ) + Max( Max( MUM,RMSe ),RMSe ) ) / Max( ( Min( RRSe ,( ( RRSe - RMSe ) - ( MLU + MUM ) ) ) * MLU ),( RCSe - Min( MLU ,MUR ) ) ) ) ) + ( ( Max( MUC,RMSe ) + RRSe ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7537473233404711, "obj2": 0.1240482876724804}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( ( MRS + MRS ) - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( ( AMS + ( FirstVNF_CPU_Server / ACS ) ) * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( MLU - RMSe ) - CS ),( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( MUM ,RRSe ) ) ) + ( MLU / MUR ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.13398498578130216}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( Min( CS ,( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( CS - ( ( MLU / MUR ) / MLU ) ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( AMS - DDR ) - Min( ( Min( ( PN * PN ) ,ACS ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( ( MUC * MLU ) / ( RCSe * DS ) ) / ( ( MLU - RMSe ) - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.7580299785867237, "obj2": 0.12084723780119266}], "30": [{"determining": "( ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ,( ARS * CRS ) ) ) - ( DDR + DDR ) )", "choosing": "( Max( ( Min( CS ,Max( MUM,MUC ) ) + RCSe ),( ( MLU + ( Min( MLU ,( RMSe / RMSe ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RMSe + RMSe ) ) ) ) ) - CS ) ) + Max( ( MUM - Min( RRSe ,MLU ) ),Min( DS ,MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21479865826395328}, {"determining": "( ( AMS - AMS ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - MRS ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( MUC / RMSe ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) - ( MDR - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,DDR ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( CS * ( MUC / RRSe ) ) ) ) + ( DS * MLU ) ) ) ) * RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( RRS + MRS ) ,( MDR - ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( ( ( MLU / MUC ) + Max( MUR,DS ) ) * MUM ) ) ,Max( Max( RMSe,DS ),MUC ) ) + MLU ) ,RCSe ) ,( ( ( RMSe / MLU ) / RCSe ) - RCSe ) )", "obj1": 0.6509635974304069, "obj2": 0.21479865826395328}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,( MDR - Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( ( ( MLU / MUC ) + Max( MUR,DS ) ) * MUM ) ) ,MUM ) + MLU ) ,( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ,( ( ( RMSe / MLU ) / RCSe ) - CS ) )", "obj1": 0.6638115631691649, "obj2": 0.19662394777419887}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( CRS * BR ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( Min( ACS ,FirstVNF_Mem ) * ( MRS - MRS ) ) + Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) + Max( ( MUM + DS ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUM ) / ( MUC / RMSe ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16262622589152173}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Max( MRS,ACS ) ) ,( ARS * CRS ) ) ) - ( Const + FirstVNF_RAM ) )", "choosing": "( RCSe + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,MUM ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS - ( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ) ) ) - ( Min( Max( MDR,( ARS - Const ) ) ,ARS ) / ( MRS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.18430055749208246}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,RCSe ) + ( RCSe * Min( MUR ,Max( RMSe,MUC ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09698071317545862}, {"determining": "( ( ( ( CRS - Const ) + FirstVNF_Mem ) - ( Max( MDR,MDR ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) - Min( Min( PN ,FirstVNF_Mem_Server ) ,Const ) )", "choosing": "( ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) * ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( Min( MLU ,Max( Min( CS ,CS ),( DS * RRSe ) ) ) / RRSe ) ) - MLU ) ) + ( ( MUM + RCSe ) + ( ( MUM * MUM ) * RMSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10932327704583977}, {"determining": "( FirstVNF_RAM - ( Max( CRS,BR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( RRSe / RCSe ),( RCSe * ( ( RCSe + MUR ) / Min( RMSe ,Min( ( CS + RRSe ) ,DS ) ) ) ) ) ,( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) )", "obj1": 0.9486081370449678, "obj2": 0.022683763772516966}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,PN ) ) / ( MDR * FirstVNF_RAM_Server ) ) - ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) )", "choosing": "( ( ( ( MUC / Max( Min( Min( ( MUR - RRSe ) ,MUM ) ,( MUM / RRSe ) ),( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( RMSe + ( MUR - MLU ) ) ) + CS ) * ( ( ( MUC / MUM ) * CS ) / ( ( ( MLU - MUR ) * ( ( ( RRSe + DS ) / ( RRSe - Min( RRSe ,DS ) ) ) / CS ) ) / ( MLU / CS ) ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10642526647437797}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( DS + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06953431263103749}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.02070122008867116}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( MDR - ( AMS - DDR ) ) * PN ) / Max( CRS,( PN * ( FirstVNF_RAM / RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9293361884368309, "obj2": 0.03298580510425135}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR - DS ) + Max( ( ( RRSe * RCSe ) / Max( Max( RMSe,MUM ),DS ) ),RCSe ) )", "obj1": 0.8950749464668094, "obj2": 0.05063319906483217}, {"determining": "( ( AMS - DDR ) - ( ( ( Const / AMS ) + ( RRS / MDR ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( ACS * RRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( CS * ( MUM / MUC ) ) - ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( ( CS - DS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUC + RMSe ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC / MLU ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.0659677737867721}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - DDR ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RMSe + ( ( ( ( MLU - RRSe ) / MUM ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( ( MUC * MLU ) / Min( RCSe ,MUR ) ) / ( ( MLU - RMSe ) - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.20348617623684992}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( Max( ( CRS * MRS ),FirstVNF_CPU_Server ) - ( AMS - ( ( RRS * PN ) / ( MRS - FirstVNF_CPU ) ) ) ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - ( RMSe / RMSe ) ) + ( DS / DS ) ) + Max( RMSe,Min( ( ( MLU * ( RRSe / RCSe ) ) * MUC ) ,( Max( ( RRSe / Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( CS,RMSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.8265524625267666, "obj2": 0.08452872380389284}, {"determining": "( ( ( Const + DDR ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ( Min( AMS ,AMS ) - DDR ) + ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,PN ) ) ),Min( BR ,( FirstVNF_CPU + BR ) ) ) )", "choosing": "( ( Min( MLU ,DS ) + ( MUM - Min( RRSe ,MLU ) ) ) + Max( ( ( ( MUR * ( MUC + Max( ( CS * MUR ),MUM ) ) ) / Min( RMSe ,MUM ) ) * RCSe ),( ( ( DS / DS ) + ( Max( MLU,RMSe ) / ( RMSe / RMSe ) ) ) - CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13726505149900398}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( Max( BR,BR ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Max( RMSe,Max( DS,DS ) ) / ( Max( RMSe,( MUR - CS ) ) + ( ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * ( DS * Max( RRSe,( MUC + DS ) ) ) ) - MUR ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14607184164731712}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( PN - ( FirstVNF_CPU + ( ( RRS - RRS ) + ( ( Min( Max( ( RRS * ACS ),( CRS + Const ) ) ,( MDR - FirstVNF_CPU_Server ) ) * PN ) / Max( ( ( AMS + ( CRS / ACS ) ) * PN ),AMS ) ) ) ) )", "choosing": "Min( ( CS - MUM ) ,( Max( ( Max( MUR,MUM ) + Min( ( MUR / MUM ) ,Max( DS,RCSe ) ) ),RCSe ) / RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03055798806702105}, {"determining": "( ( ( ( ARS / AMS ) * ACS ) / ACS ) - ( Const / RRS ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( ( BR / FirstVNF_RAM ) - CRS ) - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,BR ) ) - Min( FirstVNF_RAM ,BR ) ) ) ) )", "choosing": "( Min( Min( ( ( MUC + MUM ) + DS ) ,( ( ( RRSe + MLU ) + ( MUR - ( ( CS + MUM ) + RRSe ) ) ) / MLU ) ) ,( Max( ( ( RRSe * RMSe ) + Max( Min( Max( MUM,RMSe ) ,( DS + RCSe ) ),( ( RRSe * MUM ) + CS ) ) ),Max( MLU,RCSe ) ) - DS ) ) + ( RRSe / ( Min( Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * MLU ) ,CS ) ) ,( ( MLU - RMSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07903302093109636}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( ( ( FirstVNF_RAM_Server * Max( FirstVNF_CPU,PN ) ) * Const ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) ,Max( ( RRS * PN ),( CRS + CRS ) ) ) ) ) + ( ( Min( CRS ,ACS ) / ARS ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( MDR - ( AMS - DDR ) ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( ( MLU + RMSe ) - CS ) ) + Min( ( ( CS * Min( RRSe ,( ( RRSe / Min( MUC ,RCSe ) ) + Max( RRSe,MUM ) ) ) ) + ( ( ( Min( ( RMSe / RCSe ) ,MUR ) / MUC ) / ( RMSe * DS ) ) + Max( MUC,MLU ) ) ) ,( MUR - MUC ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ARS * ( ( ( ( MDR - FirstVNF_CPU_Server ) * PN ) / Min( ACS ,MRS ) ) - Max( DDR,CRS ) ) ) / ( BR - ( ( ( ( PN * PN ) / Min( ( RRS - FirstVNF_CPU ) ,ACS ) ) - Max( DDR,CRS ) ) - CRS ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( RMSe / MUR ) + DS ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.7601713062098501, "obj2": 0.11935936659094101}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.13398498578130216}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) / Max( ( RRS / ( ( RRS - ARS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( ACS ,Max( ( Const - MDR ),( AMS * Max( FirstVNF_CPU,( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) - ( ( FirstVNF_Mem - ( ACS * Min( RRS ,MDR ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.09889585072700044}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - ( Max( ( AMS / ( BR - RRS ) ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( ( ( RRS * ( FirstVNF_CPU_Server - MRS ) ) - Min( Min( ARS ,ACS ) ,Max( CRS,AMS ) ) ) - MDR ) ) ) * ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Min( RMSe ,Min( MUR ,RRSe ) ) + Min( RCSe ,RMSe ) )", "obj1": 0.7901498929336188, "obj2": 0.10435431481833916}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( ACS / BR ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( MRS / ARS ) + CRS ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUR ,( ( ( MUM - RCSe ) - RCSe ) + ( MUC / Max( RCSe,( ( RMSe * CS ) / RRSe ) ) ) ) ) + Max( RMSe,( ( MUR + Min( ( RCSe / ( RCSe * DS ) ) ,DS ) ) + DS ) ) ) * MUC )", "obj1": 0.8265524625267666, "obj2": 0.08452872380389284}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,MRS ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / MRS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( ( MLU - RRSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.13960997992969942}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( PN * ( RRS - ( MDR / PN ) ) ) / Min( ACS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) ) / ( MDR * ARS ) ) - Min( FirstVNF_CPU_Server ,( ( AMS * ACS ) / ( ( ( DDR - Const ) * FirstVNF_RAM_Server ) + RRS ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( MUC + ( MUR - MLU ) ) ) + CS ) * ( Max( ( MUR / MUM ),( ( MUC * ( DS / DS ) ) * ( ( MUR + MLU ) * Min( Min( ( MUM + MUC ) ,MLU ) ,( RRSe / Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( Min( Max( MUC,( Max( RRSe,MLU ) * RRSe ) ) ,RCSe ) * MUC ),RRSe ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11169673736695913}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( MRS * ( ( Min( Max( ARS,MRS ) ,( PN + PN ) ) * FirstVNF_Mem_Server ) / BR ) ) - ( ( Max( DDR,CRS ) + ( ( BR + ARS ) / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS + MRS ) ) - DDR ) ) ) ) ,( ( ( Min( MRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14479245195655024}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MLU * ( ( MUM / Min( Min( ( RRSe * RRSe ) ,DS ) ,( RMSe / RMSe ) ) ) * RCSe ) ) - MUM ) + Max( Min( MUC ,RCSe ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8843683083511777, "obj2": 0.054712524604425605}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( ( ( DS / ( ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) + MUR ) ) + CS ) * ( Min( MUR ,( ( MUC / MLU ) - ( MUR * MLU ) ) ) / ( ( ( ( CS + ( DS + ( MUC + RMSe ) ) ) / CS ) * ( RCSe / RRSe ) ) + MLU ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( AMS - DDR ) - ( ( ( AMS / ( Min( ( ARS - PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) + CRS ) + ( Min( FirstVNF_RAM_Server ,( ARS * FirstVNF_RAM_Server ) ) + ( ( ( ( AMS + Min( FirstVNF_Mem ,Const ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( RMSe + RRSe ) + MUR ) * MUM ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.9657387580299786, "obj2": 0.017602616213746078}, {"determining": "( Min( MRS ,( ARS * CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( BR / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( RCSe + MUR ) ,Max( ( RRSe - RCSe ),( Min( Min( ( MUR - RRSe ) ,MUM ) ,( MUM / RRSe ) ) * DS ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0028086203074805115}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) - FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( ( FirstVNF_Mem + FirstVNF_Mem ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( DS + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( RMSe - ( DS - ( Min( Max( RMSe,Min( CS ,DS ) ) ,MUR ) - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011161853601886085}, {"determining": "( ( ( PN * PN ) / Min( ACS ,ACS ) ) - ( ( ( ( PN * PN ) / Min( ( RRS * ( BR / FirstVNF_RAM_Server ) ) ,MRS ) ) * Max( DDR,CRS ) ) * ( CRS - ( Const - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + MUM ) + ( RRSe / ( ( Max( RMSe,( MLU + Min( ( MUM + MUM ) ,( DS - DS ) ) ) ) - ( ( ( RCSe + MLU ) / ( ( RRSe * RMSe ) - CS ) ) * MUM ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( CRS + ( RRS * RRS ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( MDR - FirstVNF_CPU_Server ),( ( PN * PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( Max( BR,Min( ACS ,BR ) ) ,BR ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) + Max( ( ( Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) + MLU ) - CS ),( MUM + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1153020038080135}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.0523422832064418}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - CRS ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * Min( FirstVNF_Mem_Server ,DDR ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) - ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( RCSe - ( DS * MUC ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06211309356684838}, {"determining": "( ( ( MDR - ACS ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( ( ARS - FirstVNF_Mem_Server ) - Min( Min( Max( BR,Max( ( FirstVNF_Mem_Server / MRS ),MRS ) ) ,Max( RRS,Max( FirstVNF_RAM,( MRS * ACS ) ) ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( MUR + RCSe ) + Max( MUM,( ( ( ( Max( DS,RCSe ) / ( RCSe - MUM ) ) * ( MUC - MUR ) ) - MUM ) + DS ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( AMS / Min( ACS ,AMS ) ) ),MDR ) ) ,Min( Min( MRS ,( ARS * CRS ) ) ,MRS ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( MUM + RMSe ),( ( Min( RMSe ,DS ) + Max( Max( MUM,RMSe ),RMSe ) ) / MUR ) ) + ( ( Max( MUC,RMSe ) + RRSe ) + ( MUR - MLU ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12352374861641492}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU + ( FirstVNF_Mem_Server / AMS ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( CS - ( MLU + CS ) ) ) + ( ( ( ( ( MUM + RCSe ) / ( CS * ( MUC / ( MUM - MLU ) ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.6937901498929336, "obj2": 0.15847625234314552}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ARS ) ) - Max( ( ( ACS * PN ) - Min( Const ,DDR ) ),( FirstVNF_CPU - Min( RRS ,Min( ( Min( BR ,( MRS / Const ) ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( MLU,( MUC * MLU ) ) + ( RRSe / ( ( ( MUM * ( ( ( MUC + RRSe ) / ( MUM - CS ) ) / ( ( CS * RMSe ) - ( RRSe * MUC ) ) ) ) - MUR ) + Max( DS,( MUR - CS ) ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14305537182660824}, {"determining": "( FirstVNF_CPU - ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * FirstVNF_Mem ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( Min( ( MUR + DS ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / Min( MLU ,DS ) ) * ( CS * ( MLU + MUC ) ) ) ) / ( DS - CS ) ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15847625234314552}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( ARS / MRS ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + BR ) * MRS ),( ( FirstVNF_Mem + ( Max( MDR,( PN + FirstVNF_RAM ) ) / FirstVNF_Mem_Server ) ) - ( ( ( RRS * ( FirstVNF_CPU_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) - MDR ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUM ) ) ,MUC ) ) + Max( ( MUM + ( ( Min( ( RMSe / ( CS * MUM ) ) ,RCSe ) - RMSe ) / ( MLU + ( CS + MUC ) ) ) ),( CS + ( RCSe + ( ( MUC / DS ) - ( RMSe / ( ( CS - RCSe ) / ( RMSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10248190128001884}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( ( ( CRS + BR ) * PN ) / Min( ( ARS * CRS ) ,( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) - Max( ( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_RAM ) ) * Min( Max( CRS,MDR ) ,Min( Min( ARS ,ARS ) ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),( ( MUC + ( ( CS * ( MUC - ( CS - MLU ) ) ) - MUC ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - Min( ( ( CS * RMSe ) / MLU ) ,MLU ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( ( CRS * ( FirstVNF_Mem * AMS ) ) ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( ( BR / RRS ) + FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - BR ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( ( CRS * ARS ) ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,MUM ),( ( MLU + CS ) - Min( ( MUR + ( ( RMSe - MUM ) - ( ( MLU + MUM ) * MUM ) ) ) ,RCSe ) ) ) + Max( ( MLU + DS ),( MUC + ( RCSe / ( ( RMSe / ( ( MUC / CS ) / CS ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04500375317653972}, {"determining": "( ( ( PN * PN ) / ( MRS * ACS ) ) - Max( ( ( ( PN * ( ARS + ( FirstVNF_CPU / ACS ) ) ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( RRS ,Min( Min( FirstVNF_CPU ,MDR ) ,( Min( BR ,DDR ) - MDR ) ) ) ) ) )", "choosing": "( Max( MUR,( MUC - MLU ) ) + ( RRSe / ( ( ( ( ( RMSe + ( MUM - MUC ) ) / Max( DS,RMSe ) ) * MUM ) / MUR ) + Max( ( MUR - CS ),RMSe ) ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14187993836329224}, {"determining": "( ( ( AMS - DDR ) - Min( Max( BR,FirstVNF_Mem ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( DS / DS ) + ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,( ( MUR + Min( ( RCSe / ( RCSe * DS ) ) ,DS ) ) + Min( ( ( MUR / ( MUC - RRSe ) ) * MUR ) ,MLU ) ) ) ) * MUC )", "obj1": 0.8458244111349036, "obj2": 0.0749132056056106}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( ( MDR + Const ) - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,DDR ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / AMS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( Min( CS ,( MUM / ( RMSe * DS ) ) ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) * MUC )", "obj1": 0.9250535331905781, "obj2": 0.03532198794109113}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( MUR + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14068250662544213}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( ( ( ( MUC / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8436830835117773, "obj2": 0.07590801389043249}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.7323340471092077, "obj2": 0.1349424019040217}, {"determining": "( ( PN * ( Min( ( ACS * DDR ) ,( FirstVNF_Mem - CRS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( ( AMS - FirstVNF_CPU_Server ) + ( ( PN * ( MRS * ARS ) ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( RMSe + Max( MLU,( ( MUC * MUM ) + ( ( MUR + ( MUR * RRSe ) ) + MUC ) ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( Min( MRS ,( ARS * CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( Min( Min( ( MUR - RRSe ) ,MUM ) ,( MUM / RRSe ) ) * DS ) ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( Min( MRS ,( ARS * CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( Min( Min( ( MUR - RRSe ) ,MUM ) ,( MUM / RRSe ) ) * DS ) ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( Min( ( CRS * ARS ) ,( ( MDR / MRS ) / ACS ) ) - ( Min( CRS ,Const ) + ( FirstVNF_CPU + ( ( ( ( Const + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( CS / MUM ) - RCSe ) - ( MLU + Min( CS ,RRSe ) ) ) + Min( CS ,( ( RRSe / ( MLU * RRSe ) ) / RCSe ) ) ) - MUM ) ) * MUC )", "obj1": 0.7922912205567452, "obj2": 0.10296995276521294}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( ( FirstVNF_CPU - Min( RRS ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( MUC * RRSe ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07355082819975656}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( MRS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( RMSe / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( Min( MRS ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,( RRS + CRS ) ) * PN ) / Max( ( ( RRS - AMS ) / Min( ACS ,AMS ) ),AMS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( ( Max( ( DS + ( ( DS - RRSe ) / ( MUC / RMSe ) ) ),Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( CRS,AMS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( DS + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03882666087238143}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( Max( BR,BR ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Max( RMSe,Max( DS,DS ) ) / ( Max( RMSe,( MUR - CS ) ) + ( ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * ( DS * Max( RRSe,( MUC + DS ) ) ) ) - MUR ) ) ) )", "obj1": 0.9057815845824411, "obj2": 0.04633893999053146}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,MRS ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) * MUC )", "obj1": 0.9164882226980728, "obj2": 0.04003433005119974}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( MRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( MUC + ( MUC * RMSe ) ) ,( ( ( MUM / ( Min( ( MUC / MLU ) ,( CS / MUM ) ) / Min( RRSe ,Max( RMSe,RCSe ) ) ) ) / MLU ) + MUC ) ) + ( RMSe / ( MUC - ( MLU * ( ( MUR * MUC ) / ( MUC / RMSe ) ) ) ) ) )", "obj1": 0.867237687366167, "obj2": 0.06375195210034096}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( FirstVNF_CPU_Server / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - RCSe ) * ( ( ( MLU * DS ) + CS ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( Max( ( ( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.9207708779443254, "obj2": 0.038653603374111986}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,ACS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( ARS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( ( Min( RRS ,FirstVNF_RAM_Server ) * FirstVNF_Mem ) ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) + Max( ( MUM + MLU ),( MUC + ( RCSe + ( ( MLU / MUC ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.037677985524996085}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,DDR ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + ( MUR * MUC ) ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.03532198794109113}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),MDR ) ) ,Min( Min( MRS ,( ARS * CRS ) ) ,MRS ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( MUM + RMSe ),( ( Min( RMSe ,DS ) + Max( Max( MUM,RMSe ),RMSe ) ) / MUR ) ) + ( ( Max( MUC,RMSe ) + RRSe ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12449061750781357}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,MRS ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / MRS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( ( MLU - RRSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13589503851627335}, {"determining": "( PN - ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + ( DDR - FirstVNF_Mem ) ) * PN ) * AMS ) / ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( CS - MUM ) ,( Max( ( Max( MUR,MUM ) + Min( MLU ,( ( CS * MLU ) + ( MLU * MUR ) ) ) ),RCSe ) / RRSe ) )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}], "31": [{"determining": "( ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ,( ARS * CRS ) ) ) - ( DDR + DDR ) )", "choosing": "( Max( ( Min( CS ,Max( MUM,MUC ) ) + RCSe ),( ( MLU + ( Min( MLU ,( RMSe / RMSe ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RMSe + RMSe ) ) ) ) ) - CS ) ) + Max( ( MUM - Min( RRSe ,MLU ) ),Min( DS ,MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21479865826395328}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server - Min( FirstVNF_RAM_Server ,( PN / ACS ) ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,CS ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR - ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - AMS ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - MRS ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( MUC / RMSe ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( MDR - Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21479865826395328}, {"determining": "( Max( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / MDR ) ) ,RRS ),( RRS / ( ACS * FirstVNF_CPU_Server ) ) ) - ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( RRS ,ACS ) ) ,( Max( FirstVNF_CPU,MDR ) * CRS ) ) ) )", "choosing": "Min( Min( ( ( ( Max( RCSe,CS ) * RRSe ) + MUM ) + MLU ) ,RCSe ) ,( MLU / Min( MLU ,( Max( CS,DS ) - MUC ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.2020732985962764}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( CRS * BR ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( Min( ACS ,FirstVNF_Mem ) * ( MRS - MRS ) ) + Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) + Max( ( MUM + DS ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUM ) / ( MUC / RMSe ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16262622589152173}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( PN * ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( ( MRS / RRS ) ,MDR ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( ( RMSe / Min( DS ,( CS + CS ) ) ) + ( Min( ( ( ( ( MUM + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01595793378284162}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / DS ) + ( ( ( ( MLU - RRSe ) / MUM ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( ( MUC * MLU ) / Min( RCSe ,MUR ) ) / ( ( MLU - RMSe ) - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.6616702355460385, "obj2": 0.19195096468019965}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS - ( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ) ) ) - ( Min( Max( MDR,( ARS - Const ) ) ,ARS ) / ( MRS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.18430055749208246}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,RCSe ) + ( RCSe * Min( MUR ,Max( RMSe,MUC ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09698071317545862}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.8843683083511777, "obj2": 0.0547125246044256}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_Mem_Server * AMS ),( ( FirstVNF_Mem_Server * ( BR * FirstVNF_RAM ) ) + ARS ) ) / Max( ( RRS / ( ( RRS - ARS ) / Min( ACS ,AMS ) ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) / Min( ACS ,Max( ( Const - MDR ),( AMS * Max( FirstVNF_CPU,( FirstVNF_RAM_Server + DDR ) ) ) ) ) ) - ( ( FirstVNF_Mem - ( ACS * Min( RRS ,MDR ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( MUC / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.09889585072700044}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( BR / FirstVNF_RAM ) - CRS ) - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,BR ) ) - Min( FirstVNF_RAM ,BR ) ) ) ) )", "choosing": "( Min( Min( ( ( MUC + MUM ) + DS ) ,( ( ( RRSe + MLU ) + ( MUR - ( ( CS + MUM ) + RRSe ) ) ) / MLU ) ) ,( Max( ( ( RRSe * RMSe ) + Max( Min( Max( MUM,RMSe ) ,( DS + RCSe ) ),( ( RRSe * MUM ) + CS ) ) ),Max( MLU,RCSe ) ) - DS ) ) + ( RRSe / ( Min( Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * MLU ) ,CS ) ) ,( ( MLU - RMSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07903302093109636}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( DS + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06953431263103749}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC / MLU ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.0659677737867721}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06211309356684837}, {"determining": "( ( CRS + ( RRS * RRS ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( MDR - FirstVNF_CPU_Server ),( ( PN * PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( Max( BR,Min( ACS ,BR ) ) ,BR ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) + Max( ( ( Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) + MLU ) - CS ),( MUM + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1153020038080135}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( CS * RMSe ) - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10531649126383286}, {"determining": "( ( ( Const + DDR ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ( Min( AMS ,AMS ) - DDR ) + ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,PN ) ) ),Min( BR ,( FirstVNF_CPU + BR ) ) ) )", "choosing": "( ( Min( MLU ,DS ) + ( MUM - Min( RRSe ,MLU ) ) ) + Max( ( ( ( MUR * ( MUC + Max( ( CS * MUR ),MUM ) ) ) / Min( RMSe ,MUM ) ) * RCSe ),( ( ( DS / DS ) + ( Max( MLU,RMSe ) / ( RMSe / RMSe ) ) ) - CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( Max( BR,BR ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Max( RMSe,Max( DS,DS ) ) / ( Max( RMSe,( MUR - CS ) ) + ( ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * ( DS * Max( RRSe,( MUC + DS ) ) ) ) - MUR ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14607184164731712}, {"determining": "( ( ( ( ARS / AMS ) * ACS ) / ACS ) - ( Const / RRS ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( ( CRS * ( FirstVNF_Mem * AMS ) ) ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( ( BR / RRS ) + FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - BR ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( ( CRS * ARS ) ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,MUM ),( ( MLU + CS ) - Min( ( MUR + ( ( RMSe - MUM ) - ( ( MLU + MUM ) * MUM ) ) ) ,RCSe ) ) ) + Max( ( MLU + DS ),( MUC + ( RCSe / ( ( RMSe / ( ( MUC / CS ) / CS ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04500375317653972}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.02070122008867116}, {"determining": "( ( AMS - DDR ) - ( ( ( Const / AMS ) + ( RRS / MDR ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( ACS * RRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( CS * ( MUM / MUC ) ) - ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( ( CS - DS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUC + RMSe ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( ( ( ( MUC / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8436830835117773, "obj2": 0.07590801389043249}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( CRS + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * ARS ) + Const ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( Const / ACS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - ACS ) ) ) ) )", "choosing": "( ( MLU - ( CS / DS ) ) * ( ( ( Min( ( MUM + RCSe ) ,Min( ( MLU + RMSe ) ,CS ) ) * DS ) + CS ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10833189004683597}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.13398498578130216}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( ( ( FirstVNF_RAM_Server * Max( FirstVNF_CPU,PN ) ) * Const ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + Const ) ) ,Max( ( RRS * PN ),( CRS + CRS ) ) ) ) ) + ( ( Min( CRS ,ACS ) / ARS ) + ( ( ( ( AMS + ( BR / ACS ) ) * PN ) * FirstVNF_RAM ) / ( MDR - ( AMS - DDR ) ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( ( MLU + RMSe ) - CS ) ) + Min( ( ( CS * Min( RRSe ,( ( RRSe / Min( MUC ,RCSe ) ) + Max( RRSe,MUM ) ) ) ) + ( ( ( Min( ( RMSe / RCSe ) ,MUR ) / MUC ) / ( RMSe * DS ) ) + Max( MUC,MLU ) ) ) ,( MUR - MUC ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( FirstVNF_RAM - ( Max( CRS,BR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( RRSe / RCSe ),( RCSe * ( ( RCSe + MUR ) / Min( RMSe ,Min( ( CS + RRSe ) ,DS ) ) ) ) ) ,( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) )", "obj1": 0.9486081370449678, "obj2": 0.022683763772516966}, {"determining": "( ( ( ( CRS - Const ) + FirstVNF_Mem ) - ( Max( MDR,MDR ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) - Min( Min( PN ,FirstVNF_Mem_Server ) ,Const ) )", "choosing": "( ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) * ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( Min( MLU ,Max( Min( CS ,CS ),( DS * RRSe ) ) ) / RRSe ) ) - MLU ) ) + ( ( MUM + RCSe ) + ( ( MUM * MUM ) * RMSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10932327704583977}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,ACS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( PN + Const ) ) + ( ( ARS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( ( Min( RRS ,FirstVNF_RAM_Server ) * FirstVNF_Mem ) ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM * RMSe ) / ( Max( ( ( MUR - Min( RMSe ,RMSe ) ) * CS ),( Max( Max( ( DS - MUM ),RMSe ),Min( MUR ,MUR ) ) - MUM ) ) + Max( RCSe,MUC ) ) ) + Max( ( MUM + MLU ),( MUC + ( RCSe + ( ( MLU / MUC ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.9528907922912205, "obj2": 0.022545690554101695}, {"determining": "( ( PN * ( Min( ( ACS * DDR ) ,( FirstVNF_Mem - CRS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( ( AMS - FirstVNF_CPU_Server ) + ( ( PN * ( MRS * ARS ) ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( RMSe + Max( MLU,( ( MUC * MUM ) + ( ( MUR + ( MUR * RRSe ) ) + MUC ) ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( PN * ( RRS - ( MDR / PN ) ) ) / Min( ACS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) ) / ( MDR * ARS ) ) - Min( FirstVNF_CPU_Server ,( ( AMS * ACS ) / ( ( ( DDR - Const ) * FirstVNF_RAM_Server ) + RRS ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( MUC + ( MUR - MLU ) ) ) + CS ) * ( Max( ( MUR / MUM ),( ( MUC * ( DS / DS ) ) * ( ( MUR + MLU ) * Min( Min( ( MUM + MUC ) ,MLU ) ,( RRSe / Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( Min( Max( MUC,( Max( RRSe,MLU ) * RRSe ) ) ,RCSe ) * MUC ),RRSe ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11169673736695913}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( MRS * ( ( Min( Max( ARS,MRS ) ,( PN + PN ) ) * FirstVNF_Mem_Server ) / BR ) ) - ( ( Max( DDR,CRS ) + ( ( BR + ARS ) / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS + MRS ) ) - DDR ) ) ) ) ,( ( ( Min( MRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14479245195655024}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( RRS - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,MRS ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) * MUC )", "obj1": 0.8950749464668094, "obj2": 0.05015610492648931}, {"determining": "( ( PN * ( ( Const / AMS ) + ( RRS / MDR ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( ( ( DS / ( ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) + MUR ) ) + CS ) * ( Min( ( ( ( ( CS * ( MUM / MUC ) ) - ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ,( ( MUC / MLU ) - ( MUR * MLU ) ) ) / ( ( ( ( CS + ( DS + ( MUC + RMSe ) ) ) / CS ) * ( RCSe / RRSe ) ) + MLU ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( MRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( MUC + ( MUC * RMSe ) ) ,( ( ( MUM / ( Min( ( MUC / MLU ) ,( CS / MUM ) ) / Min( RRSe ,Max( RMSe,RCSe ) ) ) ) / MLU ) + MUC ) ) + ( RMSe / ( MUC - ( MLU * ( ( MUR * MUC ) / ( MUC / RMSe ) ) ) ) ) )", "obj1": 0.867237687366167, "obj2": 0.06375195210034096}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( MDR - ( AMS - DDR ) ) * PN ) / Max( CRS,( PN * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + MUR ) ) ) ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9164882226980728, "obj2": 0.039240693626443786}, {"determining": "( ( ( MDR - ACS ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( ( ARS - FirstVNF_Mem_Server ) - Min( Min( Max( BR,Max( ( FirstVNF_Mem_Server / MRS ),MRS ) ) ,Max( RRS,Max( FirstVNF_RAM,( MRS * ACS ) ) ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( MUR + RCSe ) + Max( MUM,( ( ( ( Max( DS,RCSe ) / ( RCSe - MUM ) ) * ( MUC - MUR ) ) - MUM ) + DS ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( ( ( ( DDR - BR ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - Max( CRS,AMS ) ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS * RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / DS ),RCSe ),( ( ( ( MUC + MUR ) + RRSe ) / ( ( MUR * DS ) / ( ( CS - RRSe ) * ( MUM * MUR ) ) ) ) / RCSe ) ) ) )", "obj1": 0.8329764453961456, "obj2": 0.0828702849563329}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( ( PN * PN ) / Min( ( ARS * CRS ) ,( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_RAM ) ) ,Min( Max( CRS,MDR ) ,Min( Min( ARS ,ARS ) ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MUC + ( Min( DS ,( ( MUC / DS ) - MUR ) ) - ( RRSe * ( RCSe * RRSe ) ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - Min( ( ( CS * RMSe ) / MLU ) ,MLU ) ) ) )", "obj1": 0.6616702355460385, "obj2": 0.19195096468019965}, {"determining": "( ( PN * FirstVNF_Mem ) - Min( FirstVNF_CPU ,( ( MDR - FirstVNF_CPU_Server ) + ( ACS * ARS ) ) ) )", "choosing": "( Max( ( Min( CS ,Max( MUM,MUC ) ) + RCSe ),( ( MLU + ( Min( MLU ,( MUC / Max( RRSe,MUC ) ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RMSe + RMSe ) ) ) ) ) - CS ) ) + Max( ( MUM - Min( RRSe ,MLU ) ),Min( DS ,MLU ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) / ( ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) * FirstVNF_CPU ) ) - ( FirstVNF_CPU - CRS ) )", "choosing": "( Max( ( ( MUM + CS ) * CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( ( MUC / ( CS * MUR ) ) ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( RRSe - MLU ) + ( Min( MLU ,DS ) + DS ) ) ) ) ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03255540775026041}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( ( ( ( ARS - FirstVNF_CPU_Server ) * FirstVNF_CPU ) * PN ) - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,DDR ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( MUM - RCSe ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) * MUC )", "obj1": 0.8972162740899358, "obj2": 0.049504081222129154}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - ( Max( ( AMS / ( BR - RRS ) ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( ( ( RRS * ( FirstVNF_CPU_Server - MRS ) ) - Min( Min( ARS ,ACS ) ,Max( CRS,AMS ) ) ) - MDR ) ) ) * ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Min( RMSe ,Min( MUR ,RRSe ) ) + Min( RCSe ,RMSe ) )", "obj1": 0.7901498929336188, "obj2": 0.10435431481833916}, {"determining": "( ( ( PN * PN ) / Min( ACS ,ACS ) ) - ( ( ( ( PN * PN ) / Min( ( RRS * ( BR / FirstVNF_RAM_Server ) ) ,MRS ) ) * Max( DDR,CRS ) ) * ( CRS - ( Const - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + MUM ) + ( RRSe / ( ( Max( RMSe,( MLU + Min( ( MUM + MUM ) ,( DS - DS ) ) ) ) - ( ( ( RCSe + MLU ) / ( ( RRSe * RMSe ) - CS ) ) * MUM ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.0523422832064418}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13726505149900398}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU + ( FirstVNF_Mem_Server / AMS ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( CS - ( MLU + CS ) ) ) + ( ( ( ( ( MUM + RCSe ) / ( CS * ( MUC / ( MUM - MLU ) ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.6937901498929336, "obj2": 0.15847625234314552}, {"determining": "( PN - ( FirstVNF_CPU + ( ( RRS - RRS ) + ( ( Min( Max( ( RRS * ACS ),( CRS + Const ) ) ,( MDR - FirstVNF_CPU_Server ) ) * PN ) / Max( ( ( AMS + ( CRS / ACS ) ) * PN ),AMS ) ) ) ) )", "choosing": "Min( ( CS - MUM ) ,( Max( ( Max( MUR,MUM ) + Min( ( MUR / MUM ) ,Max( DS,RCSe ) ) ),RCSe ) / RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03055798806702105}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Max( ( ( RRS - AMS ) / Min( ACS ,AMS ) ),AMS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( Max( ( DS + ( ( DS - RRSe ) / ( MUC / RMSe ) ) ),Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) + RMSe ) * DS ) * MUC )", "obj1": 0.828693790149893, "obj2": 0.08369278971046969}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe + ( ( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9400428265524625, "obj2": 0.028643155821581986}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ARS ) ) - Max( ( ( ACS * PN ) - Min( Const ,DDR ) ),( FirstVNF_CPU - Min( RRS ,Min( ( Min( BR ,( MRS / Const ) ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( MLU,( MUC * MLU ) ) + ( RRSe / ( ( ( MUM * ( ( ( MUC + RRSe ) / ( MUM - CS ) ) / ( ( CS * RMSe ) - ( RRSe * MUC ) ) ) ) - MUR ) + Max( DS,( MUR - CS ) ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14305537182660824}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( ( ( DS / ( ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) + MUR ) ) + CS ) * ( Min( MUR ,( ( MUC / MLU ) - ( MUR * MLU ) ) ) / ( ( ( ( CS + ( DS + ( MUC + RMSe ) ) ) / CS ) * ( RCSe / RRSe ) ) + MLU ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( FirstVNF_CPU - ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * FirstVNF_Mem ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( Min( ( MUR + DS ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / Min( MLU ,DS ) ) * ( CS * ( MLU + MUC ) ) ) ) / ( DS - CS ) ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15847625234314552}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ARS * ( ( ( ( MDR - FirstVNF_CPU_Server ) * PN ) / Min( ACS ,MRS ) ) - Max( DDR,CRS ) ) ) / ( BR - ( ( ( ( PN * PN ) / Min( ( RRS - FirstVNF_CPU ) ,ACS ) ) - Max( DDR,CRS ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( ( MUM - ( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11839929840401037}, {"determining": "( ( ( ( CRS + BR ) * PN ) / Min( ( ARS * CRS ) ,( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) - Max( ( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_RAM ) ) * Min( Max( CRS,MDR ) ,Min( Min( ARS ,ARS ) ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),( ( MUC + ( ( CS * ( MUC - ( CS - MLU ) ) ) - MUC ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - Min( ( ( CS * RMSe ) / MLU ) ,MLU ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( ( MRS + ARS ) - ( ( ( AMS - ( ( FirstVNF_Mem + Min( DDR ,Const ) ) + Min( MDR ,Min( MRS ,FirstVNF_RAM ) ) ) ) - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( Max( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ),( ( ( PN * PN ) / Min( ACS ,MRS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,( ( RRSe - RCSe ) + ( ( Max( ( ( MUR - MUR ) + ( ( MLU + RCSe ) * Max( MUC,DS ) ) ),( Min( CS ,MLU ) - ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08452872380389284}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( PN * PN ) / ( MRS * ACS ) ) - Max( ( ( ( PN * ( ARS + ( FirstVNF_CPU / ACS ) ) ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( RRS ,Min( Min( FirstVNF_CPU ,MDR ) ,( Min( BR ,DDR ) - MDR ) ) ) ) ) )", "choosing": "( Max( MUR,( MUC - MLU ) ) + ( RRSe / ( ( ( ( ( RMSe + ( MUM - MUC ) ) / Max( DS,RMSe ) ) * MUM ) / MUR ) + Max( ( MUR - CS ),RMSe ) ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14187993836329224}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.0523422832064418}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( MDR - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,ACS ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( RRSe / ( Min( MLU ,( ( MUM - RCSe ) + RCSe ) ) + Max( RMSe,( MLU - CS ) ) ) ) + ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( DS - ( ( CS + RCSe ) + CS ) ) ) - MUM ) ) * ( RRSe / CS ) ) )", "obj1": 0.9250535331905781, "obj2": 0.03532198794109113}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( MUR / MUM ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13932763304733425}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - Max( FirstVNF_CPU_Server,MDR ) ) + ( ( PN * ( FirstVNF_CPU - ( AMS - DDR ) ) ) / Max( CRS,( PN * ( FirstVNF_RAM / RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) ) + Max( ( ( RMSe / CS ) - Max( MUC,RMSe ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9293361884368309, "obj2": 0.03298580510425135}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( MUR + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14068250662544213}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( ARS / MRS ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + BR ) * MRS ),( ( FirstVNF_Mem + ( Max( MDR,( PN + FirstVNF_RAM ) ) / FirstVNF_Mem_Server ) ) - ( ( ( RRS * ( FirstVNF_CPU_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) - MDR ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUM ) ) ,MUC ) ) + Max( ( MUM + ( ( Min( ( RMSe / ( CS * MUM ) ) ,RCSe ) - RMSe ) / ( MLU + ( CS + MUC ) ) ) ),( CS + ( RCSe + ( ( MUC / DS ) - ( RMSe / ( ( CS - RCSe ) / ( RMSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10248190128001884}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( ( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / Min( ( Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) / Max( ( RRS / ( ( RRS - AMS ) / Min( ACS ,AMS ) ) ),MDR ) ) ,Min( Min( MRS ,( ARS * CRS ) ) ,MRS ) ) ) - ( BR / ACS ) )", "choosing": "( Max( ( MUM + RMSe ),( ( Min( RMSe ,DS ) + Max( Max( MUM,RMSe ),RMSe ) ) / MUR ) ) + ( ( Max( MUC,RMSe ) + RRSe ) + ( ( ( RMSe / RRSe ) / DS ) - MLU ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12449061750781357}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( Max( ( CRS * MRS ),FirstVNF_CPU_Server ) - ( AMS - ( ( RRS * PN ) / ( MRS - FirstVNF_CPU ) ) ) ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - ( RMSe / RMSe ) ) + ( DS / DS ) ) + Max( RMSe,Min( ( ( MLU * ( RRSe / RCSe ) ) * MUC ) ,( Max( ( RRSe / Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( CS,RMSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.8265524625267666, "obj2": 0.08452872380389284}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Min( Max( ( RRS * ACS ),( CRS + Const ) ) ,( MDR - FirstVNF_CPU_Server ) ) * PN ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - Min( ( MUR / MUM ) ,Max( DS,RCSe ) ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13476708207510643}, {"determining": "( Min( MRS ,( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,( RRS + CRS ) ) * PN ) / Max( ( ( RRS - AMS ) / Min( ACS ,AMS ) ),AMS ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( ( RRSe * RCSe ) / Max( Max( RMSe,MUM ),DS ) ),RCSe ) - MUR ) ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( ( Max( ( DS + ( ( DS - RRSe ) / ( MUC / RMSe ) ) ),Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( ( ( MDR * ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) - ( MDR - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,DDR ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( Max( ( MUM + ( ( ( CS + DS ) / ( RRSe / RCSe ) ) + ( Max( MUR,MUR ) - MUC ) ) ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( CS * ( MUC / RRSe ) ) ) ) + ( DS * MLU ) ) ) ) * RCSe )", "obj1": 0.9978586723768736, "obj2": 0.0011173146503797547}, {"determining": "( Min( ( CRS * ARS ) ,( ( MDR / MRS ) / ACS ) ) - ( Min( CRS ,Const ) + ( FirstVNF_CPU + ( ( ( ( Const + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( CS / MUM ) - RCSe ) - ( MLU + Min( CS ,RRSe ) ) ) + Min( CS ,( ( RRSe / ( MLU * RRSe ) ) / RCSe ) ) ) - MUM ) ) * MUC )", "obj1": 0.7922912205567452, "obj2": 0.10296995276521294}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( MRS - ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( RMSe / DS ) ),( ( Min( ( ( DS - MUC ) + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( AMS - ARS ) - ( ( Min( Const ,( ( ( FirstVNF_CPU_Server * RRS ) - MRS ) * FirstVNF_Mem ) ) + ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( FirstVNF_CPU - RRS ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( Min( RMSe ,RCSe ) / ( CS * Min( MLU ,( CS / MUM ) ) ) ) + RMSe ) + Min( ( ( ( CS * MLU ) * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0018724135383203408}, {"determining": "( ( ( PN * PN ) / Min( Min( ( ( MRS - ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) / Const ) ,DDR ) ,( ARS * CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RRSe ,MLU ) - Max( Max( MUR,( RMSe / DS ) ),( ( Min( ( CS + ( MUC * RMSe ) ) ,MUC ) - CS ) / ( MUC / ( ( ( MUM * RMSe ) - ( MUC * MLU ) ) / MUR ) ) ) ) ) + ( CS / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.1553356495218803}, {"determining": "( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( MDR - Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( ( ( MLU / MUC ) + ( MUM + RCSe ) ) * MUM ) ) ,MUM ) + MLU ) ,RCSe ) ,( ( ( RMSe / MLU ) / RCSe ) - CS ) )", "obj1": 0.7494646680942184, "obj2": 0.12572945594011334}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( ARS * CRS ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( ( MUC * MLU ) / Min( RCSe ,MUR ) ) / ( ( MLU - RMSe ) - Min( MUR ,CS ) ) ) * MUM ) ) + Max( CS,Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.854389721627409, "obj2": 0.07059006374074119}], "32": [{"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( ( AMS + ( AMS - RRS ) ) - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC / MLU ) ) ) + RMSe ) + Min( ( RRSe / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server - Min( FirstVNF_RAM_Server ,( PN / ACS ) ) ) + BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,CS ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR - ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,( MDR - FirstVNF_CPU_Server ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / DS ) + ( ( ( ( MLU - RRSe ) / MUM ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( MUC + Min( ( RCSe + CS ) ,( MUC * CS ) ) ) - CS ) - RCSe ) ) ) )", "obj1": 0.6466809421841542, "obj2": 0.2208872149709453}, {"determining": "( Max( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / MDR ) ) ,RRS ),( RRS / ( ACS * FirstVNF_CPU_Server ) ) ) - ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( RRS ,ACS ) ) ,( Max( FirstVNF_CPU,MDR ) * CRS ) ) ) )", "choosing": "Min( Min( ( ( ( Max( RCSe,CS ) * RRSe ) + MUM ) + MLU ) ,RCSe ) ,( MLU / Min( MLU ,( Max( CS,DS ) - MUC ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.2020732985962764}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( CRS * BR ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( Min( ACS ,FirstVNF_Mem ) * ( MRS - MRS ) ) + Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) + Max( ( MUM + DS ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUM ) / ( MUC / RMSe ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16262622589152173}, {"determining": "( ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( FirstVNF_CPU_Server ,ACS ) ) ,( ARS * CRS ) ) ) - ( DDR + DDR ) )", "choosing": "( Max( ( Min( CS ,Max( MUM,MUC ) ) + RCSe ),( ( MLU + ( Min( MLU ,( RMSe / RMSe ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RMSe + RMSe ) ) ) ) ) - CS ) ) + Max( ( MUM - Min( RRSe ,MLU ) ),Min( DS ,MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.21479865826395328}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / Min( CS ,RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6573875802997858, "obj2": 0.19545290245221195}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - Max( ACS,AMS ) ) + ( ( PN * Min( ( FirstVNF_RAM / FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) - Max( CRS,AMS ) ) ) ) )", "choosing": "( ( ( DS / ( ( ( ( CS - ( RCSe - RCSe ) ) - RMSe ) * DS ) + MUR ) ) + CS ) * ( Min( MUR ,( ( MUC / MLU ) - ( MUR * MLU ) ) ) / ( ( ( ( CS + ( DS + ( MUR + MUR ) ) ) / CS ) * ( RRSe / RCSe ) ) + MLU ) ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS - ( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ) ) ) - ( Min( Max( MDR,( ARS - Const ) ) ,ARS ) / ( MRS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.18430055749208246}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.8843683083511777, "obj2": 0.0547125246044256}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( BR / FirstVNF_RAM ) - CRS ) - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,BR ) ) - Min( FirstVNF_RAM ,BR ) ) ) ) )", "choosing": "( Min( Min( ( ( MUC + MUM ) + DS ) ,( ( ( RRSe + MLU ) + ( MUR - ( ( CS + MUM ) + RRSe ) ) ) / MLU ) ) ,( Max( ( ( RRSe * RMSe ) + Max( Min( Max( MUM,RMSe ) ,( DS + RCSe ) ),( ( RRSe * MUM ) + CS ) ) ),Max( MLU,RCSe ) ) - DS ) ) + ( RRSe / ( Min( Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * MLU ) ,CS ) ) ,( ( MLU - RMSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07903302093109636}, {"determining": "( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS + ( AMS - DDR ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) - ( ( ( ( Min( MRS ,DDR ) / ( PN * PN ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( ACS / Const ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( ACS - ( DDR * ARS ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) * ( ( DS / ( MUM * Max( RCSe,MUR ) ) ) / Min( ( RCSe - RMSe ) ,CS ) ) ) + Max( ( MUM + DS ),( MUC + ( DS + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06027424043112361}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06211309356684837}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( DS + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06953431263103749}, {"determining": "( ( CRS + ( RRS * RRS ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( MDR - FirstVNF_CPU_Server ),( ( PN * PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( Max( BR,Min( ACS ,BR ) ) ,BR ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) + Max( ( ( Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) + MLU ) - CS ),( MUM + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1153020038080135}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( BR - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,RCSe ) + ( RCSe * Min( MUR ,Max( RMSe,MUC ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09698071317545862}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.02070122008867116}, {"determining": "( ( ( Const + DDR ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ( Min( AMS ,AMS ) - DDR ) + ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,PN ) ) ),Min( BR ,( FirstVNF_CPU + BR ) ) ) )", "choosing": "( ( Min( MLU ,DS ) + ( MUM - Min( RRSe ,MLU ) ) ) + Max( ( ( ( MUR * ( MUC + Max( ( CS * MUR ),MUM ) ) ) / Min( RMSe ,MUM ) ) * RCSe ),( ( ( DS / DS ) + ( Max( MLU,RMSe ) / ( RMSe / RMSe ) ) ) - CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( Max( BR,BR ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Max( RMSe,Max( DS,DS ) ) / ( Max( RMSe,( MUR - CS ) ) + ( ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * ( DS * Max( RRSe,( MUC + DS ) ) ) ) - MUR ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14607184164731712}, {"determining": "( ( FirstVNF_RAM - Max( FirstVNF_RAM,( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ARS ) ) ) - Max( Min( Min( Max( FirstVNF_Mem_Server,MDR ) ,Min( FirstVNF_Mem_Server ,MDR ) ) ,RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,( ( ( MUR * MUC ) / CS ) * CS ) ) + MUM ) + MLU ) ,RCSe ) ,( ( Max( MLU,Min( RRSe ,CS ) ) / ( MUM * RRSe ) ) / RRSe ) )", "obj1": 0.6509635974304069, "obj2": 0.21479865826395328}, {"determining": "( ( ( ( ARS / AMS ) * ACS ) / ACS ) - ( Const / RRS ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( ( CRS * ( FirstVNF_Mem * AMS ) ) ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( ( BR / RRS ) + FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - BR ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( ( CRS * ARS ) ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,MUM ),( ( MLU + CS ) - Min( ( MUR + ( ( RMSe - MUM ) - ( ( MLU + MUM ) * MUM ) ) ) ,RCSe ) ) ) + Max( ( MLU + DS ),( MUC + ( RCSe / ( ( RMSe / ( ( MUC / CS ) / CS ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04500375317653972}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Min( Max( ( RRS * ACS ),( CRS + Const ) ) ,( MDR - FirstVNF_CPU_Server ) ) * PN ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - Min( ( MUR / MUM ) ,Max( DS,RCSe ) ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13476708207510643}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - Max( FirstVNF_CPU_Server,MDR ) ) + ( ( PN * ( FirstVNF_CPU - ( AMS - DDR ) ) ) / Max( CRS,( PN * ( FirstVNF_RAM / RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) ) + Max( ( ( RMSe / CS ) - Max( MUC,RMSe ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9293361884368309, "obj2": 0.03298580510425135}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( ( ( DDR - BR ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - Max( CRS,AMS ) ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS * RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / DS ),RCSe ),( ( ( ( MUC + MUR ) + RRSe ) / ( ( MUR * DS ) / ( ( CS - RRSe ) * ( MUM * MUR ) ) ) ) / RCSe ) ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0028086203074805115}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( MDR - ( ( RRS * ( MRS + MRS ) ) - DDR ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.036946129945337275}, {"determining": "( ( ( ( CRS - Const ) + FirstVNF_Mem ) - ( Max( MDR,MDR ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) - Min( Min( PN ,FirstVNF_Mem_Server ) ,Const ) )", "choosing": "( ( ( ( ( RCSe + ( ( ( RRSe + MUR ) + ( MUM - MUC ) ) - Min( ( RRSe * RRSe ) ,DS ) ) ) * ( RCSe / Max( MUC,DS ) ) ) * MUM ) + ( ( DS / ( Min( MLU ,Max( Min( CS ,CS ),( DS * RRSe ) ) ) / RRSe ) ) - MLU ) ) + ( ( MUM + RCSe ) + ( ( MUM * MUM ) * RMSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10932327704583977}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe + ( ( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( CS,RMSe ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021726347649797438}, {"determining": "( ( PN * ( Min( ( ACS * DDR ) ,( FirstVNF_Mem - CRS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( ( AMS - FirstVNF_CPU_Server ) + ( ( PN * ( MRS * ARS ) ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( RMSe + Max( MLU,( ( MUC * MUM ) + ( ( MUR + ( MUR * RRSe ) ) + MUC ) ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - ( PN / ACS ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ARS * ( ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * PN ) / Min( ACS ,MRS ) ) - Max( DDR,CRS ) ) ) / ( ( ( ( ( PN * PN ) / Min( ( RRS - FirstVNF_CPU ) ,ACS ) ) - Max( DDR,CRS ) ) - CRS ) - BR ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( ( MUM - ( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( Max( RRSe,Max( MUM,( MUR / MLU ) ) ) * ( ( ( MLU + RMSe ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.7601713062098501, "obj2": 0.1193567145267299}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( PN * PN ) ) ) )", "choosing": "( Max( ( Min( CS ,Max( MUM,MUC ) ) + RCSe ),( ( MLU + ( Min( MLU ,( RMSe / RMSe ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( MLU + RMSe ) ) ) ) ) - CS ) ) + Max( ( MUM - Min( RRSe ,MLU ) ),Min( DS ,MLU ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01595793378284162}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( PN * ( RRS - ( MDR / PN ) ) ) / Min( ACS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) ) / ( MDR * ARS ) ) - Min( FirstVNF_CPU_Server ,( ( AMS * ACS ) / ( ( ( DDR - Const ) * FirstVNF_RAM_Server ) + RRS ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( MUC + ( MUR - MLU ) ) ) + CS ) * ( Max( ( MUR / MUM ),( ( MUC * ( DS / DS ) ) * ( ( MUR + MLU ) * Min( Min( ( MUM + MUC ) ,MLU ) ,( RRSe / Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( Min( Max( MUC,( Max( RRSe,MLU ) * RRSe ) ) ,RCSe ) * MUC ),RRSe ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11169673736695913}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,Const ) ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,( DS + ( MLU - ( Min( ( Max( RCSe,MUR ) / ( CS / DS ) ) ,DS ) * DS ) ) ) ) + ( ( ( ( ( ( MUC / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8436830835117773, "obj2": 0.07590801389043249}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( MRS * ( ( Min( Max( ARS,MRS ) ,( PN + PN ) ) * FirstVNF_Mem_Server ) / BR ) ) - ( ( Max( DDR,CRS ) + ( ( BR + ARS ) / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS + MRS ) ) - DDR ) ) ) ) ,( ( ( Min( MRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14479245195655024}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( RRS - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,MRS ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) * MUC )", "obj1": 0.8950749464668094, "obj2": 0.05015610492648931}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( Max( ( Min( CS ,Max( MUM,MUC ) ) + RCSe ),( ( MLU + ( Min( MLU ,( RMSe / RMSe ) ) - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) - CS ) ) + Max( ( MUM - Min( RRSe ,MLU ) ),Min( DS ,MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008425860922441533}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( RRS,FirstVNF_Mem ) ,Max( ARS,DDR ) ) ,Min( ( Min( BR ,DDR ) - ( ACS / DDR ) ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MUC + Min( ( RCSe + CS ) ,( MUC * CS ) ) ) - CS ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.9057815845824411, "obj2": 0.04633893999053146}, {"determining": "( ( ( PN * PN ) / Min( ACS ,ACS ) ) - ( ( ( ( PN * PN ) / Min( ( RRS * ( BR / FirstVNF_RAM_Server ) ) ,MRS ) ) * Max( DDR,CRS ) ) * ( CRS - ( Const - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + MUM ) + ( RRSe / ( ( Max( RMSe,( MLU + Min( ( MUM + MUM ) ,( DS - DS ) ) ) ) - ( ( ( RCSe + MLU ) / ( ( RRSe * RMSe ) - CS ) ) * MUM ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( MUR + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14068250662544213}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) / ( ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) * FirstVNF_CPU ) ) - ( FirstVNF_CPU - CRS ) )", "choosing": "( Max( ( ( MUM + CS ) * CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( ( MUC / ( CS * MUR ) ) ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( RRSe - MLU ) + ( Min( MLU ,DS ) + DS ) ) ) ) ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03255540775026041}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,Max( ( RRSe - RCSe ),( ( Max( ( DS + ( ( DS - RRSe ) / ( MUC / RMSe ) ) ),Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - ( Max( ( AMS / ( BR - RRS ) ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( ( ( RRS * ( FirstVNF_CPU_Server - MRS ) ) - Min( Min( ARS ,ACS ) ,Max( CRS,AMS ) ) ) - MDR ) ) ) * ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Min( RMSe ,Min( MUR ,RRSe ) ) + Min( RCSe ,RMSe ) )", "obj1": 0.7901498929336188, "obj2": 0.10435431481833916}, {"determining": "( ( ( MDR - ACS ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( ( ARS - FirstVNF_Mem_Server ) - Min( Min( Max( BR,Max( ( FirstVNF_Mem_Server / MRS ),MRS ) ) ,Max( RRS,Max( FirstVNF_RAM,( MRS * ACS ) ) ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( MUR + RCSe ) + Max( MUM,( ( ( ( Max( DS,RCSe ) / ( RCSe - MUM ) ) * ( MUC - MUR ) ) - MUM ) + DS ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03882666087238142}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09943007353483349}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( ARS / MRS ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + BR ) * MRS ),( ( FirstVNF_Mem + ( Max( MDR,( PN + FirstVNF_RAM ) ) / FirstVNF_Mem_Server ) ) - ( ( ( RRS * ( FirstVNF_CPU_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) - MDR ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUM ) ) ,MUC ) ) + Max( ( MUM + ( ( Min( ( RMSe / ( CS * MUM ) ) ,RCSe ) - RMSe ) / ( MLU + ( CS + MUC ) ) ) ),( CS + ( RCSe + ( ( MUC / DS ) - ( RMSe / ( ( CS - RCSe ) / ( RMSe / RMSe ) ) ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10248190128001884}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.0523422832064418}, {"determining": "( ( ( PN * PN ) / Min( ( ( FirstVNF_CPU * PN ) / Min( MRS ,( ( ( ACS + ARS ) / ARS ) * Const ) ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + MUR ),( ( MUC + Min( ( RCSe + CS ) ,( MUC * CS ) ) ) - CS ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( ( Min( MUC ,MLU ) - RCSe ) * MUC ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.6616702355460385, "obj2": 0.19195096468019965}, {"determining": "( ( ( ( ( DDR - BR ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - Max( CRS,AMS ) ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS * RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / DS ),RCSe ),( ( ( ( MUC + MUR ) + RRSe ) / ( ( MUR * DS ) / ( ( CS - RRSe ) * ( MUM * MUR ) ) ) ) / RCSe ) ) ) )", "obj1": 0.8329764453961456, "obj2": 0.0828702849563329}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( MUC / RMSe ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13726505149900398}, {"determining": "( ( ( ( ( DDR - BR ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - Max( CRS,AMS ) ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS * RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / DS ),RCSe ),( ( ( ( MUC + MUR ) + RRSe ) / ( ( MUR * DS ) / ( ( CS - RRSe ) * ( MUM * MUR ) ) ) ) / RCSe ) ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0028086203074805115}, {"determining": "( ( AMS - DDR ) - ( ( ( Const / AMS ) + ( RRS / MDR ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + ( ACS * RRS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( ( ( CS * ( MUM / MUC ) ) - ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) + ( ( CS - DS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUC + RMSe ) / ( MUC / ( ( Min( DS ,MLU ) + DS ) + Min( MUM ,MLU ) ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04780824653077811}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU + ( FirstVNF_Mem_Server / AMS ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( CS - ( MLU + CS ) ) ) + ( ( ( ( ( MUM + RCSe ) / ( CS * ( MUC / ( MUM - MLU ) ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.6937901498929336, "obj2": 0.15847625234314552}, {"determining": "( PN - ( FirstVNF_CPU + ( ( RRS - RRS ) + ( ( Min( Max( ( RRS * ACS ),( CRS + Const ) ) ,( MDR - FirstVNF_CPU_Server ) ) * PN ) / Max( ( ( AMS + ( CRS / ACS ) ) * PN ),AMS ) ) ) ) )", "choosing": "Min( ( CS - MUM ) ,( Max( ( Max( MUR,MUM ) + Min( ( MUR / MUM ) ,Max( DS,RCSe ) ) ),RCSe ) / RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03055798806702105}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( ( FirstVNF_RAM_Server - DDR ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( AMS / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( MUR + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( RMSe + ( ( RCSe / MUR ) + RMSe ) ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10531649126383286}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( DS + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( DS - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13218762179016466}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe + ( ( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9400428265524625, "obj2": 0.028643155821581986}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ARS ) ) - Max( ( ( ACS * PN ) - Min( Const ,DDR ) ),( FirstVNF_CPU - Min( RRS ,Min( ( Min( BR ,( MRS / Const ) ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( MLU,( MUC * MLU ) ) + ( RRSe / ( ( ( MUM * ( ( ( MUC + RRSe ) / ( MUM - CS ) ) / ( ( CS * RMSe ) - ( RRSe * MUC ) ) ) ) - MUR ) + Max( DS,( MUR - CS ) ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14305537182660824}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( ( ( ( ( MUC / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8436830835117773, "obj2": 0.07590801389043249}, {"determining": "( FirstVNF_CPU - ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * FirstVNF_Mem ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( Min( ( MUR + DS ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / Min( MLU ,DS ) ) * ( CS * ( MLU + MUC ) ) ) ) / ( DS - CS ) ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15847625234314552}, {"determining": "( ( ( MRS + ARS ) - ( ( ( AMS - ( ( FirstVNF_Mem + Min( DDR ,Const ) ) + Min( MDR ,Min( MRS ,FirstVNF_RAM ) ) ) ) - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( Max( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ),( ( ( PN * PN ) / Min( ACS ,MRS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,( ( RRSe - RCSe ) + ( ( Max( ( ( MUR - MUR ) + ( ( MLU + RCSe ) * Max( MUC,DS ) ) ),( Min( CS ,MLU ) - ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08452872380389284}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,CRS ) ) - ( Min( MDR ,( FirstVNF_Mem / MDR ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( RRS / FirstVNF_RAM ) ) ) ) - ( AMS + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( ( DS - MLU ) + Max( ( MUC / DS ),Min( ( MUM - CS ) ,( MUM + Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.13398498578130216}, {"determining": "( ( ( ( CRS + BR ) * PN ) / Min( ( ARS * CRS ) ,( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) - Max( ( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_RAM ) ) * Min( Max( CRS,MDR ) ,Min( Min( ARS ,ARS ) ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),( ( MUC + ( ( CS * ( MUC - ( CS - MLU ) ) ) - MUC ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - Min( ( ( CS * RMSe ) / MLU ) ,MLU ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / DS ) + ( ( ( ( MLU - RRSe ) / MUM ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( ( MUC * MLU ) / Min( RCSe ,MUR ) ) / ( ( MLU - RMSe ) - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.6616702355460385, "obj2": 0.19195096468019965}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( CS ,Max( MUM,MUC ) ) + RCSe ),( ( MLU + ( Min( MLU ,( RMSe / RMSe ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RMSe + RMSe ) ) ) ) ) - CS ) ) + Max( ( MUM - Min( RRSe ,MLU ) ),Min( DS ,MLU ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08452872380389284}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( PN * ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( ( MRS / RRS ) ,MDR ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( ( RMSe / Min( DS ,( CS + CS ) ) ) + ( Min( ( ( ( ( MUM + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01595793378284162}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC / MLU ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.0659677737867721}, {"determining": "( ( ( PN * PN ) / ( MRS * ACS ) ) - Max( ( ( ( PN * ( ARS + ( FirstVNF_CPU / ACS ) ) ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( RRS ,Min( Min( FirstVNF_CPU ,MDR ) ,( Min( BR ,DDR ) - MDR ) ) ) ) ) )", "choosing": "( Max( MUR,( MUC - MLU ) ) + ( RRSe / ( ( ( ( ( RMSe + ( MUM - MUC ) ) / Max( DS,RMSe ) ) * MUM ) / MUR ) + Max( ( MUR - CS ),RMSe ) ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14187993836329224}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( FirstVNF_RAM_Server,DDR ) * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - MDR ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( ( FirstVNF_RAM / RRS ) ,MDR ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( ( DS - RCSe ) / MUR ) * ( MUR + MUR ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / CS ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( Min( MLU ,DS ) + DS ) ) ) ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.0523422832064418}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( DS + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8629550321199143, "obj2": 0.0659677737867721}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( MUR / MUM ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13932763304733425}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( ( ( ( ARS - FirstVNF_CPU_Server ) * FirstVNF_CPU ) * PN ) - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,DDR ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( MUM - RCSe ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) * MUC )", "obj1": 0.8972162740899358, "obj2": 0.04950408122212914}, {"determining": "( ( PN * ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ACS * RRS ) - PN ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( RCSe + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9464668094218416, "obj2": 0.023619970541677145}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( CS * RMSe ) - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09752197465815785}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}], "33": [{"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( ARS / MRS ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + BR ) * MRS ),( ( FirstVNF_Mem + ( Max( MDR,( PN + FirstVNF_RAM ) ) / FirstVNF_Mem_Server ) ) - ( ( ( RRS * ( FirstVNF_CPU_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) - MDR ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUM ) ) ,MUC ) ) + Max( ( MUM + ( ( Min( ( RMSe / ( CS * MUM ) ) ,RCSe ) - RMSe ) / ( MLU + ( CS + MUC ) ) ) ),( CS + ( RCSe + ( ( MUC / DS ) - ( RMSe / ( ( CS - RCSe ) / ( RMSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( ( AMS + ( AMS - RRS ) ) - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC / MLU ) ) ) + RMSe ) + Min( ( RRSe / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,( MDR - FirstVNF_CPU_Server ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / DS ) + ( ( ( ( MLU - RRSe ) / MUM ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( MUC + Min( ( RCSe + CS ) ,( MUC * CS ) ) ) - CS ) - RCSe ) ) ) )", "obj1": 0.6466809421841542, "obj2": 0.2208872149709453}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / Min( ( ( PN * PN ) + Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUM - ( Min( DS ,RRSe ) / ( Min( DS ,MUC ) / ( RRSe + MLU ) ) ) ) + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( CRS * BR ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( Min( ACS ,FirstVNF_Mem ) * ( MRS - MRS ) ) + Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) + Max( ( MUM + DS ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUM ) / ( MUC / RMSe ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16262622589152173}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( Max( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / MDR ) ) ,RRS ),( RRS / ( ACS * FirstVNF_CPU_Server ) ) ) - ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( RRS ,ACS ) ) ,( Max( FirstVNF_CPU,MDR ) * CRS ) ) ) )", "choosing": "Min( Min( ( ( ( Max( RCSe,CS ) * RRSe ) + MUM ) + MLU ) ,RCSe ) ,( MLU / Min( MLU ,( Max( CS,DS ) - MUC ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.2020732985962764}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,MRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10882244070493767}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS - ( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ) ) ) - ( Min( Max( MDR,( ARS - Const ) ) ,ARS ) / ( MRS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.18430055749208246}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + RRS ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( CS * RMSe ) - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,Max( DS,MLU ) ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10514422305896438}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( DS + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06953431263103749}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + CRS ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUM - ( Max( ( ( DS / RMSe ) / MUR ),( RRSe * RRSe ) ) - ( MUC - ( ( DS - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) ) + Max( Min( DS ,MLU ),Max( ( MUC / DS ),( ( Min( Max( CS,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( Min( Max( MUM,RMSe ) ,Min( MLU ,DS ) ) + ( MUM - MLU ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.052342283206441784}, {"determining": "( ( ( BR / FirstVNF_RAM ) - CRS ) - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,BR ) ) - Min( FirstVNF_RAM ,BR ) ) ) ) )", "choosing": "( Min( Min( ( ( MUC + MUM ) + DS ) ,( ( ( RRSe + MLU ) + ( MUR - ( ( CS + MUM ) + RRSe ) ) ) / MLU ) ) ,( Max( ( ( RRSe * RMSe ) + Max( Min( Max( MUM,RMSe ) ,( DS + RCSe ) ),( ( RRSe * MUM ) + CS ) ) ),Max( MLU,RCSe ) ) - DS ) ) + ( RRSe / ( Min( Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * MLU ) ,CS ) ) ,( ( MLU - RMSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07903302093109636}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe + ( ( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( CS,RMSe ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021726347649797435}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( ( ( ( Const / CRS ) - FirstVNF_CPU_Server ) + ( ( PN * AMS ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) + FirstVNF_CPU ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC - MLU ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + ( CS / RMSe ) ),( CS - ( MLU + RMSe ) ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06596777378677209}, {"determining": "( ( CRS + ( RRS * RRS ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( MDR - FirstVNF_CPU_Server ),( ( PN * PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( Max( BR,Min( ACS ,BR ) ) ,BR ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) + Max( ( ( Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) + MLU ) - CS ),( MUM + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1153020038080135}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( CS * RMSe ) - ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09648549521326064}, {"determining": "( ( PN * ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( ( MRS / RRS ) ,MDR ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( ( RMSe / Min( DS ,( CS + CS ) ) ) + ( Min( ( ( ( ( MUM + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01595793378284162}, {"determining": "( ( ( Const + DDR ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ( Min( AMS ,AMS ) - DDR ) + ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,PN ) ) ),Min( BR ,( FirstVNF_CPU + BR ) ) ) )", "choosing": "( ( Min( MLU ,DS ) + ( MUM - Min( RRSe ,MLU ) ) ) + Max( ( ( ( MUR * ( MUC + Max( ( CS * MUR ),MUM ) ) ) / Min( RMSe ,MUM ) ) * RCSe ),( ( ( DS / DS ) + ( Max( MLU,RMSe ) / ( RMSe / RMSe ) ) ) - CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( ( ( ARS / AMS ) * ACS ) / ACS ) - ( Const / RRS ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( ( CRS * ( FirstVNF_Mem * AMS ) ) ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( ( BR / RRS ) + FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - BR ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( ( CRS * ARS ) ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,MUM ),( ( MLU + CS ) - Min( ( MUR + ( ( RMSe - MUM ) - ( ( MLU + MUM ) * MUM ) ) ) ,RCSe ) ) ) + Max( ( MLU + DS ),( MUC + ( RCSe / ( ( RMSe / ( ( MUC / CS ) / CS ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04500375317653972}, {"determining": "( FirstVNF_CPU - ( Min( Const ,MRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( MRS * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( ( RMSe * RMSe ) * CS ) / ( CS * Max( MUC,MUC ) ) ) + MUR ) + Max( ( MUM + RCSe ),( ( MLU + ( ( RMSe * RRSe ) / MUM ) ) - CS ) ) ) + DS ) + Max( ( MUM + RCSe ),( ( RMSe + ( ( Max( Max( CS,MLU ),Max( MUC,MUR ) ) * RRSe ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) ) * CS ) ) )", "obj1": 0.69593147751606, "obj2": 0.15746681205673568}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( ( FirstVNF_RAM + Max( CRS,AMS ) ) / FirstVNF_CPU_Server ) * PN ) - Min( ( MDR + MDR ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( DDR - ( FirstVNF_Mem_Server * ( CRS + BR ) ) ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( RCSe + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS * ( RMSe + CS ) ) ,MUR ),( Min( Max( DS,( ( RMSe - RRSe ) / MUM ) ) ,Max( ( DS + MLU ),MUC ) ) * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.03671945394433867}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03882666087238142}, {"determining": "( ( ( PN * FirstVNF_Mem ) - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( DS + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( DS - MUC ) - Max( RCSe,RCSe ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019758170404881252}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( ( CRS - MDR ) - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( CS ,Max( MUM,MUC ) ) + RCSe ),( ( ( ( DS / DS ) + ( Max( MLU,RMSe ) / ( RMSe / RMSe ) ) ) + ( Min( MLU ,( RMSe / RMSe ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RMSe + RMSe ) ) ) ) ) - CS ) ) + Max( ( MUM - Min( RRSe ,MLU ) ),Min( DS ,MLU ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08570415726720888}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( PN * ( RRS - ( MDR / PN ) ) ) / Min( ACS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) ) / ( MDR * ARS ) ) - Min( FirstVNF_CPU_Server ,( ( AMS * ACS ) / ( ( ( DDR - Const ) * FirstVNF_RAM_Server ) + RRS ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( MUC + ( MUR - MLU ) ) ) + CS ) * ( Max( ( MUR / MUM ),( ( MUC * ( DS / DS ) ) * ( ( MUR + MLU ) * Min( Min( ( MUM + MUC ) ,MLU ) ,( RRSe / Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( Min( Max( MUC,( Max( RRSe,MLU ) * RRSe ) ) ,RCSe ) * MUC ),RRSe ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11169673736695913}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,CRS ) ) - ( Min( MDR ,( FirstVNF_Mem / MDR ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( RRS / FirstVNF_RAM ) ) ) ) - ( AMS + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( ( DS - MLU ) + Max( ( MUC / DS ),Min( ( MUM - CS ) ,( MUM + Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10224498024202444}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( Min( MRS ,ACS ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ACS * RRS ) - PN ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( RCSe + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,( RMSe + RMSe ) ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( MUR / MUM ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13932763304733425}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09943007353483349}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( ( ( MUC / ( CS * MUR ) ) * CS ) + Max( ( ( MUC * MUR ) - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.9571734475374732, "obj2": 0.019853032961703904}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,MLU ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7601713062098501, "obj2": 0.11877603640561658}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,Const ) ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07590801389043249}, {"determining": "( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS + ( AMS - DDR ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) - ( ( ( ( Min( MRS ,DDR ) / ( PN * PN ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( ACS / Const ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( ACS - ( DDR * ARS ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) * ( ( DS / ( MUM * Max( RCSe,MUR ) ) ) / Min( ( RCSe - RMSe ) ,CS ) ) ) + Max( ( MUM + DS ),( MUC + ( DS + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06027424043112361}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( ( PN / DDR ) ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) - ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( CS,MUM ),RMSe ) + Max( ( MUC + ( RCSe + ( MLU / MLU ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10300165361567157}, {"determining": "( ( PN * ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( MDR - FirstVNF_CPU_Server ) * RRS ) - PN ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( ( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9464668094218416, "obj2": 0.023619970541677138}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC / MLU ) ) ) + RMSe ) - CS ) ) + ( ( ( ( ( ( MUC / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8693790149892934, "obj2": 0.0633638661929385}, {"determining": "( ( ( ACS * ( ARS / FirstVNF_Mem_Server ) ) / Max( MDR,FirstVNF_RAM_Server ) ) - Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS + ( AMS - DDR ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( MDR ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,MUR ) - RMSe ) + Max( Min( CS ,CS ),( MUC * ( DS + ( ( RMSe / ( MUC / ( MUC / RMSe ) ) ) - ( DS / MUC ) ) ) ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04089872083373316}, {"determining": "( ( ( MDR - ACS ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( ( ARS - FirstVNF_Mem_Server ) - Min( Min( Max( BR,Max( ( FirstVNF_Mem_Server / MRS ),MRS ) ) ,Max( RRS,Max( FirstVNF_RAM,( MRS * ACS ) ) ) ) ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( ( MUR + RCSe ) + Max( MUM,( ( ( ( Max( DS,RCSe ) / ( RCSe - MUM ) ) * ( MUC - MUR ) ) - MUM ) + DS ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( Max( BR,BR ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Max( RMSe,Max( DS,DS ) ) / ( Max( RMSe,( MUR - CS ) ) + ( ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * ( DS * Max( RRSe,( MUC + DS ) ) ) ) - MUR ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14607184164731712}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( ( MUM * CS ) * ( RRSe - RMSe ) ) + ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) ) ) * MUM ) ,RCSe ) )", "obj1": 0.8843683083511777, "obj2": 0.0547125246044256}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( MUR + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14068250662544213}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MDR ,ACS ) ) - PN ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( MUC / RMSe ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + Max( MUM,RMSe ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13694313216988066}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( PN * PN ) ) ) )", "choosing": "( Max( ( Min( CS ,Max( MUM,MUC ) ) + RCSe ),( ( MLU + ( Min( MLU ,( RMSe / RMSe ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( MLU + RMSe ) ) ) ) ) - CS ) ) + Max( ( MUM - Min( RRSe ,MLU ) ),Min( DS ,MLU ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01595793378284162}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( MDR - ( AMS - DDR ) ) * PN ) / Max( CRS,( PN * ( FirstVNF_RAM / RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9293361884368309, "obj2": 0.03298580510425135}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( MUC / RMSe ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13726505149900398}, {"determining": "( ( ( PN * PN ) / Min( ACS ,ACS ) ) - ( ( ( ( PN * PN ) / Min( ( RRS * ( BR / FirstVNF_RAM_Server ) ) ,MRS ) ) * Max( DDR,CRS ) ) * ( CRS - ( Const - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + MUM ) + ( RRSe / ( ( Max( RMSe,( MLU + Min( ( MUM + MUM ) ,( DS - DS ) ) ) ) - ( ( ( RCSe + MLU ) / ( ( RRSe * RMSe ) - CS ) ) * MUM ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( ( ( ( DDR - BR ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - Max( CRS,AMS ) ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS * RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / DS ),RCSe ),( ( ( ( MUC + MUR ) + RRSe ) / ( ( MUR * DS ) / ( ( CS - RRSe ) * ( MUM * MUR ) ) ) ) / RCSe ) ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0028086203074805115}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - Max( FirstVNF_CPU_Server,MDR ) ) + ( ( PN * ( FirstVNF_CPU - ( AMS - DDR ) ) ) / Max( CRS,( PN * ( FirstVNF_RAM / RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) ) + Max( ( ( RMSe / CS ) - Max( MUC,RMSe ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9850107066381156, "obj2": 0.006553447384121194}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( ACS + FirstVNF_Mem ) ) ) ) ) - ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( DS + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( ( MUM - MLU ) - ( DS - ( MUC - ( ( DS - MUC ) - ( ( MUM - RCSe ) / Max( RCSe,RCSe ) ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8329764453961456, "obj2": 0.08113520823960021}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( MRS * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,Const ) ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,( DS + ( MLU - ( Min( ( Max( RCSe,MUR ) / ( CS / DS ) ) ,DS ) * DS ) ) ) ) + ( ( ( ( ( ( MUC / ( CS * MUR ) ) * CS ) / ( ( MUC * MUR ) - Max( MUC,DS ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.9014989293361885, "obj2": 0.04779591939815753}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( PN * ( Min( ( ACS * DDR ) ,( FirstVNF_Mem - CRS ) ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( ( AMS - FirstVNF_CPU_Server ) + ( ( PN * ( MRS * ARS ) ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( RMSe + Max( MLU,( ( MUC * MUM ) + ( ( MUR + ( MUR * RRSe ) ) + MUC ) ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ARS ) ) - Max( ( ( ACS * PN ) - Min( Const ,DDR ) ),( FirstVNF_CPU - Min( RRS ,Min( ( Min( BR ,( MRS / Const ) ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( MLU,( MUC * MLU ) ) + ( RRSe / ( ( ( MUM * ( ( ( MUC + RRSe ) / ( MUM - CS ) ) / ( ( CS * RMSe ) - ( RRSe * MUC ) ) ) ) - MUR ) + Max( DS,( MUR - CS ) ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14305537182660824}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,Const ) ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,( DS + ( MLU - ( Min( ( Max( RCSe,MUR ) / ( CS / DS ) ) ,DS ) * DS ) ) ) ) + ( ( ( ( ( ( MUC / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8436830835117773, "obj2": 0.07590801389043249}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MRS - FirstVNF_CPU_Server ) + ( ( AMS / RRS ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( Min( ( DS + MUC ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUC / MUM ),( ( Max( CS,MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15847625234314552}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( MRS * ( ( Min( Max( ARS,MRS ) ,( PN + PN ) ) * FirstVNF_Mem_Server ) / BR ) ) - ( ( Max( DDR,CRS ) + ( ( BR + ARS ) / FirstVNF_Mem_Server ) ) - ( MDR - ( ( RRS * ( MRS + MRS ) ) - DDR ) ) ) ) ,( ( ( Min( MRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14479245195655024}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - ( MLU + CS ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06211309356684837}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( RRS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.1332257444509246}, {"determining": "( ( ( ( CRS + BR ) * PN ) / Min( ( ARS * CRS ) ,( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) - Max( ( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_RAM ) ) * Min( Max( CRS,MDR ) ,Min( Min( ARS ,ARS ) ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),( ( MUC + ( ( CS * ( MUC - ( CS - MLU ) ) ) - MUC ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - Min( ( ( CS * RMSe ) / MLU ) ,MLU ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( ( PN * PN ) / Min( ( ( FirstVNF_CPU * PN ) / Min( MRS ,( ( ( ACS + ARS ) / ARS ) * Const ) ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + MUR ),( ( MUC + Min( ( RCSe + CS ) ,( MUC * CS ) ) ) - CS ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( ( Min( MUC ,MLU ) - RCSe ) * MUC ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.6616702355460385, "obj2": 0.19195096468019965}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Max( RMSe,( DS / DS ) ) / ( ( ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) - MUR ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( ( ( ( ( DDR - BR ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - Max( CRS,AMS ) ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS * RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0028086203074805115}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - Max( FirstVNF_CPU_Server,MDR ) ) + ( ( PN * ( FirstVNF_CPU - ( AMS - DDR ) ) ) / Max( CRS,( PN * ( FirstVNF_RAM / RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) ) + Max( ( ( RMSe / CS ) - Max( MUC,RMSe ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9850107066381156, "obj2": 0.006553447384121194}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / DS ) + ( ( ( ( MLU - RRSe ) / MUM ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( ( MUC * MLU ) / Min( RCSe ,MUR ) ) / ( ( MLU - RMSe ) - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.6616702355460385, "obj2": 0.19195096468019965}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( CS * RMSe ) - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09752197465815782}, {"determining": "( ( ( PN * PN ) / ( MRS * ACS ) ) - Max( ( ( ( PN * ( ARS + ( FirstVNF_CPU / ACS ) ) ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( RRS ,Min( Min( FirstVNF_CPU ,MDR ) ,( Min( BR ,DDR ) - MDR ) ) ) ) ) )", "choosing": "( Max( MUR,( MUC - MLU ) ) + ( RRSe / ( ( ( ( ( RMSe + ( MUM - MUC ) ) / Max( DS,RMSe ) ) * MUM ) / MUR ) + Max( ( MUR - CS ),RMSe ) ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14187993836329224}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.8843683083511777, "obj2": 0.0547125246044256}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / Min( CS ,RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) / ( ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) * FirstVNF_CPU ) ) - ( FirstVNF_CPU - CRS ) )", "choosing": "( Max( ( ( MUM + CS ) * CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( ( MUC / ( CS * MUR ) ) ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( RRSe - MLU ) + ( Min( MLU ,DS ) + DS ) ) ) ) ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03255540775026041}, {"determining": "( ( CRS - BR ) - ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( CS * RMSe ) - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) * ( MUR - RRSe ) ) ) / ( ( Min( CS ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.09887755828197019}, {"determining": "( ( AMS - AMS ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0018724135383203408}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( RRS - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,PN ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( MUR * ( MUC + RMSe ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) * MUC )", "obj1": 0.8993576017130621, "obj2": 0.048214080834670436}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( Min( Max( RRS,FirstVNF_Mem ) ,Max( ARS,DDR ) ) ,Min( ( Min( BR ,DDR ) - ( ACS / DDR ) ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MUC + Min( ( RCSe + CS ) ,( MUC * CS ) ) ) - CS ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.9057815845824411, "obj2": 0.04633893999053146}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,( ( RRSe - RCSe ) + ( ( Max( ( ( MUR - MUR ) + ( ( MLU + RCSe ) * Max( MUC,DS ) ) ),( Min( CS ,MLU ) - ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( MUR / MUM ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14571703451389062}], "34": [{"determining": "( Min( MRS ,ACS ) - ( FirstVNF_CPU + MRS ) )", "choosing": "( Min( DS ,( CS + CS ) ) + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,( RMSe + RMSe ) ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( ARS / MRS ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) + BR ) * MRS ),( ( FirstVNF_Mem + ( Max( MDR,( PN + FirstVNF_RAM ) ) / FirstVNF_Mem_Server ) ) - ( ( ( RRS * ( FirstVNF_CPU_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) - MDR ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUM ) ) ,MUC ) ) + Max( ( MUM + ( ( Min( ( RMSe / ( CS * MUM ) ) ,RCSe ) - RMSe ) / ( MLU + ( CS + MUC ) ) ) ),( CS + ( RCSe + ( ( MUC / DS ) - ( RMSe / ( ( CS - RCSe ) / ( RMSe / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,( MDR - FirstVNF_CPU_Server ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / DS ) + ( ( ( ( MLU - RRSe ) / MUM ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( MUC + Min( ( RCSe + CS ) ,( MUC * CS ) ) ) - CS ) - RCSe ) ) ) )", "obj1": 0.6466809421841542, "obj2": 0.2208872149709453}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( CRS * BR ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( Min( ACS ,FirstVNF_Mem ) * ( MRS - MRS ) ) + Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) + Max( ( MUM + DS ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUM ) / ( MUC / RMSe ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16262622589152173}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( Max( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / MDR ) ) ,RRS ),( RRS / ( ACS * FirstVNF_CPU_Server ) ) ) - ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( RRS ,ACS ) ) ,( Max( FirstVNF_CPU,MDR ) * CRS ) ) ) )", "choosing": "Min( Min( ( ( ( Max( RCSe,CS ) * RRSe ) + MUM ) + MLU ) ,RCSe ) ,( MLU / Min( MLU ,( Max( CS,DS ) - MUC ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.2020732985962764}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS - ( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ) ) ) - ( Min( Max( MDR,( ARS - Const ) ) ,ARS ) / ( MRS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.18430055749208246}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( PN,AMS ) ) * PN ) * FirstVNF_RAM ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( DS + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06953431263103749}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( ( ( BR / FirstVNF_RAM ) - CRS ) - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,BR ) ) - Min( FirstVNF_RAM ,BR ) ) ) ) )", "choosing": "( Min( Min( ( ( MUC + MUM ) + DS ) ,( ( ( RRSe + MLU ) + ( MUR - ( ( CS + MUM ) + RRSe ) ) ) / MLU ) ) ,( Max( ( ( RRSe * RMSe ) + Max( Min( Max( MUM,RMSe ) ,( DS + RCSe ) ),( ( RRSe * MUM ) + CS ) ) ),Max( MLU,RCSe ) ) - DS ) ) + ( RRSe / ( Min( Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * MLU ) ,CS ) ) ,( ( MLU - RMSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07903302093109636}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( ( CRS - MDR ) - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( CS ,Max( MUM,MUC ) ) + RCSe ),( ( ( ( DS / DS ) + ( Max( MLU,RMSe ) / ( RMSe / RMSe ) ) ) + ( Min( MLU ,( RMSe / RMSe ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RMSe + RMSe ) ) ) ) ) - CS ) ) + Max( ( MUM - Min( RRSe ,MLU ) ),Min( DS ,MLU ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08570415726720888}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS + ( AMS - DDR ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) - ( ( ( ( Min( MRS ,DDR ) / ( PN * PN ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( ACS / Const ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( ACS - ( DDR * ARS ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) * ( ( DS / ( MUM * Max( RCSe,MUR ) ) ) / Min( ( RCSe - RMSe ) ,CS ) ) ) + Max( ( MUM + DS ),( MUC + ( DS + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06027424043112361}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + CRS ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUM - ( Max( ( ( DS / RMSe ) / MUR ),( RRSe * RRSe ) ) - ( MUC - ( ( DS - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) ) + Max( Min( DS ,MLU ),Max( ( MUC / DS ),( ( Min( Max( CS,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( Min( Max( MUM,RMSe ) ,Min( MLU ,DS ) ) + ( MUM - MLU ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.052342283206441784}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03882666087238142}, {"determining": "( ( ( RRS * PN ) / Min( MRS ,ACS ) ) - Max( ( ( PN * ACS ) - Max( DDR,CRS ) ),( FirstVNF_CPU - Min( RRS ,Min( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - ( FirstVNF_CPU / ( RRS * FirstVNF_Mem ) ) ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( RRSe / ( ( ( MUM / ( ( MLU / ( MUC * RRSe ) ) / ( Min( MUC ,MUR ) * Min( MUM ,RCSe ) ) ) ) - MUR ) + Max( DS,( MUR - CS ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05127799612232026}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MRS - FirstVNF_CPU_Server ) + ( ( AMS / RRS ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( Min( ( DS + MUC ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUC / MUM ),( ( Max( CS,MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15847625234314552}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( ACS - DDR ) ) * Min( FirstVNF_Mem_Server ,( CRS / ACS ) ) ) ) ) ) / ( MDR - DDR ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( Min( Min( RCSe ,Min( MUM ,MLU ) ) ,CS ) / ( Min( DS ,( DS * RRSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013349858826835126}, {"determining": "( ( ( Const + DDR ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ( Min( AMS ,AMS ) - DDR ) + ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,PN ) ) ),Min( BR ,( FirstVNF_CPU + BR ) ) ) )", "choosing": "( ( Min( MLU ,DS ) + ( MUM - Min( RRSe ,MLU ) ) ) + Max( ( ( ( MUR * ( MUC + Max( ( CS * MUR ),MUM ) ) ) / Min( RMSe ,MUM ) ) * RCSe ),( ( ( DS / DS ) + ( Max( MLU,RMSe ) / ( RMSe / RMSe ) ) ) - CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( RRS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.1332257444509246}, {"determining": "( ( ( ( FirstVNF_RAM + Max( CRS,AMS ) ) / FirstVNF_CPU_Server ) * PN ) - Min( ( MDR + MDR ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( DDR - ( FirstVNF_Mem_Server * ( CRS + BR ) ) ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( RCSe + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS * ( RMSe + CS ) ) ,MUR ),( Min( Max( DS,( ( RMSe - RRSe ) / MUM ) ) ,Max( ( DS + MLU ),MUC ) ) * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.03671945394433867}, {"determining": "( ( ( ( ARS / AMS ) * ACS ) / ACS ) - ( Const / RRS ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( ( CRS * ( FirstVNF_Mem * AMS ) ) ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( ( BR / RRS ) + FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( DDR * FirstVNF_Mem_Server ) ) + ( ( PN * PN ) / ( RRS - BR ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( ( CRS * ARS ) ,( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,MUM ),( ( MLU + CS ) - Min( ( MUR + ( ( RMSe - MUM ) - ( ( MLU + MUM ) * MUM ) ) ) ,RCSe ) ) ) + Max( ( MLU + DS ),( MUC + ( RCSe / ( ( RMSe / ( ( MUC / CS ) / CS ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04500375317653972}, {"determining": "( FirstVNF_CPU - ( Min( Const ,MRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( MRS * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( ( RMSe * RMSe ) * CS ) / ( CS * Max( MUC,MUC ) ) ) + MUR ) + Max( ( MUM + RCSe ),( ( MLU + ( ( RMSe * RRSe ) / MUM ) ) - CS ) ) ) + DS ) + Max( ( MUM + RCSe ),( ( RMSe + ( ( Max( Max( CS,MLU ),Max( MUC,MUR ) ) * RRSe ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) ) * CS ) ) )", "obj1": 0.69593147751606, "obj2": 0.15746681205673568}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,MRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10882244070493767}, {"determining": "( ( ( PN * FirstVNF_Mem ) - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( DS + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( DS - MUC ) - Max( RCSe,RCSe ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019758170404881252}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}, {"determining": "( ( PN * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + MRS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( ( AMS / RRS ) ,MDR ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( RCSe + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,( ( ( ( MUM * RRSe ) - MUC ) / Max( RRSe,MUR ) ) + RMSe ) ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01595793378284162}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( PN * ( RRS - ( MDR / PN ) ) ) / Min( ACS ,FirstVNF_Mem_Server ) ) - Max( DDR,CRS ) ) ) / ( MDR * ARS ) ) - Min( FirstVNF_CPU_Server ,( ( AMS * ACS ) / ( ( ( DDR - Const ) * FirstVNF_RAM_Server ) + RRS ) ) ) )", "choosing": "( ( ( ( MUC / Max( MUC,( MUR * Min( ( MUC * CS ) ,CS ) ) ) ) - ( MUC + ( MUR - MLU ) ) ) + CS ) * ( Max( ( MUR / MUM ),( ( MUC * ( DS / DS ) ) * ( ( MUR + MLU ) * Min( Min( ( MUM + MUC ) ,MLU ) ,( RRSe / Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( Min( Max( MUC,( Max( RRSe,MLU ) * RRSe ) ) ,RCSe ) * MUC ),RRSe ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11169673736695913}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,CRS ) ) - ( Min( MDR ,( FirstVNF_Mem / MDR ) ) * FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( RRS / FirstVNF_RAM ) ) ) ) - ( AMS + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( ( DS - MLU ) + Max( ( MUC / DS ),Min( ( MUM - CS ) ,( MUM + Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10224498024202444}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / Min( CRS ,ACS ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( RRS - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( PN ,PN ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( ( ( ( MUR * ( MUC + RMSe ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) * MUC )", "obj1": 0.8993576017130621, "obj2": 0.048214080834670436}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09943007353483349}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.0198530329617039}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM + MDR ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( DDR * DDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - MUC ) + Max( MUC,RCSe ) )", "obj1": 0.8436830835117773, "obj2": 0.07590801389043249}, {"determining": "( ( CRS + ( RRS * RRS ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( MDR - FirstVNF_CPU_Server ),( ( PN * PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( Max( BR,Min( ACS ,BR ) ) ,BR ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) + Max( ( ( Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) + MLU ) - CS ),( MUM + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1153020038080135}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC / MLU ) ) ) + RMSe ) - CS ) ) + ( ( ( ( ( ( MUC / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8693790149892934, "obj2": 0.06336386619293849}, {"determining": "( ( ( ACS * ( ARS / FirstVNF_Mem_Server ) ) / Max( MDR,FirstVNF_RAM_Server ) ) - Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS + ( AMS - DDR ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( MDR ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,MUR ) - RMSe ) + Max( Min( CS ,CS ),( MUC * ( DS + ( ( RMSe / ( MUC / ( MUC / RMSe ) ) ) - ( DS / MUC ) ) ) ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04089872083373316}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + CRS ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( RMSe / CS ) - Max( MUC,RMSe ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ,( ( RRSe - RCSe ) + ( ( Max( ( ( MUR - MUR ) + ( ( MLU + RCSe ) * Max( MUC,DS ) ) ),( Min( CS ,MLU ) - ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03202838898153182}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,( ( RRSe - RCSe ) + ( ( Max( ( ( MUR - MUR ) + ( ( MLU + RCSe ) * Max( MUC,DS ) ) ),( Min( CS ,MLU ) - ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.8843683083511777, "obj2": 0.0547125246044256}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03039960044054104}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( MDR ,( FirstVNF_RAM / RRS ) ) ) * PN ) / Max( CRS,AMS ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( MUR + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14068250662544213}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) ) ) / ( ( FirstVNF_RAM - ( MRS * Max( FirstVNF_RAM,( FirstVNF_CPU + ( ACS + MDR ) ) ) ) ) * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( Max( ( MUM + ( MUR + RRSe ) ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / DS ),RCSe ),MLU ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03533560046750308}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( DDR - CRS ) ) - Min( ( ACS / ( FirstVNF_Mem_Server + ARS ) ) ,( ( ( Min( Max( PN,ACS ) ,RRS ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( ( ( ( Max( MUM,CS ) * CS ) / ( MUC / RMSe ) ) + Max( CS,MUR ) ) + Min( ( ( CS * ( RCSe - MLU ) ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM - RMSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13583704217148496}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( FirstVNF_RAM - DDR ) ) + ( ( RRS * PN ) / ( FirstVNF_Mem / RRS ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - ACS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( ( ( MUM - ( DS - ( Min( Max( MLU,Max( RCSe,MUR ) ) ,MLU ) - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) + Max( ( DS + CS ),Min( MLU ,( MUM + MUC ) ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009853479418452712}, {"determining": "( PN - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( MDR - ( AMS - DDR ) ) * PN ) / Max( CRS,( PN * ( FirstVNF_RAM / RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Max( ( MUM + RCSe ),( ( MLU + ( MUR / MUM ) ) - CS ) ) ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9293361884368309, "obj2": 0.03298580510425135}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),( MDR - ( RRS - DDR ) ) ) )", "choosing": "( ( RCSe / DS ) + ( ( ( ( MLU - RRSe ) / MUM ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( ( MUC * CS ) / Min( RCSe ,MUR ) ) / ( ( MLU - RMSe ) - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008315563104119322}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) + MUR ) / DS ) + CS ) * ( ( RMSe - Min( MUM ,RCSe ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021726347649797435}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + Min( BR ,Const ) ) + Min( ( MDR - FirstVNF_CPU_Server ) ,( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( MRS * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( PN ,Const ) ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,( DS + ( MLU - ( Min( ( ( MUM - RCSe ) / ( CS / DS ) ) ,DS ) * DS ) ) ) ) + ( ( ( ( ( ( MUC * MUR ) - Max( MUC,DS ) ) / ( ( MUC / ( CS * MUR ) ) * CS ) ) + RMSe ) + ( ( RCSe / ( RCSe + RCSe ) ) + DS ) ) + DS ) )", "obj1": 0.9014989293361885, "obj2": 0.04779591939815752}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,Const ) ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07590801389043249}, {"determining": "( PN - ( PN + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( MDR - ( AMS - DDR ) ) * PN ) / Max( CRS,( PN * ( FirstVNF_RAM / RRS ) ) ) ) ) ) )", "choosing": "( MLU + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11387418651014204}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ARS ) ) - Max( ( ( ACS * PN ) - Min( Const ,DDR ) ),( FirstVNF_CPU - Min( RRS ,Min( ( Min( BR ,( MRS / Const ) ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( MLU,( MUC * MLU ) ) + ( RRSe / ( ( ( MUM * ( ( ( MUC + RRSe ) / ( MUM - CS ) ) / ( ( CS * RMSe ) - ( RRSe * MUC ) ) ) ) - MUR ) + Max( DS,( MUR - CS ) ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14305537182660824}, {"determining": "( ( ( PN * PN ) / Min( ACS ,ACS ) ) - ( ( ( ( PN * PN ) / Min( ( RRS * ( BR / FirstVNF_RAM_Server ) ) ,MRS ) ) * Max( DDR,CRS ) ) * ( CRS - ( Const - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + MUM ) + ( RRSe / ( ( Max( RMSe,( MLU + Min( ( MUM + MUM ) ,( DS - DS ) ) ) ) - ( ( ( RCSe + MLU ) / ( ( RRSe * RMSe ) - CS ) ) * MUM ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( PN * ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( ( MRS / RRS ) ,MDR ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( ( RMSe / Min( DS ,( CS + CS ) ) ) + ( Min( ( ( ( ( MUM + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01595793378284162}, {"determining": "( ( Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Min( FirstVNF_Mem ,( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ),( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) / Const ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06211309356684837}, {"determining": "( ( ( ( CRS + BR ) * PN ) / Min( ( ARS * CRS ) ,( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) - Max( ( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_RAM ) ) * Min( Max( CRS,MDR ) ,Min( Min( ARS ,ARS ) ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),( ( MUC + ( ( CS * ( MUC - ( CS - MLU ) ) ) - MUC ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - Min( ( ( CS * RMSe ) / MLU ) ,MLU ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( RRS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.1063988485119003}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( PN * PN ) / Min( ( ( FirstVNF_CPU * PN ) / Min( MRS ,( ( ( ACS + ARS ) / ARS ) * Const ) ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + MUR ),( ( MUC + Min( ( RCSe + CS ) ,( MUC * CS ) ) ) - CS ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( ( Min( MUC ,MLU ) - RCSe ) * MUC ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.6616702355460385, "obj2": 0.19195096468019965}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( Max( BR,BR ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Max( RMSe,Max( DS,DS ) ) / ( Max( RMSe,( MUR - CS ) ) + ( ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * ( DS * Max( RRSe,( MUC + DS ) ) ) ) - MUR ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14607184164731712}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( Max( Max( MUM,CS ),RMSe ) + RCSe ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10754585438497846}, {"determining": "( Max( PN,FirstVNF_CPU ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),RRS ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC - ( ( Min( Min( MUM ,RCSe ) ,CS ) / ( RRSe + RMSe ) ) + ( MLU - RCSe ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14469016725349962}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( MUC / RMSe ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6616702355460385, "obj2": 0.19195096468019965}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * CRS ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR / ( RRSe / MUC ) ) * ( Min( DS ,MLU ) + ( MUM - Min( ( ( CS * RMSe ) / MLU ) ,MLU ) ) ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( CS * RMSe ) - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09739983169012463}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( ( ( ( Const / CRS ) - FirstVNF_CPU_Server ) + ( ( PN * AMS ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) + FirstVNF_CPU ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC - MLU ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + ( CS / RMSe ) ),( CS - ( MLU + RMSe ) ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06596777378677209}, {"determining": "( ( ( PN * PN ) / ( MRS * ACS ) ) - Max( ( ( ( PN * ( ARS + ( FirstVNF_CPU / ACS ) ) ) / Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( CRS - Min( RRS ,Min( Min( FirstVNF_CPU ,MDR ) ,( Min( BR ,DDR ) - MDR ) ) ) ) ) )", "choosing": "( Max( MUR,( MUC - MLU ) ) + ( RRSe / ( ( ( ( ( RMSe + ( MUM - MUC ) ) / Max( DS,RMSe ) ) * MUM ) / MUR ) + Max( ( MUR - CS ),RMSe ) ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14187993836329224}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( ( MUM * CS ) * ( RRSe - RMSe ) ) + ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) ) ) * MUM ) ,RCSe ) )", "obj1": 0.8843683083511777, "obj2": 0.0547125246044256}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / Min( ( ( PN * PN ) + Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUM - ( Min( DS ,RRSe ) / ( Min( DS ,MUC ) / ( RRSe + MLU ) ) ) ) + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( RRS - FirstVNF_RAM_Server ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + Max( DS,Max( ( MLU + Max( RCSe,MLU ) ),MUM ) ) ) ) )", "obj1": 0.7066381156316917, "obj2": 0.147928672824092}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( ( ACS / AMS ) - FirstVNF_CPU_Server ) + RRS ) ) ) / ( FirstVNF_RAM_Server * ( Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) / Const ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ),( ( RMSe - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( CS * RMSe ) - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,Max( DS,MLU ) ) ,( ( MUM / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( ( RCSe - DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.7858672376873662, "obj2": 0.1050746125054659}, {"determining": "( ( ( ( ( ( ( Const - Min( ACS ,RRS ) ) + FirstVNF_Mem ) - FirstVNF_RAM ) + FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,( RCSe + ( Min( Min( MUR ,DS ) ,RRSe ) * ( RCSe / RRSe ) ) ) ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( MUC - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09648549521326064}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( Max( RRSe,MUR ) - RMSe ) + Max( ( MUM + DS ),( MUC * ( DS + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06596777378677209}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / DS ) - MUR ) ,DS ) - RMSe ) ,( ( RRSe - RCSe ) + ( ( Max( ( ( MUR - MUR ) + ( ( MLU + RCSe ) * Max( MUC,DS ) ) ),( Min( CS ,MLU ) - ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - PN ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,( MUM + RCSe ) ) + Max( ( ( CS * RMSe ) - ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10411012858970016}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( MUR / MUM ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13932763304733425}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,BR ) ) - ( FirstVNF_RAM_Server + BR ) ) * ( Min( ( MDR - ARS ) ,( FirstVNF_RAM / RRS ) ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( MUM - CS ) / ( Min( ( ( MUC + RCSe ) - ( MUC + MUR ) ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ),( MUC / DS ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe + ( ( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( CS,RMSe ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021726347649797435}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( PN * ( FirstVNF_CPU - ( AMS - DDR ) ) ) / Max( CRS,( PN * ( FirstVNF_RAM / RRS ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) + ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) )", "obj1": 0.987152034261242, "obj2": 0.005860204673553761}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - ( MDR - ( ( RRS * ( MRS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MUC + Min( ( RCSe + CS ) ,( MUC * CS ) ) ) - CS ) ) + ( ( ( ( ( ( MUM / CS ) * CS ) / ( MUC / RMSe ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}], "35": [{"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / ( ( RRS / PN ) + ( ( ( PN * PN ) / Min( MRS ,Max( RRS,FirstVNF_CPU ) ) ) + ( MDR - ( BR + ACS ) ) ) ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( RRS - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( MDR ,PN ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( MLU + ( ( ( MUR * Min( MUM ,MUM ) ) * MLU ) / ( CS * ( ( MUC / CS ) / CS ) ) ) ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) * MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,ACS ) - ( FirstVNF_CPU + MRS ) )", "choosing": "( Min( DS ,( CS + CS ) ) + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,( RMSe + RMSe ) ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,( MDR - FirstVNF_CPU_Server ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / DS ) + ( ( ( ( MLU - RRSe ) / MUM ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( MUC + Min( ( RCSe + CS ) ,( MUC * CS ) ) ) - CS ) - RCSe ) ) ) )", "obj1": 0.6466809421841542, "obj2": 0.2208872149709453}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / Min( ( ( PN * PN ) + Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUM - ( Min( DS ,RRSe ) / ( Min( DS ,MUC ) / ( RRSe + MLU ) ) ) ) + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( CRS * BR ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( Min( ACS ,FirstVNF_Mem ) * ( MRS - MRS ) ) + Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) + Max( ( MUM + DS ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUM ) / ( MUC / RMSe ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16262622589152173}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( Max( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / MDR ) ) ,RRS ),( RRS / ( ACS * FirstVNF_CPU_Server ) ) ) - ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( RRS ,ACS ) ) ,( Max( FirstVNF_CPU,MDR ) * CRS ) ) ) )", "choosing": "Min( Min( ( ( ( Max( RCSe,CS ) * RRSe ) + MUM ) + MLU ) ,RCSe ) ,( MLU / Min( MLU ,( Max( CS,DS ) - MUC ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.2020732985962764}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS - ( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ) ) ) - ( Min( Max( MDR,( ARS - Const ) ) ,ARS ) / ( MRS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.18430055749208246}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( ( ARS + ( MRS - DDR ) ) - FirstVNF_CPU ) ) ,( ( ( MDR - FirstVNF_CPU_Server ) + ( ( DDR / PN ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( ( DS / ( MUM * ( RCSe - Min( ( Min( RRSe ,RMSe ) - MUM ) ,DS ) ) ) ) + Max( CS,Max( ( RCSe / ( ( RMSe * RCSe ) / DS ) ),CS ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06942143098189316}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS + ( AMS - DDR ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) - ( ( ( ( Min( MRS ,DDR ) / ( PN * PN ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( ACS / Const ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( ACS - ( DDR * ARS ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) * ( ( DS / ( MUM * Max( RCSe,MUR ) ) ) / Min( ( RCSe - RMSe ) ,CS ) ) ) + Max( ( MUM + DS ),( MUC + ( DS + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / DS ) ) ) ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06027424043112361}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10192622573951432}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09943007353483349}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,BR ) ) - ( FirstVNF_RAM_Server + BR ) ) * ( Min( ( MDR - ARS ) ,( FirstVNF_RAM / RRS ) ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( MUM - CS ) / ( Min( ( ( MUC + RCSe ) - ( MUC + MUR ) ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ),( MUC / DS ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( ( ( ( ( ( ( Const - Min( ACS ,RRS ) ) + FirstVNF_Mem ) - FirstVNF_RAM ) + FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,( RCSe + ( Min( Min( MUR ,DS ) ,RRSe ) * ( RCSe / RRSe ) ) ) ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( MUC - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09648549521326064}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MRS - FirstVNF_CPU_Server ) + ( ( AMS / RRS ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( Min( ( DS + MUC ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUC / MUM ),( ( Max( CS,MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15847625234314552}, {"determining": "( ( ( Const + DDR ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ( Min( AMS ,AMS ) - DDR ) + ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,PN ) ) ),Min( BR ,( FirstVNF_CPU + BR ) ) ) )", "choosing": "( ( Min( MLU ,DS ) + ( MUM - Min( RRSe ,MLU ) ) ) + Max( ( ( ( MUR * ( MUC + Max( ( CS * MUR ),MUM ) ) ) / Min( RMSe ,MUM ) ) * RCSe ),( ( ( DS / DS ) + ( Max( MLU,RMSe ) / ( RMSe / RMSe ) ) ) - CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( RRS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.1332257444509246}, {"determining": "( ( ( ( ARS / AMS ) * ACS ) / ACS ) - ( Const / RRS ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( ( ( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( ( PN * MDR ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) )", "choosing": "( Max( ( MUM + Max( RCSe,( RMSe * ( ( ( DS - RRSe ) + ( RRSe * MUM ) ) / Max( RRSe,Min( DS ,RMSe ) ) ) ) ) ),MUC ) + Max( CS,Max( Max( ( RCSe * DS ),RCSe ),RRSe ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04484536168786644}, {"determining": "( FirstVNF_CPU - ( Min( Const ,MRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( MRS * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( ( RMSe * RMSe ) * CS ) / ( CS * Max( MUC,MUC ) ) ) + MUR ) + Max( ( MUM + RCSe ),( ( MLU + ( ( RMSe * RRSe ) / MUM ) ) - CS ) ) ) + DS ) + Max( ( MUM + RCSe ),( ( RMSe + ( ( Max( Max( CS,MLU ),Max( MUC,MUR ) ) * RRSe ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) ) * CS ) ) )", "obj1": 0.69593147751606, "obj2": 0.15746681205673568}, {"determining": "( ( Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Min( FirstVNF_Mem ,( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ),( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) / Const ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06211309356684837}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.0198530329617039}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),RRS ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS * ( RMSe + CS ) ) ,MUR ),( Min( ( DS + ( RMSe + CS ) ) ,Max( ( DS + MLU ),MUC ) ) * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.1497260392092341}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( ( ( MUM - ( Min( DS ,RRSe ) / ( Min( DS ,MUC ) / ( RRSe + MLU ) ) ) ) + CS ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.9593147751605996, "obj2": 0.018916826192543732}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( PN * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( ( AMS / RRS ) ,MDR ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( RCSe + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,( ( ( MUR - MUC ) / Max( RRSe,MUR ) ) + RMSe ) ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( Max( BR,BR ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Max( RMSe,Max( DS,DS ) ) / ( Max( RMSe,( MUR - CS ) ) + ( ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * ( DS * Max( RRSe,( MUC + DS ) ) ) ) - MUR ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14607184164731712}, {"determining": "( ( ( BR / FirstVNF_RAM ) - CRS ) - ( ( ARS * FirstVNF_CPU_Server ) / ( BR - ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,BR ) ) - Min( FirstVNF_RAM ,BR ) ) ) ) )", "choosing": "( Min( Min( ( ( MUC + MUM ) + DS ) ,( ( ( RRSe + MLU ) + ( MUR - ( ( CS + MUM ) + RRSe ) ) ) / MLU ) ) ,( Max( ( ( RRSe * RMSe ) + Max( Min( Max( MUM,RMSe ) ,( DS + RCSe ) ),( ( RRSe * MUM ) + CS ) ) ),Max( MLU,RCSe ) ) - DS ) ) + ( RRSe / ( Min( Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * MLU ) ,CS ) ) ,( ( MLU - RMSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07903302093109636}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - PN ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,( MUM + RCSe ) ) + Max( ( ( CS * RMSe ) - ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10411012858970016}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( AMS + FirstVNF_RAM_Server ) ) + ( AMS * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUR,( MUC * MLU ) ) + ( RRSe / ( ( ( ( ( RMSe + ( MUM - MUC ) ) / Max( DS,RMSe ) ) * MUM ) / MUR ) + ( ( ( ( MUM / ( CS - RRSe ) ) * RCSe ) + Min( ( DS / RCSe ) ,MUR ) ) * CS ) ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07590801389043249}, {"determining": "( Max( PN,FirstVNF_CPU ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),RRS ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC - ( ( Min( Min( MUM ,RCSe ) ,CS ) / ( RRSe + RMSe ) ) + ( MLU - RCSe ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14469016725349962}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( Max( MDR,FirstVNF_CPU_Server ) + ( ( PN * ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ( RRS - AMS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( ( RRSe / DS ) - RMSe ) * DS ) + MUR ) / DS ) + CS ) * ( ( CS - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01595793378284162}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe + ( ( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( CS,RMSe ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021726347649797435}, {"determining": "( ( CRS + ( RRS * RRS ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( MDR - FirstVNF_CPU_Server ),( ( PN * PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( Max( BR,Min( ACS ,BR ) ) ,BR ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) + Max( ( ( Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) + MLU ) - CS ),( MUM + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1153020038080135}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server + DDR ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR / ( RRSe / MUC ) ) * ( Min( DS ,MLU ) + ( MUM - Min( ( ( CS * RMSe ) / MLU ) ,MLU ) ) ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( CS * RMSe ) - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - ( CS / MUC ) ) ) ) ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004470463351741632}, {"determining": "( ( ( ACS * ( ARS / FirstVNF_Mem_Server ) ) / Max( MDR,FirstVNF_RAM_Server ) ) - Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS + ( AMS - DDR ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( MDR ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,MUR ) - RMSe ) + Max( Min( CS ,CS ),( MUC * ( DS + ( ( RMSe / ( MUC / ( MUC / RMSe ) ) ) - ( DS / MUC ) ) ) ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04089872083373316}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),( MDR - ( RRS - DDR ) ) ) )", "choosing": "( ( RCSe / DS ) + ( ( ( ( MLU - RRSe ) / MUM ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( ( MUC * CS ) / Min( RCSe ,MUR ) ) / ( ( MLU - RMSe ) - Min( MUR ,CS ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008315563104119322}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( RMSe / CS ) - Max( MUC,RMSe ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ,( ( RRSe - RCSe ) + ( ( Max( ( ( MUR - MUR ) + ( ( MLU + RCSe ) * Max( MUC,DS ) ) ),( Min( CS ,MLU ) - ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( DDR - CRS ) ) - Min( ( ACS / ( FirstVNF_Mem_Server + ARS ) ) ,( ( ( Min( Max( PN,ACS ) ,RRS ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( ( ( ( Max( MUM,CS ) * CS ) / ( MUC / RMSe ) ) + Max( CS,MUR ) ) + Min( ( ( CS * ( RCSe - MLU ) ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM - RMSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.1406196750002215}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( DDR - CRS ) ) - Min( ( ACS / ( FirstVNF_Mem_Server + ARS ) ) ,( ( ( Min( Max( PN,ACS ) ,RRS ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( ( ( ( Max( MUM,CS ) * CS ) / ( MUC / RMSe ) ) + Max( CS,MUR ) ) + Min( ( ( CS * ( RCSe - MLU ) ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM - RMSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13583704217148496}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03882666087238142}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( ( ( MDR - ( ARS + ( MRS + CRS ) ) ) / Min( MRS ,ACS ) ) - Max( ( Min( PN ,PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ),( FirstVNF_CPU - Min( RRS ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( RRSe / ( ( ( ( ( RRSe / RCSe ) + MUM ) + MLU ) - MUR ) + Max( DS,( CS - MUR ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.038755589519769235}, {"determining": "( ( ( ( FirstVNF_RAM + Max( CRS,AMS ) ) / FirstVNF_CPU_Server ) * PN ) - Min( ( MDR + MDR ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( DDR - ( FirstVNF_Mem_Server * ( CRS + BR ) ) ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( RCSe + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS * ( RMSe + CS ) ) ,MUR ),( Min( Max( DS,( ( RMSe - RRSe ) / MUM ) ) ,Max( ( DS + MLU ),MUC ) ) * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.03671945394433867}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( MUR / MUM ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13932763304733425}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + Min( BR ,Const ) ) + Min( ( MDR - FirstVNF_CPU_Server ) ,( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( MRS * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( PN ,Const ) ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,( DS + ( MLU - ( Min( ( ( MUM - RCSe ) / ( CS / DS ) ) ,DS ) * DS ) ) ) ) + ( ( ( ( ( ( MUC * MUR ) - Max( MUC,DS ) ) / ( ( MUC / ( CS * MUR ) ) * CS ) ) + RMSe ) + ( ( RCSe / ( RCSe + RCSe ) ) + DS ) ) + DS ) )", "obj1": 0.9014989293361885, "obj2": 0.04779591939815752}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) + MUR ) / DS ) + CS ) * ( ( RMSe - Min( MUM ,RCSe ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021726347649797435}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU - ( AMS - DDR ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MLU / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.8972162740899358, "obj2": 0.048669440166347326}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ARS ) ) - Max( ( ( ACS * PN ) - Min( Const ,DDR ) ),( FirstVNF_CPU - Min( RRS ,Min( ( Min( BR ,( MRS / Const ) ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( MLU,( MUC * MLU ) ) + ( RRSe / ( ( ( MUM * ( ( ( MUC + RRSe ) / ( MUM - CS ) ) / ( ( CS * RMSe ) - ( RRSe * MUC ) ) ) ) - MUR ) + Max( DS,( MUR - CS ) ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14305537182660824}, {"determining": "( ( ( ( ( FirstVNF_RAM + Max( CRS,AMS ) ) / FirstVNF_CPU_Server ) * PN ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( ( Max( ARS,PN ) / FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),RRS ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( ( DDR + Min( FirstVNF_CPU_Server ,BR ) ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe / CS ) + Max( ( MUM + DS ),( ( MUM / RMSe ) + ( RCSe + ( MLU - RCSe ) ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11099257874250854}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM + MDR ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( DDR * DDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - MUC ) + Max( MUC,RCSe ) )", "obj1": 0.8436830835117773, "obj2": 0.07590801389043249}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC / MLU ) ) ) + RMSe ) - CS ) ) + ( ( ( ( ( ( MUC / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8843683083511777, "obj2": 0.0547125246044256}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( ( CRS - MDR ) - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + MUC ) ) ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08570415726720888}, {"determining": "( ( ( RRS * PN ) / Min( MRS ,ACS ) ) - Max( ( ( PN * ACS ) - Max( DDR,CRS ) ),( FirstVNF_CPU - Min( RRS ,Min( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - ( FirstVNF_CPU / ( RRS * FirstVNF_Mem ) ) ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( RRSe / ( ( ( MUM / ( ( MLU / ( MUC * RRSe ) ) / ( Min( MUC ,MUR ) * Min( MUM ,RCSe ) ) ) ) - MUR ) + Max( DS,( MUR - CS ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05127799612232026}, {"determining": "( ( PN * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM + MRS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_CPU ,Min( ( AMS / RRS ) ,MDR ) ) * PN ) / Max( CRS,AMS ) ) ) ) )", "choosing": "( RCSe + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,( ( ( ( MUM * RRSe ) - MUC ) / Max( RRSe,MUR ) ) + RMSe ) ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01595793378284162}, {"determining": "( Max( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / MDR ) ) ,RRS ),( RRS / Const ) ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Min( ( ( ( MUM + DS ) + MUM ) + MLU ) ,RCSe ) ,( MLU / Min( MLU ,Min( RMSe ,DS ) ) ) )", "obj1": 0.8822269807280514, "obj2": 0.056071262568872654}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( ACS - DDR ) ) * Min( FirstVNF_Mem_Server ,( CRS / ACS ) ) ) ) ) ) / ( MDR - DDR ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( Min( Min( RCSe ,Min( MUM ,MLU ) ) ,CS ) / ( Min( DS ,( DS * RRSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013349858826835126}, {"determining": "( ( ( ( CRS + BR ) * PN ) / Min( ( ARS * CRS ) ,( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) - Max( ( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_RAM ) ) * Min( Max( CRS,MDR ) ,Min( Min( ARS ,ARS ) ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),( ( MUC + ( ( CS * ( MUC - ( CS - MLU ) ) ) - MUC ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - Min( ( ( CS * RMSe ) / MLU ) ,MLU ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( RRS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.1063988485119003}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( ( CRS - MDR ) - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( CS ,Max( MUM,MUC ) ) + RCSe ),( ( ( ( DS / DS ) + ( Max( MLU,RMSe ) / ( RMSe / RMSe ) ) ) + ( Min( MLU ,( RMSe / RMSe ) ) - ( ( ( RMSe / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RMSe + RMSe ) ) ) ) ) - CS ) ) + Max( ( MUM - Min( RRSe ,MLU ) ),Min( DS ,MLU ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08570415726720888}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ),ACS ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS - CRS ) ) ) - Max( Min( Min( MDR ,Min( FirstVNF_CPU ,MDR ) ) ,Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( CS + RCSe ),( ( MUC + Min( ( RCSe + ( ( RCSe / MUC ) * DS ) ) ,( MUC * CS ) ) ) - CS ) ) + ( DS + ( RCSe + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.6638115631691649, "obj2": 0.18995706911258295}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( Max( Max( MUM,CS ),RMSe ) + RCSe ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10754585438497846}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + CRS ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUM - ( Max( ( ( DS / RMSe ) / MUR ),( RRSe * RRSe ) ) - ( MUC - ( ( DS - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) ) + Max( Min( DS ,MLU ),Max( ( MUC / DS ),( ( Min( Max( CS,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( Min( Max( MUM,RMSe ) ,Min( MLU ,DS ) ) + ( MUM - MLU ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.052342283206441784}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( ( ( ( Const / CRS ) - FirstVNF_CPU_Server ) + ( ( PN * AMS ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) + FirstVNF_CPU ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC - MLU ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + ( CS / RMSe ) ),( CS - ( MLU + RMSe ) ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06596777378677209}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUM - ( Min( DS ,RRSe ) / ( Min( DS ,MUC ) / ( RRSe + MLU ) ) ) ) + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8907922912205567, "obj2": 0.052342283206441784}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( RRS - FirstVNF_RAM_Server ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + Max( DS,Max( ( MLU + Max( RCSe,MLU ) ),MUM ) ) ) ) )", "obj1": 0.7066381156316917, "obj2": 0.147928672824092}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( ( ACS / AMS ) - FirstVNF_CPU_Server ) + RRS ) ) ) / ( FirstVNF_RAM_Server * ( Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) / Const ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ),( ( RMSe - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( CS * RMSe ) - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,Max( DS,MLU ) ) ,( ( MUM / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( ( RCSe - DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.7858672376873662, "obj2": 0.1050746125054659}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Min( DS ,( CS + CS ) ) + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,( RMSe + RMSe ) ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06596777378677209}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_Mem * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( Max( Max( ( ( CS * DS ) - Min( MUM ,RRSe ) ),MUR ),RCSe ) + Max( CS,Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8372591006423983, "obj2": 0.07909488781935205}, {"determining": "( ( ( PN * PN ) / Min( ( ( FirstVNF_CPU * PN ) / Min( MRS ,( ( ( ACS + ARS ) / ARS ) * Const ) ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + MUR ),( ( MUC + Min( ( RCSe + CS ) ,( MUC * CS ) ) ) - CS ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( ( Min( MUC ,MLU ) - RCSe ) * MUC ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.6616702355460385, "obj2": 0.19195096468019965}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( DDR - CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( MDR - Const ) ) ) ) ,( ( ( Min( Max( PN,ACS ) ,RRS ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( CS / Min( MUC ,RRSe ) ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13677283140843466}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.974304068522484, "obj2": 0.011878535991462815}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( MDR - Const ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( MUC / RMSe ) ) + ( CS * MUR ) ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.728051391862955, "obj2": 0.13770972279838348}, {"determining": "( ( ( PN * PN ) / Min( ACS ,ACS ) ) - ( ( ( ( PN * PN ) / Min( ( RRS * ( BR / FirstVNF_RAM_Server ) ) ,MRS ) ) * Max( DDR,CRS ) ) * ( CRS - ( Const - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + MUM ) + ( RRSe / ( ( Max( RMSe,( MLU + Min( ( MUM + MUM ) ,( DS - DS ) ) ) ) - ( ( ( RCSe + MLU ) / ( ( RRSe * RMSe ) - CS ) ) * MUM ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.1483731695492093}, {"determining": "( ( ( AMS - DDR ) - Min( ( Max( ( RRS / ( ( AMS - RRS ) / Min( ACS ,AMS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( ( CRS - MDR ) - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + MUC ) + Max( ( MUM - Min( RRSe ,MLU ) ),Min( DS ,MLU ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13859030511376533}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "Min( Max( ( ( RMSe / CS ) - Max( MUC,RMSe ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ,( ( RRSe - RCSe ) + ( ( Max( ( ( MUR - MUR ) + ( ( MLU + RCSe ) * Max( MUC,DS ) ) ),( Min( CS ,MLU ) - ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}], "36": [{"determining": "( ( Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Min( FirstVNF_Mem ,( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ),( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) / Const ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) * ( AMS - Max( DDR,CRS ) ) ) / ( ( RRS / PN ) + ( ( ( PN * PN ) / Min( MRS ,Max( RRS,FirstVNF_CPU ) ) ) + ( MDR - ( BR + ACS ) ) ) ) ) - ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( PN / DDR ) ) - ( RRS - ( FirstVNF_CPU - Min( FirstVNF_Mem ,Min( MDR ,PN ) ) ) ) ) ) + ( FirstVNF_CPU + ( ( ( ( FirstVNF_RAM + MRS ) / FirstVNF_CPU_Server ) / ARS ) + ( ( RRS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) )", "choosing": "( ( MUM * ( ( MLU + ( ( ( MUR * Min( MUM ,MUM ) ) * MLU ) / ( CS * ( ( MUC / CS ) / CS ) ) ) ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) ) * MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / DDR ) * ( AMS * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( Max( DDR,MRS ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( ( MUR * RRSe ) / ( RRSe / RRSe ) ) ) - Max( ( RRSe - ( MUM / CS ) ),MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + DS ),( MUC + ( RCSe + ( MLU - RCSe ) ) ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( CRS * BR ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( Min( ACS ,FirstVNF_Mem ) * ( MRS - MRS ) ) + Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) + Max( ( MUM + DS ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUM ) / ( MUC / RMSe ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16262622589152173}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( ( Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Min( FirstVNF_Mem ,( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ),( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) / Const ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06211309356684837}, {"determining": "( Max( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / MDR ) ) ,RRS ),( RRS / ( ACS * FirstVNF_CPU_Server ) ) ) - ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( RRS ,ACS ) ) ,( Max( FirstVNF_CPU,MDR ) * CRS ) ) ) )", "choosing": "Min( Min( ( ( ( Max( RCSe,CS ) * RRSe ) + MUM ) + MLU ) ,RCSe ) ,( MLU / Min( MLU ,( Max( CS,DS ) - MUC ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.2020732985962764}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( ( ( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( ( PN * MDR ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) )", "choosing": "( Max( ( MUM + Max( RCSe,( RMSe * ( ( ( DS - RRSe ) + ( RRSe * MUM ) ) / Max( RRSe,Min( DS ,RMSe ) ) ) ) ) ),MUC ) + Max( CS,Max( Max( ( RCSe * DS ),RCSe ),RRSe ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04484536168786644}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS - ( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ) ) ) - ( Min( Max( MDR,( ARS - Const ) ) ,ARS ) / ( MRS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.18430055749208246}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03039960044054104}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( PN * PN ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "Min( Max( ( ( RMSe / CS ) - Max( MUC,RMSe ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ,( RMSe + ( ( Max( ( ( MUR - MUR ) + ( ( MLU + RCSe ) * Max( MUC,DS ) ) ),( Min( CS ,MLU ) - ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03533560046750307}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09943007353483349}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( RRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * RMSe ) + ( ( MUM - ( DS - ( MUC / ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8779443254817987, "obj2": 0.058383860605533126}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( CRS + ( RRS * RRS ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( MDR - FirstVNF_CPU_Server ),( ( PN * PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( Max( BR,Min( ACS ,BR ) ) ,BR ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) + Max( ( ( Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) + MLU ) - CS ),( MUM + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1153020038080135}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( DDR - CRS ) ) - Min( ( ACS / ( FirstVNF_Mem_Server + ARS ) ) ,( ( ( Min( Max( PN,ACS ) ,RRS ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( ( ( ( Max( MUM,CS ) * CS ) / ( MUC / RMSe ) ) + Max( CS,MUR ) ) + Min( ( ( CS * ( RCSe - MLU ) ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM - RMSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13556510886504308}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MRS - FirstVNF_CPU_Server ) + ( ( AMS / RRS ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( Min( ( DS + MUC ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUC / MUM ),( ( Max( CS,MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15847625234314552}, {"determining": "( ( ( Const + DDR ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ( Min( AMS ,AMS ) - DDR ) + ARS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,PN ) ) ),Min( BR ,( FirstVNF_CPU + BR ) ) ) )", "choosing": "( ( Min( MLU ,DS ) + ( MUM - Min( RRSe ,MLU ) ) ) + Max( ( ( ( MUR * ( MUC + Max( ( CS * MUR ),MUM ) ) ) / Min( RMSe ,MUM ) ) * RCSe ),( ( ( DS / DS ) + ( Max( MLU,RMSe ) / ( RMSe / RMSe ) ) ) - CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC / MLU ) ) ) + RMSe ) - CS ) ) + ( ( ( ( ( ( MUC / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8843683083511777, "obj2": 0.0547125246044256}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( ( ( ARS / AMS ) * ACS ) / ACS ) - ( Const / RRS ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( FirstVNF_CPU - ( Min( Const ,MRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( MRS * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( ( RMSe * RMSe ) * CS ) / ( CS * Max( MUC,MUC ) ) ) + MUR ) + Max( ( MUM + RCSe ),( ( MLU + ( ( RMSe * RRSe ) / MUM ) ) - CS ) ) ) + DS ) + Max( ( MUM + RCSe ),( ( RMSe + ( ( Max( Max( CS,MLU ),Max( MUC,MUR ) ) * RRSe ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) ) * CS ) ) )", "obj1": 0.69593147751606, "obj2": 0.15746681205673568}, {"determining": "( ( ( PN * PN ) / Min( ( Min( PN ,PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( ( FirstVNF_Mem / ( ( FirstVNF_CPU + FirstVNF_Mem ) + MDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RRSe / ( RRSe * MLU ) ) / MUR ) * ( CS - RRSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6595289079229122, "obj2": 0.19191321904818692}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.0198530329617039}, {"determining": "( ( ( ( ( FirstVNF_RAM + Max( CRS,AMS ) ) / FirstVNF_CPU_Server ) * PN ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( ( Max( ARS,PN ) / FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),RRS ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( ( DDR + Min( FirstVNF_CPU_Server ,BR ) ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe / CS ) + Max( ( MUM + DS ),( ( MUM / RMSe ) + ( RCSe + ( MLU - RCSe ) ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11099257874250854}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( MUM,CS ) + RMSe ) + ( MUM - Min( ( MLU + ( MUM - MLU ) ) ,RRSe ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( DDR - DDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Max( RRSe,( Max( Max( MUM,RRSe ),Max( DS,MUM ) ) * MLU ) ) ,MUM ) * ( CS * DS ) ) ,RCSe ) ,Min( ( ( RMSe / MLU ) / RCSe ) ,CS ) )", "obj1": 0.9379014989293362, "obj2": 0.029472846440060003}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( MDR - Const ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "Min( Min( ( ( ( RRSe * ( ( MUR * MLU ) * MUM ) ) + MUM ) + MLU ) ,RCSe ) ,( MLU / Min( MLU ,Min( RMSe ,DS ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.1374228011092549}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7922912205567452, "obj2": 0.1018259530637773}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU - ( AMS - DDR ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MLU / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.8972162740899358, "obj2": 0.048669440166347326}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - MDR ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( MUM + RCSe ) + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,( RMSe + RMSe ) ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06803127990788732}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( Max( BR,BR ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Max( RMSe,Max( DS,DS ) ) / ( Max( RMSe,( MUR - CS ) ) + ( ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * ( DS * Max( RRSe,( MUC + DS ) ) ) ) - MUR ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14607184164731712}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_Mem * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) )", "choosing": "( Max( Max( ( ( CS * DS ) - Min( MUM ,RRSe ) ),MUR ),RCSe ) + Max( CS,Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07798879782095636}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.974304068522484, "obj2": 0.011878535991462815}, {"determining": "( Max( PN,FirstVNF_CPU ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),RRS ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC - ( ( Min( Min( MUM ,RCSe ) ,CS ) / ( RRSe + RMSe ) ) + ( MLU - RCSe ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14469016725349962}, {"determining": "( ( ( ( ( ( ( Const - Min( ACS ,RRS ) ) + FirstVNF_Mem ) - FirstVNF_RAM ) + FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,( RCSe + ( Min( Min( MUR ,DS ) ,RRSe ) * ( RCSe / RRSe ) ) ) ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( MUC - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09648549521326064}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09648549521326064}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( ARS * AMS ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) + MUR ) / DS ) + CS ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,Min( MUR ,CS ) ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021726347649797435}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( ( ARS + ( MRS - DDR ) ) - FirstVNF_CPU ) ) ,( ( ( MDR - FirstVNF_CPU_Server ) + ( ( DDR / PN ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( ( DS / ( MUM * ( RCSe - Min( ( Min( RRSe ,RMSe ) - MUM ) ,DS ) ) ) ) + Max( CS,Max( ( RCSe / ( ( RMSe * RCSe ) / DS ) ),CS ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06942143098189316}, {"determining": "( ( ( ACS * ( ARS / FirstVNF_Mem_Server ) ) / Max( MDR,FirstVNF_RAM_Server ) ) - Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS + ( AMS - DDR ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( MDR ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,MUR ) - RMSe ) + Max( Min( CS ,CS ),( MUC * ( DS + ( ( RMSe / ( MUC / ( MUC / RMSe ) ) ) - ( DS / MUC ) ) ) ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04089872083373316}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( RRS - AMS ) ) * ( AMS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + CS ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.006553447384121194}, {"determining": "( ( ( MDR - ( ARS + ( MRS + CRS ) ) ) / Min( MRS ,ACS ) ) - Max( ( Min( PN ,PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ),( FirstVNF_CPU - Min( RRS ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( RRSe / ( ( ( ( ( RRSe / RCSe ) + MUM ) + MLU ) - MUR ) + Max( DS,( CS - MUR ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.038755589519769235}, {"determining": "( ( Max( ACS,MRS ) + FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server * PN ) + ( Min( ( PN * PN ) ,Min( MRS ,( FirstVNF_CPU - RRS ) ) ) + ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( MUR + ( ( ( CS - Max( MLU,RMSe ) ) - Min( DS ,RCSe ) ) * DS ) ) / DS ) + CS ) * ( ( RMSe + Min( CS ,MLU ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9678800856531049, "obj2": 0.014085520244521277}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ),ACS ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS - CRS ) ) ) - Max( Min( Min( MDR ,Min( FirstVNF_CPU ,MDR ) ) ,Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( CS + RCSe ),( ( MUC + Min( ( RCSe + ( ( RCSe / MUC ) * DS ) ) ,( MUC * CS ) ) ) - CS ) ) + ( DS + ( RCSe + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.6638115631691649, "obj2": 0.18995706911258295}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( ACS - DDR ) ) * Min( FirstVNF_Mem_Server ,( CRS / ACS ) ) ) ) ) ) / ( MDR - DDR ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( Min( Min( RCSe ,Min( MUM ,MLU ) ) ,CS ) / ( Min( DS ,( DS * RRSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013349858826835126}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03882666087238142}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( Max( FirstVNF_Mem,PN ) - ( ( ( ( Max( AMS,RRS ) + ( FirstVNF_Mem_Server - MRS ) ) * ( ( RRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * FirstVNF_RAM ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ARS ) ) )", "choosing": "( Max( RRSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( Max( RMSe,MUC ) - Min( DS ,RCSe ) ) ) ),( Max( ( Min( DS ,Max( Max( RRSe,RMSe ),Min( MUM ,RCSe ) ) ) * Max( ( ( RCSe / RCSe ) + MLU ),DS ) ),( ( ( RRSe * ( RCSe / MUR ) ) * MUR ) - Min( ( MUR - MUC ) ,( MUC + ( CS - DS ) ) ) ) ) + RCSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10850388360002598}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,CRS ) ) - ( FirstVNF_CPU + ( ( MDR - PN ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) + ( Min( DS ,MLU ) + Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,MLU ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.03618249016204161}, {"determining": "( ( ( Max( Const,ACS ) - MDR ) + ( CRS - Const ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),( MDR - ( RRS - DDR ) ) ) )", "choosing": "( ( RCSe / DS ) + ( ( ( ( MLU - RRSe ) / MUM ) * RCSe ) - Max( Min( RRSe ,CS ),( ( ( ( ( MUC * CS ) / Min( RCSe ,MUR ) ) / ( ( MLU - RMSe ) - Min( MUR ,RRSe ) ) ) * MUM ) - RCSe ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.005607215472375818}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM + MDR ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( DDR * DDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - MUC ) + Max( MUC,RCSe ) )", "obj1": 0.8436830835117773, "obj2": 0.07590801389043249}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - ( ( MDR + DDR ) + ( Min( AMS ,AMS ) - DDR ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + Max( ( ( MUC / ( MUR * RCSe ) ) / RMSe ),( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009479483050683002}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe + ( ( Max( ( MUM + RCSe ),( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( CS,RMSe ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021726347649797435}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( MRS - AMS ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( MLU,RRSe ) ) - ( RCSe / DS ) ) * DS ) + MUR ) / DS ) + CS ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01595793378284162}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + Min( BR ,Const ) ) + Min( ( MDR - FirstVNF_CPU_Server ) ,( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( MRS * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( PN ,Const ) ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,( DS + ( MLU - ( Min( ( ( MUM - RCSe ) / ( CS / DS ) ) ,DS ) * DS ) ) ) ) + ( ( ( ( ( ( MUC * MUR ) - Max( MUC,DS ) ) / ( ( MUC / ( CS * MUR ) ) * CS ) ) + RMSe ) + ( ( RCSe / ( RCSe + RCSe ) ) + DS ) ) + DS ) )", "obj1": 0.9014989293361885, "obj2": 0.04779591939815752}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( AMS + FirstVNF_RAM_Server ) ) + ( AMS * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUR,( MUC * MLU ) ) + ( RRSe / ( ( ( ( ( RMSe + ( MUM - MUC ) ) / Max( DS,RMSe ) ) * MUM ) / MUR ) + ( ( ( ( MUM / ( CS - RRSe ) ) * RCSe ) + Min( ( DS / RCSe ) ,MUR ) ) * CS ) ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07590801389043249}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( DDR - CRS ) ) - Min( ( ACS / ( FirstVNF_Mem_Server + ARS ) ) ,( ( ( Min( Max( PN,ACS ) ,RRS ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( ( ( ( Max( MUM,CS ) * CS ) / ( MUC / RMSe ) ) + Max( CS,MUR ) ) + Min( ( ( CS * ( RCSe - MLU ) ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM - RMSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.1406196750002215}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR - ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09186558743997833}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + ( FirstVNF_CPU / PN ) ) ) - Min( ( ( ( AMS - ( ( RRS * PN ) / ( ( CRS - MDR ) - FirstVNF_CPU ) ) ) - MDR ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - MUC ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / MUC ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08570415726720888}, {"determining": "( ( ( RRS * PN ) / Min( MRS ,ACS ) ) - Max( ( ( PN * ACS ) - Max( DDR,CRS ) ),( FirstVNF_CPU - Min( RRS ,Min( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) - ( FirstVNF_CPU / ( RRS * FirstVNF_Mem ) ) ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( RRSe / ( ( ( MUM / ( ( MLU / ( MUC * RRSe ) ) / ( Min( MUC ,MUR ) * Min( MUM ,RCSe ) ) ) ) - MUR ) + Max( DS,( MUR - CS ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05127799612232026}, {"determining": "( ( ( ( CRS + BR ) * PN ) / Min( ( ARS * CRS ) ,( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) - Max( ( Min( Max( BR,FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_RAM ) ) * Min( Max( CRS,MDR ) ,Min( Min( ARS ,ARS ) ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),( ( MUC + ( ( CS * ( MUC - ( CS - MLU ) ) ) - MUC ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - Min( ( ( CS * RMSe ) / MLU ) ,MLU ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1795630787197932}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( RRS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.1063988485119003}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( ( CRS - MDR ) - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + MUC ) ) ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08570415726720888}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( PN,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14267401298189653}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,BR ) ) - ( FirstVNF_RAM_Server + BR ) ) * ( Min( ( MDR - ARS ) ,( FirstVNF_RAM / RRS ) ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( MUM - CS ) / ( Min( ( ( MUC + RCSe ) - ( MUC + MUR ) ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ),( MUC / DS ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),RRS ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),( ( MUC + ( ( CS * ( MUC - ( CS - MLU ) ) ) - MUC ) ) - CS ) ) + ( Min( DS ,MLU ) + ( MUM - Min( ( ( CS * RMSe ) / MLU ) ,MLU ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13924572069904548}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + CRS ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUM - ( Max( ( ( DS / RMSe ) / MUR ),( RRSe * RRSe ) ) - ( MUC - ( ( DS - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) ) + Max( Min( DS ,MLU ),Max( ( MUC / DS ),( ( Min( Max( CS,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( Min( Max( MUM,RMSe ) ,Min( MLU ,DS ) ) + ( MUM - MLU ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.052342283206441784}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Min( Min( ( ( MUC + MUM ) + DS ) ,( ( ( RRSe + MLU ) + ( MUR - ( ( CS + MUM ) + RRSe ) ) ) / MLU ) ) ,( Max( ( ( RRSe * RMSe ) + Max( Min( Max( MUM,RMSe ) ,( DS + RCSe ) ),( ( RRSe * MUM ) + CS ) ) ),Max( MLU,RCSe ) ) - DS ) ) + ( RRSe / ( Min( Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * MLU ) ,CS ) ) ,( ( MLU - RMSe ) + RCSe ) ) + Max( RMSe,( MUR - CS ) ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.052342283206441784}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( RRS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( MUM - ( Min( DS ,RRSe ) / ( Min( DS ,MUC ) / ( RRSe + MLU ) ) ) ) + CS ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.734475374732334, "obj2": 0.1332257444509246}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / Min( ( ( PN * PN ) + Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUM - ( Min( DS ,RRSe ) / ( Min( DS ,MUC ) / ( RRSe + MLU ) ) ) ) + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( RRS - FirstVNF_RAM_Server ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + Max( DS,Max( ( MLU + Max( RCSe,MLU ) ),MUM ) ) ) ) )", "obj1": 0.7066381156316917, "obj2": 0.147928672824092}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( ( ACS / AMS ) - FirstVNF_CPU_Server ) + RRS ) ) ) / ( FirstVNF_RAM_Server * ( Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) / Const ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ),( ( RMSe - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( CS * RMSe ) - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,Max( DS,MLU ) ) ,( ( MUM / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( ( RCSe - DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.7858672376873662, "obj2": 0.1050746125054659}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( RRS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.1332257444509246}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( MRS * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( PN ,Const ) ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS * ( RMSe + CS ) ) ,MUR ),( Min( ( DS + ( RMSe + CS ) ) ,Max( ( DS + MLU ),MUC ) ) * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04779591939815752}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - PN ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,( MUM + RCSe ) ) + Max( ( ( CS * RMSe ) - ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * MUM ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Max( RRSe,MUR ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10411012858970015}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( RMSe / CS ) - Max( MUC,RMSe ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ,( ( RRSe - RCSe ) + ( ( Max( ( ( MUR - MUR ) + ( ( MLU + RCSe ) * Max( MUC,DS ) ) ),( Min( CS ,MLU ) - ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( Max( Max( MUM,CS ),RMSe ) + RCSe ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10754585438497846}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ARS ) ) - Max( ( ( ACS * PN ) - Min( Const ,DDR ) ),( FirstVNF_CPU - Min( RRS ,Min( ( Min( BR ,( MRS / Const ) ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( MLU,( MUC * MLU ) ) + ( RRSe / ( ( ( MUM * ( ( ( MUC + RRSe ) / ( MUM - CS ) ) / ( ( CS * RMSe ) - ( RRSe * MUC ) ) ) ) - MUR ) + Max( DS,( MUR - CS ) ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14305537182660824}], "37": [{"determining": "( ( ( DDR / DDR ) * ( AMS * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( Max( DDR,MRS ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( ( MUR * RRSe ) / ( RRSe / RRSe ) ) ) - Max( ( RRSe - ( MUM / CS ) ),MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( ( ARS / AMS ) * PN ) / ACS ) - ( Const / RRS ) )", "choosing": "( ( ( MUR + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Min( FirstVNF_Mem ,( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ),( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) / Const ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,Max( DDR,CRS ) ) ) ,Min( ( CRS - ( ( FirstVNF_Mem_Server / MRS ) * PN ) ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + ( RRSe + MUM ) ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( CRS * BR ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( Min( ACS ,FirstVNF_Mem ) * ( MRS - MRS ) ) + Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) + Max( ( MUM + DS ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUM ) / ( MUC / RMSe ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16262622589152173}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( Max( Const,ACS ) - MDR ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + DS ),( MUC + ( RCSe + ( MLU - RCSe ) ) ) ) + ( ( ( ( ( MUC * CS ) / Min( RCSe ,MUR ) ) / ( ( MLU - RMSe ) - Min( MUR ,RRSe ) ) ) * MUM ) - RCSe ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( Max( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / MDR ) ) ,RRS ),( RRS / ( ACS * FirstVNF_CPU_Server ) ) ) - ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( RRS ,ACS ) ) ,( Max( FirstVNF_CPU,MDR ) * CRS ) ) ) )", "choosing": "Min( Min( ( ( ( Max( RCSe,CS ) * RRSe ) + MUM ) + MLU ) ,RCSe ) ,( MLU / Min( MLU ,( Max( CS,DS ) - MUC ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.2020732985962764}, {"determining": "( ( ( RRS - FirstVNF_RAM_Server ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + Max( DS,Max( ( MLU + Max( RCSe,MLU ) ),MUM ) ) ) ) )", "obj1": 0.7066381156316917, "obj2": 0.147928672824092}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS - ( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ) ) ) - ( Min( Max( MDR,( ARS - Const ) ) ,ARS ) / ( MRS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.18430055749208246}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.974304068522484, "obj2": 0.011878535991462815}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_Mem * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( FirstVNF_RAM_Server * CRS ) )", "choosing": "( Max( MUC,DS ) + Max( CS,Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07798879782095633}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( ( Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Min( FirstVNF_Mem ,( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ),( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) / Const ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06211309356684837}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,Const ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( MUM * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.9314775160599572, "obj2": 0.032344588519664756}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,Const ) ) ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( CRS,PN ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12317522117773035}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7922912205567452, "obj2": 0.1018259530637773}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09943007353483349}, {"determining": "( ( Max( DDR,CRS ) - ( ( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,MDR ) ) - ACS ) / ( FirstVNF_RAM * PN ) ) ) - ( ARS - DDR ) )", "choosing": "( Max( Min( ( DS * RMSe ) ,( RCSe + ( MUR + RRSe ) ) ),( MUC / ( RRSe / MUR ) ) ) + Max( ( MUM + DS ),( MUC + ( Max( Min( RMSe ,( CS / ( MUC / RMSe ) ) ),( MUC / Max( Max( MUC,MUM ),RMSe ) ) ) + RCSe ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1354657053659735}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + DS ),( MUC + ( RCSe + ( MLU - RCSe ) ) ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MRS - FirstVNF_CPU_Server ) + ( ( AMS / RRS ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( Min( ( DS + MUC ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUC / MUM ),( ( Max( CS,MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15847625234314552}, {"determining": "( ( AMS - AMS ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( PN / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + ( MUR - Max( MUC,DS ) ) ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( ARS / AMS ) * ACS ) / ACS ) - ( Const / RRS ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( FirstVNF_CPU - ( Min( Const ,MRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( MRS * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( ( RMSe * RMSe ) * CS ) / ( CS * Max( MUC,MUC ) ) ) + MUR ) + Max( ( MUM + RCSe ),( ( MLU + ( ( RMSe * RRSe ) / MUM ) ) - CS ) ) ) + DS ) + Max( ( MUM + RCSe ),( ( RMSe + ( ( Max( Max( CS,MLU ),Max( MUC,MUR ) ) * RRSe ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) ) * CS ) ) )", "obj1": 0.69593147751606, "obj2": 0.15746681205673568}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + MUC ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( PN * PN ) ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "Min( Max( ( ( RMSe / CS ) - Max( MUC,RMSe ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ,( RMSe + ( ( Max( ( ( MUR - MUR ) + ( ( MLU + RCSe ) * Max( MUC,DS ) ) ),( Min( CS ,MLU ) - ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03533560046750307}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU - ( ACS - DDR ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),MUC ) )", "obj1": 0.892933618843683, "obj2": 0.05080494181659402}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( MUM,CS ) + RMSe ) + ( MUM - Min( ( MLU + ( MUM - MLU ) ) ,RRSe ) ) )", "obj1": 0.6809421841541756, "obj2": 0.17913916430200016}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - PN ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( ( MUM * CS ) * ( RRSe - RMSe ) ) + ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) ) ) * MUM ) ,RCSe ) )", "obj1": 0.7880085653104925, "obj2": 0.10396852250707017}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( Max( BR,BR ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Max( RMSe,Max( DS,DS ) ) / ( Max( RMSe,( MUR - CS ) ) + ( ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * ( DS * Max( RRSe,( MUC + DS ) ) ) ) - MUR ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14607184164731712}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( MUM - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.8051391862955032, "obj2": 0.09540009313876316}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( Min( ( ( RMSe / MLU ) / RCSe ) ,CS ),( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09752197465815782}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( ( ARS + ( MRS - DDR ) ) - FirstVNF_CPU ) ) ,( ( ( MDR - FirstVNF_CPU_Server ) + ( ( DDR / PN ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( ( DS / ( MUM * ( RCSe - Min( ( Min( RRSe ,RMSe ) - MUM ) ,DS ) ) ) ) + Max( CS,Max( ( RCSe / ( ( RMSe * RCSe ) / DS ) ),CS ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06942143098189316}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03039960044054104}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( RRS - AMS ) ) * ( AMS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + CS ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.006553447384121194}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * Min( ( ( PN * PN ) + Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS * ( RMSe + CS ) ) ,MUR ),( Min( ( DS + ( RMSe + CS ) ) ,Max( ( DS + MLU ),MUC ) ) * ( ( MLU * MUC ) / CS ) ) ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06336386619293849}, {"determining": "( ( ( ACS * ( ARS / FirstVNF_Mem_Server ) ) / Max( MDR,FirstVNF_RAM_Server ) ) - Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS + ( AMS - DDR ) ) ,( MDR - Const ) ) ) ,Min( ( CRS - MDR ) ,Min( MDR ,MDR ) ) ) )", "choosing": "( ( Max( RRSe,MUR ) - RMSe ) + Max( Min( CS ,CS ),( MUC * ( DS + ( ( RMSe / ( MUC / ( MUC / RMSe ) ) ) - ( DS / MUC ) ) ) ) ) )", "obj1": 0.9164882226980728, "obj2": 0.04089872083373316}, {"determining": "( ( CRS + ( RRS * RRS ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( MDR - FirstVNF_CPU_Server ),( ( PN * PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( Max( BR,Min( ACS ,BR ) ) ,BR ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) + Max( ( ( Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) + MLU ) - CS ),( MUM + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1153020038080135}, {"determining": "( ( Max( ACS,MRS ) + FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server * PN ) + ( Min( ( PN * PN ) ,Min( MRS ,( FirstVNF_CPU - RRS ) ) ) + ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( MUR + ( ( ( CS - Max( MLU,RMSe ) ) - Min( DS ,RCSe ) ) * DS ) ) / DS ) + CS ) * ( ( RMSe + Min( CS ,MLU ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9678800856531049, "obj2": 0.014085520244521277}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.8843683083511777, "obj2": 0.0547125246044256}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( RMSe / CS ) - Max( MUC,RMSe ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ,( ( RRSe - RCSe ) + ( ( Max( ( ( MUR - MUR ) + ( ( MLU + RCSe ) * Max( MUC,DS ) ) ),( Min( CS ,MLU ) - ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ),ACS ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS - CRS ) ) ) - Max( Min( Min( MDR ,Min( FirstVNF_CPU ,MDR ) ) ,Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * AMS ) ,( MDR - Const ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( CS + RCSe ),( ( MUC + Min( ( RCSe + ( ( RCSe / MUC ) * DS ) ) ,( MUC * CS ) ) ) - CS ) ) + ( DS + ( RCSe + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.6638115631691649, "obj2": 0.18995706911258295}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( ACS - DDR ) ) * Min( FirstVNF_Mem_Server ,( CRS / ACS ) ) ) ) ) ) / ( MDR - DDR ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( Min( Min( RCSe ,Min( MUM ,MLU ) ) ,CS ) / ( Min( DS ,( DS * RRSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013349858826835126}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03882666087238142}, {"determining": "( Max( FirstVNF_Mem,PN ) - ( ( ( ( Max( AMS,RRS ) + ( FirstVNF_Mem_Server - MRS ) ) * ( ( RRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * FirstVNF_RAM ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ARS ) ) )", "choosing": "( Max( RRSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( Max( RMSe,MUC ) - Min( DS ,RCSe ) ) ) ),( Max( ( Min( DS ,Max( Max( RRSe,RMSe ),Min( MUM ,RCSe ) ) ) * Max( ( ( RCSe / RCSe ) + MLU ),DS ) ),( ( ( RRSe * ( RCSe / MUR ) ) * MUR ) - Min( ( MUR - MUC ) ,( MUC + ( CS - DS ) ) ) ) ) + RCSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10850388360002598}, {"determining": "( ( ( ( Max( Min( PN ,( ACS + FirstVNF_CPU ) ),PN ) - ( ( PN * ARS ) / ( MRS + DDR ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( ( FirstVNF_RAM_Server * BR ) * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ( DDR - Const ) ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC + RRSe ) * ( Min( MLU ,( RCSe - RRSe ) ) / MUC ) ),( MUM / Min( CS ,MLU ) ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) / Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.036066441764840085}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,Const ) ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07590801389043249}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - ( ( MDR + DDR ) + ( Min( AMS ,AMS ) - DDR ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + Max( ( ( MUC / ( MUR * RCSe ) ) / RMSe ),( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009479483050683002}, {"determining": "( ( ( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( ( PN * MDR ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) )", "choosing": "( Max( ( MUM + Max( RCSe,( RMSe * ( ( ( DS - RRSe ) + ( RRSe * MUM ) ) / Max( RRSe,Min( DS ,RMSe ) ) ) ) ) ),MUC ) + Max( CS,Max( Max( ( RCSe * DS ),RCSe ),RRSe ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04484536168786644}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( ( ( MDR / Min( FirstVNF_CPU_Server ,ACS ) ) + ( ( FirstVNF_RAM * PN ) / ( RRS - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe + ( ( Max( RMSe,( ( ( ( DS * RRSe ) + RCSe ) + RRSe ) - CS ) ) + Max( RCSe,Max( Max( ( RCSe / Max( RMSe,CS ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9528907922912205, "obj2": 0.020768931527077903}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * ( MDR - FirstVNF_CPU_Server ) ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( MDR - Const ) ) ) ) ,( ( ( Min( RRS ,Max( PN,Min( RRS ,Const ) ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "Min( ( ( ( ( RRSe * ( ( MUR * MLU ) * MUM ) ) + MUM ) + MLU ) / ( Max( MLU,Max( CS,RMSe ) ) / MUM ) ) ,( Min( MLU ,Min( RMSe ,DS ) ) / MLU ) )", "obj1": 0.7237687366167024, "obj2": 0.1386793368666317}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9400428265524625, "obj2": 0.02880305434924221}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( ( MDR - PN ) - AMS ) ) * ( AMS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + CS ) * ( ( ( MLU - RMSe ) - CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM + MDR ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( DDR * DDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - MUC ) + Max( MUC,RCSe ) )", "obj1": 0.8436830835117773, "obj2": 0.07590801389043249}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + CRS ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUM - ( Max( ( ( DS / RMSe ) / MUR ),( RRSe * RRSe ) ) - ( MUC - ( ( DS - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) ) + Max( Min( DS ,MLU ),Max( ( MUC / DS ),( ( Min( Max( CS,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( Min( Max( MUM,RMSe ) ,Min( MLU ,DS ) ) + ( MUM - MLU ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.052342283206441784}, {"determining": "( ( ( ( ( FirstVNF_RAM + Max( CRS,AMS ) ) / FirstVNF_CPU_Server ) * PN ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),RRS ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - ( MDR - ( AMS - DDR ) ) ) ) ) ) )", "choosing": "( ( RMSe + CS ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( DS - RCSe ) ) ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11398257177552662}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR - ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09186558743997833}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - MDR ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06803127990788732}, {"determining": "( ( ( MDR - ( ARS + ( MRS + CRS ) ) ) / Min( MRS ,ACS ) ) - Max( ( Min( PN ,PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ),( FirstVNF_CPU - Min( RRS ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( RRSe / ( ( ( ( ( RRSe / RCSe ) + MUM ) + MLU ) - MUR ) + Max( DS,( CS - MUR ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.038755589519769235}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( ( CRS - MDR ) - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + MUC ) ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08674063671210606}, {"determining": "( ( ( ( ( FirstVNF_RAM + Max( CRS,AMS ) ) / FirstVNF_CPU_Server ) * PN ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( ( Max( ARS,PN ) / FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),RRS ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( ( DDR + Min( FirstVNF_CPU_Server ,BR ) ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe / CS ) + Max( ( MUM + DS ),( ( MUM / RMSe ) + ( RCSe + ( MLU - RCSe ) ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11099257874250854}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( RRS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.1063988485119003}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( CRS,PN ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( ( RRSe * ( ( MUR * MLU ) * MUM ) ) + MUM ) + MLU ) ,RCSe ) ,( MLU / Min( MLU ,Min( RMSe ,DS ) ) ) )", "obj1": 0.6595289079229122, "obj2": 0.19191321904818692}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,BR ) ) - ( FirstVNF_RAM_Server + BR ) ) * ( Min( ( MDR - ARS ) ,( FirstVNF_RAM / RRS ) ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( MUM - CS ) / ( Min( ( ( MUC + RCSe ) - ( MUC + MUR ) ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ),( MUC / DS ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( RRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * RMSe ) + ( ( MUM - ( DS - ( MUC / ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8779443254817987, "obj2": 0.058383860605533126}, {"determining": "( Min( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) ,( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Max( Min( Min( Min( Max( MRS,RRS ) ,CRS ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,MUR ) - RMSe ) + Max( Min( CS ,CS ),( MUC * ( Min( RCSe ,RRSe ) + ( ( RMSe / ( MUC * ( MUC / RMSe ) ) ) - ( DS / MUC ) ) ) ) ) )", "obj1": 0.8779443254817987, "obj2": 0.058383860605533126}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.7173447537473233, "obj2": 0.1424393299344767}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC / MLU ) ) ) + RMSe ) - CS ) ) + ( ( ( ( ( ( MUC / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8843683083511777, "obj2": 0.0547125246044256}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( MUM,CS ) + RMSe ) + ( MUM - Min( ( MLU + ( MUM - MLU ) ) ,RRSe ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( ARS * AMS ) ) * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) + MUR ) / DS ) + CS ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,Min( MUR ,CS ) ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021726347649797435}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( MDR - Const ) ) ) ) ,Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( CRS,PN ) ) ) ) ) )", "choosing": "Min( Min( ( ( ( RRSe * ( ( CS - RRSe ) * MUM ) ) + MUM ) + MLU ) ,RCSe ) ,( MLU / Min( MLU ,Min( RMSe ,DS ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14299592835598576}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( RRS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.1332257444509246}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( RRS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( MUM - ( Min( DS ,RRSe ) / ( Min( DS ,MUC ) / ( RRSe + MLU ) ) ) ) + CS ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.734475374732334, "obj2": 0.1332257444509246}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU - ( AMS - DDR ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( Max( RRSe,MUR ) - RMSe ) + Max( Min( CS ,CS ),( MUC * ( DS + ( ( RMSe / ( MUC / ( MUC / RMSe ) ) ) - ( DS / MUC ) ) ) ) ) )", "obj1": 0.8972162740899358, "obj2": 0.048669440166347326}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( Max( Max( MUM,CS ),RMSe ) + RCSe ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10754585438497846}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.0198530329617039}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( Min( RRS ,Max( FirstVNF_Mem_Server,( Const + FirstVNF_RAM_Server ) ) ) * PN ) + ( ( ( PN * ( AMS + FirstVNF_RAM_Server ) ) + ( AMS * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUR,( MUC * MLU ) ) + ( RRSe / ( ( ( MLU * MUM ) / MUR ) + ( ( ( ( MUM / ( CS - RRSe ) ) * RCSe ) + Min( ( DS / RCSe ) ,MUR ) ) * CS ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}], "38": [{"determining": "( ( ( DDR / DDR ) * ( AMS * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( Max( DDR,MRS ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( ( MUR * RRSe ) / ( RRSe / RRSe ) ) ) - Max( ( RRSe - ( MUM / CS ) ),MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( AMS - ( ( ( ( FirstVNF_Mem_Server / MRS ) * PN ) / Min( MRS ,ACS ) ) - Max( MDR,CRS ) ) ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU - ( ACS - DDR ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * Max( MUR,RCSe ) ) ,CS ) ) + Max( ( MUM + DS ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / AMS ) * PN ) / ACS ) - ( Const / RRS ) )", "choosing": "( ( ( MUR + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,Max( DDR,CRS ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( ( CRS * BR ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( FirstVNF_Mem + ( PN / FirstVNF_Mem_Server ) ) - ( MDR - ( ( Min( ACS ,FirstVNF_Mem ) * ( MRS - MRS ) ) + Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) + Max( ( MUM + DS ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUM ) / ( MUC / RMSe ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16262622589152173}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM ) / Min( MRS ,DDR ) ) ,( ARS * CRS ) ) ) - ( Max( ( Max( Const,FirstVNF_CPU ) / MDR ),FirstVNF_RAM_Server ) - ACS ) )", "choosing": "( ( MLU - ( ( ( ( MUM / ( MLU + DS ) ) * RRSe ) / Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,( ( Max( MUR,RMSe ) * MUC ) * MUC ) ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) / ( ( ( ( ( ( RRSe / DS ) - DS ) + MUR ) - Min( RRSe ,CS ) ) * MUC ) / MLU ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( ( ( ACS * RRS ) - PN ) / ACS ) / PN ) * ACS ) + MDR ) ) - Min( ( ( Min( RRS ,ARS ) - AMS ) - ( Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_Mem ) / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( DS + MUR ) ,( MUR * MUR ) ) / Min( CS ,RRSe ) ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( ( CS + MUM ) / ( ( MUM / MUR ) * ( CS * ( MLU + MUC ) ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.17214347559207405}, {"determining": "( Max( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / MDR ) ) ,RRS ),( RRS / ( ACS * FirstVNF_CPU_Server ) ) ) - ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( RRS ,ACS ) ) ,( Max( FirstVNF_CPU,MDR ) * CRS ) ) ) )", "choosing": "Min( Min( ( ( ( Max( RCSe,CS ) * RRSe ) + MUM ) + MLU ) ,RCSe ) ,( MLU / Min( MLU ,( Max( CS,DS ) - MUC ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.2020732985962764}, {"determining": "( ( ( RRS - FirstVNF_RAM_Server ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + Max( DS,Max( ( MLU + Max( RCSe,MLU ) ),MUM ) ) ) ) )", "obj1": 0.7066381156316917, "obj2": 0.147928672824092}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( ( AMS - MDR ) - Min( ( ( AMS - ( FirstVNF_RAM - ( MRS - ( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ) ) ) - ( Min( Max( MDR,( ARS - Const ) ) ,ARS ) / ( MRS - DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.18430055749208246}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( MUM,CS ) + RMSe ) + ( MUM - Min( ( MLU + ( MUM - MLU ) ) ,RRSe ) ) )", "obj1": 0.6809421841541756, "obj2": 0.17913916430200016}, {"determining": "( Max( AMS,DDR ) - ( DDR + ACS ) )", "choosing": "( Min( ( ( ( CS * MLU ) - CS ) - CS ) ,( ( ( RCSe - MUC ) / RRSe ) - MUM ) ) + ( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) ) + Min( DS ,MLU ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04162358198654459}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( ( CRS - MDR ) - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + MUC ) ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08674063671210606}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * ( MDR - FirstVNF_CPU_Server ) ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( MDR - Const ) ) ) ) ,( ( ( Min( RRS ,Max( PN,Min( RRS ,Const ) ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "Min( ( ( ( ( RRSe * ( ( MUR * MLU ) * MUM ) ) + MUM ) + MLU ) / ( Max( MLU,Max( CS,RMSe ) ) / MUM ) ) ,( Min( MLU ,Min( RMSe ,DS ) ) / MLU ) )", "obj1": 0.7237687366167024, "obj2": 0.1386793368666317}, {"determining": "( ( Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Min( FirstVNF_Mem ,( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ),( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) / Const ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06211309356684837}, {"determining": "( ( ( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( ( PN * MDR ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) )", "choosing": "( Max( ( MUM + Max( RCSe,( RMSe * ( ( ( DS - RRSe ) + ( RRSe * MUM ) ) / Max( RRSe,Min( DS ,RMSe ) ) ) ) ) ),MUC ) + Max( CS,Max( Max( ( RCSe * DS ),RCSe ),RRSe ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04484536168786644}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7922912205567452, "obj2": 0.1018259530637773}, {"determining": "( ( AMS - DDR ) - Min( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( AMS - ( FirstVNF_Mem - Max( MRS,CRS ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.17314635574927478}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14192032034278804}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09943007353483349}, {"determining": "( ( PN * Min( MRS ,( PN + CRS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe + ( ( Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( RMSe,RMSe ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( Min( ( ( RMSe / MLU ) / RCSe ) ,CS ),( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09752197465815782}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( Max( Const,ACS ) - MDR ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + DS ),( MUC + ( RCSe + ( MLU - RCSe ) ) ) ) + ( ( ( ( ( MUC * CS ) / Min( RCSe ,MUR ) ) / ( ( MLU - RMSe ) - Min( MUR ,RRSe ) ) ) * MUM ) - RCSe ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + CRS ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUM - ( Max( ( ( DS / RMSe ) / MUR ),( RRSe * RRSe ) ) - ( MUC - ( ( DS - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) ) + Max( Min( DS ,MLU ),Max( ( MUC / DS ),( ( Min( Max( CS,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( Min( Max( MUM,RMSe ) ,Min( MLU ,DS ) ) + ( MUM - MLU ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.052342283206441784}, {"determining": "( ( MDR / Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server / MDR ) ) ) - ( PN * ( ARS / FirstVNF_CPU ) ) )", "choosing": "( RCSe + Min( ( Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( MUC,RMSe ) ),RCSe ),RRSe ) ) ) ,Max( Min( Max( RCSe,RMSe ) ,MUR ),Max( ( MLU / MUR ),MUC ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01595793378284162}, {"determining": "( FirstVNF_CPU - ( Min( Const ,MRS ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( MRS * ( AMS + FirstVNF_RAM_Server ) ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( ( RMSe * RMSe ) * CS ) / ( CS * Max( MUC,MUC ) ) ) + MUR ) + Max( ( MUM + RCSe ),( ( MLU + ( ( RMSe * RRSe ) / MUM ) ) - CS ) ) ) + DS ) + Max( ( MUM + RCSe ),( ( RMSe + ( ( Max( Max( CS,MLU ),Max( MUC,MUR ) ) * RRSe ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) ) * CS ) ) )", "obj1": 0.69593147751606, "obj2": 0.15746681205673568}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU - ( AMS - DDR ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( Max( RRSe,MUR ) - RMSe ) + Max( Min( CS ,CS ),( MUC * ( DS + ( ( RMSe / ( MUC / ( MUC / RMSe ) ) ) - ( DS / MUC ) ) ) ) ) )", "obj1": 0.8972162740899358, "obj2": 0.048669440166347326}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( CRS,PN ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( ( RRSe * ( ( MUR * MLU ) * MUM ) ) + MUM ) + MLU ) ,RCSe ) ,( MLU / Min( MLU ,Min( RMSe ,DS ) ) ) )", "obj1": 0.6595289079229122, "obj2": 0.19191321904818692}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( Max( Max( MUM,CS ),RMSe ) + RCSe ) ) )", "obj1": 0.7773019271948608, "obj2": 0.10960997359842166}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( MUM,CS ) + RMSe ) + ( MUM - Min( ( MLU + ( MUM - MLU ) ) ,RRSe ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( Min( RRS ,Max( FirstVNF_Mem_Server,( Const + FirstVNF_RAM_Server ) ) ) * PN ) + ( ( ( PN * ( AMS + FirstVNF_RAM_Server ) ) + ( AMS * PN ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUR,( MUC * MLU ) ) + ( RRSe / ( ( ( MLU * MUM ) / MUR ) + ( ( ( ( MUM / ( CS - RRSe ) ) * RCSe ) + Min( ( DS / RCSe ) ,MUR ) ) * CS ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( RRS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.1063988485119003}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( MUM - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( RRS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( MUM - ( Min( DS ,RRSe ) / ( Min( DS ,MUC ) / ( RRSe + MLU ) ) ) ) + CS ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.728051391862955, "obj2": 0.13818843277203838}, {"determining": "( ( ( ( FirstVNF_CPU + Max( ARS,MDR ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ),Max( ( ( PN * ( FirstVNF_CPU - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC + ( Max( RMSe,( MLU + RMSe ) ) + ( ( Max( DS,CS ) + Max( ( DS + RMSe ),MUM ) ) - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( DS - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) + Max( Max( MUM,CS ),RMSe ) )", "obj1": 0.7109207708779444, "obj2": 0.144834617686554}, {"determining": "( ( ( ( ARS / AMS ) * ACS ) / ACS ) - ( Const / RRS ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( MUM,CS ) + RMSe ) + ( MUM - Min( ( MLU + ( ( Max( MUC,DS ) - MUR ) - MLU ) ) ,RRSe ) ) )", "obj1": 0.6788008565310493, "obj2": 0.18127201388803577}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / DDR ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM - CS ) / ( Min( ( ( RCSe - CS ) - RMSe ) ,( ( RRSe / RMSe ) / ( CS - MUM ) ) ) / ( ( DS + Min( MLU ,CS ) ) + ( MUM - MLU ) ) ) ) + Max( Min( CS ,CS ),( MUC * ( DS + ( ( RMSe / ( MUC / ( MUC / RMSe ) ) ) - ( DS / MUC ) ) ) ) ) )", "obj1": 0.8458244111349036, "obj2": 0.07458494064139559}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( CRS + ( RRS * RRS ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( MDR - FirstVNF_CPU_Server ),( ( PN * PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( Max( BR,Min( ACS ,BR ) ) ,BR ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) + Max( ( ( Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) + MLU ) - CS ),( MUM + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1153020038080135}, {"determining": "( ( AMS - AMS ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( PN / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + ( MUR - Max( MUC,DS ) ) ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Min( FirstVNF_Mem ,( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ),( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( ( DS / CS ) - RRSe ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( ( ( MLU * MUM ) / MUR ) - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / MUC ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.0037448270766406817}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * Min( ( ( PN * PN ) + Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe + ( Min( ( ( ( ( MUC + MUR ) + RRSe ) / MUM ) / RCSe ) ,Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) / Max( Min( ( DS * ( RMSe + CS ) ) ,MUR ),( Min( ( DS + ( RMSe + CS ) ) ,Max( ( DS + MLU ),MUC ) ) * ( ( MLU * MUC ) / CS ) ) ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06336386619293849}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( MUM + ( Min( ( ( MUM - MUC ) / MLU ) ,( MUM / DS ) ) + RMSe ) ) - Max( CS,RMSe ) ),( ( MUR - CS ) / ( Min( ( CS - MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( ( RCSe * RCSe ) - CS ) ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.03936676971681004}, {"determining": "( ( Max( ACS,MRS ) + FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server * PN ) + ( Min( ( PN * PN ) ,Min( MRS ,( FirstVNF_CPU - RRS ) ) ) + ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( MUR + ( ( ( CS - Max( MLU,RMSe ) ) - Min( DS ,RCSe ) ) * DS ) ) / DS ) + CS ) * ( ( RMSe + Min( CS ,MLU ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9678800856531049, "obj2": 0.014085520244521277}, {"determining": "( ( Max( DDR,CRS ) - ( ( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,MDR ) ) - ACS ) / ( FirstVNF_RAM * PN ) ) ) - ( ARS - DDR ) )", "choosing": "( Max( Min( ( DS * RMSe ) ,( RCSe + ( MUR + RRSe ) ) ),( MUC / ( RRSe / MUR ) ) ) + Max( ( MUM + DS ),( MUC + ( Max( Min( RMSe ,( CS / ( MUC / RMSe ) ) ),( MUC / Max( Max( MUC,MUM ),RMSe ) ) ) + RCSe ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1354657053659735}, {"determining": "( ( ( ( PN + CRS ) * ( ACS + DDR ) ) - Min( Min( Max( MDR,PN ) ,FirstVNF_CPU_Server ) ,MRS ) ) - ( ( CRS + Min( MRS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RRSe / Max( Min( Min( MUR ,RRSe ) ,DS ),RRSe ) ) / ( ( RRSe / MUR ) - CS ) ) * ( ( ( ( RMSe * RRSe ) / ( MUC - MLU ) ) + DS ) * RMSe ) ) + ( ( ( DS / RRSe ) / RMSe ) - MUM ) ) + Min( CS ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.11676322714146496}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC / MLU ) ) ) + RMSe ) - CS ) ) + ( ( ( ( ( ( MUC / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8843683083511777, "obj2": 0.0547125246044256}, {"determining": "( ( ( MDR * ( AMS + ( AMS - RRS ) ) ) / ( ( ( Max( FirstVNF_Mem_Server,CRS ) / Const ) / DDR ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) ) ) ) - ( PN * ( MRS - ( ( PN * PN ) / Min( AMS ,ACS ) ) ) ) )", "choosing": "( Max( ( MLU + Max( RCSe,( RMSe * RCSe ) ) ),MUC ) + Max( CS,Max( ( RRSe / ( ( RMSe * MUM ) + ( Min( ( RCSe - RMSe ) ,RRSe ) / ( MUC * MUC ) ) ) ),RRSe ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04484536168786644}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( ACS - DDR ) ) * Min( FirstVNF_Mem_Server ,( CRS / ACS ) ) ) ) ) ) / ( MDR - DDR ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( Min( Min( RCSe ,Min( MUM ,MLU ) ) ,CS ) / ( Min( DS ,( DS * RRSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( ( ( RMSe / ( CS / ( MUC / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013349858826835126}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( RMSe / CS ) - Max( MUC,RMSe ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ,( ( RRSe - RCSe ) + ( ( Max( ( ( MUR - MUR ) + ( ( MLU + RCSe ) * Max( MUC,DS ) ) ),( Min( CS ,MLU ) - ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,Const ) ) ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( CRS,PN ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12317522117773035}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( Max( BR,BR ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Max( RMSe,Max( DS,DS ) ) / ( Max( RMSe,( MUR - CS ) ) + ( ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * ( DS * Max( RRSe,( MUC + DS ) ) ) ) - MUR ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14607184164731712}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( AMS - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( ( MUC + Max( DS,Max( ( MLU + Max( RCSe,MLU ) ),MUM ) ) ) + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.03298580510425135}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( ( ( ( FirstVNF_RAM + Max( CRS,AMS ) ) / FirstVNF_CPU_Server ) * PN ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),RRS ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - ( MDR - ( AMS - DDR ) ) ) ) ) ) )", "choosing": "( ( RMSe + CS ) + Max( ( MUM + DS ),( MUC + ( RCSe + ( DS - RCSe ) ) ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11394389043284478}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( RRSe / ( ( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) - MUR ) + Max( DS,( MUR - CS ) ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15847625234314552}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( ( ARS + ( MRS - DDR ) ) - FirstVNF_CPU ) ) ,( ( ( MDR - FirstVNF_CPU_Server ) + ( ( DDR / PN ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( ( DS / ( MUM * ( RCSe - Min( ( Min( RRSe ,RMSe ) - MUM ) ,DS ) ) ) ) + Max( CS,Max( ( RCSe / ( ( RMSe * RCSe ) / DS ) ),CS ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06942143098189316}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - MDR ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( MUR + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.8586723768736617, "obj2": 0.06803127990788732}, {"determining": "( ( ( MDR - ( ARS + ( MRS + CRS ) ) ) / Min( MRS ,ACS ) ) - Max( ( Min( PN ,PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ),( FirstVNF_CPU - Min( RRS ,Min( ( Min( BR ,DDR ) - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( RRSe / ( ( ( ( ( RRSe / RCSe ) + MUM ) + MLU ) - MUR ) + Max( DS,( CS - MUR ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.038755589519769235}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU - ( AMS - DDR ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( Max( RRSe,MUR ) - RMSe ) + Max( Min( CS ,CS ),( MUC * ( DS + ( ( RMSe / ( MUC / ( MUC / RMSe ) ) ) - ( DS / MUC ) ) ) ) ) )", "obj1": 0.8972162740899358, "obj2": 0.048669440166347326}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( RRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * RMSe ) + ( ( MUM - ( DS - ( MUC / ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8779443254817987, "obj2": 0.058383860605533126}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - PN ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,RMSe ),RMSe ) + Max( ( MUM + RCSe ),( MUC + ( RCSe + ( ( ( Min( RRSe ,DS ) / CS ) / RMSe ) - Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10396852250707017}, {"determining": "( Min( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) ,( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Max( Min( Min( Min( Max( MRS,RRS ) ,CRS ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RRSe,MUR ) - RMSe ) + Max( Min( CS ,CS ),( MUC * ( Min( RCSe ,RRSe ) + ( ( RMSe / ( MUC * ( MUC / RMSe ) ) ) - ( DS / MUC ) ) ) ) ) )", "obj1": 0.8779443254817987, "obj2": 0.058383860605533126}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( RMSe + ( ( ( MLU / MLU ) * RCSe ) - Max( Min( RRSe ,( ( CS + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ),( ( ( ( MUC + ( MUC / RCSe ) ) / ( MUC - Min( MUR ,CS ) ) ) / MUM ) - RCSe ) ) ) )", "obj1": 0.8843683083511777, "obj2": 0.0547125246044256}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM + MDR ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( DDR * DDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - MUC ) + Max( MUC,RCSe ) )", "obj1": 0.974304068522484, "obj2": 0.011718238746656008}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + MUC ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9400428265524625, "obj2": 0.02880305434924221}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( RRS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ACS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( MUM - ( Min( DS ,RRSe ) / ( Min( DS ,MUC ) / ( RRSe + MLU ) ) ) ) + CS ) + Max( ( DS + CS ),( ( MLU + ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ) ) - CS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13429027190265747}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - PN ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MLU ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( ( MUM * CS ) * ( RRSe - RMSe ) ) + ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) ) ) * MUM ) ,RCSe ) )", "obj1": 0.7880085653104925, "obj2": 0.10396852250707017}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / CS ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR - ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05056084001881164}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( Max( Max( MUM,CS ),RMSe ) + RCSe ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10754585438497843}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( RRS - CRS ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_Mem * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( FirstVNF_RAM_Server * CRS ) )", "choosing": "( Max( MUC,DS ) + Max( CS,Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.07681071229342919}, {"determining": "( Max( FirstVNF_Mem,PN ) - ( ( ( ( Max( AMS,RRS ) + ( FirstVNF_Mem_Server - MRS ) ) * ( ( RRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * FirstVNF_RAM ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ARS ) ) )", "choosing": "( Max( RRSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( Max( RMSe,MUC ) - Min( DS ,RCSe ) ) ) ),( Max( ( Min( DS ,Max( Max( RRSe,RMSe ),Min( MUM ,RCSe ) ) ) * Max( ( ( RCSe / RCSe ) + MLU ),DS ) ),( ( ( RRSe * ( RCSe / MUR ) ) * MUR ) - Min( ( MUR - MUC ) ,( MUC + ( CS - DS ) ) ) ) ) + RCSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10850388360002598}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.0198530329617039}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,BR ) ) - ( FirstVNF_RAM_Server + BR ) ) * ( Min( ( MDR - ARS ) ,( FirstVNF_RAM / RRS ) ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( MUM - CS ) / ( Min( ( ( MUC + RCSe ) - ( MUC + MUR ) ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ),( MUC / DS ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( ( ( ( ( ARS * PN ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + Max( ( MDR - ( AMS - DDR ) ),Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU_Server + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) / FirstVNF_Mem ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( RMSe / CS ) - Max( MUC,RMSe ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ,( RMSe + ( ( Max( ( ( MUR - MUR ) + ( ( MLU + RCSe ) * Max( MUC,DS ) ) ),( Min( MLU ,MLU ) - ( ( RRSe / RMSe ) / ( MLU - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03039960044054104}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03882666087238142}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ),( MUR - ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8072805139186295, "obj2": 0.0942131679348849}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - MDR ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06803127990788732}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_Mem * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( FirstVNF_RAM_Server * CRS ) )", "choosing": "( RCSe + ( ( Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( CS,RMSe ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07798879782095633}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) + ( ( MDR - FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM + MDR ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( DDR * DDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - MUC ) + Max( MUC,RCSe ) )", "obj1": 0.974304068522484, "obj2": 0.011718238746656008}], "39": [{"determining": "( ( ( DDR / DDR ) * ( AMS * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( Max( DDR,MRS ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( ( MUR * RRSe ) / ( RRSe / RRSe ) ) ) - Max( ( RRSe - ( MUM / CS ) ),MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( ( ARS / AMS ) * PN ) / ( AMS / MDR ) ) - ( Const / RRS ) )", "choosing": "( ( ( MUR + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( Max( CS,Max( Max( ( RCSe / Max( MUC,RMSe ) ),RCSe ),RRSe ) ) * MUM ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( ( ( FirstVNF_Mem_Server / MRS ) * PN ) / Min( MRS ,ACS ) ) - Max( MDR,CRS ) ) ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU - ( ACS - DDR ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( ( RRSe + MUM ) + MUR ),Min( ( MUC * Max( MUR,RCSe ) ) ,CS ) ) + Max( ( MUM + DS ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,Max( DDR,CRS ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( ( ( MLU * MUM ) / MUR ) - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( MUM,CS ) + RMSe ) + ( MUM - Min( ( MLU + ( MUM - MLU ) ) ,RRSe ) ) )", "obj1": 0.6809421841541756, "obj2": 0.16752274947459944}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( ( PN * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( MUM,CS ) + RMSe ) + ( MUM - Min( ( MLU + ( ( Max( MUC,DS ) - MUR ) - MLU ) ) ,RRSe ) ) )", "obj1": 0.6788008565310493, "obj2": 0.18127201388803577}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( Const + MRS ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + ( RCSe * MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.16210642146569892}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( Max( Const,ACS ) - MDR ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + DS ),( MUC + ( RCSe + ( MLU - RCSe ) ) ) ) + ( ( ( ( ( MUC * CS ) / Min( RCSe ,MUR ) ) / ( ( MLU - RMSe ) - Min( MUR ,RRSe ) ) ) * MUM ) - RCSe ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( Max( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / MDR ) ) ,RRS ),( RRS / ( ACS * FirstVNF_CPU_Server ) ) ) - ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( RRS ,ACS ) ) ,( Max( FirstVNF_CPU,MDR ) * CRS ) ) ) )", "choosing": "Min( Min( ( ( ( Max( RCSe,CS ) * RRSe ) + MUM ) + MLU ) ,RCSe ) ,( MLU / Min( MLU ,( Max( CS,DS ) - MUC ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.2020732985962764}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( Max( Const,ARS ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( ( DS / Max( MUM,Max( RCSe,Min( RMSe ,DS ) ) ) ) + Min( RRSe ,( ( Min( MLU ,MLU ) + ( CS - RMSe ) ) * Min( RRSe ,MUC ) ) ) )", "obj1": 0.9550321199143469, "obj2": 0.021630693138500884}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( Min( ( ( RMSe / MLU ) / RCSe ) ,CS ),( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09752197465815782}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( MDR - FirstVNF_CPU_Server ) ) / Min( MRS ,( RRS - MDR ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( MUR + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + CS ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.9122055674518201, "obj2": 0.04141692475794194}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + CRS ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUM - ( Max( ( ( DS / RMSe ) / MUR ),( RRSe * RRSe ) ) - ( MUC - ( ( DS - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) ) + Max( Min( DS ,MLU ),Max( ( MUC / DS ),( ( Min( Max( CS,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( Min( Max( MUM,RMSe ) ,Min( MLU ,DS ) ) + ( MUM - MLU ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.052342283206441784}, {"determining": "( ( ( RRS - FirstVNF_RAM_Server ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + Max( DS,Max( ( MLU + Max( RCSe,MLU ) ),MUM ) ) ) ) )", "obj1": 0.7066381156316917, "obj2": 0.147928672824092}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14192032034278804}, {"determining": "( ( AMS - MRS ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.8993576017130621, "obj2": 0.047987886910262775}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,Const ) ) ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( CRS,PN ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12317522117773035}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7922912205567452, "obj2": 0.1018259530637773}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.1515041041512532}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( RRS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ACS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( MUM - ( Min( DS ,RRSe ) / ( Min( DS ,MUC ) / ( RRSe + MLU ) ) ) ) + CS ) + Max( ( DS + CS ),( ( MLU + ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ) ) - CS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13429027190265747}, {"determining": "( ( Max( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Min( FirstVNF_Mem ,( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ),( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) / Const ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06211309356684837}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09943007353483349}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,BR ) ) - ( FirstVNF_RAM_Server + BR ) ) * ( Min( ( MDR - ARS ) ,( FirstVNF_RAM / RRS ) ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( MUM - CS ) / ( Min( ( ( MUC + RCSe ) - ( MUC + MUR ) ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ),( MUC / DS ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * ( MDR - FirstVNF_CPU_Server ) ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( MDR - Const ) ) ) ) ,( ( ( Min( RRS ,Max( PN,Min( RRS ,Const ) ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "Min( ( ( ( ( RRSe * ( ( MUR * MLU ) * MUM ) ) + MUM ) + MLU ) / ( Max( MLU,Max( CS,RMSe ) ) / MUM ) ) ,( Min( MLU ,Min( RMSe ,DS ) ) / MLU ) )", "obj1": 0.7237687366167024, "obj2": 0.1386793368666317}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM ) / Min( MRS ,DDR ) ) ,( ARS * CRS ) ) ) - ( Max( ( Max( Const,FirstVNF_CPU ) / MDR ),FirstVNF_RAM_Server ) - ACS ) )", "choosing": "( ( MLU - ( ( ( ( MUM / ( MLU + DS ) ) * RRSe ) / Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,( ( Max( MUR,RMSe ) * MUC ) * MUC ) ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) / ( ( ( ( ( ( RRSe / DS ) - DS ) + MUR ) - Min( RRSe ,CS ) ) * MUC ) / MLU ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( ( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( ( PN * MDR ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) )", "choosing": "( Max( ( MUM + Max( RCSe,( RMSe * ( ( ( DS - RRSe ) + ( RRSe * MUM ) ) / Max( RRSe,Min( DS ,RMSe ) ) ) ) ) ),MUC ) + Max( CS,Max( Max( ( RCSe * DS ),RCSe ),RRSe ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04484536168786644}, {"determining": "( ( PN / MRS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) + PN ) + ( ( RRS + FirstVNF_Mem_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Min( ( RMSe - ( RMSe + RMSe ) ) ,Min( RMSe ,MUM ) ) + MUR ) )", "obj1": 0.69593147751606, "obj2": 0.15559625717894493}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU - ( AMS - DDR ) ) ) ) ) + ( ( MDR - Min( FirstVNF_RAM_Server ,( Min( MDR ,PN ) + Max( ( Const * Const ),FirstVNF_Mem_Server ) ) ) ) + ( RRS - ( PN / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( ( MLU + RMSe ) - RMSe ) + Max( Min( CS ,CS ),( ( ( RRSe - CS ) + ( MUR / ( Max( MUM,( MUM - DS ) ) - MUM ) ) ) - Min( DS ,( ( Min( RCSe ,MLU ) - CS ) - Min( RRSe ,MUR ) ) ) ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03847147882233235}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_Mem * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( FirstVNF_RAM_Server * CRS ) )", "choosing": "( RCSe + ( ( Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( CS,RMSe ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07798879782095633}, {"determining": "( ( ( ( ARS / AMS ) * ACS ) / ACS ) - ( Const / RRS ) )", "choosing": "( ( ( RMSe + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.1820530531230527}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM ) / Min( MRS ,DDR ) ) ,( ARS * CRS ) ) ) - ( Max( ( Max( Const,FirstVNF_CPU ) / MDR ),FirstVNF_RAM_Server ) - ACS ) )", "choosing": "( ( MLU - ( ( ( ( MUM / ( MLU + DS ) ) * RRSe ) / Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,( ( Max( MUR,RMSe ) * MUC ) * MUC ) ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) / ( ( ( ( ( ( RRSe / DS ) - DS ) + MUR ) - Min( RRSe ,CS ) ) * MUC ) / MLU ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18414358332528877}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + RMSe )", "obj1": 0.9250535331905781, "obj2": 0.03606644176484009}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( Max( DDR,CRS ) - ( ( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,MDR ) ) - ACS ) / ( FirstVNF_RAM * PN ) ) ) - ( ARS - DDR ) )", "choosing": "( Max( Min( ( DS * RMSe ) ,( RCSe + ( MUR + RRSe ) ) ),( MUC / ( RRSe / MUR ) ) ) + Max( ( MUM + DS ),( MUC + ( Max( Min( RMSe ,( CS / ( MUC / RMSe ) ) ),( MUC / Max( Max( MUC,MUM ),RMSe ) ) ) + RCSe ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1354657053659735}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( ACS,MRS ) + FirstVNF_CPU_Server ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( MUM - ( Min( DS ,RRSe ) / ( Min( DS ,MUC ) / ( RRSe + MLU ) ) ) ) + ( ( ( CS - Max( MLU,RMSe ) ) - Min( DS ,RCSe ) ) * DS ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.1376762421469021}, {"determining": "( ( ( Min( ACS ,MRS ) / ( PN + PN ) ) - Max( DDR,( CRS * FirstVNF_CPU ) ) ) - Min( Max( ( ( ( Min( ( CRS * FirstVNF_Mem_Server ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( Const + MDR ) ) ,( ACS / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),( ( MLU / Min( ( CS + ( ( CS / RCSe ) * RRSe ) ) ,( MUR - Max( CS,MUC ) ) ) ) + MUR ) ) + ( ( DS + MUM ) + ( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUR ) / ( RMSe * CS ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.00766784038951006}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( MUM + ( Min( ( ( MUM - MUC ) / MLU ) ,( MUM / DS ) ) + RMSe ) ) - Max( CS,RMSe ) ),( ( MUR - CS ) / ( Min( ( CS - MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( ( RCSe * RCSe ) - CS ) ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.03936676971681004}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( RRSe / ( ( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) - MUR ) + Max( DS,( MUR - CS ) ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15847625234314552}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( AMS - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - Max( PN,( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( ( MUC + Max( DS,Max( ( MLU + Max( MLU,MLU ) ),MUM ) ) ) + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.03298580510425135}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * AMS ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ),( MUR - ( MUM + DS ) ) ),( DS * Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06283269510921441}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( Max( ACS,MRS ) + FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server * PN ) + ( Min( ( PN * PN ) ,Min( MRS ,( FirstVNF_CPU - RRS ) ) ) + ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( MUR + ( ( ( CS - Max( MLU,RMSe ) ) - Min( DS ,RCSe ) ) * DS ) ) / DS ) + CS ) * ( ( RMSe + Min( CS ,MLU ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9678800856531049, "obj2": 0.014085520244521277}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * ARS ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC / MLU ) ) ) + RMSe ) - CS ) ) + ( ( ( ( ( ( MUC / ( RRSe * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8843683083511777, "obj2": 0.0547125246044256}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.0198530329617039}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( CRS,PN ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RCSe + ( ( Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( RMSe,RMSe ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.6595289079229122, "obj2": 0.19191321904818692}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( MUM - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( MUM - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( ( ( MLU * MUM ) / MUR ) - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04484536168786644}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( Max( BR,BR ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Max( RMSe,Max( DS,DS ) ) / ( Max( RMSe,( MUR - CS ) ) + ( ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * ( DS * Max( RRSe,( MUC + DS ) ) ) ) - MUR ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14607184164731712}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) )", "choosing": "( Max( ( MUM + Max( RCSe,( RMSe * RCSe ) ) ),MUC ) + Max( ( MLU - ( Min( ( Max( RCSe,MUR ) / ( CS / DS ) ) ,DS ) * DS ) ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.9271948608137045, "obj2": 0.035814053855814806}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( ( FirstVNF_Mem_Server * PN ) / Min( ( Max( ACS,MRS ) * ACS ) ,( ARS * Min( FirstVNF_CPU_Server ,Const ) ) ) ) - Max( Min( Max( CRS,DDR ) ,Max( CRS,DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,( DS + ( MLU - ( Min( ( RRSe / ( CS / DS ) ) ,DS ) * DS ) ) ) ) + ( CS - MUC ) )", "obj1": 0.9807280513918629, "obj2": 0.008758142055655916}, {"determining": "( ( Const - ACS ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( ( CRS - MDR ) - FirstVNF_CPU ) ) ) ) - ( ( ( PN * RRS ) / Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( ( ( MLU - MUC ) + Max( MUC,RCSe ) ) ,( MUR / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( MUR,RRSe ) ) ) ) / ( ( ( ( RRSe + MUC ) - ( MLU / RMSe ) ) * ( RCSe + Max( MUC,MUM ) ) ) + MUC ) ) ) ) )", "obj1": 0.987152034261242, "obj2": 0.005659659322079745}, {"determining": "( ( ( ( ( ( ARS * PN ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + Max( ( MDR - ( AMS - DDR ) ),Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU_Server + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) / FirstVNF_Mem ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( RMSe / CS ) - Max( MUC,RMSe ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ,( RMSe + ( ( Max( ( ( MUR - MUR ) + ( ( MLU + RCSe ) * Max( MUC,DS ) ) ),( Min( MLU ,MLU ) - ( ( RRSe / RMSe ) / ( MLU - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03039960044054104}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( ( CRS - MDR ) - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + MUC ) ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08674063671210604}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( ARS + ( PN - DDR ) ) - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( ( PN + PN ) / ( RRS - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( ( DS / ( MUM * Max( RCSe,Min( RMSe ,DS ) ) ) ) + Max( CS,Max( ( ( RCSe / DS ) / RCSe ),RRSe ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09239677046355341}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - MDR ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06803127990788732}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03039960044054104}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( RRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * RMSe ) + ( ( MUM - ( DS - ( MUC / ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8779443254817987, "obj2": 0.058383860605533126}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( RRS - PN ) - PN ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / RMSe ) ) - ( MLU / ( MUR / ( RRSe / MUC ) ) ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.1054231399441505}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUM - ( Min( DS ,RRSe ) / ( RMSe / ( CS / ( MUR * RRSe ) ) ) ) ) + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8779443254817987, "obj2": 0.058383860605533126}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( ( RRS * PN ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * MDR ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC / MLU ) ) ) + RMSe ) - CS ) ) + ( ( ( ( ( ( MUC / ( CS * MUR ) ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( RCSe / ( RCSe + RCSe ) ) ,DS ) ) + DS ) )", "obj1": 0.8843683083511777, "obj2": 0.0547125246044256}, {"determining": "( ( CRS + ( RRS * RRS ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( MDR - FirstVNF_CPU_Server ),( ( PN * PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( Max( BR,Min( ACS ,BR ) ) ,BR ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) + Max( ( ( Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) + MLU ) - CS ),( MUM + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1153020038080135}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( RRSe / ( ( ( ( Max( RCSe,MUR ) + MUM ) + MLU ) - MUR ) + Max( DS,( MUR - CS ) ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15847625234314552}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( MUM,CS ) + RMSe ) + ( MUM - Min( ( MLU + ( MUM - MLU ) ) ,RRSe ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9400428265524625, "obj2": 0.02880305434924221}, {"determining": "( Max( FirstVNF_Mem,PN ) - ( ( ( ( Max( AMS,RRS ) + ( FirstVNF_Mem_Server - MRS ) ) * ( ( RRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * FirstVNF_RAM ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ARS ) ) )", "choosing": "( Max( RRSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( Max( RMSe,MUC ) - Min( DS ,RCSe ) ) ) ),( Max( ( Min( DS ,Max( Max( RRSe,RMSe ),Min( MUM ,RCSe ) ) ) * Max( ( ( RCSe / RCSe ) + MLU ),DS ) ),( ( ( RRSe * ( RCSe / MUR ) ) * MUR ) - Min( ( MUR - MUC ) ,( MUC + ( CS - DS ) ) ) ) ) + RCSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10850388360002598}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS - Max( FirstVNF_Mem,ACS ) ) ) - Max( PN,( MRS - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) )", "choosing": "( Max( ( MUM + Max( RCSe,( MUM * RCSe ) ) ),MUC ) + Max( Min( ( ( Max( RRSe,MUR ) + Min( MUC ,Max( ( DS + RCSe ),MUC ) ) ) + MLU ) ,RCSe ),Max( Max( ( RCSe / DS ),RCSe ),RRSe ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07642377972307979}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( ( PN + ARS ) + Max( CRS,PN ) ) ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( ( RRSe * ( ( MUR * MLU ) * MUM ) ) + MUM ) ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.143910949303894}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( ( CRS - MDR ) - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + MUC ) ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08674063671210604}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( ( ARS + ( MRS - DDR ) ) - FirstVNF_CPU ) ) ,( ( ( MDR - FirstVNF_CPU_Server ) + ( ( DDR / PN ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( ( DS / ( MUM * ( RCSe - Min( ( Min( RRSe ,RMSe ) - MUM ) ,DS ) ) ) ) + Max( CS,Max( ( RCSe / ( ( RMSe * RCSe ) / DS ) ),CS ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06942143098189316}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( PN * PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10735878803138875}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM ) / Min( MRS ,DDR ) ) ,( ARS * CRS ) ) ) - ( Max( ( Max( Const,FirstVNF_CPU ) / MDR ),FirstVNF_RAM_Server ) - ACS ) )", "choosing": "( ( MLU - ( ( ( ( MUM / ( MLU + DS ) ) * RRSe ) / Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,( ( Max( MUR,RMSe ) * MUC ) * MUC ) ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) / ( ( ( ( ( ( RRSe / DS ) - DS ) + MUR ) - Min( RRSe ,CS ) ) * MUC ) / MLU ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18414358332528877}, {"determining": "( ( FirstVNF_Mem * PN ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU ) + ( ( PN - PN ) / ( AMS - MRS ) ) ) ) )", "choosing": "( ( ( Max( CS,CS ) - RMSe ) + CS ) + Min( ( Max( RMSe,( ( ( RCSe + MUM ) + RRSe ) - CS ) ) + MUC ) ,Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( Min( MUC ,( Min( MLU ,MUC ) / ( DS - DS ) ) ) / CS ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ),( MUR - ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8072805139186295, "obj2": 0.0942131679348849}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8072805139186295, "obj2": 0.0942131679348849}, {"determining": "( ( ( ( FirstVNF_CPU + Max( ARS,MDR ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ),Max( ( ( PN * ( FirstVNF_CPU - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC + ( Max( RMSe,( MLU + RMSe ) ) + ( ( Max( DS,CS ) + Max( ( DS + RMSe ),MUM ) ) - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( DS - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) + Max( Max( MUM,CS ),RMSe ) )", "obj1": 0.7109207708779444, "obj2": 0.144834617686554}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / CS ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR - ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05056084001881164}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( ( ( MDR - FirstVNF_CPU_Server ) + ( AMS + ( AMS - RRS ) ) ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( DS / ( RMSe / RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01595793378284162}, {"determining": "( ( MDR / Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server / MDR ) ) ) - ( PN * ( ARS / FirstVNF_CPU ) ) )", "choosing": "( RCSe + Min( ( Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( MUC,RMSe ) ),RCSe ),RRSe ) ) ) ,Max( Min( Max( RCSe,RMSe ) ,MUR ),Max( ( MLU / MUR ),MUC ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01595793378284162}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / DDR ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + DS ) ) + MUR ) + RMSe ) - ( ( ( ( MUM / ( MLU + DS ) ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.8458244111349036, "obj2": 0.07458494064139559}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - MDR ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( MUR + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.8586723768736617, "obj2": 0.06803127990788732}], "40": [{"determining": "( ( ( DDR / DDR ) * ( AMS * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( Max( DDR,MRS ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( ( MUR * RRSe ) / ( RRSe / RRSe ) ) ) - Max( ( RRSe - ( MUM / CS ) ),MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / AMS ) * PN ) / ( AMS / MDR ) ) - ( Const / RRS ) )", "choosing": "( ( ( MUR + ( MUR - Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ),DS ) ) ) - CS ) + Min( ( Max( CS,Max( Max( ( RCSe / Max( MUC,RMSe ) ),RCSe ),RRSe ) ) * MUM ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Max( DDR,CRS ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * CS ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( MUM,CS ) + RMSe ) + ( MUM - Min( ( MLU + ( MUM - MLU ) ) ,RRSe ) ) )", "obj1": 0.6809421841541756, "obj2": 0.16752274947459944}, {"determining": "( ( ( PN * PN ) / Min( Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ,( ARS * CRS ) ) ) - Max( Min( ( FirstVNF_RAM / MDR ) ,Min( ( MDR - CRS ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) - ( ( ( ( MUM / ( MLU + DS ) ) * RRSe ) / Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,( ( Max( MUR,RMSe ) * MUC ) * MUC ) ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.6745182012847966, "obj2": 0.17711906725456616}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( ( RRS - Max( PN,( RRS - FirstVNF_CPU ) ) ),FirstVNF_Mem ) ,Min( ( ARS * ( Max( Const,ACS ) - MDR ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + DS ),( MUC + ( RCSe + ( MLU - RCSe ) ) ) ) + Max( MUM,RMSe ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,BR ) ) - ( FirstVNF_RAM_Server + BR ) ) * ( Min( ( MDR - ARS ) ,( FirstVNF_RAM / RRS ) ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( MUM - CS ) / ( Min( ( ( MUC + RCSe ) - ( MUC + MUR ) ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ),( MUC / DS ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - ( MRS / Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - ( ( MDR * MDR ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( RMSe * MUR ) - ( Min( ( MUR / ( CS + DS ) ) ,MLU ) / ( MLU / DS ) ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17316280315061913}, {"determining": "( ( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( Max( Const,ACS ) - MDR ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - Max( PN,( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( ( MUC + Max( DS,MUC ) ) + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010899910515183924}, {"determining": "( ( Max( ACS,MRS ) + FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server * PN ) + ( Min( ( PN * PN ) ,Min( MRS ,( FirstVNF_CPU - RRS ) ) ) + ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( MUR + ( ( ( CS - Max( MLU,RMSe ) ) - Min( DS ,RCSe ) ) * DS ) ) / DS ) + CS ) * ( ( RMSe + Min( CS ,MLU ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9678800856531049, "obj2": 0.014085520244521277}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( Min( ( ( RMSe / MLU ) / RCSe ) ,CS ),( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( DS / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9528907922912205, "obj2": 0.020638967628642466}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( Max( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / MDR ) ) ,RRS ),( RRS / ( ACS * FirstVNF_CPU_Server ) ) ) - ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( RRS ,ACS ) ) ,( Max( FirstVNF_CPU,MDR ) * CRS ) ) ) )", "choosing": "Min( Min( ( ( ( Max( RCSe,CS ) * RRSe ) + MUM ) + MLU ) ,RCSe ) ,( MLU / Min( MLU ,( Max( CS,DS ) - MUC ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.2020732985962764}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( Max( FirstVNF_Mem,PN ) - ( ( ( ( Max( AMS,RRS ) + ( FirstVNF_Mem_Server - MRS ) ) * ( ( RRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * FirstVNF_RAM ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ARS ) ) )", "choosing": "( Max( RRSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( Max( RMSe,MUC ) - Min( DS ,RCSe ) ) ) ),( Max( ( Min( DS ,Max( Max( RRSe,RMSe ),Min( MUM ,RCSe ) ) ) * Max( ( ( RCSe / RCSe ) + MLU ),DS ) ),( ( ( RRSe * ( RCSe / MUR ) ) * MUR ) - Min( ( MUR - MUC ) ,( MUC + ( CS - DS ) ) ) ) ) + RCSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10850388360002598}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( ( CRS - MDR ) - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + MUC ) ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08674063671210602}, {"determining": "( ( AMS - MRS ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.8993576017130621, "obj2": 0.047987886910262775}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( CRS,PN ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RCSe + ( ( Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( RMSe,RMSe ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.6595289079229122, "obj2": 0.19191321904818692}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7922912205567452, "obj2": 0.1018259530637773}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) - ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,Min( CRS ,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( Max( RMSe,MUM ) / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( ( MLU * DS ) + DS ) ) ) ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.036066441764840085}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( PN * PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10531649126383287}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) / ( ( ( ( PN * ACS ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( MRS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) ) - ( ( ( AMS / RRS ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / CS ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( MUR + DS ) / RRSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUC,MUR ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06173517769859165}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14192032034278804}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM ) / Min( MRS ,DDR ) ) ,( ARS * CRS ) ) ) - ( Max( ( Max( Const,FirstVNF_CPU ) / MDR ),FirstVNF_RAM_Server ) - ACS ) )", "choosing": "( ( MLU - ( ( ( ( MUM / ( MLU + DS ) ) * RRSe ) / Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,( ( Max( MUR,RMSe ) * MUC ) * MUC ) ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) / ( ( ( ( ( ( RRSe / DS ) - DS ) + MUR ) - Min( RRSe ,CS ) ) * MUC ) / MLU ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18414358332528877}, {"determining": "( ( AMS - ( MDR / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04967005950229464}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * ( MDR - FirstVNF_CPU_Server ) ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( MDR - Const ) ) ) ) ,( ( ( Min( RRS ,Max( PN,Min( RRS ,Const ) ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "Min( ( ( ( ( RRSe * ( ( MUR * MLU ) * MUM ) ) + MUM ) + MLU ) / ( Max( MLU,Max( CS,RMSe ) ) / MUM ) ) ,( Min( MLU ,Min( RMSe ,DS ) ) / MLU ) )", "obj1": 0.7237687366167024, "obj2": 0.1386793368666317}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( Max( Const,ACS ) - MDR ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + DS ),( MUC + ( RCSe + ( MLU - RCSe ) ) ) ) + ( ( ( ( ( MUC * CS ) / Min( RCSe ,MUR ) ) / ( ( MLU - RMSe ) - Min( MUR ,RRSe ) ) ) * MUM ) - RCSe ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( PN / MRS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) + PN ) + ( ( RRS + FirstVNF_Mem_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Min( ( RMSe - ( RMSe + RMSe ) ) ,Min( RMSe ,MUM ) ) + MUR ) )", "obj1": 0.69593147751606, "obj2": 0.15559625717894493}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU - ( AMS - DDR ) ) ) ) ) + ( ( MDR - Min( FirstVNF_RAM_Server ,( Min( MDR ,PN ) + Max( ( Const * Const ),FirstVNF_Mem_Server ) ) ) ) + ( RRS - ( PN / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( ( MLU + RMSe ) - RMSe ) + Max( Min( CS ,CS ),( ( ( RRSe - CS ) + ( MUR / ( Max( MUM,( MUM - DS ) ) - MUM ) ) ) - Min( DS ,( ( Min( RCSe ,MLU ) - CS ) - Min( RRSe ,MUR ) ) ) ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03847147882233235}, {"determining": "( ( CRS + ( RRS * RRS ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( MDR - FirstVNF_CPU_Server ),( ( PN * PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( Max( BR,Min( ACS ,BR ) ) ,BR ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) + Max( ( ( Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) + MLU ) - CS ),( MUM + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1153020038080135}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( ( ARS + ( PN - DDR ) ) - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( ( PN + PN ) / ( RRS - FirstVNF_CPU ) ) + RRS ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( ( DS / ( MUM * Max( RCSe,Min( RMSe ,DS ) ) ) ) + Max( CS,Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) / RCSe ),RRSe ) ) )", "obj1": 0.9057815845824411, "obj2": 0.04595191209069765}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( RRS - FirstVNF_RAM_Server ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + Max( DS,Max( ( MLU + Max( RCSe,MLU ) ),MUM ) ) ) ) )", "obj1": 0.7066381156316917, "obj2": 0.147928672824092}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + DS ) ) + MUR ) + RMSe ) - ( ( ( ( MUM / ( MLU + DS ) ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.6873661670235546, "obj2": 0.16210642146569892}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM ) / Min( MRS ,( PN * PN ) ) ) ,( ARS * CRS ) ) ) - Max( Min( ( FirstVNF_RAM / MDR ) ,Min( ( MDR - CRS ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU - ( ( ( ( MUM / MUM ) * RRSe ) / Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,( ( Max( MUR,RMSe ) * MUC ) * MUC ) ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18414358332528877}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9400428265524625, "obj2": 0.02880305434924221}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR + CRS ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUM - ( Max( ( ( DS / RMSe ) / MUR ),( RRSe * RRSe ) ) - ( MUC - ( ( DS - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) ) + Max( Min( DS ,MLU ),Max( ( MUC / DS ),( ( Min( Max( CS,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( Min( Max( MUM,RMSe ) ,Min( MLU ,DS ) ) + ( MUM - MLU ) ) ) / ( MUM - CS ) ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.052342283206441784}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( ACS ,MRS ) ) ,( ARS * CRS ) ) ) - Max( ( PN * ( ( ( PN * PN ) / Min( FirstVNF_CPU_Server ,MDR ) ) - Max( DDR,CRS ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) + MRS ),Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( MUM,Max( RMSe,Max( DS,RCSe ) ) ) + RMSe ) + ( MUM - Min( ( CS + MUC ) ,RRSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.15989686608754536}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - ( FirstVNF_Mem + Min( Const ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.15018998151383628}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( FirstVNF_CPU_Server ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( Min( ( ( RMSe / MLU ) / RCSe ) ,CS ),( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),RCSe ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09648549521326066}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( ( PN * PN ),MRS ) + FirstVNF_CPU_Server ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Min( ( ( RCSe * MLU ) * MUM ) ,Min( RMSe ,Max( MLU,RCSe ) ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13325379245776026}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09943007353483349}, {"determining": "( ( ( ( FirstVNF_CPU + Max( ARS,MDR ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ),Max( ( ( PN * ( FirstVNF_CPU - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC + ( Max( RMSe,( MLU + RMSe ) ) + ( ( Max( DS,CS ) + Max( ( DS + RMSe ),MUM ) ) - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( DS - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) + Max( Max( MUM,CS ),RMSe ) )", "obj1": 0.7109207708779444, "obj2": 0.144834617686554}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09421316793488489}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( AMS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( ( MUM - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14309575380610406}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.0198530329617039}, {"determining": "Min( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ,Min( Max( ( ( ( Min( ( CRS * BR ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( Const + MDR ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),( ( MLU / Min( ( CS + ( ( CS / RCSe ) * RRSe ) ) ,( MUR - Max( CS,MUC ) ) ) ) + MUR ) ) + ( ( DS + MUM ) + ( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUR ) / ( RMSe * CS ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12485402229236077}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MDR ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( ( ( ( ( FirstVNF_RAM * DDR ) * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) + ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),MUM ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / CS ) ) - ( ( MLU * MUR ) / MLU ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUM - MLU ) ) ),( MUR - ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8886509635974305, "obj2": 0.05352867227087319}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( Const + MRS ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + ( RCSe * MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.16210642146569892}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( DS / ( RMSe / RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ACS ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( MUM - MLU ),RMSe ) + Max( ( MUC + ( RCSe + ( MUM - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.8329764453961456, "obj2": 0.08130570456116373}, {"determining": "( ( AMS - AMS ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_Mem * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( ( MLU / MUM ) + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9914346895074947, "obj2": 0.0037448270766406817}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( MUM - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) - Max( DDR,CRS ) ),( Max( BR,BR ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Max( RMSe,Max( DS,DS ) ) / ( Max( RMSe,( MUR - CS ) ) + ( ( ( Min( RCSe ,MLU ) / ( ( CS * RMSe ) - CS ) ) * ( DS * Max( RRSe,( MUC + DS ) ) ) ) - MUR ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14607184164731712}, {"determining": "( ( ( ( Min( ( PN * PN ) ,Min( ACS ,MRS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM,( FirstVNF_CPU + RRS ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( Min( MUM ,MUC ) - ( ( Max( RRSe,( MLU + RCSe ) ) * Min( Min( ( MUM * DS ) ,( RCSe * RRSe ) ) ,RMSe ) ) * RMSe ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ),( ( MUM - MLU ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8372591006423983, "obj2": 0.07905496848855195}, {"determining": "( ( AMS - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - Max( PN,( DDR - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( ( MUC + Max( DS,Max( ( MLU + Max( MLU,MLU ) ),MUM ) ) ) + DS ),( MUC + ( ( ( MLU - RMSe ) - CS ) + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.033922011873411526}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( FirstVNF_Mem * PN ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU ) + ( ( PN - PN ) / ( AMS - MRS ) ) ) ) )", "choosing": "( ( ( Max( CS,CS ) - RMSe ) + CS ) + Min( ( Max( RMSe,( ( ( RCSe + MUM ) + RRSe ) - CS ) ) + MUC ) ,Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( Min( MUC ,( Min( MLU ,MUC ) / ( DS - DS ) ) ) / CS ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( ( ( ( ( ARS * PN ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + Max( ( MDR - ( AMS - DDR ) ),Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU_Server + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) / FirstVNF_Mem ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( RMSe / CS ) - Max( MUC,RMSe ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ,( RMSe + ( ( Max( ( ( MUR - MUR ) + ( ( MLU + RCSe ) * Max( MUC,DS ) ) ),( Min( MLU ,MLU ) - ( ( RRSe / RMSe ) / ( MLU - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03039960044054104}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( MRS * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ,( ( PN + ACS ) + Max( CRS,PN ) ) ) ) ,( Min( RRS ,FirstVNF_CPU ) - Min( ( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,Const ) ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS + RRSe ) - CS ) + ( RMSe * RCSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11458204086383213}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( MUM + ( Min( ( ( MUM - MUC ) / MLU ) ,( MUM / DS ) ) + RMSe ) ) - Max( CS,RMSe ) ),( ( MUR - CS ) / ( Min( ( CS - MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( ( RCSe * RCSe ) - CS ) ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.03936676971681004}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( ( ARS + ( MRS - DDR ) ) - FirstVNF_CPU ) ) ,( ( ( MDR - FirstVNF_CPU_Server ) + ( ( DDR / PN ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( ( DS / ( MUM * ( RCSe - Min( ( Min( RRSe ,RMSe ) - MUM ) ,DS ) ) ) ) + Max( CS,Max( ( RCSe / ( ( RMSe * RCSe ) / DS ) ),CS ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06942143098189316}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( AMS + DDR ) ) ) - ( ( ARS + ( PN - DDR ) ) - FirstVNF_CPU ) ) ,( BR + ( ( ( PN + PN ) / ( RRS - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( ( DS / ( MUM * Max( RCSe,Min( RMSe ,DS ) ) ) ) + Max( ( DS * RRSe ),( ( ( RCSe / DS ) / RCSe ) / RRSe ) ) )", "obj1": 0.8115631691648822, "obj2": 0.0923271599100549}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - MDR ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( MUM - ( Min( DS ,RRSe ) / ( Min( DS ,MUC ) / ( RRSe + MLU ) ) ) ) + CS ) + Max( ( DS + CS ),( ( MLU + ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ) ) - CS ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06803127990788732}, {"determining": "( ( Max( DDR,CRS ) - ( ( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,MDR ) ) - ACS ) / ( FirstVNF_RAM * PN ) ) ) - ( ARS - DDR ) )", "choosing": "( Max( Min( ( DS * RMSe ) ,( RCSe + ( MUR + RRSe ) ) ),( MUC / ( RRSe / MUR ) ) ) + Max( ( MUM + DS ),( MUC + ( Max( Min( RMSe ,( CS / ( MUC / RMSe ) ) ),( MUC / Max( Max( MUC,MUM ),RMSe ) ) ) + RCSe ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1354657053659735}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - ( Min( PN ,( PN + FirstVNF_CPU ) ) / PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( Min( FirstVNF_Mem_Server ,DDR ) * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) + Max( ( MUM + DS ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( ( ( CS - MUM ) / ( MUM / CS ) ) / RMSe ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03039960044054104}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( Min( RRS ,( DDR + MRS ) ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * ARS ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC / MLU ) ) ) + RMSe ) - CS ) ) + ( ( ( ( ( ( MUC / ( RRSe * MUR ) ) * CS ) / ( CS * ( MUR / MUC ) ) ) + RMSe ) + Min( Min( RCSe ,( MUC + ( ( RCSe / MUM ) + RCSe ) ) ) ,DS ) ) + DS ) )", "obj1": 0.8843683083511777, "obj2": 0.0547125246044256}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( RRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * RMSe ) + ( ( MUM - ( DS - ( MUC / ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8779443254817987, "obj2": 0.058383860605533126}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,RRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( RMSe / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10065087610744612}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( Max( Const,ACS ) - MDR ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + DS ),( MUC + ( RCSe + ( MLU - RCSe ) ) ) ) + ( ( ( ( ( MUC * CS ) / Min( RCSe ,MUR ) ) / ( ( MLU - RMSe ) - Min( MUR ,RRSe ) ) ) * MUM ) - RCSe ) )", "obj1": 0.6531049250535332, "obj2": 0.20348569586884172}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( AMS - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - Max( PN,( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.03298580510425135}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.1515041041512532}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( RRS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - PN ) ) - Min( ( DDR / FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RRSe ) ) ),DS ) + CS ) + Min( Max( RMSe,Min( RMSe ,MLU ) ) ,MUC ) )", "obj1": 0.728051391862955, "obj2": 0.1369773517674569}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( PN * PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10735878803138875}, {"determining": "( ( ( FirstVNF_CPU_Server * PN ) / Min( ( Max( ACS,MRS ) * ACS ) ,( ARS * Min( FirstVNF_CPU_Server ,Const ) ) ) ) - Max( ( ( ACS + ACS ) + ( RRS + FirstVNF_RAM_Server ) ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR + ( MUR / Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + CS ) ),DS ) ) ) - CS ) + Min( ( ( Min( ( Max( RMSe,( MLU + MUR ) ) / RRSe ) ,( CS * MLU ) ) - MUR ) * ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) ) ,RCSe ) )", "obj1": 0.9807280513918629, "obj2": 0.008758142055655916}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( MDR - FirstVNF_CPU_Server ) ) / Min( MRS ,( RRS - MDR ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( MLU,( DS + ( MLU - ( Min( ( RRSe / ( CS / DS ) ) ,DS ) * DS ) ) ) ) + ( CS - MUC ) )", "obj1": 0.9122055674518201, "obj2": 0.04141692475794194}, {"determining": "( ( ( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( ( PN * MDR ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) )", "choosing": "( Max( ( MUM + Max( RCSe,( RMSe * ( ( ( DS - RRSe ) + ( RRSe * MUM ) ) / Max( RRSe,Min( DS ,RMSe ) ) ) ) ) ),MUC ) + Max( CS,Max( Max( ( RCSe * DS ),RCSe ),RRSe ) ) )", "obj1": 0.9079229122055674, "obj2": 0.04484536168786644}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUM - Min( RCSe ,( ( Max( MUR,RMSe ) * MUC ) * MUC ) ) ) + CS ),( ( MLU + ( MUR / MUM ) ) - CS ) ) + ( ( MUM - ( DS - ( MUC - ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.9143468950749465, "obj2": 0.04124809414906517}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( PN * PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( PN - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ),( MUR - ( MUM + DS ) ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10632230858649157}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUM + MUM ) + MUR ),Min( ( Max( MUR,( RRSe * MUR ) ) * MUC ) ,CS ) ) + Max( RMSe,RCSe ) )", "obj1": 0.8779443254817987, "obj2": 0.058383860605533126}, {"determining": "( ( ( AMS - DDR ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( ( CRS - MDR ) - FirstVNF_CPU ) ) ) ) - ( ( ( PN * RRS ) / ( MRS * ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( ( ( MLU - MUC ) + Max( MUC,RCSe ) ) ,( MUR / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( MLU - RCSe ) ) * ( ( DS - MUR ) / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MUC / MUM ) ) + MUC ) ) ) ) )", "obj1": 0.987152034261242, "obj2": 0.005659659322079745}, {"determining": "( ( ( Min( ACS ,MRS ) / ( PN + PN ) ) - Max( DDR,( CRS * FirstVNF_CPU ) ) ) - Min( Max( ( ( ( Min( ( CRS * FirstVNF_Mem_Server ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( Const + MDR ) ) ,( ACS / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),( ( MLU / Min( ( CS + ( ( CS / RCSe ) * RRSe ) ) ,( MUR - Max( CS,MUC ) ) ) ) + MUR ) ) + ( ( DS + MUM ) + ( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUR ) / ( RMSe * CS ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.00766784038951006}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09353568635536064}], "41": [{"determining": "( ( ( DDR / DDR ) * ( AMS * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( Max( DDR,MRS ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( ( MUR * RRSe ) / ( RRSe / RRSe ) ) ) - Max( ( RRSe - ( MUM / CS ) ),MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * FirstVNF_RAM ) ) ) - Max( ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) - Const ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + ( ( MUM + RCSe ) / ( ( Max( ( RMSe / MLU ),MLU ) + MLU ) - CS ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( MUM,CS ) + RMSe ) + ( MUM - Min( ( MLU + ( MUM - MLU ) ) ,RRSe ) ) )", "obj1": 0.6809421841541756, "obj2": 0.16752274947459944}, {"determining": "( ( Max( ACS,MRS ) + FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server * PN ) + ( Min( ( PN * PN ) ,Min( MRS ,( FirstVNF_CPU - RRS ) ) ) + ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( MUR + ( ( ( CS - Max( MLU,RMSe ) ) - Min( DS ,RCSe ) ) * DS ) ) / DS ) + CS ) * ( ( RMSe + Min( CS ,MLU ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9678800856531049, "obj2": 0.014085520244521277}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( PN * PN ) / Min( ( Min( MRS ,ACS ) - ( PN * PN ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( ARS - Max( DDR,ARS ) ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( ( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ) * Max( MUM,RMSe ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( ( ( ( PN * PN ) / Min( ARS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) * MRS ),( ( ( ( FirstVNF_Mem * CRS ) + FirstVNF_RAM ) - CRS ) - ( AMS - ( ( RRS * ( AMS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,Min( FirstVNF_Mem ,( ( MDR / RRS ) * PN ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( ( ( ( ( RRSe - MUC ) * ( MUM / ( RMSe * MUR ) ) ) * RCSe ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / ( RRSe + MLU ) ) ) ) + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07590711405220167}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,BR ) ) - ( FirstVNF_RAM_Server + BR ) ) * ( Min( ( MDR - ARS ) ,( FirstVNF_RAM / RRS ) ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( MUM - CS ) / ( Min( ( ( MUC + RCSe ) - ( MUC + MUR ) ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ),( MUC / DS ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - ( MRS / Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - ( ( MDR * MDR ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( RMSe * MUR ) - ( Min( ( MUR / ( CS + DS ) ) ,MLU ) / ( MLU / DS ) ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17316280315061913}, {"determining": "( ( ( ( Min( ( PN * PN ) ,Min( ACS ,MRS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM,( FirstVNF_CPU + RRS ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( Min( MUM ,MUC ) - ( ( Max( RRSe,( MLU + RCSe ) ) * Min( Min( ( MUM * DS ) ,( RCSe * RRSe ) ) ,RMSe ) ) * RMSe ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ),( ( MUM - MLU ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8372591006423983, "obj2": 0.07905496848855195}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM ) / Min( MRS ,( PN * PN ) ) ) ,( ARS * CRS ) ) ) - Max( Min( ( FirstVNF_RAM / MDR ) ,Min( ( MDR - CRS ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU - ( ( ( ( MUM / MUM ) * RRSe ) / Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,( ( Max( MUR,RMSe ) * MUC ) * MUC ) ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18215204528773174}, {"determining": "( Max( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / MDR ) ) ,RRS ),( RRS / ( ACS * FirstVNF_CPU_Server ) ) ) - ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( RRS ,ACS ) ) ,( Max( FirstVNF_CPU,MDR ) * CRS ) ) ) )", "choosing": "Min( Min( ( ( ( Max( RCSe,CS ) * RRSe ) + MUM ) + MLU ) ,RCSe ) ,( MLU / Min( MLU ,( Max( CS,DS ) - MUC ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.2020732985962764}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) / ( ( ( ( PN * ACS ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( MRS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) ) - ( ( ( AMS / RRS ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / CS ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( MUR + DS ) / RRSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUC,MUR ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06173517769859165}, {"determining": "( ( PN / MRS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) + PN ) + ( ( RRS + FirstVNF_Mem_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Min( ( RMSe - ( RMSe + RMSe ) ) ,Min( RMSe ,MUM ) ) + MUR ) )", "obj1": 0.69593147751606, "obj2": 0.15559625717894493}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( ( PN * PN ) / Min( Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ,( ARS * CRS ) ) ) - Max( Min( ( FirstVNF_RAM / MDR ) ,Min( ( MDR - CRS ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) - ( ( ( ( MUM / ( MLU + DS ) ) * RRSe ) / Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,( ( Max( MUR,RMSe ) * MUC ) * MUC ) ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.6745182012847966, "obj2": 0.17711906725456616}, {"determining": "( Max( FirstVNF_Mem,PN ) - ( ( ( ( Max( AMS,RRS ) + ( FirstVNF_Mem_Server - MRS ) ) * ( ( RRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * FirstVNF_RAM ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ARS ) ) )", "choosing": "( Max( RRSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( Max( RMSe,MUC ) - Min( DS ,RCSe ) ) ) ),( Max( ( Min( DS ,Max( Max( RRSe,RMSe ),Min( MUM ,RCSe ) ) ) * Max( ( ( RCSe / RCSe ) + MLU ),DS ) ),( ( ( RRSe * ( RCSe / MUR ) ) * MUR ) - Min( ( MUR - MUC ) ,( MUC + ( CS - DS ) ) ) ) ) + RCSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10850388360002598}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( ( CRS - MDR ) - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + MUC ) ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08674063671210602}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MDR ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7922912205567452, "obj2": 0.1018259530637773}, {"determining": "( ( AMS - ( MDR / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04967005950229464}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ACS ) ) ) ) + Max( PN,( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUM - MLU ),RMSe ) + Max( ( MUC + ( ( DS - MUC ) + ( MUM - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9507494646680942, "obj2": 0.023171302956891005}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( ( RRS - Max( PN,( RRS - FirstVNF_CPU ) ) ),FirstVNF_Mem ) ,Min( ( ARS * ( Max( Const,ACS ) - MDR ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUM + DS ),( MUC + ( RCSe + ( MLU - RCSe ) ) ) ) + Max( MUM,RMSe ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + ( ( MDR - ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) ) + ( Min( RRS ,( DDR + MRS ) ) / ( Min( FirstVNF_RAM_Server ,( ( RRS - FirstVNF_CPU_Server ) * ARS ) ) * ( Const / ( DDR / ( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( ( Max( RMSe,RCSe ) / ( CS * ( MUC / MLU ) ) ) + RMSe ) - CS ) ) + ( ( ( ( ( ( MUC / ( RRSe * MUR ) ) * CS ) / ( CS * ( MUR / MUC ) ) ) + RMSe ) + Min( Min( RCSe ,( MUC + ( ( RCSe / MUM ) + RCSe ) ) ) ,DS ) ) + DS ) )", "obj1": 0.8843683083511777, "obj2": 0.0547125246044256}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( CRS + ( RRS * RRS ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( MDR - FirstVNF_CPU_Server ),( ( PN * PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( Max( BR,Min( ACS ,BR ) ) ,BR ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) + Max( ( ( Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) + MLU ) - CS ),( MUM + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1153020038080135}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) - ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,Min( CRS ,( PN / FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( Max( RMSe,MUM ) / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( ( MLU * DS ) + DS ) ) ) ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.036066441764840085}, {"determining": "( ( AMS - MRS ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.8993576017130621, "obj2": 0.047987886910262775}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( AMS - ( MDR / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + Min( ( MDR - FirstVNF_CPU_Server ) ,( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( ( ( PN * PN ) / Min( MRS ,( PN + CRS ) ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( ( MUC / MUC ) * MUC ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + ( Max( ( DS + RRSe ),RRSe ) / ( RCSe * CS ) ) ) + Max( ( MUM + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9079229122055674, "obj2": 0.044410431371186214}, {"determining": "( ( ( RRS - FirstVNF_RAM_Server ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + Max( DS,Max( ( MLU + Max( RCSe,MLU ) ),MUM ) ) ) ) )", "obj1": 0.7066381156316917, "obj2": 0.147928672824092}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( Const + MRS ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + ( RCSe * MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.16210642146569892}, {"determining": "( ( Max( DDR,CRS ) - ( ( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,MDR ) ) - ACS ) / ( FirstVNF_RAM * PN ) ) ) - ( ARS - DDR ) )", "choosing": "( Max( Min( ( DS * RMSe ) ,( RCSe + ( MUR + RRSe ) ) ),( MUC / ( RRSe / MUR ) ) ) + Max( ( MUM + DS ),( MUC + ( Max( Min( RMSe ,( CS / ( MUC / RMSe ) ) ),( MUC / Max( Max( MUC,MUM ),RMSe ) ) ) + RCSe ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1354657053659735}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM ) / Min( MRS ,( PN * ( MDR - ( AMS - DDR ) ) ) ) ) ,( ( FirstVNF_CPU - AMS ) * CRS ) ) ) - Max( Min( ( FirstVNF_RAM / MDR ) ,Min( ( MDR - CRS ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU - ( DS - MUM ) ) * ( Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.6723768736616702, "obj2": 0.1815762037015682}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - ( FirstVNF_Mem + Min( Const ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.15018998151383628}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14192032034278804}, {"determining": "( ( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( Max( Const,ACS ) - MDR ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - Max( PN,( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( ( MUC + Max( DS,MUC ) ) + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010899910515183924}, {"determining": "( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( ARS - AMS ) ) / ( DDR * FirstVNF_CPU ) ),( MDR / FirstVNF_RAM_Server ) ) ) ) ) - Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( MUM,Max( RCSe,MUC ) ),RMSe ) + Max( Max( Max( Max( ( MUM / ( DS - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.8758029978586723, "obj2": 0.05981769338894146}, {"determining": "( ( FirstVNF_Mem * PN ) - ( FirstVNF_CPU + ( ( ( CRS + FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( PN - PN ) / ( Min( ( ARS - ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Max( DDR,CRS ) ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( Max( RRSe,CS ) - RMSe ) + CS ) + Min( ( Max( RMSe,( ( ( ( MUR / RCSe ) + Min( MLU ,MUC ) ) + RRSe ) - CS ) ) + MUC ) ,Max( Min( ( DS + ( MLU + CS ) ) ,MUR ),( MLU * ( ( MUC * MUR ) / CS ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( ( PN * PN ),MRS ) + FirstVNF_CPU_Server ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Min( ( ( RCSe * MLU ) * MUM ) ,Min( RMSe ,Max( MLU,RCSe ) ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.721627408993576, "obj2": 0.13961263199391055}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( MDR - FirstVNF_CPU_Server ) ) / Min( MRS ,( RRS - MDR ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( MLU,( DS + ( MLU - ( Min( ( RRSe / ( CS / DS ) ) ,DS ) * DS ) ) ) ) + ( CS - MUC ) )", "obj1": 0.9122055674518201, "obj2": 0.04141692475794194}, {"determining": "( ( ( Min( ACS ,MRS ) / ( PN + PN ) ) - Max( DDR,( CRS * FirstVNF_CPU ) ) ) - Min( Max( ( ( ( Min( ( CRS * FirstVNF_Mem_Server ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( Const + MDR ) ) ,( ACS / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),( ( MLU / Min( ( CS + ( ( CS / RCSe ) * RRSe ) ) ,( MUR - Max( CS,MUC ) ) ) ) + MUR ) ) + ( ( DS + MUM ) + ( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUR ) / ( RMSe * CS ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.00766784038951006}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( ACS ,MRS ) ) ,( ARS * CRS ) ) ) - Max( ( PN * ( ( ( PN * PN ) / Min( FirstVNF_CPU_Server ,MDR ) ) - Max( DDR,CRS ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) + MRS ),Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( MUM,Max( RMSe,Max( DS,RCSe ) ) ) + RMSe ) + ( MUM - Min( ( CS + MUC ) ,RRSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.15989686608754536}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09421316793488489}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( MDR - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.7987152034261242, "obj2": 0.09862744106099049}, {"determining": "( ( ( ( FirstVNF_CPU + Max( ARS,MDR ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ),Max( ( ( PN * ( FirstVNF_CPU - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC + ( Max( RMSe,( MLU + RMSe ) ) + ( ( Max( DS,CS ) + Max( ( DS + RMSe ),MUM ) ) - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( DS - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) + Max( Max( MUM,CS ),RMSe ) )", "obj1": 0.7109207708779444, "obj2": 0.144834617686554}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( AMS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( ( MUM - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14309575380610406}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( ( ARS + ( MRS - DDR ) ) - FirstVNF_CPU ) ) ,( ( ( MDR - FirstVNF_CPU_Server ) + ( ( DDR / PN ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( ( DS / ( MUM * ( RCSe - Min( ( Min( RRSe ,RMSe ) - MUM ) ,DS ) ) ) ) + Max( CS,Max( ( RCSe / ( ( RMSe * RCSe ) / DS ) ),CS ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06942143098189316}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / MLU ) ) ) ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.0198530329617039}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "Min( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ,Min( Max( ( ( ( Min( ( CRS * BR ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( Const + MDR ) ) ,( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),( ( MLU / Min( ( CS + ( ( CS / RCSe ) * RRSe ) ) ,( MUR - Max( CS,MUC ) ) ) ) + MUR ) ) + ( ( DS + MUM ) + ( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUR ) / ( RMSe * CS ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12485402229236077}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( CRS,PN ) ) ) ) ,Min( Max( CRS,PN ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RCSe + ( ( Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( RMSe,RCSe ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.6595289079229122, "obj2": 0.19191321904818692}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU - ( AMS - DDR ) ) ) ) ) + ( ( MDR - Min( FirstVNF_RAM_Server ,( Min( MDR ,PN ) + Max( ( Const * Const ),FirstVNF_Mem_Server ) ) ) ) + ( RRS - ( PN / Min( MRS ,( CRS - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( ( MLU + RMSe ) - RMSe ) + Max( Min( CS ,CS ),( ( ( RRSe - CS ) + ( MUR / ( Max( MUM,( MUM - DS ) ) - MUM ) ) ) - Min( DS ,( ( ( RRSe * MUR ) - CS ) - Min( RRSe ,MUR ) ) ) ) ) )", "obj1": 0.9207708779443254, "obj2": 0.038412513909145976}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - Max( DS,RCSe ) ) ) ),( Max( Max( MUM,CS ),RMSe ) + RCSe ) ) )", "obj1": 0.8886509635974305, "obj2": 0.053528672270873184}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + DS ) ) + MUR ) + RMSe ) - ( ( ( ( MUM / ( MLU + DS ) ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.6873661670235546, "obj2": 0.16210642146569892}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( ( MUM + MUM ) + MUR ),Min( ( Max( MUR,( RRSe * MUR ) ) * MUC ) ,CS ) ) + Max( RMSe,RCSe ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( PN * PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Max( ( ( ( ARS + FirstVNF_RAM ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),Min( FirstVNF_CPU_Server ,Const ) ) / Const ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( ( ( CS - ( ( ( RCSe * MLU ) - MLU ) / ( RMSe / MUM ) ) ) + ( RMSe / ( CS / ( RCSe / RMSe ) ) ) ) - CS ) ) )", "obj1": 0.9036402569593148, "obj2": 0.04653889767041713}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,DDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( FirstVNF_RAM / RRS ) ) / ( ( FirstVNF_RAM_Server * BR ) - FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server * Min( MDR ,( FirstVNF_RAM / RRS ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( RRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * RMSe ) + ( ( MUM - ( DS - ( MUC / ( ( MUR - MUC ) - Min( RRSe ,MUC ) ) ) ) ) + Max( DS,MLU ) ) )", "obj1": 0.8329764453961456, "obj2": 0.08121854122205163}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( DS / ( RMSe / RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( Max( Const,ACS ) - MDR ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - Max( PN,( RRS - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( Max( MUM,RMSe ),Min( ( MUR - ( DS - MUC ) ) ,MUC ) ) + Max( ( ( MUC + Max( DS,MUC ) ) + DS ),( MUC + ( RCSe + ( ( RMSe / ( CS / ( RCSe / RMSe ) ) ) - ( MUC / Max( Max( DS,DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010899910515183924}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( PN + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - Max( DS,RCSe ) ) ) ),( Max( Max( MUM,CS ),RMSe ) + RCSe ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / CS ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUM - MLU ) ) ),( MUR - ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.1460218993974171}, {"determining": "( ( FirstVNF_CPU - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( AMS ,AMS ) ) ) )", "choosing": "Min( ( ( ( ( RRSe - ( ( MUR * MLU ) * MUM ) ) + MUM ) + MLU ) / ( Max( MLU,Max( CS,RMSe ) ) / MUM ) ) ,( Min( MLU ,Min( ( MUM + MLU ) ,DS ) ) / MLU ) )", "obj1": 0.9271948608137045, "obj2": 0.03392201187341152}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( ( ( ( ( ARS * PN ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + Max( ( MDR - ( AMS - DDR ) ),Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU_Server + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) / FirstVNF_Mem ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( RMSe / CS ) - Max( MUC,RMSe ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ,( RMSe + ( ( Max( ( ( MUR - MUR ) + ( ( MLU + RCSe ) * Max( MUC,DS ) ) ),( Min( MLU ,MLU ) - ( ( RRSe / RMSe ) / ( MLU - MUM ) ) ) ) + RMSe ) * DS ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03039960044054104}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( RRS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - PN ) ) - Min( ( DDR / FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RRSe ) ) ),DS ) + CS ) + Min( Max( RMSe,Min( RMSe ,MLU ) ) ,MUC ) )", "obj1": 0.728051391862955, "obj2": 0.1369773517674569}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( MRS * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ,( ( PN + ACS ) + Max( CRS,PN ) ) ) ) ,( Min( RRS ,FirstVNF_CPU ) - Min( ( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,Const ) ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS + RRSe ) - CS ) + ( RMSe * RCSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11458204086383213}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( MUM + ( Min( ( ( MUM - MUC ) / MLU ) ,( MUM / DS ) ) + RMSe ) ) - Max( CS,RMSe ) ),( ( MUR - CS ) / ( Min( ( CS - MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( ( RCSe * RCSe ) - CS ) ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.03936676971681004}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - MDR ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Min( ( ( RCSe * MLU ) * MUM ) ,Min( RMSe ,Max( MLU,RCSe ) ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06803127990788732}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - ( Min( PN ,( PN + FirstVNF_CPU ) ) / PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( Min( FirstVNF_Mem_Server ,DDR ) * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) + Max( ( MUM + DS ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( ( ( CS - MUM ) / ( MUM / CS ) ) / RMSe ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03039960044054104}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( MUM * Max( RCSe,Min( RMSe ,DS ) ) ) ) + Max( CS,Max( ( RCSe / ( ( RMSe * RCSe ) / DS ) ),CS ) ) )", "obj1": 0.9528907922912205, "obj2": 0.020638967628642466}, {"determining": "( ( FirstVNF_Mem * PN ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU ) + ( ( PN - PN ) / ( AMS - MRS ) ) ) ) )", "choosing": "( ( ( Max( CS,CS ) - RMSe ) + CS ) + Min( ( Max( RMSe,( ( ( RCSe + MUM ) + RRSe ) - CS ) ) + MUC ) ,Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( Min( MUC ,( Min( MLU ,MUC ) / ( DS - DS ) ) ) / CS ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,RRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( RMSe / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10065087610744612}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( PN * PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( MUR * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10531649126383287}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9400428265524625, "obj2": 0.02880305434924221}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( FirstVNF_CPU_Server ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( Min( ( ( RMSe / MLU ) / RCSe ) ,CS ),( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),RCSe ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09648549521326066}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( ( PN * PN ),MRS ) + FirstVNF_CPU_Server ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Min( ( ( RCSe * MLU ) * MUM ) ,Min( RMSe ,Max( MLU,RCSe ) ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13325379245776026}, {"determining": "( ( AMS - ARS ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server - MDR ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( MUR + Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + ( DS * RCSe ) ) ),DS ) ) + MUR ) - CS ) + ( CS + ( CS / ( ( RCSe / MLU ) - DS ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.03298580510425135}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.1515041041512532}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) / Max( DDR,CRS ) ) - Min( Max( ( ( Max( ( PN * PN ),MRS ) + FirstVNF_CPU_Server ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( MDR - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( MUM - ( Min( DS ,RRSe ) / ( Min( DS ,MUC ) / ( RRSe + MLU ) ) ) ) + CS ) + Max( ( DS + CS ),( ( ( Min( DS ,RRSe ) - RMSe ) + ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUC,RCSe ) + Max( MUM,DS ) ) ) ) - MLU ) ) )", "obj1": 0.734475374732334, "obj2": 0.13325379245776026}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,Max( ARS,CRS ) ) ) - Max( Min( Min( ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ,Min( ( ( PN / Min( RRS ,FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server + Max( DDR,Min( ( BR * AMS ) ,FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( ( MUM / CS ) + RMSe ) + ( Min( ( MLU + ( MUM - MLU ) ) ,RRSe ) - ( Min( MUC ,( MLU - ( DS / MLU ) ) ) + Min( Min( MUC ,Max( MUC,MUC ) ) ,RCSe ) ) ) )", "obj1": 0.6916488222698073, "obj2": 0.15989686608754536}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( PN * PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10531649126383287}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( FirstVNF_CPU_Server ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM - ( Min( DS ,RRSe ) / ( Min( DS ,MUC ) / ( RRSe + MLU ) ) ) ) + CS ) + Max( ( DS + CS ),( ( MLU + ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ) ) - CS ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09648549521326066}, {"determining": "( ( ( FirstVNF_Mem_Server / PN ) / Min( ( Max( FirstVNF_CPU,MRS ) * ACS ) ,( CRS / BR ) ) ) - ( ( DDR - ACS ) - CRS ) )", "choosing": "( ( ( ( MUM + MUR ) * Max( RRSe,( CS / MUC ) ) ) - CS ) + Min( RCSe ,( ( ( RCSe + DS ) / ( ( CS - Max( ( DS - MLU ),MUC ) ) * RCSe ) ) * MUM ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008758142055655916}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) + ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( AMS / RRS ) - Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - ( FirstVNF_RAM_Server - PN ) ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - Max( MUR,MLU ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( ( Min( DS ,MUR ) - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.9057815845824411, "obj2": 0.04581617811233269}], "42": [{"determining": "( ( ( DDR / DDR ) * ( AMS * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( Max( DDR,MRS ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( ( MUR * RRSe ) / ( RRSe / RRSe ) ) ) - Max( ( RRSe - ( MUM / CS ) ),MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( DDR / CRS ) ) ) ,Max( Max( MDR,FirstVNF_CPU ),( MRS + FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( ( ( PN * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) / ( MRS - ACS ) ) ,( ARS * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( RRSe / Min( RCSe ,CS ) ) / ( RMSe * RMSe ) ) * ( Min( MLU ,MUR ) - ( RCSe / MUR ) ) ) + RMSe ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,MUC ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + DS ) ) + MUR ) + RMSe ) - MUM ) * ( Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18064444597178667}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( MUM,CS ) + RMSe ) + ( MUM - Min( ( MLU + ( MUM - MLU ) ) ,RRSe ) ) )", "obj1": 0.6809421841541756, "obj2": 0.16752274947459944}, {"determining": "( ( ( PN * PN ) / Min( MRS ,BR ) ) - Max( ( RRS - AMS ),( FirstVNF_RAM + AMS ) ) )", "choosing": "( Min( RCSe ,Max( MUM,CS ) ) + Max( ( Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Min( MUC ,MUM ) ) ) ),( CS / MUR ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( Max( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / MDR ) ) ,RRS ),( RRS / ( ACS * FirstVNF_CPU_Server ) ) ) - ( ( PN * PN ) / Min( ( Max( PN,PN ) / Min( RRS ,ACS ) ) ,( Max( FirstVNF_CPU,MDR ) * CRS ) ) ) )", "choosing": "Min( Min( ( ( ( Max( RCSe,CS ) * RRSe ) + MUM ) + MLU ) ,RCSe ) ,( MLU / Min( MLU ,( Max( CS,DS ) - MUC ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.2020732985962764}, {"determining": "( ( ( ( PN * PN ) / Min( ARS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) * MRS ),( ( ( ( FirstVNF_Mem * CRS ) + FirstVNF_RAM ) - CRS ) - ( AMS - ( ( RRS * ( AMS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,Min( FirstVNF_Mem ,( ( MDR / RRS ) * PN ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( ( ( ( ( RRSe - MUC ) * ( MUM / ( RMSe * MUR ) ) ) * RCSe ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / ( RRSe + MLU ) ) ) ) + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07590711405220167}, {"determining": "( ( ( ( Min( ( PN * PN ) ,Min( ACS ,MRS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM,( FirstVNF_CPU + RRS ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( Min( MUM ,MUC ) - ( ( Max( RRSe,( MLU + RCSe ) ) * Min( Min( ( MUM * DS ) ,( RCSe * RRSe ) ) ,RMSe ) ) * RMSe ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ),( ( MUM - MLU ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8372591006423983, "obj2": 0.07905496848855195}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ( ( AMS - MDR ) + ( Const + ARS ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - MDR ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( RRSe * Max( MUC,MLU ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - RCSe ) / ( Min( Min( CS ,MLU ) ,RCSe ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09406830416485558}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Min( ( ARS * ( FirstVNF_RAM_Server - MDR ) ) ,( ( Min( MRS ,MRS ) / ( PN * Const ) ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,Max( BR,FirstVNF_Mem ) ) ,Min( Min( DDR ,DDR ) ,Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_Mem * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( ( DS - MUC ) + ( MUM - ( MUM / MUR ) ) ) - ( Max( MLU,CS ) + DS ) ) + MUR ) + RMSe ) - ( ( ( ( MUM / ( MLU + MLU ) ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) * ( Min( CS ,( MLU - ( Max( MUM,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / Max( MLU,( ( RRSe + ( ( RMSe * CS ) * ( MLU * RRSe ) ) ) * Max( MUC,Min( ( DS * RCSe ) ,( DS * RCSe ) ) ) ) ) ) ) )", "obj1": 0.6916488222698073, "obj2": 0.1593858546003795}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( PN + ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / ( MLU / MUR ) ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010858501923279917}, {"determining": "( ( ( PN * PN ) / Min( Const ,( ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( RCSe / MLU ) * RCSe ) ) ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.17391131816939562}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( Max( ACS,MRS ) + FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server * PN ) + ( Min( ( PN * PN ) ,Min( MRS ,( FirstVNF_CPU - RRS ) ) ) + ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( MUR + ( ( ( CS - Max( MLU,RMSe ) ) - Min( DS ,RCSe ) ) * DS ) ) / DS ) + CS ) * ( ( RMSe + Min( CS ,MLU ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9678800856531049, "obj2": 0.014085520244521277}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - ( MRS / Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - ( ( MDR * MDR ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( RMSe * MUR ) - ( Min( ( MUR / ( CS + DS ) ) ,MLU ) / ( MLU / DS ) ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17316280315061913}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( ( PN * PN ),MRS ) + FirstVNF_CPU_Server ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Min( ( ( RCSe * MLU ) * MUM ) ,Min( RMSe ,Max( MLU,RCSe ) ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.721627408993576, "obj2": 0.13961263199391055}, {"determining": "( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( ARS - AMS ) ) / ( DDR * FirstVNF_CPU ) ),( MDR / FirstVNF_RAM_Server ) ) ) ) ) - Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( MUM,Max( RCSe,MUC ) ),RMSe ) + Max( Max( Max( Max( ( MUM / ( DS - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.8758029978586723, "obj2": 0.05981769338894146}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,BR ) ) - ( FirstVNF_RAM_Server + BR ) ) * ( Min( ( MDR - ARS ) ,( FirstVNF_RAM / RRS ) ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( MUM - CS ) / ( Min( ( ( MUC + RCSe ) - ( MUC + MUR ) ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ),( MUC / DS ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( RRS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - PN ) ) - Min( ( DDR / FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RRSe ) ) ),DS ) + CS ) + Min( Max( RMSe,Min( RMSe ,MLU ) ) ,MUC ) )", "obj1": 0.728051391862955, "obj2": 0.1369773517674569}, {"determining": "( ( ( Min( ACS ,MRS ) / ( PN + PN ) ) - Max( DDR,( CRS * FirstVNF_CPU ) ) ) - Min( Max( ( ( ( Min( ( CRS * FirstVNF_Mem_Server ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( Const + MDR ) ) ,( ACS / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),( ( MLU / Min( ( CS + ( ( CS / RCSe ) * RRSe ) ) ,( MUR - Max( CS,MUC ) ) ) ) + MUR ) ) + ( ( DS + MUM ) + ( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUR ) / ( RMSe * CS ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.00766784038951006}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ACS ) ) ) ) + Max( PN,( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUM - MLU ),RMSe ) + Max( ( MUC + ( ( DS - MUC ) + ( MUM - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9507494646680942, "obj2": 0.023171302956891005}, {"determining": "( ( ( PN * PN ) / Min( ( Min( MRS ,ACS ) - ( PN * PN ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( ARS - Max( DDR,ARS ) ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( ( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ) * Max( MUM,RMSe ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9400428265524625, "obj2": 0.02880305434924221}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( CRS + ( RRS * RRS ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( MDR - FirstVNF_CPU_Server ),( ( PN * PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( Max( BR,Min( ACS ,BR ) ) ,BR ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) + Max( ( ( Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) + MLU ) - CS ),( MUM + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1153020038080135}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,( MUM / CS ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013922933418190734}, {"determining": "( ( ( FirstVNF_Mem_Server / PN ) / Min( ( Max( FirstVNF_CPU,MRS ) * ACS ) ,( CRS / BR ) ) ) - ( ( DDR - ACS ) - CRS ) )", "choosing": "( ( ( ( MUM + MUR ) * Max( RRSe,( CS / MUC ) ) ) - CS ) + Min( RCSe ,( ( ( RCSe + DS ) / ( ( CS - Max( ( DS - MLU ),MUC ) ) * RCSe ) ) * MUM ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008758142055655916}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( RRS - FirstVNF_RAM_Server ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + Max( DS,Max( ( MLU + Max( RCSe,MLU ) ),MUM ) ) ) ) )", "obj1": 0.7066381156316917, "obj2": 0.147928672824092}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + DS ) ) + MUR ) + RMSe ) - ( ( ( ( MUM / ( MLU + DS ) ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.6873661670235546, "obj2": 0.16210642146569892}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MDR ,ACS ) ) - ( PN * PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / ( CS * RRSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( Min( ( ( Min( Min( Min( ( ACS * FirstVNF_RAM ) ,Max( AMS,MDR ) ) ,ACS ) ,MRS ) + ( BR - FirstVNF_RAM ) ) / PN ) ,Min( MDR ,( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) - Max( Min( Min( Max( BR,AMS ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,Max( CRS,DDR ) ) ) ,Min( Min( FirstVNF_CPU ,MDR ) ,( CRS - MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / MUC ) / MUR ) + Max( ( RRSe + DS ),( ( MLU * MUM ) - Max( ( ( MUC * ( DS * Max( RMSe,MUC ) ) ) * ( MUM * MUC ) ),MUM ) ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,RRS ) ) - ( FirstVNF_CPU + ( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / MDR ) ) ,RRS ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Max( RCSe,CS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( RMSe / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05327189168993699}, {"determining": "( ( Max( DDR,CRS ) - ( ( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,MDR ) ) - ACS ) / ( FirstVNF_RAM * PN ) ) ) - ( ARS - DDR ) )", "choosing": "( Max( Min( ( DS * RMSe ) ,( RCSe + ( MUR + RRSe ) ) ),( MUC / ( RRSe / MUR ) ) ) + Max( ( MUM + DS ),( MUC + ( Max( Min( RMSe ,( CS / ( MUC / RMSe ) ) ),( MUC / Max( Max( MUC,MUM ),RMSe ) ) ) + RCSe ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1354657053659735}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( MDR - FirstVNF_CPU_Server ) ) / Min( MRS ,( RRS - MDR ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( MLU,( DS + ( MLU - ( Min( ( RRSe / ( CS / DS ) ) ,DS ) * DS ) ) ) ) + ( CS - MUC ) )", "obj1": 0.9122055674518201, "obj2": 0.04141692475794194}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - ( FirstVNF_Mem + Min( Const ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.15018998151383628}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - PN ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / MUM ) ) - Max( DS,RCSe ) ) ) ),( Max( Max( MUM,CS ),RMSe ) + RCSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10528582914159441}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,RRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( PN * PN ) ) - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MLU / MUR ) / ( Min( Min( CS ,MLU ) ,( RMSe / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10286305610423752}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( Min( Min( ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) * RRS ) ,Max( ARS,FirstVNF_CPU ) ) ,Max( CRS,ACS ) ) + ( ( PN + PN ) / ( ( Max( DDR,FirstVNF_RAM ) + ( AMS + ( AMS - RRS ) ) ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( Max( RRSe,CS ) - RMSe ) + CS ) + Min( ( Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - Min( Min( RCSe ,RRSe ) ,( ( RRSe / RCSe ) * ( DS - MUC ) ) ) ) ) + MUC ) ,Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUC * MUR ) / CS ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( Max( FirstVNF_Mem,PN ) - ( ( ( ( Max( AMS,RRS ) + ( FirstVNF_Mem_Server - MRS ) ) * ( ( RRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * FirstVNF_RAM ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ARS ) ) )", "choosing": "( Max( RRSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( Max( RMSe,MUC ) - Min( DS ,RCSe ) ) ) ),( Max( ( Min( DS ,Max( Max( RRSe,RMSe ),Min( MUM ,RCSe ) ) ) * Max( ( ( RCSe / RCSe ) + MLU ),DS ) ),( ( ( RRSe * ( RCSe / MUR ) ) * MUR ) - Min( ( MUR - MUC ) ,( MUC + ( CS - DS ) ) ) ) ) + RCSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10850388360002598}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( PN * PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10642258126222857}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( AMS / RRS ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( ( RMSe * ( MUC - RRSe ) ) * ( MUM * ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06298967448408534}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * ( ( FirstVNF_CPU / PN ) - Max( DDR,CRS ) ) ) / Min( FirstVNF_RAM ,ACS ) ) ,( ARS * FirstVNF_Mem ) ) ) - Max( Min( Min( Max( ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + ACS ) ),FirstVNF_Mem ) ,Min( ( ARS * ( Max( MRS,ACS ) - MDR ) ) ,( ( ARS + PN ) + Min( ( ARS * PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.7601713062098501, "obj2": 0.11962834580173726}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) / ( ( ( ( PN * ACS ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( MRS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) ) - ( ( ( AMS / RRS ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / CS ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( MUR + DS ) / RRSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUC,MUR ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06173517769859165}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ),( MUR - ( MUM + DS ) ) ) ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06611935127279617}, {"determining": "( ( ( ( FirstVNF_CPU + Max( ARS,MDR ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ),Max( ( ( PN * ( FirstVNF_CPU - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC + ( Max( RMSe,( MLU + RMSe ) ) + ( ( Max( DS,CS ) + Max( ( DS + RMSe ),MUM ) ) - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( DS - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) + Max( Max( MUM,CS ),RMSe ) )", "obj1": 0.7109207708779444, "obj2": 0.144834617686554}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( AMS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( ( MUM - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14309575380610406}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( ( ARS + ( MRS - DDR ) ) - FirstVNF_CPU ) ) ,( ( ( MDR - FirstVNF_CPU_Server ) + ( ( DDR / PN ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( ( DS / ( MUM * ( RCSe - Min( ( Min( RRSe ,RMSe ) - MUM ) ,DS ) ) ) ) + Max( CS,Max( ( RCSe / ( ( RMSe * RCSe ) / DS ) ),CS ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06942143098189316}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( Const + MRS ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,( ( FirstVNF_RAM_Server * AMS ) / FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + ( RCSe * MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.16210642146569892}, {"determining": "( Min( ( ( MDR - ( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) - AMS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - MRS ) ) - Max( DDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( FirstVNF_RAM + FirstVNF_RAM ) ) + DDR ) ) ) ) ,FirstVNF_Mem ) - ( ( ( ( AMS + ( FirstVNF_Mem_Server / ACS ) ) * PN ) * FirstVNF_RAM ) * DDR ) )", "choosing": "( ( MUR - DS ) + Max( ( Min( ( ( ( RRSe - Min( MUC ,RRSe ) ) * ( MUM - ( RMSe * MUR ) ) ) - RCSe ) ,RRSe ) + Max( ( ( DS - MUM ) * ( Min( MUR ,MLU ) * MUR ) ),DS ) ),MLU ) )", "obj1": 0.8179871520342612, "obj2": 0.08987097516416014}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( MRS * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ,( ( PN + ACS ) + Max( CRS,PN ) ) ) ) ,( Min( RRS ,FirstVNF_CPU ) - Min( ( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,Const ) ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS + RRSe ) - CS ) + ( RMSe * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.12406192703022473}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,( FirstVNF_CPU_Server + ( ( ACS / BR ) - Const ) ) ) ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ACS * FirstVNF_RAM ) ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ( Const / Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RRSe / RMSe ) ) - ( RMSe / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( MUM + RCSe ) + ( ( ( Max( CS,MUR ) - RCSe ) + CS ) + DS ) ) + RCSe ) ) )", "obj1": 0.7773019271948608, "obj2": 0.10966111758120582}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( PN + Max( CRS,PN ) ) ) ) ,Min( Max( CRS,PN ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RCSe + ( ( Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( RMSe,MUC ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.6595289079229122, "obj2": 0.19191321904818692}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( MUM + ( Min( ( ( MUM - MUC ) / MLU ) ,( MUM / DS ) ) + RMSe ) ) - Max( CS,RMSe ) ),( ( MUR - CS ) / ( Min( ( CS - MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( ( RCSe * RCSe ) - CS ) ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.03936676971681004}, {"determining": "( ( AMS - ( MDR / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( MUR + ( ( ( CS - Max( MLU,RMSe ) ) - Min( DS ,RCSe ) ) * DS ) ) / DS ) + CS ) * ( ( RMSe + Min( CS ,MLU ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04967005950229464}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( ( MLU / Min( CS ,Min( RRSe ,RCSe ) ) ) - RMSe ) ) ) ) + Max( ( DS + MUM ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUR ) / ( RMSe * CS ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( CRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( ( Min( RRSe ,RCSe ) + MUM ) + MUR ),Min( ( Max( MUR,( RRSe * MUR ) ) * MUC ) ,CS ) ) + Max( RMSe,RCSe ) )", "obj1": 0.8329764453961456, "obj2": 0.08113520823960021}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( ( MUM + MUM ) + MUR ),Min( ( Max( MUR,( RRSe * MUR ) ) * MUC ) ,CS ) ) + Max( RMSe,RCSe ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / CRS ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( MUM * Max( RCSe,Min( RMSe ,DS ) ) ) ) + Max( CS,Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) ) ),CS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.030392100880607}, {"determining": "( ( PN / MRS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) + PN ) + ( ( RRS + FirstVNF_Mem_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Min( ( RMSe - ( RMSe + RMSe ) ) ,Min( RMSe ,MUM ) ) + MUR ) )", "obj1": 0.69593147751606, "obj2": 0.15559625717894493}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( ( FirstVNF_CPU + AMS ) - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) - Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( ( ( RCSe * MLU ) * MUM ) ,Min( RMSe ,Max( MLU,RCSe ) ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - ( CS - ( CS - MUC ) ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08674063671210602}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "( ( MUC * MUR ) + ( MLU + ( MUR / Max( MUC,MUM ) ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11227697046999481}, {"determining": "( ( ( ( ( ( PN * ARS ) / ( MRS + DDR ) ) - Max( Min( PN ,( PN + FirstVNF_CPU ) ),PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( ( FirstVNF_RAM * MRS ) - RRS ) + FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - Max( PN,( RRS - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Min( ( MUR / ( CS * ( MUR - ( MUM + DS ) ) ) ) ,Min( MUC ,Min( MUR ,( RCSe - MUC ) ) ) ) - CS ) + Min( ( ( ( RCSe + DS ) / ( ( CS / DS ) * RCSe ) ) * MUM ) ,RCSe ) )", "obj1": 0.9314775160599572, "obj2": 0.032372286654598396}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( MUM * Max( RCSe,Min( RMSe ,DS ) ) ) ) + Max( CS,Max( ( RCSe / ( ( RMSe * RCSe ) / DS ) ),CS ) ) )", "obj1": 0.9528907922912205, "obj2": 0.020638967628642466}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - Const ) ) ) ) )", "choosing": "( ( Max( MUM,CS ) + RMSe ) + ( MUM - Min( ( MLU + MUC ) ,RRSe ) ) )", "obj1": 0.69593147751606, "obj2": 0.15559625717894493}, {"determining": "( ( FirstVNF_Mem * PN ) - ( FirstVNF_CPU + ( ( ( CRS + FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( PN - PN ) / ( Min( ( ARS - ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Max( DDR,CRS ) ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( Max( RRSe,CS ) - RMSe ) + CS ) + Min( ( Max( RMSe,( ( ( ( MUR / RCSe ) + Min( MLU ,MUC ) ) + RRSe ) - CS ) ) + MUC ) ,Max( Min( ( DS + ( MLU + CS ) ) ,MUR ),( MLU * ( ( MUC * MUR ) / CS ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( ( Max( ( ( PN * PN ) / ( Min( BR ,DDR ) * ( RRS - AMS ) ) ),Max( CRS,PN ) ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( ( Min( MDR ,ACS ) * ACS ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( MUM + RMSe ) ) + Max( ( MUC + ( RCSe + ( ( ( MUC / ( RMSe / CS ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( RRS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - PN ) ) - Min( ( ACS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Min( CS ,MLU ) + Max( ( DS + CS ),( ( MLU + ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ) ) - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14170820469041426}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),Min( ( MLU + RMSe ) ,Max( MUR,( MUR + CS ) ) ) ) + ( Max( MUC,Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),( MUR + ( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11247078875413813}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MDR ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( ( PN * PN ),MRS ) + FirstVNF_CPU_Server ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Min( ( ( RCSe * MLU ) * MUM ) ,Min( RMSe ,Max( MLU,RCSe ) ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13325379245776026}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7922912205567452, "obj2": 0.1018259530637773}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( ( PN * PN ),MRS ) + FirstVNF_CPU_Server ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( MUR ,( MUC - Max( MLU,RMSe ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + CS ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13325379245776026}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( ( CRS - MDR ) - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + MUC ) ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08674063671210602}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( FirstVNF_CPU_Server ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + Max( DS,Max( ( MLU + Max( RCSe,MLU ) ),MUM ) ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09752197465815782}, {"determining": "( ( Const / Const ) - Max( ( ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( BR - ARS ) + RRS ) ) * ACS ) + BR ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe / MUC ) * ( MLU / ( ( CS / Max( MUC,MUC ) ) / ( DS - CS ) ) ) ) + Max( Min( ( DS - RRSe ) ,Max( Max( ( ( ( RCSe * MUC ) / MUC ) - Max( RMSe,RMSe ) ),MUR ),RCSe ) ),( MUC - MLU ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08108217054900287}, {"determining": "( ( AMS - ( MDR / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( ( ( PN * PN ) / ( RRS * PN ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( ( MLU + ( MUR / Max( MUC,MUM ) ) ) + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9143468950749465, "obj2": 0.0407013873935894}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,RRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( RMSe / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10065087610744612}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) + ( MLU - MUM ) ) ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09978427989178448}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.0198530329617039}, {"determining": "( ( AMS - MRS ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.8993576017130621, "obj2": 0.047987886910262775}, {"determining": "( ( AMS - ( MDR / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04967005950229464}, {"determining": "( ( AMS - ( MDR / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9079229122055674, "obj2": 0.0444104313711862}, {"determining": "( ( AMS - ARS ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server - MDR ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( MUR + Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + ( DS * RCSe ) ) ),DS ) ) + MUR ) - CS ) + ( CS + ( CS / ( ( RCSe / MLU ) - DS ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.03298580510425135}, {"determining": "( ( AMS - MRS ) - ( ( FirstVNF_CPU + ( ( ARS - ( AMS - DDR ) ) + ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.8993576017130621, "obj2": 0.047987886910262775}], "43": [{"determining": "( ( ( DDR / DDR ) * ( AMS * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( Max( DDR,MRS ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( ( MUR * RRSe ) / ( RRSe / RRSe ) ) ) - Max( ( RRSe - ( MUM / CS ) ),MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - DDR ) - ( ( Const - FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) - Max( ( ( AMS - ( ( Min( ( BR - RRS ) ,RRS ) - ( FirstVNF_RAM / MRS ) ) - ( ( RRS * FirstVNF_CPU_Server ) / ( FirstVNF_CPU - Min( AMS ,MDR ) ) ) ) ) - ( ( ( Min( Min( MRS ,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU - BR ) ) / Min( FirstVNF_CPU_Server ,CRS ) ) - ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( DS * Min( MUC ,CS ) ) + Max( ( ( ( RMSe / RRSe ) / ( Max( Min( DS ,MLU ),( RRSe + RMSe ) ) + RRSe ) ) - MLU ),Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( DDR / CRS ) ) ) ,Max( Max( MDR,FirstVNF_CPU ),( MRS + FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( ( ( PN * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) / ( MRS - ACS ) ) ,( ARS * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( RRSe / Min( RCSe ,CS ) ) / ( RMSe * RMSe ) ) * ( Min( MLU ,MUR ) - ( RCSe / MUR ) ) ) + RMSe ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,MUC ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( MUM,CS ) + RMSe ) + ( MUM - Min( ( MLU + ( MUM - MLU ) ) ,RRSe ) ) )", "obj1": 0.6809421841541756, "obj2": 0.16752274947459944}, {"determining": "( ( ( PN * PN ) / Min( ( Min( MRS ,ACS ) - ( PN * PN ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( ARS - Max( DDR,ARS ) ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( ( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ) * Max( MUM,RMSe ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( Min( AMS ,( ARS - ( AMS - DDR ) ) ) - ( ( ( ( ( PN * PN ) / Max( ARS,ACS ) ) - Max( CRS,Const ) ) - ( FirstVNF_CPU + ( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / ARS ) ) ,RRS ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) ) ) ) ) - ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( Min( ( RCSe / MUR ) ,RRSe ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) + ( Max( RCSe,CS ) + ( ( ( MUM - RMSe ) / ( RMSe / Min( DS ,( ( MUC / RMSe ) / ( RCSe - CS ) ) ) ) ) * ( MUR - Max( MUC,DS ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03777825820073309}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - ( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ACS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,Max( DDR,CRS ) ) ) ,Min( ( CRS - MDR ) ,( Min( ( Const * FirstVNF_Mem_Server ) ,CRS ) * ( CRS + DDR ) ) ) ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + ( ( MUM + RCSe ) / ( ( RMSe + ( MUR - MUC ) ) - CS ) ) )", "obj1": 0.6552462526766595, "obj2": 0.19813503610525177}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( ( Min( ( PN * PN ) ,Min( ACS ,MRS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM,( FirstVNF_CPU + RRS ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( Min( MUM ,MUC ) - ( ( Max( RRSe,( MLU + RCSe ) ) * Min( Min( ( MUM * DS ) ,( RCSe * RRSe ) ) ,RMSe ) ) * RMSe ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ),( ( MUM - MLU ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8372591006423983, "obj2": 0.07905496848855195}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( ( ARS + ( MRS - DDR ) ) - FirstVNF_CPU ) ) ,( ( ( MDR - FirstVNF_CPU_Server ) + ( ( DDR / PN ) / ( RRS - FirstVNF_CPU ) ) ) + FirstVNF_CPU ) ) ) / ( MDR * ( AMS + ( AMS - RRS ) ) ) ) - ( PN * ( MRS - MRS ) ) )", "choosing": "( ( DS / ( MUM * ( RCSe - Min( ( Min( RRSe ,RMSe ) - MUM ) ,DS ) ) ) ) + Max( CS,Max( ( RCSe / ( ( RMSe * RCSe ) / DS ) ),CS ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06942143098189316}, {"determining": "( ( ( PN * CRS ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( FirstVNF_RAM ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( Max( CRS,MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( ( FirstVNF_CPU - MDR ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( MLU / ( ( ( RCSe - MUR ) - DS ) * Min( DS ,( DS + MUC ) ) ) ) + Min( Min( RCSe ,( RRSe - DS ) ) ,Min( Min( MUM ,Max( MLU,RCSe ) ) ,( ( MUR * RMSe ) * MUM ) ) ) ) + RMSe ) - MUM ) * ( ( MUR - MLU ) + Max( Max( RMSe,CS ),DS ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18064444597178667}, {"determining": "( ( ( PN * PN ) / Min( Const ,( ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( RCSe / MLU ) * RCSe ) ) ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.17391131816939562}, {"determining": "( ( AMS - ARS ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server - MDR ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( MUR + Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + ( DS * RCSe ) ) ),DS ) ) + MUR ) - CS ) + ( CS + ( CS / ( ( RCSe / MLU ) - DS ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.03298580510425135}, {"determining": "( ( AMS - MRS ) - ( ( FirstVNF_CPU + ( ( ARS / AMS ) + ( ( RRS - FirstVNF_CPU ) / Min( RRS ,PN ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Min( AMS ,FirstVNF_Mem_Server ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( DS / CS ),( ( MLU + ( ( ( MLU + RMSe ) - CS ) / Max( MUC,Max( MLU,CS ) ) ) ) - CS ) ) )", "obj1": 0.8993576017130621, "obj2": 0.04798788691026276}, {"determining": "( ( Max( ACS,MRS ) + FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server * PN ) + ( Min( ( PN * PN ) ,Min( MRS ,( FirstVNF_CPU - RRS ) ) ) + ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( MUR + ( ( ( CS - Max( MLU,RMSe ) ) - Min( DS ,RCSe ) ) * DS ) ) / DS ) + CS ) * ( ( RMSe + Min( CS ,MLU ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9678800856531049, "obj2": 0.014085520244521277}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - ( MRS / Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - ( ( MDR * MDR ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( RMSe * MUR ) - ( Min( ( MUR / ( CS + DS ) ) ,MLU ) / ( MLU / DS ) ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17316280315061913}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( Min( FirstVNF_CPU ,MDR ) * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( MDR / FirstVNF_RAM_Server ) ) ) ) ) - ( ( ( AMS / RRS ) - ( DDR + CRS ) ) - Min( ( ( ACS / MDR ) - ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( MUM / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( Max( ( MUM / ( MLU - RRSe ) ),RCSe ),( MUC - DS ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05309089249972605}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( ( PN * PN ),MRS ) + FirstVNF_CPU_Server ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - CRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Min( ( ( RCSe * MLU ) * MUM ) ,Min( RMSe ,Max( MLU,RCSe ) ) ) + Max( ( DS + CS ),( ( MLU + ( MUR / Max( MUC,MUM ) ) ) - CS ) ) )", "obj1": 0.721627408993576, "obj2": 0.13961263199391055}, {"determining": "( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - ( FirstVNF_Mem + Min( Const ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.15018998151383628}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( BR - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( ( FirstVNF_CPU / RRS ) + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ),( MUR - ( MUM + DS ) ) ) ),RMSe ) + Max( ( MUC * Max( MUR,Max( MLU,Max( MLU,Max( Min( MUR ,RMSe ),MUR ) ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( ( MUM - DS ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8629550321199143, "obj2": 0.0658801245786403}, {"determining": "( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( ARS - AMS ) ) / ( DDR * FirstVNF_CPU ) ),( MDR / FirstVNF_RAM_Server ) ) ) ) ) - Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( MUM,Max( RCSe,MUC ) ),RMSe ) + Max( Max( Max( Max( ( MUM / ( DS - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.8758029978586723, "obj2": 0.05981769338894146}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,BR ) ) - ( FirstVNF_RAM_Server + BR ) ) * ( Min( ( MDR - ARS ) ,( FirstVNF_RAM / RRS ) ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( MUM - CS ) / ( Min( ( ( MUC + RCSe ) - ( MUC + MUR ) ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ),( MUC / DS ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( ( ( ( ( ( CRS * FirstVNF_Mem_Server ) - FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( Const + MDR ) ) ) - Min( Max( ( ( ( Min( Max( RRS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - FirstVNF_CPU ) ) - Min( ( ACS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Min( CS ,MLU ) + ( ( DS + CS ) / ( ( MLU + ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,Min( RMSe ,RMSe ) ) + Max( MUC,RCSe ) ) ) ) - ( CS * RMSe ) ) ) )", "obj1": 0.728051391862955, "obj2": 0.1367874901064472}, {"determining": "( ( ( ( PN * PN ) / Min( ARS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) * MRS ),( ( ( ( FirstVNF_Mem * CRS ) + FirstVNF_RAM ) - CRS ) - ( AMS - ( ( RRS * ( AMS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,Min( FirstVNF_Mem ,( ( MDR / RRS ) * PN ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( ( ( ( ( RRSe - MUC ) * ( MUM / ( RMSe * MUR ) ) ) * RCSe ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / ( RRSe + MLU ) ) ) ) + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07590711405220167}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + DS ) ) + MUR ) + RMSe ) - MUM ) * ( Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18064444597178667}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( PN * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * ( ( Max( RMSe,CS ) / Min( MLU ,( MUM / CS ) ) ) / ( ( Min( MLU ,DS ) + MUM ) + ( MUM - MLU ) ) ) ) ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9486081370449678, "obj2": 0.022662554418957606}, {"determining": "( ( ( PN * PN ) / Min( MRS ,BR ) ) - Max( ( RRS - AMS ),( FirstVNF_RAM + AMS ) ) )", "choosing": "( Min( RCSe ,Max( MUM,CS ) ) + Max( ( Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Min( MUC ,MUM ) ) ) ),( CS / MUR ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( CRS + ( RRS * RRS ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( MDR - FirstVNF_CPU_Server ),( ( PN * PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( Max( BR,Min( ACS ,BR ) ) ,BR ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) + Max( ( ( Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) + MLU ) - CS ),( MUM + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1153020038080135}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( FirstVNF_CPU_Server ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + Max( DS,Max( ( MLU + Max( RCSe,MLU ) ),MUM ) ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09752197465815782}, {"determining": "( Min( ( ( Min( Min( Min( ( ACS * FirstVNF_RAM ) ,Max( AMS,MDR ) ) ,ACS ) ,MRS ) + ( BR - FirstVNF_RAM ) ) / PN ) ,Min( MDR ,( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) - Max( Min( Min( Max( BR,AMS ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,Max( CRS,DDR ) ) ) ,Min( Min( FirstVNF_CPU ,MDR ) ,( CRS - MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / MUC ) / MUR ) + Max( ( RRSe + DS ),( ( MLU * MUM ) - Max( ( ( MUC * ( DS * Max( RMSe,MUC ) ) ) * ( MUM * MUC ) ),MUM ) ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ),( MUR - ( MUM + DS ) ) ) ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) )", "obj1": 0.9057815845824411, "obj2": 0.04570426325240115}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( Max( DDR,MRS ) ,( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + MLU ),( MUM + RCSe ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05462477756769358}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( PN + Max( CRS,PN ) ) ) ) ,Min( Max( CRS,PN ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( RCSe + ( ( Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( RMSe,MUC ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUR * MUC ) / CS ) ) ) ) )", "obj1": 0.6595289079229122, "obj2": 0.19191321904818692}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( AMS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( ( MUM - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14309575380610406}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( MUM + ( Min( ( ( MUM - MUC ) / MLU ) ,( MUM / DS ) ) + RMSe ) ) - Max( CS,RMSe ) ),( ( MUR - CS ) / ( Min( ( CS - MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( ( RCSe * RCSe ) - CS ) ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.03936676971681004}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( ( ( ( ( RRSe - MUC ) * ( MUM - ( RMSe * MUR ) ) ) * RCSe ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.16210642146569892}, {"determining": "( ( ( Max( ( ( PN * PN ) / ( Min( BR ,DDR ) * ( RRS - AMS ) ) ),Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( RCSe / MUC ) ) + Max( ( MUC + ( RCSe + ( ( ( MUM / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( ( ( FirstVNF_Mem_Server / PN ) / Min( ( Max( FirstVNF_CPU,MRS ) * ACS ) ,( CRS / BR ) ) ) - ( ( DDR - ACS ) - CRS ) )", "choosing": "( ( ( ( MUM + MUR ) * Max( RRSe,( CS / MUC ) ) ) - CS ) + Min( RCSe ,( ( ( RCSe + DS ) / ( ( CS - Max( ( DS - MLU ),MUC ) ) * RCSe ) ) * MUM ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008758142055655916}, {"determining": "( ( ( PN / PN ) / Min( FirstVNF_Mem ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( Min( DDR ,( FirstVNF_CPU_Server - CRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( DS + CS ),Max( MUM,( CS + MUC ) ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( ( ( FirstVNF_CPU + Max( ARS,MDR ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ),Max( ( ( PN * ( FirstVNF_CPU - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC + ( Max( RMSe,( MLU + RMSe ) ) + ( ( Max( DS,CS ) + Max( ( DS + RMSe ),MUM ) ) - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( DS - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) + Max( Max( MUM,CS ),RMSe ) )", "obj1": 0.7109207708779444, "obj2": 0.144834617686554}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU ) + ( ( PN * PN ) / ACS ) ) ) ) + Max( ( DDR + FirstVNF_Mem ),AMS ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) + MUM ) + Max( ( MUC + ( ( RCSe - MUC ) + ( MUM - ( MLU / ( ( RMSe + DS ) + DS ) ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.974304068522484, "obj2": 0.012803632317812027}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / Max( FirstVNF_Mem_Server,( AMS / FirstVNF_CPU ) ) ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( DDR - ( ( RRS * PN ) / ( AMS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( ( MLU * DS ) / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + RRSe ) ) ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08556520324879}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10286243250867447}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_RAM ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( ( MUM + MUM ) + MUR ),Min( ( Max( MLU,( RRSe * MUR ) ) * MUC ) ,CS ) ) + Max( RMSe,RCSe ) )", "obj1": 0.8051391862955032, "obj2": 0.09583779832186247}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( FirstVNF_Mem * PN ) - ( FirstVNF_CPU + ( ( ( CRS + FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( PN - PN ) / ( Min( ( ARS - ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Max( DDR,CRS ) ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( Max( RRSe,CS ) - RMSe ) + CS ) + Min( ( Max( RMSe,( ( ( ( MUR / RCSe ) + Min( MLU ,MUC ) ) + RRSe ) - CS ) ) + MUC ) ,Max( Min( ( DS + ( MLU + CS ) ) ,MUR ),( MLU * ( ( MUC * MUR ) / CS ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( ( RRS - FirstVNF_RAM_Server ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( ARS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( FirstVNF_RAM_Server - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + Max( DS,Max( ( MLU + Max( RCSe,MLU ) ),MUM ) ) ) ) )", "obj1": 0.7066381156316917, "obj2": 0.147928672824092}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( AMS - DDR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - PN ) ) - Min( ( ACS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( MUR + CS ) + Max( ( DS + CS ),( ( MLU + ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ) ) - CS ) ) )", "obj1": 0.734475374732334, "obj2": 0.1332257444509246}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * ( ( FirstVNF_CPU / PN ) - Max( DDR,CRS ) ) ) / Min( FirstVNF_RAM ,ACS ) ) ,( ARS * FirstVNF_Mem ) ) ) - Max( Min( Min( Max( ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + ACS ) ),FirstVNF_Mem ) ,Min( ( ARS * ( Max( MRS,ACS ) - MDR ) ) ,( ( ARS + PN ) + Min( ( ARS * PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.7601713062098501, "obj2": 0.11962834580173726}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) / ( ( ( ( PN * ACS ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( MRS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) ) - ( ( ( AMS / RRS ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / CS ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( MUR + DS ) / RRSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUC,MUR ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06173517769859165}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) + ( MLU - MUM ) ) ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09961439666254895}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( MRS * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ,( ( PN + ACS ) + Max( CRS,PN ) ) ) ) ,( Min( RRS ,FirstVNF_CPU ) - Min( ( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,Const ) ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS + RRSe ) - CS ) + ( RMSe * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.12406192703022473}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( ( Min( ACS ,MRS ) / ( PN + PN ) ) - Max( DDR,( CRS * FirstVNF_CPU ) ) ) - Min( Max( ( ( ( Min( ( CRS * FirstVNF_Mem_Server ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( Const + MDR ) ) ,( ACS / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),( ( MLU / Min( ( CS + ( ( CS / RCSe ) * RRSe ) ) ,( MUR - Max( CS,MUC ) ) ) ) + MUR ) ) + ( ( DS + MUM ) + ( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUR ) / ( RMSe * CS ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.00766784038951006}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.0198530329617039}, {"determining": "( ( ( ( ( Max( AMS,( FirstVNF_CPU / BR ) ) / ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR * FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM - CRS ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( MUM * ( RCSe - Min( RMSe ,DS ) ) ) ) + Max( Min( Min( MLU ,CS ) ,MUM ),Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( MUC / ( CS / RMSe ) ) - ( MLU / MUR ) ) ) ),CS ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0018724135383203408}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + DS ) ) + MUR ) + RMSe ) - ( ( ( ( MUM / ( MLU + DS ) ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.6873661670235546, "obj2": 0.16210642146569892}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( ( ( AMS - PN ) - ( AMS * DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) / Max( FirstVNF_Mem_Server,DDR ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - ( Const / BR ) ) + ( ( FirstVNF_CPU_Server * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( Max( MLU,CS ),RMSe ) + Max( ( MUC + ( ( MLU * MUC ) - RCSe ) ),Max( Max( ( ( ( MLU - RRSe ) / ( RRSe * MUR ) ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( ( RMSe * ( MUC - RRSe ) ) * ( MUM * ( RRSe - MUR ) ) ) ) ) )", "obj1": 0.8822269807280514, "obj2": 0.056430347017412216}, {"determining": "( ( ( ( ( ( PN * BR ) / ( ( ( AMS - FirstVNF_RAM ) / FirstVNF_RAM ) / CRS ) ) - ( PN * PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( MDR / FirstVNF_RAM_Server ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( RRSe / ( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( ( Max( MLU,MUR ) + RMSe ) - CS ) ) ) ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) / CS ) ) )", "obj1": 0.8179871520342612, "obj2": 0.08964658036495575}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Min( ( ARS * ( FirstVNF_RAM_Server - MDR ) ) ,( ( Min( MRS ,MRS ) / ( PN * Const ) ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,Max( BR,FirstVNF_Mem ) ) ,Min( Min( DDR ,DDR ) ,Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_Mem * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( ( DS - MUC ) + ( MUM - ( MUM / MUR ) ) ) - ( Max( MLU,CS ) + DS ) ) + MUR ) + RMSe ) - ( ( ( ( MUM / ( MLU + MLU ) ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) * ( Min( CS ,( MLU - ( Max( MUM,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / Max( MLU,( ( RRSe + ( ( RMSe * CS ) * ( MLU * RRSe ) ) ) * Max( MUC,Min( ( DS * RCSe ) ,( DS * RCSe ) ) ) ) ) ) ) )", "obj1": 0.6916488222698073, "obj2": 0.1593858546003795}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,( FirstVNF_CPU_Server + ( ( ACS / BR ) - Const ) ) ) ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ACS * FirstVNF_RAM ) ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ( Const / Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RRSe / RMSe ) ) - ( RMSe / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( MUM + RCSe ) + ( ( ( Max( CS,MUR ) - RCSe ) + CS ) + DS ) ) + RCSe ) ) )", "obj1": 0.7773019271948608, "obj2": 0.10966111758120582}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / ( AMS - DDR ) ) ) ) ,RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUM ) ,Max( ( ( CS * CS ) - ( RRSe - ( MUC - RCSe ) ) ),RMSe ) )", "obj1": 0.6638115631691649, "obj2": 0.1898715206345871}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9400428265524625, "obj2": 0.02880305434924221}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( AMS - ( MDR / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( MUR + ( ( ( CS - Max( MLU,RMSe ) ) - Min( DS ,RCSe ) ) * DS ) ) / DS ) + CS ) * ( ( RMSe + Min( CS ,MLU ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04967005950229464}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / CRS ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( MUM * Max( RCSe,Min( RMSe ,DS ) ) ) ) + Max( CS,Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) ) ),CS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.030392100880607}, {"determining": "( ( PN / MRS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) + PN ) + ( ( RRS + FirstVNF_Mem_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Min( ( RMSe - ( RMSe + RMSe ) ) ,Min( RMSe ,MUM ) ) + MUR ) )", "obj1": 0.69593147751606, "obj2": 0.15559625717894493}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( MDR - FirstVNF_CPU_Server ) ) / Min( MRS ,( RRS - MDR ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( MLU,( DS + ( MLU - ( Min( ( RRSe / ( CS / DS ) ) ,DS ) * DS ) ) ) ) + ( CS - MUC ) )", "obj1": 0.9122055674518201, "obj2": 0.04141692475794194}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,( MUC - Max( MLU,RMSe ) ) ) ,RCSe ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14688169846448468}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,RRS ) ) - ( FirstVNF_CPU + ( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / MDR ) ) ,RRS ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - ( MUM + RCSe ) ) ) + ( Max( RCSe,CS ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( RMSe / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.9100642398286938, "obj2": 0.043849261978204865}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( ( Min( ( ( ( MRS * DDR ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) + MRS ) ,MRS ) - MDR ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - ACS ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( BR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( CS * ( MUC / MUC ) ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) + ( MLU - MUM ) ) ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( ( MLU / RCSe ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11404267704000755}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - ( ( ( ( ( FirstVNF_Mem_Server - MRS ) + Max( AMS,RRS ) ) * PN ) * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "( ( MUC * MUR ) + ( MLU + ( MUR / Max( MUC,MUM ) ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11227697046999481}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( MDR ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( CS ,MLU ) + Max( ( DS + CS ),( ( MLU + ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ) ) - CS ) ) )", "obj1": 0.6916488222698073, "obj2": 0.1593858546003795}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,( MUM / CS ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013922933418190734}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( MUR ,( MUC - MUR ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + CS ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13532866165199556}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - Const ) ) ) ) )", "choosing": "( ( Max( MUM,CS ) + RMSe ) + ( MUM - Min( ( MLU + MUC ) ,RRSe ) ) )", "obj1": 0.69593147751606, "obj2": 0.15559625717894493}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( Min( Min( ( Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) * RRS ) ,Max( ARS,FirstVNF_CPU ) ) ,Max( CRS,ACS ) ) + ( ( PN + PN ) / ( ( Max( DDR,FirstVNF_RAM ) + ( AMS + ( AMS - RRS ) ) ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( Max( RRSe,CS ) - RMSe ) + CS ) + Min( ( Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - Min( Min( RCSe ,RRSe ) ,( ( RRSe / RCSe ) * ( DS - MUC ) ) ) ) ) + MUC ) ,Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( MUC * MUR ) / CS ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - PN ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( CS / MUM ) ) - Max( DS,RCSe ) ) ) ),( Max( Max( MUM,CS ),RMSe ) + RCSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.1061807025038616}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( ( ( ( FirstVNF_Mem_Server * PN ) / Min( MRS ,ACS ) ) - Max( CRS,( AMS * FirstVNF_RAM ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( PN * ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( Max( AMS,BR ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * MLU ) + Max( ( MUC + ( ( ( DS - MUM ) / RMSe ) + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU + MUR ) ) ) ),( ( RRSe + ( MUM + RCSe ) ) + RCSe ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10765776924491}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,RRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( RMSe / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10065087610744612}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),Min( MUC ,Min( MUR ,( ( MLU / Min( CS ,Min( RRSe ,RCSe ) ) ) - RMSe ) ) ) ) + Max( ( DS + MUM ),( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUR ) / ( RMSe * CS ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( RRS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - PN ) ) - Min( ( ACS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Min( CS ,MLU ) + Max( ( DS + CS ),( ( MLU + ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ) ) - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14170820469041426}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_RAM_Server ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( MDR / FirstVNF_RAM_Server ) ) ) ) ) - Max( BR,( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( DS * ( ( Min( ( MUR + CS ) ,MUR ) / RRSe ) + ( ( CS - ( Max( RMSe,RCSe ) + Max( MUM,MLU ) ) ) / Min( RMSe ,DS ) ) ) ) ,MUR ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MUR,MUC ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.07997465469598682}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( MUM * Max( RCSe,Min( RMSe ,DS ) ) ) ) + Max( ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ),Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) ) ),CS ) ) )", "obj1": 0.9528907922912205, "obj2": 0.020638967628642466}, {"determining": "( Max( FirstVNF_Mem,PN ) - ( ( ( ( Max( AMS,RRS ) + ( FirstVNF_Mem_Server - MRS ) ) * ( ( RRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * FirstVNF_RAM ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ARS ) ) )", "choosing": "( Max( RRSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( Max( RMSe,MUC ) - Min( DS ,RCSe ) ) ) ),( Max( ( Min( DS ,Max( Max( RRSe,RMSe ),Min( MUM ,RCSe ) ) ) * Max( ( ( RCSe / RCSe ) + MLU ),DS ) ),( ( ( RRSe * ( RCSe / MUR ) ) * MUR ) - Min( ( MUR - MUC ) ,( MUC + ( CS - DS ) ) ) ) ) + RCSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10850388360002598}, {"determining": "( ( ( ( PN * PN ) / Min( ARS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( AMS - ( ( RRS * ( AMS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( ( ( ( ( RRSe - MUC ) * ( MUM - ( RMSe * MUR ) ) ) * RCSe ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07590711405220167}], "44": [{"determining": "( ( ( DDR / DDR ) * ( AMS * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( Max( DDR,MRS ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( ( MUR * RRSe ) / ( RRSe / RRSe ) ) ) - Max( ( RRSe - ( MUM / CS ) ),MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM - FirstVNF_CPU ) * PN ) / ACS ) ) ) ) + Max( ( DDR + FirstVNF_Mem ),AMS ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) + MUM ) + Max( ( MUC + ( ( RCSe - MUC ) + ( MUM - ( MLU / ( ( RMSe + DS ) + DS ) ) ) ) ),( MUC + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( DDR / CRS ) ) ) ,Max( Max( MDR,FirstVNF_CPU ),( MRS + FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( ( ( PN * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) / ( MRS - ACS ) ) ,( ARS * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( RRSe / Min( RCSe ,CS ) ) / ( RMSe * RMSe ) ) * ( Min( MLU ,MUR ) - ( RCSe / MUR ) ) ) + RMSe ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,MUC ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( PN * PN ) / Min( MRS ,BR ) ) - Max( ( RRS - AMS ),( FirstVNF_RAM + AMS ) ) )", "choosing": "( Min( RCSe ,Max( MUM,CS ) ) + Max( ( Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Min( MUC ,MUM ) ) ) ),( CS / MUR ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( AMS - ARS ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server - MDR ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( MUR + Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + ( DS * RCSe ) ) ),DS ) ) + MUR ) - CS ) + ( CS + ( CS / ( ( RCSe / MLU ) - DS ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.03298580510425135}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( Min( FirstVNF_CPU ,MDR ) * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( MDR / FirstVNF_RAM_Server ) ) ) ) ) - ( ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) - Min( ( ( ACS / MDR ) - ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( MUM / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( Max( ( MUM / ( MLU - RRSe ) ),RCSe ),( MUC - DS ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8565310492505354, "obj2": 0.0692287896074877}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,BR ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( CS * ( MUC / MUC ) ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) + ( MLU - MUM ) ) ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( ( MLU / RCSe ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18064444597178667}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ),( MUR - ( MUM + DS ) ) ) ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) )", "obj1": 0.9057815845824411, "obj2": 0.04570426325240115}, {"determining": "( ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( ( ARS + ( MRS - DDR ) ) - FirstVNF_CPU ) ) * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * ( ( Max( RMSe,CS ) / Min( MLU ,( MUM / CS ) ) ) / ( ( Min( MLU ,DS ) + MUM ) + ( MUM - MLU ) ) ) ) ) * ( ( RMSe - Min( MUM ,( ( RMSe * RCSe ) / DS ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.8993576017130621, "obj2": 0.047173874615453255}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / Max( FirstVNF_Mem_Server,( AMS / FirstVNF_CPU ) ) ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( DDR - ( ( RRS * PN ) / ( AMS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( ( MLU * DS ) / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + RRSe ) ) ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08556520324879}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - ( MRS / Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - ( ( MDR * MDR ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( RMSe * MUR ) - ( Min( ( MUR / ( CS + DS ) ) ,MLU ) / ( MLU / DS ) ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17316280315061913}, {"determining": "( Max( Max( MRS,ACS ),FirstVNF_RAM ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( RRSe / ( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( Max( MLU,RMSe ) - CS ) ) ) ) ) + Max( RCSe,( ( MLU * MUM ) - ( ( MUM + MUC ) / Max( RMSe,MUC ) ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09402219561814379}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( MUM + ( Min( ( ( MUM - MUC ) / MLU ) ,( MUM / DS ) ) + RMSe ) ) - Max( CS,RMSe ) ),( ( MUR - CS ) / ( Min( ( CS - MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( ( RCSe * RCSe ) - CS ) ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.03936676971681004}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( MRS * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ,( ( PN + ACS ) + Max( CRS,PN ) ) ) ) ,( Min( RRS ,FirstVNF_CPU ) - Min( ( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,Const ) ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS + RRSe ) - CS ) + ( RMSe * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.12406192703022473}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - ARS ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + CRS ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( ( Const / MDR ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * BR ) ) + ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ( ( PN * PN ) / ( MRS - ACS ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + Min( ( ( ( RMSe * MLU ) - MUM ) / ( ( MUC - CS ) / MUM ) ) ,Max( DS,RCSe ) ) ) ),( Max( RMSe,Max( MUM,CS ) ) + ( DS + RMSe ) ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10618070250386158}, {"determining": "( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - ( FirstVNF_Mem + Min( Const ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.15018998151383628}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,RRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( ( ( PN + AMS ) * PN ) / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( ( RCSe * RCSe ) - CS ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( RMSe / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.07688007373072432}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,BR ) ) - ( FirstVNF_RAM_Server + BR ) ) * ( Min( ( MDR - ARS ) ,( FirstVNF_RAM / RRS ) ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( MUM - CS ) / ( Min( ( ( MUC + RCSe ) - ( MUC + MUR ) ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ),( MUC / DS ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_RAM_Server ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( MDR / FirstVNF_RAM_Server ) ) ) ) ) - Max( BR,( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( DS * ( ( Min( ( MUR + CS ) ,MUR ) / RRSe ) + ( ( CS - ( Max( RMSe,RCSe ) + Max( MUM,MLU ) ) ) / Min( RMSe ,DS ) ) ) ) ,MUR ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MUR,MUC ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.07997465469598682}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( Max( AMS,Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Max( RRS,ACS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / ( RMSe * DS ) ) ) ) + CS ) - CS ),( MUM / RCSe ) ) + ( ( ( MUR + ( ( ( CS - Max( MLU,RMSe ) ) - Min( DS ,RCSe ) ) * DS ) ) / DS ) + CS ) )", "obj1": 0.683083511777302, "obj2": 0.1669287405304317}, {"determining": "( ( ( PN * CRS ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( FirstVNF_RAM ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( Max( CRS,MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( ( FirstVNF_CPU - MDR ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( MLU / ( ( ( RCSe - MUR ) - DS ) * Min( DS ,( DS + MUC ) ) ) ) + Min( Min( RCSe ,( RRSe - DS ) ) ,Min( Min( MUM ,Max( MLU,RCSe ) ) ,( ( MUR * RMSe ) * MUM ) ) ) ) + RMSe ) - MUM ) * ( ( MUR - MLU ) + Max( Max( RMSe,CS ),DS ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18064444597178667}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( ( PN * PN ) / Min( ( Min( MRS ,ACS ) - ( PN * PN ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( ARS - Max( DDR,ARS ) ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( ( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ) * Max( MUM,RMSe ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( CRS + ( RRS * RRS ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( MDR - FirstVNF_CPU_Server ),( ( PN * PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Min( Max( BR,Min( ACS ,BR ) ) ,BR ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) + Max( ( ( Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) + MLU ) - CS ),( MUM + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1153020038080135}, {"determining": "( ( Max( ( ( MRS / ARS ) - PN ),ACS ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN / ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Min( Max( MUR,RMSe ) ,( MUM * Max( ( MUM + ( RRSe + ( CS - DS ) ) ),( RMSe / ( MUM - Min( RCSe ,MUC ) ) ) ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( MUM / ( CS / RMSe ) ) - ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9657387580299786, "obj2": 0.015000517660122085}, {"determining": "( Min( ( ( Min( Min( Min( ( ACS * FirstVNF_RAM ) ,Max( AMS,MDR ) ) ,ACS ) ,MRS ) + ( BR - FirstVNF_RAM ) ) / PN ) ,Min( MDR ,( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) - Max( Min( Min( Max( BR,AMS ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,Max( CRS,DDR ) ) ) ,Min( Min( FirstVNF_CPU ,MDR ) ,( CRS - MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / MUC ) / MUR ) + Max( ( RRSe + DS ),( ( MLU * MUM ) - Max( ( ( MUC * ( DS * Max( RMSe,MUC ) ) ) * ( MUM * MUC ) ),MUM ) ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( Min( AMS ,( ARS - ( AMS - DDR ) ) ) - ( ( ( ( ( PN * PN ) / Max( ARS,ACS ) ) - Max( CRS,Const ) ) - ( FirstVNF_CPU + ( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / ARS ) ) ,RRS ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) ) ) ) ) - ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( Min( ( RCSe / MUR ) ,RRSe ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) + ( Max( RCSe,CS ) + ( ( ( MUM - RMSe ) / ( RMSe / Min( DS ,( ( MUC / RMSe ) / ( RCSe - CS ) ) ) ) ) * ( MUR - Max( MUC,DS ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03777825820073309}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( ( ( AMS - PN ) - ( AMS * DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) / Max( Min( ACS ,FirstVNF_Mem_Server ),DDR ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + Min( ( MDR - FirstVNF_CPU_Server ) ,( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( RRS - PN ) + ( MDR - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + DS ) ) + MUR ) + RMSe ) - ( ( ( ( Max( CS,RRSe ) / ( MLU + DS ) ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) * ( ( ( RCSe * MUC ) / MUR ) / Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) ) )", "obj1": 0.9100642398286938, "obj2": 0.04305238990611744}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( PN - ( AMS + Min( FirstVNF_CPU_Server ,ARS ) ) ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC * MUR ) + MUR )", "obj1": 0.7066381156316917, "obj2": 0.14791172651147527}, {"determining": "( ( ( PN * PN ) / Min( Const ,( ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ,Min( ( Const - ( AMS - PN ) ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,Min( CS ,MUR ) ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RRSe - ( MUC - RCSe ) ) ),RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.17391131816939562}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,Max( DDR,CRS ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUM ) ,Max( ( ( CS * CS ) - ( RRSe - ( MUC - RCSe ) ) ),RMSe ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( AMS - ARS ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * ( MDR - FirstVNF_CPU_Server ) ) / Min( MRS ,( RRS - MDR ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( MLU,( DS + ( MLU - ( Min( ( RRSe / ( CS / DS ) ) ,DS ) * DS ) ) ) ) + ( CS - MUC ) )", "obj1": 0.9122055674518201, "obj2": 0.04141692475794194}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ACS * ( PN / ( FirstVNF_CPU * FirstVNF_CPU ) ) ) ,Max( DDR,CRS ) ) ) ,( ( CRS - MDR ) - Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( Min( AMS ,FirstVNF_Mem_Server ) ,( ARS + CRS ) ) ) )", "choosing": "( ( MUR * ( DS / MUR ) ) + ( ( MUM + RCSe ) + Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( MUC / ( CS / RMSe ) ) - ( MLU / ( DS + RCSe ) ) ) ) ),CS ) ) )", "obj1": 0.6552462526766595, "obj2": 0.19813503610525177}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( ARS - AMS ) ) / ( DDR * FirstVNF_CPU ) ),( MDR / FirstVNF_RAM_Server ) ) ) ) ) - Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( MUM,Max( RCSe,MUC ) ),RMSe ) + Max( Max( Max( Max( ( MUM / ( DS - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.8758029978586723, "obj2": 0.05981769338894146}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( Max( DDR,Min( ( MRS * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RCSe + ( ( Max( RMSe,( ( ( RRSe + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( RMSe,MUC ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( Min( MUC ,( RCSe / CS ) ) * MUC ) / CS ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.16210642146569892}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( AMS - DDR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - FirstVNF_CPU ) ) - Min( ( ACS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( RRSe / RMSe ) / ( MUR - MUM ) ) + Max( ( DS + CS ),( ( MLU + ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ) ) - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.1407837701771527}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( CRS * ARS ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server - MDR ) * ( RRS - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( MUR - Max( ( ( Max( MUM,DS ) + CS ) - ( MUC - Min( DS ,RRSe ) ) ),DS ) ) / MUR ) - CS ) + ( CS + ( CS / ( ( RCSe / MLU ) - DS ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05427951011035075}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( FirstVNF_CPU_Server ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + Max( DS,Max( ( MLU + Max( RCSe,MLU ) ),MUM ) ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09752197465815782}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * ( ( FirstVNF_CPU / PN ) - Max( DDR,CRS ) ) ) / Min( FirstVNF_RAM ,ACS ) ) ,( ARS * FirstVNF_Mem ) ) ) - Max( Min( Min( Max( ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + ACS ) ),FirstVNF_Mem ) ,Min( ( ARS * ( Max( MRS,ACS ) - MDR ) ) ,( ( ARS + PN ) + Min( ( ARS * PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.7601713062098501, "obj2": 0.11962834580173726}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) + ( MLU - MUM ) ) ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09961439666254895}, {"determining": "( ( ( ( Min( ( PN * PN ) ,Min( ACS ,MRS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM,( FirstVNF_CPU + RRS ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( Min( MUM ,MUC ) - ( ( Max( RRSe,( MLU + RCSe ) ) * Min( Min( ( MUM * DS ) ,( RCSe * RRSe ) ) ,RMSe ) ) * RMSe ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ),( ( MUM - MLU ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8372591006423983, "obj2": 0.07905496848855195}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( MUR ,( MUC - MUR ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + CS ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13532866165199556}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( RMSe,( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.6809421841541756, "obj2": 0.16752274947459944}, {"determining": "( ( ( ( DDR - CRS ) / ( FirstVNF_CPU_Server + CRS ) ) * FirstVNF_Mem_Server ) - ( FirstVNF_CPU + ( ( Max( Const,( Min( ( FirstVNF_Mem_Server * DDR ) ,Const ) * ACS ) ) - MDR ) + ( CRS * Const ) ) ) )", "choosing": "( ( Min( ( CS / RRSe ) ,Max( ( ( CS * CS ) - CS ),Min( RRSe ,RMSe ) ) ) / ( Min( MUM ,( MLU + MUM ) ) * ( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) ) + Min( DS ,( ( DS * ( CS * ( ( ( MUC + DS ) / ( RRSe * MUR ) ) / ( ( DS - DS ) - ( DS + RRSe ) ) ) ) ) + RRSe ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026528863524894666}, {"determining": "( ( ( ( PN * PN ) / Min( ARS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) * MRS ),( ( ( ( FirstVNF_Mem * CRS ) + FirstVNF_RAM ) - CRS ) - ( AMS - ( ( RRS * ( AMS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,Min( FirstVNF_Mem ,( ( MDR / RRS ) * PN ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( ( ( ( ( RRSe - MUC ) * ( MUM / ( RMSe * MUR ) ) ) * RCSe ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / ( RRSe + MLU ) ) ) ) + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07590711405220167}, {"determining": "( ( ( Max( ( ( PN * PN ) / ( Min( BR ,DDR ) * ( RRS - AMS ) ) ),Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * ( PN * PN ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( RCSe / MUC ) ) + Max( ( MUC + RRSe ),( MUM + RCSe ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.0198530329617039}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Min( ( ARS * ( FirstVNF_RAM_Server - MDR ) ) ,( ( Min( MRS ,MRS ) / ( PN * Const ) ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,Max( BR,FirstVNF_Mem ) ) ,Min( Min( DDR ,DDR ) ,Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_Mem * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( ( DS - MUC ) + ( MUM - ( MUM / MUR ) ) ) - ( Max( MLU,CS ) + DS ) ) + MUR ) + RMSe ) - ( ( ( ( MUM / ( MLU + MLU ) ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) * ( Min( CS ,( MLU - ( Max( MUM,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / Max( MLU,( ( RRSe + ( ( RMSe * CS ) * ( MLU * RRSe ) ) ) * Max( MUC,Min( ( DS * RCSe ) ,( DS * RCSe ) ) ) ) ) ) ) )", "obj1": 0.6916488222698073, "obj2": 0.1593858546003795}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - ( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ACS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,Max( DDR,CRS ) ) ) ,Min( ( CRS - MDR ) ,( Min( ( Const * FirstVNF_Mem_Server ) ,CRS ) * ( CRS + DDR ) ) ) ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + ( ( MUM + RCSe ) / ( ( RMSe + ( MUR - MUC ) ) - CS ) ) )", "obj1": 0.6552462526766595, "obj2": 0.19813503610525177}, {"determining": "( ( AMS - DDR ) - Max( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * Min( ACS ,RRS ) ) / Min( MRS ,( RRS * FirstVNF_CPU ) ) ) ) ) ),( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( RMSe / ( RCSe / MUR ) ) + Max( ( MUM + RCSe ),( MUC + ( ( MUM + MUM ) + ( Max( ( Max( MLU,RRSe ) - Min( CS ,MUR ) ),MUM ) - MLU ) ) ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( Min( ACS ,MRS ) / ( PN + PN ) ) - Max( DDR,( CRS * FirstVNF_CPU ) ) ) - Min( Max( ( ( ( Min( ( CRS * FirstVNF_Mem_Server ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( Const + MDR ) ) ,( ACS / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),( ( MLU / Min( ( CS + ( ( CS / RCSe ) * RRSe ) ) ,( MUR - Max( CS,MUC ) ) ) ) + MUR ) ) + ( ( DS + MUM ) + ( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUR ) / ( RMSe * CS ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.00766784038951006}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ),( MUR - ( MUM + DS ) ) ) ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( RMSe * Min( RCSe ,Max( ( CS / RMSe ),DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) )", "obj1": 0.892933618843683, "obj2": 0.05205441305482887}, {"determining": "( ( ( ( Min( ( ( ( MRS * DDR ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) + MRS ) ,MRS ) - MDR ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - ACS ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( BR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( CS * ( MUC / MUC ) ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) + ( MLU - MUM ) ) ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( ( MLU / RCSe ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11404267704000755}, {"determining": "( ( PN * ( PN * ( PN / Max( CRS,( RRS - FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - MDR ) * ( Max( MRS,( FirstVNF_RAM * MDR ) ) * DDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( DS ,RCSe ) * Max( ( RCSe + ( ( ( ( RMSe / ( MUC / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) + RCSe ) ),Max( Max( Max( ( MUM - ( MLU - RRSe ) ),RCSe ),( MUC - DS ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( PN / MRS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) + PN ) + ( ( RRS + FirstVNF_Mem_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Min( ( RMSe - ( RMSe + RMSe ) ) ,Min( RMSe ,MUM ) ) + MUR ) )", "obj1": 0.69593147751606, "obj2": 0.15559625717894493}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Min( DS ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.1460251750571913}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( ( PN + PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS / FirstVNF_RAM ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( ( RMSe * CS ) - RCSe ) ),( ( ( CS * ( MUM - MLU ) ) / RCSe ) + CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13743454943516029}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( MDR - FirstVNF_Mem_Server ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - Max( FirstVNF_CPU,( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,Max( CRS,BR ) ) )", "choosing": "( ( DS / ( MUM * Max( RCSe,Min( DS ,RMSe ) ) ) ) + Max( ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) / ( MLU / MUR ) ) - ( MLU / MUR ) ) ),Max( ( RCSe / ( ( RMSe * RCSe ) / ( DS / MUC ) ) ),CS ) ) )", "obj1": 0.9357601713062098, "obj2": 0.029113742677342836}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,Const ) ) - ( FirstVNF_CPU + ( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / MDR ) ) ,RRS ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( ( ( ( MUR + ( ( ( CS - Max( MLU,RMSe ) ) - Min( DS ,RCSe ) ) * DS ) ) / DS ) + CS ) * ( ( RMSe + Min( CS ,MLU ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03777825820073309}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,( FirstVNF_CPU_Server + ( ( ACS / BR ) - Const ) ) ) ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ACS * FirstVNF_RAM ) ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ( Const / Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RRSe / RMSe ) ) - ( RMSe / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( MUM + RCSe ) + ( ( ( Max( CS,MUR ) - RCSe ) + CS ) + DS ) ) + RCSe ) ) )", "obj1": 0.7773019271948608, "obj2": 0.10966111758120582}, {"determining": "( ( ( ( ( ( PN * PN ) / ( FirstVNF_Mem - ( FirstVNF_RAM_Server / PN ) ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / BR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + MUR ) ),( ( RCSe * MUC ) + ( ( ( MUC / MUC ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.11189352552878147}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( MDR ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( CS ,MLU ) + Max( ( DS + CS ),( ( MLU + ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ) ) - CS ) ) )", "obj1": 0.6916488222698073, "obj2": 0.1593858546003795}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( ( ( ( ( RRSe - MUC ) * ( MUM - ( RMSe * MUR ) ) ) * RCSe ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.16210642146569892}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) )", "choosing": "( Min( DS ,( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + MUC ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004723452552919574}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - Const ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - ( Min( DS ,RCSe ) / MUR ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( ( RMSe * ( MUC - RRSe ) ) * ( MUM * ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.15559625717894493}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_CPU ) / Min( MRS ,ACS ) ) ,( ( ACS + FirstVNF_RAM_Server ) * CRS ) ) ) - Max( Min( Min( Max( FirstVNF_Mem,BR ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( PN + Max( CRS,PN ) ) ) ) ,Min( Max( CRS,PN ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) + Max( DS,CS ) )", "obj1": 0.6595289079229122, "obj2": 0.19191321904818692}, {"determining": "( ( AMS - ( PN / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( Max( PN,FirstVNF_RAM_Server ),RRS ) / Min( ( ACS + ACS ) ,( RRS - MRS ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( ( RCSe * MUC ),RCSe ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUM * MUC ) - Max( MUC,DS ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( DS / RMSe ) / ( MUR - RCSe ) ) ) / ( ( RCSe / MLU ) * RCSe ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04967005950229464}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10286243250867447}, {"determining": "( ( ( ( ( ( FirstVNF_Mem_Server * PN ) / Min( MRS ,ACS ) ) - Max( CRS,( AMS * FirstVNF_RAM ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( PN * ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( Max( AMS,BR ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * MLU ) + Max( ( MUC + ( ( ( DS - MUM ) / RMSe ) + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU + MUR ) ) ) ),( ( RRSe + ( MUM + RCSe ) ) + RCSe ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10765776924491}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( BR - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( ( FirstVNF_CPU / RRS ) + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ),( MUR - ( MUM + DS ) ) ) ),RMSe ) + Max( ( MUC * Max( MUR,Max( MLU,Max( MLU,Max( Min( MUR ,RMSe ),MUR ) ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( ( MUM - DS ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8629550321199143, "obj2": 0.0658801245786403}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) / ( ( ( ( PN * ACS ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( MRS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) ) - ( ( ( AMS / RRS ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / CS ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( MUR + DS ) / RRSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUC,MUR ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06173517769859165}, {"determining": "( ( PN * FirstVNF_Mem ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9400428265524625, "obj2": 0.02880305434924221}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( AMS - DDR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - PN ) ) - Min( ( ACS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( MUR + CS ) + Max( ( DS + CS ),( ( MLU + ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ) ) - CS ) ) )", "obj1": 0.734475374732334, "obj2": 0.1332257444509246}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10182595306377731}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( ( Min( Max( RRS,PN ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( ( ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - DDR ) ) * PN ) - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - PN ) ) - Min( ( ACS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Min( CS ,MLU ) + Max( ( DS + CS ),( ( MLU + ( ( MUC - Min( RMSe ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ) ) - CS ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13928789413554438}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( FirstVNF_CPU,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.728051391862955, "obj2": 0.1363118664392647}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( AMS - DDR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - PN ) ) - Min( ( ACS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( DS + CS ),Max( MUM,( CS + MUC ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.1332257444509246}, {"determining": "( ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - Max( ACS,MDR ) ) - Min( Min( ( AMS - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) + ( FirstVNF_Mem_Server * ( RRS - DDR ) ) ) ) ) )", "choosing": "( Min( ( MUC - ( MLU - RCSe ) ) ,RRSe ) + Max( RMSe,MUM ) )", "obj1": 0.8629550321199143, "obj2": 0.0658801245786403}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( MUM * Max( RCSe,Min( RMSe ,DS ) ) ) ) + Max( ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ),Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) ) ),CS ) ) )", "obj1": 0.9528907922912205, "obj2": 0.020638967628642466}, {"determining": "( ( PN * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * ( ( Max( RMSe,CS ) / Min( MLU ,( MUM / CS ) ) ) / ( ( Min( MLU ,DS ) + MUM ) + ( MUM - MLU ) ) ) ) ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9486081370449678, "obj2": 0.022662554418957606}, {"determining": "( Max( FirstVNF_Mem,PN ) - ( ( ( ( Max( AMS,RRS ) + ( FirstVNF_Mem_Server - MRS ) ) * ( ( RRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * FirstVNF_RAM ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ARS ) ) )", "choosing": "( Max( RRSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( Max( RMSe,MUC ) - Min( DS ,RCSe ) ) ) ),( Max( ( Min( DS ,Max( Max( RRSe,RMSe ),Min( MUM ,RCSe ) ) ) * Max( ( ( RCSe / RCSe ) + MLU ),DS ) ),( ( ( RRSe * ( RCSe / MUR ) ) * MUR ) - Min( ( MUR - MUC ) ,( MUC + ( CS - DS ) ) ) ) ) + RCSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10850388360002598}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( RRSe / ( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10286243250867447}, {"determining": "( ( PN * Min( FirstVNF_CPU ,MDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * ( ( Min( MLU ,( MUM / CS ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9486081370449678, "obj2": 0.022662554418957606}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * Min( RRS ,AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) + ACS ) )", "choosing": "( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / Max( MUR,MLU ) ) - ( MLU / MUR ) ) - ( Min( DS ,RCSe ) / MUR ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( ( RMSe * ( MUC - RRSe ) ) * ( MUM * ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06077776157587211}], "45": [{"determining": "( ( ( DDR / DDR ) * ( AMS * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( Max( DDR,MRS ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( ( MUR * RRSe ) / ( RRSe / RRSe ) ) ) - Max( ( RRSe - ( MUM / CS ) ),MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( Min( BR ,DDR ) - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( Min( MDR ,FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,PN ) ) ) ) ) )", "choosing": "( Min( MLU ,( ( MUM - MLU ) - MUC ) ) * ( ( MUC + ( MLU * ( ( RCSe - MUM ) + MUC ) ) ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM - FirstVNF_CPU ) * PN ) / ACS ) ) ) ) + Max( ( DDR + FirstVNF_Mem ),AMS ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) + MUM ) + Max( ( MUC + ( ( RCSe - MUC ) + ( MUM - ( MLU / ( ( RMSe + DS ) + DS ) ) ) ) ),( MUC + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( DDR / CRS ) ) ) ,Max( Max( MDR,FirstVNF_CPU ),( MRS + FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( ( ( PN * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) / ( MRS - ACS ) ) ,( ARS * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( RRSe / Min( RCSe ,CS ) ) / ( RMSe * RMSe ) ) * ( Min( MLU ,MUR ) - ( RCSe / MUR ) ) ) + RMSe ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,MUC ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( PN * PN ) / Min( ( Min( MRS ,ACS ) - ( PN * PN ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( ARS - Max( DDR,ARS ) ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( ( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ) * Max( MUM,RMSe ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( AMS - ARS ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server - MDR ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( MUR + Max( ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + ( DS * RCSe ) ) ),DS ) ) + MUR ) - CS ) + ( CS + ( CS / ( ( RCSe / MLU ) - DS ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.03298580510425135}, {"determining": "( Min( ( ( RRS / FirstVNF_RAM ) + Min( BR ,FirstVNF_RAM ) ) ,AMS ) - Max( Min( Max( CRS,DDR ) ,( CRS * DDR ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe - ( MUC / Min( MLU ,( ( CS * Max( RCSe,RRSe ) ) + ( ( MLU + CS ) + CS ) ) ) ) ),DS ) + ( CS - MUC ) )", "obj1": 0.6659528907922913, "obj2": 0.18948623870055134}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ),( MDR - ( AMS - DDR ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( PN * ( FirstVNF_RAM_Server - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( BR - ( BR - ( Max( Max( FirstVNF_RAM_Server,MRS ),AMS ) * Const ) ) ) / ( ARS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUR ,( ( ( ( ( RCSe / MLU ) * RCSe ) * RMSe ) - ( Min( ( RRSe - MUR ) ,Min( RRSe ,DS ) ) - DS ) ) - MUM ) ) * ( RRSe / CS ) ) + ( ( MUM + RRSe ) / ( Min( MUR ,( Min( MUM ,MUM ) + RCSe ) ) + Max( RMSe,( MUC - CS ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08832316705324239}, {"determining": "( ( ( PN * CRS ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( FirstVNF_RAM ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( Max( CRS,MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( ( FirstVNF_CPU - MDR ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( MLU / ( ( ( RCSe - MUR ) - DS ) * Min( DS ,( DS + MUC ) ) ) ) + Min( Min( RCSe ,( RRSe - DS ) ) ,Min( Min( MUM ,Max( MLU,RCSe ) ) ,( ( MUR * RMSe ) * MUM ) ) ) ) + RMSe ) - MUM ) * ( ( MUR - MLU ) + Max( Max( RMSe,CS ),DS ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18064444597178667}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( RMSe,( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.6809421841541756, "obj2": 0.16752274947459944}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( ( Max( ( ( PN * PN ) / ( Min( BR ,DDR ) * ( RRS - AMS ) ) ),Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * ( PN * PN ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( RCSe / MUC ) ) + Max( ( MUC + RRSe ),( MUM + RCSe ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,BR ) ) - ( FirstVNF_RAM_Server + BR ) ) * ( Min( ( MDR - ARS ) ,( FirstVNF_RAM / RRS ) ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( MUM - CS ) / ( Min( ( ( MUC + RCSe ) - ( MUC + MUR ) ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ),( MUC / DS ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / Max( FirstVNF_Mem_Server,( AMS / FirstVNF_CPU ) ) ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( DDR - ( ( RRS * PN ) / ( AMS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( ( MLU * DS ) / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + RRSe ) ) ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08556520324879}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - ( MRS / Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - ( ( MDR * MDR ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( RMSe * MUR ) - ( Min( ( MUR / ( CS + DS ) ) ,MLU ) / ( MLU / DS ) ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17316280315061913}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( MUM + ( Min( ( ( MUM - MUC ) / MLU ) ,( MUM / DS ) ) + RMSe ) ) - Max( CS,RMSe ) ),( ( MUR - CS ) / ( Min( ( CS - MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( ( RCSe * RCSe ) - CS ) ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.03936676971681004}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( MRS * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ,( ( PN + ACS ) + Max( CRS,PN ) ) ) ) ,( Min( RRS ,FirstVNF_CPU ) - Min( ( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,Const ) ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS + RRSe ) - CS ) + ( RMSe * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.12406192703022473}, {"determining": "( ( PN * ( PN * ( PN / Max( CRS,( RRS - FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - MDR ) * ( Max( MRS,( FirstVNF_RAM * MDR ) ) * DDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( DS ,RCSe ) * Max( ( RCSe + ( ( ( ( RMSe / ( MUC / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) + RCSe ) ),Max( Max( Max( ( MUM - ( MLU - RRSe ) ),RCSe ),( MUC - DS ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - ( FirstVNF_Mem + Min( Const ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.15018998151383628}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_RAM_Server ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( MDR / FirstVNF_RAM_Server ) ) ) ) ) - Max( BR,( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( DS * ( ( Min( ( MUR + CS ) ,MUR ) / RRSe ) + ( ( CS - ( Max( RMSe,RCSe ) + Max( MUM,MLU ) ) ) / Min( RMSe ,DS ) ) ) ) ,MUR ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MUR,MUC ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.07997465469598682}, {"determining": "( Max( Max( MRS,ACS ),FirstVNF_RAM ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( RRSe / ( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( Max( MLU,RMSe ) - CS ) ) ) ) ) + Max( RCSe,( ( MLU * MUM ) - ( ( MUM + MUC ) / Max( RMSe,MUC ) ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09402219561814379}, {"determining": "( ( ( PN * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) ) - Min( Max( ( ( AMS - DDR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - PN ) ) - Min( ( ACS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( MUR + CS ) + Max( ( DS + ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) ),( ( MLU + ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ) ) - CS ) ) )", "obj1": 0.9400428265524625, "obj2": 0.0263622550114003}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) / ( ( ( ( PN * ACS ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( MRS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) ) - ( ( ( AMS / RRS ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / CS ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( MUR + DS ) / RRSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUC,MUR ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06173517769859165}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( Max( MDR,FirstVNF_CPU_Server ) + ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - ( ( ( RRS - DDR ) - MDR ) * PN ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Max( MLU,MLU ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,( MUM + DS ) ) )", "obj1": 0.7109207708779444, "obj2": 0.1448372697507651}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) + ( MLU - MUM ) ) ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09961439666254895}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server / ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( CRS * ( FirstVNF_RAM_Server * ( Min( Const ,ARS ) - PN ) ) ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( CS,MUM ),RMSe ) + Min( ( RRSe + ( Max( ( MUC - Min( DS ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / MLU ) / ( MUR - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.7173447537473233, "obj2": 0.141669950945915}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,( MRS - ACS ) ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( Max( MUM,CS ) - CS ) - CS ),( MUM / RCSe ) ) + ( ( ( MUR + ( ( ( CS - Max( MLU,RMSe ) ) - Min( DS ,RCSe ) ) * DS ) ) / DS ) + CS ) )", "obj1": 0.683083511777302, "obj2": 0.16605964269419118}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,BR ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( CS * ( MUC / MUC ) ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) + ( MLU - MUM ) ) ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( ( MLU / RCSe ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18064444597178667}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,RRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( ( ( PN + AMS ) * PN ) / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( ( RCSe * RCSe ) - CS ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( RMSe / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.07688007373072432}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( ( ( PN * PN ) / Min( MRS ,BR ) ) - Max( ( RRS - AMS ),( FirstVNF_RAM + AMS ) ) )", "choosing": "( Min( RCSe ,Max( MUM,CS ) ) + Max( ( Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Min( MUC ,MUM ) ) ) ),( CS / MUR ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( ( ( PN * PN ) / Min( ARS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( Max( PN,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) * MRS ),( ( ( ( FirstVNF_Mem * CRS ) + FirstVNF_RAM ) - CRS ) - ( AMS - ( ( RRS * ( AMS - MRS ) ) - Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,Min( FirstVNF_Mem ,( ( MDR / RRS ) * PN ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( ( ( ( ( RRSe - MUC ) * ( MUM / ( RMSe * MUR ) ) ) * RCSe ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / ( RRSe + MLU ) ) ) ) + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07590711405220167}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( Max( AMS,BR ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * MLU ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11434872560354574}, {"determining": "( ( ( Min( ACS ,MRS ) / ( PN + PN ) ) - Max( DDR,( CRS * FirstVNF_CPU ) ) ) - Min( Max( ( ( ( Min( ( CRS * FirstVNF_Mem_Server ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( Const + MDR ) ) ,( ACS / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),( ( MLU / Min( ( CS + ( ( CS / RCSe ) * RRSe ) ) ,( MUR - Max( CS,MUC ) ) ) ) + MUR ) ) + ( ( DS + MUM ) + ( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUR ) / ( RMSe * CS ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.00766784038951006}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( DDR,BR ) - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( Min( ( PN * MDR ) ,BR ) * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * AMS ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,Min( RCSe ,RCSe ) ),MUR ) ) + ( MUM / Min( RRSe ,RRSe ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010921119868743286}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( Min( ( ( Min( Min( Min( ( ACS * FirstVNF_RAM ) ,Max( AMS,MDR ) ) ,ACS ) ,MRS ) + ( BR - FirstVNF_RAM ) ) / PN ) ,Min( MDR ,( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) - Max( Min( Min( Max( BR,AMS ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,Max( CRS,DDR ) ) ) ,Min( Min( FirstVNF_CPU ,MDR ) ,( CRS - MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / MUC ) / MUR ) + Max( ( RRSe + DS ),( ( MLU * MUM ) - Max( ( ( MUC * ( DS * Max( RMSe,MUC ) ) ) * ( MUM * MUC ) ),MUM ) ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( ( AMS - ( PN / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( Max( PN,FirstVNF_RAM_Server ),RRS ) / Min( ( ACS + ACS ) ,( RRS - MRS ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( ( RCSe * MUC ),RCSe ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUM * MUC ) - Max( MUC,DS ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( DS / RMSe ) / ( MUR - RCSe ) ) ) / ( ( RCSe / MLU ) * RCSe ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04967005950229464}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( Min( AMS ,( ARS - ( AMS - DDR ) ) ) - ( ( ( ( ( PN * PN ) / Max( ARS,ACS ) ) - Max( CRS,Const ) ) - ( FirstVNF_CPU + ( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / ARS ) ) ,RRS ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) ) ) ) ) - ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( Min( ( RCSe / MUR ) ,RRSe ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) + ( Max( RCSe,CS ) + ( ( ( MUM - RMSe ) / ( RMSe / Min( DS ,( ( MUC / RMSe ) / ( RCSe - CS ) ) ) ) ) * ( MUR - Max( MUC,DS ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03777825820073309}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( FirstVNF_CPU_Server ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + Max( DS,Max( ( MLU + Max( RCSe,MLU ) ),MUM ) ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09752197465815782}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( ( ( ( ( PN * PN ) / ( FirstVNF_Mem - ( FirstVNF_RAM_Server / PN ) ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / BR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + MUR ) ),( ( RCSe * MUC ) + ( ( ( MUC / MUC ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.11189352552878147}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_RAM_Server + DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Min( ( CS - RRSe ) ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.7066381156316917, "obj2": 0.14764096498331447}, {"determining": "( Min( ( PN * PN ) ,Min( Const ,( ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + ( DDR / AMS ) ) ) ) ,Min( ( MDR - CRS ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MUR ) ,RCSe ) ,Max( ( Max( ( ( MUM + MUM ) + MUR ),Min( ( Max( MUR,Min( MLU ,RRSe ) ) * MUC ) ,CS ) ) - ( CS * CS ) ),RMSe ) )", "obj1": 0.6745182012847966, "obj2": 0.17391131816939562}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + ( MUC * MUR ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( MUM * Max( RCSe,Min( RMSe ,DS ) ) ) ) + Max( ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ),Min( Min( RCSe ,( RRSe - DS ) ) ,Min( ( ( MUR * RMSe ) * MUM ) ,Min( MUM ,Max( MLU,RCSe ) ) ) ) ) )", "obj1": 0.9336188436830836, "obj2": 0.030150222122240018}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ACS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,Max( DDR,CRS ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.19813503610525177}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - Max( ACS,MDR ) ) - Min( ( ( AMS - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) + FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RRSe + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Max( Min( Min( MUR ,Max( MLU,RCSe ) ) ,CS ),Min( MUM ,RCSe ) ) ) ),( MUC + ( RCSe + ( Max( MUC,RCSe ) - RCSe ) ) ) ) + Max( MUM,RMSe ) )", "obj1": 0.8586723768736617, "obj2": 0.06781147738580469}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,( FirstVNF_CPU_Server + ( ( ACS / BR ) - Const ) ) ) ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ACS * FirstVNF_RAM ) ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ( Const / Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RRSe / RMSe ) ) - ( RMSe / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( MUM + RCSe ) + ( ( ( Max( CS,MUR ) - RCSe ) + CS ) + DS ) ) + RCSe ) ) )", "obj1": 0.7773019271948608, "obj2": 0.10966111758120582}, {"determining": "( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( ARS - AMS ) ) / ( DDR * FirstVNF_CPU ) ),( MDR / FirstVNF_RAM_Server ) ) ) ) ) - Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( MUM,Max( RCSe,MUC ) ),RMSe ) + Max( Max( Max( Max( ( MUM / ( DS - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.8758029978586723, "obj2": 0.05981769338894146}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10182595306377731}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * ( ( FirstVNF_CPU / PN ) - Max( DDR,CRS ) ) ) / Min( FirstVNF_RAM ,ACS ) ) ,( ARS * FirstVNF_Mem ) ) ) - Max( Min( Min( Max( ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + ACS ) ),FirstVNF_Mem ) ,Min( ( ARS * ( Max( MRS,ACS ) - MDR ) ) ,( ( ARS + PN ) + Min( ( ARS * PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.7601713062098501, "obj2": 0.11962834580173726}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( Min( FirstVNF_CPU ,MDR ) * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( MDR / FirstVNF_RAM_Server ) ) ) ) ) - ( ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) - Min( ( ( ACS / MDR ) - ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( MUM / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( Max( ( MUM / ( MLU - RRSe ) ),RCSe ),( MUC - DS ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8565310492505354, "obj2": 0.0692287896074877}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / PN ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( RMSe,( RCSe / MUC ) ) + Max( ( MUC + ( RCSe + ( ( ( MUM / ( RCSe / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.8372591006423983, "obj2": 0.07867006546113486}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - Max( ACS,MDR ) ) - Min( ( ( AMS - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - ACS ) ) ) + FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RRSe + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Max( Min( Min( MUR ,Max( DS,RCSe ) ) ,CS ),Min( MUM ,RCSe ) ) ) ),( MUC + ( RCSe + ( Max( MUC,RCSe ) - RCSe ) ) ) ) + Max( MUM,RMSe ) )", "obj1": 0.8629550321199143, "obj2": 0.06580106125646266}, {"determining": "( ( ( Max( ( ( PN * PN ) / ( Min( BR ,DDR ) * ( RRS - AMS ) ) ),Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( MDR + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * Max( Const,Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,Max( AMS,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( RMSe,( RCSe / MUC ) ) + Max( ( Min( DS ,MUR ) + ( RCSe + ( ( ( MUM / ( CS / RMSe ) ) - ( ( DS * MUR ) / ( RCSe + RCSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9657387580299786, "obj2": 0.015000517660122085}, {"determining": "( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( DDR / RRS ),( ( PN / PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - FirstVNF_Mem ) ) ) - ( AMS - DDR ) )", "choosing": "Min( Max( ( ( ( DS * ( ( DS + ( MUC * DS ) ) - CS ) ) + ( Min( ( ( MUM - MUC ) / MUM ) ,( MUM / DS ) ) + MLU ) ) - Max( CS,RMSe ) ),( ( MUR - CS ) / ( Min( ( CS - MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( ( RCSe * RCSe ) - CS ) ) ) ) ) ,( MUC + Min( MUR ,DS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( AMS - DDR ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9571734475374732, "obj2": 0.0198530329617039}, {"determining": "( ( Max( ( ( MRS / ARS ) - PN ),ACS ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN / ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Min( Max( MUR,RMSe ) ,( MUM * Max( ( MUM + ( RRSe + ( CS - DS ) ) ),( RMSe / ( MUM - Min( RCSe ,MUC ) ) ) ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( MUM / ( CS / RMSe ) ) - ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9657387580299786, "obj2": 0.015000517660122085}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( ( RMSe * CS ) - RCSe ) ),( ( ( CS * ( MUM - MLU ) ) / RCSe ) + CS ) ) )", "obj1": 0.6873661670235546, "obj2": 0.16210642146569892}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Min( ( ARS * ( FirstVNF_RAM_Server - MDR ) ) ,( ( Min( MRS ,MRS ) / ( PN * Const ) ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,Max( BR,FirstVNF_Mem ) ) ,Min( Min( DDR ,DDR ) ,Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_Mem * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( ( DS - MUC ) + ( MUM - ( MUM / MUR ) ) ) - ( Max( MLU,CS ) + DS ) ) + MUR ) + RMSe ) - ( ( ( ( MUM / ( MLU + MLU ) ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) * ( Min( CS ,( MLU - ( Max( MUM,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / Max( MLU,( ( RRSe + ( ( RMSe * CS ) * ( MLU * RRSe ) ) ) * Max( MUC,Min( ( DS * RCSe ) ,( DS * RCSe ) ) ) ) ) ) ) )", "obj1": 0.6916488222698073, "obj2": 0.1593858546003795}, {"determining": "( Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ACS * ( PN / ( FirstVNF_CPU * FirstVNF_CPU ) ) ) ,Max( DDR,CRS ) ) ) ,( ( CRS - MDR ) - Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( Min( AMS ,FirstVNF_Mem_Server ) ,( ARS + CRS ) ) ) )", "choosing": "( ( MUR * ( DS / MUR ) ) + ( ( MUM + RCSe ) + Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( MUC / ( CS / RMSe ) ) - ( MLU / ( DS + RCSe ) ) ) ) ),CS ) ) )", "obj1": 0.6552462526766595, "obj2": 0.19813503610525177}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( Min( Min( Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / ARS ) ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) ,RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * ( ( Max( RMSe,CS ) / Min( MLU ,( MUM / CS ) ) ) / ( ( Min( MLU ,DS ) + MUM ) + ( MUM - MLU ) ) ) ),RMSe ) )", "obj1": 0.6638115631691649, "obj2": 0.1898715206345871}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - ( PN * PN ) ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ),( MUR - ( MUM + DS ) ) ) ),RMSe ) + Max( ( MUC + ( ( ( CS * MLU ) - CS ) - CS ) ),( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05264513796127574}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( FirstVNF_CPU_Server ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + Max( DS,Max( ( MLU + Max( RCSe,MLU ) ),MUM ) ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09752197465815782}, {"determining": "( ( AMS - DDR ) - Max( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * Min( ACS ,RRS ) ) / Min( MRS ,( RRS * FirstVNF_CPU ) ) ) ) ) ),( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( RMSe / ( RCSe / MUR ) ) + Max( ( MUM + RCSe ),( MUC + ( ( MUM + MUM ) + ( Max( ( Max( MLU,RRSe ) - Min( CS ,MUR ) ),MUM ) - MLU ) ) ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( PN / MRS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) + PN ) + ( ( RRS + FirstVNF_Mem_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Min( ( RMSe - ( RMSe + RMSe ) ) ,Min( RMSe ,MUM ) ) + MUR ) )", "obj1": 0.69593147751606, "obj2": 0.15559625717894493}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ),( MUR - ( MUM + DS ) ) ) ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( RMSe * Min( RCSe ,Max( ( CS / RMSe ),DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) )", "obj1": 0.892933618843683, "obj2": 0.05205441305482887}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,Const ) ) - ( FirstVNF_CPU + ( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / MDR ) ) ,RRS ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + RMSe ) - ( ( ( Max( ( RRSe + ( MUM + RMSe ) ),RRSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / MLU ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03777825820073309}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( PN * FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / MUC ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10618070250386158}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) + ( RRS - AMS ) ) )", "choosing": "( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / RMSe ) ) - ( MLU / MUR ) ) - ( Min( DS ,RCSe ) / MUR ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( ( RMSe * ( MUC - RRSe ) ) * ( MUM * ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.9036402569593148, "obj2": 0.04651315818733699}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( FirstVNF_Mem ,ACS ) ) ,( ARS * CRS ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( RMSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( Max( RMSe,MUC ) - Min( DS ,RCSe ) ) ) ),( Max( ( Min( DS ,Max( Max( CS,RMSe ),RRSe ) ) - Max( ( ( RCSe / RCSe ) + MLU ),DS ) ),RMSe ) + RCSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.1593858546003795}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( Max( DDR,Min( ( MRS * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RCSe + ( ( Max( RMSe,( ( ( RRSe + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( RMSe,MUC ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( Min( MUC ,( RCSe / CS ) ) * MUC ) / CS ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.16210642146569892}, {"determining": "( ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( ( ARS + ( MRS - DDR ) ) - FirstVNF_CPU ) ) * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8993576017130621, "obj2": 0.047173874615453255}, {"determining": "( ( PN * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - Const ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - ( Min( DS ,RCSe ) / MUR ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( ( RMSe * ( MUC - RRSe ) ) * ( MUM * ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.15559625717894493}, {"determining": "( ( ( ( Min( ( ( ( MRS * DDR ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) + MRS ) ,MRS ) - MDR ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - ACS ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( BR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( CS * ( MUC / MUC ) ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) + ( MLU - MUM ) ) ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( ( MLU / RCSe ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11404267704000755}, {"determining": "( ( ( PN * PN ) / ( Min( AMS ,FirstVNF_Mem_Server ) * ( ARS * CRS ) ) ) - ( ( FirstVNF_Mem - ( ( PN - FirstVNF_Mem ) / MRS ) ) + MDR ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( MUC / ( CS / RMSe ) ) * ( MLU / MUR ) ) ) ),CS ) ) )", "obj1": 0.6595289079229122, "obj2": 0.19191321904818692}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10286243250867447}, {"determining": "( ( ( ( ( ( FirstVNF_Mem_Server * PN ) / Min( MRS ,ACS ) ) - Max( CRS,( AMS * FirstVNF_RAM ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( PN * ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( Max( AMS,BR ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * MLU ) + Max( ( MUC + ( ( ( DS - MUM ) / RMSe ) + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU + MUR ) ) ) ),( ( RRSe + ( MUM + RCSe ) ) + RCSe ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10765776924491}, {"determining": "( ( ( ( ( ( PN * BR ) / Min( MRS ,ACS ) ) - ( PN * PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( Min( ( RCSe / MUR ) ,RRSe ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) + ( Max( RCSe,CS ) + ( ( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( RMSe / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) * ( MUR - Max( MUC,DS ) ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09402219561814379}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( MUR ,( MUC - MUR ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + CS ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13925723201330586}, {"determining": "( ( ( ( PN * ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( AMS - DDR ) * MRS ),( ( MDR - FirstVNF_CPU_Server ) + ( PN * ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / ( MRS * ACS ) ) - PN ) ) )", "choosing": "( ( ( ( ( Min( ( MUC - MUR ) ,( MUC - ( RCSe + RRSe ) ) ) / DS ) + Min( DS ,( MLU * DS ) ) ) / DS ) + CS ) + Max( ( DS + CS ),( ( MLU + ( ( MUC - Min( DS ,MUM ) ) - ( ( ( DS - MUM ) / RMSe ) + Max( MUC,RCSe ) ) ) ) - CS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13513641233937868}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( FirstVNF_CPU,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.1407076821976638}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - ARS ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + CRS ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( ( ( Const / MDR ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * BR ) ) + ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( ( ( PN * PN ) / ( MRS - ACS ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + Min( ( ( ( RMSe * MLU ) - MUM ) / ( ( MUC - CS ) / MUM ) ) ,Max( DS,RCSe ) ) ) ),( Max( RMSe,Max( MUM,CS ) ) + ( DS + RMSe ) ) ) )", "obj1": 0.8843683083511777, "obj2": 0.056319696938949726}, {"determining": "( ( AMS - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server - MDR ) * ( RRS - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05427951011035075}, {"determining": "( ( PN * Min( FirstVNF_CPU ,MDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * FirstVNF_Mem ) * MDR ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9528907922912205, "obj2": 0.020638967628642466}, {"determining": "( ( PN * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * ( ( Max( RMSe,CS ) / Min( MLU ,( MUM / CS ) ) ) / ( ( Min( MLU ,DS ) + MUM ) + ( MUM - MLU ) ) ) ) ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9486081370449678, "obj2": 0.022662554418957606}, {"determining": "( Max( FirstVNF_Mem,PN ) - ( ( ( ( Max( AMS,RRS ) + ( FirstVNF_Mem_Server - MRS ) ) * ( ( RRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * FirstVNF_RAM ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ARS ) ) )", "choosing": "( Max( RRSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( Max( RMSe,MUC ) - Min( DS ,RCSe ) ) ) ),( Max( ( Min( DS ,Max( Max( RRSe,RMSe ),Min( MUM ,RCSe ) ) ) * Max( ( ( RCSe / RCSe ) + MLU ),DS ) ),( ( ( RRSe * ( RCSe / MUR ) ) * MUR ) - Min( ( MUR - MUC ) ,( MUC + ( CS - DS ) ) ) ) ) + RCSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10850388360002598}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( RRSe / ( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10286243250867447}], "46": [{"determining": "( ( ( DDR / DDR ) * ( AMS * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( Max( DDR,MRS ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( ( MUR * RRSe ) / ( RRSe / RRSe ) ) ) - Max( ( RRSe - ( MUM / CS ) ),MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,DDR ) - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( Min( MDR ,FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,PN ) ) ) ) ) )", "choosing": "( Min( MLU ,( ( MUM - MLU ) - MUC ) ) * ( ( MUC + ( MLU * ( ( RCSe - MUM ) + MUC ) ) ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( DDR / CRS ) ) ) ,Max( Max( MDR,FirstVNF_CPU ),( MRS + FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( ( ( PN * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) / ( MRS - ACS ) ) ,( ARS * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( RRSe / Min( RCSe ,CS ) ) / ( RMSe * RMSe ) ) * ( Min( MLU ,MUR ) - ( RCSe / MUR ) ) ) + RMSe ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,MUC ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( FirstVNF_RAM_Server / MDR ),( ( Min( FirstVNF_CPU_Server ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) ) ) ) ) - Min( ( PN + ( BR + BR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + ( DS * Max( Max( DS,Min( MUM ,( CS / RMSe ) ) ),MUM ) ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09746944224362318}, {"determining": "( ( ( PN * PN ) / Min( MRS ,BR ) ) - Max( ( RRS - AMS ),( FirstVNF_RAM + AMS ) ) )", "choosing": "( Min( RCSe ,Max( MUM,CS ) ) + Max( ( Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Min( MUC ,MUM ) ) ) ),( CS / MUR ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ),Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ),( MUR - ( MUM + DS ) ) ) ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( RMSe * Min( RCSe ,Max( ( CS / RMSe ),DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) )", "obj1": 0.9143468950749465, "obj2": 0.04146876355387279}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) / ( ( ( ( PN * ACS ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( MRS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) ) - ( ( ( AMS / RRS ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / CS ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( MUR + DS ) / RRSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUC,MUR ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06173517769859165}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( ( CRS - FirstVNF_RAM ) * FirstVNF_Mem_Server ) + ( Min( ( MDR - FirstVNF_Mem ) ,( FirstVNF_RAM / RRS ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUM ) ) ,CS ) ) - Max( Min( Min( ( DS - ( ( RCSe + RRSe ) / MUC ) ) ,MLU ) ,( CS - ( CS * MLU ) ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9079229122055674, "obj2": 0.045888196281828934}, {"determining": "( ( PN * ( PN * ( PN / Max( CRS,( RRS - FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - MDR ) * ( Max( MRS,( FirstVNF_RAM * MDR ) ) * DDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( DS ,RCSe ) * Max( ( RCSe + ( ( ( ( RMSe / ( MUC / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) + RCSe ) ),Max( Max( Max( ( MUM - ( MLU - RRSe ) ),RCSe ),( MUC - DS ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,BR ) ) - ( FirstVNF_RAM_Server + BR ) ) * ( Min( ( MDR - ARS ) ,( FirstVNF_RAM / RRS ) ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( MUM - CS ) / ( Min( ( ( MUC + RCSe ) - ( MUC + MUR ) ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ),( MUC / DS ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( ( PN * PN ) / ( Min( AMS ,FirstVNF_Mem_Server ) * ( ARS * CRS ) ) ) - ( ( FirstVNF_Mem - ( ( PN - FirstVNF_Mem ) / MRS ) ) + MDR ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( MUC / ( CS / RMSe ) ) * ( MLU / MUR ) ) ) ),CS ) ) )", "obj1": 0.6595289079229122, "obj2": 0.19191321904818692}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( MRS * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ,( ( PN + ACS ) + Max( CRS,PN ) ) ) ) ,( Min( RRS ,FirstVNF_CPU ) - Min( ( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,Const ) ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS + RRSe ) - CS ) + ( RMSe * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.12406192703022473}, {"determining": "( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - ( FirstVNF_Mem + Min( Const ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.15018998151383628}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / Max( FirstVNF_Mem_Server,( AMS / FirstVNF_CPU ) ) ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( DDR - ( ( RRS * PN ) / ( AMS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( ( MLU * DS ) / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + RRSe ) ) ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08556520324879}, {"determining": "( Max( Max( MRS,ACS ),FirstVNF_RAM ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( RRSe / ( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( Max( MLU,RMSe ) - CS ) ) ) ) ) + Max( RCSe,( ( MLU * MUM ) - ( ( MUM + MUC ) / Max( RMSe,MUC ) ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09402219561814379}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / RMSe ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6638115631691649, "obj2": 0.18780615096750003}, {"determining": "( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( ARS - AMS ) ) / ( DDR * FirstVNF_CPU ) ),( MDR / FirstVNF_RAM_Server ) ) ) ) ) - Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( MUM,Max( RCSe,MUC ) ),RMSe ) + Max( Max( Max( Max( ( MUM / ( DS - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.8758029978586723, "obj2": 0.05981769338894146}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) ) ) - Min( AMS ,( PN * FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / MUR ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.8201284796573876, "obj2": 0.0878550701585048}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,BR ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( CS * ( MUC / MUC ) ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) + ( MLU - MUM ) ) ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( ( MLU / RCSe ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18064444597178667}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( Max( DDR,Min( ( MRS * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RCSe + ( ( Max( RMSe,( ( ( RRSe + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( RMSe,MUC ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( Min( MUC ,( RCSe / CS ) ) * MUC ) / CS ) ) ) ) )", "obj1": 0.6680942184154176, "obj2": 0.1874263708150455}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( BR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( Max( AMS,BR ) * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM + MDR ) ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( MLU / MUR ) - ( RMSe / ( CS / MLU ) ) ) - Max( ( RMSe / ( MUM / RMSe ) ),MUC ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.07673306304734444}, {"determining": "( ( ( PN * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) ) - Min( Max( ( ( AMS - DDR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - ( ( RRS * ( MRS - PN ) ) - Min( ( ACS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( MUR + CS ) + Max( ( DS + ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) ),( ( MLU + ( ( MUC - Min( DS ,MUM ) ) - ( Max( MUM,DS ) + Max( MUC,RCSe ) ) ) ) - CS ) ) )", "obj1": 0.9400428265524625, "obj2": 0.0263622550114003}, {"determining": "( ( Max( Min( Const ,ARS ),ARS ) * AMS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( RRS - CRS ) ) ) ) + FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) + ARS ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RCSe + MUM ),( ( MUC + Min( ( RCSe + CS ) ,( MLU * MUC ) ) ) - ( DS - ( ( MUR + DS ) - RCSe ) ) ) ) + ( DS + ( ( ( ( ( MUM / ( CS * MUR ) ) * CS ) / ( CS * ( RCSe / MUC ) ) ) + MLU ) + Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.0649150395685006}, {"determining": "( ( PN * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * ( ( Max( RMSe,CS ) / Min( MLU ,( MUM / CS ) ) ) / ( ( Min( MLU ,DS ) + MUM ) + ( MUM - MLU ) ) ) ) ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9486081370449678, "obj2": 0.022662554418957606}, {"determining": "( ( ( PN * PN ) / Min( ( Min( MRS ,ACS ) - ( PN * PN ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( ARS - Max( DDR,ARS ) ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( ( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ) * Max( MUM,RMSe ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( Max( AMS,BR ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * MLU ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11434872560354574}, {"determining": "( ( ( Min( ACS ,MRS ) / ( PN + PN ) ) - Max( DDR,( CRS * FirstVNF_CPU ) ) ) - Min( Max( ( ( ( Min( ( CRS * FirstVNF_Mem_Server ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( Const + MDR ) ) ,( ACS / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),( ( MLU / Min( ( CS + ( ( CS / RCSe ) * RRSe ) ) ,( MUR - Max( CS,MUC ) ) ) ) + MUR ) ) + ( ( DS + MUM ) + ( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUR ) / ( RMSe * CS ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.00766784038951006}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( MUM + ( Min( ( ( MUM - MUC ) / MLU ) ,( MUM / DS ) ) + RMSe ) ) - Max( CS,RMSe ) ),( ( MUR - CS ) / ( Min( ( CS - MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( ( RCSe * RCSe ) - CS ) ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.03936676971681004}, {"determining": "( ( ( ( ( ( ARS * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - DDR ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - AMS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( CRS / PN ) ,( PN * PN ) ) ) + ( RRS - AMS ) ) )", "choosing": "( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,RMSe ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / RMSe ) ) - ( DS + ( MUC - CS ) ) ) - ( Min( DS ,RCSe ) / MUR ) ) ) ),Max( Max( ( ( ( MLU - CS ) / MUM ) * ( CS * MUR ) ),Min( MUR ,( MUM + DS ) ) ),( ( RMSe * ( MUC - RRSe ) ) * ( MUM * CS ) ) ) ) )", "obj1": 0.8458244111349036, "obj2": 0.07458730764465374}, {"determining": "( Min( ( ( Min( Min( Min( ( ACS * FirstVNF_RAM ) ,Max( AMS,MDR ) ) ,ACS ) ,MRS ) + ( BR - FirstVNF_RAM ) ) / PN ) ,Min( MDR ,( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) - Max( Min( Min( Max( BR,AMS ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,Max( CRS,DDR ) ) ) ,Min( Min( FirstVNF_CPU ,MDR ) ,( CRS - MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / MUC ) / MUR ) + Max( ( RRSe + DS ),( ( MLU * MUM ) - Max( ( ( MUC * ( DS * Max( RMSe,MUC ) ) ) * ( MUM * MUC ) ),MUM ) ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( ( AMS - ( PN / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( Max( PN,FirstVNF_RAM_Server ),RRS ) / Min( ( ACS + ACS ) ,( RRS - MRS ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( ( RCSe * MUC ),RCSe ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUM * MUC ) - Max( MUC,DS ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( DS / RMSe ) / ( MUR - RCSe ) ) ) / ( ( RCSe / MLU ) * RCSe ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04967005950229464}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( Min( ( RCSe / MUR ) ,RRSe ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) + ( Max( RCSe,CS ) + ( DS / ( MUM * Max( RCSe,Min( RMSe ,DS ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.0322857237724867}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Max( CRS,DDR ) ,( CRS * DDR ) ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Min( DS ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( DS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.734475374732334, "obj2": 0.13387504910822956}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.17391131816939562}, {"determining": "( ( ( PN * CRS ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( FirstVNF_RAM ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( Max( CRS,MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( ( FirstVNF_CPU - MDR ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( MLU / ( ( ( RCSe - MUR ) - DS ) * Min( DS ,( DS + MUC ) ) ) ) + Min( Min( RCSe ,( RRSe - DS ) ) ,Min( Min( MUM ,Max( MLU,RCSe ) ) ,( ( MUR * RMSe ) * MUM ) ) ) ) + RMSe ) - MUM ) * ( ( MUR - MLU ) + Max( Max( RMSe,CS ),DS ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18064444597178667}, {"determining": "( ( Min( RRS ,Max( PN,ACS ) ) * PN ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( MUR / DS ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Min( ( CRS - MDR ) ,( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) / MUC ) ) + ( MUC * MUR ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_RAM_Server + DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Min( ( CS - RRSe ) ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.7066381156316917, "obj2": 0.14764096498331447}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( Max( MUM,Max( ( ( ( ( MUM - MLU ) - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ),( MUR - ( MUM + DS ) ) ) ),RMSe ) + Max( ( MUC + ( ( ( CS * MLU ) - CS ) - CS ) ),( ( ( RMSe * Min( RCSe ,Max( RCSe,DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) )", "obj1": 0.9379014989293362, "obj2": 0.03000702711976761}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( ( Min( ( Max( PN,PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) / ( PN * PN ) ) - Max( ( ( MDR - Min( PN ,FirstVNF_RAM ) ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ),( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( DS,Min( ( RMSe * CS ) ,RMSe ) ) - MUR ),( ( MLU - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) + ( ( ( ( MUR / RRSe ) / ( MUR + RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.19813503610525177}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( Min( AMS ,( ARS - ( AMS - DDR ) ) ) - ( ( ( ( ( PN * PN ) / Max( ARS,ACS ) ) - Max( CRS,Const ) ) - ( FirstVNF_CPU + ( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / ARS ) ) ,RRS ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) ) ) ) ) - ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( Min( ( RCSe / MUR ) ,RRSe ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) + ( Max( RCSe,CS ) + ( ( ( MUM - RMSe ) / ( RMSe / Min( DS ,( ( MUC / RMSe ) / ( RCSe - CS ) ) ) ) ) * ( MUR - Max( MUC,DS ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03777825820073309}, {"determining": "( ( ( ( ( ( PN * PN ) / ( MRS / ARS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) + ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( CS / MUR ) ) - ( MLU / MUC ) ) ) ),( MUC * RMSe ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10396852250707017}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / PN ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( RMSe,( RCSe / MUC ) ) + Max( ( MUC + ( RCSe + ( ( ( MUM / ( RCSe / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.8372591006423983, "obj2": 0.07867006546113486}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * ( ( FirstVNF_CPU / PN ) - Max( DDR,CRS ) ) ) / Min( FirstVNF_RAM ,ACS ) ) ,( ARS * FirstVNF_Mem ) ) ) - Max( Min( Min( Max( ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + ACS ) ),FirstVNF_Mem ) ,Min( ( ARS * ( Max( MRS,ACS ) - MDR ) ) ,( ( ARS + PN ) + Min( ( ARS * PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.7601713062098501, "obj2": 0.11962834580173726}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( RRSe / Min( RCSe ,CS ) ) / ( RMSe * RMSe ) ) * ( Min( MLU ,MUR ) - ( RCSe / MUR ) ) ) + RMSe ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,MUC ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6809421841541756, "obj2": 0.16752274947459944}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - ( MRS / Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - ( ( MDR * MDR ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( RMSe * MUR ) - ( Min( ( MUR / ( CS + DS ) ) ,MLU ) / ( MLU / DS ) ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17316280315061913}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,Min( MRS ,ACS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC - Min( DS ,MUM ) ) - ( ( ( DS - MUM ) / RMSe ) + Max( MUC,RCSe ) ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MUR,MUC ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.815845824411135, "obj2": 0.08998817632988353}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - Max( ACS,MDR ) ) - Min( ( ( AMS - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - ACS ) ) ) + FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RRSe + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Max( Min( Min( MUR ,Max( DS,RCSe ) ) ,CS ),Min( MUM ,RCSe ) ) ) ),( MUC + ( RCSe + ( Max( MUC,RCSe ) - RCSe ) ) ) ) + Max( MUM,RMSe ) )", "obj1": 0.8629550321199143, "obj2": 0.06580106125646266}, {"determining": "( ( Max( ( ( MRS / ARS ) - PN ),ACS ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN / ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Min( Max( MUR,RMSe ) ,( MUM * Max( ( MUM + ( RRSe + ( CS - DS ) ) ),( RMSe / ( MUM - Min( RCSe ,MUC ) ) ) ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( MUM / ( CS / RMSe ) ) - ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9657387580299786, "obj2": 0.015000517660122085}, {"determining": "( ( PN * Min( ( PN + Const ) ,MDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * FirstVNF_Mem ) * MDR ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ) * ( ( ( Max( MUR,( RCSe * ( ( CS * MUC ) + Min( MUC ,RCSe ) ) ) ) * MUC ) - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9550321199143469, "obj2": 0.019702760859482298}, {"determining": "( ( ( Max( ( ( PN * PN ) / ( Min( BR ,DDR ) * ( RRS - AMS ) ) ),Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( MDR + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * Max( Const,Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,Max( AMS,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( RMSe,( RCSe / MUC ) ) + Max( ( Min( DS ,MUR ) + ( RCSe + ( ( ( MUM / ( CS / RMSe ) ) - ( ( DS * MUR ) / ( RCSe + RCSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9657387580299786, "obj2": 0.015000517660122085}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( MUR ,( MUC - MUR ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + CS ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13925723201330586}, {"determining": "( ( PN * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ),FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RMSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( AMS - DDR ) * MRS ),( ( MDR - FirstVNF_CPU_Server ) + ( PN * ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( MUR + CS ) + Max( ( DS + CS ),( ( MLU + ( ( MUC - Min( DS ,MUM ) ) - ( ( ( DS - MUM ) / RMSe ) + Max( MUC,RCSe ) ) ) ) - CS ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13925723201330586}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( AMS,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - MUC ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.16379238946043478}, {"determining": "( ( ( ( PN * ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( AMS - DDR ) * MRS ),( ( MDR - FirstVNF_CPU_Server ) + ( PN * ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / ( MRS * ACS ) ) - PN ) ) )", "choosing": "( ( ( ( ( Min( ( MUC - MUR ) ,( MUC - ( RCSe + RRSe ) ) ) / DS ) + Min( DS ,( MLU * DS ) ) ) / DS ) + CS ) + Max( ( DS + CS ),( ( MLU + ( ( MUC - Min( DS ,MUM ) ) - ( ( ( DS - MUM ) / RMSe ) + Max( MUC,RCSe ) ) ) ) - CS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13513641233937868}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Min( ( ARS * ( FirstVNF_RAM_Server - MDR ) ) ,( ( Min( MRS ,MRS ) / ( PN * Const ) ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,Max( BR,FirstVNF_Mem ) ) ,Min( Min( DDR ,DDR ) ,Min( ( MDR / FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_Mem * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( ( DS - MUC ) + ( MUM - ( MUM / MUR ) ) ) - ( Max( MLU,CS ) + DS ) ) + MUR ) + RMSe ) - ( ( ( ( MUM / ( MLU + MLU ) ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) * ( Min( CS ,( MLU - ( Max( MUM,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / Max( MLU,( ( RRSe + ( ( RMSe * CS ) * ( MLU * RRSe ) ) ) * Max( MUC,Min( ( DS * RCSe ) ,( DS * RCSe ) ) ) ) ) ) ) )", "obj1": 0.6916488222698073, "obj2": 0.1593858546003795}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ACS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,Max( DDR,CRS ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.19813503610525177}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( FirstVNF_CPU,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.1407076821976638}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( ( ( ( ( RRSe - MUC ) * ( MUM / ( RMSe * MUR ) ) ) * RCSe ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / ( RRSe + MLU ) ) ) ) + ( RCSe + ( MLU / MLU ) ) ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( ( ( ( PN * PN ) / ( FirstVNF_Mem - ( FirstVNF_RAM_Server / PN ) ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / BR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + MUR ) ),( ( RCSe * MUC ) + ( ( ( MUC / MUC ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.11189352552878147}, {"determining": "( ( PN / MRS ) - ( ( ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) + PN ) + ( ( RRS + FirstVNF_Mem_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( MUC - MLU ) ) + ( Min( ( RMSe - ( RMSe + RMSe ) ) ,Min( RMSe ,MUM ) ) + MUR ) )", "obj1": 0.69593147751606, "obj2": 0.15559625717894493}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - ( ( MDR - ( RRS - DDR ) ) * PN ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - ( RCSe * MUC ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,( MUM + DS ) ) )", "obj1": 0.7109207708779444, "obj2": 0.1448372697507651}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) )", "choosing": "( ( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) + ( MUC * MUR ) )", "obj1": 0.708779443254818, "obj2": 0.14636962204852152}, {"determining": "( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( Max( ( ( AMS - DDR ) * MRS ),( ( MDR - FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( MUR + CS ) + Max( ( DS + CS ),( ( MLU + ( ( MUC - Min( DS ,MUM ) ) - MUR ) ) - CS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13513641233937868}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( MDR ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.6916488222698073, "obj2": 0.1593858546003795}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_RAM_Server ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( MDR / FirstVNF_RAM_Server ) ) ) ) ) - Max( BR,( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( DS * ( ( Min( ( MUR + CS ) ,MUR ) / RRSe ) + ( ( CS - ( Max( RMSe,RCSe ) + Max( MUM,MLU ) ) ) / Min( RMSe ,DS ) ) ) ) ,MUR ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MUR,MUC ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.07997465469598682}, {"determining": "( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + Max( ( DDR / RRS ),( ( PN / PN ) / Min( ARS ,( BR - MRS ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - FirstVNF_Mem ) ) ) - ( AMS - DDR ) )", "choosing": "Min( Max( ( ( ( DS * ( ( DS + ( MUC * DS ) ) - CS ) ) + ( Min( ( ( MUM - MUC ) / MUM ) ,( MUM / DS ) ) + MLU ) ) - Max( CS,RMSe ) ),( ( MUR - CS ) / ( Min( ( CS - MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( ( RCSe * RCSe ) - CS ) ) ) ) ) ,( MUC + Min( MUR ,DS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( ( ARS + ( MRS - DDR ) ) - FirstVNF_CPU ) ) * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( RRSe,RCSe ) ) - ( ( ( Max( ( RRSe + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) )", "obj1": 0.8993576017130621, "obj2": 0.047173874615453255}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( AMS + FirstVNF_RAM_Server ) * PN ) * ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) ) / ( RRS - Const ) ) ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.15559625717894493}, {"determining": "( ( ( ( Min( ( ( ( MRS * DDR ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) + MRS ) ,MRS ) - MDR ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - ACS ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( BR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( CS * ( MUC / MUC ) ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) + ( MLU - MUM ) ) ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( ( MLU / RCSe ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11404267704000755}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,( FirstVNF_CPU_Server + ( ( ACS / BR ) - Const ) ) ) ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ACS * FirstVNF_RAM ) ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ( Const / Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RRSe / RMSe ) ) - ( RMSe / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( MUM + RCSe ) + ( ( ( Max( CS,MUR ) - RCSe ) + CS ) + DS ) ) + RCSe ) ) )", "obj1": 0.7773019271948608, "obj2": 0.10966111758120582}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - PN ) + ( MRS * ACS ) ) ) ) ) + ( RRS - AMS ) ) )", "choosing": "( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( MUC - Min( DS ,MUM ) ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / RMSe ) ) - ( MLU / MUR ) ) - ( Min( DS ,RCSe ) / MUR ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( ( RMSe * ( MUC - RRSe ) ) * ( MUM * ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.8843683083511777, "obj2": 0.0553641763498166}, {"determining": "( ( ( ( ( ( FirstVNF_Mem_Server * PN ) / Min( MRS ,ACS ) ) - Max( CRS,( AMS * FirstVNF_RAM ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( PN * ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( Max( AMS,BR ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * MLU ) + Max( ( MUC + ( ( ( DS - MUM ) / RMSe ) + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - ( MLU + MUR ) ) ) ),( ( RRSe + ( MUM + RCSe ) ) + RCSe ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10765776924491}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server / ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( CRS * ( FirstVNF_RAM_Server * ( Min( Const ,ARS ) - PN ) ) ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( CS,MUM ),RMSe ) + Min( ( RRSe + ( Max( ( MUC - Min( DS ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / MLU ) / ( MUR - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.7173447537473233, "obj2": 0.141669950945915}, {"determining": "( ( ( Max( ( ( PN * PN ) / ( Min( BR ,DDR ) * ( RRS - AMS ) ) ),Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * ( PN * PN ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( RCSe / MUC ) ) + Max( ( MUC + RRSe ),( MUM + RCSe ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,( Const - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),Max( MUR,( DS * Min( CS ,RMSe ) ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( ( MLU / RCSe ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.0037448270766406817}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / BR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + MUR ) ),( ( ( MUM + ( MUM + RRSe ) ) + RRSe ) + RCSe ) ) )", "obj1": 0.7751605995717344, "obj2": 0.1108641138769305}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( ( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ) * Max( MUM,RMSe ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09961439666254895}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) + ( MLU - MUM ) ) ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09961439666254895}, {"determining": "( ( AMS - DDR ) - Max( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * Min( ACS ,RRS ) ) / Min( MRS ,( RRS * FirstVNF_CPU ) ) ) ) ) ),( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( RMSe / ( RCSe / MUR ) ) + Max( ( MUM + RCSe ),( MUC + ( ( MUM + MUM ) + ( Max( ( Max( MLU,RRSe ) - Min( CS ,MUR ) ),MUM ) - MLU ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03442580807413833}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( Min( ( RCSe / MUR ) ,RRSe ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) + ( Max( RCSe,CS ) + ( ( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( RMSe / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) * ( MUR - Max( MUC,DS ) ) ) ) )", "obj1": 0.9336188436830836, "obj2": 0.030150222122240018}, {"determining": "( ( ( ( ( ( PN * BR ) / Min( MRS ,ACS ) ) - ( PN * PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( Min( BR ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( Min( ( RCSe / MUR ) ,RRSe ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) + ( Max( RCSe,CS ) + ( ( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( RMSe / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) * ( MUR - Max( MUC,DS ) ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09402219561814379}, {"determining": "( ( AMS - DDR ) - Max( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * Min( ACS ,RRS ) ) / Min( MRS ,( RRS * FirstVNF_CPU ) ) ) ) ) ),( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( RMSe / ( RCSe / MUR ) ) + Max( ( MUM + RCSe ),( MUC + ( ( MUM + MUM ) + ( Max( ( Max( MLU,RRSe ) - Min( CS ,MUR ) ),MUM ) - MLU ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03442580807413833}, {"determining": "( Max( FirstVNF_Mem,PN ) - ( ( ( ( Max( AMS,RRS ) + ( FirstVNF_Mem_Server - MRS ) ) * ( ( RRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * FirstVNF_RAM ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ARS ) ) )", "choosing": "( Max( RRSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( Max( RMSe,MUC ) - Min( DS ,RCSe ) ) ) ),( Max( ( Min( DS ,Max( Max( RRSe,RMSe ),Min( MUM ,RCSe ) ) ) * Max( ( ( RCSe / RCSe ) + MLU ),DS ) ),( ( ( RRSe * ( RCSe / MUR ) ) * MUR ) - Min( ( MUR - MUC ) ,( MUC + ( CS - DS ) ) ) ) ) + RCSe ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10850388360002598}, {"determining": "( ( AMS - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server - MDR ) * ( RRS - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05427951011035075}], "47": [{"determining": "( ( ( DDR / DDR ) * ( AMS * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( Max( DDR,MRS ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( ( MUR * RRSe ) / ( RRSe / RRSe ) ) ) - Max( ( RRSe - ( MUM / CS ) ),MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( PN * ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) / Min( MRS ,ACS ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( ( MUC - ( RCSe + RRSe ) ) * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( DDR / CRS ) ) ) ,Max( Max( MDR,FirstVNF_CPU ),( MRS + FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( ( ( PN * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) / ( MRS - ACS ) ) ,( ARS * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( RRSe / Min( RCSe ,CS ) ) / ( RMSe * RMSe ) ) * ( Min( MLU ,MUR ) - ( RCSe / MUR ) ) ) + RMSe ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,MUC ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( Max( DDR,Min( ( MRS * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RCSe + ( ( Max( RMSe,( ( ( RRSe + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( RMSe,MUC ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( MUM + CS ) ) ,MUR ),( MLU * ( ( Min( MUC ,( RCSe / CS ) ) * MUC ) / CS ) ) ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18019505298167207}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( AMS - ( PN / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( Max( PN,FirstVNF_RAM_Server ),RRS ) / Min( ( ACS + ACS ) ,( RRS - MRS ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( ( RCSe * MUC ),RCSe ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUM * MUC ) - Max( MUC,DS ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( DS / RMSe ) / ( MUR - RCSe ) ) ) / ( ( RCSe / MLU ) * RCSe ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04967005950229464}, {"determining": "( ( ( PN * PN ) / Min( ( Min( MRS ,ACS ) - ( PN * PN ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( ARS - Max( DDR,ARS ) ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( ( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ) * Max( MUM,RMSe ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( AMS,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - MUC ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.16379238946043478}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_RAM_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ) ) + ( Min( DS ,MLU ) + Min( RMSe ,( ( Max( RRSe,Min( MUM ,RRSe ) ) * ( ( MUC * RMSe ) / DS ) ) + MUC ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09954240113341752}, {"determining": "( Min( AMS ,( ARS - ( AMS - DDR ) ) ) - ( ( ( ( ( PN * PN ) / Max( ARS,ACS ) ) - Max( CRS,Const ) ) - ( FirstVNF_CPU + ( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / ARS ) ) ,RRS ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) ) ) ) ) - ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( Min( ( RCSe / MUR ) ,RRSe ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) + ( Max( RCSe,CS ) + ( ( ( MUM - RMSe ) / ( RMSe / Min( DS ,( ( MUC / RMSe ) / ( RCSe - CS ) ) ) ) ) * ( MUR - Max( MUC,DS ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03777825820073309}, {"determining": "( ( PN * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * ( ( Max( RMSe,CS ) / Min( MLU ,( MUM / CS ) ) ) / ( ( Min( MLU ,DS ) + MUM ) + ( MUM - MLU ) ) ) ) ) * ( ( RMSe - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9486081370449678, "obj2": 0.022662554418957606}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.17391131816939562}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,BR ) ) - ( FirstVNF_RAM_Server + BR ) ) * ( Min( ( MDR - ARS ) ,( FirstVNF_RAM / RRS ) ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( MUM - CS ) / ( Min( ( ( MUC + RCSe ) - ( MUC + MUR ) ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ),( MUC / DS ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( ( PN * PN ) / ( Min( AMS ,FirstVNF_Mem_Server ) * ( ARS * CRS ) ) ) - ( ( FirstVNF_Mem - ( ( PN - FirstVNF_Mem ) / MRS ) ) + MDR ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( MUC / ( CS / RMSe ) ) * ( MLU / MUR ) ) ) ),CS ) ) )", "obj1": 0.6595289079229122, "obj2": 0.19191321904818692}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - ( MRS / Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - ( ( MDR * MDR ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( RMSe * MUR ) - ( Min( ( MUR / ( CS + DS ) ) ,MLU ) / ( MLU / DS ) ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17316280315061913}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) / ( ( ( ( PN * ACS ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( MRS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) ) - ( ( ( AMS / RRS ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / CS ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( MUR + DS ) / RRSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUC,MUR ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06173517769859165}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( MRS * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ,( ( PN + ACS ) + Max( CRS,PN ) ) ) ) ,( Min( RRS ,FirstVNF_CPU ) - Min( ( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,Const ) ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS + RRSe ) - CS ) + ( RMSe * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.12406192703022473}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( DDR * MDR ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) + ( MLU - MUM ) ) ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( ( DS - RCSe ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8051391862955032, "obj2": 0.09524964737978209}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( Max( DDR,Min( ( MRS * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RCSe + ( ( Max( RMSe,( ( ( RRSe + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( RMSe,MUC ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( RMSe + CS ) ) ,MUR ),( MLU * ( ( Min( MUC ,( RCSe / CS ) ) * MUC ) / CS ) ) ) ) )", "obj1": 0.6680942184154176, "obj2": 0.1874263708150455}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - AMS ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / BR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + MUR ) ),( ( ( MUM + ( MUM + RRSe ) ) + RRSe ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10757693403942743}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / RMSe ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6638115631691649, "obj2": 0.18780615096750003}, {"determining": "( ( ( FirstVNF_Mem * PN ) + ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( ARS - AMS ) ) / ( DDR * FirstVNF_CPU ) ),( MDR / FirstVNF_RAM_Server ) ) ) ) ) - Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( MUM,Max( RCSe,MUC ) ),RMSe ) + Max( Max( Max( Max( ( MUM / ( DS - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.8758029978586723, "obj2": 0.05981769338894146}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( MDR * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( CS / MUR ) ) - RCSe ) ) ),Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.1028624325086745}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( FirstVNF_RAM_Server / MDR ),( ( Min( FirstVNF_CPU_Server ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) ) ) ) ) - Min( ( PN + ( BR + BR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + ( DS * Max( Max( DS,Min( MUM ,( CS / RMSe ) ) ),MUM ) ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09746944224362318}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server / ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( CRS * ( FirstVNF_RAM_Server * ( Min( Const ,ARS ) - PN ) ) ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( CS,MUM ),RMSe ) + Min( ( RRSe + ( Max( ( MUC - Min( DS ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / MLU ) / ( MUR - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.7173447537473233, "obj2": 0.141669950945915}, {"determining": "( ( ( PN * PN ) / Min( MRS ,BR ) ) - Max( ( RRS - AMS ),( FirstVNF_RAM + AMS ) ) )", "choosing": "( Min( RCSe ,Max( MUM,CS ) ) + Max( ( Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Min( MUC ,MUM ) ) ) ),( CS / MUR ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( PN * Min( ( PN + Const ) ,MDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * FirstVNF_Mem ) * MDR ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ) * ( ( ( Max( MUR,( RCSe * ( ( CS * MUC ) + Min( MUC ,RCSe ) ) ) ) * MUC ) - Min( MUM ,( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9550321199143469, "obj2": 0.019702760859482298}, {"determining": "( ( PN * ( PN * ( PN / Max( CRS,( RRS - FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - MDR ) * ( Max( MRS,( FirstVNF_RAM * MDR ) ) * DDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( DS ,RCSe ) * Max( ( RCSe + ( ( ( ( RMSe / ( MUC / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) + RCSe ) ),Max( Max( Max( ( MUM - ( MLU - RRSe ) ),RCSe ),( MUC - DS ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.017830347321161958}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( MUM + ( Min( ( ( MUM - MUC ) / MLU ) ,( MUM / DS ) ) + RMSe ) ) - Max( CS,RMSe ) ),( ( MUR - CS ) / ( Min( ( CS - MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( ( RCSe * RCSe ) - CS ) ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.03936676971681004}, {"determining": "( ( ( ( ( ( ARS * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - DDR ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - AMS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( CRS / PN ) ,( PN * PN ) ) ) + ( RRS - AMS ) ) )", "choosing": "( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,RMSe ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / RMSe ) ) - ( DS + ( MUC - CS ) ) ) - ( Min( DS ,RCSe ) / MUR ) ) ) ),Max( Max( ( ( ( MLU - CS ) / MUM ) * ( CS * MUR ) ),Min( MUR ,( MUM + DS ) ) ),( ( RMSe * ( MUC - RRSe ) ) * ( MUM * CS ) ) ) ) )", "obj1": 0.8458244111349036, "obj2": 0.07458730764465374}, {"determining": "( Min( ( ( Min( Min( Min( ( ACS * FirstVNF_RAM ) ,Max( AMS,MDR ) ) ,ACS ) ,MRS ) + ( BR - FirstVNF_RAM ) ) / PN ) ,Min( MDR ,( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) - Max( Min( Min( Max( BR,AMS ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,Max( CRS,DDR ) ) ) ,Min( Min( FirstVNF_CPU ,MDR ) ,( CRS - MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / MUC ) / MUR ) + Max( ( RRSe + DS ),( ( MLU * MUM ) - Max( ( ( MUC * ( DS * Max( RMSe,MUC ) ) ) * ( MUM * MUC ) ),MUM ) ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( AMS - DDR ) - DDR )", "choosing": "( ( RMSe / ( RCSe / MUR ) ) + ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / MRS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( MDR ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - Max( RMSe,MUC ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16066154641160726}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,FirstVNF_RAM ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,MUC ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6809421841541756, "obj2": 0.16752274947459944}, {"determining": "( ( Min( RRS ,Max( PN,ACS ) ) * PN ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( MUR / DS ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Min( ( CRS - MDR ) ,( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) / MUC ) ) + ( MUC * MUR ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - ( FirstVNF_Mem + Min( Const ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.15018998151383628}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_RAM_Server + DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Min( ( CS - RRSe ) ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.7066381156316917, "obj2": 0.14764096498331447}, {"determining": "( ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( ( ARS + ( MRS - DDR ) ) - FirstVNF_CPU ) ) * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( CRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( ( RRSe / Min( RCSe ,CS ) ) / ( RMSe * RMSe ) ) * ( Min( MLU ,MUR ) - ( RCSe / MUR ) ) ) + RMSe ) + Max( RRSe,RCSe ) ) - ( ( ( Max( ( RRSe + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) )", "obj1": 0.8993576017130621, "obj2": 0.047173874615453255}, {"determining": "( ( ( ( Min( ( ( ( MRS * DDR ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) + MRS ) ,MRS ) - MDR ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - ACS ) - ( AMS - DDR ) ) * Min( AMS ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( BR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( CS * Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) + ( MLU - MUM ) ) ) ) ) + ( Min( DS ,MLU ) + Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( ( MLU / RCSe ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.02927230108858599}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / Max( FirstVNF_Mem_Server,( AMS / FirstVNF_CPU ) ) ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( DDR - ( ( RRS * PN ) / ( AMS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( ( MLU * DS ) / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + RRSe ) ) ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08556520324879}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.19813503610525177}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - Max( ACS,MDR ) ) - Min( ( ( AMS - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - ACS ) ) ) + FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RRSe + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Max( Min( Min( MUR ,Max( DS,RCSe ) ) ,CS ),Min( MUM ,RCSe ) ) ) ),( MUC + ( RCSe + ( Max( MUC,RCSe ) - RCSe ) ) ) ) + Max( MUM,RMSe ) )", "obj1": 0.8629550321199143, "obj2": 0.06580106125646266}, {"determining": "( ( ( Min( ACS ,MRS ) / ( PN + PN ) ) - Max( DDR,( CRS * FirstVNF_CPU ) ) ) - Min( Max( ( ( ( Min( ( CRS * FirstVNF_Mem_Server ) ,FirstVNF_Mem ) * FirstVNF_Mem_Server ) / BR ) * MRS ),( Const + MDR ) ) ,( ACS / Const ) ) )", "choosing": "( Max( Max( Min( RMSe ,RMSe ),RMSe ),( ( MLU / Min( ( CS + ( ( CS / RCSe ) * RRSe ) ) ,( MUR - Max( CS,MUC ) ) ) ) + MUR ) ) + ( ( DS + MUM ) + ( CS + ( ( ( MUM - MUR ) * MLU ) + ( ( RMSe / ( ( CS - MUR ) / ( RMSe * CS ) ) ) - ( MUC / Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.00766784038951006}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( AMS - ( ( RRS * PN ) / ( AMS - ACS ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( MUM,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + MUC ) ) ) ) )", "obj1": 0.8329764453961456, "obj2": 0.08135788773397316}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / PN ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( RMSe,( RCSe / MUC ) ) + Max( ( MUC + ( RCSe + ( ( ( MUM / ( RCSe / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.8372591006423983, "obj2": 0.07867006546113486}, {"determining": "( Max( Max( MRS,ACS ),FirstVNF_RAM ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( RRSe / ( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( Max( MLU,RMSe ) - CS ) ) ) ) ) + Max( RCSe,( ( MLU * MUM ) - ( ( MUM + MUC ) / Max( RMSe,MUC ) ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09402219561814379}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( Max( ( DDR / RRS ),( ( PN / PN ) / Min( ARS ,( BR - MRS ) ) ) ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ),Max( ( MUM * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ),( MUR - ( MUM + DS ) ) ) ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( RMSe * Min( RCSe ,Max( ( CS / RMSe ),DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) )", "obj1": 0.867237687366167, "obj2": 0.0648701549711752}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * ( ( FirstVNF_CPU / PN ) - Max( DDR,CRS ) ) ) / Min( FirstVNF_RAM ,ACS ) ) ,( ARS * FirstVNF_Mem ) ) ) - Max( Min( Min( Max( ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + ACS ) ),FirstVNF_Mem ) ,Min( ( ARS * ( Max( MRS,ACS ) - MDR ) ) ,( ( ARS + PN ) + Min( ( ARS * PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.7601713062098501, "obj2": 0.11962834580173726}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * Max( ( FirstVNF_CPU_Server / Min( Const ,ACS ) ),ACS ) ) ) - Min( AMS ,( PN * FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / MUR ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.8201284796573876, "obj2": 0.0878550701585048}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,Min( MRS ,ACS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC - Min( DS ,MUM ) ) - ( ( ( DS - MUM ) / RMSe ) + Max( MUC,RCSe ) ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MUR,MUC ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.815845824411135, "obj2": 0.08998817632988353}, {"determining": "( ( ( Max( ( ( PN * PN ) / ( Min( BR ,DDR ) * ( RRS - AMS ) ) ),Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( MDR + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * Max( Const,Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,Max( AMS,( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( RMSe,( RCSe / MUC ) ) + Max( ( Min( DS ,MUR ) + ( RCSe + ( ( ( MUM / ( CS / RMSe ) ) - ( ( DS * MUR ) / ( RCSe + RCSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9657387580299786, "obj2": 0.015000517660122085}, {"determining": "( ( Max( ( ( MRS / ARS ) - PN ),ACS ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN / ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Min( Max( MUR,RMSe ) ,( MUM * Max( ( MUM + ( RRSe + ( CS - DS ) ) ),( RMSe / ( MUM - Min( RCSe ,MUC ) ) ) ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( MUM / ( CS / RMSe ) ) - ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9657387580299786, "obj2": 0.015000517660122085}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( Max( ( MRS * ( Min( FirstVNF_Mem ,ARS ) / AMS ) ),( MDR + ( MDR + MRS ) ) ) - PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.8137044967880086, "obj2": 0.09081884418243139}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / ( ( DS * RMSe ) / MUC ) ) + ( MUC * MUR ) )", "obj1": 0.728051391862955, "obj2": 0.13777440146794764}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( Const / AMS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,( ( ( PN + PN ) / Min( PN ,MRS ) ) - Max( DDR,CRS ) ) ),Min( Min( ( Max( AMS,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / MUR ) + ( RMSe - MUC ) )", "obj1": 0.6937901498929336, "obj2": 0.15886444227971713}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - Max( ACS,MDR ) ) - Min( ( ( AMS - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - ACS ) ) ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( ( DS - MUC ) + ( MUM - ( MUM / MUR ) ) ) - ( Max( MLU,CS ) + DS ) ) + MUR ) + RMSe ) - ( ( ( ( MUM / ( MLU + MLU ) ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) * ( Min( CS ,( MLU - ( Max( MUM,MUR ) + RCSe ) ) ) / ( ( RCSe * MUC ) / Max( MLU,( ( RRSe + ( ( RMSe * CS ) * ( MLU * RRSe ) ) ) * Max( MUC,Min( ( DS * RCSe ) ,( DS * RCSe ) ) ) ) ) ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06580106125646266}, {"determining": "( ( Min( ( Max( PN,PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) / ( PN * PN ) ) - Max( ( ( MDR - Min( PN ,FirstVNF_RAM ) ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ),( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( DS,Min( ( RMSe * CS ) ,RMSe ) ) - MUR ),( ( MLU - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) + ( ( ( ( MUR / RRSe ) / ( MUR + RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.19813503610525177}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( FirstVNF_CPU,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.1407076821976638}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( RRSe / Min( RCSe ,CS ) ) / ( RMSe * RMSe ) ) * ( Min( MLU ,MUR ) - ( RCSe / MUR ) ) ) + RMSe ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,MUC ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6809421841541756, "obj2": 0.16752274947459944}, {"determining": "( ( AMS - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server - MDR ) * ( RRS - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( MUM,MLU ),RMSe ) + Max( Max( Max( Max( ( MUM / ( MLU - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05427951011035075}, {"determining": "( ( PN * ( ( DDR / ( FirstVNF_CPU / PN ) ) - CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( FirstVNF_CPU - MDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,MLU ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * ( ( Max( RMSe,CS ) / Min( MLU ,( MUM / CS ) ) ) / ( ( Min( MLU ,DS ) + MUM ) + ( MUM - MLU ) ) ) ) ) * ( ( RMSe - Min( ( ( Min( MLU ,DS ) + MUM ) + ( MUM - MLU ) ) ,MUM ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( ( CRS - FirstVNF_RAM ) * FirstVNF_Mem_Server ) + ( Min( ( MDR - FirstVNF_Mem ) ,( FirstVNF_RAM / RRS ) ) * Min( ( ARS / ACS ) ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUM ) ) ,CS ) ) - Max( Min( Min( ( DS - ( ( RCSe + RRSe ) / MUC ) ) ,MLU ) ,( CS - ( CS * MLU ) ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9079229122055674, "obj2": 0.045888196281828934}, {"determining": "( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) ) - ( ( ( ( Max( AMS,RRS ) + ( FirstVNF_Mem_Server - MRS ) ) * ( ( RRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * FirstVNF_RAM ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ARS ) ) )", "choosing": "( Max( RRSe,Max( MUM,CS ) ) + CS )", "obj1": 0.7301927194860813, "obj2": 0.13666227304258521}, {"determining": "( ( AMS - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server - MDR ) * ( RRS - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05427951011035075}, {"determining": "( ( ( Max( ( ( PN * PN ) / ( Min( BR ,DDR ) * ( RRS - AMS ) ) ),Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * ( PN * PN ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( RCSe / MUC ) ) + Max( ( MUC + RRSe ),( MUM + RCSe ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - Min( Max( BR,FirstVNF_Mem ) ,( ( CRS * ( DDR / FirstVNF_Mem_Server ) ) / ACS ) ) ) - Min( ( ( MDR * ( AMS - ( Min( AMS ,Min( PN ,MDR ) ) / Min( ( Const * AMS ) ,FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,FirstVNF_Mem_Server ) ) - Max( DDR,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC - ( RMSe / ( ( ( MUC * CS ) / ( MUR / MUM ) ) + ( ( RMSe - RRSe ) / CS ) ) ) ) + ( Min( ( MUR - ( MUC / DS ) ) ,DS ) - ( RMSe / RMSe ) ) ) + Max( RMSe,Min( ( ( ( RRSe * RCSe ) / ( Max( MUC,MUM ) * DS ) ) / RCSe ) ,( Max( Min( RRSe ,Min( RRSe ,MUC ) ),Max( ( MUC + CS ),Max( RRSe,RCSe ) ) ) - MUM ) ) ) ) * MUC )", "obj1": 0.7408993576017131, "obj2": 0.12957359169191154}, {"determining": "( ( ( PN * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( ( ( FirstVNF_Mem * PN ) * ( AMS * MDR ) ) / Max( Max( BR,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) - Min( Max( ( ( AMS - DDR ) * MRS ),( ( CRS - Min( ( Const * CRS ) ,FirstVNF_RAM ) ) - ( MDR - Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),Max( ARS,FirstVNF_CPU ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( MUR * MLU ) - MUC ) + ( RRSe * DS ) )", "obj1": 0.9400428265524625, "obj2": 0.0263622550114003}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Max( CRS,DDR ) ,( CRS * DDR ) ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Min( DS ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( DS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13232472136406428}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - ( ( MDR - ( RRS - DDR ) ) * PN ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.1448372697507651}, {"determining": "( ( ( Max( ( ( PN * PN ) / ( Min( BR ,DDR ) * ( RRS - AMS ) ) ),Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * ( PN * PN ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( ( FirstVNF_RAM + AMS ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( RCSe / MUC ) ) + MUC )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) )", "choosing": "( ( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) + ( MUC * MUR ) )", "obj1": 0.708779443254818, "obj2": 0.14636962204852152}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Max( CRS,DDR ) ,( CRS * DDR ) ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,( ( PN * PN ) / Min( ( FirstVNF_Mem_Server / Max( ARS,BR ) ) ,( ARS * CRS ) ) ) ) )", "choosing": "( Max( Max( MUM,( RCSe + ( ( RMSe / ( ( MUR * RRSe ) / ( RRSe / RRSe ) ) ) - ( MLU / MUR ) ) ) ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Min( DS ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( DS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13439511441618626}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( ( ( ( ( PN * PN ) / ( FirstVNF_Mem - ( FirstVNF_RAM_Server / PN ) ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / BR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + MUR ) ),( ( RCSe * MUC ) + ( ( ( MUC / MUC ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.11189352552878147}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_RAM_Server ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( MDR / FirstVNF_RAM_Server ) ) ) ) ) - Max( BR,( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( DS * ( ( Min( ( MUR + CS ) ,MUR ) / RRSe ) + ( ( CS - ( Max( RMSe,RCSe ) + Max( MUM,MLU ) ) ) / Min( RMSe ,DS ) ) ) ) ,MUR ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MUR,MUC ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.07997465469598682}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( Max( AMS,BR ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * MLU ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11358240206362111}, {"determining": "( ( ( ( ( ( PN * PN ) / ( MRS / ARS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) + ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( CS / MUR ) ) - ( MLU / MUC ) ) ) ),( MUC * RMSe ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10396852250707017}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,( FirstVNF_CPU_Server + ( ( ACS / BR ) - Const ) ) ) ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ACS * FirstVNF_RAM ) ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ( Const / Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RRSe / RMSe ) ) - ( RMSe / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( MUM + RCSe ) + ( ( ( Max( CS,MUR ) - RCSe ) + CS ) + DS ) ) + RCSe ) ) )", "obj1": 0.7773019271948608, "obj2": 0.10966111758120582}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( DDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MLU + ( MUR / Max( MUC,MUM ) ) ),Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.0868444723813452}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - ( CRS - PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( Max( ACS,FirstVNF_CPU_Server ) / MDR ) ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( MUC / RMSe ) ) - ( CS / MLU ) ) - ( MLU / MUR ) ) ) ),Max( ( MUM + RCSe ),( ( MLU + ( ( MLU / RCSe ) + DS ) ) - CS ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10396852250707017}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - ( ( MDR - ( RRS - DDR ) ) * PN ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - ( RCSe * MUC ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,( MUM + DS ) ) )", "obj1": 0.7002141327623126, "obj2": 0.15150613037564106}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( Max( AMS,BR ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,MLU ),RMSe ) + Max( Max( Max( Max( ( MUM / ( MLU - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11434872560354574}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( ( ( RCSe * RMSe ) / DS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.9143468950749465, "obj2": 0.04146876355387279}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( BR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( Max( AMS,BR ) * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM + MDR ) ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( MLU / MUR ) - ( RMSe / ( CS / MLU ) ) ) - Max( ( RMSe / ( MUM / RMSe ) ),MUC ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.07673306304734444}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( Max( Max( MDR,FirstVNF_CPU ),( MRS + FirstVNF_RAM ) ) / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( Min( ( RCSe / MUR ) ,RRSe ) * ( MLU - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) + ( Max( RCSe,CS ) + ( DS / ( MUM * Max( RCSe,Min( RMSe ,DS ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.0322857237724867}, {"determining": "( ( AMS - DDR ) - Max( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * Min( ACS ,RRS ) ) / Min( MRS ,( RRS * FirstVNF_CPU ) ) ) ) ) ),( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( RMSe / ( RCSe / MUR ) ) + Max( ( MUM + RCSe ),( MUC + ( ( MUM + MUM ) + ( Max( ( Max( MLU,RRSe ) - Min( CS ,MUR ) ),MUM ) - MLU ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03442580807413833}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( ( RMSe / ( CS / RMSe ) ),MUC ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9336188436830836, "obj2": 0.030150222122240018}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / MDR ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( Min( ( RCSe / MUR ) ,RRSe ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) + ( Max( RCSe,CS ) + ( ( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( RMSe / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) * ( MUR - Max( MUC,Max( ( RMSe / ( CS / RMSe ) ),MUC ) ) ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0018724135383203408}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ),Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ),( MUR - ( MUM + DS ) ) ) ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( RMSe * Min( RCSe ,Max( ( CS / RMSe ),DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) )", "obj1": 0.9143468950749465, "obj2": 0.04146876355387279}], "48": [{"determining": "( ( ( DDR / DDR ) * ( AMS * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( Max( DDR,MRS ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( ( MUR * RRSe ) / ( RRSe / RRSe ) ) ) - Max( ( RRSe - ( MUM / CS ) ),MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * ( RRS - AMS ) ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / MRS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( MDR ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - Max( RMSe,MUC ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( ( MUM - CS ),MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( PN * ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) / Min( MRS ,ACS ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( ( MUC - ( RCSe + RRSe ) ) * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( DDR / CRS ) ) ) ,Max( Max( MDR,FirstVNF_CPU ),( MRS + FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( ( ( PN * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) / ( MRS - ACS ) ) ,( ARS * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( RRSe / Min( RCSe ,CS ) ) / ( RMSe * RMSe ) ) * ( Min( MLU ,MUR ) - ( RCSe / MUR ) ) ) + RMSe ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,MUC ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( Max( DDR,Min( ( MRS * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RCSe + ( ( Max( RMSe,( ( ( RRSe + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( RMSe,MUC ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( MUM + CS ) ) ,MUR ),( MLU * ( ( Min( MUC ,( RCSe / CS ) ) * MUC ) / CS ) ) ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18019505298167207}, {"determining": "( ( ( PN * PN ) / Min( MRS ,BR ) ) - Max( ( RRS - AMS ),( FirstVNF_RAM + AMS ) ) )", "choosing": "( Min( RCSe ,Max( MUM,CS ) ) + Max( ( Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Min( MUC ,MUM ) ) ) ),( CS / MUR ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( AMS,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - MUC ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.16379238946043478}, {"determining": "( ( ( PN * ACS ) / ( CRS - ( ( ( DDR * FirstVNF_CPU_Server ) + BR ) + ( ( Min( ( FirstVNF_Mem + AMS ) ,( AMS - ACS ) ) * BR ) / ( MDR * BR ) ) ) ) ) - Max( ( Max( Max( AMS,FirstVNF_CPU ),CRS ) - ( ( PN * RRS ) / Min( MRS ,ACS ) ) ),( CRS - Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( ( BR / DDR ) - MDR ) ,( PN * PN ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( CS - Max( RRSe,MLU ) ) - ( CS + RMSe ) ) * DS ) + DS ) / DS ) + CS ) * ( ( ( MUM / MLU ) / Max( ( RCSe - ( ( ( MLU * MUR ) / RMSe ) / DS ) ),RCSe ) ) / ( RRSe + RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15244312790730077}, {"determining": "( ( ACS / CRS ) - Max( ( CRS * Min( ( Max( ( ( AMS - PN ) - ( DDR * FirstVNF_RAM_Server ) ),( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / MUR ) ,Max( RRSe,( MUM * CS ) ) )", "obj1": 0.6659528907922913, "obj2": 0.18686729213412878}, {"determining": "( ( PN * ( PN * ( PN / Max( CRS,( RRS - FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( PN * FirstVNF_Mem ) * MDR ) / ( RRS - FirstVNF_CPU ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( DS ,RCSe ) * Max( ( RCSe + ( ( ( ( RMSe / ( MUC / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) + RCSe ) ),Max( Max( Max( ( MUM - ( MLU - RRSe ) ),RCSe ),( MUC - DS ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( Min( MLU ,DS ),MUC ) ) ) ) ) ) )", "obj1": 0.9486081370449678, "obj2": 0.022532590520522165}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( Const / AMS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,( ( ( PN + PN ) / Min( PN ,MRS ) ) - Max( DDR,CRS ) ) ),Min( Min( ( Max( AMS,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / MUR ) + ( RMSe - MUC ) )", "obj1": 0.6937901498929336, "obj2": 0.15886444227971713}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MDR ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( ( PN / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ),( FirstVNF_RAM_Server / RRS ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUM + CS ),RMSe ) + ( RMSe - MUM ) )", "obj1": 0.9550321199143469, "obj2": 0.01966034215236357}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.17391131816939562}, {"determining": "( ( ( PN * PN ) / ( Min( AMS ,FirstVNF_Mem_Server ) * ( ARS * CRS ) ) ) - ( ( FirstVNF_Mem - ( ( PN - FirstVNF_Mem ) / MRS ) ) + MDR ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( MUC / ( CS / RMSe ) ) * ( MLU / MUR ) ) ) ),CS ) ) )", "obj1": 0.6595289079229122, "obj2": 0.19191321904818692}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - ( MRS / Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - ( ( MDR * MDR ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( RMSe * MUR ) - ( Min( ( MUR / ( CS + DS ) ) ,MLU ) / ( MLU / DS ) ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17316280315061913}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( MRS * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ,( ( PN + ACS ) + Max( CRS,PN ) ) ) ) ,( Min( RRS ,FirstVNF_CPU ) - Min( ( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,Const ) ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS + RRSe ) - CS ) + ( RMSe * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.12406192703022473}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.9336188436830836, "obj2": 0.030150222122240014}, {"determining": "( Max( Max( MRS,ACS ),FirstVNF_RAM ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( RRSe / ( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( Max( MLU,RMSe ) - CS ) ) ) ) ) + Max( RCSe,( ( MLU * MUM ) - ( ( MUM + MUC ) / Max( RMSe,MUC ) ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09402219561814379}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,( FirstVNF_CPU_Server + ( ( ACS / BR ) - Const ) ) ) ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ACS * FirstVNF_RAM ) ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ( Const / Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RRSe / RMSe ) ) - ( RMSe / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( MUM + RCSe ) + ( ( ( Max( CS,MUR ) - RCSe ) + CS ) + DS ) ) + RCSe ) ) )", "obj1": 0.7773019271948608, "obj2": 0.10966111758120582}, {"determining": "( ( AMS - DDR ) - Max( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * Min( ACS ,RRS ) ) / Min( MRS ,( RRS * FirstVNF_CPU ) ) ) ) ) ),( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( RMSe / ( RCSe / MUR ) ) + Max( ( MUM + RCSe ),( MUC + ( ( MUM + MUM ) + ( Max( ( Max( MLU,RRSe ) - Min( CS ,MUR ) ),MUM ) - MLU ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03442580807413833}, {"determining": "( ( ( PN * PN ) / Min( ( Min( MRS ,ACS ) - ( PN * PN ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( ARS - Max( DDR,ARS ) ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( ( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ) * Max( MUM,RMSe ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( Min( AMS ,( ARS - ( AMS - DDR ) ) ) - ( ( ( ( ( PN * PN ) / Max( ARS,ACS ) ) - Max( CRS,Const ) ) - ( FirstVNF_CPU + ( Min( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / ARS ) ) ,RRS ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) ) ) ) ) - ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( Min( ( RCSe / MUR ) ,RRSe ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) + ( Max( RCSe,CS ) + ( ( ( MUM - RMSe ) / ( RMSe / Min( DS ,( ( MUC / RMSe ) / ( RCSe - CS ) ) ) ) ) * ( MUR - Max( MUC,DS ) ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03777825820073309}, {"determining": "( ( PN * ( PN * PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * FirstVNF_Mem ) * ( PN - MDR ) ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC + MUR ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * DS ) ) * Max( ( MUC + ( RCSe + ( ( ( RMSe / ( MUM / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),RMSe ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( ( Max( ( ( PN * PN ) / ( Min( BR ,DDR ) * ( RRS - AMS ) ) ),Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * ( PN * ARS ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( ( MUC + RRSe ),( MUM + RCSe ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( ( ( ( ( ( ARS * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - DDR ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - AMS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( CRS / PN ) ,( PN * PN ) ) ) + ( RRS - AMS ) ) )", "choosing": "( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,RMSe ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / RMSe ) ) - ( DS + ( MUC - CS ) ) ) - ( Min( DS ,RCSe ) / MUR ) ) ) ),Max( Max( ( ( ( MLU - CS ) / MUM ) * ( CS * MUR ) ),Min( MUR ,( MUM + DS ) ) ),( ( RMSe * ( MUC - RRSe ) ) * ( MUM * CS ) ) ) ) )", "obj1": 0.8458244111349036, "obj2": 0.07458730764465374}, {"determining": "( Min( ( ( Min( Min( Min( ( ACS * FirstVNF_RAM ) ,Max( AMS,MDR ) ) ,ACS ) ,MRS ) + ( BR - FirstVNF_RAM ) ) / PN ) ,Min( MDR ,( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) - Max( Min( Min( Max( BR,AMS ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,Max( CRS,DDR ) ) ) ,Min( Min( FirstVNF_CPU ,MDR ) ,( CRS - MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / MUC ) / MUR ) + Max( ( RRSe + DS ),( ( MLU * MUM ) - Max( ( ( MUC * ( DS * Max( RMSe,MUC ) ) ) * ( MUM * MUC ) ),MUM ) ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( MDR / Min( MRS ,FirstVNF_RAM ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6809421841541756, "obj2": 0.16752274947459944}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Max( CRS,DDR ) ,( CRS * DDR ) ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,( ( PN * PN ) / Min( ( FirstVNF_Mem_Server / Max( ARS,BR ) ) ,( ARS * CRS ) ) ) ) )", "choosing": "( Max( Max( MUM,( RCSe + ( ( RMSe / ( ( MUR * RRSe ) / ( RRSe / RRSe ) ) ) - ( MLU / MUR ) ) ) ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Min( DS ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( DS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13439511441618626}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( Max( Max( MDR,FirstVNF_CPU ),( MRS + FirstVNF_RAM ) ) / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( Min( ( RCSe / MUR ) ,RRSe ) * ( MLU - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) + ( Max( RCSe,CS ) + ( DS / ( MUM * Max( RCSe,Min( RMSe ,DS ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.0322857237724867}, {"determining": "( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( DDR,CRS ) ) - Min( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) ) - ( ( ( ( Max( AMS,RRS ) + ( FirstVNF_Mem_Server - MRS ) ) * ( ( RRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * FirstVNF_RAM ) / ( Min( CRS ,FirstVNF_CPU_Server ) / ARS ) ) )", "choosing": "( Max( RRSe,Max( MUM,CS ) ) + CS )", "obj1": 0.7237687366167024, "obj2": 0.1393967573714291}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) / ( ( ( ( PN * ACS ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( MRS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) ) - ( ( ( AMS / RRS ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / CS ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( MUR + DS ) / RRSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUC,MUR ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06173517769859165}, {"determining": "( ( ( PN * PN ) / Min( PN ,( ARS * CRS ) ) ) - Max( Min( Min( ( ARS * ( FirstVNF_RAM_Server - MDR ) ) ,( ( ( ( PN / ACS ) * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Min( ( CRS - MDR ) ,( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUR ,( ( RCSe * RRSe ) / MUC ) ) + ( MUC * MUR ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( AMS - ( PN / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( Max( PN,FirstVNF_RAM_Server ),RRS ) / Min( ( ACS + ACS ) ,( RRS - MRS ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( ( RCSe * MUC ),RCSe ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUM * MUC ) - Max( MUC,DS ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( DS / RMSe ) / ( MUR - RCSe ) ) ) / ( ( RCSe / MLU ) * RCSe ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04967005950229464}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / Max( FirstVNF_Mem_Server,( AMS / FirstVNF_CPU ) ) ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( DDR - ( ( RRS * PN ) / ( AMS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( ( MLU * DS ) / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + RRSe ) ) ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08556520324879}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( ACS ,MRS ) ) + Max( CRS,PN ) ) - ( ( ( FirstVNF_RAM_Server + ( DDR - PN ) ) - ( MRS - Min( PN ,BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / BR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUM + RRSe ),( ( ( MUM + Min( RMSe ,RRSe ) ) + RRSe ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10632230858649157}, {"determining": "( ( Min( ( Max( PN,PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) / ( PN * PN ) ) - Max( ( ( MDR - Min( PN ,FirstVNF_RAM ) ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ),( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( DS,Min( ( RMSe * CS ) ,RMSe ) ) - MUR ),( ( MLU - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) + ( ( ( ( MUR / RRSe ) / ( MUR + RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.19813503610525177}, {"determining": "( ( ( ( ( ( PN * PN ) / ( FirstVNF_Mem - ( FirstVNF_RAM_Server / PN ) ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / BR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + MUR ) ),( ( RCSe * MUC ) + ( ( ( MUC / MUC ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.11189352552878147}, {"determining": "( ( AMS - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server - MDR ) * ( RRS - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05427951011035075}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - ( ( MDR - ( RRS - DDR ) ) * PN ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.1448372697507651}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( CS / MUR ) ) - ( MLU / MUR ) ) ) ),Max( ( MUM + RCSe ),( ( MLU + ( MUM + DS ) ) - CS ) ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10174511785829474}, {"determining": "( ( AMS - ( MDR / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( RCSe / MLU ) * RCSe ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04967005950229464}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( FirstVNF_RAM_Server / MDR ),( ( Min( FirstVNF_CPU_Server ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) ) ) ) ) - Min( ( PN + ( BR + BR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + ( DS * Max( Max( DS,Min( MUM ,( CS / RMSe ) ) ),MUM ) ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09746944224362318}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / PN ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( RMSe,( RCSe / MUC ) ) + Max( ( MUC + ( RCSe + ( ( ( MUM / ( RCSe / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.8372591006423983, "obj2": 0.07867006546113486}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_RAM_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ) ) + ( Min( DS ,MLU ) + Min( RMSe ,( ( Max( RRSe,Min( MUM ,RRSe ) ) * ( ( MUC * RMSe ) / DS ) ) + MUC ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09954240113341752}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * ( ( FirstVNF_CPU / PN ) - Max( DDR,CRS ) ) ) / Min( FirstVNF_RAM ,ACS ) ) ,( ARS * FirstVNF_Mem ) ) ) - Max( Min( Min( Max( ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + ACS ) ),FirstVNF_Mem ) ,Min( ( ARS * ( Max( MRS,ACS ) - MDR ) ) ,( ( ARS + PN ) + Min( ( ARS * PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.7601713062098501, "obj2": 0.11962834580173726}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Min( DS ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,MLU ) )", "obj1": 0.715203426124197, "obj2": 0.1429137657439783}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / CS ) ) - ( CS / MUR ) ) - ( MLU / MUR ) ) ) ),Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08764623849800922}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,Min( MRS ,ACS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC - Min( DS ,MUM ) ) - ( ( ( DS - MUM ) / RMSe ) + Max( MUC,RCSe ) ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MUR,MUC ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.815845824411135, "obj2": 0.08998817632988353}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - DDR ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - AMS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( Min( BR ,DDR ) * ( RRS - AMS ) ) )", "choosing": "( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / RMSe ) ) - ( DS + ( MUC - CS ) ) ) - ( Min( DS ,RCSe ) / MUR ) ) ) ),Max( Max( ( ( ( ( RCSe + RCSe ) - CS ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( ( RMSe * ( MUC - RRSe ) ) * ( MUM * CS ) ) ) ) )", "obj1": 0.8843683083511777, "obj2": 0.05649185645280952}, {"determining": "( ( ( PN * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( ( ( FirstVNF_Mem * PN ) * ( AMS * MDR ) ) / Max( Max( BR,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) - Min( Max( ( ( AMS - DDR ) * MRS ),( ( CRS - Min( ( Const * CRS ) ,FirstVNF_RAM ) ) - ( MDR - Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),Max( ARS,FirstVNF_CPU ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( MUR * MLU ) - MUC ) + ( RRSe * DS ) )", "obj1": 0.9400428265524625, "obj2": 0.0263622550114003}, {"determining": "( ( PN * ( ( DDR / ( FirstVNF_CPU / PN ) ) - CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( FirstVNF_CPU - MDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,MLU ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * ( ( Max( RMSe,CS ) / Min( MLU ,( MUM / CS ) ) ) / ( ( Min( MLU ,DS ) + MUM ) + ( MUM - MLU ) ) ) ) ) * ( ( RMSe - Min( ( ( Min( MLU ,DS ) + MUM ) + ( MUM - MLU ) ) ,MUM ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( ( PN * PN ) / PN ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) )", "choosing": "( ( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( Max( RMSe,( RCSe / MUC ) ) - CS ) ) ) + ( MUC * MUR ) )", "obj1": 0.961456102783726, "obj2": 0.01691534990556115}, {"determining": "( ( AMS - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server - MDR ) * ( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( MUM,MLU ),RMSe ) + Max( Max( Max( Max( ( MUM / ( MLU - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * MUC ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014413524877288341}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / MDR ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( ( Min( ( RCSe / MUR ) ,RRSe ) * ( CS - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - Min( ( RCSe / ( RCSe - ( RMSe * CS ) ) ) ,DS ) ) ) + ( Max( RCSe,CS ) + ( ( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( RMSe / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) * ( MUR - Max( MUC,Max( ( RMSe / ( CS / RMSe ) ),MUC ) ) ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0018724135383203408}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,FirstVNF_RAM ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Max( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ),Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / RRSe ) ) ),( MUR - ( MUM + DS ) ) ) ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( RMSe * Min( RCSe ,Max( ( CS / RMSe ),DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) )", "obj1": 0.9036402569593148, "obj2": 0.046821577902780895}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.19813503610525177}, {"determining": "( ( ( ( ( ( PN * PN ) / ( MRS / ARS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) + ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( CS / MUR ) ) - ( MLU / MUC ) ) ) ),( MUC * RMSe ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06825098823315923}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,FirstVNF_RAM ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,MUC ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6809421841541756, "obj2": 0.16752274947459944}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( FirstVNF_CPU,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.1407076821976638}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( DDR * MDR ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - Max( RMSe,MUC ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8051391862955032, "obj2": 0.09524964737978209}, {"determining": "( ( ( PN * PN ) / Min( MRS ,AMS ) ) - ( ARS / ARS ) )", "choosing": "( ( ( ( MUC / RMSe ) / ( RCSe - CS ) ) / ( ( ( ( MUM / Max( Max( MUC,MUC ),MUM ) ) / MLU ) * RMSe ) / MUC ) ) + ( MUC * MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.13660061122049436}, {"determining": "( ( AMS - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server - MDR ) * ( RRS - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( MUM,MLU ),RMSe ) + Max( Max( Max( Max( ( MUM / ( MLU - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05427951011035075}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( MUM + ( Min( ( ( MUM - MUC ) / MLU ) ,( MUM / DS ) ) + RMSe ) ) - Max( CS,RMSe ) ),( ( MUR - CS ) / ( Min( ( CS - MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( ( RCSe * RCSe ) - CS ) ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.03936676971681004}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( Max( ( DDR / RRS ),( ( PN / PN ) / Min( ARS ,( BR - MRS ) ) ) ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ),Max( ( MUM * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ),( MUR - ( MUM + DS ) ) ) ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( RMSe * Min( RCSe ,Max( ( CS / RMSe ),DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) )", "obj1": 0.867237687366167, "obj2": 0.0648701549711752}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * ( AMS - PN ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( Max( AMS,BR ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,MLU ),RMSe ) + Max( Max( Max( Max( ( MUM / ( MLU - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( ( Min( MLU ,RMSe ) + DS ) + ( MUM - MLU ) ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.12934534183376356}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( RRS - DDR ) - ( ( ( MDR * AMS ) + ( FirstVNF_CPU + ( ARS * CRS ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( DS + Max( ( MUC + ( RCSe + ( ( MLU / MUR ) - ( ( MUM / ( MUM / RMSe ) ) - ( MLU / MUR ) ) ) ) ),( CS + RCSe ) ) )", "obj1": 0.9186295503211992, "obj2": 0.038204214181546604}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( CS / MUR ) ) - ( MLU / MUR ) ) ) ),Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) )", "obj1": 0.6638115631691649, "obj2": 0.18780615096750003}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( Const - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( Max( AMS,BR ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * MLU ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RMSe / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.7665952890792291, "obj2": 0.11569607076474538}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( FirstVNF_RAM_Server ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( MDR / FirstVNF_RAM_Server ) ) ) ) ) - Max( BR,( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( DS * ( ( Min( ( MUR + CS ) ,MUR ) / RRSe ) + ( ( CS - ( Max( RMSe,RCSe ) + Max( MUM,MLU ) ) ) / Min( RMSe ,DS ) ) ) ) ,MUR ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MUR,MUC ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.07997465469598682}, {"determining": "( ( ( ( ( ( PN * PN ) / ( MRS / ARS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) + ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( CS / MUR ) ) - ( MLU / MUC ) ) ) ),( MUC * RMSe ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06825098823315923}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,BR ) ) - ( FirstVNF_RAM_Server + BR ) ) * ( Min( ( MDR - ARS ) ,( FirstVNF_RAM / RRS ) ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( MUM - CS ) / ( Min( ( ( MUC + RCSe ) - ( MUC + MUR ) ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ),( MUC / DS ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Max( CRS,DDR ) ,( CRS * DDR ) ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,( PN + Const ) ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Min( DS ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( DS ,MLU ) ,( ( RRSe / RMSe ) / MUM ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.7044967880085653, "obj2": 0.14908001023247816}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) - ( FirstVNF_RAM_Server * ( Const / Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,( FirstVNF_RAM * MDR ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RRSe / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( MUM + RCSe ) + ( ( ( MUC / ( DS - MUM ) ) + CS ) + DS ) ) + RCSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.059231283739001994}, {"determining": "( ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( ( ARS + ( MRS - DDR ) ) - FirstVNF_CPU ) ) * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( CRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.8993576017130621, "obj2": 0.047173874615453255}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( Max( AMS,BR ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * MLU ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11324263560515002}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( Max( AMS,BR ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,MLU ),RMSe ) + Max( Max( Max( Max( ( MUM / ( MLU - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11434872560354574}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - Max( ACS,MDR ) ) - Min( ( ( AMS - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - ACS ) ) ) + FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RRSe + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Max( Min( Min( MUR ,Max( DS,RCSe ) ) ,CS ),Min( MUM ,RCSe ) ) ) ),( MUC + ( RCSe + ( Max( MUC,RCSe ) - RCSe ) ) ) ) + Max( MUM,RMSe ) )", "obj1": 0.8629550321199143, "obj2": 0.06580106125646266}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server + MDR ) ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( FirstVNF_Mem ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RRSe ) + Min( ( ( RRSe + Min( MUR ,MUM ) ) - RCSe ) ,MLU ) ) + DS ) + Max( ( MUM + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( Min( RRS ,Max( PN,ACS ) ) * PN ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( MUR / DS ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - MRS ) - ( FirstVNF_RAM_Server + DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( RCSe / ( ( RMSe * RCSe ) / ( ( MUC / ( CS / RMSe ) ) * ( MLU / MUR ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.7002141327623126, "obj2": 0.15107135590178566}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( MDR * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( CS / MUR ) ) - RCSe ) ) ),Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.1028624325086745}, {"determining": "( ( PN * Min( ( PN + Const ) ,MDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( PN * PN ) ) * MDR ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ) * ( ( ( RMSe / ( MUM / MLU ) ) - ( MLU / MUR ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server / ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( CRS * ( FirstVNF_RAM_Server * ( Min( Const ,ARS ) - PN ) ) ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( CS,MUM ),RMSe ) + Min( ( RRSe + ( Max( ( MUC - Min( DS ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / MLU ) / ( MUR - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.7173447537473233, "obj2": 0.141669950945915}, {"determining": "( ( ( ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( CRS - ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) / ( ( Max( AMS,BR ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * MLU ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / CS ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( MLU / CS ) + RRSe ) + RCSe ) ) )", "obj1": 0.7644539614561028, "obj2": 0.11704138745729695}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ( FirstVNF_RAM - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ),Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ),( MUR - ( MUM + DS ) ) ) ),RMSe ) + Max( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( RMSe * Min( RCSe ,Max( ( CS / RMSe ),DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) )", "obj1": 0.9143468950749465, "obj2": 0.04146876355387279}, {"determining": "( ( AMS - DDR ) - DDR )", "choosing": "( ( RMSe / ( RCSe / MUR ) ) + ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( BR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( Max( AMS,BR ) * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM + MDR ) ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( MLU / MUR ) - ( RMSe / ( CS / MLU ) ) ) - Max( ( RMSe / ( MUM / RMSe ) ),MUC ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.07673306304734444}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( AMS - DDR ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( ( ( RCSe * RMSe ) / DS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.9143468950749465, "obj2": 0.04146876355387279}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( DDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MLU + ( MUR / Max( MUC,MUM ) ) ),Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.0868444723813452}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + Min( ( ( AMS - PN ) - ( AMS - DDR ) ) ,( ( MDR - FirstVNF_CPU_Server ) + Max( PN,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) / Const ) ) ) - ( DDR * MDR ) )", "choosing": "( Max( ( MUC / DS ),( ( Min( MUC ,MLU ) - CS ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) + ( MLU - MUM ) ) ) ) ) + ( Min( DS ,CS ) + Max( ( MUR - Max( MUC,DS ) ),( ( ( MLU - RRSe ) - CS ) / ( Min( ( DS - RCSe ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.09850830666415326}, {"determining": "( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - ( FirstVNF_Mem + Min( Const ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.15018998151383628}], "49": [{"determining": "( ( ( DDR / DDR ) * ( AMS * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( Max( DDR,MRS ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( ( MUR * RRSe ) / ( RRSe / RRSe ) ) ) - Max( ( RRSe - ( MUM / CS ) ),MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( Min( ( ( Min( Min( Min( ( ACS * FirstVNF_RAM ) ,Max( AMS,MDR ) ) ,ACS ) ,MRS ) + FirstVNF_RAM ) / PN ) ,Min( MDR ,( RRS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( Min( Min( Max( BR,AMS ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,Max( CRS,DDR ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / MUC ) / MUR ) + Max( ( DS + RRSe ),( ( Max( MUC,DS ) + RMSe ) - Max( ( ( MUC * ( DS * Max( RMSe,MUC ) ) ) * ( MUM * MUC ) ),MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * ( RRS - AMS ) ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / MRS ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( MDR ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - Max( RMSe,MUC ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( ( MUM - CS ),MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( DDR / CRS ) ) ) ,Max( Max( MDR,FirstVNF_CPU ),( MRS + FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( ( ( PN * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) / ( MRS - ACS ) ) ,( ARS * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( RRSe / Min( RCSe ,CS ) ) / ( RMSe * RMSe ) ) * ( Min( MLU ,MUR ) - ( RCSe / MUR ) ) ) + RMSe ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,MUC ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( Const / AMS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,( ( ( PN + PN ) / Min( PN ,MRS ) ) - Max( DDR,CRS ) ) ),Min( Min( ( Max( AMS,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / MUR ) + ( RMSe - MUC ) )", "obj1": 0.6937901498929336, "obj2": 0.15886444227971713}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( Max( DDR,Min( ( MRS * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RCSe + ( ( Max( RMSe,( ( ( RRSe + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( RMSe,MUC ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( MUM + CS ) ) ,MUR ),( MLU * ( ( Min( MUC ,( RCSe / CS ) ) * MUC ) / CS ) ) ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18019505298167207}, {"determining": "( ( ( PN * PN ) / Min( ( Min( MRS ,ACS ) - ( PN * PN ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( ARS - Max( DDR,ARS ) ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( ( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ) * Max( MUM,RMSe ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) / ( ( ( ( PN * ACS ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( MRS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) ) - ( ( ( AMS / RRS ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( FirstVNF_CPU - PN ) ) ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / CS ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( MUR + DS ) / RRSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUC,MUR ) ) ) ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06173517769859165}, {"determining": "( ( AMS - ( MDR / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( RCSe / MLU ) * RCSe ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04967005950229463}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Max( CRS,DDR ) ,( CRS * DDR ) ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,( PN + Const ) ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,( MDR - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Min( DS ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( DS ,MLU ) ,( ( RRSe / RMSe ) / Max( MLU,MUR ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15205851376919424}, {"determining": "( ( PN * ( PN * ( PN / Max( CRS,( RRS - FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( PN * FirstVNF_Mem ) * MDR ) / ( RRS - FirstVNF_CPU ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( DS ,RCSe ) * Max( ( RCSe + ( ( ( ( RMSe / ( MUC / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) + RCSe ) ),Max( Max( Max( ( MUM - ( MLU - RRSe ) ),RCSe ),( MUC - DS ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( Min( MLU ,DS ),MUC ) ) ) ) ) ) )", "obj1": 0.9486081370449678, "obj2": 0.022532590520522165}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,FirstVNF_RAM ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Max( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ),Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / RRSe ) ) ),( MUR - ( MUM + DS ) ) ) ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( RMSe * Min( RCSe ,Max( ( CS / RMSe ),DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) )", "obj1": 0.9036402569593148, "obj2": 0.046821577902780895}, {"determining": "( ( ( PN * PN ) / PN ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) )", "choosing": "( ( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( Max( RMSe,( RCSe / MUC ) ) - CS ) ) ) + ( MUC * MUR ) )", "obj1": 0.961456102783726, "obj2": 0.01691534990556115}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.17391131816939562}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - PN ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / RRS ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + Min( ( DS / ( MUM - RRSe ) ) ,MUR ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9100642398286938, "obj2": 0.04243081844002554}, {"determining": "( ( ( PN * PN ) / ( Min( AMS ,FirstVNF_Mem_Server ) * ( ARS * CRS ) ) ) - ( ( FirstVNF_Mem - ( ( PN - FirstVNF_Mem ) / MRS ) ) + MDR ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( MUC / ( CS / RMSe ) ) * ( MLU / MUR ) ) ) ),CS ) ) )", "obj1": 0.6595289079229122, "obj2": 0.19191321904818692}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - ( MRS / Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - ( ( MDR * MDR ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( RMSe * MUR ) - ( Min( ( MUR / ( CS + DS ) ) ,MLU ) / ( MLU / DS ) ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17316280315061913}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( MRS * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ,( ( PN + ACS ) + Max( CRS,PN ) ) ) ) ,( Min( RRS ,FirstVNF_CPU ) - Min( ( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,Const ) ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS + RRSe ) - CS ) + ( RMSe * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.12406192703022473}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - ( ( MDR - ( RRS - DDR ) ) * PN ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.1448372697507651}, {"determining": "( Min( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * ( ( Const / Const ) - ( RRS - FirstVNF_CPU ) ) ) ) ) ) ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( Max( MUC,RMSe ) * ( MUC * RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.8907922912205567, "obj2": 0.053756620106210996}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( MDR * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( CS / MUR ) ) - RCSe ) ) ),Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.1028624325086745}, {"determining": "( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( Const - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( PN * PN ) ) * MDR ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ) * Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RMSe / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.07995864958950186}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,Min( MRS ,ACS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - MDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC - Min( DS ,MUM ) ) - ( ( ( DS - MUM ) / RMSe ) + Max( MUC,RCSe ) ) ) + ( RMSe / ( CS / RMSe ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09213074577317636}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_CPU - PN ) - ( PN + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) - ( FirstVNF_RAM_Server * ( Const / Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,( FirstVNF_RAM * MDR ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) + Max( ( MUC + ( RCSe + ( ( ( ( CS + MUM ) / ( RRSe / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( ( ( MUC / ( DS - MUM ) ) + CS ) + DS ) + ( RRSe + RCSe ) ) + RCSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.05923128373900198}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( BR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( Max( AMS,BR ) * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM + MDR ) ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( MLU / MUR ) - ( RMSe / ( CS / MLU ) ) ) - Max( ( RMSe / ( MUM / RMSe ) ),MUC ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.07673306304734444}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( MDR - FirstVNF_CPU ) ) ,( Max( ( DDR / RRS ),( ( Max( BR,PN ) / PN ) / Min( ARS ,( BR - MRS ) ) ) ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUC + MLU ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / CS ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( MUR + DS ) / RRSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUM ) * Max( MUC,MUR ) ) ) ) ) ) )", "obj1": 0.867237687366167, "obj2": 0.06487015497117518}, {"determining": "( ( ( PN * PN ) / Min( MRS ,BR ) ) - Max( ( RRS - AMS ),( FirstVNF_RAM + AMS ) ) )", "choosing": "( Min( RCSe ,Max( MUM,CS ) ) + Max( ( Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Min( MUC ,MUM ) ) ) ),( CS / MUR ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( PN * FirstVNF_Mem ) - ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - ( CRS - PN ) ) - Max( RRS,FirstVNF_CPU ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) )", "choosing": "( Min( RCSe ,MUR ) + Min( RMSe ,MUM ) )", "obj1": 0.9229122055674518, "obj2": 0.03560399376767379}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( AMS,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ) ) + ( Min( DS ,MLU ) + Min( RMSe ,( ( Max( RRSe,Min( MUM ,RRSe ) ) * ( ( MUC * RMSe ) / DS ) ) + MUC ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.16379238946043478}, {"determining": "( ( ( ( ( ( ARS * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - DDR ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - AMS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( CRS / PN ) ,( PN * PN ) ) ) + ( RRS - AMS ) ) )", "choosing": "( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,RMSe ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / RMSe ) ) - ( DS + ( MUC - CS ) ) ) - ( Min( DS ,RCSe ) / MUR ) ) ) ),Max( Max( ( ( ( MLU - CS ) / MUM ) * ( CS * MUR ) ),Min( MUR ,( MUM + DS ) ) ),( ( RMSe * ( MUC - RRSe ) ) * ( MUM * CS ) ) ) ) )", "obj1": 0.8458244111349036, "obj2": 0.07458730764465374}, {"determining": "( Min( ( ( Min( Min( Min( ( ACS * FirstVNF_RAM ) ,Max( AMS,MDR ) ) ,ACS ) ,MRS ) + ( BR - FirstVNF_RAM ) ) / PN ) ,Min( MDR ,( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) - Max( Min( Min( Max( BR,AMS ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,Max( CRS,DDR ) ) ) ,Min( Min( FirstVNF_CPU ,MDR ) ,( CRS - MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / MUC ) / MUR ) + Max( ( RRSe + DS ),( ( MLU * MUM ) - Max( ( ( MUC * ( DS * Max( RMSe,MUC ) ) ) * ( MUM * MUC ) ),MUM ) ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,DDR ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( Min( CS ,( MLU - ( RRSe + RRSe ) ) ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,MUC ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6809421841541756, "obj2": 0.16752274947459944}, {"determining": "( ( ACS / CRS ) - Max( ( CRS * Min( ( Max( ( ( AMS - PN ) - ( DDR * FirstVNF_RAM_Server ) ),( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / MUR ) ,Max( RRSe,( MUM * CS ) ) )", "obj1": 0.6659528907922913, "obj2": 0.18686729213412878}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.9336188436830836, "obj2": 0.030150222122240014}, {"determining": "( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) )", "choosing": "( Max( MUM,( RCSe + MUC ) ) + ( ( ( MUM + MUC ) + MUR ) - Min( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) * MUC ) ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12597450610134767}, {"determining": "( ( ( PN * PN ) / Min( PN ,( ARS * CRS ) ) ) - Max( Min( Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Min( ( CRS - MDR ) ,( ( ( FirstVNF_RAM - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - AMS ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( ( ( ( ( MUC * DS ) - ( MUR - CS ) ) / MUM ) * ( MLU + ( MUR / ( MUC + MUM ) ) ) ),RCSe ) / MUC ) ) + ( MUC * MUR ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( FirstVNF_Mem * PN ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / CS ) ) - ( CS / MUR ) ) - ( MLU / MUR ) ) ) ),Max( ( CS + MUR ),( ( MLU + RMSe ) - CS ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.029660277274064974}, {"determining": "( ( RRS - DDR ) - ( ( ( MDR * AMS ) + ( FirstVNF_CPU + ( ARS * CRS ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( DS + Max( ( MUC + ( RCSe + ( ( MLU / MUR ) - ( ( MUM / ( MUM / RMSe ) ) - ( MLU / MUR ) ) ) ) ),( CS + RCSe ) ) )", "obj1": 0.9186295503211992, "obj2": 0.038204214181546604}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / Max( FirstVNF_Mem_Server,( AMS / FirstVNF_CPU ) ) ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( DDR - ( ( RRS * PN ) / ( AMS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( ( MLU * DS ) / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + RRSe ) ) ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08556520324879}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( AMS,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - MUC ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.16379238946043478}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( MUC / ( CS / RMSe ) ) * ( MLU / MUR ) ) ) ),CS ) ) )", "obj1": 0.6552462526766595, "obj2": 0.19813503610525177}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( FirstVNF_CPU,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.1340654956309915}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / BR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + MUR ) ),( ( ( MUM + Min( Max( MLU,MUR ) ,DS ) ) + RRSe ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10854380293082604}, {"determining": "( ( AMS - DDR ) - Max( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * Min( ACS ,RRS ) ) / Min( MRS ,( RRS * FirstVNF_CPU ) ) ) ) ) ),( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( RMSe / ( RCSe / MUR ) ) + Max( ( MUM + RCSe ),( MUC + ( ( MUM + MUM ) + ( Max( ( Max( MLU,RRSe ) - Min( CS ,MUR ) ),MUM ) - MLU ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03442580807413833}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - ( RRS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( FirstVNF_RAM_Server / MDR ),( ( Min( FirstVNF_CPU_Server ,DDR ) * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ) ) ) ) ) - Min( ( PN + ( BR + BR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * MUR ) + Max( ( MUM + DS ),( MUC + ( DS * Max( Max( DS,Min( MUM ,( CS / RMSe ) ) ),MUM ) ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09746944224362318}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / PN ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( RMSe,( RCSe / MUC ) ) + Max( ( MUC + ( RCSe + ( ( ( MUM / ( RCSe / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.8372591006423983, "obj2": 0.07867006546113486}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * ( ( FirstVNF_CPU / PN ) - Max( DDR,CRS ) ) ) / Min( FirstVNF_RAM ,ACS ) ) ,( ARS * FirstVNF_Mem ) ) ) - Max( Min( Min( Max( ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + ACS ) ),FirstVNF_Mem ) ,Min( ( ARS * ( Max( MRS,ACS ) - MDR ) ) ,( ( ARS + PN ) + Min( ( ARS * PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.7601713062098501, "obj2": 0.11962834580173726}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / CS ) ) - ( CS / MUR ) ) - ( MLU / MUR ) ) ) ),Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08764623849800922}, {"determining": "( ( ( ( ( ( PN * PN ) / ( MRS / ARS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( PN * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) + ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( CS / ( MUM * CS ) ) ) - ( MLU / MUC ) ) ) ),( MUC * RMSe ) ) )", "obj1": 0.854389721627409, "obj2": 0.07042542781143092}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) + Max( CRS,( Const / FirstVNF_CPU ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / RRS ) ) ) ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + Min( ( DS / ( MUM - CS ) ) ,Min( DS ,MLU ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9550321199143469, "obj2": 0.01966034215236357}, {"determining": "( ( PN * ( ( DDR / ( FirstVNF_CPU / PN ) ) - CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( FirstVNF_CPU - MDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,MLU ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * ( ( Max( RMSe,CS ) / Min( MLU ,( MUM / CS ) ) ) / ( ( Min( MLU ,DS ) + MUM ) + ( MUM - MLU ) ) ) ) ) * ( ( RMSe - Min( ( ( Min( MLU ,DS ) + MUM ) + ( MUM - MLU ) ) ,MUM ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( AMS - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( ( ( PN * PN ) / Min( MRS ,BR ) ) - MDR ) * ( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( MUM + Max( Max( Max( Max( ( MUM / ( MLU - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * MUC ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.0072790836592221434}, {"determining": "( ( AMS - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server - MDR ) * ( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( MUM,MLU ),RMSe ) + Max( Max( Max( Max( ( MUM / ( MLU - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * MUC ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014413524877288338}, {"determining": "( ( ( PN * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( ( ( FirstVNF_Mem * PN ) * ( AMS * MDR ) ) / Max( Max( BR,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) - Min( Max( ( ( AMS - DDR ) * MRS ),( ( CRS - Min( ( Const * CRS ) ,FirstVNF_RAM ) ) - ( MDR - Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),Max( ARS,FirstVNF_CPU ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( MUR * MLU ) - MUC ) + ( RRSe * DS ) )", "obj1": 0.9400428265524625, "obj2": 0.0263622550114003}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_RAM_Server ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Min( Min( ( ACS * Max( FirstVNF_CPU,MRS ) ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),Min( DS ,( MUM * ( Min( RCSe ,MUC ) * Max( ( MUM - CS ),MUC ) ) ) ) ) ) + ( Min( MLU ,DS ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( MUM / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.1371777208951562}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MDR ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( ( PN / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ),( FirstVNF_RAM_Server / RRS ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUM + CS ),RMSe ) + ( RMSe - MUM ) )", "obj1": 0.9550321199143469, "obj2": 0.01966034215236357}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( Min( ( Max( PN,PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) / ( PN * PN ) ) - Max( ( ( MDR - Min( PN ,FirstVNF_RAM ) ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ),( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( DS,Min( ( RMSe * CS ) ,RMSe ) ) - MUR ),( ( MLU - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) + ( ( ( ( MUR / RRSe ) / ( MUR + RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.6552462526766595, "obj2": 0.19813503610525177}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( MDR / Min( MRS ,FirstVNF_RAM ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6809421841541756, "obj2": 0.16752274947459944}, {"determining": "( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / BR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * MLU ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10632230858649157}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( DDR * MDR ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Min( DS ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,MLU ) )", "obj1": 0.8051391862955032, "obj2": 0.09524964737978209}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( ACS ,MRS ) ) + Max( CRS,PN ) ) - ( ( ( FirstVNF_RAM_Server + ( DDR - PN ) ) - ( MRS - Min( PN ,BR ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / BR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUM + RRSe ),( ( ( MUM + Min( RMSe ,RRSe ) ) + RRSe ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10632230858649157}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server + MDR ) ) - ( ( MDR + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( FirstVNF_Mem ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( CS * ( MUC / MUC ) ) ) + RRSe ) + Min( ( ( RRSe + Min( MUR ,MUM ) ) - RCSe ) ,MLU ) ) + DS ) + Max( ( MUM + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.828693790149893, "obj2": 0.08323505013457255}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( MUM + ( Min( ( ( MUM - MUC ) / MLU ) ,( MUM / DS ) ) + RMSe ) ) - Max( CS,RMSe ) ),( ( MUR - CS ) / ( Min( ( CS - MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( ( RCSe * RCSe ) - CS ) ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.03936676971681004}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( DDR * MDR ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - Max( RMSe,MUC ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8051391862955032, "obj2": 0.09524964737978209}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * ( AMS - PN ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( Max( AMS,BR ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,MLU ),RMSe ) + Max( Max( Max( Max( ( MUM / ( MLU - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( ( Min( MLU ,RMSe ) + DS ) + ( MUM - MLU ) ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.12934534183376356}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Max( CRS,DDR ) ,( CRS * DDR ) ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,( PN + Const ) ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Min( DS ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( DS ,MLU ) ,( ( RRSe / RMSe ) / MUM ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.7044967880085653, "obj2": 0.14908001023247816}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - ( Max( FirstVNF_RAM,AMS ) * ARS ) )", "choosing": "( Max( ( ( ( ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) / ( ( MUM / CS ) * CS ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - ( RMSe * RMSe ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RMSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM * MUC ) ) ) ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13934673198297862}, {"determining": "( ( ( PN * PN ) / Min( ( ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( ( RMSe / ( CS / RMSe ) ) + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( CS / MUR ) ) - ( MLU / MUR ) ) ) ),Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) )", "obj1": 0.6638115631691649, "obj2": 0.18780615096750003}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,BR ) ) - ( FirstVNF_RAM_Server + BR ) ) * ( Min( ( MDR - ARS ) ,( FirstVNF_RAM / RRS ) ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( MUM - CS ) / ( Min( ( ( MUC + RCSe ) - ( MUC + MUR ) ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ),( MUC / DS ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( ( ( ( ( PN * PN ) / ( FirstVNF_Mem - ( FirstVNF_RAM_Server / PN ) ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / BR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + MUR ) ),( ( RCSe * MUC ) + ( ( ( MUC / MUC ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.11189352552878147}, {"determining": "( ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( ( ARS + ( MRS - DDR ) ) - FirstVNF_CPU ) ) * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( CRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( ( MUC - ( RCSe + RRSe ) ) * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8993576017130621, "obj2": 0.047173874615453255}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( Max( AMS,BR ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) )", "choosing": "( ( RMSe * MLU ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11417707745914127}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Max( CRS,DDR ) ,( CRS * DDR ) ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,( PN + Const ) ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( ( MUC + RRSe ),( MUM + RCSe ) ) )", "obj1": 0.7044967880085653, "obj2": 0.14908001023247816}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_RAM_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ) ) + ( Min( DS ,MLU ) + Min( RMSe ,( ( Max( RRSe,Min( MUM ,RRSe ) ) * ( ( MUC * RMSe ) / DS ) ) + MUC ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09954240113341752}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server - MDR ) * ( RRS - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( RCSe + ( ( Max( RMSe,( ( ( RRSe + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ),RRSe ) ) ) / Max( Min( ( DS + ( MUM + CS ) ) ,MUR ),( MLU * ( ( Min( MUC ,( RCSe / CS ) ) * MUC ) / CS ) ) ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11070944245177099}, {"determining": "( ( PN * Min( ( PN + Const ) ,MDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( PN * PN ) ) * MDR ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe * MLU ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RMSe / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - DDR ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - AMS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( Min( BR ,DDR ) * ( RRS - AMS ) ) )", "choosing": "( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / RMSe ) ) - ( DS + ( MUC - CS ) ) ) - ( Min( DS ,RCSe ) / MUR ) ) ) ),Max( Max( ( ( ( ( RCSe + RCSe ) - CS ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( ( RMSe * ( MUC - RRSe ) ) * ( MUM * CS ) ) ) ) )", "obj1": 0.8843683083511777, "obj2": 0.05649185645280952}, {"determining": "( ( AMS - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server - MDR ) * ( RRS - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( MUM,MLU ),RMSe ) + Max( Max( Max( Max( ( MUM / ( MLU - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05427951011035075}, {"determining": "( ( ( PN * PN ) / Min( MRS ,AMS ) ) - ( ARS / ARS ) )", "choosing": "( ( ( ( MUC / RMSe ) / ( RCSe - CS ) ) / ( ( ( ( MUM / Max( Max( MUC,MUC ),MUM ) ) / MLU ) * RMSe ) / MUC ) ) + ( MUC * MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.13660061122049436}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( CS / MUR ) ) - ( ( MUC / DS ) / MUR ) ) ) ),Max( ( MUM + RCSe ),( ( MLU + ( MUM + DS ) ) - CS ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.1008478595203946}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,( FirstVNF_CPU_Server + ( ( ACS / BR ) - Const ) ) ) ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ACS * FirstVNF_RAM ) ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ( Const / Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RRSe / RMSe ) ) - ( RMSe / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( MUM + RCSe ) + ( ( ( Max( CS,MUR ) - RCSe ) + CS ) + DS ) ) + RCSe ) ) )", "obj1": 0.7773019271948608, "obj2": 0.10966111758120582}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_RAM_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( ( RMSe - MUC ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.8137044967880086, "obj2": 0.09074764919403554}, {"determining": "( Min( AMS ,( ARS - ( AMS - DDR ) ) ) - ( AMS * Max( MDR,AMS ) ) )", "choosing": "( Max( ( ( ( ( Min( ( RCSe / MUR ) ,RRSe ) * ( MLU - Max( RRSe,RRSe ) ) ) / ( CS * ( MUC / MUC ) ) ) - CS ) - CS ),( ( MLU - RMSe ) - Min( Min( MUC ,RRSe ) ,DS ) ) ) + ( Max( RCSe,CS ) + ( DS / ( MUM * Max( RCSe,Min( RMSe ,DS ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.0322857237724867}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + Min( ( ( AMS - PN ) - ( AMS - DDR ) ) ,( ( MDR - FirstVNF_CPU_Server ) + Max( PN,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) / Const ) ) ) - ( DDR * MDR ) )", "choosing": "( Max( ( MUC / DS ),( ( Min( MUC ,MLU ) - CS ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) + ( MLU - MUM ) ) ) ) ) + ( Min( DS ,CS ) + Max( ( MUR - Max( MUC,DS ) ),( ( ( MLU - RRSe ) - CS ) / ( Min( ( DS - RCSe ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.09850830666415326}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - Max( ACS,MDR ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Max( ( RRSe + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Max( Min( Min( MUR ,Max( DS,RCSe ) ) ,CS ),Min( MUM ,RCSe ) ) ) ),( MUC + ( RCSe + ( Max( MUC,RCSe ) - RCSe ) ) ) ) + RCSe )", "obj1": 0.860813704496788, "obj2": 0.06683754070135983}, {"determining": "( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - ( FirstVNF_Mem + Min( Const ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.15018998151383628}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * FirstVNF_CPU ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( RMSe / ( RCSe / RMSe ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,MLU ) )", "obj1": 0.7451820128479657, "obj2": 0.12668139402331452}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem_Server ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( FirstVNF_CPU,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14446093273005883}, {"determining": "( ( ( PN * PN ) / PN ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - ( Max( ARS,ARS ) + FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) * PN ) ) ) )", "choosing": "( Min( Max( RRSe,RCSe ) ,( MUR - ( ( ( RRSe * RCSe ) / RCSe ) - RRSe ) ) ) + ( MUC * MUR ) )", "obj1": 0.9657387580299786, "obj2": 0.015000517660122085}, {"determining": "( ( ( Max( ( ( PN * PN ) / ( Min( BR ,DDR ) * ( RRS - AMS ) ) ),Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * ( PN * ARS ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( ( MUC + RRSe ),( MUM + RCSe ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( FirstVNF_CPU_Server / Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Min( DS ,MUM ) ),( MLU + RMSe ) ) + ( Min( ( RCSe * MUC ) ,MLU ) - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0032923778242144783}], "50": [{"determining": "( ( ( DDR / DDR ) * ( AMS * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( Max( DDR,MRS ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( ( MUR * RRSe ) / ( RRSe / RRSe ) ) ) - Max( ( RRSe - ( MUM / CS ) ),MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( ( ( ( ( RRSe / Min( RCSe ,CS ) ) / ( RMSe * RMSe ) ) * ( Min( MLU ,MUR ) - ( RCSe / MUR ) ) ) + RMSe ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,MUC ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( Min( Min( ( ACS * FirstVNF_RAM ) ,Max( AMS,MDR ) ) ,ACS ) ,MRS ) + FirstVNF_RAM ) / PN ) ,Min( MDR ,( RRS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( Min( Min( Max( BR,AMS ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,Max( CRS,DDR ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / MUC ) / MUR ) + Max( ( DS + RRSe ),( ( Max( MUC,DS ) + RMSe ) - Max( ( ( MUC * ( DS * Max( RMSe,MUC ) ) ) * ( MUM * MUC ) ),MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( DDR / CRS ) ) ) ,Max( Max( MDR,FirstVNF_CPU ),( MRS + FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( ( ( PN * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) / ( MRS - ACS ) ) ,( ARS * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( RRSe / Min( RCSe ,CS ) ) / ( RMSe * RMSe ) ) * ( Min( MLU ,MUR ) - ( RCSe / MUR ) ) ) + RMSe ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,MUC ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( PN * PN ) / Min( MRS ,BR ) ) - Max( ( RRS - AMS ),( FirstVNF_RAM + AMS ) ) )", "choosing": "( Min( RCSe ,Max( MUM,CS ) ) + Max( ( Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Min( MUC ,MUM ) ) ) ),( CS / MUR ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( Const / AMS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,( ( ( PN + PN ) / Min( PN ,MRS ) ) - Max( DDR,CRS ) ) ),Min( Min( ( Max( AMS,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / MUR ) + ( RMSe - MUC ) )", "obj1": 0.6937901498929336, "obj2": 0.15886444227971713}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - Max( ACS,MDR ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Max( ( RRSe + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Max( Min( Min( MUR ,Max( DS,RCSe ) ) ,CS ),Min( MUM ,RCSe ) ) ) ),( MUC + ( RCSe + ( Max( MUC,RCSe ) - RCSe ) ) ) ) + RCSe )", "obj1": 0.860813704496788, "obj2": 0.06683754070135983}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( RRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / BR ) ) ) ) ) - Min( ( MDR + AMS ) ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( ( MUR * ( CS + RMSe ) ) + ( RCSe + MUR ) ),( ( ( MUM + Min( DS ,RMSe ) ) + RRSe ) + Min( CS ,MUC ) ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10625269803299302}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( MDR * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( CS / MUR ) ) - RCSe ) ) ),Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.1028624325086745}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - PN ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / RRS ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + Min( ( DS / ( MUM - RRSe ) ) ,MUR ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9100642398286938, "obj2": 0.04243081844002554}, {"determining": "( ( ( PN * PN ) / ( Min( AMS ,FirstVNF_Mem_Server ) * ( ARS * CRS ) ) ) - ( ( FirstVNF_Mem - ( ( PN - FirstVNF_Mem ) / MRS ) ) + MDR ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( MUC / ( CS / RMSe ) ) * ( MLU / MUR ) ) ) ),CS ) ) )", "obj1": 0.6595289079229122, "obj2": 0.19191321904818692}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - ( MRS / Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - ( ( MDR * MDR ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( RMSe * MUR ) - ( Min( ( MUR / ( CS + DS ) ) ,MLU ) / ( MLU / DS ) ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17316280315061913}, {"determining": "( ( PN * FirstVNF_Mem ) - ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - ( CRS - PN ) ) - Max( RRS,FirstVNF_CPU ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) )", "choosing": "( Min( RCSe ,MUR ) + Min( RMSe ,MUM ) )", "obj1": 0.9229122055674518, "obj2": 0.03560399376767379}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( ARS - FirstVNF_CPU ) ) ,( ( MDR / Min( MRS ,FirstVNF_RAM ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,( ( RMSe / ( RCSe / RRSe ) ) - ( MLU / MUR ) ) ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.16223689361497873}, {"determining": "( Min( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * ( ( Const / Const ) - ( RRS - FirstVNF_CPU ) ) ) ) ) ) ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( Max( MUC,RMSe ) * ( MUC * RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.8907922912205567, "obj2": 0.053756620106210996}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( MRS * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ,( ( PN + ACS ) + Max( CRS,PN ) ) ) ) ,( Min( RRS ,FirstVNF_CPU ) - Min( ( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,Const ) ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS + RRSe ) - CS ) + ( RMSe * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.12406192703022473}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_RAM_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ) ) + ( Min( DS ,MLU ) + Min( RMSe ,( ( Max( RRSe,Min( MUM ,RRSe ) ) * ( ( MUC * RMSe ) / DS ) ) + MUC ) ) ) )", "obj1": 0.8137044967880086, "obj2": 0.09074764919403552}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_CPU - PN ) - ( PN + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) - ( FirstVNF_RAM_Server * ( Const / Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,( FirstVNF_RAM * MDR ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) + Max( ( MUC + ( RCSe + ( ( ( ( CS + MUM ) / ( RRSe / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( ( ( MUC / ( DS - MUM ) ) + CS ) + DS ) + ( RRSe + RCSe ) ) + RCSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.05923128373900198}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / Max( FirstVNF_Mem_Server,( AMS / FirstVNF_CPU ) ) ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( DDR - ( ( RRS * PN ) / ( AMS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( ( MLU * DS ) / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + RRSe ) ) ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08556520324879}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( MUM + ( Min( ( ( MUM - MUC ) / MLU ) ,( MUM / DS ) ) + RMSe ) ) - Max( CS,RMSe ) ),( ( MUR - CS ) / ( Min( ( CS - MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( ( RCSe * RCSe ) - CS ) ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.03936676971681004}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Max( CRS,DDR ) ,( CRS * DDR ) ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,( PN + Const ) ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - ( AMS - DDR ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( ( MUM / ( RCSe / RMSe ) ) + ( MUM - Min( Min( DS ,MLU ) ,( ( RRSe / RMSe ) / Max( MLU,MUR ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.69593147751606, "obj2": 0.1534005440300203}, {"determining": "( ( ( PN * PN ) / Min( ( Min( MRS ,ACS ) - ( PN * PN ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( ARS - Max( DDR,ARS ) ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( ( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ) * Max( MUM,RMSe ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( ( ( ( ( ARS * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - DDR ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - AMS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( CRS / PN ) ,( PN * PN ) ) ) + ( RRS - AMS ) ) )", "choosing": "( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,RMSe ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / RMSe ) ) - ( DS + ( MUC - CS ) ) ) - ( Min( DS ,RCSe ) / MUR ) ) ) ),Max( Max( ( ( ( MLU - CS ) / MUM ) * ( CS * MUR ) ),Min( MUR ,( MUM + DS ) ) ),( ( RMSe * ( MUC - RRSe ) ) * ( MUM * CS ) ) ) ) )", "obj1": 0.8458244111349036, "obj2": 0.07458730764465374}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RCSe + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6723768736616702, "obj2": 0.1764230924720363}, {"determining": "( Min( ( ( Min( Min( Min( ( ACS * FirstVNF_RAM ) ,Max( AMS,MDR ) ) ,ACS ) ,MRS ) + ( BR - FirstVNF_RAM ) ) / PN ) ,Min( MDR ,( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) - Max( Min( Min( Max( BR,AMS ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,Max( CRS,DDR ) ) ) ,Min( Min( FirstVNF_CPU ,MDR ) ,( CRS - MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / MUC ) / MUR ) + Max( ( RRSe + DS ),( ( MLU * MUM ) - Max( ( ( MUC * ( DS * Max( RMSe,MUC ) ) ) * ( MUM * MUC ) ),MUM ) ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( ( AMS - DDR ) - ( ( Min( AMS ,Min( PN ,Const ) ) * FirstVNF_RAM_Server ) + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM * ( PN - ( AMS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) * AMS ) + Min( DDR ,( FirstVNF_CPU / ( MRS - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUM ,( MUC / Min( Min( ( MUM + RRSe ) ,Max( MUC,Max( RCSe,DS ) ) ) ,RCSe ) ) ) - RCSe ) * ( ( ( MLU * ( ( RCSe - MUM ) + MUR ) ) + MUC ) / ( ( MUC * MUC ) / DS ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12105671953625956}, {"determining": "( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( Const - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) - ( FirstVNF_CPU + Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ) * Max( ( MUC + ( MUR + ( ( ( RMSe / ( RMSe / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.9079229122055674, "obj2": 0.044864532069542676}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( MDR / Min( MRS ,FirstVNF_RAM ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Max( MUM,MLU ),RMSe ) + Max( Max( Max( Max( ( MUM / ( MLU - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.16752274947459944}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - FirstVNF_CPU ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - ( ( MDR - ( RRS - DDR ) ) * PN ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / Max( MUC,DS ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14620702405958347}, {"determining": "( ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( ( ARS + ( MRS - DDR ) ) - FirstVNF_CPU ) ) * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( CRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( ( MUC - ( RCSe + RRSe ) ) * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8993576017130621, "obj2": 0.047173874615453255}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,BR ) ) - ( FirstVNF_RAM_Server + BR ) ) * ( Min( ( MDR - ARS ) ,( FirstVNF_RAM / RRS ) ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( MUM - CS ) / ( Min( ( ( MUC + RCSe ) - ( MUC + MUR ) ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ),( MUC / DS ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( Max( DDR,Min( ( MRS * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( ( MUC + RRSe ),( MUM + RCSe ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18019505298167207}, {"determining": "( ( ACS / CRS ) - Max( ( CRS * Min( ( Max( ( ( AMS - PN ) - ( DDR * FirstVNF_RAM_Server ) ),( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / MUR ) ,Max( RRSe,( MUM * CS ) ) )", "obj1": 0.6659528907922913, "obj2": 0.18686729213412878}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * FirstVNF_CPU ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( RMSe * MUR ) - ( Min( ( MUR / ( CS + DS ) ) ,MLU ) / ( MLU / DS ) ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12564491457841734}, {"determining": "( ( ( PN * PN ) / Min( PN ,( ARS * CRS ) ) ) - Max( Min( Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Min( ( CRS - MDR ) ,( ( ( FirstVNF_RAM - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - AMS ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( ( ( ( ( MUC * DS ) - ( MUR - CS ) ) / MUM ) * ( MLU + ( MUR / ( MUC + MUM ) ) ) ),RCSe ) / MUC ) ) + ( MUC * MUR ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( ( ( PN - PN ) - FirstVNF_CPU ) * PN ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( ( MRS - BR ) / BR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + MUR ) ),( ( ( MUM + Min( MUC ,Max( Max( RRSe,MUR ),MUR ) ) ) + RRSe ) + Max( RCSe,MUC ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.11552618753550983}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( Max( AMS,BR ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) )", "choosing": "( ( RMSe * MLU ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11417707745914127}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( RRS - AMS ) ) - ( AMS - DDR ) ) * PN ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( MUC / MUR ) * ( MLU / MUR ) ) ) ),CS ) ) )", "obj1": 0.6552462526766595, "obj2": 0.19813503610525177}, {"determining": "( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( Const - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( PN * PN ) ) * MDR ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ) * Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RMSe / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.07995864958950186}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - ( Max( FirstVNF_RAM,AMS ) * ARS ) )", "choosing": "( Max( ( ( ( ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) / ( ( MUM / CS ) * CS ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - ( RMSe * RMSe ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RMSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM * MUC ) ) ) ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13934673198297862}, {"determining": "( ( ( ( ( ( PN * PN ) / ( FirstVNF_Mem - ( FirstVNF_RAM_Server / PN ) ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / BR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + MUR ) ),( ( RCSe * MUC ) + ( ( ( MUC / MUC ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.11189352552878147}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / BR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + MUR ) ),( ( ( MUM + Min( Max( MLU,MUR ) ,DS ) ) + RRSe ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10854380293082604}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( CS / MUR ) ) - ( ( MUC / DS ) / MUR ) ) ) ),Max( ( MUM + RCSe ),( ( MLU + ( MUM + DS ) ) - CS ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.1008478595203946}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / RRS ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( PN * PN ) ) * MDR ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) * Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RMSe / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.9271948608137045, "obj2": 0.033243139895206233}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR / FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / Min( DDR ,( DDR + MRS ) ) ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / CS ) ) - ( CS / MUR ) ) - ( ( ( MUR - MUC ) / MUR ) / MUR ) ) ) ),Max( ( MUM + RCSe ),( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) + RMSe ) - CS ) ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08218921966841114}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Max( CRS,DDR ) ,( CRS * DDR ) ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,( PN + Const ) ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,( MDR - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Min( DS ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( DS ,MLU ) ,( ( RRSe / RMSe ) / Max( MLU,MUR ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15205851376919424}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * ( ( FirstVNF_CPU / PN ) - Max( DDR,CRS ) ) ) / Min( FirstVNF_RAM ,ACS ) ) ,( ARS * FirstVNF_Mem ) ) ) - Max( Min( Min( Max( ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + ACS ) ),FirstVNF_Mem ) ,Min( ( ARS * ( Max( MRS,ACS ) - MDR ) ) ,( ( ARS + PN ) + Min( ( ARS * PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.7601713062098501, "obj2": 0.11962834580173726}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( MDR - FirstVNF_CPU ) ) ,( Max( ( DDR / RRS ),( ( Max( BR,PN ) / PN ) / Min( ARS ,( BR - MRS ) ) ) ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUC + MLU ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / CS ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( MUR + DS ) / RRSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUM ) * Max( MUC,MUR ) ) ) ) ) ) )", "obj1": 0.867237687366167, "obj2": 0.06487015497117518}, {"determining": "( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - ( FirstVNF_Mem + Min( Const ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.15018998151383628}, {"determining": "( ( PN * ( PN * ( PN / Max( CRS,( RRS - FirstVNF_CPU ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( ( PN * FirstVNF_Mem ) * MDR ) / ( RRS - FirstVNF_CPU ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( DS ,RCSe ) * Max( ( RCSe + ( ( ( ( RMSe / ( MUC / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) + RCSe ) ),Max( Max( Max( ( MUM - ( MLU - RRSe ) ),RCSe ),( MUC - DS ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( Min( MLU ,DS ),MUC ) ) ) ) ) ) )", "obj1": 0.9486081370449678, "obj2": 0.022532590520522165}, {"determining": "( ( ( PN * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( ( ( FirstVNF_Mem * PN ) * ( AMS * MDR ) ) / Max( Max( BR,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) - Min( Max( ( ( AMS - DDR ) * MRS ),( ( CRS - Min( ( Const * CRS ) ,FirstVNF_RAM ) ) - ( MDR - Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),Max( ARS,FirstVNF_CPU ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( MUR * MLU ) - MUC ) + ( RRSe * DS ) )", "obj1": 0.9400428265524625, "obj2": 0.0263622550114003}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / RRS ) ) ) ) ) - Min( AMS ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021683928942678714}, {"determining": "( ( ( PN * PN ) / PN ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - ( Max( ARS,ARS ) + FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) * PN ) ) ) )", "choosing": "( Min( Max( RRSe,RCSe ) ,( MUR - ( ( ( RRSe * RCSe ) / RCSe ) - RRSe ) ) ) + ( MUC * MUR ) )", "obj1": 0.9657387580299786, "obj2": 0.015000517660122085}, {"determining": "( ( PN * Min( ( PN + ( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * MDR ) ) ) ,MDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( PN * PN ) ) * MDR ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe * MLU ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RMSe / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013128104121801746}, {"determining": "( ( AMS - ( MDR / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04967005950229463}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_RAM_Server ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Min( Min( ( ACS * Max( FirstVNF_CPU,MRS ) ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),Min( DS ,( MUM * ( Min( RCSe ,MUC ) * Max( ( MUM - CS ),MUC ) ) ) ) ) ) + ( Min( MLU ,DS ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( MUM / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.1371777208951562}, {"determining": "( ( ( AMS - DDR ) - ( ( MDR + ( FirstVNF_CPU + ( ARS * CRS ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,( MDR - FirstVNF_CPU_Server ) ) ),Min( Min( ( Max( FirstVNF_CPU,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( ( MUM - CS ),MUC ) ) ) ) ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( ( ( MUM / ( RCSe / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.01907398193735897}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( MUC / ( CS / RMSe ) ) * ( MLU / MUR ) ) ) ),CS ) ) )", "obj1": 0.6552462526766595, "obj2": 0.19813503610525177}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( Max( DDR,Min( ( MRS * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RCSe + ( ( Max( RMSe,( ( ( RRSe + RCSe ) + RRSe ) - CS ) ) + Max( CS,Max( Max( ( RCSe / Max( RMSe,MUC ) ),RCSe ),RRSe ) ) ) / Max( Min( ( DS + ( MUM + CS ) ) ,MUR ),( MLU * ( ( Min( MUC ,( RCSe / CS ) ) * MUC ) / CS ) ) ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18019505298167207}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,DDR ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( Min( CS ,( MLU - ( RRSe + RRSe ) ) ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,MUC ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6809421841541756, "obj2": 0.16752274947459944}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( DDR * MDR ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - Max( RMSe,MUC ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8051391862955032, "obj2": 0.09524964737978209}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / CS ) ) - ( CS / MUR ) ) - ( MLU / MUR ) ) ) ),Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08764623849800922}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Max( CRS,DDR ) ,( CRS * DDR ) ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,( PN + Const ) ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( ( MUC + RRSe ),( MUM + RCSe ) ) )", "obj1": 0.715203426124197, "obj2": 0.1437271699939772}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) + Max( CRS,( Const / FirstVNF_CPU ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + Min( ( DS / Max( MUM,MLU ) ) ,Min( DS ,MLU ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06181307410435566}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( DDR * MDR ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Min( DS ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,MLU ) )", "obj1": 0.8051391862955032, "obj2": 0.09524964737978209}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * Max( RRS,FirstVNF_CPU ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( ( RRSe * MLU ) - MUC ),Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08764623849800922}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( FirstVNF_CPU,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.1340654956309915}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( FirstVNF_CPU,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13934673198297862}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Max( CRS,DDR ) ,( CRS * DDR ) ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,( PN + Const ) ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Max( Min( Min( Max( ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + ACS ) ),FirstVNF_Mem ) ,Min( ( ARS * ( Max( MRS,ACS ) - MDR ) ) ,( ( ARS + PN ) + Min( ( ARS * PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.1437271699939772}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * ( AMS - PN ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( Max( AMS,BR ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,MLU ),RMSe ) + Max( Max( Max( Max( ( MUM / ( MLU - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( ( Min( MLU ,RMSe ) + DS ) + ( MUM - MLU ) ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.12904005810641286}, {"determining": "( ( ( PN * PN ) / Min( ( ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( DS + Max( ( MUC + ( RCSe + ( ( ( MUM / ( RCSe / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6638115631691649, "obj2": 0.18780615096750003}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,Min( MRS ,ACS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - MDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC - Min( DS ,MUM ) ) - ( ( ( DS - MUM ) / RMSe ) + Max( MUC,RCSe ) ) ) + ( RMSe / ( CS / RMSe ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09213074577317636}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.9336188436830836, "obj2": 0.030150222122240014}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( FirstVNF_CPU,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM * MUC ) ) ) ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.1340654956309915}, {"determining": "( ( ( PN * PN ) / Min( MRS ,AMS ) ) - ( ARS / ARS ) )", "choosing": "( ( ( ( MUC / RMSe ) / ( RCSe - CS ) ) / ( ( ( ( MUM / Max( Max( MUC,MUC ),MUM ) ) / MLU ) * RMSe ) / MUC ) ) + ( MUC * MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.13660061122049436}, {"determining": "( ( AMS - ( MDR / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( RCSe / MLU ) * RCSe ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04967005950229463}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( AMS,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( RRSe,RCSe ) ) - ( ( ( Max( ( RRSe + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) )", "obj1": 0.6852248394004282, "obj2": 0.16379238946043478}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_RAM_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ) ) + ( Min( DS ,MLU ) + Min( RMSe ,( ( Max( RRSe,Min( MUM ,RRSe ) ) * ( ( MUC * RMSe ) / DS ) ) + MUC ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09954240113341752}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( ( ( ( PN * PN ) / ( ( ( PN + PN ) / Min( PN ,MRS ) ) - Max( DDR,CRS ) ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_RAM_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ) ) + ( Min( DS ,RMSe ) + Min( RMSe ,( ( Max( RRSe,Min( MUM ,RRSe ) ) * ( ( MUC * RMSe ) / DS ) ) + MUC ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0018724135383203408}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * FirstVNF_CPU ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( RMSe / ( RCSe / RMSe ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,MLU ) )", "obj1": 0.7451820128479657, "obj2": 0.12668139402331452}, {"determining": "( ( ( ( ( ( PN * PN ) / ( MRS / ARS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( PN * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) + ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Max( MUM,CS ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( CS / ( MUM * CS ) ) ) - ( MLU / MUC ) ) ) ),( MUC * RMSe ) ) )", "obj1": 0.854389721627409, "obj2": 0.07042542781143092}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - DDR ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - AMS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( Min( BR ,DDR ) * ( RRS - AMS ) ) )", "choosing": "( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / RMSe ) ) - ( DS + ( MUC - CS ) ) ) - ( Min( DS ,RCSe ) / MUR ) ) ) ),Max( Max( ( ( ( ( RCSe + RCSe ) - CS ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( ( RMSe * ( MUC - RRSe ) ) * ( MUM * CS ) ) ) ) )", "obj1": 0.8843683083511777, "obj2": 0.05649185645280952}, {"determining": "( ( AMS - DDR ) - ( ( MDR + Max( RRS,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server - MDR ) * ( RRS - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05427951011035075}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,( FirstVNF_CPU_Server + ( ( ACS / BR ) - Const ) ) ) ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ACS * FirstVNF_RAM ) ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ( Const / Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RRSe / RMSe ) ) - ( RMSe / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( MUM + RCSe ) + ( ( ( Max( CS,MUR ) - RCSe ) + CS ) + DS ) ) + RCSe ) ) )", "obj1": 0.7773019271948608, "obj2": 0.10966111758120582}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( BR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( Max( AMS,BR ) * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM + MDR ) ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( MLU / MUR ) - ( RMSe / ( CS / MLU ) ) ) - Max( ( RMSe / ( MUM / RMSe ) ),MUC ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.07673306304734444}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( CS + RRSe ) - CS ) + ( RMSe * RCSe ) )", "obj1": 0.9336188436830836, "obj2": 0.030150222122240014}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * MDR ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( DDR * MDR ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Min( DS ,MUM ) ),( ( CS / MUC ) + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,MLU ) )", "obj1": 0.7987152034261242, "obj2": 0.09844815938256889}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / RRS ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUC / RMSe ) / ( RCSe - CS ) ) / ( ( DS * RMSe ) / MUC ) ) + ( MUC * MUR ) )", "obj1": 0.9550321199143469, "obj2": 0.01966034215236357}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,FirstVNF_RAM ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Max( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ),Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / RRSe ) ) ),( MUR - ( MUM + DS ) ) ) ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( RMSe * Min( RCSe ,Max( ( CS / RMSe ),DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) )", "obj1": 0.9036402569593148, "obj2": 0.046821577902780895}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( Max( AMS,BR ) * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( DS ,( ( MLU * DS ) / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + RRSe ) ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.07673306304734444}, {"determining": "( ( ( PN * PN ) / PN ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_RAM_Server - DDR ) ) * PN ) ) ) )", "choosing": "( ( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( Max( RMSe,( RRSe / MUC ) ) - CS ) ) ) + ( MUC * MUR ) )", "obj1": 0.9635974304068522, "obj2": 0.01597914313640098}, {"determining": "( ( PN * ( ( DDR / ( FirstVNF_CPU / PN ) ) - CRS ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( FirstVNF_CPU - MDR ) ) / Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,MLU ) - ( DS + Min( RMSe ,RCSe ) ) ) + MUR ) / DS ) + ( ( ( CS - Max( MLU,RRSe ) ) - RMSe ) * ( ( Max( RMSe,CS ) / Min( MLU ,( MUM / CS ) ) ) / ( ( Min( MLU ,DS ) + MUM ) + ( MUM - MLU ) ) ) ) ) * ( ( RMSe - Min( ( ( Min( MLU ,DS ) + MUM ) + ( MUM - MLU ) ) ,MUM ) ) / ( RRSe * RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( ( PN * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( ( ( FirstVNF_Mem * PN ) * ( AMS * MDR ) ) / Max( RRS,FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) - Min( Max( ( ( AMS - DDR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),Max( ARS,FirstVNF_CPU ) ) ) ) ) ,MRS ) )", "choosing": "( Max( ( RRSe - ( MUM / CS ) ),MUR ) + ( ( RRSe * MLU ) - MUC ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}], "51": [{"determining": "( ( ( DDR / DDR ) * ( AMS * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( Max( DDR,MRS ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,( MUR / RCSe ) ) + Max( ( MUC + ( RCSe + ( ( RMSe / ( ( MUR * RRSe ) / ( RRSe / RRSe ) ) ) - Max( ( RRSe - ( MUM / CS ) ),MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( ( ( ( ( ( RRSe / Min( RCSe ,CS ) ) / ( RMSe * RMSe ) ) * ( Min( MLU ,MUR ) - ( RCSe / MUR ) ) ) + RMSe ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,MUC ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( DDR / CRS ) ) ) ,Max( Max( MDR,FirstVNF_CPU ),( MRS + FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - ( ( PN * PN ) / Min( ( ( PN * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) / ( MRS - ACS ) ) ,( ARS * CRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( RRSe / Min( RCSe ,CS ) ) / ( RMSe * RMSe ) ) * ( Min( MLU ,MUR ) - ( RCSe / MUR ) ) ) + RMSe ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,MUC ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6402569593147751, "obj2": 0.22164305537071466}, {"determining": "( ( ( PN * PN ) / Min( ( Min( MRS ,ACS ) - ( PN * PN ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( ARS - Max( DDR,ARS ) ) ) ,( ( PN + ARS ) + Min( Max( ARS,PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( ( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Max( MUC,MUM ) ) ) ) * Max( MUM,RMSe ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - ( MRS / Min( MRS ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - ( ( MDR * MDR ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( RMSe * MUR ) - ( Min( ( MUR / ( CS + DS ) ) ,MLU ) / ( MLU / DS ) ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17316280315061913}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Max( CRS,DDR ) ,( CRS * DDR ) ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,( PN + Const ) ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( MRS ,( RRS - FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( ( MUM / ( RCSe / ( RCSe / MUC ) ) ) + ( MUM - Min( Min( DS ,MLU ) ,( ( RRSe / RMSe ) / Max( MLU,MUR ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.15872596141322903}, {"determining": "( ( AMS - DDR ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server / Const ) + Max( ( ( PN + AMS ) * PN ),Min( Max( DDR,FirstVNF_RAM ) ,( RRS / FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "Min( Max( ( ( MUM + ( Min( ( ( MUM - MUC ) / MLU ) ,( MUM / DS ) ) + RMSe ) ) - Max( CS,RMSe ) ),( ( MUR - CS ) / ( Min( ( CS - MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) / ( ( MUM - MLU ) + ( ( RCSe * RCSe ) - CS ) ) ) ) ) ,Min( MLU ,MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.03936676971681004}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) + Max( CRS,( Const / FirstVNF_CPU ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + Min( ( DS / Max( MUM,MLU ) ) ,Min( DS ,MLU ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06181307410435566}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR / FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / Min( DDR ,( DDR + MRS ) ) ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / CS ) ) - ( CS / MUR ) ) - ( ( ( MUR - MUC ) / MUR ) / MUR ) ) ) ),Max( ( MUM + RCSe ),( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) + RMSe ) - CS ) ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08218921966841114}, {"determining": "( ( ( AMS - DDR ) - ( ( CRS - ( BR / Max( FirstVNF_Mem_Server,( AMS / FirstVNF_CPU ) ) ) ) + FirstVNF_Mem ) ) - Min( ( ( MDR - ( DDR - ( ( RRS * PN ) / ( AMS - FirstVNF_CPU ) ) ) ) - ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( MRS,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( DS ,( ( MLU * DS ) / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + RRSe ) ) ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08556520324879}, {"determining": "( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( Const - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( PN * PN ) ) * MDR ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ) * Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RMSe / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.07995864958950186}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_Mem_Server ) ) * PN ) ) ) ) - ( FirstVNF_RAM_Server * ( Const / Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,( FirstVNF_RAM * MDR ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RRSe / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( MUM + RCSe ) + ( ( ( DS / ( MUM - RRSe ) ) + CS ) + DS ) ) + RCSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.059131011063264995}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Max( CRS,DDR ) ,( CRS * DDR ) ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,( PN + Const ) ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - ( AMS - DDR ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( ( MUM / ( RCSe / RMSe ) ) + ( MUM - Min( Min( DS ,MLU ) ,( ( RRSe / RMSe ) / Max( MLU,MUR ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.69593147751606, "obj2": 0.1534005440300203}, {"determining": "( Min( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * ( ( Const / Const ) - ( RRS - FirstVNF_CPU ) ) ) ) ) ) ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( Max( MUC,RMSe ) * ( MUC * RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.8907922912205567, "obj2": 0.053756620106210996}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * FirstVNF_CPU ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( RMSe * MUR ) - ( Min( ( MUR / ( CS + DS ) ) ,MLU ) / ( MLU / DS ) ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7473233404710921, "obj2": 0.1255056934714203}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,Min( MRS ,ACS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - MDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - ( FirstVNF_CPU * BR ) ),BR ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUC - Min( DS ,MUM ) ) - ( ( ( DS - MUM ) / RMSe ) + Max( MUC,RCSe ) ) ) + ( RMSe / ( CS / RMSe ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09213074577317636}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_RAM_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ) ) + ( Min( DS ,MLU ) + Min( RMSe ,( ( Max( RRSe,Min( MUM ,RRSe ) ) * ( ( MUC * RMSe ) / DS ) ) + MUC ) ) ) )", "obj1": 0.8137044967880086, "obj2": 0.09074764919403552}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * FirstVNF_CPU ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - MDR )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( Max( MUR,MUC ) - ( Min( ( MUR / ( CS + DS ) ) ,MLU ) / ( MLU / DS ) ) ) * ( ( CS - MUM ) / ( ( Min( MLU ,CS ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12217673300140554}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / RRS ) ) ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( PN * PN ) ) * MDR ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) * Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RMSe / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.9271948608137045, "obj2": 0.033243139895206233}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( AMS,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( RRSe,RCSe ) ) - ( ( ( Max( ( RRSe + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) * ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) )", "obj1": 0.6852248394004282, "obj2": 0.16379238946043478}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - FirstVNF_CPU ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - ( ( MDR - ( RRS - DDR ) ) * PN ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / Max( MUC,DS ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14620702405958347}, {"determining": "( ( ( PN * PN ) / Min( MRS ,BR ) ) - Max( ( RRS - AMS ),( FirstVNF_RAM + AMS ) ) )", "choosing": "( Min( RCSe ,Max( MUM,CS ) ) + Max( ( Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Min( MUC ,MUM ) ) ) ),( CS / MUR ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.6466809421841542, "obj2": 0.20961796871409952}, {"determining": "( ( ( PN * PN ) / PN ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_RAM_Server - DDR ) ) * PN ) ) ) )", "choosing": "( ( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( Max( RMSe,( RRSe / MUC ) ) - CS ) ) ) + ( MUC * MUR ) )", "obj1": 0.9635974304068522, "obj2": 0.01597914313640098}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( RMSe * ( MUC - RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - ( DS * RMSe ) ) ) ) + DS ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.024619805371515396}, {"determining": "( ( ( PN * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( ( ( FirstVNF_Mem * PN ) * ( AMS * MDR ) ) / Max( RRS,FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) - Min( Max( ( ( AMS - DDR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),Max( ARS,FirstVNF_CPU ) ) ) ) ) ,MRS ) )", "choosing": "( Max( ( RRSe - ( MUM / CS ) ),MUR ) + ( ( RRSe * MLU ) - MUC ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( PN * Min( ( PN + ( ( FirstVNF_Mem_Server * Min( DDR ,DDR ) ) - ( DDR * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ,MDR ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( PN * PN ) ) * MDR ) / ( RRS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe * MLU ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RMSe / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( ( ( RRSe / Min( RCSe ,CS ) ) / ( RMSe * RMSe ) ) + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012191897352641576}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - ( RRS / Min( ( MRS - CRS ) ,FirstVNF_RAM ) ) ) + BR ) * ( Max( DDR,CRS ) - ( ( PN * PN ) / Min( MRS ,ACS ) ) ) ) ,Min( ( Max( ( RRS / Max( Min( ACS ,AMS ),( ACS - RRS ) ) ),MDR ) / Max( ( FirstVNF_Mem * PN ),( AMS * FirstVNF_CPU ) ) ) ,( PN * BR ) ) ) - Min( ( ( AMS - ( FirstVNF_RAM - ( ARS * FirstVNF_RAM ) ) ) - ( ( ( PN + PN ) / Min( MRS ,ACS ) ) - Max( DDR,Min( ( ( RRS - FirstVNF_Mem_Server ) - AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,Max( FirstVNF_CPU,( FirstVNF_CPU_Server - CRS ) ) ) )", "choosing": "( ( ( MUC / ( ( ( MLU * ( ( DS * RCSe ) - ( RCSe + MUM ) ) ) / MUM ) / RRSe ) ) / ( ( MUC * MLU ) / MLU ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( MUM - ( ( DS / ( RCSe - RCSe ) ) * ( RMSe / RMSe ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MUC / RMSe ) ) * ( MUM / MLU ) ) + MUC ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13099495844402528}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / RRS ) ) ) ) ) - ( ( PN * Max( RRS,FirstVNF_CPU ) ) / ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( ( ( ( MUC / Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) / ( RCSe - CS ) ) / ( ( DS * RMSe ) / MUC ) ) + ( MUC * MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.018866826766059133}, {"determining": "( Min( ( ( Min( Min( Min( ( ACS * FirstVNF_RAM ) ,Max( AMS,MDR ) ) ,ACS ) ,MRS ) + ( BR - FirstVNF_RAM ) ) / PN ) ,Min( MDR ,( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) - Max( Min( Min( Max( BR,AMS ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,Max( CRS,DDR ) ) ) ,Min( Min( FirstVNF_CPU ,MDR ) ,( CRS - MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / MUC ) / MUR ) + Max( ( RRSe + DS ),( ( MLU * MUM ) - Max( ( ( MUC * ( DS * Max( RMSe,MUC ) ) ) * ( MUM * MUC ) ),MUM ) ) ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( Max( ( FirstVNF_Mem / FirstVNF_Mem ),FirstVNF_Mem_Server ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( Max( RRSe,MUR ) + MUM ) + MLU ) ,RCSe ) ,Max( ( ( CS * CS ) - ( RCSe - ( ( ( ( RMSe / MLU ) * CS ) - MUR ) - RCSe ) ) ),RMSe ) )", "obj1": 0.6573875802997858, "obj2": 0.19435095729025784}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Max( CRS,DDR ) ,( CRS * DDR ) ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,( PN + Const ) ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Max( Min( Min( Max( ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + ACS ) ),FirstVNF_Mem ) ,Min( RRS ,( ( ARS + PN ) + Min( ( ARS * PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( RMSe + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14362218450595582}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( FirstVNF_CPU,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( RCSe + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13568515785649582}, {"determining": "( ( ( ( ( AMS - MDR ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / Min( DDR ,DDR ) ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / CS ) ) - ( CS / MUR ) ) - ( MLU / ( CS * ( RCSe * RRSe ) ) ) ) ) ),Max( ( MUM + RCSe ),( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) + RMSe ) - CS ) ) ) )", "obj1": 0.9079229122055674, "obj2": 0.043573103828851815}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,DDR ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,( ( RMSe / ( RCSe / RRSe ) ) - ( MLU / MUR ) ) ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.6809421841541756, "obj2": 0.16752274947459944}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Max( CRS,DDR ) ,( CRS * DDR ) ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,( PN + Const ) ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Max( Min( Min( Max( ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + ACS ) ),FirstVNF_Mem ) ,Min( ( ARS * ( Max( MRS,ACS ) - MDR ) ) ,( ( ARS + PN ) + Min( ( ARS * PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.14081445590087405}, {"determining": "( ( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) + ( ( ARS + ( MRS - DDR ) ) - FirstVNF_CPU ) ) * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem * PN ) * ( AMS - MDR ) ) / Max( CRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( ( ( MUM / CS ) * CS ) / ( ( MUC - ( RCSe + RRSe ) ) * ( MUC / MUC ) ) ) + RMSe ) + Min( ( ( DS * RCSe ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + Max( ( MUM + Max( RMSe,( ( ( MUM + RCSe ) + RRSe ) - CS ) ) ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8993576017130621, "obj2": 0.047173874615453255}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,BR ) ) - ( FirstVNF_RAM_Server + BR ) ) * ( Min( ( MDR - ARS ) ,( FirstVNF_RAM / RRS ) ) * FirstVNF_RAM_Server ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( CS * MLU ) - CS ) - CS ),( ( MUC - RMSe ) - CS ) ) + ( Min( DS ,MLU ) + Max( ( ( MUM - CS ) / ( Min( ( ( MUC + RCSe ) - ( MUC + MUR ) ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ),( MUC / DS ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.11787877806771645}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Max( CRS,DDR ) ,( CRS * DDR ) ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,( PN + Const ) ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Max( Min( Min( Max( ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + ACS ) ),FirstVNF_Mem ) ,Min( ( ARS * ( Max( MRS,ACS ) - MDR ) ) ,( ( ARS + PN ) + Min( ( ARS * PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.7066381156316917, "obj2": 0.14757644047238935}, {"determining": "( ( ( PN * PN ) / Min( PN ,( ARS * CRS ) ) ) - Max( Min( Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Min( ( CRS - MDR ) ,( ( ( FirstVNF_RAM - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - AMS ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( ( ( ( ( MUC * DS ) - ( MUR - CS ) ) / MUM ) * ( MLU + ( MUR / ( MUC + MUM ) ) ) ),RCSe ) / MUC ) ) + ( MUC * MUR ) )", "obj1": 0.6509635974304069, "obj2": 0.20437614344206811}, {"determining": "( ( ( PN * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( ( ( FirstVNF_Mem * PN ) * ( AMS * MDR ) ) / Max( RRS,FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) - Min( Max( ( ( AMS - DDR ) * MRS ),( ( CRS - Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM ) ) - ( MDR - Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),Max( ARS,FirstVNF_CPU ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + MUR ) ),( ( ( MUM + Min( RMSe ,DS ) ) + RRSe ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.027528698354732917}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( CRS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( RCSe * MUC ) ,MLU ) + RRSe ) - CS ) + ( RMSe * RCSe ) )", "obj1": 0.9207708779443254, "obj2": 0.03667016443526941}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( ( ( PN - PN ) - FirstVNF_CPU ) * PN ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( ( MRS - BR ) / BR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + MUR ) ),( ( ( MUM + Min( MUC ,Max( Max( RRSe,MUR ),MUR ) ) ) + RRSe ) + Max( RCSe,MUC ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.11552618753550983}, {"determining": "( ( ( ( Max( DDR,CRS ) + ( Min( ( ARS - ( PN * MDR ) ) ,ACS ) / ( PN * PN ) ) ) - Min( ( Min( ( FirstVNF_RAM_Server + MRS ) ,Const ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( Max( FirstVNF_Mem_Server,BR ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) ) ) / ( PN - FirstVNF_CPU_Server ) ) - ( PN + ( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUM ) * ( Max( ( RCSe + ( ( ( CS / RMSe ) - ( RMSe * MUM ) ) - Min( ( DS / MUM ) ,RRSe ) ) ),MUM ) - CS ) ) + Max( CS,( ( MUM + MUR ) * MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.07304359056300339}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( ( ( MDR - Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),Max( ( RCSe / ( ( RMSe * RCSe ) / Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) ),CS ) ) )", "obj1": 0.6552462526766595, "obj2": 0.19813503610525177}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * ( RRS - PN ) ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - Max( ACS,MDR ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Max( ( RRSe + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Max( Min( Min( MUR ,Max( DS,RCSe ) ) ,CS ),Min( MUM ,RCSe ) ) ) ),( MUC + ( RCSe + ( Max( MUC,RCSe ) - CS ) ) ) ) + RCSe )", "obj1": 0.8586723768736617, "obj2": 0.06801297416467587}, {"determining": "( ( ( PN * PN ) / Min( ( ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * FirstVNF_RAM_Server ) / Min( MRS ,ACS ) ) ,( CRS * ARS ) ) ) - Max( ( Min( ( Max( PN,( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) * RRS ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( DS + Max( ( MUC + ( RCSe + ( ( ( MUM / ( RCSe / RMSe ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.6638115631691649, "obj2": 0.18780615096750003}, {"determining": "( ( ( ( ( ( PN * PN ) / ( FirstVNF_Mem - ( FirstVNF_RAM_Server / PN ) ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / BR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + MUR ) ),( ( RCSe * MUC ) + ( ( ( MUC / MUC ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.11189352552878147}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,( FirstVNF_CPU_Server + ( ( ACS / BR ) - Const ) ) ) ) - ( ( ( MDR - FirstVNF_CPU_Server ) + ( ACS * FirstVNF_RAM ) ) + FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server * ( Const / Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RRSe / RMSe ) ) - ( RMSe / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( MUM + RCSe ) + ( ( ( Max( CS,MUR ) - RCSe ) + CS ) + DS ) ) + RCSe ) ) )", "obj1": 0.7773019271948608, "obj2": 0.10966111758120582}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( DDR * MDR ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - Max( RMSe,MUC ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09741167993767172}, {"determining": "( ( ( ( PN * PN ) / Max( MRS,ACS ) ) - Max( CRS,DDR ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / ( RRS - ( FirstVNF_Mem + Min( Const ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.15018998151383628}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_RAM_Server ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),Min( Min( ( ACS * Max( FirstVNF_CPU,MRS ) ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),Min( DS ,( MUM * ( Min( RCSe ,MUC ) * Max( ( MUM - CS ),MUC ) ) ) ) ) ) + ( Min( MLU ,DS ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( MUM / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.1371777208951562}, {"determining": "( ( ( ( ( ( ARS * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - DDR ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - AMS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( Min( Min( Max( BR,FirstVNF_Mem ) ,Max( RRS,DDR ) ) ,Min( ( CRS / PN ) ,( PN * PN ) ) ) + ( RRS - AMS ) ) )", "choosing": "( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,RMSe ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / RMSe ) ) - ( DS + ( MUC - CS ) ) ) - ( Min( DS ,RCSe ) / MUR ) ) ) ),Max( Max( ( ( ( MLU - CS ) / MUM ) * ( CS * MUR ) ),Min( MUR ,( MUM + DS ) ) ),( ( RMSe * ( MUC - RRSe ) ) * ( MUM * CS ) ) ) ) )", "obj1": 0.8458244111349036, "obj2": 0.07458730764465374}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - DDR ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - AMS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( Min( BR ,DDR ) * ( RRS - AMS ) ) )", "choosing": "( Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR / MUM ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / RMSe ) ) - ( DS + ( MUC - CS ) ) ) - ( Min( DS ,RCSe ) / MUR ) ) ) ),Max( Max( ( ( ( ( RCSe + RCSe ) - CS ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( ( RMSe * ( MUC - RRSe ) ) * ( MUM * CS ) ) ) ) )", "obj1": 0.8843683083511777, "obj2": 0.05649185645280951}, {"determining": "( ( ( PN * Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ARS ) ) ) - ( FirstVNF_CPU + ( ( ( ( FirstVNF_Mem * PN ) * ( AMS * MDR ) ) / Max( Max( BR,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU_Server ) ) ) ) - Min( Max( ( ( AMS - DDR ) * MRS ),( ( CRS - Min( ( Const * CRS ) ,FirstVNF_RAM ) ) - ( MDR - Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),Max( ARS,FirstVNF_CPU ) ) ) ) ) ,( ( ( Min( RRS ,Max( PN,ACS ) ) * PN ) / Min( MRS ,ACS ) ) - PN ) ) )", "choosing": "( ( ( MUR * MLU ) - MUC ) + ( RRSe * DS ) )", "obj1": 0.9400428265524625, "obj2": 0.0263622550114003}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / RRS ) ) ) ) ) - Min( AMS ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,Max( MUM,CS ) ) + Max( ( Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / Min( MUC ,MUM ) ) ) ),( CS / MUR ) ) + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.9507494646680942, "obj2": 0.02168392894267871}, {"determining": "( ( ( PN * PN ) / PN ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - ( Max( ARS,ARS ) + FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) * PN ) ) ) )", "choosing": "( Min( Max( RRSe,RCSe ) ,( MUR - ( ( ( RRSe * RCSe ) / RCSe ) - RRSe ) ) ) + ( MUC * MUR ) )", "obj1": 0.9657387580299786, "obj2": 0.015000517660122085}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ( AMS - ( FirstVNF_RAM - FirstVNF_CPU ) ) - ( MDR - FirstVNF_CPU ) ) ,( Max( ( DDR / RRS ),( ( Max( BR,PN ) / PN ) / Min( ARS ,( BR - MRS ) ) ) ) - ( ( CRS - ( BR / ACS ) ) + FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUC + MLU ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / CS ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),Max( Max( ( ( MUR + DS ) / RRSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUM ) * Max( MUC,MUR ) ) ) ) ) ) )", "obj1": 0.867237687366167, "obj2": 0.06487015497117518}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / RRS ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUC / RMSe ) / ( RCSe - CS ) ) / ( ( DS * RMSe ) / MUC ) ) + ( MUC * MUR ) )", "obj1": 0.9550321199143469, "obj2": 0.01966034215236357}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( CRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - FirstVNF_CPU ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - ( ( MDR - ( RRS - DDR ) ) * PN ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / Max( MUC,DS ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( MUM / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14301539551607367}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( MUC / ( CS / RMSe ) ) * ( MLU / MUR ) ) ) ),CS ) ) )", "obj1": 0.6616702355460385, "obj2": 0.19165525713518336}, {"determining": "( ( AMS - ( MDR / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( MLU / MUR ) - ( RMSe / ( CS / MLU ) ) ) - Max( ( RMSe / ( MUM / RMSe ) ),MUC ) ) ) ),( MUM + RCSe ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04967005950229463}, {"determining": "( ( AMS - AMS ) - Max( ( ( ARS + Max( ( ( PN / ( CRS / RRS ) ) + BR ),PN ) ) - FirstVNF_RAM ),( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUC / ( ( ( MUC - CS ) / Max( MUR,MUM ) ) + ( ( MUM - RCSe ) - DS ) ) ) + RMSe ) + Min( ( ( MLU * CS ) / ( RCSe + RCSe ) ) ,MLU ) ) + DS ) + ( MLU + CS ) )", "obj1": 0.880085653104925, "obj2": 0.05726930073595236}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + DS ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.9336188436830836, "obj2": 0.030150222122240014}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( PN * ( RRS - AMS ) ) - ( AMS - DDR ) ) * PN ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( MUC / MUR ) * ( MLU / MUR ) ) ) ),CS ) ) )", "obj1": 0.6552462526766595, "obj2": 0.19813503610525177}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Max( MUM,MLU ),RMSe ) + Max( Max( Max( Max( ( MUM / ( MLU - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.1764230924720363}, {"determining": "( ( ACS / CRS ) - Max( ( CRS * Min( ( Max( ( ( AMS - PN ) - ( DDR * FirstVNF_RAM_Server ) ),( RRS - FirstVNF_CPU ) ) / ( RRS - FirstVNF_CPU ) ) ,Min( ARS ,( FirstVNF_CPU_Server / AMS ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / MUR ) ,Max( RRSe,( MUM * CS ) ) )", "obj1": 0.6659528907922913, "obj2": 0.18686729213412878}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( MDR / Min( MRS ,FirstVNF_RAM ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / ( Max( DDR,Min( ( FirstVNF_RAM_Server * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Max( MUM,MLU ),RMSe ) + Max( Max( Max( Max( ( MUM / ( MLU - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MUM / MUR ) ) - ( MLU / MUR ) ) ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.16752274947459944}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( FirstVNF_CPU,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.138743072625001}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( DDR * MDR ) )", "choosing": "( Max( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) + DS ),Min( Min( Max( MUR,( RRSe * MUR ) ) ,( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) ) ,CS ) ) + Max( ( MUM + MUC ),RCSe ) )", "obj1": 0.8051391862955032, "obj2": 0.09524964737978209}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / CS ) ) - ( CS / MUR ) ) - ( MLU / MUR ) ) ) ),Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08764623849800922}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - Max( ACS,MDR ) ) - Min( MRS ,MRS ) ) )", "choosing": "( Max( ( RRSe + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Max( Min( Min( MUR ,Max( DS,RCSe ) ) ,CS ),Min( MUM ,RCSe ) ) ) ),( MUC + ( RCSe + ( Max( MUC,RCSe ) - RCSe ) ) ) ) + RCSe )", "obj1": 0.860813704496788, "obj2": 0.06683754070135983}, {"determining": "( Min( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - Min( AMS ,FirstVNF_Mem_Server ) ) * ( ( Const / Const ) - ( RRS - FirstVNF_CPU ) ) ) ) ) ) ,( FirstVNF_Mem_Server * ( ARS / FirstVNF_CPU_Server ) ) ) - DDR )", "choosing": "( ( ( ( RMSe + ( ( ( Max( MUC,RMSe ) * ( MUC * RRSe ) ) * CS ) / ( MLU * ( MUC / MUC ) ) ) ) + ( MUM + ( MUM - MUR ) ) ) + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ) + Max( ( RCSe + MUM ),( ( ( Max( MUR,Max( RMSe,( MUM * RRSe ) ) ) / Min( MLU ,( ( DS - MUR ) + RRSe ) ) ) + RMSe ) * CS ) ) )", "obj1": 0.8650963597430407, "obj2": 0.06596546978746576}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( DDR * ( ( MDR - PN ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ARS * ( Max( Const,ACS ) - MDR ) ) - ( DDR + CRS ) ) - Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,FirstVNF_RAM ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Max( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ),Max( ( ( ( MLU - RRSe ) / MUM ) * ( MLU + ( MUR / RRSe ) ) ),( MUR - ( MUM + DS ) ) ) ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( RMSe * Min( RCSe ,Max( ( CS / RMSe ),DS ) ) ) / ( RMSe / MUR ) ) * RCSe ) ) )", "obj1": 0.9036402569593148, "obj2": 0.046821577902780895}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * ( ( FirstVNF_CPU / PN ) - Max( DDR,CRS ) ) ) / Min( FirstVNF_RAM ,ACS ) ) ,( ARS * FirstVNF_Mem ) ) ) - Max( Min( Min( Max( ( RRS - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + ACS ) ),FirstVNF_Mem ) ,Min( ( ARS * ( Max( MRS,ACS ) - MDR ) ) ,( ( ARS + PN ) + Min( ( ARS * PN ) ,FirstVNF_Mem ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RMSe ) + Max( ( MUM + ( ( RRSe + ( ( MUR - CS ) + RCSe ) ) - Min( ( DS / ( MUM - CS ) ) ,MUR ) ) ),( MUC + ( RCSe + ( ( MUC * RCSe ) - ( DS - ( ( MLU + RMSe ) * MUR ) ) ) ) ) ) )", "obj1": 0.7601713062098501, "obj2": 0.11962834580173726}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( DDR * MDR ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RCSe / MLU ) ) - ( MLU / MUR ) ) - Max( RMSe,MUC ) ) ) ),Max( Max( ( ( ( MLU - RRSe ) / MUM ) * RCSe ),Min( MUR ,( MUM + DS ) ) ),( DS * ( MUM * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ) ) )", "obj1": 0.8051391862955032, "obj2": 0.09524964737978209}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * Max( RRS,FirstVNF_CPU ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( RRSe / RMSe ) ) - ( RMSe / MUR ) ) - ( MLU / MUR ) ) ) ),( ( ( MUM + RCSe ) + ( ( ( Max( CS,MUR ) - RCSe ) + CS ) + DS ) ) + RCSe ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08764623849800922}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( CS + RRSe ) - CS ) + ( RMSe * RCSe ) )", "obj1": 0.9336188436830836, "obj2": 0.030150222122240014}, {"determining": "( ( ( PN * PN ) / Min( FirstVNF_Mem ,( ( AMS - Min( MRS ,Min( ( CRS - MDR ) ,( AMS / FirstVNF_CPU_Server ) ) ) ) * CRS ) ) ) - Max( Min( Min( Max( BR,FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,ACS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) ),Min( Min( ( Max( FirstVNF_CPU,MRS ) * ACS ) ,( CRS / BR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / CS ) * CS ) / ( Max( RCSe,( RMSe * RCSe ) ) * ( MUC / MUC ) ) ) - CS ) - CS ),( MUM / RCSe ) ) + ( Min( DS ,MLU ) + ( ( ( MUC * MUR ) - Max( MUC,DS ) ) * ( ( MUM - CS ) / ( ( Max( RRSe,( CS / MUC ) ) / ( ( RRSe / RMSe ) / ( MUR - RCSe ) ) ) / ( ( Min( MLU ,DS ) + DS ) + ( MUM - MLU ) ) ) ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.1340654956309915}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * ( AMS - PN ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( Max( AMS,BR ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,MLU ),RMSe ) + Max( Max( Max( Max( ( MUM / ( MLU - RRSe ) ),RCSe ),( ( MUM - CS ) - DS ) ),( DS * ( ( ( Max( MLU,MUC ) * ( RMSe - MUC ) ) - ( RCSe / DS ) ) * ( Min( RCSe ,MUC ) * Max( MUR,MUC ) ) ) ) ),( MUC + ( ( Min( MLU ,RMSe ) + DS ) + ( MUM - MLU ) ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.12904005810641286}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( Max( CRS,DDR ) ,( CRS * DDR ) ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,( PN + Const ) ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,( MDR - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( MUC - Min( DS ,MUM ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( DS ,MLU ) ,( ( RRSe / RMSe ) / Max( MLU,MUR ) ) ) ) ) ) ,( MUM + RCSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.15205851376919424}, {"determining": "( ( ( PN * PN ) / ( Min( AMS ,FirstVNF_Mem_Server ) * ( ARS * CRS ) ) ) - ( ( FirstVNF_Mem - ( ( PN - FirstVNF_Mem ) / MRS ) ) + MDR ) )", "choosing": "( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),Max( ( RCSe / ( ( RMSe * RCSe ) / ( ( MUC / ( CS / RMSe ) ) * ( MLU / MUR ) ) ) ),CS ) ) )", "obj1": 0.6595289079229122, "obj2": 0.19191321904818692}, {"determining": "( ( FirstVNF_RAM_Server + Const ) - ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server + DDR ) * Max( AMS,( FirstVNF_CPU / BR ) ) ) - FirstVNF_RAM ) - ( RRS - FirstVNF_CPU ) ) ) - ( ( DDR / CRS ) + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( FirstVNF_CPU_Server + RRS ) / Max( PN,PN ) ) ) ) ) ) )", "choosing": "( ( ( RCSe * Min( Max( RRSe,( CS / MUC ) ) ,CS ) ) - Max( Min( Min( ( ( MUR / ( RRSe / MUC ) ) * ( CS - RRSe ) ) ,MLU ) ,( RMSe - RCSe ) ),MUR ) ) + Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07090617904002985}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( Max( DDR,Min( ( MRS * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( DS ,( ( MLU * DS ) / RCSe ) ) + ( Min( DS ,MLU ) + Max( ( Max( MUC,DS ) - MUR ),( ( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) - ( ( DS / ( MLU - RCSe ) ) * ( RMSe / Max( RRSe,MUR ) ) ) ) / ( ( ( Min( RRSe ,MUC ) - ( MLU / RMSe ) ) * ( MLU / MUM ) ) + RRSe ) ) ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18019505298167207}, {"determining": "( ( ( PN * PN ) / Min( PN ,( ARS * CRS ) ) ) - Max( Min( Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Min( ( CRS - MDR ) ,( ( ( FirstVNF_RAM - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - AMS ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( Max( ( ( ( ( MUC * DS ) - ( MUR - CS ) ) / MUM ) * ( MLU + ( MUR / ( MUC + MUM ) ) ) ),RCSe ) / MUC ) ) + ( MUC * MUR ) )", "obj1": 0.6680942184154176, "obj2": 0.18404249949215806}, {"determining": "( ( AMS - ( MDR / Min( FirstVNF_RAM_Server ,( AMS / MDR ) ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( PN * PN ) / Min( MRS ,( RRS - FirstVNF_CPU ) ) ) ) ) ) + ( ( MDR - FirstVNF_CPU_Server ) + ( RRS - PN ) ) ) )", "choosing": "( ( MUC * MUR ) + Max( ( RCSe / ( RCSe - ( RMSe * CS ) ) ),( MUC + ( RCSe + ( MLU / Max( ( RCSe / ( RCSe / MUC ) ),RCSe ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04967005950229463}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - PN ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / RRS ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + Min( ( DS / ( MUM - RRSe ) ) ,MUR ) ) ),( MUM + RCSe ) ) )", "obj1": 0.9100642398286938, "obj2": 0.04243081844002554}, {"determining": "( ( ( PN * PN ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ARS * CRS ) ) ) - Max( Min( Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),FirstVNF_Mem ) ,Min( ( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ,( ( ( PN * PN ) / Min( MRS ,MRS ) ) + Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ,Min( ( CRS - MDR ) ,Min( ( MDR - FirstVNF_CPU_Server ) ,MDR ) ) ),Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( Max( DDR,Min( ( MRS * AMS ) ,FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) + Max( ( MUC + RRSe ),( MUM + RCSe ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18019505298167207}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( MDR + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * FirstVNF_CPU ) ) ) ) / ( FirstVNF_RAM_Server * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) / ( AMS - PN ) ) ) ) - Min( ACS ,( MDR / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Min( ( MUC + ( Max( ( RMSe / ( RCSe / RMSe ) ),( MLU + RMSe ) ) + ( MUM - Min( Min( CS ,MLU ) ,( ( RRSe / RMSe ) / ( MUR - MUM ) ) ) ) ) ) ,MLU ) )", "obj1": 0.7451820128479657, "obj2": 0.12668139402331452}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( AMS - DDR ) ) * ( ( MDR - FirstVNF_RAM_Server ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) / MDR ) ) ) ) ) - Min( AMS ,( ARS - ( AMS - ( PN * PN ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),( ( MUM - CS ) / ( Min( Min( CS ,MLU ) ,RMSe ) / ( ( MLU - MUM ) + Max( Min( RMSe ,MUR ),Min( MUC ,CS ) ) ) ) ) ) + ( Min( DS ,MLU ) + Min( RMSe ,( ( Max( RRSe,Min( MUM ,RRSe ) ) * ( ( MUC * RMSe ) / DS ) ) + MUC ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09954240113341752}, {"determining": "( ( ( ( ( ( CRS * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( PN * FirstVNF_Mem ) )", "choosing": "( ( MUR + Min( DS ,Min( MUC ,MUM ) ) ) + Min( RMSe ,MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR / FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / Min( DDR ,( DDR + MRS ) ) ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / CS ) ) - ( CS / MUR ) ) - ( ( ( MUR - MUC ) / MUR ) / MUR ) ) ) ),Max( ( MUM + RCSe ),( ( Max( MUR,( RCSe * ( DS - RCSe ) ) ) + RMSe ) - CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008366463680377113}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server - MDR ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / RMSe ) ) - ( CS / MUR ) ) - ( ( MUC / DS ) / MUR ) ) ) ),Max( ( MUM + RCSe ),( ( MLU + ( MUM + DS ) ) - CS ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10084785952039459}, {"determining": "( ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( PN ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + Min( DS ,( Min( ( ( CS * ( RCSe * RRSe ) ) + ( CS / CS ) ) ,MUM ) * MUR ) ) ) + Min( Min( RMSe ,MLU ) ,MUM ) )", "obj1": 0.9250535331905781, "obj2": 0.03434922989360193}, {"determining": "( ( ( BR + FirstVNF_RAM ) + Const ) - Min( Min( CRS ,Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( Min( MRS ,( PN + CRS ) ) - ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_Mem_Server ) ) * PN ) ) * PN ) ) )", "choosing": "( ( Min( CS ,( MLU - ( Max( RMSe,( RMSe * RRSe ) ) + RCSe ) ) ) / Min( ( RCSe * MUC ) ,MLU ) ) * ( ( ( ( ( RMSe * RCSe ) - ( Max( MLU,CS ) + CS ) ) + MUR ) + Max( MUR,RCSe ) ) - ( ( ( Max( ( ( RRSe / RMSe ) + ( MUM + RMSe ) ),RMSe ) * RRSe ) - Min( ( RMSe * CS ) ,RMSe ) ) - ( RMSe - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12794719231540502}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( MDR * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUM,CS ),RMSe ) + Max( ( MUC + ( RCSe + ( ( DS - ( ( MLU + RMSe ) * MUR ) ) - RCSe ) ) ),Max( ( MUM + RCSe ),( ( MLU + RMSe ) - CS ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10411012858970015}, {"determining": "( ( PN * FirstVNF_Mem ) - ( ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - ( CRS - PN ) ) - Max( RRS,FirstVNF_CPU ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / MDR ) ) ) ) ) )", "choosing": "( Min( RCSe ,MUR ) + Min( RMSe ,MUM ) )", "obj1": 0.9229122055674518, "obj2": 0.03560399376767379}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( FirstVNF_CPU - PN ) - FirstVNF_CPU ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / Max( ( ( PN * ( RRS - AMS ) ) / ( FirstVNF_Mem_Server * BR ) ),( FirstVNF_RAM_Server / BR ) ) ) ) ) - Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( CS + Max( ( MUC + ( RCSe + MUR ) ),( ( ( MUM + Min( Max( MLU,MUR ) ,MUR ) ) + RRSe ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.7815845824411135, "obj2": 0.1074264882804463}, {"determining": "( ( ( ( ( ( PN * PN ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( PN + FirstVNF_CPU ) ) * PN ) ) ) ) / ( FirstVNF_RAM_Server * ( Const / ( ( Max( AMS,( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_RAM_Server / MDR ) ) ) ) ) - ( ( ( ( PN * ( ( PN * FirstVNF_Mem ) * ( AMS - MDR ) ) ) / Min( MRS ,ACS ) ) - Max( CRS,PN ) ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( MDR - BR ) * PN ) ) ) ) )", "choosing": "( ( RMSe * MLU ) + Max( ( MUC + ( RCSe + ( ( ( RMSe / ( CS / MUC ) ) - ( MLU / MUR ) ) - Max( MLU,MUR ) ) ) ),( ( ( MUM + RCSe ) + RRSe ) + RCSe ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11307098746074556}, {"determining": "( ( ( PN * PN ) / PN ) - ( FirstVNF_CPU + ( ( MDR - FirstVNF_CPU_Server ) + ( ( ( AMS - PN ) - ( FirstVNF_RAM_Server - DDR ) ) * MDR ) ) ) )", "choosing": "( ( ( MUR / ( RRSe / MUC ) ) + Max( ( MUM + RCSe ),( Max( RMSe,CS ) - CS ) ) ) + ( MUC * MUR ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}]}