{"1": [{"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 0.9665271966527197, "obj2": 0.014367843167592757}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( ACS - ARS ) )", "choosing": "Min( Max( RMSe,RRSe ) ,( MUC / DS ) )", "obj1": 0.7405857740585774, "obj2": 0.18907736587542795}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Max( BR,RRS ) )", "choosing": "Max( Min( MUM ,RRSe ),( MUC * RCSe ) )", "obj1": 0.8305439330543933, "obj2": 0.18225841066745768}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_Mem ) ,( AMS + DDR ) )", "choosing": "( Max( RCSe,MUM ) * ( MUC / RMSe ) )", "obj1": 0.6673640167364017, "obj2": 0.2546776767694056}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( PN,CRS ) - BR ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( MUM * CS ) ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) )", "obj1": 0.7154811715481172, "obj2": 0.204797864347604}, {"determining": "( ( ARS - Min( ARS ,MRS ) ) / ( ACS - ( MDR + MRS ) ) )", "choosing": "( ( RMSe / ( ( ( ( MUM + RMSe ) - DS ) - MUM ) + DS ) ) * ( ( MUC * MUM ) * MUM ) )", "obj1": 0.8556485355648535, "obj2": 0.12818313936461004}, {"determining": "( ( CRS / Min( AMS ,Min( ARS ,RRS ) ) ) * ( FirstVNF_CPU + Const ) )", "choosing": "( Max( Max( ( Max( ( ( ( MLU * MUM ) / RRSe ) / ( DS / CS ) ),( Min( MUC ,( RRSe + RRSe ) ) / ( RRSe - MUC ) ) ) / MUC ),DS ),( RMSe + MLU ) ) / ( ( MLU + ( MUM - MLU ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_CPU ) / ( DDR + FirstVNF_Mem ) )", "choosing": "Max( ( MUM / MUM ),( MUR / MUC ) )", "obj1": 0.6506276150627615, "obj2": 0.26236525304241065}, {"determining": "( Max( ( RRS * ARS ),( FirstVNF_CPU_Server - PN ) ) * ( ( FirstVNF_Mem_Server * RRS ) * Min( MRS ,Const ) ) )", "choosing": "Max( ( ( MUR / MLU ) + ( DS / RMSe ) ),( Max( DS,RCSe ) + Min( MUM ,DS ) ) )", "obj1": 0.6255230125523012, "obj2": 0.27792195924529667}, {"determining": "( ( ( CRS * DDR ) * Max( BR,CRS ) ) / ( FirstVNF_CPU_Server * CRS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS - Max( RRSe,( ( ( MUR / DS ) - RCSe ) * RCSe ) ) ) ) * Max( Max( MUM,CS ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( RCSe + RRSe ) - ( ( RCSe - RMSe ) + CS ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * Max( ( PN * ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - MDR ) ) / Max( FirstVNF_Mem_Server,Const ) ) ),MDR ) ) ) - ( MRS - MRS ) )", "choosing": "( ( ( RRSe + RRSe ) - DS ) + ( RMSe - ( DS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) - ( ACS / FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ( BR / Max( FirstVNF_Mem_Server,( MRS * DDR ) ) ) ) )", "choosing": "Min( ( ( RCSe * DS ) * ( ( ( ( CS - Min( RRSe ,MUC ) ) * RRSe ) / RRSe ) / MLU ) ) ,( ( CS * MUR ) + ( DS + RRSe ) ) )", "obj1": 0.6527196652719666, "obj2": 0.2560054464487389}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( DDR + ( BR + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC / MUM ),Min( RMSe ,CS ) ) + ( Max( RCSe,( ( ( Max( RCSe,RMSe ) + RRSe ) * ( ( ( RMSe * MLU ) * MUM ) * Min( Max( RCSe,MUC ) ,MUM ) ) ) - Max( CS,DS ) ) ) / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( ( CRS + FirstVNF_CPU ) ,( FirstVNF_CPU_Server + BR ) ) )", "choosing": "( ( MUR - RCSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,FirstVNF_RAM_Server ) / Max( BR,FirstVNF_CPU ) ) / ( Max( MDR,FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( RRSe - MUC ) ) + Min( ( MLU - RCSe ) ,( MUC - MUC ) ) )", "obj1": 0.6338912133891214, "obj2": 0.27514924303565297}, {"determining": "( ( ( ACS - AMS ) - FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + MUR ) / ( DS + Min( Max( RCSe,CS ) ,DS ) ) )", "obj1": 0.6213389121338913, "obj2": 0.2863197858460834}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - DDR ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( CS + RRSe ) * Max( MLU,Max( MUR,( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MDR * MRS ) ,( ( Const - MDR ) / ( ( MDR * ( FirstVNF_Mem_Server + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * RRSe ) / Min( ( RCSe + Max( RMSe,MUR ) ) ,( MUM + MUM ) ) ),( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem ,MDR ) + Min( AMS ,AMS ) ) ,( ( ARS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + Min( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + MRS ) / DDR ) ) ) ) ,RRS ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( RCSe - RRSe ) / ( CS / MLU ) ) ,( RRSe + ( RRSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( MUR + RMSe ) ) ) ) ) * MUM ) )", "obj1": 0.8661087866108786, "obj2": 0.0635386674220268}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - Max( FirstVNF_Mem_Server,RRS ) ) - ( ( FirstVNF_RAM / Max( Min( PN ,Const ),( MRS * ACS ) ) ) * ( MRS / PN ) ) ),Min( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / DS ) ) - ( ( MUR * CS ) / ( MLU + Max( ( ( ( MUM - MUC ) / MUR ) / ( MUM * DS ) ),DS ) ) ) ) * ( ( Min( MUC ,RRSe ) - Max( RCSe,RMSe ) ) - ( Max( MLU,RCSe ) * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + PN ) - ( Max( ( PN - ARS ),DDR ) * ACS ) )", "choosing": "Max( Min( ( MUM - RCSe ) ,( Max( MLU,( RRSe - RCSe ) ) - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( FirstVNF_RAM_Server * Const ),Min( FirstVNF_RAM ,Const ) ) * Max( ( FirstVNF_CPU * ACS ),( MRS + FirstVNF_Mem_Server ) ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( FirstVNF_RAM - AMS ) ) + ( ( FirstVNF_CPU + PN ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) )", "choosing": "( ( CS + MUC ) + ( ( ( RMSe + MUC ) - ( MLU + MLU ) ) * RMSe ) )", "obj1": 0.7112970711297071, "obj2": 0.2522413707959509}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( Min( PN ,( ( CRS * MDR ) - Min( AMS ,( RRS * ARS ) ) ) ) - ( Max( FirstVNF_CPU,AMS ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,( CS * RMSe ) ) + Max( ( ( RRSe - DS ) * MLU ),Min( RCSe ,MUC ) ) ) * ( CS - Max( MUM,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( BR + FirstVNF_Mem ),( ( FirstVNF_CPU * BR ) - Min( Const ,FirstVNF_CPU ) ) ) ,( ( ( ( Min( PN ,DDR ) * MRS ) * ( FirstVNF_RAM / ( FirstVNF_CPU / Max( BR,ACS ) ) ) ) / ARS ) * MDR ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( Const,Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "Max( Max( MUC,( MLU + RCSe ) ),( Max( ( ( DS + ( Max( ( MUC / RMSe ),Min( MUM ,MLU ) ) / RMSe ) ) - ( RCSe * Max( ( RMSe / MUR ),MLU ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 0.9665271966527197, "obj2": 0.014367843167592757}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( ACS - ARS ) )", "choosing": "Min( Max( RMSe,RRSe ) ,( MUC / DS ) )", "obj1": 0.7405857740585774, "obj2": 0.18907736587542795}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_Mem ) ,( AMS + DDR ) )", "choosing": "( Max( RCSe,MUM ) * ( MUC / RMSe ) )", "obj1": 0.6673640167364017, "obj2": 0.2546776767694056}, {"determining": "( ( ARS - Min( ARS ,MRS ) ) / ( ACS - ( MDR + MRS ) ) )", "choosing": "( ( RMSe / ( ( ( ( MUM + RMSe ) - DS ) - MUM ) + DS ) ) * ( ( MUC * MUM ) * MUM ) )", "obj1": 0.8556485355648535, "obj2": 0.12818313936461004}, {"determining": "( ( CRS / Min( AMS ,Min( ARS ,RRS ) ) ) * ( FirstVNF_CPU + Const ) )", "choosing": "( Max( Max( ( Max( ( ( ( MLU * MUM ) / RRSe ) / ( DS / CS ) ),( Min( MUC ,( RRSe + RRSe ) ) / ( RRSe - MUC ) ) ) / MUC ),DS ),( RMSe + MLU ) ) / ( ( MLU + ( MUM - MLU ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Max( BR,CRS ) ) / ( FirstVNF_CPU_Server * CRS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS - Max( RRSe,( ( ( MUR / DS ) - RCSe ) * RCSe ) ) ) ) * Max( Max( MUM,CS ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * Max( ( PN * ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - MDR ) ) / Max( FirstVNF_Mem_Server,Const ) ) ),MDR ) ) ) - ( MRS - MRS ) )", "choosing": "( ( ( RRSe + RRSe ) - DS ) + ( RMSe - ( DS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) - ( ACS / FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ( BR / Max( FirstVNF_Mem_Server,( MRS * DDR ) ) ) ) )", "choosing": "Min( ( ( RCSe * DS ) * ( ( ( ( CS - Min( RRSe ,MUC ) ) * RRSe ) / RRSe ) / MLU ) ) ,( ( CS * MUR ) + ( DS + RRSe ) ) )", "obj1": 0.6527196652719666, "obj2": 0.2560054464487389}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( DDR + ( BR + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC / MUM ),Min( RMSe ,CS ) ) + ( Max( RCSe,( ( ( Max( RCSe,RMSe ) + RRSe ) * ( ( ( RMSe * MLU ) * MUM ) * Min( Max( RCSe,MUC ) ,MUM ) ) ) - Max( CS,DS ) ) ) / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( ( CRS + FirstVNF_CPU ) ,( FirstVNF_CPU_Server + BR ) ) )", "choosing": "( ( MUR - RCSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - DDR ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( CS + RRSe ) * Max( MLU,Max( MUR,( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MDR * MRS ) ,( ( Const - MDR ) / ( ( MDR * ( FirstVNF_Mem_Server + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * RRSe ) / Min( ( RCSe + Max( RMSe,MUR ) ) ,( MUM + MUM ) ) ),( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem ,MDR ) + Min( AMS ,AMS ) ) ,( ( ARS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + Min( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + MRS ) / DDR ) ) ) ) ,RRS ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( RCSe - RRSe ) / ( CS / MLU ) ) ,( RRSe + ( RRSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( MUR + RMSe ) ) ) ) ) * MUM ) )", "obj1": 0.8661087866108786, "obj2": 0.0635386674220268}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - Max( FirstVNF_Mem_Server,RRS ) ) - ( ( FirstVNF_RAM / Max( Min( PN ,Const ),( MRS * ACS ) ) ) * ( MRS / PN ) ) ),Min( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / DS ) ) - ( ( MUR * CS ) / ( MLU + Max( ( ( ( MUM - MUC ) / MUR ) / ( MUM * DS ) ),DS ) ) ) ) * ( ( Min( MUC ,RRSe ) - Max( RCSe,RMSe ) ) - ( Max( MLU,RCSe ) * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + PN ) - ( Max( ( PN - ARS ),DDR ) * ACS ) )", "choosing": "Max( Min( ( MUM - RCSe ) ,( Max( MLU,( RRSe - RCSe ) ) - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( Min( PN ,( ( CRS * MDR ) - Min( AMS ,( RRS * ARS ) ) ) ) - ( Max( FirstVNF_CPU,AMS ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,( CS * RMSe ) ) + Max( ( ( RRSe - DS ) * MLU ),Min( RCSe ,MUC ) ) ) * ( CS - Max( MUM,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( BR + FirstVNF_Mem ),( ( FirstVNF_CPU * BR ) - Min( Const ,FirstVNF_CPU ) ) ) ,( ( ( ( Min( PN ,DDR ) * MRS ) * ( FirstVNF_RAM / ( FirstVNF_CPU / Max( BR,ACS ) ) ) ) / ARS ) * MDR ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( Const,Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "Max( Max( MUC,( MLU + RCSe ) ),( Max( ( ( DS + ( Max( ( MUC / RMSe ),Min( MUM ,MLU ) ) / RMSe ) ) - ( RCSe * Max( ( RMSe / MUR ),MLU ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( CRS + PN ) ) + Max( ARS,DDR ) )", "choosing": "Max( ( ( CS / RCSe ) * Min( MUR ,CS ) ),Min( ( ( ( MLU / ( ( Max( CS,DS ) * RMSe ) * ( ( RMSe - MUC ) * RCSe ) ) ) - ( ( CS - MUC ) + RRSe ) ) - ( ( MUC * ( Max( ( RRSe * RMSe ),RCSe ) * Max( ( MUR * RCSe ),( CS / CS ) ) ) ) / ( MUC - MUC ) ) ) ,Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + ( AMS + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,( RRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( Min( Min( MUC ,RMSe ) ,DS ) * MLU ),MUM ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),( RRSe * CS ) ) - ( ( MUM + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( ACS / FirstVNF_Mem_Server ) ) - Min( ( CRS + ARS ) ,Min( Max( ACS,Max( ( Const + FirstVNF_CPU ),BR ) ) ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,( Max( ( RCSe + MUR ),Min( MUC ,( RCSe * ( DS * MLU ) ) ) ) / ( CS - Max( RRSe,Max( MUR,MLU ) ) ) ) ) * ( MUM - ( ( RCSe * CS ) / ( ( MUR / MUM ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Max( ( PN / FirstVNF_CPU_Server ),( MDR + BR ) ) )", "choosing": "( ( Min( MUM ,MUR ) - MUM ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( MRS - Min( FirstVNF_Mem_Server ,( Max( FirstVNF_CPU_Server,PN ) / Min( FirstVNF_Mem ,ARS ) ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + MRS ) - Max( ( ( ( MRS + AMS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ),Max( Min( RRS ,MRS ),( CRS + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( CS - Max( MLU,( MLU * DS ) ) ) * ( MUR - CS ) ) ,( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,AMS ) ,AMS ) + Min( DDR ,RRS ) )", "choosing": "( Min( ( CS * MUR ) ,Min( MUM ,DS ) ) / ( ( RMSe * MUR ) - ( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / BR ) + ( ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,Const ) ) - ( ( CRS / FirstVNF_RAM ) + ( CRS + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( MRS / MRS ) ) ) ) ) )", "choosing": "Max( Min( Max( MLU,( RRSe * ( MUM - MUR ) ) ) ,RRSe ),( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / DDR ) / ( Max( FirstVNF_CPU_Server,DDR ) - Min( MDR ,PN ) ) )", "choosing": "( ( ( ( MUC / ( DS * MLU ) ) - MLU ) - RRSe ) * ( MUM - DS ) )", "obj1": 0.6129707112970711, "obj2": 0.29596008998211826}, {"determining": "Min( AMS ,( ACS - ( PN / BR ) ) )", "choosing": "( ( ( RMSe - ( CS + RMSe ) ) + CS ) * ( MUM * DS ) )", "obj1": 0.6715481171548117, "obj2": 0.24801203903259936}, {"determining": "( Min( ARS ,FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( MUM ,DS ) ) / ( ( RMSe * MUR ) - ( RRSe * MLU ) ) )", "obj1": 0.6192468619246861, "obj2": 0.2794261445184649}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - MRS ) / Const ) ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM * ( MLU + DS ) ) - ( ( RCSe + RRSe ) + RRSe ) ) * ( Max( ( RMSe + ( RRSe * ( MUM / CS ) ) ),RCSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + ( ( RRS - ( MDR + MRS ) ) - FirstVNF_RAM_Server ) ) + ARS ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUR / CS ),Max( RMSe,Max( ( CS / ( MUC * ( DS - MUC ) ) ),Max( ( MUC * DS ),RRSe ) ) ) ) ) * ( RRSe - ( Max( MUR,MUR ) * ( MLU - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ARS,CRS ),( ( Max( BR,( ACS * RRS ) ) / ( Const / CRS ) ) / Max( RRS,ARS ) ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( ( ( ( ( RRS / MRS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) * Const ) + DDR ) / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( Max( ( RCSe + MUC ),Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUM + RRSe ) ,( MUC * CS ) ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( Max( PN,CRS ) - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,DDR ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MUM / MLU ) ,Max( RCSe,DS ) ),Min( Max( MUR,MUC ) ,Max( RRSe,MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( DS + ( ( Min( ( DS - RCSe ) ,MUC ) * ( ( ( RRSe / MUC ) + MUM ) * MLU ) ) - ( RCSe - ( MUM / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Max( Const,MRS ) ) + ARS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,CS ),Max( RMSe,( ( ( MUC / MLU ) / ( Min( DS ,CS ) - Max( ( RMSe - RRSe ),CS ) ) ) / ( MUR * Max( MUM,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,DDR ) - ( ( ARS * FirstVNF_RAM ) / ( ( Const * AMS ) / ( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( Max( ( DS / RRSe ),( RCSe + MUC ) ) - ( ( ( CS - DS ) / RMSe ) - ( DS * CS ) ) ),Min( Max( DS,MUR ) ,( RRSe - MUR ) ) ) ,( Min( CS ,MUC ) * Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ACS ) ,( FirstVNF_RAM / ( FirstVNF_RAM_Server + ( Max( DDR,FirstVNF_RAM ) * AMS ) ) ) )", "choosing": "( ( Max( RCSe,( ( RCSe + ( Max( ( RCSe + DS ),MLU ) - ( Min( MUR ,CS ) / RMSe ) ) ) - ( MLU / MUM ) ) ) * MUM ) * ( Max( ( Max( RCSe,RMSe ) + DS ),RRSe ) / ( RCSe * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU_Server ,DDR ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( ACS / FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe / Min( RMSe ,MLU ) ) + MUR ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Min( ( ARS / FirstVNF_RAM_Server ) ,AMS ) ) + ( ( FirstVNF_Mem_Server - ARS ) - DDR ) )", "choosing": "( ( MUR - RCSe ) + ( ( ( DS - RRSe ) - ( RMSe + ( ( DS / ( Max( RRSe,MUR ) - DS ) ) + ( MUM / DS ) ) ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - Min( FirstVNF_RAM ,MRS ) ) / ( ACS - Min( AMS ,( ( FirstVNF_Mem_Server - PN ) + RRS ) ) ) )", "choosing": "Min( Min( ( RMSe + RRSe ) ,DS ) ,Max( ( ( DS * CS ) - ( DS * DS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.16018363572037914}, {"determining": "( ( ARS - Min( FirstVNF_RAM ,AMS ) ) / Min( ( FirstVNF_CPU / PN ) ,Const ) )", "choosing": "( ( ( MUC * ( RMSe - DS ) ) * MUM ) * ( ( MUR / ( MUC * RRSe ) ) + ( RCSe * RCSe ) ) )", "obj1": 0.8368200836820083, "obj2": 0.13526433235645288}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,Max( Max( ACS,DDR ),FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,Max( ( Max( RMSe,( Min( MUM ,DS ) / RMSe ) ) / CS ),Max( CS,CS ) ) ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( FirstVNF_RAM_Server,CRS ) - BR ) )", "choosing": "( MUC * ( ( RCSe - RMSe ) / ( CS + MUM ) ) )", "obj1": 0.6317991631799164, "obj2": 0.26095123543294624}, {"determining": "( ( Min( PN ,FirstVNF_RAM_Server ) / Max( BR,FirstVNF_CPU ) ) / ( Max( MDR,FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( RRSe - MUC ) ) + Min( ( MLU - RCSe ) ,( MUC - MUC ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2611903792768235}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( PN,CRS ) - BR ) )", "choosing": "( Max( RCSe,CS ) - ( MUM * ( CS - MUR ) ) )", "obj1": 0.7112970711297071, "obj2": 0.2033283128871807}, {"determining": "( ( ( FirstVNF_CPU - ( RRS + PN ) ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) / Min( BR ,CRS ) ) )", "choosing": "( ( ( MUM * MLU ) * Max( Max( RCSe,MUM ),Min( RCSe ,RCSe ) ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Const ) - ( ( Max( ACS,( ( ACS / MDR ) - FirstVNF_Mem ) ) * PN ) - Min( BR ,PN ) ) )", "choosing": "Max( ( MUM * ( MUR + Min( ( ( ( ( MUM * MUC ) + RCSe ) + Max( ( MUM + MUR ),RCSe ) ) * MUM ) ,MUC ) ) ),( MUM * Min( MUM ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Const ) / DDR ) / FirstVNF_CPU ) + ( DDR / RRS ) )", "choosing": "( ( DS + ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - Max( MUR,MLU ) ) ) + ( DS / ( Max( RRSe,MLU ) / DS ) ) ) ) ) ) + ( MUR - Max( MUM,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) / ( ACS - ( FirstVNF_RAM / ACS ) ) ),BR ) / Min( BR ,MRS ) )", "choosing": "( ( MUC + DS ) / ( ( ( ( MUC * MUM ) * MUM ) * ( RMSe / ( MUC + DS ) ) ) * RCSe ) )", "obj1": 0.6820083682008368, "obj2": 0.24717527349587706}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( PN,CRS ) - BR ) )", "choosing": "Max( ( RRSe - DS ),( MUM / ( ( RMSe - MUC ) + CS ) ) )", "obj1": 0.7196652719665272, "obj2": 0.1922902987840817}, {"determining": "Min( ( Min( Min( ARS ,BR ) ,( DDR - ACS ) ) - Min( Max( PN,MRS ) ,( Const * MRS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,( ACS - ( FirstVNF_CPU * AMS ) ) ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( Min( ( RRSe / Min( RMSe ,MLU ) ) ,RMSe ) * Max( ( ( MLU + ( CS * RMSe ) ) + ( ( CS / MUC ) + ( RCSe + CS ) ) ),( Max( MUM,( RRSe / CS ) ) * DS ) ) ) * RRSe ) ) + ( ( ( ( Max( RMSe,CS ) / RMSe ) + RCSe ) - ( MUM + RCSe ) ) - Max( ( DS / RRSe ),Max( RRSe,Min( RCSe ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / ACS ),( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,ACS ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 0.702928870292887, "obj2": 0.24331103080722702}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( PN,CRS ) - BR ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( MUM * CS ) ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) )", "obj1": 0.7092050209205021, "obj2": 0.2117134789528814}], "3": [{"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - FirstVNF_RAM ) - ( FirstVNF_CPU * Max( RRS,AMS ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.606694560669456, "obj2": 0.29187713565142714}, {"determining": "( ( ARS - Min( ARS ,MRS ) ) / Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( ARS * ARS ) - ( FirstVNF_Mem + Const ) ) ) )", "choosing": "( ( RMSe / ( ( ( ( MUM + RMSe ) - DS ) - MUM ) + DS ) ) * ( ( MUC * CS ) * MUM ) )", "obj1": 0.9539748953974896, "obj2": 0.038882814156352946}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( MUR + RMSe ) ) ) ) ) * MUM ) )", "obj1": 0.8661087866108786, "obj2": 0.0635386674220268}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( RRSe * MLU ) ) ) )", "obj1": 0.7635983263598326, "obj2": 0.16119181864206644}, {"determining": "( ( ARS - Min( FirstVNF_RAM ,MRS ) ) / ( ACS - Min( AMS ,( ( FirstVNF_Mem_Server - PN ) + RRS ) ) ) )", "choosing": "Min( Min( ( RMSe + RRSe ) ,DS ) ,Max( ( ( DS * CS ) - ( DS * DS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.16018363572037914}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) ) ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 0.8493723849372385, "obj2": 0.10031733815283062}, {"determining": "( ( ARS - Min( FirstVNF_RAM ,AMS ) ) / Min( ( FirstVNF_CPU / PN ) ,Const ) )", "choosing": "( ( ( MUC * ( RMSe - DS ) ) * MUM ) * ( ( MUR / ( MUC * RRSe ) ) + ( RCSe * RCSe ) ) )", "obj1": 0.8368200836820083, "obj2": 0.13526433235645288}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 0.9665271966527197, "obj2": 0.014367843167592757}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( ACS - ARS ) )", "choosing": "Min( Max( RMSe,RRSe ) ,( MUC / DS ) )", "obj1": 0.7405857740585774, "obj2": 0.18907736587542795}, {"determining": "( Min( ARS ,FirstVNF_RAM_Server ) * ( RRS * ( DDR * BR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( RRSe - MUC ) ) + Min( ( MLU + RCSe ) ,( MUC - ( ( ( MUC * MUC ) / Max( MUM,CS ) ) + ( MUC / MUC ) ) ) ) )", "obj1": 0.6861924686192469, "obj2": 0.2385872790893181}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( PN,CRS ) - BR ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( MUM * CS ) ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) )", "obj1": 0.7092050209205021, "obj2": 0.2117134789528814}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.06970895369375724}, {"determining": "( Min( ARS ,FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( MUM ,DS ) ) / ( ( RMSe * MUR ) - ( RRSe * MLU ) ) )", "obj1": 0.6192468619246861, "obj2": 0.2794261445184649}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( PN,CRS ) - BR ) )", "choosing": "Max( ( RRSe - DS ),( MUM / ( ( RMSe - MUC ) + CS ) ) )", "obj1": 0.7196652719665272, "obj2": 0.1922902987840817}, {"determining": "( ( Min( PN ,FirstVNF_RAM_Server ) / Max( BR,FirstVNF_CPU ) ) / ( Max( MDR,FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( RRSe - MUC ) ) + Min( ( MLU - RCSe ) ,( MUC - MUC ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2611903792768235}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( PN,CRS ) - BR ) )", "choosing": "( Max( RCSe,CS ) - ( MUM * ( CS - MUR ) ) )", "obj1": 0.7112970711297071, "obj2": 0.2033283128871807}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "Min( Max( CRS,( MDR - ACS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( DS + MUM ) - Min( CS ,MUR ) ) - ( Min( RCSe ,MUC ) * ( MUR / DS ) ) )", "obj1": 0.6673640167364017, "obj2": 0.250884001519216}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( FirstVNF_RAM_Server,CRS ) - BR ) )", "choosing": "( MUC * ( ( RCSe - RMSe ) / ( CS + MUM ) ) )", "obj1": 0.6317991631799164, "obj2": 0.26095123543294624}, {"determining": "Max( ( ( ( ( RRS * Const ) / ( AMS * FirstVNF_RAM_Server ) ) / ( Min( Const ,FirstVNF_RAM_Server ) + ( MRS - AMS ) ) ) / Max( Min( ( FirstVNF_Mem_Server / MRS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server / ACS ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ),( MDR * ARS ) )", "choosing": "( ( RMSe * MUM ) / ( Max( Min( ( MUM / MLU ) ,Max( RCSe,DS ) ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6506276150627615, "obj2": 0.2581670296413443}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( PN,CRS ) - BR ) )", "choosing": "( ( RCSe + MUR ) / ( DS + Min( Max( RCSe,CS ) ,DS ) ) )", "obj1": 0.6757322175732218, "obj2": 0.24124611062142193}, {"determining": "Max( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) - ( ACS / FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ( BR / Max( FirstVNF_Mem_Server,( MRS * DDR ) ) ) ) )", "choosing": "Min( ( ( RCSe * DS ) * ( ( ( ( CS - Min( RRSe ,MUC ) ) * RRSe ) / RRSe ) / MLU ) ) ,( ( CS * MUR ) + ( DS + RRSe ) ) )", "obj1": 0.6527196652719666, "obj2": 0.2560054464487389}, {"determining": "Min( AMS ,( ACS - ( PN / BR ) ) )", "choosing": "( ( ( RMSe - ( CS + RMSe ) ) + CS ) * ( MUM * DS ) )", "obj1": 0.6715481171548117, "obj2": 0.24801203903259936}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Max( ( PN / FirstVNF_CPU_Server ),( MDR + BR ) ) )", "choosing": "( ( Min( MUM ,MUR ) - MUM ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( AMS ,Min( ARS ,RRS ) ) ) * ( FirstVNF_CPU + Const ) )", "choosing": "( Max( Max( ( Max( ( ( ( MLU * MUM ) / RRSe ) / ( DS / CS ) ),( Min( MUC ,( RRSe + RRSe ) ) / ( RRSe - MUC ) ) ) / MUC ),DS ),( RMSe + MLU ) ) / ( ( MLU + ( MUM - MLU ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Max( BR,CRS ) ) / ( FirstVNF_CPU_Server * CRS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS - Max( RRSe,( ( ( MUR / DS ) - RCSe ) * RCSe ) ) ) ) * Max( Max( MUM,CS ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * Max( ( PN * ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - MDR ) ) / Max( FirstVNF_Mem_Server,Const ) ) ),MDR ) ) ) - ( MRS - MRS ) )", "choosing": "( ( ( RRSe + RRSe ) - DS ) + ( RMSe - ( DS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( DDR + ( BR + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC / MUM ),Min( RMSe ,CS ) ) + ( Max( RCSe,( ( ( Max( RCSe,RMSe ) + RRSe ) * ( ( ( RMSe * MLU ) * MUM ) * Min( Max( RCSe,MUC ) ,MUM ) ) ) - Max( CS,DS ) ) ) / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( ( CRS + FirstVNF_CPU ) ,( FirstVNF_CPU_Server + BR ) ) )", "choosing": "( ( MUR - RCSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - DDR ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( CS + RRSe ) * Max( MLU,Max( MUR,( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MDR * MRS ) ,( ( Const - MDR ) / ( ( MDR * ( FirstVNF_Mem_Server + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * RRSe ) / Min( ( RCSe + Max( RMSe,MUR ) ) ,( MUM + MUM ) ) ),( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem ,MDR ) + Min( AMS ,AMS ) ) ,( ( ARS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + Min( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + MRS ) / DDR ) ) ) ) ,RRS ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( RCSe - RRSe ) / ( CS / MLU ) ) ,( RRSe + ( RRSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - Max( FirstVNF_Mem_Server,RRS ) ) - ( ( FirstVNF_RAM / Max( Min( PN ,Const ),( MRS * ACS ) ) ) * ( MRS / PN ) ) ),Min( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / DS ) ) - ( ( MUR * CS ) / ( MLU + Max( ( ( ( MUM - MUC ) / MUR ) / ( MUM * DS ) ),DS ) ) ) ) * ( ( Min( MUC ,RRSe ) - Max( RCSe,RMSe ) ) - ( Max( MLU,RCSe ) * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + PN ) - ( Max( ( PN - ARS ),DDR ) * ACS ) )", "choosing": "Max( Min( ( MUM - RCSe ) ,( Max( MLU,( RRSe - RCSe ) ) - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( ( CRS * MDR ) - Min( AMS ,( RRS * ARS ) ) ) ) - ( Max( FirstVNF_CPU,AMS ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,( CS * RMSe ) ) + Max( ( ( RRSe - DS ) * MLU ),Min( RCSe ,MUC ) ) ) * ( CS - Max( MUM,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( BR + FirstVNF_Mem ),( ( FirstVNF_CPU * BR ) - Min( Const ,FirstVNF_CPU ) ) ) ,( ( ( ( Min( PN ,DDR ) * MRS ) * ( FirstVNF_RAM / ( FirstVNF_CPU / Max( BR,ACS ) ) ) ) / ARS ) * MDR ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( Const,Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "Max( Max( MUC,( MLU + RCSe ) ),( Max( ( ( DS + ( Max( ( MUC / RMSe ),Min( MUM ,MLU ) ) / RMSe ) ) - ( RCSe * Max( ( RMSe / MUR ),MLU ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( CRS + PN ) ) + Max( ARS,DDR ) )", "choosing": "Max( ( ( CS / RCSe ) * Min( MUR ,CS ) ),Min( ( ( ( MLU / ( ( Max( CS,DS ) * RMSe ) * ( ( RMSe - MUC ) * RCSe ) ) ) - ( ( CS - MUC ) + RRSe ) ) - ( ( MUC * ( Max( ( RRSe * RMSe ),RCSe ) * Max( ( MUR * RCSe ),( CS / CS ) ) ) ) / ( MUC - MUC ) ) ) ,Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + ( AMS + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,( RRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( Min( Min( MUC ,RMSe ) ,DS ) * MLU ),MUM ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),( RRSe * CS ) ) - ( ( MUM + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( ACS / FirstVNF_Mem_Server ) ) - Min( ( CRS + ARS ) ,Min( Max( ACS,Max( ( Const + FirstVNF_CPU ),BR ) ) ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,( Max( ( RCSe + MUR ),Min( MUC ,( RCSe * ( DS * MLU ) ) ) ) / ( CS - Max( RRSe,Max( MUR,MLU ) ) ) ) ) * ( MUM - ( ( RCSe * CS ) / ( ( MUR / MUM ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Min( FirstVNF_Mem_Server ,( Max( FirstVNF_CPU_Server,PN ) / Min( FirstVNF_Mem ,ARS ) ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + MRS ) - Max( ( ( ( MRS + AMS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ),Max( Min( RRS ,MRS ),( CRS + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( CS - Max( MLU,( MLU * DS ) ) ) * ( MUR - CS ) ) ,( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,AMS ) ,AMS ) + Min( DDR ,RRS ) )", "choosing": "( Min( ( CS * MUR ) ,Min( MUM ,DS ) ) / ( ( RMSe * MUR ) - ( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / BR ) + ( ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,Const ) ) - ( ( CRS / FirstVNF_RAM ) + ( CRS + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( MRS / MRS ) ) ) ) ) )", "choosing": "Max( Min( Max( MLU,( RRSe * ( MUM - MUR ) ) ) ,RRSe ),( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - MRS ) / Const ) ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM * ( MLU + DS ) ) - ( ( RCSe + RRSe ) + RRSe ) ) * ( Max( ( RMSe + ( RRSe * ( MUM / CS ) ) ),RCSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + ( ( RRS - ( MDR + MRS ) ) - FirstVNF_RAM_Server ) ) + ARS ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUR / CS ),Max( RMSe,Max( ( CS / ( MUC * ( DS - MUC ) ) ),Max( ( MUC * DS ),RRSe ) ) ) ) ) * ( RRSe - ( Max( MUR,MUR ) * ( MLU - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ARS,CRS ),( ( Max( BR,( ACS * RRS ) ) / ( Const / CRS ) ) / Max( RRS,ARS ) ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( ( ( ( ( RRS / MRS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) * Const ) + DDR ) / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( Max( ( RCSe + MUC ),Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUM + RRSe ) ,( MUC * CS ) ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( Max( PN,CRS ) - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,DDR ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MUM / MLU ) ,Max( RCSe,DS ) ),Min( Max( MUR,MUC ) ,Max( RRSe,MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( DS + ( ( Min( ( DS - RCSe ) ,MUC ) * ( ( ( RRSe / MUC ) + MUM ) * MLU ) ) - ( RCSe - ( MUM / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Max( Const,MRS ) ) + ARS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,CS ),Max( RMSe,( ( ( MUC / MLU ) / ( Min( DS ,CS ) - Max( ( RMSe - RRSe ),CS ) ) ) / ( MUR * Max( MUM,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,DDR ) - ( ( ARS * FirstVNF_RAM ) / ( ( Const * AMS ) / ( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( Max( ( DS / RRSe ),( RCSe + MUC ) ) - ( ( ( CS - DS ) / RMSe ) - ( DS * CS ) ) ),Min( Max( DS,MUR ) ,( RRSe - MUR ) ) ) ,( Min( CS ,MUC ) * Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ACS ) ,( FirstVNF_RAM / ( FirstVNF_RAM_Server + ( Max( DDR,FirstVNF_RAM ) * AMS ) ) ) )", "choosing": "( ( Max( RCSe,( ( RCSe + ( Max( ( RCSe + DS ),MLU ) - ( Min( MUR ,CS ) / RMSe ) ) ) - ( MLU / MUM ) ) ) * MUM ) * ( Max( ( Max( RCSe,RMSe ) + DS ),RRSe ) / ( RCSe * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU_Server ,DDR ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( ACS / FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe / Min( RMSe ,MLU ) ) + MUR ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Min( ( ARS / FirstVNF_RAM_Server ) ,AMS ) ) + ( ( FirstVNF_Mem_Server - ARS ) - DDR ) )", "choosing": "( ( MUR - RCSe ) + ( ( ( DS - RRSe ) - ( RMSe + ( ( DS / ( Max( RRSe,MUR ) - DS ) ) + ( MUM / DS ) ) ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,Max( Max( ACS,DDR ),FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,Max( ( Max( RMSe,( Min( MUM ,DS ) / RMSe ) ) / CS ),Max( CS,CS ) ) ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( RRS + PN ) ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) / Min( BR ,CRS ) ) )", "choosing": "( ( ( MUM * MLU ) * Max( Max( RCSe,MUM ),Min( RCSe ,RCSe ) ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Const ) - ( ( Max( ACS,( ( ACS / MDR ) - FirstVNF_Mem ) ) * PN ) - Min( BR ,PN ) ) )", "choosing": "Max( ( MUM * ( MUR + Min( ( ( ( ( MUM * MUC ) + RCSe ) + Max( ( MUM + MUR ),RCSe ) ) * MUM ) ,MUC ) ) ),( MUM * Min( MUM ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Const ) / DDR ) / FirstVNF_CPU ) + ( DDR / RRS ) )", "choosing": "( ( DS + ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - Max( MUR,MLU ) ) ) + ( DS / ( Max( RRSe,MLU ) / DS ) ) ) ) ) ) + ( MUR - Max( MUM,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( ARS ,BR ) ,( DDR - ACS ) ) - Min( Max( PN,MRS ) ,( Const * MRS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,( ACS - ( FirstVNF_CPU * AMS ) ) ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( Min( ( RRSe / Min( RMSe ,MLU ) ) ,RMSe ) * Max( ( ( MLU + ( CS * RMSe ) ) + ( ( CS / MUC ) + ( RCSe + CS ) ) ),( Max( MUM,( RRSe / CS ) ) * DS ) ) ) * RRSe ) ) + ( ( ( ( Max( RMSe,CS ) / RMSe ) + RCSe ) - ( MUM + RCSe ) ) - Max( ( DS / RRSe ),Max( RRSe,Min( RCSe ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( Min( Const ,CRS ) / ( CRS / ( Max( MDR,ACS ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( Max( ( MLU - Min( DS ,DS ) ),RRSe ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( AMS + ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Max( ( Const / Max( FirstVNF_CPU,RRS ) ),DDR ) ) ) ) )", "choosing": "Max( Min( ( MLU - ( RRSe - ( DS / ( MUC / MUM ) ) ) ) ,MLU ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( Max( ( ( FirstVNF_CPU_Server / Min( FirstVNF_CPU ,RRS ) ) * FirstVNF_Mem ),FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ACS ,ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( ( ( Max( CS,CS ) + MLU ) / MUR ) / MLU ) ,( CS * RCSe ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,ARS ) + ( FirstVNF_Mem - PN ) ) ,( ( BR + MDR ) * Min( ( Min( Min( ARS ,BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( FirstVNF_RAM * ARS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,ACS ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * CRS ) ) ) ) ) ) - Min( ( ( RRS - RRS ) / Min( PN ,MDR ) ) ,( Const + DDR ) ) )", "choosing": "Max( ( DS + ( MUC - ( MUM - ( DS + MLU ) ) ) ),( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM - FirstVNF_CPU ) ),Min( FirstVNF_CPU ,( Max( ( RRS - Const ),FirstVNF_CPU ) - ARS ) ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( AMS,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( RCSe / ( ( ( ( Max( MUR,MUC ) - ( RMSe + RCSe ) ) + MLU ) / RMSe ) - DS ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,MRS ) - ( Max( CRS,FirstVNF_CPU ) / Max( ( Const * MRS ),ACS ) ) ) ,( ACS - ( BR / PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,MRS ) - ( Max( ( DDR + FirstVNF_Mem ),FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) / ( DDR / ( CRS * MDR ) ) )", "choosing": "Max( ( ( RRSe * RRSe ) + ( MUC * RMSe ) ),( ( ( CS - RMSe ) + MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( ACS - ( ( BR / ARS ) - Max( ( Min( FirstVNF_CPU ,ARS ) - MDR ),Min( FirstVNF_RAM ,RRS ) ) ) ) )", "choosing": "( ( ( ( MUR + RCSe ) - Max( Min( DS ,( ( ( MUM - MUC ) - CS ) - MLU ) ),DS ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( ( ( MLU + RMSe ) - ( MUM + RCSe ) ) - Max( ( DS / RMSe ),Min( RRSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( RRS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + Min( ( FirstVNF_RAM + PN ) ,ARS ) )", "choosing": "Min( Max( ( ( RMSe / MUM ) * RCSe ),CS ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) * ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR / BR ) ,DDR ) - ( AMS * ARS ) )", "choosing": "( ( Max( CS,CS ) + ( ( ( RCSe - MUC ) - DS ) / ( MUC * ( ( Max( ( RRSe - MUC ),Max( MLU,RCSe ) ) + ( ( DS - CS ) * MUR ) ) - RMSe ) ) ) ) / ( DS + ( Max( RCSe,DS ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "Min( ( MUM + DS ) ,( MLU * ( MLU - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ARS ) * FirstVNF_RAM_Server ) - ( MDR + ( FirstVNF_RAM_Server * Const ) ) )", "choosing": "Max( ( MUC + ( ( ( Max( RCSe,Max( CS,CS ) ) - Max( MUC,MUR ) ) + MLU ) - DS ) ),( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + Min( BR ,CRS ) )", "choosing": "( Max( ( MUR / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) + ( ( ( MDR * ( Max( FirstVNF_CPU,BR ) * FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,CS ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) / ( ( MUC / MUM ) + RMSe ) ) ) ) / ( ( Max( MUM,MUR ) - Max( MUR,RRSe ) ) / ( Min( MLU ,MUM ) / Max( MLU,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - ( RMSe * MUR ) ) ) + ( DS / ( Max( RRSe,MLU ) / DS ) ) ) ) ) + DS ) + ( MUR - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( Min( ( MUM + DS ) ,( ( ( MUM - Min( CS ,RCSe ) ) - MUC ) * RMSe ) ),CS ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( AMS / PN ) ),DDR ) - ( CRS / FirstVNF_RAM_Server ) )", "choosing": "Max( Max( Min( ( Min( ( DS + RRSe ) ,MLU ) - MUC ) ,( Min( MUM ,MUC ) + ( MUM + CS ) ) ),RCSe ),( ( MUR + MUC ) * ( RMSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( RRS - DDR ) )", "choosing": "Max( Max( MUM,CS ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + PN ) / ( CRS * FirstVNF_Mem ) ) - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "Min( Min( RCSe ,( Max( MUC,MLU ) - CS ) ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - MRS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * ( ( ( RCSe - MLU ) - RRSe ) * ( MUM - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( MRS + ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( Max( ( MUM / MUM ),( MUR / MUC ) ) ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_CPU_Server ) - Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( RMSe ,CS ),( MUC / MUM ) ) + Max( ( CS - RCSe ),( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem_Server ) + ( MRS * AMS ) )", "choosing": "Min( ( ( Max( DS,CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + ( MRS * ( FirstVNF_CPU_Server * Const ) ) ) ) ) + ( ( ( MDR * ACS ) + ( RRS + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + Max( ( ( DDR + FirstVNF_CPU ) / ( DDR * AMS ) ),( DDR / ( RRS / ( FirstVNF_RAM - Min( PN ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( DS * RRSe ) ) * Max( ( ( ( MLU - MUR ) / RRSe ) / RMSe ),( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS / ARS ) ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( Max( MUR,MUR ) ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - FirstVNF_RAM ) - ( FirstVNF_CPU * Max( RRS,AMS ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.606694560669456, "obj2": 0.29187713565142714}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * Max( ( DS / RRSe ),Min( RRSe ,CS ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.7552301255230126, "obj2": 0.1554302659345903}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( MUR + RMSe ) ) ) ) ) * MUM ) )", "obj1": 0.8849372384937239, "obj2": 0.0508329997464804}, {"determining": "( ( ARS - Min( ARS ,MRS ) ) / Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( ARS * ARS ) - ( FirstVNF_Mem + Const ) ) ) )", "choosing": "( ( RMSe / ( ( ( ( MUM + RMSe ) - DS ) - MUM ) + DS ) ) * ( ( MUC * CS ) * MUM ) )", "obj1": 0.9539748953974896, "obj2": 0.038882814156352946}, {"determining": "Min( ( AMS * FirstVNF_RAM_Server ) ,( ACS - ARS ) )", "choosing": "Min( Max( RMSe,( RMSe * MUM ) ) ,( MUC / DS ) )", "obj1": 0.8221757322175732, "obj2": 0.14225756845536353}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) ) ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,RRSe ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 0.8493723849372385, "obj2": 0.10031733815283062}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( RRSe ,CS ) ) ) ) ) )", "obj1": 0.7364016736401674, "obj2": 0.1814195562075388}, {"determining": "( ( ARS - Min( FirstVNF_RAM ,AMS ) ) / Min( ( FirstVNF_CPU / PN ) ,Const ) )", "choosing": "( ( ( MUC * ( RMSe - DS ) ) * MUM ) * ( ( MUR / ( MUC * RRSe ) ) + ( RCSe * RCSe ) ) )", "obj1": 0.8368200836820083, "obj2": 0.13526433235645288}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( PN,CRS ) - BR ) )", "choosing": "( ( RCSe + MUR ) / ( DS + Min( Max( RCSe,CS ) ,DS ) ) )", "obj1": 0.694560669456067, "obj2": 0.22198621888036515}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( PN,CRS ) - BR ) )", "choosing": "Max( ( RRSe - DS ),( MUM / ( ( RMSe - MUC ) + CS ) ) )", "obj1": 0.7196652719665272, "obj2": 0.1922902987840817}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.06970895369375724}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( MUR + RMSe ) ) ) ) ) * MUM ) )", "obj1": 0.8661087866108786, "obj2": 0.0635386674220268}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( MLU * RMSe ) )", "obj1": 0.9560669456066946, "obj2": 0.018737915039731694}, {"determining": "( Min( ARS ,FirstVNF_RAM_Server ) * ( RRS * ( DDR * BR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( RRSe - MUC ) ) + Min( ( MLU + RCSe ) ,( MUC - ( ( ( MUC * MUC ) / Max( MUM,CS ) ) + ( MUC / MUC ) ) ) ) )", "obj1": 0.6861924686192469, "obj2": 0.2385872790893181}, {"determining": "( Min( ARS ,FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( MUM ,DS ) ) / ( ( RMSe * MUR ) - ( RRSe * MLU ) ) )", "obj1": 0.6192468619246861, "obj2": 0.2794261445184649}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( MDR / MRS ),( ( AMS / FirstVNF_CPU_Server ) * ( BR / FirstVNF_CPU ) ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( RMSe,MUR ) ,( Max( ( RMSe * RCSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.009038141569374205}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( PN,CRS ) - BR ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( MUM * CS ) ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) )", "obj1": 0.7092050209205021, "obj2": 0.2117134789528814}, {"determining": "( ( Min( PN ,FirstVNF_RAM_Server ) / Max( BR,FirstVNF_CPU ) ) / ( Max( MDR,FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( RRSe - MUC ) ) + Min( ( MLU - RCSe ) ,( MUC - MUC ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2611903792768235}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( PN,CRS ) - BR ) )", "choosing": "( Max( RCSe,CS ) - ( MUM * ( CS - MUR ) ) )", "obj1": 0.7112970711297071, "obj2": 0.2033283128871807}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 0.9665271966527197, "obj2": 0.014367843167592757}, {"determining": "Min( Max( CRS,( MDR - ACS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( DS + MUM ) - Min( CS ,MUR ) ) - ( Min( RCSe ,MUC ) * ( MUR / DS ) ) )", "obj1": 0.6673640167364017, "obj2": 0.250884001519216}, {"determining": "( ( DDR - FirstVNF_Mem ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / DDR ) )", "choosing": "( ( ( ( MUC / ( DS - Max( MUR,CS ) ) ) - MLU ) - RRSe ) * ( DS + Min( Max( CS,RCSe ) ,DS ) ) )", "obj1": 0.6129707112970711, "obj2": 0.284030080417292}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( FirstVNF_RAM_Server,CRS ) - BR ) )", "choosing": "( MUC * ( ( RCSe - RMSe ) / ( CS + MUM ) ) )", "obj1": 0.6317991631799164, "obj2": 0.26095123543294624}, {"determining": "Max( ( ( ( ( RRS * Const ) / ( AMS * FirstVNF_RAM_Server ) ) / ( Min( Const ,FirstVNF_RAM_Server ) + ( MRS - AMS ) ) ) / Max( Min( ( FirstVNF_Mem_Server / MRS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server / ACS ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ),( MDR * ARS ) )", "choosing": "( ( RMSe * MUM ) / ( Max( Min( ( MUM / MLU ) ,Max( RCSe,DS ) ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6506276150627615, "obj2": 0.2581670296413443}, {"determining": "( FirstVNF_CPU - ( ( ( Min( ( FirstVNF_Mem * Const ) ,AMS ) * AMS ) / ( Max( Min( BR ,( Max( FirstVNF_RAM_Server,PN ) - BR ) ),CRS ) * CRS ) ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "Min( Max( ( DS * ( ( CS * RRSe ) + RCSe ) ),Min( Min( DS ,MUR ) ,( RRSe - CS ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + ( MUC - RCSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002550482499746131}, {"determining": "Max( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) - ( ACS / FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ( BR / Max( FirstVNF_Mem_Server,( MRS * DDR ) ) ) ) )", "choosing": "Min( ( ( RCSe * DS ) * ( ( ( ( CS - Min( RRSe ,MUC ) ) * RRSe ) / RRSe ) / MLU ) ) ,( ( CS * MUR ) + ( DS + RRSe ) ) )", "obj1": 0.6527196652719666, "obj2": 0.2560054464487389}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( PN,CRS ) - BR ) )", "choosing": "( ( RCSe + MUR ) / ( DS + Min( Max( RCSe,CS ) ,DS ) ) )", "obj1": 0.6757322175732218, "obj2": 0.24124611062142193}, {"determining": "Max( ( ( ( ( RRS * Const ) / ( AMS * FirstVNF_RAM_Server ) ) / ( Min( Const ,FirstVNF_RAM_Server ) + ( MRS - AMS ) ) ) / Max( Min( ( FirstVNF_Mem_Server / MRS ) ,( FirstVNF_CPU - ( AMS + ( FirstVNF_RAM_Server * ACS ) ) ) ),( ( FirstVNF_RAM_Server / ACS ) / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ),( MDR * ARS ) )", "choosing": "( ( ( MUC - DS ) + ( RMSe - MUM ) ) / ( RMSe * MUM ) )", "obj1": 0.6715481171548117, "obj2": 0.24692136186891087}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.06776280813999447}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Max( ( PN / FirstVNF_CPU_Server ),( MDR + BR ) ) )", "choosing": "( ( Min( MUM ,MUR ) - MUM ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( AMS ,Min( ARS ,RRS ) ) ) * ( FirstVNF_CPU + Const ) )", "choosing": "( Max( Max( ( Max( ( ( ( MLU * MUM ) / RRSe ) / ( DS / CS ) ),( Min( MUC ,( RRSe + RRSe ) ) / ( RRSe - MUC ) ) ) / MUC ),DS ),( RMSe + MLU ) ) / ( ( MLU + ( MUM - MLU ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Max( BR,CRS ) ) / ( FirstVNF_CPU_Server * CRS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS - Max( RRSe,( ( ( MUR / DS ) - RCSe ) * RCSe ) ) ) ) * Max( Max( MUM,CS ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * Max( ( PN * ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - MDR ) ) / Max( FirstVNF_Mem_Server,Const ) ) ),MDR ) ) ) - ( MRS - MRS ) )", "choosing": "( ( ( RRSe + RRSe ) - DS ) + ( RMSe - ( DS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( DDR + ( BR + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC / MUM ),Min( RMSe ,CS ) ) + ( Max( RCSe,( ( ( Max( RCSe,RMSe ) + RRSe ) * ( ( ( RMSe * MLU ) * MUM ) * Min( Max( RCSe,MUC ) ,MUM ) ) ) - Max( CS,DS ) ) ) / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( ( CRS + FirstVNF_CPU ) ,( FirstVNF_CPU_Server + BR ) ) )", "choosing": "( ( MUR - RCSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - DDR ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( CS + RRSe ) * Max( MLU,Max( MUR,( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MDR * MRS ) ,( ( Const - MDR ) / ( ( MDR * ( FirstVNF_Mem_Server + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * RRSe ) / Min( ( RCSe + Max( RMSe,MUR ) ) ,( MUM + MUM ) ) ),( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem ,MDR ) + Min( AMS ,AMS ) ) ,( ( ARS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + Min( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + MRS ) / DDR ) ) ) ) ,RRS ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( RCSe - RRSe ) / ( CS / MLU ) ) ,( RRSe + ( RRSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - Max( FirstVNF_Mem_Server,RRS ) ) - ( ( FirstVNF_RAM / Max( Min( PN ,Const ),( MRS * ACS ) ) ) * ( MRS / PN ) ) ),Min( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / DS ) ) - ( ( MUR * CS ) / ( MLU + Max( ( ( ( MUM - MUC ) / MUR ) / ( MUM * DS ) ),DS ) ) ) ) * ( ( Min( MUC ,RRSe ) - Max( RCSe,RMSe ) ) - ( Max( MLU,RCSe ) * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + PN ) - ( Max( ( PN - ARS ),DDR ) * ACS ) )", "choosing": "Max( Min( ( MUM - RCSe ) ,( Max( MLU,( RRSe - RCSe ) ) - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( ( CRS * MDR ) - Min( AMS ,( RRS * ARS ) ) ) ) - ( Max( FirstVNF_CPU,AMS ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,( CS * RMSe ) ) + Max( ( ( RRSe - DS ) * MLU ),Min( RCSe ,MUC ) ) ) * ( CS - Max( MUM,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( BR + FirstVNF_Mem ),( ( FirstVNF_CPU * BR ) - Min( Const ,FirstVNF_CPU ) ) ) ,( ( ( ( Min( PN ,DDR ) * MRS ) * ( FirstVNF_RAM / ( FirstVNF_CPU / Max( BR,ACS ) ) ) ) / ARS ) * MDR ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( Const,Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "Max( Max( MUC,( MLU + RCSe ) ),( Max( ( ( DS + ( Max( ( MUC / RMSe ),Min( MUM ,MLU ) ) / RMSe ) ) - ( RCSe * Max( ( RMSe / MUR ),MLU ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( CRS + PN ) ) + Max( ARS,DDR ) )", "choosing": "Max( ( ( CS / RCSe ) * Min( MUR ,CS ) ),Min( ( ( ( MLU / ( ( Max( CS,DS ) * RMSe ) * ( ( RMSe - MUC ) * RCSe ) ) ) - ( ( CS - MUC ) + RRSe ) ) - ( ( MUC * ( Max( ( RRSe * RMSe ),RCSe ) * Max( ( MUR * RCSe ),( CS / CS ) ) ) ) / ( MUC - MUC ) ) ) ,Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + ( AMS + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,( RRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( Min( Min( MUC ,RMSe ) ,DS ) * MLU ),MUM ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),( RRSe * CS ) ) - ( ( MUM + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( ACS / FirstVNF_Mem_Server ) ) - Min( ( CRS + ARS ) ,Min( Max( ACS,Max( ( Const + FirstVNF_CPU ),BR ) ) ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,( Max( ( RCSe + MUR ),Min( MUC ,( RCSe * ( DS * MLU ) ) ) ) / ( CS - Max( RRSe,Max( MUR,MLU ) ) ) ) ) * ( MUM - ( ( RCSe * CS ) / ( ( MUR / MUM ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Min( FirstVNF_Mem_Server ,( Max( FirstVNF_CPU_Server,PN ) / Min( FirstVNF_Mem ,ARS ) ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + MRS ) - Max( ( ( ( MRS + AMS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ),Max( Min( RRS ,MRS ),( CRS + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( CS - Max( MLU,( MLU * DS ) ) ) * ( MUR - CS ) ) ,( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,AMS ) ,AMS ) + Min( DDR ,RRS ) )", "choosing": "( Min( ( CS * MUR ) ,Min( MUM ,DS ) ) / ( ( RMSe * MUR ) - ( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / BR ) + ( ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,Const ) ) - ( ( CRS / FirstVNF_RAM ) + ( CRS + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( MRS / MRS ) ) ) ) ) )", "choosing": "Max( Min( Max( MLU,( RRSe * ( MUM - MUR ) ) ) ,RRSe ),( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - MRS ) / Const ) ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM * ( MLU + DS ) ) - ( ( RCSe + RRSe ) + RRSe ) ) * ( Max( ( RMSe + ( RRSe * ( MUM / CS ) ) ),RCSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + ( ( RRS - ( MDR + MRS ) ) - FirstVNF_RAM_Server ) ) + ARS ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUR / CS ),Max( RMSe,Max( ( CS / ( MUC * ( DS - MUC ) ) ),Max( ( MUC * DS ),RRSe ) ) ) ) ) * ( RRSe - ( Max( MUR,MUR ) * ( MLU - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ARS,CRS ),( ( Max( BR,( ACS * RRS ) ) / ( Const / CRS ) ) / Max( RRS,ARS ) ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( ( ( ( ( RRS / MRS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) * Const ) + DDR ) / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( Max( ( RCSe + MUC ),Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUM + RRSe ) ,( MUC * CS ) ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( Max( PN,CRS ) - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,DDR ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MUM / MLU ) ,Max( RCSe,DS ) ),Min( Max( MUR,MUC ) ,Max( RRSe,MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( DS + ( ( Min( ( DS - RCSe ) ,MUC ) * ( ( ( RRSe / MUC ) + MUM ) * MLU ) ) - ( RCSe - ( MUM / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Max( Const,MRS ) ) + ARS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,CS ),Max( RMSe,( ( ( MUC / MLU ) / ( Min( DS ,CS ) - Max( ( RMSe - RRSe ),CS ) ) ) / ( MUR * Max( MUM,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,DDR ) - ( ( ARS * FirstVNF_RAM ) / ( ( Const * AMS ) / ( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( Max( ( DS / RRSe ),( RCSe + MUC ) ) - ( ( ( CS - DS ) / RMSe ) - ( DS * CS ) ) ),Min( Max( DS,MUR ) ,( RRSe - MUR ) ) ) ,( Min( CS ,MUC ) * Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ACS ) ,( FirstVNF_RAM / ( FirstVNF_RAM_Server + ( Max( DDR,FirstVNF_RAM ) * AMS ) ) ) )", "choosing": "( ( Max( RCSe,( ( RCSe + ( Max( ( RCSe + DS ),MLU ) - ( Min( MUR ,CS ) / RMSe ) ) ) - ( MLU / MUM ) ) ) * MUM ) * ( Max( ( Max( RCSe,RMSe ) + DS ),RRSe ) / ( RCSe * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU_Server ,DDR ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( ACS / FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe / Min( RMSe ,MLU ) ) + MUR ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Min( ( ARS / FirstVNF_RAM_Server ) ,AMS ) ) + ( ( FirstVNF_Mem_Server - ARS ) - DDR ) )", "choosing": "( ( MUR - RCSe ) + ( ( ( DS - RRSe ) - ( RMSe + ( ( DS / ( Max( RRSe,MUR ) - DS ) ) + ( MUM / DS ) ) ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,Max( Max( ACS,DDR ),FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,Max( ( Max( RMSe,( Min( MUM ,DS ) / RMSe ) ) / CS ),Max( CS,CS ) ) ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( RRS + PN ) ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) / Min( BR ,CRS ) ) )", "choosing": "( ( ( MUM * MLU ) * Max( Max( RCSe,MUM ),Min( RCSe ,RCSe ) ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Const ) - ( ( Max( ACS,( ( ACS / MDR ) - FirstVNF_Mem ) ) * PN ) - Min( BR ,PN ) ) )", "choosing": "Max( ( MUM * ( MUR + Min( ( ( ( ( MUM * MUC ) + RCSe ) + Max( ( MUM + MUR ),RCSe ) ) * MUM ) ,MUC ) ) ),( MUM * Min( MUM ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Const ) / DDR ) / FirstVNF_CPU ) + ( DDR / RRS ) )", "choosing": "( ( DS + ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - Max( MUR,MLU ) ) ) + ( DS / ( Max( RRSe,MLU ) / DS ) ) ) ) ) ) + ( MUR - Max( MUM,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( ARS ,BR ) ,( DDR - ACS ) ) - Min( Max( PN,MRS ) ,( Const * MRS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,( ACS - ( FirstVNF_CPU * AMS ) ) ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( Min( ( RRSe / Min( RMSe ,MLU ) ) ,RMSe ) * Max( ( ( MLU + ( CS * RMSe ) ) + ( ( CS / MUC ) + ( RCSe + CS ) ) ),( Max( MUM,( RRSe / CS ) ) * DS ) ) ) * RRSe ) ) + ( ( ( ( Max( RMSe,CS ) / RMSe ) + RCSe ) - ( MUM + RCSe ) ) - Max( ( DS / RRSe ),Max( RRSe,Min( RCSe ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( Min( Const ,CRS ) / ( CRS / ( Max( MDR,ACS ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( Max( ( MLU - Min( DS ,DS ) ),RRSe ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( AMS + ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Max( ( Const / Max( FirstVNF_CPU,RRS ) ),DDR ) ) ) ) )", "choosing": "Max( Min( ( MLU - ( RRSe - ( DS / ( MUC / MUM ) ) ) ) ,MLU ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( Max( ( ( FirstVNF_CPU_Server / Min( FirstVNF_CPU ,RRS ) ) * FirstVNF_Mem ),FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ACS ,ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( ( ( Max( CS,CS ) + MLU ) / MUR ) / MLU ) ,( CS * RCSe ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,ARS ) + ( FirstVNF_Mem - PN ) ) ,( ( BR + MDR ) * Min( ( Min( Min( ARS ,BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( FirstVNF_RAM * ARS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,ACS ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * CRS ) ) ) ) ) ) - Min( ( ( RRS - RRS ) / Min( PN ,MDR ) ) ,( Const + DDR ) ) )", "choosing": "Max( ( DS + ( MUC - ( MUM - ( DS + MLU ) ) ) ),( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM - FirstVNF_CPU ) ),Min( FirstVNF_CPU ,( Max( ( RRS - Const ),FirstVNF_CPU ) - ARS ) ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( AMS,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( RCSe / ( ( ( ( Max( MUR,MUC ) - ( RMSe + RCSe ) ) + MLU ) / RMSe ) - DS ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,MRS ) - ( Max( CRS,FirstVNF_CPU ) / Max( ( Const * MRS ),ACS ) ) ) ,( ACS - ( BR / PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,MRS ) - ( Max( ( DDR + FirstVNF_Mem ),FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) / ( DDR / ( CRS * MDR ) ) )", "choosing": "Max( ( ( RRSe * RRSe ) + ( MUC * RMSe ) ),( ( ( CS - RMSe ) + MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( ACS - ( ( BR / ARS ) - Max( ( Min( FirstVNF_CPU ,ARS ) - MDR ),Min( FirstVNF_RAM ,RRS ) ) ) ) )", "choosing": "( ( ( ( MUR + RCSe ) - Max( Min( DS ,( ( ( MUM - MUC ) - CS ) - MLU ) ),DS ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( ( ( MLU + RMSe ) - ( MUM + RCSe ) ) - Max( ( DS / RMSe ),Min( RRSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( RRS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + Min( ( FirstVNF_RAM + PN ) ,ARS ) )", "choosing": "Min( Max( ( ( RMSe / MUM ) * RCSe ),CS ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) * ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR / BR ) ,DDR ) - ( AMS * ARS ) )", "choosing": "( ( Max( CS,CS ) + ( ( ( RCSe - MUC ) - DS ) / ( MUC * ( ( Max( ( RRSe - MUC ),Max( MLU,RCSe ) ) + ( ( DS - CS ) * MUR ) ) - RMSe ) ) ) ) / ( DS + ( Max( RCSe,DS ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "Min( ( MUM + DS ) ,( MLU * ( MLU - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ARS ) * FirstVNF_RAM_Server ) - ( MDR + ( FirstVNF_RAM_Server * Const ) ) )", "choosing": "Max( ( MUC + ( ( ( Max( RCSe,Max( CS,CS ) ) - Max( MUC,MUR ) ) + MLU ) - DS ) ),( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + Min( BR ,CRS ) )", "choosing": "( Max( ( MUR / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) + ( ( ( MDR * ( Max( FirstVNF_CPU,BR ) * FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,CS ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) / ( ( MUC / MUM ) + RMSe ) ) ) ) / ( ( Max( MUM,MUR ) - Max( MUR,RRSe ) ) / ( Min( MLU ,MUM ) / Max( MLU,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - ( RMSe * MUR ) ) ) + ( DS / ( Max( RRSe,MLU ) / DS ) ) ) ) ) + DS ) + ( MUR - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( Min( ( MUM + DS ) ,( ( ( MUM - Min( CS ,RCSe ) ) - MUC ) * RMSe ) ),CS ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( AMS / PN ) ),DDR ) - ( CRS / FirstVNF_RAM_Server ) )", "choosing": "Max( Max( Min( ( Min( ( DS + RRSe ) ,MLU ) - MUC ) ,( Min( MUM ,MUC ) + ( MUM + CS ) ) ),RCSe ),( ( MUR + MUC ) * ( RMSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( RRS - DDR ) )", "choosing": "Max( Max( MUM,CS ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + PN ) / ( CRS * FirstVNF_Mem ) ) - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "Min( Min( RCSe ,( Max( MUC,MLU ) - CS ) ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - MRS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.606694560669456, "obj2": 0.29187713565142714}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "Min( ( AMS * FirstVNF_RAM_Server ) ,( ACS - ARS ) )", "choosing": "Min( Max( RMSe,( RMSe * MUM ) ) ,( MUC / DS ) )", "obj1": 0.8221757322175732, "obj2": 0.14225756845536353}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - ARS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),( ( ARS - FirstVNF_Mem ) - Min( PN ,AMS ) ) ) / ( Min( FirstVNF_RAM ,Const ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( MUM / ( CS * Min( ( MUR - CS ) ,DS ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.8284518828451883, "obj2": 0.08932050862091345}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( MUR + RMSe ) ) ) ) ) * MUM ) )", "obj1": 0.8849372384937239, "obj2": 0.0508329997464804}, {"determining": "( ( ARS - Min( ARS ,MRS ) ) / Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( ARS * ARS ) - ( FirstVNF_Mem + Const ) ) ) )", "choosing": "( ( RMSe / ( ( ( ( MUM + RMSe ) - DS ) - MUM ) + DS ) ) * ( ( MUC * CS ) * MUM ) )", "obj1": 0.9539748953974896, "obj2": 0.038882814156352946}, {"determining": "Max( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,ARS ) ) ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ( ( Max( ARS,DDR ) + ACS ) / FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RCSe * MLU ) * ( RMSe - MUR ) ) ,( RCSe - ( RCSe * MUR ) ) )", "obj1": 0.6652719665271967, "obj2": 0.24818486407707094}, {"determining": "( ( DDR - ( BR / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * Max( ( DS + RRSe ),Min( RRSe ,CS ) ) ) * Min( MUR ,Min( RRSe ,( RMSe - Min( MUC ,( Max( RRSe,MUR ) - Min( ( RMSe + MUC ) ,( MUR + CS ) ) ) ) ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.15313163735877197}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( RRSe ,CS ) ) ) ) ) )", "obj1": 0.7364016736401674, "obj2": 0.1814195562075388}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * Max( ( DS / RRSe ),Min( RRSe ,CS ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.7552301255230126, "obj2": 0.1554302659345903}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.06970895369375724}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( Max( PN,CRS ) - BR ) )", "choosing": "( ( RCSe + MUR ) / ( RMSe / ( MUC + DS ) ) )", "obj1": 0.7426778242677824, "obj2": 0.17847178170939557}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( MUR + RMSe ) ) ) ) ) * MUM ) )", "obj1": 0.8661087866108786, "obj2": 0.0635386674220268}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( MLU * RMSe ) )", "obj1": 0.9560669456066946, "obj2": 0.018737915039731694}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 0.6150627615062761, "obj2": 0.2671910127456893}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( MDR / MRS ),( ( AMS / FirstVNF_CPU_Server ) * ( BR / FirstVNF_CPU ) ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( RMSe,MUR ) ,( Max( ( RMSe * RCSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.009038141569374205}, {"determining": "( ( DDR - FirstVNF_Mem ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / DDR ) )", "choosing": "( ( ( ( MUC / ( DS - Max( MUR,CS ) ) ) - MLU ) - RRSe ) * ( DS + Min( Max( CS,RCSe ) ,DS ) ) )", "obj1": 0.6129707112970711, "obj2": 0.284030080417292}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 0.9665271966527197, "obj2": 0.014367843167592757}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( FirstVNF_RAM_Server,CRS ) - BR ) )", "choosing": "( MUC * ( ( RCSe - RMSe ) / ( CS + MUM ) ) )", "obj1": 0.6317991631799164, "obj2": 0.26095123543294624}, {"determining": "Max( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) - ( ACS / FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ( BR / Max( FirstVNF_Mem_Server,( MRS * DDR ) ) ) ) )", "choosing": "Min( ( ( RCSe * DS ) * ( ( ( ( CS - Min( RRSe ,MUC ) ) * RRSe ) / RRSe ) / MLU ) ) ,( ( CS * MUR ) + ( DS + RRSe ) ) )", "obj1": 0.6527196652719666, "obj2": 0.2560054464487389}, {"determining": "Max( ( ( ( ( RRS * Const ) / ( AMS * FirstVNF_RAM_Server ) ) / ( Min( Const ,FirstVNF_RAM_Server ) + ( MRS - AMS ) ) ) / Max( Min( ( FirstVNF_Mem_Server / MRS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server / ACS ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ),( MDR * ARS ) )", "choosing": "( ( RMSe * MUM ) / ( Max( Min( ( MUM / MLU ) ,Max( RCSe,DS ) ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6506276150627615, "obj2": 0.2581670296413443}, {"determining": "( FirstVNF_CPU - ( ( ( Min( ( FirstVNF_Mem * Const ) ,AMS ) * AMS ) / ( Max( Min( BR ,( Max( FirstVNF_RAM_Server,PN ) - BR ) ),CRS ) * CRS ) ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "Min( Max( ( DS * ( ( CS * RRSe ) + RCSe ) ),Min( Min( DS ,MUR ) ,( RRSe - CS ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + ( MUC - RCSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002550482499746131}, {"determining": "( ( Min( PN ,FirstVNF_RAM_Server ) / Max( BR,FirstVNF_CPU ) ) / ( Max( MDR,FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( RRSe - MUC ) ) + Min( ( MLU - RCSe ) ,( MUC - MUC ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2611903792768235}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.06776280813999447}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Max( ( MUM / MUM ),MUC )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Max( ( PN / FirstVNF_CPU_Server ),( MDR + BR ) ) )", "choosing": "( ( Min( MUM ,MUR ) - MUM ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - FirstVNF_RAM ) - ( FirstVNF_CPU * Max( RRS,AMS ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( AMS ,Min( ARS ,RRS ) ) ) * ( FirstVNF_CPU + Const ) )", "choosing": "( Max( Max( ( Max( ( ( ( MLU * MUM ) / RRSe ) / ( DS / CS ) ),( Min( MUC ,( RRSe + RRSe ) ) / ( RRSe - MUC ) ) ) / MUC ),DS ),( RMSe + MLU ) ) / ( ( MLU + ( MUM - MLU ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Max( BR,CRS ) ) / ( FirstVNF_CPU_Server * CRS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS - Max( RRSe,( ( ( MUR / DS ) - RCSe ) * RCSe ) ) ) ) * Max( Max( MUM,CS ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * Max( ( PN * ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - MDR ) ) / Max( FirstVNF_Mem_Server,Const ) ) ),MDR ) ) ) - ( MRS - MRS ) )", "choosing": "( ( ( RRSe + RRSe ) - DS ) + ( RMSe - ( DS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( DDR + ( BR + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC / MUM ),Min( RMSe ,CS ) ) + ( Max( RCSe,( ( ( Max( RCSe,RMSe ) + RRSe ) * ( ( ( RMSe * MLU ) * MUM ) * Min( Max( RCSe,MUC ) ,MUM ) ) ) - Max( CS,DS ) ) ) / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( ( CRS + FirstVNF_CPU ) ,( FirstVNF_CPU_Server + BR ) ) )", "choosing": "( ( MUR - RCSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - DDR ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( CS + RRSe ) * Max( MLU,Max( MUR,( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MDR * MRS ) ,( ( Const - MDR ) / ( ( MDR * ( FirstVNF_Mem_Server + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * RRSe ) / Min( ( RCSe + Max( RMSe,MUR ) ) ,( MUM + MUM ) ) ),( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem ,MDR ) + Min( AMS ,AMS ) ) ,( ( ARS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + Min( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + MRS ) / DDR ) ) ) ) ,RRS ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( RCSe - RRSe ) / ( CS / MLU ) ) ,( RRSe + ( RRSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - Max( FirstVNF_Mem_Server,RRS ) ) - ( ( FirstVNF_RAM / Max( Min( PN ,Const ),( MRS * ACS ) ) ) * ( MRS / PN ) ) ),Min( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / DS ) ) - ( ( MUR * CS ) / ( MLU + Max( ( ( ( MUM - MUC ) / MUR ) / ( MUM * DS ) ),DS ) ) ) ) * ( ( Min( MUC ,RRSe ) - Max( RCSe,RMSe ) ) - ( Max( MLU,RCSe ) * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + PN ) - ( Max( ( PN - ARS ),DDR ) * ACS ) )", "choosing": "Max( Min( ( MUM - RCSe ) ,( Max( MLU,( RRSe - RCSe ) ) - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( ( CRS * MDR ) - Min( AMS ,( RRS * ARS ) ) ) ) - ( Max( FirstVNF_CPU,AMS ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,( CS * RMSe ) ) + Max( ( ( RRSe - DS ) * MLU ),Min( RCSe ,MUC ) ) ) * ( CS - Max( MUM,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( BR + FirstVNF_Mem ),( ( FirstVNF_CPU * BR ) - Min( Const ,FirstVNF_CPU ) ) ) ,( ( ( ( Min( PN ,DDR ) * MRS ) * ( FirstVNF_RAM / ( FirstVNF_CPU / Max( BR,ACS ) ) ) ) / ARS ) * MDR ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( Const,Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "Max( Max( MUC,( MLU + RCSe ) ),( Max( ( ( DS + ( Max( ( MUC / RMSe ),Min( MUM ,MLU ) ) / RMSe ) ) - ( RCSe * Max( ( RMSe / MUR ),MLU ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( CRS + PN ) ) + Max( ARS,DDR ) )", "choosing": "Max( ( ( CS / RCSe ) * Min( MUR ,CS ) ),Min( ( ( ( MLU / ( ( Max( CS,DS ) * RMSe ) * ( ( RMSe - MUC ) * RCSe ) ) ) - ( ( CS - MUC ) + RRSe ) ) - ( ( MUC * ( Max( ( RRSe * RMSe ),RCSe ) * Max( ( MUR * RCSe ),( CS / CS ) ) ) ) / ( MUC - MUC ) ) ) ,Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + ( AMS + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,( RRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( Min( Min( MUC ,RMSe ) ,DS ) * MLU ),MUM ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),( RRSe * CS ) ) - ( ( MUM + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( ACS / FirstVNF_Mem_Server ) ) - Min( ( CRS + ARS ) ,Min( Max( ACS,Max( ( Const + FirstVNF_CPU ),BR ) ) ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,( Max( ( RCSe + MUR ),Min( MUC ,( RCSe * ( DS * MLU ) ) ) ) / ( CS - Max( RRSe,Max( MUR,MLU ) ) ) ) ) * ( MUM - ( ( RCSe * CS ) / ( ( MUR / MUM ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Min( FirstVNF_Mem_Server ,( Max( FirstVNF_CPU_Server,PN ) / Min( FirstVNF_Mem ,ARS ) ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + MRS ) - Max( ( ( ( MRS + AMS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ),Max( Min( RRS ,MRS ),( CRS + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( CS - Max( MLU,( MLU * DS ) ) ) * ( MUR - CS ) ) ,( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,AMS ) ,AMS ) + Min( DDR ,RRS ) )", "choosing": "( Min( ( CS * MUR ) ,Min( MUM ,DS ) ) / ( ( RMSe * MUR ) - ( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / BR ) + ( ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,Const ) ) - ( ( CRS / FirstVNF_RAM ) + ( CRS + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( MRS / MRS ) ) ) ) ) )", "choosing": "Max( Min( Max( MLU,( RRSe * ( MUM - MUR ) ) ) ,RRSe ),( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - MRS ) / Const ) ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM * ( MLU + DS ) ) - ( ( RCSe + RRSe ) + RRSe ) ) * ( Max( ( RMSe + ( RRSe * ( MUM / CS ) ) ),RCSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + ( ( RRS - ( MDR + MRS ) ) - FirstVNF_RAM_Server ) ) + ARS ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUR / CS ),Max( RMSe,Max( ( CS / ( MUC * ( DS - MUC ) ) ),Max( ( MUC * DS ),RRSe ) ) ) ) ) * ( RRSe - ( Max( MUR,MUR ) * ( MLU - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ARS,CRS ),( ( Max( BR,( ACS * RRS ) ) / ( Const / CRS ) ) / Max( RRS,ARS ) ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( ( ( ( ( RRS / MRS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) * Const ) + DDR ) / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( Max( ( RCSe + MUC ),Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUM + RRSe ) ,( MUC * CS ) ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( Max( PN,CRS ) - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,DDR ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MUM / MLU ) ,Max( RCSe,DS ) ),Min( Max( MUR,MUC ) ,Max( RRSe,MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( DS + ( ( Min( ( DS - RCSe ) ,MUC ) * ( ( ( RRSe / MUC ) + MUM ) * MLU ) ) - ( RCSe - ( MUM / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Max( Const,MRS ) ) + ARS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,CS ),Max( RMSe,( ( ( MUC / MLU ) / ( Min( DS ,CS ) - Max( ( RMSe - RRSe ),CS ) ) ) / ( MUR * Max( MUM,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,DDR ) - ( ( ARS * FirstVNF_RAM ) / ( ( Const * AMS ) / ( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( Max( ( DS / RRSe ),( RCSe + MUC ) ) - ( ( ( CS - DS ) / RMSe ) - ( DS * CS ) ) ),Min( Max( DS,MUR ) ,( RRSe - MUR ) ) ) ,( Min( CS ,MUC ) * Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ACS ) ,( FirstVNF_RAM / ( FirstVNF_RAM_Server + ( Max( DDR,FirstVNF_RAM ) * AMS ) ) ) )", "choosing": "( ( Max( RCSe,( ( RCSe + ( Max( ( RCSe + DS ),MLU ) - ( Min( MUR ,CS ) / RMSe ) ) ) - ( MLU / MUM ) ) ) * MUM ) * ( Max( ( Max( RCSe,RMSe ) + DS ),RRSe ) / ( RCSe * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU_Server ,DDR ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( ACS / FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe / Min( RMSe ,MLU ) ) + MUR ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Min( ( ARS / FirstVNF_RAM_Server ) ,AMS ) ) + ( ( FirstVNF_Mem_Server - ARS ) - DDR ) )", "choosing": "( ( MUR - RCSe ) + ( ( ( DS - RRSe ) - ( RMSe + ( ( DS / ( Max( RRSe,MUR ) - DS ) ) + ( MUM / DS ) ) ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,Max( Max( ACS,DDR ),FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,Max( ( Max( RMSe,( Min( MUM ,DS ) / RMSe ) ) / CS ),Max( CS,CS ) ) ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( RRS + PN ) ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) / Min( BR ,CRS ) ) )", "choosing": "( ( ( MUM * MLU ) * Max( Max( RCSe,MUM ),Min( RCSe ,RCSe ) ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Const ) - ( ( Max( ACS,( ( ACS / MDR ) - FirstVNF_Mem ) ) * PN ) - Min( BR ,PN ) ) )", "choosing": "Max( ( MUM * ( MUR + Min( ( ( ( ( MUM * MUC ) + RCSe ) + Max( ( MUM + MUR ),RCSe ) ) * MUM ) ,MUC ) ) ),( MUM * Min( MUM ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Const ) / DDR ) / FirstVNF_CPU ) + ( DDR / RRS ) )", "choosing": "( ( DS + ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - Max( MUR,MLU ) ) ) + ( DS / ( Max( RRSe,MLU ) / DS ) ) ) ) ) ) + ( MUR - Max( MUM,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( ARS ,BR ) ,( DDR - ACS ) ) - Min( Max( PN,MRS ) ,( Const * MRS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,( ACS - ( FirstVNF_CPU * AMS ) ) ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( Min( ( RRSe / Min( RMSe ,MLU ) ) ,RMSe ) * Max( ( ( MLU + ( CS * RMSe ) ) + ( ( CS / MUC ) + ( RCSe + CS ) ) ),( Max( MUM,( RRSe / CS ) ) * DS ) ) ) * RRSe ) ) + ( ( ( ( Max( RMSe,CS ) / RMSe ) + RCSe ) - ( MUM + RCSe ) ) - Max( ( DS / RRSe ),Max( RRSe,Min( RCSe ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( Min( Const ,CRS ) / ( CRS / ( Max( MDR,ACS ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( Max( ( MLU - Min( DS ,DS ) ),RRSe ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( AMS + ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Max( ( Const / Max( FirstVNF_CPU,RRS ) ),DDR ) ) ) ) )", "choosing": "Max( Min( ( MLU - ( RRSe - ( DS / ( MUC / MUM ) ) ) ) ,MLU ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( Max( ( ( FirstVNF_CPU_Server / Min( FirstVNF_CPU ,RRS ) ) * FirstVNF_Mem ),FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ACS ,ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( ( ( Max( CS,CS ) + MLU ) / MUR ) / MLU ) ,( CS * RCSe ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,ARS ) + ( FirstVNF_Mem - PN ) ) ,( ( BR + MDR ) * Min( ( Min( Min( ARS ,BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( FirstVNF_RAM * ARS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,ACS ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * CRS ) ) ) ) ) ) - Min( ( ( RRS - RRS ) / Min( PN ,MDR ) ) ,( Const + DDR ) ) )", "choosing": "Max( ( DS + ( MUC - ( MUM - ( DS + MLU ) ) ) ),( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM - FirstVNF_CPU ) ),Min( FirstVNF_CPU ,( Max( ( RRS - Const ),FirstVNF_CPU ) - ARS ) ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( AMS,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( RCSe / ( ( ( ( Max( MUR,MUC ) - ( RMSe + RCSe ) ) + MLU ) / RMSe ) - DS ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,MRS ) - ( Max( CRS,FirstVNF_CPU ) / Max( ( Const * MRS ),ACS ) ) ) ,( ACS - ( BR / PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,MRS ) - ( Max( ( DDR + FirstVNF_Mem ),FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) / ( DDR / ( CRS * MDR ) ) )", "choosing": "Max( ( ( RRSe * RRSe ) + ( MUC * RMSe ) ),( ( ( CS - RMSe ) + MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( ACS - ( ( BR / ARS ) - Max( ( Min( FirstVNF_CPU ,ARS ) - MDR ),Min( FirstVNF_RAM ,RRS ) ) ) ) )", "choosing": "( ( ( ( MUR + RCSe ) - Max( Min( DS ,( ( ( MUM - MUC ) - CS ) - MLU ) ),DS ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( ( ( MLU + RMSe ) - ( MUM + RCSe ) ) - Max( ( DS / RMSe ),Min( RRSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( RRS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + Min( ( FirstVNF_RAM + PN ) ,ARS ) )", "choosing": "Min( Max( ( ( RMSe / MUM ) * RCSe ),CS ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) * ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR / BR ) ,DDR ) - ( AMS * ARS ) )", "choosing": "( ( Max( CS,CS ) + ( ( ( RCSe - MUC ) - DS ) / ( MUC * ( ( Max( ( RRSe - MUC ),Max( MLU,RCSe ) ) + ( ( DS - CS ) * MUR ) ) - RMSe ) ) ) ) / ( DS + ( Max( RCSe,DS ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "Min( ( MUM + DS ) ,( MLU * ( MLU - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ARS ) * FirstVNF_RAM_Server ) - ( MDR + ( FirstVNF_RAM_Server * Const ) ) )", "choosing": "Max( ( MUC + ( ( ( Max( RCSe,Max( CS,CS ) ) - Max( MUC,MUR ) ) + MLU ) - DS ) ),( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + Min( BR ,CRS ) )", "choosing": "( Max( ( MUR / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) + ( ( ( MDR * ( Max( FirstVNF_CPU,BR ) * FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,CS ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) / ( ( MUC / MUM ) + RMSe ) ) ) ) / ( ( Max( MUM,MUR ) - Max( MUR,RRSe ) ) / ( Min( MLU ,MUM ) / Max( MLU,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - ( RMSe * MUR ) ) ) + ( DS / ( Max( RRSe,MLU ) / DS ) ) ) ) ) + DS ) + ( MUR - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( Min( ( MUM + DS ) ,( ( ( MUM - Min( CS ,RCSe ) ) - MUC ) * RMSe ) ),CS ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( AMS / PN ) ),DDR ) - ( CRS / FirstVNF_RAM_Server ) )", "choosing": "Max( Max( Min( ( Min( ( DS + RRSe ) ,MLU ) - MUC ) ,( Min( MUM ,MUC ) + ( MUM + CS ) ) ),RCSe ),( ( MUR + MUC ) * ( RMSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( RRS - DDR ) )", "choosing": "Max( Max( MUM,CS ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + PN ) / ( CRS * FirstVNF_Mem ) ) - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "Min( Min( RCSe ,( Max( MUC,MLU ) - CS ) ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - MRS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * ( MRS * ACS ) ) + FirstVNF_Mem ) + ( RRS - DDR ) )", "choosing": "( ( ( RMSe * MUR ) - Max( Min( MUC ,MUC ),MLU ) ) / Min( ( MUM / MUC ) ,Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - MUC ) ) + ( DS / ( Max( RRSe,MLU ) / DS ) ) ) ) ) + DS ) + ( MUR - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server / BR ) ,( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUR / MLU ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ARS - BR ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe - Min( ( RRSe * ( Max( MLU,RRSe ) / RRSe ) ) ,MUM ) ),( Max( Min( MUM ,MUC ),RMSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.606694560669456, "obj2": 0.29187713565142714}, {"determining": "Min( ( AMS * FirstVNF_RAM_Server ) ,( ACS - ARS ) )", "choosing": "Min( Max( RMSe,( RMSe * MUM ) ) ,( MUC / DS ) )", "obj1": 0.8221757322175732, "obj2": 0.14225756845536353}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - ARS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),( ( ARS - FirstVNF_Mem ) - Min( PN ,AMS ) ) ) / ( Min( FirstVNF_RAM ,Const ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( MUM / ( CS * Min( ( MUR - CS ) ,DS ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.8284518828451883, "obj2": 0.08932050862091345}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( MUR + RMSe ) ) ) ) ) * MUM ) )", "obj1": 0.8849372384937239, "obj2": 0.0508329997464804}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( Min( ( MDR - MRS ) ,( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUC,CS ) / MUM ) * ( RMSe + RMSe ) )", "obj1": 0.7071129707112971, "obj2": 0.16790652145893775}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( RRSe ,Max( DS,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.23249175252309126}, {"determining": "( ( ARS - Min( ARS ,MRS ) ) / Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( ( BR * Min( Max( Const,DDR ) ,FirstVNF_RAM_Server ) ) * ARS ) - ( FirstVNF_Mem + Const ) ) ) )", "choosing": "( Max( MUR,RCSe ) + ( ( ( DS - RRSe ) - ( RMSe + ( ( DS / ( Max( RRSe,MLU ) / ( RMSe + RRSe ) ) ) + ( MUM / ( Min( MLU ,CS ) - MUC ) ) ) ) ) + DS ) )", "obj1": 0.9476987447698745, "obj2": 0.039769828393727426}, {"determining": "( ( DDR - ( BR / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * Max( ( DS + RRSe ),Min( RRSe ,CS ) ) ) * Min( MUR ,Min( RRSe ,( RMSe - Min( MUC ,( Max( RRSe,MUR ) - Min( ( RMSe + MUC ) ,( MUR + CS ) ) ) ) ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.15313163735877197}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * Max( ( DS / RRSe ),Min( RRSe ,CS ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.7552301255230126, "obj2": 0.1554302659345903}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.06970895369375724}, {"determining": "( ( Min( PN ,Max( FirstVNF_CPU_Server,DDR ) ) / Max( BR,FirstVNF_CPU ) ) / ( Max( MDR,FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( RRSe / ( RRSe - MUC ) ) + Min( ( MLU - RCSe ) ,( MUC - MUC ) ) )", "obj1": 0.6464435146443515, "obj2": 0.2523472239121908}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( MUR + RMSe ) ) ) ) ) * MUM ) )", "obj1": 0.8661087866108786, "obj2": 0.0635386674220268}, {"determining": "Max( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,ARS ) ) ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ( ( Max( ARS,DDR ) + ACS ) / FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RCSe * MLU ) * ( RMSe - MUR ) ) ,( RCSe - ( RCSe * MUR ) ) )", "obj1": 0.6652719665271967, "obj2": 0.24818486407707094}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( MLU * RMSe ) )", "obj1": 0.9560669456066946, "obj2": 0.018737915039731694}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 0.6150627615062761, "obj2": 0.2671910127456893}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( MDR / MRS ),( ( AMS / FirstVNF_CPU_Server ) * ( BR / FirstVNF_CPU ) ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( RMSe,MUR ) ,( Max( ( RMSe * RCSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.009038141569374205}, {"determining": "( ( ARS - Min( ARS ,MRS ) ) / Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( ARS * ARS ) - ( FirstVNF_Mem + Const ) ) ) )", "choosing": "( ( RMSe / ( ( ( ( MUM + RMSe ) - DS ) - MUM ) + DS ) ) * ( ( MUC * CS ) * MUM ) )", "obj1": 0.9539748953974896, "obj2": 0.038882814156352946}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 0.9665271966527197, "obj2": 0.014367843167592757}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( FirstVNF_RAM_Server,CRS ) - BR ) )", "choosing": "( MUC * ( ( RCSe - RMSe ) / ( CS + MUM ) ) )", "obj1": 0.6317991631799164, "obj2": 0.26095123543294624}, {"determining": "( ( DDR - FirstVNF_Mem ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / DDR ) )", "choosing": "( ( ( ( MUC / ( DS - Max( MUR,CS ) ) ) - MLU ) - RRSe ) * ( DS + Min( Max( CS,RCSe ) ,DS ) ) )", "obj1": 0.6129707112970711, "obj2": 0.284030080417292}, {"determining": "( ( Min( PN ,FirstVNF_RAM_Server ) / Max( BR,FirstVNF_CPU ) ) / ( Max( MDR,FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( RRSe - MUC ) ) + Min( ( MLU - RCSe ) ,( MUC - MUC ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2611903792768235}, {"determining": "( ( DDR - ( ( FirstVNF_CPU - ( MRS - ( Const - PN ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + ( PN / FirstVNF_CPU ) ) ) - Min( ( FirstVNF_RAM_Server * ( ACS - DDR ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MLU ,RCSe ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS - CS ) ,( MUM * ( ( DS / RRSe ) - ( ( CS / RRSe ) * DS ) ) ) ) ) )", "obj1": 0.7615062761506276, "obj2": 0.15338573197699804}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) ) ,DS ) ) / ( ( RMSe * MUR ) - ( RRSe * MLU ) ) )", "obj1": 0.9895397489539749, "obj2": 0.004109119714957308}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.06776280813999447}, {"determining": "( ( FirstVNF_Mem / DDR ) / Max( PN,CRS ) )", "choosing": "( ( ( ( MUC / ( DS * MLU ) ) - MLU ) - RRSe ) * ( DS + Min( Max( RCSe,CS ) ,DS ) ) )", "obj1": 0.6129707112970711, "obj2": 0.284030080417292}, {"determining": "( FirstVNF_CPU - ( ( ( Min( ( FirstVNF_Mem * Const ) ,AMS ) * AMS ) / ( Max( Min( BR ,( Max( FirstVNF_RAM_Server,PN ) - BR ) ),CRS ) * CRS ) ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "Min( Max( ( DS * ( ( CS * RRSe ) + RCSe ) ),Min( Min( DS ,MUR ) ,( RRSe - CS ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + ( MUC - RCSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002550482499746131}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM_Server * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( ( ( ( MUM * ( MLU + DS ) ) - ( RRSe + ( RCSe + RRSe ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.0691237563908986}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Max( ( MUM / MUM ),MUC )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Max( ( PN / FirstVNF_CPU_Server ),( MDR + BR ) ) )", "choosing": "( ( Min( MUM ,MUR ) - MUM ) + Max( ( MLU + ( MLU * RMSe ) ),RMSe ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - FirstVNF_RAM ) - ( FirstVNF_CPU * Max( RRS,AMS ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( AMS ,Min( ARS ,RRS ) ) ) * ( FirstVNF_CPU + Const ) )", "choosing": "( Max( Max( ( Max( ( ( ( MLU * MUM ) / RRSe ) / ( DS / CS ) ),( Min( MUC ,( RRSe + RRSe ) ) / ( RRSe - MUC ) ) ) / MUC ),DS ),( RMSe + MLU ) ) / ( ( MLU + ( MUM - MLU ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Max( BR,CRS ) ) / ( FirstVNF_CPU_Server * CRS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS - Max( RRSe,( ( ( MUR / DS ) - RCSe ) * RCSe ) ) ) ) * Max( Max( MUM,CS ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * Max( ( PN * ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - MDR ) ) / Max( FirstVNF_Mem_Server,Const ) ) ),MDR ) ) ) - ( MRS - MRS ) )", "choosing": "( ( ( RRSe + RRSe ) - DS ) + ( RMSe - ( DS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( DDR + ( BR + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC / MUM ),Min( RMSe ,CS ) ) + ( Max( RCSe,( ( ( Max( RCSe,RMSe ) + RRSe ) * ( ( ( RMSe * MLU ) * MUM ) * Min( Max( RCSe,MUC ) ,MUM ) ) ) - Max( CS,DS ) ) ) / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( ( CRS + FirstVNF_CPU ) ,( FirstVNF_CPU_Server + BR ) ) )", "choosing": "( ( MUR - RCSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - DDR ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( CS + RRSe ) * Max( MLU,Max( MUR,( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MDR * MRS ) ,( ( Const - MDR ) / ( ( MDR * ( FirstVNF_Mem_Server + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * RRSe ) / Min( ( RCSe + Max( RMSe,MUR ) ) ,( MUM + MUM ) ) ),( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem ,MDR ) + Min( AMS ,AMS ) ) ,( ( ARS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + Min( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + MRS ) / DDR ) ) ) ) ,RRS ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( RCSe - RRSe ) / ( CS / MLU ) ) ,( RRSe + ( RRSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - Max( FirstVNF_Mem_Server,RRS ) ) - ( ( FirstVNF_RAM / Max( Min( PN ,Const ),( MRS * ACS ) ) ) * ( MRS / PN ) ) ),Min( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / DS ) ) - ( ( MUR * CS ) / ( MLU + Max( ( ( ( MUM - MUC ) / MUR ) / ( MUM * DS ) ),DS ) ) ) ) * ( ( Min( MUC ,RRSe ) - Max( RCSe,RMSe ) ) - ( Max( MLU,RCSe ) * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + PN ) - ( Max( ( PN - ARS ),DDR ) * ACS ) )", "choosing": "Max( Min( ( MUM - RCSe ) ,( Max( MLU,( RRSe - RCSe ) ) - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( ( CRS * MDR ) - Min( AMS ,( RRS * ARS ) ) ) ) - ( Max( FirstVNF_CPU,AMS ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,( CS * RMSe ) ) + Max( ( ( RRSe - DS ) * MLU ),Min( RCSe ,MUC ) ) ) * ( CS - Max( MUM,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( BR + FirstVNF_Mem ),( ( FirstVNF_CPU * BR ) - Min( Const ,FirstVNF_CPU ) ) ) ,( ( ( ( Min( PN ,DDR ) * MRS ) * ( FirstVNF_RAM / ( FirstVNF_CPU / Max( BR,ACS ) ) ) ) / ARS ) * MDR ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( Const,Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "Max( Max( MUC,( MLU + RCSe ) ),( Max( ( ( DS + ( Max( ( MUC / RMSe ),Min( MUM ,MLU ) ) / RMSe ) ) - ( RCSe * Max( ( RMSe / MUR ),MLU ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( CRS + PN ) ) + Max( ARS,DDR ) )", "choosing": "Max( ( ( CS / RCSe ) * Min( MUR ,CS ) ),Min( ( ( ( MLU / ( ( Max( CS,DS ) * RMSe ) * ( ( RMSe - MUC ) * RCSe ) ) ) - ( ( CS - MUC ) + RRSe ) ) - ( ( MUC * ( Max( ( RRSe * RMSe ),RCSe ) * Max( ( MUR * RCSe ),( CS / CS ) ) ) ) / ( MUC - MUC ) ) ) ,Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + ( AMS + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,( RRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( Min( Min( MUC ,RMSe ) ,DS ) * MLU ),MUM ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),( RRSe * CS ) ) - ( ( MUM + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( ACS / FirstVNF_Mem_Server ) ) - Min( ( CRS + ARS ) ,Min( Max( ACS,Max( ( Const + FirstVNF_CPU ),BR ) ) ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,( Max( ( RCSe + MUR ),Min( MUC ,( RCSe * ( DS * MLU ) ) ) ) / ( CS - Max( RRSe,Max( MUR,MLU ) ) ) ) ) * ( MUM - ( ( RCSe * CS ) / ( ( MUR / MUM ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Min( FirstVNF_Mem_Server ,( Max( FirstVNF_CPU_Server,PN ) / Min( FirstVNF_Mem ,ARS ) ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + MRS ) - Max( ( ( ( MRS + AMS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ),Max( Min( RRS ,MRS ),( CRS + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( CS - Max( MLU,( MLU * DS ) ) ) * ( MUR - CS ) ) ,( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,AMS ) ,AMS ) + Min( DDR ,RRS ) )", "choosing": "( Min( ( CS * MUR ) ,Min( MUM ,DS ) ) / ( ( RMSe * MUR ) - ( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / BR ) + ( ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,Const ) ) - ( ( CRS / FirstVNF_RAM ) + ( CRS + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( MRS / MRS ) ) ) ) ) )", "choosing": "Max( Min( Max( MLU,( RRSe * ( MUM - MUR ) ) ) ,RRSe ),( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - MRS ) / Const ) ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM * ( MLU + DS ) ) - ( ( RCSe + RRSe ) + RRSe ) ) * ( Max( ( RMSe + ( RRSe * ( MUM / CS ) ) ),RCSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + ( ( RRS - ( MDR + MRS ) ) - FirstVNF_RAM_Server ) ) + ARS ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUR / CS ),Max( RMSe,Max( ( CS / ( MUC * ( DS - MUC ) ) ),Max( ( MUC * DS ),RRSe ) ) ) ) ) * ( RRSe - ( Max( MUR,MUR ) * ( MLU - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ARS,CRS ),( ( Max( BR,( ACS * RRS ) ) / ( Const / CRS ) ) / Max( RRS,ARS ) ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( ( ( ( ( RRS / MRS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) * Const ) + DDR ) / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( Max( ( RCSe + MUC ),Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUM + RRSe ) ,( MUC * CS ) ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( Max( PN,CRS ) - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,DDR ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MUM / MLU ) ,Max( RCSe,DS ) ),Min( Max( MUR,MUC ) ,Max( RRSe,MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( DS + ( ( Min( ( DS - RCSe ) ,MUC ) * ( ( ( RRSe / MUC ) + MUM ) * MLU ) ) - ( RCSe - ( MUM / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Max( Const,MRS ) ) + ARS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,CS ),Max( RMSe,( ( ( MUC / MLU ) / ( Min( DS ,CS ) - Max( ( RMSe - RRSe ),CS ) ) ) / ( MUR * Max( MUM,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,DDR ) - ( ( ARS * FirstVNF_RAM ) / ( ( Const * AMS ) / ( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( Max( ( DS / RRSe ),( RCSe + MUC ) ) - ( ( ( CS - DS ) / RMSe ) - ( DS * CS ) ) ),Min( Max( DS,MUR ) ,( RRSe - MUR ) ) ) ,( Min( CS ,MUC ) * Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ACS ) ,( FirstVNF_RAM / ( FirstVNF_RAM_Server + ( Max( DDR,FirstVNF_RAM ) * AMS ) ) ) )", "choosing": "( ( Max( RCSe,( ( RCSe + ( Max( ( RCSe + DS ),MLU ) - ( Min( MUR ,CS ) / RMSe ) ) ) - ( MLU / MUM ) ) ) * MUM ) * ( Max( ( Max( RCSe,RMSe ) + DS ),RRSe ) / ( RCSe * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU_Server ,DDR ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( ACS / FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe / Min( RMSe ,MLU ) ) + MUR ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Min( ( ARS / FirstVNF_RAM_Server ) ,AMS ) ) + ( ( FirstVNF_Mem_Server - ARS ) - DDR ) )", "choosing": "( ( MUR - RCSe ) + ( ( ( DS - RRSe ) - ( RMSe + ( ( DS / ( Max( RRSe,MUR ) - DS ) ) + ( MUM / DS ) ) ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,Max( Max( ACS,DDR ),FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,Max( ( Max( RMSe,( Min( MUM ,DS ) / RMSe ) ) / CS ),Max( CS,CS ) ) ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( RRS + PN ) ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) / Min( BR ,CRS ) ) )", "choosing": "( ( ( MUM * MLU ) * Max( Max( RCSe,MUM ),Min( RCSe ,RCSe ) ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Const ) - ( ( Max( ACS,( ( ACS / MDR ) - FirstVNF_Mem ) ) * PN ) - Min( BR ,PN ) ) )", "choosing": "Max( ( MUM * ( MUR + Min( ( ( ( ( MUM * MUC ) + RCSe ) + Max( ( MUM + MUR ),RCSe ) ) * MUM ) ,MUC ) ) ),( MUM * Min( MUM ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Const ) / DDR ) / FirstVNF_CPU ) + ( DDR / RRS ) )", "choosing": "( ( DS + ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - Max( MUR,MLU ) ) ) + ( DS / ( Max( RRSe,MLU ) / DS ) ) ) ) ) ) + ( MUR - Max( MUM,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( ARS ,BR ) ,( DDR - ACS ) ) - Min( Max( PN,MRS ) ,( Const * MRS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,( ACS - ( FirstVNF_CPU * AMS ) ) ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( Min( ( RRSe / Min( RMSe ,MLU ) ) ,RMSe ) * Max( ( ( MLU + ( CS * RMSe ) ) + ( ( CS / MUC ) + ( RCSe + CS ) ) ),( Max( MUM,( RRSe / CS ) ) * DS ) ) ) * RRSe ) ) + ( ( ( ( Max( RMSe,CS ) / RMSe ) + RCSe ) - ( MUM + RCSe ) ) - Max( ( DS / RRSe ),Max( RRSe,Min( RCSe ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( Min( Const ,CRS ) / ( CRS / ( Max( MDR,ACS ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( Max( ( MLU - Min( DS ,DS ) ),RRSe ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( AMS + ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Max( ( Const / Max( FirstVNF_CPU,RRS ) ),DDR ) ) ) ) )", "choosing": "Max( Min( ( MLU - ( RRSe - ( DS / ( MUC / MUM ) ) ) ) ,MLU ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( Max( ( ( FirstVNF_CPU_Server / Min( FirstVNF_CPU ,RRS ) ) * FirstVNF_Mem ),FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ACS ,ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( ( ( Max( CS,CS ) + MLU ) / MUR ) / MLU ) ,( CS * RCSe ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,ARS ) + ( FirstVNF_Mem - PN ) ) ,( ( BR + MDR ) * Min( ( Min( Min( ARS ,BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( FirstVNF_RAM * ARS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,ACS ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * CRS ) ) ) ) ) ) - Min( ( ( RRS - RRS ) / Min( PN ,MDR ) ) ,( Const + DDR ) ) )", "choosing": "Max( ( DS + ( MUC - ( MUM - ( DS + MLU ) ) ) ),( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM - FirstVNF_CPU ) ),Min( FirstVNF_CPU ,( Max( ( RRS - Const ),FirstVNF_CPU ) - ARS ) ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( AMS,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( RCSe / ( ( ( ( Max( MUR,MUC ) - ( RMSe + RCSe ) ) + MLU ) / RMSe ) - DS ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,MRS ) - ( Max( CRS,FirstVNF_CPU ) / Max( ( Const * MRS ),ACS ) ) ) ,( ACS - ( BR / PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,MRS ) - ( Max( ( DDR + FirstVNF_Mem ),FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) / ( DDR / ( CRS * MDR ) ) )", "choosing": "Max( ( ( RRSe * RRSe ) + ( MUC * RMSe ) ),( ( ( CS - RMSe ) + MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( ACS - ( ( BR / ARS ) - Max( ( Min( FirstVNF_CPU ,ARS ) - MDR ),Min( FirstVNF_RAM ,RRS ) ) ) ) )", "choosing": "( ( ( ( MUR + RCSe ) - Max( Min( DS ,( ( ( MUM - MUC ) - CS ) - MLU ) ),DS ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( ( ( MLU + RMSe ) - ( MUM + RCSe ) ) - Max( ( DS / RMSe ),Min( RRSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( RRS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + Min( ( FirstVNF_RAM + PN ) ,ARS ) )", "choosing": "Min( Max( ( ( RMSe / MUM ) * RCSe ),CS ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) * ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR / BR ) ,DDR ) - ( AMS * ARS ) )", "choosing": "( ( Max( CS,CS ) + ( ( ( RCSe - MUC ) - DS ) / ( MUC * ( ( Max( ( RRSe - MUC ),Max( MLU,RCSe ) ) + ( ( DS - CS ) * MUR ) ) - RMSe ) ) ) ) / ( DS + ( Max( RCSe,DS ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "Min( ( MUM + DS ) ,( MLU * ( MLU - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ARS ) * FirstVNF_RAM_Server ) - ( MDR + ( FirstVNF_RAM_Server * Const ) ) )", "choosing": "Max( ( MUC + ( ( ( Max( RCSe,Max( CS,CS ) ) - Max( MUC,MUR ) ) + MLU ) - DS ) ),( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + Min( BR ,CRS ) )", "choosing": "( Max( ( MUR / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) + ( ( ( MDR * ( Max( FirstVNF_CPU,BR ) * FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,CS ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) / ( ( MUC / MUM ) + RMSe ) ) ) ) / ( ( Max( MUM,MUR ) - Max( MUR,RRSe ) ) / ( Min( MLU ,MUM ) / Max( MLU,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - ( RMSe * MUR ) ) ) + ( DS / ( Max( RRSe,MLU ) / DS ) ) ) ) ) + DS ) + ( MUR - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( Min( ( MUM + DS ) ,( ( ( MUM - Min( CS ,RCSe ) ) - MUC ) * RMSe ) ),CS ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( AMS / PN ) ),DDR ) - ( CRS / FirstVNF_RAM_Server ) )", "choosing": "Max( Max( Min( ( Min( ( DS + RRSe ) ,MLU ) - MUC ) ,( Min( MUM ,MUC ) + ( MUM + CS ) ) ),RCSe ),( ( MUR + MUC ) * ( RMSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( RRS - DDR ) )", "choosing": "Max( Max( MUM,CS ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "Min( ( Min( ( ARS / BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RRSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - BR ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe - Min( ( RRSe * ( Max( MLU,RRSe ) / RRSe ) ) ,MUM ) ),( Max( Min( MUM ,MUC ),RMSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( MUM + ( RCSe / CS ) ) ,( MLU * RMSe ) ) )", "obj1": 0.7887029288702929, "obj2": 0.1316996741632017}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( MUR + RMSe ) ) ) ) ) * MUM ) )", "obj1": 0.8849372384937239, "obj2": 0.0508329997464804}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - ARS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),( ( ARS - FirstVNF_Mem ) - Min( PN ,AMS ) ) ) / ( Min( FirstVNF_RAM ,Const ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( MUM / ( CS * Min( ( MUR - CS ) ,DS ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.8284518828451883, "obj2": 0.08932050862091345}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( ( ARS - Min( ARS ,MRS ) ) / Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( ( BR * Min( Max( Const,DDR ) ,FirstVNF_RAM_Server ) ) * ARS ) - ( FirstVNF_Mem + Const ) ) ) )", "choosing": "( Max( MUR,RCSe ) + ( ( ( DS - RRSe ) - ( RMSe + ( ( DS / ( Max( RRSe,MLU ) / ( RMSe + RRSe ) ) ) + ( MUM / ( Min( MLU ,CS ) - MUC ) ) ) ) ) + DS ) )", "obj1": 0.9476987447698745, "obj2": 0.039769828393727426}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( RRSe ,Max( DS,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.23249175252309126}, {"determining": "( Max( ( ( FirstVNF_CPU / Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( ( CRS - Const ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( RCSe,MUM ) - ( MUM * ( ( DS / MUM ) - ( RRSe - ( ( MLU + CS ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( DS - Min( MUC ,DS ) ) ) ) ) ) ) )", "obj1": 0.7531380753138075, "obj2": 0.13802381538717823}, {"determining": "( ( MDR / ( MRS - FirstVNF_RAM ) ) - ( FirstVNF_RAM + ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / Max( Max( BR,FirstVNF_RAM_Server ),PN ) ) ) ) )", "choosing": "( ( ( ( ( ( MUR - Min( MUM ,DS ) ) / MUR ) / RMSe ) - MUM ) + RRSe ) * ( ( DS + DS ) - MLU ) )", "obj1": 0.7301255230125523, "obj2": 0.1556338865419399}, {"determining": "( Min( ( MDR - MRS ) ,( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUC,CS ) / MUM ) * ( RMSe + RMSe ) )", "obj1": 0.7071129707112971, "obj2": 0.16790652145893775}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "Max( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,ARS ) ) ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ( ( Max( ARS,DDR ) + ACS ) / FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RCSe * MLU ) * ( RMSe - MUR ) ) ,( RCSe - ( RCSe * MUR ) ) )", "obj1": 0.6652719665271967, "obj2": 0.24818486407707094}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( Min( MUM ,MUR ) - ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.8347280334728033, "obj2": 0.08418353298291602}, {"determining": "( Max( ( ( ( ( ACS + MRS ) * ( PN + ( DDR * PN ) ) ) + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( ARS * Const ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( ( ( MUC / MLU ) * ( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( Max( ( RRSe - DS ),MUR ),MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8472803347280334, "obj2": 0.06813394999846897}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.8661087866108786, "obj2": 0.06352115893960114}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( ARS - CRS ) + ( DDR * DDR ) ) - ( CRS - FirstVNF_RAM_Server ) ) + MRS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUM ) ,( MLU * RMSe ) )", "obj1": 0.9497907949790795, "obj2": 0.022059458957254148}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 0.6150627615062761, "obj2": 0.2671910127456893}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( MDR / MRS ),( ( AMS / FirstVNF_CPU_Server ) * ( BR / FirstVNF_CPU ) ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( RMSe,MUR ) ,( Max( ( RMSe * RCSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.009038141569374205}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 0.9665271966527197, "obj2": 0.014367843167592757}, {"determining": "( ( Min( PN ,Max( FirstVNF_CPU_Server,DDR ) ) / Max( BR,FirstVNF_CPU ) ) / ( Max( MDR,FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( RRSe / ( RRSe - MUC ) ) + Min( ( MLU - RCSe ) ,( MUC - MUC ) ) )", "obj1": 0.6464435146443515, "obj2": 0.2523472239121908}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( MLU * RMSe ) )", "obj1": 0.9560669456066946, "obj2": 0.018737915039731694}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( MRS + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) ) ,DS ) ) / ( ( Max( Max( MUM,CS ),( MUM * RRSe ) ) * MUR ) - ( RRSe * MLU ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2562183121890526}, {"determining": "( ( Min( PN ,FirstVNF_RAM_Server ) / Max( BR,FirstVNF_CPU ) ) / ( Max( MDR,FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( RRSe - MUC ) ) + Min( ( MLU - RCSe ) ,( MUC - MUC ) ) )", "obj1": 0.6255230125523012, "obj2": 0.2611903792768235}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) ) ,DS ) ) / ( ( RMSe * MUR ) - ( RRSe * MLU ) ) )", "obj1": 0.9895397489539749, "obj2": 0.004109119714957308}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( FirstVNF_RAM_Server,CRS ) - BR ) )", "choosing": "( MUC * ( ( RCSe - RMSe ) / ( CS + MUM ) ) )", "obj1": 0.6317991631799164, "obj2": 0.26095123543294624}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server + Min( DDR ,Max( ( MRS / FirstVNF_RAM_Server ),ACS ) ) ) / FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( MDR * ARS ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( CS,MLU ) + RCSe ) * Min( RRSe ,( ( Max( ( Min( RMSe ,CS ) - ( MUM - MUM ) ),( Max( RRSe,MLU ) - Min( CS ,MUM ) ) ) - ( DS * Max( RCSe,RMSe ) ) ) * CS ) ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + ( MUR + ( MUC - RMSe ) ) ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.06763870147299872}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) ) )", "obj1": 0.8640167364016736, "obj2": 0.06660944795902127}, {"determining": "( FirstVNF_CPU - ( ( ( Min( ( FirstVNF_Mem * Const ) ,AMS ) * AMS ) / ( Max( Min( BR ,( Max( FirstVNF_RAM_Server,PN ) - BR ) ),CRS ) * CRS ) ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "Min( Max( ( DS * ( ( CS * RRSe ) + RCSe ) ),Min( Min( DS ,MUR ) ,( RRSe - CS ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + ( MUC - RCSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002550482499746131}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Max( ( PN / FirstVNF_CPU_Server ),( MDR + BR ) ) )", "choosing": "( ( Min( MUM ,MUR ) - MUM ) + Max( ( MLU + ( MLU * RMSe ) ),RMSe ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - FirstVNF_RAM ) - ( FirstVNF_CPU * Max( RRS,AMS ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( AMS ,Min( ARS ,RRS ) ) ) * ( FirstVNF_CPU + Const ) )", "choosing": "( Max( Max( ( Max( ( ( ( MLU * MUM ) / RRSe ) / ( DS / CS ) ),( Min( MUC ,( RRSe + RRSe ) ) / ( RRSe - MUC ) ) ) / MUC ),DS ),( RMSe + MLU ) ) / ( ( MLU + ( MUM - MLU ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Max( BR,CRS ) ) / ( FirstVNF_CPU_Server * CRS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS - Max( RRSe,( ( ( MUR / DS ) - RCSe ) * RCSe ) ) ) ) * Max( Max( MUM,CS ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * Max( ( PN * ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - MDR ) ) / Max( FirstVNF_Mem_Server,Const ) ) ),MDR ) ) ) - ( MRS - MRS ) )", "choosing": "( ( ( RRSe + RRSe ) - DS ) + ( RMSe - ( DS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( DDR + ( BR + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC / MUM ),Min( RMSe ,CS ) ) + ( Max( RCSe,( ( ( Max( RCSe,RMSe ) + RRSe ) * ( ( ( RMSe * MLU ) * MUM ) * Min( Max( RCSe,MUC ) ,MUM ) ) ) - Max( CS,DS ) ) ) / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( ( CRS + FirstVNF_CPU ) ,( FirstVNF_CPU_Server + BR ) ) )", "choosing": "( ( MUR - RCSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - DDR ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( CS + RRSe ) * Max( MLU,Max( MUR,( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MDR * MRS ) ,( ( Const - MDR ) / ( ( MDR * ( FirstVNF_Mem_Server + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * RRSe ) / Min( ( RCSe + Max( RMSe,MUR ) ) ,( MUM + MUM ) ) ),( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem ,MDR ) + Min( AMS ,AMS ) ) ,( ( ARS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + Min( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + MRS ) / DDR ) ) ) ) ,RRS ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( RCSe - RRSe ) / ( CS / MLU ) ) ,( RRSe + ( RRSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - Max( FirstVNF_Mem_Server,RRS ) ) - ( ( FirstVNF_RAM / Max( Min( PN ,Const ),( MRS * ACS ) ) ) * ( MRS / PN ) ) ),Min( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / DS ) ) - ( ( MUR * CS ) / ( MLU + Max( ( ( ( MUM - MUC ) / MUR ) / ( MUM * DS ) ),DS ) ) ) ) * ( ( Min( MUC ,RRSe ) - Max( RCSe,RMSe ) ) - ( Max( MLU,RCSe ) * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + PN ) - ( Max( ( PN - ARS ),DDR ) * ACS ) )", "choosing": "Max( Min( ( MUM - RCSe ) ,( Max( MLU,( RRSe - RCSe ) ) - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( ( CRS * MDR ) - Min( AMS ,( RRS * ARS ) ) ) ) - ( Max( FirstVNF_CPU,AMS ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,( CS * RMSe ) ) + Max( ( ( RRSe - DS ) * MLU ),Min( RCSe ,MUC ) ) ) * ( CS - Max( MUM,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( BR + FirstVNF_Mem ),( ( FirstVNF_CPU * BR ) - Min( Const ,FirstVNF_CPU ) ) ) ,( ( ( ( Min( PN ,DDR ) * MRS ) * ( FirstVNF_RAM / ( FirstVNF_CPU / Max( BR,ACS ) ) ) ) / ARS ) * MDR ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( Const,Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "Max( Max( MUC,( MLU + RCSe ) ),( Max( ( ( DS + ( Max( ( MUC / RMSe ),Min( MUM ,MLU ) ) / RMSe ) ) - ( RCSe * Max( ( RMSe / MUR ),MLU ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( CRS + PN ) ) + Max( ARS,DDR ) )", "choosing": "Max( ( ( CS / RCSe ) * Min( MUR ,CS ) ),Min( ( ( ( MLU / ( ( Max( CS,DS ) * RMSe ) * ( ( RMSe - MUC ) * RCSe ) ) ) - ( ( CS - MUC ) + RRSe ) ) - ( ( MUC * ( Max( ( RRSe * RMSe ),RCSe ) * Max( ( MUR * RCSe ),( CS / CS ) ) ) ) / ( MUC - MUC ) ) ) ,Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + ( AMS + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,( RRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( Min( Min( MUC ,RMSe ) ,DS ) * MLU ),MUM ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),( RRSe * CS ) ) - ( ( MUM + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( ACS / FirstVNF_Mem_Server ) ) - Min( ( CRS + ARS ) ,Min( Max( ACS,Max( ( Const + FirstVNF_CPU ),BR ) ) ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,( Max( ( RCSe + MUR ),Min( MUC ,( RCSe * ( DS * MLU ) ) ) ) / ( CS - Max( RRSe,Max( MUR,MLU ) ) ) ) ) * ( MUM - ( ( RCSe * CS ) / ( ( MUR / MUM ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Min( FirstVNF_Mem_Server ,( Max( FirstVNF_CPU_Server,PN ) / Min( FirstVNF_Mem ,ARS ) ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + MRS ) - Max( ( ( ( MRS + AMS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ),Max( Min( RRS ,MRS ),( CRS + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( CS - Max( MLU,( MLU * DS ) ) ) * ( MUR - CS ) ) ,( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,AMS ) ,AMS ) + Min( DDR ,RRS ) )", "choosing": "( Min( ( CS * MUR ) ,Min( MUM ,DS ) ) / ( ( RMSe * MUR ) - ( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / BR ) + ( ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,Const ) ) - ( ( CRS / FirstVNF_RAM ) + ( CRS + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( MRS / MRS ) ) ) ) ) )", "choosing": "Max( Min( Max( MLU,( RRSe * ( MUM - MUR ) ) ) ,RRSe ),( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - MRS ) / Const ) ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM * ( MLU + DS ) ) - ( ( RCSe + RRSe ) + RRSe ) ) * ( Max( ( RMSe + ( RRSe * ( MUM / CS ) ) ),RCSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + ( ( RRS - ( MDR + MRS ) ) - FirstVNF_RAM_Server ) ) + ARS ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUR / CS ),Max( RMSe,Max( ( CS / ( MUC * ( DS - MUC ) ) ),Max( ( MUC * DS ),RRSe ) ) ) ) ) * ( RRSe - ( Max( MUR,MUR ) * ( MLU - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ARS,CRS ),( ( Max( BR,( ACS * RRS ) ) / ( Const / CRS ) ) / Max( RRS,ARS ) ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( ( ( ( ( RRS / MRS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) * Const ) + DDR ) / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( Max( ( RCSe + MUC ),Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUM + RRSe ) ,( MUC * CS ) ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( Max( PN,CRS ) - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,DDR ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MUM / MLU ) ,Max( RCSe,DS ) ),Min( Max( MUR,MUC ) ,Max( RRSe,MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( DS + ( ( Min( ( DS - RCSe ) ,MUC ) * ( ( ( RRSe / MUC ) + MUM ) * MLU ) ) - ( RCSe - ( MUM / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Max( Const,MRS ) ) + ARS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,CS ),Max( RMSe,( ( ( MUC / MLU ) / ( Min( DS ,CS ) - Max( ( RMSe - RRSe ),CS ) ) ) / ( MUR * Max( MUM,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,DDR ) - ( ( ARS * FirstVNF_RAM ) / ( ( Const * AMS ) / ( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( Max( ( DS / RRSe ),( RCSe + MUC ) ) - ( ( ( CS - DS ) / RMSe ) - ( DS * CS ) ) ),Min( Max( DS,MUR ) ,( RRSe - MUR ) ) ) ,( Min( CS ,MUC ) * Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ACS ) ,( FirstVNF_RAM / ( FirstVNF_RAM_Server + ( Max( DDR,FirstVNF_RAM ) * AMS ) ) ) )", "choosing": "( ( Max( RCSe,( ( RCSe + ( Max( ( RCSe + DS ),MLU ) - ( Min( MUR ,CS ) / RMSe ) ) ) - ( MLU / MUM ) ) ) * MUM ) * ( Max( ( Max( RCSe,RMSe ) + DS ),RRSe ) / ( RCSe * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU_Server ,DDR ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( ACS / FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe / Min( RMSe ,MLU ) ) + MUR ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Min( ( ARS / FirstVNF_RAM_Server ) ,AMS ) ) + ( ( FirstVNF_Mem_Server - ARS ) - DDR ) )", "choosing": "( ( MUR - RCSe ) + ( ( ( DS - RRSe ) - ( RMSe + ( ( DS / ( Max( RRSe,MUR ) - DS ) ) + ( MUM / DS ) ) ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,Max( Max( ACS,DDR ),FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,Max( ( Max( RMSe,( Min( MUM ,DS ) / RMSe ) ) / CS ),Max( CS,CS ) ) ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( RRS + PN ) ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) / Min( BR ,CRS ) ) )", "choosing": "( ( ( MUM * MLU ) * Max( Max( RCSe,MUM ),Min( RCSe ,RCSe ) ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Const ) - ( ( Max( ACS,( ( ACS / MDR ) - FirstVNF_Mem ) ) * PN ) - Min( BR ,PN ) ) )", "choosing": "Max( ( MUM * ( MUR + Min( ( ( ( ( MUM * MUC ) + RCSe ) + Max( ( MUM + MUR ),RCSe ) ) * MUM ) ,MUC ) ) ),( MUM * Min( MUM ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Const ) / DDR ) / FirstVNF_CPU ) + ( DDR / RRS ) )", "choosing": "( ( DS + ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - Max( MUR,MLU ) ) ) + ( DS / ( Max( RRSe,MLU ) / DS ) ) ) ) ) ) + ( MUR - Max( MUM,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( ARS ,BR ) ,( DDR - ACS ) ) - Min( Max( PN,MRS ) ,( Const * MRS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,( ACS - ( FirstVNF_CPU * AMS ) ) ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( Min( ( RRSe / Min( RMSe ,MLU ) ) ,RMSe ) * Max( ( ( MLU + ( CS * RMSe ) ) + ( ( CS / MUC ) + ( RCSe + CS ) ) ),( Max( MUM,( RRSe / CS ) ) * DS ) ) ) * RRSe ) ) + ( ( ( ( Max( RMSe,CS ) / RMSe ) + RCSe ) - ( MUM + RCSe ) ) - Max( ( DS / RRSe ),Max( RRSe,Min( RCSe ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( Min( Const ,CRS ) / ( CRS / ( Max( MDR,ACS ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( Max( ( MLU - Min( DS ,DS ) ),RRSe ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( AMS + ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Max( ( Const / Max( FirstVNF_CPU,RRS ) ),DDR ) ) ) ) )", "choosing": "Max( Min( ( MLU - ( RRSe - ( DS / ( MUC / MUM ) ) ) ) ,MLU ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( Max( ( ( FirstVNF_CPU_Server / Min( FirstVNF_CPU ,RRS ) ) * FirstVNF_Mem ),FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ACS ,ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( ( ( Max( CS,CS ) + MLU ) / MUR ) / MLU ) ,( CS * RCSe ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,ARS ) + ( FirstVNF_Mem - PN ) ) ,( ( BR + MDR ) * Min( ( Min( Min( ARS ,BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( FirstVNF_RAM * ARS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,ACS ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * CRS ) ) ) ) ) ) - Min( ( ( RRS - RRS ) / Min( PN ,MDR ) ) ,( Const + DDR ) ) )", "choosing": "Max( ( DS + ( MUC - ( MUM - ( DS + MLU ) ) ) ),( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM - FirstVNF_CPU ) ),Min( FirstVNF_CPU ,( Max( ( RRS - Const ),FirstVNF_CPU ) - ARS ) ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( AMS,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( RCSe / ( ( ( ( Max( MUR,MUC ) - ( RMSe + RCSe ) ) + MLU ) / RMSe ) - DS ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,MRS ) - ( Max( CRS,FirstVNF_CPU ) / Max( ( Const * MRS ),ACS ) ) ) ,( ACS - ( BR / PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,MRS ) - ( Max( ( DDR + FirstVNF_Mem ),FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) / ( DDR / ( CRS * MDR ) ) )", "choosing": "Max( ( ( RRSe * RRSe ) + ( MUC * RMSe ) ),( ( ( CS - RMSe ) + MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( ACS - ( ( BR / ARS ) - Max( ( Min( FirstVNF_CPU ,ARS ) - MDR ),Min( FirstVNF_RAM ,RRS ) ) ) ) )", "choosing": "( ( ( ( MUR + RCSe ) - Max( Min( DS ,( ( ( MUM - MUC ) - CS ) - MLU ) ),DS ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( ( ( MLU + RMSe ) - ( MUM + RCSe ) ) - Max( ( DS / RMSe ),Min( RRSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( RRS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + Min( ( FirstVNF_RAM + PN ) ,ARS ) )", "choosing": "Min( Max( ( ( RMSe / MUM ) * RCSe ),CS ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) * ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR / BR ) ,DDR ) - ( AMS * ARS ) )", "choosing": "( ( Max( CS,CS ) + ( ( ( RCSe - MUC ) - DS ) / ( MUC * ( ( Max( ( RRSe - MUC ),Max( MLU,RCSe ) ) + ( ( DS - CS ) * MUR ) ) - RMSe ) ) ) ) / ( DS + ( Max( RCSe,DS ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "Min( ( MUM + DS ) ,( MLU * ( MLU - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ARS ) * FirstVNF_RAM_Server ) - ( MDR + ( FirstVNF_RAM_Server * Const ) ) )", "choosing": "Max( ( MUC + ( ( ( Max( RCSe,Max( CS,CS ) ) - Max( MUC,MUR ) ) + MLU ) - DS ) ),( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + Min( BR ,CRS ) )", "choosing": "( Max( ( MUR / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) + ( ( ( MDR * ( Max( FirstVNF_CPU,BR ) * FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,CS ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) / ( ( MUC / MUM ) + RMSe ) ) ) ) / ( ( Max( MUM,MUR ) - Max( MUR,RRSe ) ) / ( Min( MLU ,MUM ) / Max( MLU,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - ( RMSe * MUR ) ) ) + ( DS / ( Max( RRSe,MLU ) / DS ) ) ) ) ) + DS ) + ( MUR - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( Min( ( MUM + DS ) ,( ( ( MUM - Min( CS ,RCSe ) ) - MUC ) * RMSe ) ),CS ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( AMS / PN ) ),DDR ) - ( CRS / FirstVNF_RAM_Server ) )", "choosing": "Max( Max( Min( ( Min( ( DS + RRSe ) ,MLU ) - MUC ) ,( Min( MUM ,MUC ) + ( MUM + CS ) ) ),RCSe ),( ( MUR + MUC ) * ( RMSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( RRS - DDR ) )", "choosing": "Max( Max( MUM,CS ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( BR - Min( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + Max( Max( ( PN - BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + ( Min( ( Min( RCSe ,Max( ( RRSe * ( DS * RMSe ) ),MUC ) ) - ( RRSe + RCSe ) ) ,RCSe ) - Max( ( RRSe * Min( Max( RMSe,( RCSe * Min( DS ,RCSe ) ) ) ,RRSe ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RRSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( ( Const + ACS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( Min( FirstVNF_RAM_Server ,ACS ) - ( CRS / FirstVNF_RAM ) ) + ( Min( Const ,( ( AMS / ( CRS / Min( DDR ,FirstVNF_CPU ) ) ) * ( PN / CRS ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MUM ,RRSe ) * ( ( RCSe - DS ) * ( MUR + RMSe ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,RCSe ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.7447698744769874, "obj2": 0.13393942608838041}, {"determining": "( ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) / Max( Min( Const ,Max( BR,Max( FirstVNF_Mem_Server,BR ) ) ),Max( FirstVNF_RAM,DDR ) ) )", "choosing": "( ( Min( MUM ,MUR ) - RCSe ) + Max( ( ( Min( Min( ( DS - MLU ) ,Min( RCSe ,( MUC * MUC ) ) ) ,CS ) - MUC ) + MUM ),RMSe ) )", "obj1": 0.7782426778242678, "obj2": 0.10813023959416185}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( MUR + RMSe ) ) ) ) ) * MUM ) )", "obj1": 0.8849372384937239, "obj2": 0.0508329997464804}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ( FirstVNF_RAM - FirstVNF_CPU ) ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( CS + ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - ( RMSe * MUR ) ) ) + ( DS / ( ( RCSe / DS ) + MUR ) ) ) ) ) ) + ( MUR - Max( MUM,( MUC - RCSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.21972237838191602}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( ( MDR / ( MRS - FirstVNF_RAM ) ) - ( FirstVNF_RAM + ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / Max( Max( BR,FirstVNF_RAM_Server ),PN ) ) ) ) )", "choosing": "( ( ( ( ( ( MUR - Min( MUM ,DS ) ) / MUR ) / RMSe ) - MUM ) + RRSe ) * ( ( DS + DS ) - MLU ) )", "obj1": 0.7301255230125523, "obj2": 0.1556338865419399}, {"determining": "( ( ARS - Min( ARS ,MRS ) ) / Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( ARS * ARS ) - ( FirstVNF_Mem + Const ) ) ) )", "choosing": "( ( Max( CS,CS ) + ( ( ( RCSe - MUC ) - DS ) / ( MUC * ( ( Max( ( RRSe - MUC ),Max( MLU,RCSe ) ) + DS ) - RMSe ) ) ) ) / ( DS - ( Max( RCSe,DS ) / DS ) ) )", "obj1": 0.9414225941422594, "obj2": 0.041371649213418946}, {"determining": "( Max( ( ( DDR - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( FirstVNF_CPU_Server * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( Min( CS ,Max( ( Max( Max( ( DS + Max( MUR,DS ) ),CS ),Min( RRSe ,RMSe ) ) - RMSe ),MUR ) ) ,( RCSe - ( RCSe * MUR ) ) )", "obj1": 0.805439330543933, "obj2": 0.09651210666777467}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ( FirstVNF_Mem_Server - Min( AMS ,RRS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( Const / ACS ) ) ) * ( ACS * ARS ) ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( ( RMSe * ( ( MUM / MLU ) * DS ) ) ,DS ) ) / ( Min( RMSe ,MUR ) - Max( RRSe,MLU ) ) )", "obj1": 0.6485355648535565, "obj2": 0.2384744796248617}, {"determining": "( Min( ( MDR - MRS ) ,( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUC,CS ) / MUM ) * ( RMSe + RMSe ) )", "obj1": 0.7071129707112971, "obj2": 0.16790652145893775}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - ARS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),( ( ARS - FirstVNF_Mem ) - Min( PN ,AMS ) ) ) / ( Min( FirstVNF_RAM ,Const ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( MUM / ( CS * Min( ( MUR - CS ) ,DS ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.8284518828451883, "obj2": 0.08932050862091345}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( AMS ,PN ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * Max( AMS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) ) ,DS ) ) / ( ( ( ( RCSe - RRSe ) - RMSe ) * ( MUR - RRSe ) ) - ( RRSe * MLU ) ) )", "obj1": 0.8347280334728033, "obj2": 0.08002611407038848}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( BR - ( BR - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) )", "choosing": "( RRSe * Max( ( RCSe - ( ( RMSe - ( ( RRSe + ( DS - CS ) ) / CS ) ) - RRSe ) ),Min( MLU ,MUM ) ) )", "obj1": 0.6213389121338913, "obj2": 0.26513698437414773}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.8661087866108786, "obj2": 0.06352115893960114}, {"determining": "( Max( ( ( ( ( ACS + MRS ) * ( PN + ( DDR * PN ) ) ) + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( ARS * Const ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( ( ( MUC / MLU ) * ( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( Max( ( RRSe - DS ),MUR ),MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8472803347280334, "obj2": 0.06813394999846897}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( ARS - CRS ) + ( DDR * DDR ) ) - ( CRS - FirstVNF_RAM_Server ) ) + MRS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUM ) ,( MLU * RMSe ) )", "obj1": 0.9497907949790795, "obj2": 0.022059458957254148}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 0.9665271966527197, "obj2": 0.014367843167592757}, {"determining": "( ( ARS - Min( ARS ,MRS ) ) / Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( ( BR * Min( Max( Const,DDR ) ,FirstVNF_RAM_Server ) ) * ARS ) - ( FirstVNF_Mem + Const ) ) ) )", "choosing": "( Max( MUR,RCSe ) + ( ( ( DS - RRSe ) - ( RMSe + ( ( DS / ( Max( RRSe,MLU ) / ( RMSe + RRSe ) ) ) + ( MUM / ( Min( MLU ,CS ) - MUC ) ) ) ) ) + DS ) )", "obj1": 0.9476987447698745, "obj2": 0.039769828393727426}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( MDR / MRS ),( ( AMS / FirstVNF_CPU_Server ) * ( BR / FirstVNF_CPU ) ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( RMSe,MUR ) ,( Max( ( RMSe * RCSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.009038141569374205}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 0.6150627615062761, "obj2": 0.2671910127456893}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( MLU * RMSe ) )", "obj1": 0.9560669456066946, "obj2": 0.018737915039731694}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server + Min( DDR ,Max( ( MRS / FirstVNF_RAM_Server ),ACS ) ) ) / FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( MDR * ARS ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( CS,MLU ) + RCSe ) * Min( RRSe ,( ( Max( ( Min( RMSe ,CS ) - ( MUM - MUM ) ),( Max( RRSe,MLU ) - Min( CS ,MUM ) ) ) - ( DS * Max( RCSe,RMSe ) ) ) * CS ) ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + ( MUR + ( MUC - RMSe ) ) ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.06763870147299872}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * RMSe ) - Max( RCSe,( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) ) ) )", "obj1": 0.8640167364016736, "obj2": 0.06660944795902127}, {"determining": "( FirstVNF_CPU - ( ( ( Min( ( FirstVNF_Mem * Const ) ,AMS ) * AMS ) / ( Max( Min( BR ,( Max( FirstVNF_RAM_Server,PN ) - BR ) ),CRS ) * CRS ) ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "Min( Max( ( DS * ( ( CS * RRSe ) + RCSe ) ),Min( Min( DS ,MUR ) ,( RRSe - CS ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + ( MUC - RCSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002550482499746131}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) ) ,DS ) ) / ( ( RMSe * MUR ) - ( RRSe * MLU ) ) )", "obj1": 0.9895397489539749, "obj2": 0.004109119714957308}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) ) ,DS ) ) / ( ( RMSe * MUR ) - ( RRSe * MLU ) ) )", "obj1": 0.9895397489539749, "obj2": 0.004109119714957308}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Max( ( PN / FirstVNF_CPU_Server ),( MDR + BR ) ) )", "choosing": "( ( Min( MUM ,MUR ) - MUM ) + Max( ( MLU + ( MLU * RMSe ) ),RMSe ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ARS - BR ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe - Min( ( RRSe * ( Max( MLU,RRSe ) / RRSe ) ) ,MUM ) ),( Max( Min( MUM ,MUC ),RMSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - FirstVNF_RAM ) - ( FirstVNF_CPU * Max( RRS,AMS ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( AMS ,Min( ARS ,RRS ) ) ) * ( FirstVNF_CPU + Const ) )", "choosing": "( Max( Max( ( Max( ( ( ( MLU * MUM ) / RRSe ) / ( DS / CS ) ),( Min( MUC ,( RRSe + RRSe ) ) / ( RRSe - MUC ) ) ) / MUC ),DS ),( RMSe + MLU ) ) / ( ( MLU + ( MUM - MLU ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Max( BR,CRS ) ) / ( FirstVNF_CPU_Server * CRS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS - Max( RRSe,( ( ( MUR / DS ) - RCSe ) * RCSe ) ) ) ) * Max( Max( MUM,CS ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * Max( ( PN * ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - MDR ) ) / Max( FirstVNF_Mem_Server,Const ) ) ),MDR ) ) ) - ( MRS - MRS ) )", "choosing": "( ( ( RRSe + RRSe ) - DS ) + ( RMSe - ( DS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( DDR + ( BR + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC / MUM ),Min( RMSe ,CS ) ) + ( Max( RCSe,( ( ( Max( RCSe,RMSe ) + RRSe ) * ( ( ( RMSe * MLU ) * MUM ) * Min( Max( RCSe,MUC ) ,MUM ) ) ) - Max( CS,DS ) ) ) / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( ( CRS + FirstVNF_CPU ) ,( FirstVNF_CPU_Server + BR ) ) )", "choosing": "( ( MUR - RCSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - DDR ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( CS + RRSe ) * Max( MLU,Max( MUR,( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MDR * MRS ) ,( ( Const - MDR ) / ( ( MDR * ( FirstVNF_Mem_Server + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * RRSe ) / Min( ( RCSe + Max( RMSe,MUR ) ) ,( MUM + MUM ) ) ),( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem ,MDR ) + Min( AMS ,AMS ) ) ,( ( ARS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + Min( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + MRS ) / DDR ) ) ) ) ,RRS ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( RCSe - RRSe ) / ( CS / MLU ) ) ,( RRSe + ( RRSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - Max( FirstVNF_Mem_Server,RRS ) ) - ( ( FirstVNF_RAM / Max( Min( PN ,Const ),( MRS * ACS ) ) ) * ( MRS / PN ) ) ),Min( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / DS ) ) - ( ( MUR * CS ) / ( MLU + Max( ( ( ( MUM - MUC ) / MUR ) / ( MUM * DS ) ),DS ) ) ) ) * ( ( Min( MUC ,RRSe ) - Max( RCSe,RMSe ) ) - ( Max( MLU,RCSe ) * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + PN ) - ( Max( ( PN - ARS ),DDR ) * ACS ) )", "choosing": "Max( Min( ( MUM - RCSe ) ,( Max( MLU,( RRSe - RCSe ) ) - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( ( CRS * MDR ) - Min( AMS ,( RRS * ARS ) ) ) ) - ( Max( FirstVNF_CPU,AMS ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,( CS * RMSe ) ) + Max( ( ( RRSe - DS ) * MLU ),Min( RCSe ,MUC ) ) ) * ( CS - Max( MUM,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( BR + FirstVNF_Mem ),( ( FirstVNF_CPU * BR ) - Min( Const ,FirstVNF_CPU ) ) ) ,( ( ( ( Min( PN ,DDR ) * MRS ) * ( FirstVNF_RAM / ( FirstVNF_CPU / Max( BR,ACS ) ) ) ) / ARS ) * MDR ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( Const,Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "Max( Max( MUC,( MLU + RCSe ) ),( Max( ( ( DS + ( Max( ( MUC / RMSe ),Min( MUM ,MLU ) ) / RMSe ) ) - ( RCSe * Max( ( RMSe / MUR ),MLU ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( CRS + PN ) ) + Max( ARS,DDR ) )", "choosing": "Max( ( ( CS / RCSe ) * Min( MUR ,CS ) ),Min( ( ( ( MLU / ( ( Max( CS,DS ) * RMSe ) * ( ( RMSe - MUC ) * RCSe ) ) ) - ( ( CS - MUC ) + RRSe ) ) - ( ( MUC * ( Max( ( RRSe * RMSe ),RCSe ) * Max( ( MUR * RCSe ),( CS / CS ) ) ) ) / ( MUC - MUC ) ) ) ,Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + ( AMS + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,( RRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( Min( Min( MUC ,RMSe ) ,DS ) * MLU ),MUM ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),( RRSe * CS ) ) - ( ( MUM + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( ACS / FirstVNF_Mem_Server ) ) - Min( ( CRS + ARS ) ,Min( Max( ACS,Max( ( Const + FirstVNF_CPU ),BR ) ) ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,( Max( ( RCSe + MUR ),Min( MUC ,( RCSe * ( DS * MLU ) ) ) ) / ( CS - Max( RRSe,Max( MUR,MLU ) ) ) ) ) * ( MUM - ( ( RCSe * CS ) / ( ( MUR / MUM ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Min( FirstVNF_Mem_Server ,( Max( FirstVNF_CPU_Server,PN ) / Min( FirstVNF_Mem ,ARS ) ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + MRS ) - Max( ( ( ( MRS + AMS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ),Max( Min( RRS ,MRS ),( CRS + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( CS - Max( MLU,( MLU * DS ) ) ) * ( MUR - CS ) ) ,( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,AMS ) ,AMS ) + Min( DDR ,RRS ) )", "choosing": "( Min( ( CS * MUR ) ,Min( MUM ,DS ) ) / ( ( RMSe * MUR ) - ( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / BR ) + ( ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,Const ) ) - ( ( CRS / FirstVNF_RAM ) + ( CRS + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( MRS / MRS ) ) ) ) ) )", "choosing": "Max( Min( Max( MLU,( RRSe * ( MUM - MUR ) ) ) ,RRSe ),( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - MRS ) / Const ) ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM * ( MLU + DS ) ) - ( ( RCSe + RRSe ) + RRSe ) ) * ( Max( ( RMSe + ( RRSe * ( MUM / CS ) ) ),RCSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + ( ( RRS - ( MDR + MRS ) ) - FirstVNF_RAM_Server ) ) + ARS ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUR / CS ),Max( RMSe,Max( ( CS / ( MUC * ( DS - MUC ) ) ),Max( ( MUC * DS ),RRSe ) ) ) ) ) * ( RRSe - ( Max( MUR,MUR ) * ( MLU - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ARS,CRS ),( ( Max( BR,( ACS * RRS ) ) / ( Const / CRS ) ) / Max( RRS,ARS ) ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( ( ( ( ( RRS / MRS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) * Const ) + DDR ) / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( Max( ( RCSe + MUC ),Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUM + RRSe ) ,( MUC * CS ) ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( Max( PN,CRS ) - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,DDR ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MUM / MLU ) ,Max( RCSe,DS ) ),Min( Max( MUR,MUC ) ,Max( RRSe,MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( DS + ( ( Min( ( DS - RCSe ) ,MUC ) * ( ( ( RRSe / MUC ) + MUM ) * MLU ) ) - ( RCSe - ( MUM / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Max( Const,MRS ) ) + ARS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,CS ),Max( RMSe,( ( ( MUC / MLU ) / ( Min( DS ,CS ) - Max( ( RMSe - RRSe ),CS ) ) ) / ( MUR * Max( MUM,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,DDR ) - ( ( ARS * FirstVNF_RAM ) / ( ( Const * AMS ) / ( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( Max( ( DS / RRSe ),( RCSe + MUC ) ) - ( ( ( CS - DS ) / RMSe ) - ( DS * CS ) ) ),Min( Max( DS,MUR ) ,( RRSe - MUR ) ) ) ,( Min( CS ,MUC ) * Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ACS ) ,( FirstVNF_RAM / ( FirstVNF_RAM_Server + ( Max( DDR,FirstVNF_RAM ) * AMS ) ) ) )", "choosing": "( ( Max( RCSe,( ( RCSe + ( Max( ( RCSe + DS ),MLU ) - ( Min( MUR ,CS ) / RMSe ) ) ) - ( MLU / MUM ) ) ) * MUM ) * ( Max( ( Max( RCSe,RMSe ) + DS ),RRSe ) / ( RCSe * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU_Server ,DDR ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( ACS / FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe / Min( RMSe ,MLU ) ) + MUR ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Min( ( ARS / FirstVNF_RAM_Server ) ,AMS ) ) + ( ( FirstVNF_Mem_Server - ARS ) - DDR ) )", "choosing": "( ( MUR - RCSe ) + ( ( ( DS - RRSe ) - ( RMSe + ( ( DS / ( Max( RRSe,MUR ) - DS ) ) + ( MUM / DS ) ) ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,Max( Max( ACS,DDR ),FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,Max( ( Max( RMSe,( Min( MUM ,DS ) / RMSe ) ) / CS ),Max( CS,CS ) ) ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( RRS + PN ) ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) / Min( BR ,CRS ) ) )", "choosing": "( ( ( MUM * MLU ) * Max( Max( RCSe,MUM ),Min( RCSe ,RCSe ) ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Const ) - ( ( Max( ACS,( ( ACS / MDR ) - FirstVNF_Mem ) ) * PN ) - Min( BR ,PN ) ) )", "choosing": "Max( ( MUM * ( MUR + Min( ( ( ( ( MUM * MUC ) + RCSe ) + Max( ( MUM + MUR ),RCSe ) ) * MUM ) ,MUC ) ) ),( MUM * Min( MUM ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Const ) / DDR ) / FirstVNF_CPU ) + ( DDR / RRS ) )", "choosing": "( ( DS + ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - Max( MUR,MLU ) ) ) + ( DS / ( Max( RRSe,MLU ) / DS ) ) ) ) ) ) + ( MUR - Max( MUM,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( ARS ,BR ) ,( DDR - ACS ) ) - Min( Max( PN,MRS ) ,( Const * MRS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,( ACS - ( FirstVNF_CPU * AMS ) ) ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( Min( ( RRSe / Min( RMSe ,MLU ) ) ,RMSe ) * Max( ( ( MLU + ( CS * RMSe ) ) + ( ( CS / MUC ) + ( RCSe + CS ) ) ),( Max( MUM,( RRSe / CS ) ) * DS ) ) ) * RRSe ) ) + ( ( ( ( Max( RMSe,CS ) / RMSe ) + RCSe ) - ( MUM + RCSe ) ) - Max( ( DS / RRSe ),Max( RRSe,Min( RCSe ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( Min( Const ,CRS ) / ( CRS / ( Max( MDR,ACS ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( Max( ( MLU - Min( DS ,DS ) ),RRSe ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( AMS + ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Max( ( Const / Max( FirstVNF_CPU,RRS ) ),DDR ) ) ) ) )", "choosing": "Max( Min( ( MLU - ( RRSe - ( DS / ( MUC / MUM ) ) ) ) ,MLU ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( Max( ( ( FirstVNF_CPU_Server / Min( FirstVNF_CPU ,RRS ) ) * FirstVNF_Mem ),FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ACS ,ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( ( ( Max( CS,CS ) + MLU ) / MUR ) / MLU ) ,( CS * RCSe ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,ARS ) + ( FirstVNF_Mem - PN ) ) ,( ( BR + MDR ) * Min( ( Min( Min( ARS ,BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( FirstVNF_RAM * ARS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,ACS ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * CRS ) ) ) ) ) ) - Min( ( ( RRS - RRS ) / Min( PN ,MDR ) ) ,( Const + DDR ) ) )", "choosing": "Max( ( DS + ( MUC - ( MUM - ( DS + MLU ) ) ) ),( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM - FirstVNF_CPU ) ),Min( FirstVNF_CPU ,( Max( ( RRS - Const ),FirstVNF_CPU ) - ARS ) ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( AMS,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( RCSe / ( ( ( ( Max( MUR,MUC ) - ( RMSe + RCSe ) ) + MLU ) / RMSe ) - DS ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,MRS ) - ( Max( CRS,FirstVNF_CPU ) / Max( ( Const * MRS ),ACS ) ) ) ,( ACS - ( BR / PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,MRS ) - ( Max( ( DDR + FirstVNF_Mem ),FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) / ( DDR / ( CRS * MDR ) ) )", "choosing": "Max( ( ( RRSe * RRSe ) + ( MUC * RMSe ) ),( ( ( CS - RMSe ) + MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( ACS - ( ( BR / ARS ) - Max( ( Min( FirstVNF_CPU ,ARS ) - MDR ),Min( FirstVNF_RAM ,RRS ) ) ) ) )", "choosing": "( ( ( ( MUR + RCSe ) - Max( Min( DS ,( ( ( MUM - MUC ) - CS ) - MLU ) ),DS ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( ( ( MLU + RMSe ) - ( MUM + RCSe ) ) - Max( ( DS / RMSe ),Min( RRSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( RRS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + Min( ( FirstVNF_RAM + PN ) ,ARS ) )", "choosing": "Min( Max( ( ( RMSe / MUM ) * RCSe ),CS ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) * ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR / BR ) ,DDR ) - ( AMS * ARS ) )", "choosing": "( ( Max( CS,CS ) + ( ( ( RCSe - MUC ) - DS ) / ( MUC * ( ( Max( ( RRSe - MUC ),Max( MLU,RCSe ) ) + ( ( DS - CS ) * MUR ) ) - RMSe ) ) ) ) / ( DS + ( Max( RCSe,DS ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "Min( ( MUM + DS ) ,( MLU * ( MLU - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ARS ) * FirstVNF_RAM_Server ) - ( MDR + ( FirstVNF_RAM_Server * Const ) ) )", "choosing": "Max( ( MUC + ( ( ( Max( RCSe,Max( CS,CS ) ) - Max( MUC,MUR ) ) + MLU ) - DS ) ),( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + Min( BR ,CRS ) )", "choosing": "( Max( ( MUR / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - PN ) + ( ( ( MDR * ( Max( FirstVNF_CPU,BR ) * FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,CS ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) / ( ( MUC / MUM ) + RMSe ) ) ) ) / ( ( Max( MUM,MUR ) - Max( MUR,RRSe ) ) / ( Min( MLU ,MUM ) / Max( MLU,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - ( RMSe * MUR ) ) ) + ( DS / ( Max( RRSe,MLU ) / DS ) ) ) ) ) + DS ) + ( MUR - RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + Max( Max( ( PN - BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + ( Min( ( Min( RCSe ,Max( ( RRSe * ( DS * RMSe ) ),MUC ) ) - ( RRSe + RCSe ) ) ,RCSe ) - Max( ( RRSe * Min( Max( RMSe,( RCSe * Min( DS ,RCSe ) ) ) ,RRSe ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( ( Const + ACS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( Min( FirstVNF_RAM_Server ,ACS ) - ( CRS / FirstVNF_RAM ) ) + ( Min( Const ,( ( AMS / ( CRS / Min( DDR ,FirstVNF_CPU ) ) ) * ( PN / CRS ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MUM ,RRSe ) * ( ( RCSe - DS ) * ( MUR + RMSe ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,RCSe ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.7447698744769874, "obj2": 0.13393942608838041}, {"determining": "( ( ARS - Min( ARS ,MRS ) ) / Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( ARS * ARS ) - ( FirstVNF_Mem + Const ) ) ) )", "choosing": "( ( Max( CS,CS ) + ( ( ( RCSe - MUC ) - DS ) / ( MUC * ( ( Max( ( RRSe - MUC ),Max( MLU,RCSe ) ) + DS ) - RMSe ) ) ) ) / ( DS - ( Max( RCSe,DS ) / DS ) ) )", "obj1": 0.9414225941422594, "obj2": 0.041371649213418946}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ( FirstVNF_RAM - FirstVNF_CPU ) ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( CS + ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - ( RMSe * MUR ) ) ) + ( DS / ( ( RCSe / DS ) + MUR ) ) ) ) ) ) + ( MUR - Max( MUM,( MUC - RCSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.21972237838191602}, {"determining": "( ( MDR / ( MRS - FirstVNF_RAM ) ) - ( FirstVNF_RAM + ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / Max( Max( BR,FirstVNF_RAM_Server ),PN ) ) ) ) )", "choosing": "( ( ( ( ( ( MUR - Min( MUM ,DS ) ) / MUR ) / RMSe ) - MUM ) + RRSe ) * ( ( DS + DS ) - MLU ) )", "obj1": 0.7301255230125523, "obj2": 0.1556338865419399}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7677824267782427, "obj2": 0.11904228908385242}, {"determining": "( Max( Min( ( FirstVNF_CPU + Const ) ,( ARS * ( MRS / FirstVNF_CPU_Server ) ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( Max( ( RCSe / RMSe ),RMSe ) / RMSe ) / RMSe ) ) ) ,Max( ( MUC - CS ),MLU ) ) )", "obj1": 0.895397489539749, "obj2": 0.04297672594991672}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ( FirstVNF_Mem_Server - Min( AMS ,RRS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( Const / ACS ) ) ) * ( ACS * ARS ) ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( ( RMSe * ( ( MUM / MLU ) * DS ) ) ,DS ) ) / ( Min( RMSe ,MUR ) - Max( RRSe,MLU ) ) )", "obj1": 0.6485355648535565, "obj2": 0.2384744796248617}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( MUR + RMSe ) ) ) ) ) * MUM ) )", "obj1": 0.8849372384937239, "obj2": 0.0508329997464804}, {"determining": "( Max( ( ( DDR - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( FirstVNF_CPU_Server * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( Min( CS ,Max( ( Max( Max( ( DS + Max( MUR,DS ) ),CS ),Min( RRSe ,RMSe ) ) - RMSe ),MUR ) ) ,( RCSe - ( RCSe * MUR ) ) )", "obj1": 0.805439330543933, "obj2": 0.09651210666777467}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - ARS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),( ( ARS - FirstVNF_Mem ) - Min( PN ,AMS ) ) ) / ( Min( FirstVNF_RAM ,Const ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( MUM / ( CS * Min( ( MUR - CS ) ,DS ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.8284518828451883, "obj2": 0.08932050862091345}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( AMS ,PN ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * Max( AMS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) ) ,DS ) ) / ( ( ( ( RCSe - RRSe ) - RMSe ) * ( MUR - RRSe ) ) - ( RRSe * MLU ) ) )", "obj1": 0.8347280334728033, "obj2": 0.08002611407038848}, {"determining": "( ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) / Max( Min( Const ,Max( BR,Max( FirstVNF_Mem_Server,BR ) ) ),Max( FirstVNF_RAM,DDR ) ) )", "choosing": "( ( Min( MUM ,MUR ) - RCSe ) + Max( ( ( Min( Min( ( DS - MLU ) ,Min( RCSe ,( MUC * MUC ) ) ) ,CS ) - MUC ) + MUM ),RMSe ) )", "obj1": 0.7782426778242678, "obj2": 0.10813023959416185}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.7907949790794979, "obj2": 0.10412513850965081}, {"determining": "( Max( ( ( ( ( ACS + MRS ) * ( PN + ( DDR * PN ) ) ) + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( ARS * Const ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( ( ( MUC / MLU ) * ( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( Max( ( RRSe - DS ),MUR ),MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8472803347280334, "obj2": 0.06813394999846897}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.8661087866108786, "obj2": 0.06352115893960114}, {"determining": "( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( MRS * Min( ACS ,Min( FirstVNF_CPU_Server ,( ( MDR / DDR ) * FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) ) * ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - Max( DS,( DS / DS ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / Max( ( ( RMSe - Max( ( Min( CS ,RMSe ) / Min( MUR ,MUM ) ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7154811715481172, "obj2": 0.1677388221411244}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( BR - ( BR - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) )", "choosing": "( RRSe * Max( ( RCSe - ( ( RMSe - ( ( RRSe + ( DS - CS ) ) / CS ) ) - RRSe ) ),Min( MLU ,MUM ) ) )", "obj1": 0.6213389121338913, "obj2": 0.26513698437414773}, {"determining": "( ( ( MDR * CRS ) + ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( AMS ,PN ) ) ) + MRS ) )", "choosing": "( ( RCSe * RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.023384866675943382}, {"determining": "( Min( ( MDR - MRS ) ,( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUC,CS ) / MUM ) * ( RMSe + RMSe ) )", "obj1": 0.7071129707112971, "obj2": 0.16790652145893775}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 0.6150627615062761, "obj2": 0.2671910127456893}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( MDR / MRS ),( ( AMS / FirstVNF_CPU_Server ) * ( BR / FirstVNF_CPU ) ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( RMSe,MUR ) ,( Max( ( RMSe * RCSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.009038141569374205}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server + Min( DDR ,Max( ( MRS / FirstVNF_RAM_Server ),ACS ) ) ) / FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( MDR * ARS ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( CS,MLU ) + RCSe ) * Min( RRSe ,( ( Max( ( Min( RMSe ,CS ) - ( MUM - MUM ) ),( Max( RRSe,MLU ) - Min( CS ,MUM ) ) ) - ( DS * Max( RCSe,RMSe ) ) ) * CS ) ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + ( MUR + ( MUC - RMSe ) ) ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.06763870147299872}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( MRS / PN ) ) ),( ( ( ( AMS * ( BR / RRS ) ) / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( DS * ( ( Min( MUC ,RRSe ) - Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * ( RCSe / RRSe ) ) ) )", "obj1": 0.9686192468619247, "obj2": 0.012538611089848247}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( Max( MRS,( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Min( ( MLU * RMSe ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * DS ) ) ) - MUR ) ) )", "obj1": 0.9644351464435147, "obj2": 0.013034891753074476}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( BR * FirstVNF_Mem_Server ) - BR ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUM - ( RCSe / ( DS - Min( MLU ,( DS * MUR ) ) ) ) ) ,( MLU * RMSe ) )", "obj1": 0.9581589958158996, "obj2": 0.01699490916818679}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( MLU * RMSe ) )", "obj1": 0.9560669456066946, "obj2": 0.018737915039731694}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( ARS - CRS ) + ( DDR * DDR ) ) - ( CRS - FirstVNF_RAM_Server ) ) + MRS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUM ) ,( MLU * RMSe ) )", "obj1": 0.9497907949790795, "obj2": 0.022059458957254148}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( Min( RRS ,DDR ) / ( ( ( BR / ( FirstVNF_CPU_Server - MRS ) ) / FirstVNF_CPU ) * ( ( MDR * ARS ) * ( Const * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( MUR - ( CS - RCSe ) ) / MUM ) / RRSe ) - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - MUR ) ) ,Max( MLU,( MUC - MUM ) ) ) )", "obj1": 0.8640167364016736, "obj2": 0.06498982601859188}, {"determining": "( Min( ( MDR * ACS ) ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM * ( DDR * BR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,DS ) / Min( MLU ,MUM ) ) - MUC ) ) + ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) )", "obj1": 0.6171548117154811, "obj2": 0.2651554948186778}, {"determining": "( FirstVNF_CPU - ( ( ( Min( ( FirstVNF_Mem * Const ) ,AMS ) * AMS ) / ( Max( Min( BR ,( Max( FirstVNF_RAM_Server,PN ) - BR ) ),CRS ) * CRS ) ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "Min( Max( ( DS * ( ( CS * RRSe ) + RCSe ) ),Min( Min( DS ,MUR ) ,( RRSe - CS ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + ( MUC - RCSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002550482499746131}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Max( ( PN / FirstVNF_CPU_Server ),( MDR + BR ) ) )", "choosing": "( ( Min( MUM ,MUR ) - MUM ) + Max( ( MLU + ( MLU * RMSe ) ),RMSe ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "Min( ( Min( ( ARS / BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RRSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - BR ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe - Min( ( RRSe * ( Max( MLU,RRSe ) / RRSe ) ) ,MUM ) ),( Max( Min( MUM ,MUC ),RMSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - FirstVNF_RAM ) - ( FirstVNF_CPU * Max( RRS,AMS ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( AMS ,Min( ARS ,RRS ) ) ) * ( FirstVNF_CPU + Const ) )", "choosing": "( Max( Max( ( Max( ( ( ( MLU * MUM ) / RRSe ) / ( DS / CS ) ),( Min( MUC ,( RRSe + RRSe ) ) / ( RRSe - MUC ) ) ) / MUC ),DS ),( RMSe + MLU ) ) / ( ( MLU + ( MUM - MLU ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Max( BR,CRS ) ) / ( FirstVNF_CPU_Server * CRS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS - Max( RRSe,( ( ( MUR / DS ) - RCSe ) * RCSe ) ) ) ) * Max( Max( MUM,CS ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * Max( ( PN * ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - MDR ) ) / Max( FirstVNF_Mem_Server,Const ) ) ),MDR ) ) ) - ( MRS - MRS ) )", "choosing": "( ( ( RRSe + RRSe ) - DS ) + ( RMSe - ( DS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( DDR + ( BR + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC / MUM ),Min( RMSe ,CS ) ) + ( Max( RCSe,( ( ( Max( RCSe,RMSe ) + RRSe ) * ( ( ( RMSe * MLU ) * MUM ) * Min( Max( RCSe,MUC ) ,MUM ) ) ) - Max( CS,DS ) ) ) / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( ( CRS + FirstVNF_CPU ) ,( FirstVNF_CPU_Server + BR ) ) )", "choosing": "( ( MUR - RCSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - DDR ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( CS + RRSe ) * Max( MLU,Max( MUR,( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MDR * MRS ) ,( ( Const - MDR ) / ( ( MDR * ( FirstVNF_Mem_Server + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * RRSe ) / Min( ( RCSe + Max( RMSe,MUR ) ) ,( MUM + MUM ) ) ),( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem ,MDR ) + Min( AMS ,AMS ) ) ,( ( ARS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + Min( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + MRS ) / DDR ) ) ) ) ,RRS ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( RCSe - RRSe ) / ( CS / MLU ) ) ,( RRSe + ( RRSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - Max( FirstVNF_Mem_Server,RRS ) ) - ( ( FirstVNF_RAM / Max( Min( PN ,Const ),( MRS * ACS ) ) ) * ( MRS / PN ) ) ),Min( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / DS ) ) - ( ( MUR * CS ) / ( MLU + Max( ( ( ( MUM - MUC ) / MUR ) / ( MUM * DS ) ),DS ) ) ) ) * ( ( Min( MUC ,RRSe ) - Max( RCSe,RMSe ) ) - ( Max( MLU,RCSe ) * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + PN ) - ( Max( ( PN - ARS ),DDR ) * ACS ) )", "choosing": "Max( Min( ( MUM - RCSe ) ,( Max( MLU,( RRSe - RCSe ) ) - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( ( CRS * MDR ) - Min( AMS ,( RRS * ARS ) ) ) ) - ( Max( FirstVNF_CPU,AMS ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,( CS * RMSe ) ) + Max( ( ( RRSe - DS ) * MLU ),Min( RCSe ,MUC ) ) ) * ( CS - Max( MUM,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( BR + FirstVNF_Mem ),( ( FirstVNF_CPU * BR ) - Min( Const ,FirstVNF_CPU ) ) ) ,( ( ( ( Min( PN ,DDR ) * MRS ) * ( FirstVNF_RAM / ( FirstVNF_CPU / Max( BR,ACS ) ) ) ) / ARS ) * MDR ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( Const,Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "Max( Max( MUC,( MLU + RCSe ) ),( Max( ( ( DS + ( Max( ( MUC / RMSe ),Min( MUM ,MLU ) ) / RMSe ) ) - ( RCSe * Max( ( RMSe / MUR ),MLU ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( CRS + PN ) ) + Max( ARS,DDR ) )", "choosing": "Max( ( ( CS / RCSe ) * Min( MUR ,CS ) ),Min( ( ( ( MLU / ( ( Max( CS,DS ) * RMSe ) * ( ( RMSe - MUC ) * RCSe ) ) ) - ( ( CS - MUC ) + RRSe ) ) - ( ( MUC * ( Max( ( RRSe * RMSe ),RCSe ) * Max( ( MUR * RCSe ),( CS / CS ) ) ) ) / ( MUC - MUC ) ) ) ,Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + ( AMS + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,( RRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( Min( Min( MUC ,RMSe ) ,DS ) * MLU ),MUM ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),( RRSe * CS ) ) - ( ( MUM + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( ACS / FirstVNF_Mem_Server ) ) - Min( ( CRS + ARS ) ,Min( Max( ACS,Max( ( Const + FirstVNF_CPU ),BR ) ) ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,( Max( ( RCSe + MUR ),Min( MUC ,( RCSe * ( DS * MLU ) ) ) ) / ( CS - Max( RRSe,Max( MUR,MLU ) ) ) ) ) * ( MUM - ( ( RCSe * CS ) / ( ( MUR / MUM ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Min( FirstVNF_Mem_Server ,( Max( FirstVNF_CPU_Server,PN ) / Min( FirstVNF_Mem ,ARS ) ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + MRS ) - Max( ( ( ( MRS + AMS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ),Max( Min( RRS ,MRS ),( CRS + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( CS - Max( MLU,( MLU * DS ) ) ) * ( MUR - CS ) ) ,( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,AMS ) ,AMS ) + Min( DDR ,RRS ) )", "choosing": "( Min( ( CS * MUR ) ,Min( MUM ,DS ) ) / ( ( RMSe * MUR ) - ( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / BR ) + ( ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,Const ) ) - ( ( CRS / FirstVNF_RAM ) + ( CRS + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( MRS / MRS ) ) ) ) ) )", "choosing": "Max( Min( Max( MLU,( RRSe * ( MUM - MUR ) ) ) ,RRSe ),( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - MRS ) / Const ) ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM * ( MLU + DS ) ) - ( ( RCSe + RRSe ) + RRSe ) ) * ( Max( ( RMSe + ( RRSe * ( MUM / CS ) ) ),RCSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + ( ( RRS - ( MDR + MRS ) ) - FirstVNF_RAM_Server ) ) + ARS ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUR / CS ),Max( RMSe,Max( ( CS / ( MUC * ( DS - MUC ) ) ),Max( ( MUC * DS ),RRSe ) ) ) ) ) * ( RRSe - ( Max( MUR,MUR ) * ( MLU - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ARS,CRS ),( ( Max( BR,( ACS * RRS ) ) / ( Const / CRS ) ) / Max( RRS,ARS ) ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( ( ( ( ( RRS / MRS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) * Const ) + DDR ) / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( Max( ( RCSe + MUC ),Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUM + RRSe ) ,( MUC * CS ) ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( Max( PN,CRS ) - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,DDR ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MUM / MLU ) ,Max( RCSe,DS ) ),Min( Max( MUR,MUC ) ,Max( RRSe,MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( DS + ( ( Min( ( DS - RCSe ) ,MUC ) * ( ( ( RRSe / MUC ) + MUM ) * MLU ) ) - ( RCSe - ( MUM / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Max( Const,MRS ) ) + ARS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,CS ),Max( RMSe,( ( ( MUC / MLU ) / ( Min( DS ,CS ) - Max( ( RMSe - RRSe ),CS ) ) ) / ( MUR * Max( MUM,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,DDR ) - ( ( ARS * FirstVNF_RAM ) / ( ( Const * AMS ) / ( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( Max( ( DS / RRSe ),( RCSe + MUC ) ) - ( ( ( CS - DS ) / RMSe ) - ( DS * CS ) ) ),Min( Max( DS,MUR ) ,( RRSe - MUR ) ) ) ,( Min( CS ,MUC ) * Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ACS ) ,( FirstVNF_RAM / ( FirstVNF_RAM_Server + ( Max( DDR,FirstVNF_RAM ) * AMS ) ) ) )", "choosing": "( ( Max( RCSe,( ( RCSe + ( Max( ( RCSe + DS ),MLU ) - ( Min( MUR ,CS ) / RMSe ) ) ) - ( MLU / MUM ) ) ) * MUM ) * ( Max( ( Max( RCSe,RMSe ) + DS ),RRSe ) / ( RCSe * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU_Server ,DDR ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( ACS / FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe / Min( RMSe ,MLU ) ) + MUR ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Min( ( ARS / FirstVNF_RAM_Server ) ,AMS ) ) + ( ( FirstVNF_Mem_Server - ARS ) - DDR ) )", "choosing": "( ( MUR - RCSe ) + ( ( ( DS - RRSe ) - ( RMSe + ( ( DS / ( Max( RRSe,MUR ) - DS ) ) + ( MUM / DS ) ) ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,Max( Max( ACS,DDR ),FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,Max( ( Max( RMSe,( Min( MUM ,DS ) / RMSe ) ) / CS ),Max( CS,CS ) ) ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( RRS + PN ) ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) / Min( BR ,CRS ) ) )", "choosing": "( ( ( MUM * MLU ) * Max( Max( RCSe,MUM ),Min( RCSe ,RCSe ) ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Const ) - ( ( Max( ACS,( ( ACS / MDR ) - FirstVNF_Mem ) ) * PN ) - Min( BR ,PN ) ) )", "choosing": "Max( ( MUM * ( MUR + Min( ( ( ( ( MUM * MUC ) + RCSe ) + Max( ( MUM + MUR ),RCSe ) ) * MUM ) ,MUC ) ) ),( MUM * Min( MUM ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Const ) / DDR ) / FirstVNF_CPU ) + ( DDR / RRS ) )", "choosing": "( ( DS + ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - Max( MUR,MLU ) ) ) + ( DS / ( Max( RRSe,MLU ) / DS ) ) ) ) ) ) + ( MUR - Max( MUM,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( ARS ,BR ) ,( DDR - ACS ) ) - Min( Max( PN,MRS ) ,( Const * MRS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,( ACS - ( FirstVNF_CPU * AMS ) ) ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( Min( ( RRSe / Min( RMSe ,MLU ) ) ,RMSe ) * Max( ( ( MLU + ( CS * RMSe ) ) + ( ( CS / MUC ) + ( RCSe + CS ) ) ),( Max( MUM,( RRSe / CS ) ) * DS ) ) ) * RRSe ) ) + ( ( ( ( Max( RMSe,CS ) / RMSe ) + RCSe ) - ( MUM + RCSe ) ) - Max( ( DS / RRSe ),Max( RRSe,Min( RCSe ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( Min( Const ,CRS ) / ( CRS / ( Max( MDR,ACS ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( Max( ( MLU - Min( DS ,DS ) ),RRSe ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( AMS + ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Max( ( Const / Max( FirstVNF_CPU,RRS ) ),DDR ) ) ) ) )", "choosing": "Max( Min( ( MLU - ( RRSe - ( DS / ( MUC / MUM ) ) ) ) ,MLU ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( Max( ( ( FirstVNF_CPU_Server / Min( FirstVNF_CPU ,RRS ) ) * FirstVNF_Mem ),FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ACS ,ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( ( ( Max( CS,CS ) + MLU ) / MUR ) / MLU ) ,( CS * RCSe ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,ARS ) + ( FirstVNF_Mem - PN ) ) ,( ( BR + MDR ) * Min( ( Min( Min( ARS ,BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( FirstVNF_RAM * ARS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,ACS ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * CRS ) ) ) ) ) ) - Min( ( ( RRS - RRS ) / Min( PN ,MDR ) ) ,( Const + DDR ) ) )", "choosing": "Max( ( DS + ( MUC - ( MUM - ( DS + MLU ) ) ) ),( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM - FirstVNF_CPU ) ),Min( FirstVNF_CPU ,( Max( ( RRS - Const ),FirstVNF_CPU ) - ARS ) ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( AMS,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( RCSe / ( ( ( ( Max( MUR,MUC ) - ( RMSe + RCSe ) ) + MLU ) / RMSe ) - DS ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,MRS ) - ( Max( CRS,FirstVNF_CPU ) / Max( ( Const * MRS ),ACS ) ) ) ,( ACS - ( BR / PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,MRS ) - ( Max( ( DDR + FirstVNF_Mem ),FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) ) / ( DDR / ( CRS * MDR ) ) )", "choosing": "Max( ( ( RRSe * RRSe ) + ( MUC * RMSe ) ),( ( ( CS - RMSe ) + MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( ( ( ( MRS / ( RRS / FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) / FirstVNF_RAM ),CRS ) ) * ( ( ( FirstVNF_RAM - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( RCSe * ( ( MUR / CS ) / MLU ) ) - ( DS + Min( ( Max( MLU,RMSe ) * Max( DS,MUC ) ) ,RRSe ) ) ),Min( MUC ,MUM ) ) * Min( ( Max( RRSe,( RCSe * RRSe ) ) * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( ( Const + ACS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( Min( FirstVNF_RAM_Server ,ACS ) - ( CRS / FirstVNF_RAM ) ) + ( Min( Const ,( ( AMS / ( CRS / Min( DDR ,FirstVNF_CPU ) ) ) * ( PN / CRS ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MUM ,RRSe ) * ( ( RCSe - DS ) * ( MUR + RMSe ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,RCSe ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.7447698744769874, "obj2": 0.13393942608838041}, {"determining": "( ( ARS - Min( ARS ,MRS ) ) / Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( ARS * ARS ) - ( FirstVNF_Mem + Const ) ) ) )", "choosing": "( ( Max( CS,CS ) + ( ( ( RCSe - MUC ) - DS ) / ( MUC * ( ( Max( ( RRSe - MUC ),Max( MLU,RCSe ) ) + DS ) - RMSe ) ) ) ) / ( DS - ( Max( RCSe,DS ) / DS ) ) )", "obj1": 0.9414225941422594, "obj2": 0.041371649213418946}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ( FirstVNF_RAM - FirstVNF_CPU ) ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( CS + ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - ( RMSe * MUR ) ) ) + ( DS / ( ( RCSe / DS ) + MUR ) ) ) ) ) ) + ( MUR - Max( MUM,( MUC - RCSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.21972237838191602}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7677824267782427, "obj2": 0.11904228908385242}, {"determining": "( ( MDR / ( MRS - FirstVNF_RAM ) ) - ( FirstVNF_RAM + ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / Max( Max( BR,FirstVNF_RAM_Server ),PN ) ) ) ) )", "choosing": "( ( ( ( ( ( MUR - Min( MUM ,DS ) ) / MUR ) / RMSe ) - MUM ) + RRSe ) * ( ( DS + DS ) - MLU ) )", "obj1": 0.7301255230125523, "obj2": 0.1556338865419399}, {"determining": "( Max( Min( ( FirstVNF_CPU + Const ) ,( ARS * ( MRS / FirstVNF_CPU_Server ) ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( Max( ( RCSe / RMSe ),RMSe ) / RMSe ) / RMSe ) ) ) ,Max( ( MUC - CS ),MLU ) ) )", "obj1": 0.895397489539749, "obj2": 0.04297672594991672}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ( FirstVNF_Mem_Server - Min( AMS ,RRS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( Const / ACS ) ) ) * ( ACS * ARS ) ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( ( RMSe * ( ( MUM / MLU ) * DS ) ) ,DS ) ) / ( Min( RMSe ,MUR ) - Max( RRSe,MLU ) ) )", "obj1": 0.6485355648535565, "obj2": 0.2384744796248617}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( MUR + RMSe ) ) ) ) ) * MUM ) )", "obj1": 0.8849372384937239, "obj2": 0.0508329997464804}, {"determining": "( Max( ( ( DDR - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( FirstVNF_CPU_Server * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( Min( CS ,Max( ( Max( Max( ( DS + Max( MUR,DS ) ),CS ),Min( RRSe ,RMSe ) ) - RMSe ),MUR ) ) ,( RCSe - ( RCSe * MUR ) ) )", "obj1": 0.805439330543933, "obj2": 0.09651210666777467}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - ARS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),( ( ARS - FirstVNF_Mem ) - Min( PN ,AMS ) ) ) / ( Min( FirstVNF_RAM ,Const ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( MUM / ( CS * Min( ( MUR - CS ) ,DS ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.8284518828451883, "obj2": 0.08932050862091345}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( AMS ,PN ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * Max( AMS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) ) ,DS ) ) / ( ( ( ( RCSe - RRSe ) - RMSe ) * ( MUR - RRSe ) ) - ( RRSe * MLU ) ) )", "obj1": 0.8347280334728033, "obj2": 0.08002611407038848}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "( ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) / Max( Min( Const ,Max( BR,Max( FirstVNF_Mem_Server,BR ) ) ),Max( FirstVNF_RAM,DDR ) ) )", "choosing": "( ( Min( MUM ,MUR ) - RCSe ) + Max( ( ( Min( Min( ( DS - MLU ) ,Min( RCSe ,( MUC * MUC ) ) ) ,CS ) - MUC ) + MUM ),RMSe ) )", "obj1": 0.7782426778242678, "obj2": 0.10813023959416185}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.7907949790794979, "obj2": 0.10412513850965081}, {"determining": "( Max( ( ( ( ( ACS + MRS ) * ( PN + ( DDR * PN ) ) ) + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( ARS * Const ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( ( ( MUC / MLU ) * ( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( Max( ( RRSe - DS ),MUR ),MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8472803347280334, "obj2": 0.06813394999846897}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.8661087866108786, "obj2": 0.06352115893960114}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( BR - ( BR - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) )", "choosing": "( RRSe * Max( ( RCSe - ( ( RMSe - ( ( RRSe + ( DS - CS ) ) / CS ) ) - RRSe ) ),Min( MLU ,MUM ) ) )", "obj1": 0.6213389121338913, "obj2": 0.26513698437414773}, {"determining": "( ( ( MDR * CRS ) + ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( AMS ,PN ) ) ) + MRS ) )", "choosing": "( ( RCSe * RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.023384866675943382}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) - Min( Const ,PN ) )", "choosing": "Min( ( ( Max( ( RRSe - ( ( ( RMSe * MUC ) / MUR ) - MUC ) ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( CS + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,MUR ) ,MUC ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 0.6150627615062761, "obj2": 0.2671910127456893}, {"determining": "( Max( ( ( DDR - MRS ) - Max( ( PN * Min( Max( Min( FirstVNF_RAM ,ARS ),( MDR + FirstVNF_CPU ) ) ,Max( ( CRS * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,DDR ) ) ) ),( Min( ( RRS * FirstVNF_Mem ) ,( FirstVNF_CPU_Server * RRS ) ) - CRS ) ) ),ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - Max( CRS,FirstVNF_RAM ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( ( RCSe + ( MUR - CS ) ) + Min( ( MUC * ( ( MUC * ( Min( MUR ,RRSe ) + ( CS * CS ) ) ) - ( DS * CS ) ) ) ,RMSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01548724310013873}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server + Min( DDR ,Max( ( MRS / FirstVNF_RAM_Server ),ACS ) ) ) / FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( MDR * ARS ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( CS,MLU ) + RCSe ) * Min( RRSe ,( ( Max( ( Min( RMSe ,CS ) - ( MUM - MUM ) ),( Max( RRSe,MLU ) - Min( CS ,MUM ) ) ) - ( DS * Max( RCSe,RMSe ) ) ) * CS ) ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + ( MUR + ( MUC - RMSe ) ) ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.06763870147299872}, {"determining": "( Max( MRS,( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Min( ( MLU * RMSe ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * DS ) ) ) - MUR ) ) )", "obj1": 0.9644351464435147, "obj2": 0.013034891753074476}, {"determining": "( Min( ( MDR - MRS ) ,( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUC,CS ) / MUM ) * ( RMSe + RMSe ) )", "obj1": 0.7071129707112971, "obj2": 0.16790652145893775}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( MRS * Min( ACS ,Min( FirstVNF_CPU_Server ,( ( MDR / DDR ) * FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) ) * ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - Max( DS,( DS / DS ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / Max( ( ( RMSe - Max( ( Min( CS ,RMSe ) / Min( MUR ,MUM ) ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7154811715481172, "obj2": 0.1677388221411244}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + Max( RCSe,( MUR + MUM ) ) ) - Max( MLU,MLU ) ) ) ,( RRSe / RRSe ) )", "obj1": 0.702928870292887, "obj2": 0.17193817399630296}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,CRS ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( RMSe - Max( ( ( DS - Min( MUR ,( RRSe - MUC ) ) ) + DS ),DS ) ) )", "obj1": 0.698744769874477, "obj2": 0.1733787471398263}, {"determining": "( Max( MRS,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + DDR ) )", "choosing": "Min( Max( ( MUR + DS ),( MUM / MUC ) ) ,( Min( MUR ,RMSe ) - Max( MUC,RRSe ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020629082974171018}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "Min( Min( MUC ,RMSe ) ,Max( ( MUM * ( MUC + DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( RRSe ,CS ) ) ) ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.008916546563619475}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( BR - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( FirstVNF_RAM * AMS ) - Min( PN ,AMS ) ) ) + Min( FirstVNF_CPU_Server ,CRS ) ) )", "choosing": "( ( RCSe - RRSe ) - ( MUM * ( ( MUC - MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( DS - Min( MUC ,DS ) ) ) ) ) ) ) )", "obj1": 0.9748953974895398, "obj2": 0.010327621038757876}, {"determining": "( Min( RRS ,DDR ) / ( ( ( BR / ( FirstVNF_CPU_Server - MRS ) ) / FirstVNF_CPU ) * ( ( MDR * ARS ) * ( Const * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( MUR - ( CS - RCSe ) ) / MUM ) / RRSe ) - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - MUR ) ) ,Max( MLU,( MUC - MUM ) ) ) )", "obj1": 0.8640167364016736, "obj2": 0.06498982601859188}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( ARS - CRS ) + ( DDR * DDR ) ) - ( CRS - FirstVNF_RAM_Server ) ) + MRS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUM ) ,( MLU * RMSe ) )", "obj1": 0.9497907949790795, "obj2": 0.022059458957254148}, {"determining": "( Min( ( MDR * ACS ) ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM * ( DDR * BR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,DS ) / Min( MLU ,MUM ) ) - MUC ) ) + ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) )", "obj1": 0.6171548117154811, "obj2": 0.2651554948186778}, {"determining": "( FirstVNF_CPU - ( ( ( Min( ( FirstVNF_Mem * Const ) ,AMS ) * AMS ) / ( Max( Min( BR ,( Max( FirstVNF_RAM_Server,PN ) - BR ) ),CRS ) * CRS ) ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "Min( Max( ( DS * ( ( CS * RRSe ) + RCSe ) ),Min( Min( DS ,MUR ) ,( RRSe - CS ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + ( MUC - RCSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002550482499746131}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( BR - Min( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + Max( Max( ( PN - BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + ( Min( ( Min( RCSe ,Max( ( RRSe * ( DS * RMSe ) ),MUC ) ) - ( RRSe + RCSe ) ) ,RCSe ) - Max( ( RRSe * Min( Max( RMSe,( RCSe * Min( DS ,RCSe ) ) ) ,RRSe ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RRSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - BR ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe - Min( ( RRSe * ( Max( MLU,RRSe ) / RRSe ) ) ,MUM ) ),( Max( Min( MUM ,MUC ),RMSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - FirstVNF_RAM ) - ( FirstVNF_CPU * Max( RRS,AMS ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( AMS ,Min( ARS ,RRS ) ) ) * ( FirstVNF_CPU + Const ) )", "choosing": "( Max( Max( ( Max( ( ( ( MLU * MUM ) / RRSe ) / ( DS / CS ) ),( Min( MUC ,( RRSe + RRSe ) ) / ( RRSe - MUC ) ) ) / MUC ),DS ),( RMSe + MLU ) ) / ( ( MLU + ( MUM - MLU ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Max( BR,CRS ) ) / ( FirstVNF_CPU_Server * CRS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS - Max( RRSe,( ( ( MUR / DS ) - RCSe ) * RCSe ) ) ) ) * Max( Max( MUM,CS ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * Max( ( PN * ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - MDR ) ) / Max( FirstVNF_Mem_Server,Const ) ) ),MDR ) ) ) - ( MRS - MRS ) )", "choosing": "( ( ( RRSe + RRSe ) - DS ) + ( RMSe - ( DS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( DDR + ( BR + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC / MUM ),Min( RMSe ,CS ) ) + ( Max( RCSe,( ( ( Max( RCSe,RMSe ) + RRSe ) * ( ( ( RMSe * MLU ) * MUM ) * Min( Max( RCSe,MUC ) ,MUM ) ) ) - Max( CS,DS ) ) ) / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( ( CRS + FirstVNF_CPU ) ,( FirstVNF_CPU_Server + BR ) ) )", "choosing": "( ( MUR - RCSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - DDR ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( CS + RRSe ) * Max( MLU,Max( MUR,( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MDR * MRS ) ,( ( Const - MDR ) / ( ( MDR * ( FirstVNF_Mem_Server + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * RRSe ) / Min( ( RCSe + Max( RMSe,MUR ) ) ,( MUM + MUM ) ) ),( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem ,MDR ) + Min( AMS ,AMS ) ) ,( ( ARS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + Min( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + MRS ) / DDR ) ) ) ) ,RRS ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( RCSe - RRSe ) / ( CS / MLU ) ) ,( RRSe + ( RRSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - Max( FirstVNF_Mem_Server,RRS ) ) - ( ( FirstVNF_RAM / Max( Min( PN ,Const ),( MRS * ACS ) ) ) * ( MRS / PN ) ) ),Min( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / DS ) ) - ( ( MUR * CS ) / ( MLU + Max( ( ( ( MUM - MUC ) / MUR ) / ( MUM * DS ) ),DS ) ) ) ) * ( ( Min( MUC ,RRSe ) - Max( RCSe,RMSe ) ) - ( Max( MLU,RCSe ) * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + PN ) - ( Max( ( PN - ARS ),DDR ) * ACS ) )", "choosing": "Max( Min( ( MUM - RCSe ) ,( Max( MLU,( RRSe - RCSe ) ) - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( ( CRS * MDR ) - Min( AMS ,( RRS * ARS ) ) ) ) - ( Max( FirstVNF_CPU,AMS ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,( CS * RMSe ) ) + Max( ( ( RRSe - DS ) * MLU ),Min( RCSe ,MUC ) ) ) * ( CS - Max( MUM,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( BR + FirstVNF_Mem ),( ( FirstVNF_CPU * BR ) - Min( Const ,FirstVNF_CPU ) ) ) ,( ( ( ( Min( PN ,DDR ) * MRS ) * ( FirstVNF_RAM / ( FirstVNF_CPU / Max( BR,ACS ) ) ) ) / ARS ) * MDR ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( Const,Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "Max( Max( MUC,( MLU + RCSe ) ),( Max( ( ( DS + ( Max( ( MUC / RMSe ),Min( MUM ,MLU ) ) / RMSe ) ) - ( RCSe * Max( ( RMSe / MUR ),MLU ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( CRS + PN ) ) + Max( ARS,DDR ) )", "choosing": "Max( ( ( CS / RCSe ) * Min( MUR ,CS ) ),Min( ( ( ( MLU / ( ( Max( CS,DS ) * RMSe ) * ( ( RMSe - MUC ) * RCSe ) ) ) - ( ( CS - MUC ) + RRSe ) ) - ( ( MUC * ( Max( ( RRSe * RMSe ),RCSe ) * Max( ( MUR * RCSe ),( CS / CS ) ) ) ) / ( MUC - MUC ) ) ) ,Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + ( AMS + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,( RRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( Min( Min( MUC ,RMSe ) ,DS ) * MLU ),MUM ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),( RRSe * CS ) ) - ( ( MUM + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( ACS / FirstVNF_Mem_Server ) ) - Min( ( CRS + ARS ) ,Min( Max( ACS,Max( ( Const + FirstVNF_CPU ),BR ) ) ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,( Max( ( RCSe + MUR ),Min( MUC ,( RCSe * ( DS * MLU ) ) ) ) / ( CS - Max( RRSe,Max( MUR,MLU ) ) ) ) ) * ( MUM - ( ( RCSe * CS ) / ( ( MUR / MUM ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Min( FirstVNF_Mem_Server ,( Max( FirstVNF_CPU_Server,PN ) / Min( FirstVNF_Mem ,ARS ) ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + MRS ) - Max( ( ( ( MRS + AMS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ),Max( Min( RRS ,MRS ),( CRS + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( CS - Max( MLU,( MLU * DS ) ) ) * ( MUR - CS ) ) ,( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,AMS ) ,AMS ) + Min( DDR ,RRS ) )", "choosing": "( Min( ( CS * MUR ) ,Min( MUM ,DS ) ) / ( ( RMSe * MUR ) - ( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / BR ) + ( ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,Const ) ) - ( ( CRS / FirstVNF_RAM ) + ( CRS + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( MRS / MRS ) ) ) ) ) )", "choosing": "Max( Min( Max( MLU,( RRSe * ( MUM - MUR ) ) ) ,RRSe ),( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - MRS ) / Const ) ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM * ( MLU + DS ) ) - ( ( RCSe + RRSe ) + RRSe ) ) * ( Max( ( RMSe + ( RRSe * ( MUM / CS ) ) ),RCSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + ( ( RRS - ( MDR + MRS ) ) - FirstVNF_RAM_Server ) ) + ARS ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUR / CS ),Max( RMSe,Max( ( CS / ( MUC * ( DS - MUC ) ) ),Max( ( MUC * DS ),RRSe ) ) ) ) ) * ( RRSe - ( Max( MUR,MUR ) * ( MLU - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ARS,CRS ),( ( Max( BR,( ACS * RRS ) ) / ( Const / CRS ) ) / Max( RRS,ARS ) ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( ( ( ( ( RRS / MRS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) * Const ) + DDR ) / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( Max( ( RCSe + MUC ),Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUM + RRSe ) ,( MUC * CS ) ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( Max( PN,CRS ) - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,DDR ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MUM / MLU ) ,Max( RCSe,DS ) ),Min( Max( MUR,MUC ) ,Max( RRSe,MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( DS + ( ( Min( ( DS - RCSe ) ,MUC ) * ( ( ( RRSe / MUC ) + MUM ) * MLU ) ) - ( RCSe - ( MUM / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Max( Const,MRS ) ) + ARS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,CS ),Max( RMSe,( ( ( MUC / MLU ) / ( Min( DS ,CS ) - Max( ( RMSe - RRSe ),CS ) ) ) / ( MUR * Max( MUM,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,DDR ) - ( ( ARS * FirstVNF_RAM ) / ( ( Const * AMS ) / ( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( Max( ( DS / RRSe ),( RCSe + MUC ) ) - ( ( ( CS - DS ) / RMSe ) - ( DS * CS ) ) ),Min( Max( DS,MUR ) ,( RRSe - MUR ) ) ) ,( Min( CS ,MUC ) * Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ACS ) ,( FirstVNF_RAM / ( FirstVNF_RAM_Server + ( Max( DDR,FirstVNF_RAM ) * AMS ) ) ) )", "choosing": "( ( Max( RCSe,( ( RCSe + ( Max( ( RCSe + DS ),MLU ) - ( Min( MUR ,CS ) / RMSe ) ) ) - ( MLU / MUM ) ) ) * MUM ) * ( Max( ( Max( RCSe,RMSe ) + DS ),RRSe ) / ( RCSe * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU_Server ,DDR ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( ACS / FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe / Min( RMSe ,MLU ) ) + MUR ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Min( ( ARS / FirstVNF_RAM_Server ) ,AMS ) ) + ( ( FirstVNF_Mem_Server - ARS ) - DDR ) )", "choosing": "( ( MUR - RCSe ) + ( ( ( DS - RRSe ) - ( RMSe + ( ( DS / ( Max( RRSe,MUR ) - DS ) ) + ( MUM / DS ) ) ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,Max( Max( ACS,DDR ),FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,Max( ( Max( RMSe,( Min( MUM ,DS ) / RMSe ) ) / CS ),Max( CS,CS ) ) ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( RRS + PN ) ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) / Min( BR ,CRS ) ) )", "choosing": "( ( ( MUM * MLU ) * Max( Max( RCSe,MUM ),Min( RCSe ,RCSe ) ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Const ) - ( ( Max( ACS,( ( ACS / MDR ) - FirstVNF_Mem ) ) * PN ) - Min( BR ,PN ) ) )", "choosing": "Max( ( MUM * ( MUR + Min( ( ( ( ( MUM * MUC ) + RCSe ) + Max( ( MUM + MUR ),RCSe ) ) * MUM ) ,MUC ) ) ),( MUM * Min( MUM ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Const ) / DDR ) / FirstVNF_CPU ) + ( DDR / RRS ) )", "choosing": "( ( DS + ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - Max( MUR,MLU ) ) ) + ( DS / ( Max( RRSe,MLU ) / DS ) ) ) ) ) ) + ( MUR - Max( MUM,( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( ARS ,BR ) ,( DDR - ACS ) ) - Min( Max( PN,MRS ) ,( Const * MRS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,( ACS - ( FirstVNF_CPU * AMS ) ) ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( Min( ( RRSe / Min( RMSe ,MLU ) ) ,RMSe ) * Max( ( ( MLU + ( CS * RMSe ) ) + ( ( CS / MUC ) + ( RCSe + CS ) ) ),( Max( MUM,( RRSe / CS ) ) * DS ) ) ) * RRSe ) ) + ( ( ( ( Max( RMSe,CS ) / RMSe ) + RCSe ) - ( MUM + RCSe ) ) - Max( ( DS / RRSe ),Max( RRSe,Min( RCSe ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( Min( Const ,CRS ) / ( CRS / ( Max( MDR,ACS ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( Max( ( MLU - Min( DS ,DS ) ),RRSe ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - ( AMS + ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Max( ( Const / Max( FirstVNF_CPU,RRS ) ),DDR ) ) ) ) )", "choosing": "Max( Min( ( MLU - ( RRSe - ( DS / ( MUC / MUM ) ) ) ) ,MLU ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( Max( ( ( FirstVNF_CPU_Server / Min( FirstVNF_CPU ,RRS ) ) * FirstVNF_Mem ),FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) - ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ACS ,ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( ( ( Max( CS,CS ) + MLU ) / MUR ) / MLU ) ,( CS * RCSe ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,ARS ) + ( FirstVNF_Mem - PN ) ) ,( ( BR + MDR ) * Min( ( Min( Min( ARS ,BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( FirstVNF_RAM * ARS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,ACS ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * CRS ) ) ) ) ) ) - Min( ( ( RRS - RRS ) / Min( PN ,MDR ) ) ,( Const + DDR ) ) )", "choosing": "Max( ( DS + ( MUC - ( MUM - ( DS + MLU ) ) ) ),( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( ACS - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MRS * MDR ) ,( Max( Const,MDR ) / ( RRS - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * ( MUM + MLU ) ) - ( Min( Max( RCSe,MUC ) ,Min( ( MUR - MLU ) ,( MUC * Min( RCSe ,MUC ) ) ) ) / ( ( RMSe * Max( MUM,( MUC - ( RRSe - RMSe ) ) ) ) + ( MUC / Max( RMSe,RRSe ) ) ) ) ),Max( ( RCSe + ( MLU - ( MUR * RMSe ) ) ),Min( ( RMSe - DS ) ,Min( DS ,Min( DS ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( ( ( ( MRS / ( RRS / FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) / FirstVNF_RAM ),CRS ) ) * ( ( ( FirstVNF_RAM - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( RCSe * ( ( MUR / CS ) / MLU ) ) - ( DS + Min( ( Max( MLU,RMSe ) * Max( DS,MUC ) ) ,RRSe ) ) ),Min( MUC ,MUM ) ) * Min( ( Max( RRSe,( RCSe * RRSe ) ) * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( ( Const + ACS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( Min( FirstVNF_RAM_Server ,ACS ) - ( CRS / FirstVNF_RAM ) ) + ( Min( Const ,( ( AMS / ( CRS / Min( DDR ,FirstVNF_CPU ) ) ) * ( PN / CRS ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MUM ,RRSe ) * ( ( RCSe - DS ) * ( MUR + RMSe ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,RCSe ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.7447698744769874, "obj2": 0.13393942608838041}, {"determining": "( ( ARS - Min( ARS ,MRS ) ) / Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( ARS * ARS ) - ( FirstVNF_Mem + Const ) ) ) )", "choosing": "( ( Max( CS,CS ) + ( ( ( RCSe - MUC ) - DS ) / ( MUC * ( ( Max( ( RRSe - MUC ),Max( MLU,RCSe ) ) + DS ) - RMSe ) ) ) ) / ( DS - ( Max( RCSe,DS ) / DS ) ) )", "obj1": 0.9414225941422594, "obj2": 0.041371649213418946}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ( FirstVNF_RAM - FirstVNF_CPU ) ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( CS + ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - ( RMSe * MUR ) ) ) + ( DS / ( ( RCSe / DS ) + MUR ) ) ) ) ) ) + ( MUR - Max( MUM,( MUC - RCSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.21972237838191602}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7677824267782427, "obj2": 0.11904228908385242}, {"determining": "( Max( Min( ( FirstVNF_CPU + Const ) ,( ARS * ( MRS / FirstVNF_CPU_Server ) ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( Max( ( RCSe / RMSe ),RMSe ) / RMSe ) / RMSe ) ) ) ,Max( ( MUC - CS ),MLU ) ) )", "obj1": 0.895397489539749, "obj2": 0.04297672594991672}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( MUR + RMSe ) ) ) ) ) * MUM ) )", "obj1": 0.8849372384937239, "obj2": 0.0508329997464804}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ( FirstVNF_Mem_Server - Min( AMS ,RRS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( Const / ACS ) ) ) * ( ACS * ARS ) ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( ( RMSe * ( ( MUM / MLU ) * DS ) ) ,DS ) ) / ( Min( RMSe ,MUR ) - Max( RRSe,MLU ) ) )", "obj1": 0.6485355648535565, "obj2": 0.2384744796248617}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( AMS ,PN ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * Max( AMS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) ) ,DS ) ) / ( ( ( ( RCSe - RRSe ) - RMSe ) * ( MUR - RRSe ) ) - ( RRSe * MLU ) ) )", "obj1": 0.8242677824267782, "obj2": 0.08838542722264318}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( AMS ,PN ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * Max( AMS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) ) ,DS ) ) / ( ( ( ( RCSe - RRSe ) - RMSe ) * ( MUR - RRSe ) ) - ( RRSe * MLU ) ) )", "obj1": 0.8347280334728033, "obj2": 0.08002611407038848}, {"determining": "( ( MDR / ( MRS - FirstVNF_RAM ) ) - ( FirstVNF_RAM + ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / Max( Max( BR,FirstVNF_RAM_Server ),PN ) ) ) ) )", "choosing": "( ( ( ( ( ( MUR - Min( MUM ,DS ) ) / MUR ) / RMSe ) - MUM ) + RRSe ) * ( ( DS + DS ) - MLU ) )", "obj1": 0.7301255230125523, "obj2": 0.1556338865419399}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "( ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) / Max( Min( Const ,Max( BR,Max( FirstVNF_Mem_Server,BR ) ) ),Max( FirstVNF_RAM,DDR ) ) )", "choosing": "( ( Min( MUM ,MUR ) - RCSe ) + Max( ( ( Min( Min( ( DS - MLU ) ,Min( RCSe ,( MUC * MUC ) ) ) ,CS ) - MUC ) + MUM ),RMSe ) )", "obj1": 0.7782426778242678, "obj2": 0.10813023959416185}, {"determining": "( Max( ( ( ( ( ACS + MRS ) * ( PN + ( DDR * PN ) ) ) + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( ARS * Const ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( ( ( MUC / MLU ) * ( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( Max( ( RRSe - DS ),MUR ),MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8472803347280334, "obj2": 0.06813394999846897}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.8661087866108786, "obj2": 0.06352115893960114}, {"determining": "( Max( ( ( DDR - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( FirstVNF_CPU_Server * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( Min( CS ,Max( ( Max( Max( ( DS + Max( MUR,DS ) ),CS ),Min( RRSe ,RMSe ) ) - RMSe ),MUR ) ) ,( RCSe - ( RCSe * MUR ) ) )", "obj1": 0.805439330543933, "obj2": 0.09651210666777467}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( BR - ( BR - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) )", "choosing": "( RRSe * Max( ( RCSe - ( ( RMSe - ( ( RRSe + ( DS - CS ) ) / CS ) ) - RRSe ) ),Min( MLU ,MUM ) ) )", "obj1": 0.6213389121338913, "obj2": 0.26513698437414773}, {"determining": "( ( ( MDR * CRS ) + ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( AMS ,PN ) ) ) + MRS ) )", "choosing": "( ( RCSe * RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.023384866675943382}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( Min( Min( PN ,Min( Min( FirstVNF_Mem ,ACS ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( DS + MUC ) - ( CS - Min( Min( Max( RCSe,MUC ) ,RMSe ) ,( Min( ( DS / RRSe ) ,RCSe ) - MLU ) ) ) ) ) + ( Min( ( RMSe - MLU ) ,RRSe ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6380753138075314, "obj2": 0.24195612736266645}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) - Min( Const ,PN ) )", "choosing": "Min( ( ( Max( ( RRSe - ( ( ( RMSe * MUC ) / MUR ) - MUC ) ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( CS + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,MUR ) ,MUC ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 0.6150627615062761, "obj2": 0.2671910127456893}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7280334728033473, "obj2": 0.15718498328110153}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.7907949790794979, "obj2": 0.10412513850965081}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.0979433932701568}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server + Min( DDR ,Max( ( MRS / FirstVNF_RAM_Server ),ACS ) ) ) / FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( MDR * ARS ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( CS,MLU ) + RCSe ) * Min( RRSe ,( ( Max( ( Min( RMSe ,CS ) - ( MUM - MUM ) ),( Max( RRSe,MLU ) - Min( CS ,MUM ) ) ) - ( DS * Max( RCSe,RMSe ) ) ) * CS ) ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + ( MUR + ( MUC - RMSe ) ) ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.06763870147299872}, {"determining": "( Min( ( MDR - MRS ) ,( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUC,CS ) / MUM ) * ( RMSe + RMSe ) )", "obj1": 0.7071129707112971, "obj2": 0.16790652145893775}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( MRS * Min( ACS ,Min( FirstVNF_CPU_Server ,( ( MDR / DDR ) * FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) ) * ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - Max( DS,( DS / DS ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / Max( ( ( RMSe - Max( ( Min( CS ,RMSe ) / Min( MUR ,MUM ) ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7154811715481172, "obj2": 0.1677388221411244}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + Max( RCSe,( MUR + MUM ) ) ) - Max( MLU,MLU ) ) ) ,( RRSe / RRSe ) )", "obj1": 0.702928870292887, "obj2": 0.17193817399630296}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,CRS ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( RMSe - Max( ( ( DS - Min( MUR ,( RRSe - MUC ) ) ) + DS ),DS ) ) )", "obj1": 0.698744769874477, "obj2": 0.1733787471398263}, {"determining": "( Max( MRS,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + DDR ) )", "choosing": "Min( Max( ( MUR + DS ),( MUM / MUC ) ) ,( Min( MUR ,RMSe ) - Max( MUC,RRSe ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020629082974171018}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),Max( ( Const + ACS ),( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_RAM / DDR ) * FirstVNF_RAM ) - ( MDR * ARS ) ) ) )", "choosing": "( Min( MUC ,( CS * Max( ( DS + RMSe ),RRSe ) ) ) * ( DS - CS ) )", "obj1": 0.7928870292887029, "obj2": 0.10285208731392882}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "Min( Min( MUC ,RMSe ) ,Max( ( MUM * ( MUC + DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( RRSe ,CS ) ) ) ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.008916546563619475}, {"determining": "( Max( ( ( DDR - MRS ) - Max( ( PN * Min( Max( Min( FirstVNF_RAM ,ARS ),( MDR + FirstVNF_CPU ) ) ,Max( ( CRS * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,DDR ) ) ) ),( Min( ( RRS * FirstVNF_Mem ) ,( FirstVNF_CPU_Server * RRS ) ) - CRS ) ) ),ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - Max( CRS,FirstVNF_RAM ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( ( RCSe + ( MUR - CS ) ) + Min( ( MUC * ( ( MUC * ( Min( MUR ,RRSe ) + ( CS * CS ) ) ) - ( DS * CS ) ) ) ,RMSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01548724310013873}, {"determining": "( BR - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( FirstVNF_RAM * AMS ) - Min( PN ,AMS ) ) ) + Min( FirstVNF_CPU_Server ,CRS ) ) )", "choosing": "( ( RCSe - RRSe ) - ( MUM * ( ( MUC - MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( DS - Min( MUC ,DS ) ) ) ) ) ) ) )", "obj1": 0.9748953974895398, "obj2": 0.010327621038757876}, {"determining": "( Min( RRS ,DDR ) / ( ( ( BR / ( FirstVNF_CPU_Server - MRS ) ) / FirstVNF_CPU ) * ( ( MDR * ARS ) * ( Const * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( MUR - ( CS - RCSe ) ) / MUM ) / RRSe ) - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - MUR ) ) ,Max( MLU,( MUC - MUM ) ) ) )", "obj1": 0.8640167364016736, "obj2": 0.06498982601859188}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( ARS - CRS ) + ( DDR * DDR ) ) - ( CRS - FirstVNF_RAM_Server ) ) + MRS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUM ) ,( MLU * RMSe ) )", "obj1": 0.9497907949790795, "obj2": 0.022059458957254148}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( Min( ( MDR * ACS ) ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM * ( DDR * BR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,DS ) / Min( MLU ,MUM ) ) - MUC ) ) + ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) )", "obj1": 0.6171548117154811, "obj2": 0.2651554948186778}, {"determining": "( FirstVNF_CPU - ( ( ( Min( ( FirstVNF_Mem * Const ) ,AMS ) * AMS ) / ( Max( Min( BR ,( Max( FirstVNF_RAM_Server,PN ) - BR ) ),CRS ) * CRS ) ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "Min( Max( ( DS * ( ( CS * RRSe ) + RCSe ) ),Min( Min( DS ,MUR ) ,( RRSe - CS ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + ( MUC - RCSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002550482499746131}, {"determining": "Max( ( ( ( BR * ACS ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( MRS / PN ) ) ),( BR / ( PN - ( ( ARS * ACS ) + AMS ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RMSe / MLU ) ) - ( ( RMSe * MUR ) / ( MLU + MUR ) ) ) * ( ( RCSe * MUR ) * MLU ) )", "obj1": 0.9665271966527197, "obj2": 0.012320646162627541}, {"determining": "( Max( Min( FirstVNF_Mem ,( FirstVNF_Mem * Min( ( Min( MDR ,ACS ) / Const ) ,Max( PN,PN ) ) ) ),FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * Min( ( ACS * BR ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / MLU ),Min( ( RRSe / MUC ) ,Max( ( Min( RCSe ,RCSe ) - RMSe ),MUR ) ) ) / ( RCSe + ( RRSe - RMSe ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "Max( ( ( Min( BR ,ACS ) - ( RRS + ( CRS / AMS ) ) ) - Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( MRS / PN ) ) ),( ( ( ( AMS * ( BR / RRS ) ) / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( DS + RCSe ) * ( MLU / ( RCSe + RMSe ) ) ) ,( ( Min( MLU ,RRSe ) * ( MUM * CS ) ) * ( ( RCSe - RMSe ) / ( CS + CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.01335761123093077}, {"determining": "( Max( MRS,( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Min( ( MLU * RMSe ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * DS ) ) ) - MUR ) ) )", "obj1": 0.9644351464435147, "obj2": 0.013034891753074476}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + Max( Max( ( PN - BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + ( Min( ( Min( RCSe ,Max( ( RRSe * ( DS * RMSe ) ),MUC ) ) - ( RRSe + RCSe ) ) ,RCSe ) - Max( ( RRSe * Min( Max( RMSe,( RCSe * Min( DS ,RCSe ) ) ) ,RRSe ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RRSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - BR ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe - Min( ( RRSe * ( Max( MLU,RRSe ) / RRSe ) ) ,MUM ) ),( Max( Min( MUM ,MUC ),RMSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - FirstVNF_RAM ) - ( FirstVNF_CPU * Max( RRS,AMS ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( AMS ,Min( ARS ,RRS ) ) ) * ( FirstVNF_CPU + Const ) )", "choosing": "( Max( Max( ( Max( ( ( ( MLU * MUM ) / RRSe ) / ( DS / CS ) ),( Min( MUC ,( RRSe + RRSe ) ) / ( RRSe - MUC ) ) ) / MUC ),DS ),( RMSe + MLU ) ) / ( ( MLU + ( MUM - MLU ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Max( BR,CRS ) ) / ( FirstVNF_CPU_Server * CRS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS - Max( RRSe,( ( ( MUR / DS ) - RCSe ) * RCSe ) ) ) ) * Max( Max( MUM,CS ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * Max( ( PN * ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - MDR ) ) / Max( FirstVNF_Mem_Server,Const ) ) ),MDR ) ) ) - ( MRS - MRS ) )", "choosing": "( ( ( RRSe + RRSe ) - DS ) + ( RMSe - ( DS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( DDR + ( BR + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC / MUM ),Min( RMSe ,CS ) ) + ( Max( RCSe,( ( ( Max( RCSe,RMSe ) + RRSe ) * ( ( ( RMSe * MLU ) * MUM ) * Min( Max( RCSe,MUC ) ,MUM ) ) ) - Max( CS,DS ) ) ) / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( ( CRS + FirstVNF_CPU ) ,( FirstVNF_CPU_Server + BR ) ) )", "choosing": "( ( MUR - RCSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - DDR ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( CS + RRSe ) * Max( MLU,Max( MUR,( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MDR * MRS ) ,( ( Const - MDR ) / ( ( MDR * ( FirstVNF_Mem_Server + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * RRSe ) / Min( ( RCSe + Max( RMSe,MUR ) ) ,( MUM + MUM ) ) ),( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem ,MDR ) + Min( AMS ,AMS ) ) ,( ( ARS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + Min( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + MRS ) / DDR ) ) ) ) ,RRS ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( RCSe - RRSe ) / ( CS / MLU ) ) ,( RRSe + ( RRSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - Max( FirstVNF_Mem_Server,RRS ) ) - ( ( FirstVNF_RAM / Max( Min( PN ,Const ),( MRS * ACS ) ) ) * ( MRS / PN ) ) ),Min( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / DS ) ) - ( ( MUR * CS ) / ( MLU + Max( ( ( ( MUM - MUC ) / MUR ) / ( MUM * DS ) ),DS ) ) ) ) * ( ( Min( MUC ,RRSe ) - Max( RCSe,RMSe ) ) - ( Max( MLU,RCSe ) * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + PN ) - ( Max( ( PN - ARS ),DDR ) * ACS ) )", "choosing": "Max( Min( ( MUM - RCSe ) ,( Max( MLU,( RRSe - RCSe ) ) - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( ( CRS * MDR ) - Min( AMS ,( RRS * ARS ) ) ) ) - ( Max( FirstVNF_CPU,AMS ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,( CS * RMSe ) ) + Max( ( ( RRSe - DS ) * MLU ),Min( RCSe ,MUC ) ) ) * ( CS - Max( MUM,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( BR + FirstVNF_Mem ),( ( FirstVNF_CPU * BR ) - Min( Const ,FirstVNF_CPU ) ) ) ,( ( ( ( Min( PN ,DDR ) * MRS ) * ( FirstVNF_RAM / ( FirstVNF_CPU / Max( BR,ACS ) ) ) ) / ARS ) * MDR ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( Const,Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "Max( Max( MUC,( MLU + RCSe ) ),( Max( ( ( DS + ( Max( ( MUC / RMSe ),Min( MUM ,MLU ) ) / RMSe ) ) - ( RCSe * Max( ( RMSe / MUR ),MLU ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( CRS + PN ) ) + Max( ARS,DDR ) )", "choosing": "Max( ( ( CS / RCSe ) * Min( MUR ,CS ) ),Min( ( ( ( MLU / ( ( Max( CS,DS ) * RMSe ) * ( ( RMSe - MUC ) * RCSe ) ) ) - ( ( CS - MUC ) + RRSe ) ) - ( ( MUC * ( Max( ( RRSe * RMSe ),RCSe ) * Max( ( MUR * RCSe ),( CS / CS ) ) ) ) / ( MUC - MUC ) ) ) ,Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + ( AMS + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,( RRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( Min( Min( MUC ,RMSe ) ,DS ) * MLU ),MUM ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),( RRSe * CS ) ) - ( ( MUM + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( ACS / FirstVNF_Mem_Server ) ) - Min( ( CRS + ARS ) ,Min( Max( ACS,Max( ( Const + FirstVNF_CPU ),BR ) ) ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,( Max( ( RCSe + MUR ),Min( MUC ,( RCSe * ( DS * MLU ) ) ) ) / ( CS - Max( RRSe,Max( MUR,MLU ) ) ) ) ) * ( MUM - ( ( RCSe * CS ) / ( ( MUR / MUM ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Min( FirstVNF_Mem_Server ,( Max( FirstVNF_CPU_Server,PN ) / Min( FirstVNF_Mem ,ARS ) ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + MRS ) - Max( ( ( ( MRS + AMS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ),Max( Min( RRS ,MRS ),( CRS + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( CS - Max( MLU,( MLU * DS ) ) ) * ( MUR - CS ) ) ,( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,AMS ) ,AMS ) + Min( DDR ,RRS ) )", "choosing": "( Min( ( CS * MUR ) ,Min( MUM ,DS ) ) / ( ( RMSe * MUR ) - ( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / BR ) + ( ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,Const ) ) - ( ( CRS / FirstVNF_RAM ) + ( CRS + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( MRS / MRS ) ) ) ) ) )", "choosing": "Max( Min( Max( MLU,( RRSe * ( MUM - MUR ) ) ) ,RRSe ),( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - MRS ) / Const ) ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM * ( MLU + DS ) ) - ( ( RCSe + RRSe ) + RRSe ) ) * ( Max( ( RMSe + ( RRSe * ( MUM / CS ) ) ),RCSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + ( ( RRS - ( MDR + MRS ) ) - FirstVNF_RAM_Server ) ) + ARS ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUR / CS ),Max( RMSe,Max( ( CS / ( MUC * ( DS - MUC ) ) ),Max( ( MUC * DS ),RRSe ) ) ) ) ) * ( RRSe - ( Max( MUR,MUR ) * ( MLU - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ARS,CRS ),( ( Max( BR,( ACS * RRS ) ) / ( Const / CRS ) ) / Max( RRS,ARS ) ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( ( ( ( ( RRS / MRS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) * Const ) + DDR ) / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( Max( ( RCSe + MUC ),Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUM + RRSe ) ,( MUC * CS ) ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( Max( PN,CRS ) - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,DDR ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MUM / MLU ) ,Max( RCSe,DS ) ),Min( Max( MUR,MUC ) ,Max( RRSe,MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( DS + ( ( Min( ( DS - RCSe ) ,MUC ) * ( ( ( RRSe / MUC ) + MUM ) * MLU ) ) - ( RCSe - ( MUM / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Max( Const,MRS ) ) + ARS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,CS ),Max( RMSe,( ( ( MUC / MLU ) / ( Min( DS ,CS ) - Max( ( RMSe - RRSe ),CS ) ) ) / ( MUR * Max( MUM,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,DDR ) - ( ( ARS * FirstVNF_RAM ) / ( ( Const * AMS ) / ( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( Max( ( DS / RRSe ),( RCSe + MUC ) ) - ( ( ( CS - DS ) / RMSe ) - ( DS * CS ) ) ),Min( Max( DS,MUR ) ,( RRSe - MUR ) ) ) ,( Min( CS ,MUC ) * Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ACS ) ,( FirstVNF_RAM / ( FirstVNF_RAM_Server + ( Max( DDR,FirstVNF_RAM ) * AMS ) ) ) )", "choosing": "( ( Max( RCSe,( ( RCSe + ( Max( ( RCSe + DS ),MLU ) - ( Min( MUR ,CS ) / RMSe ) ) ) - ( MLU / MUM ) ) ) * MUM ) * ( Max( ( Max( RCSe,RMSe ) + DS ),RRSe ) / ( RCSe * ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU_Server ,DDR ) ,( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( ACS / FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe / Min( RMSe ,MLU ) ) + MUR ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Min( ( ARS / FirstVNF_RAM_Server ) ,AMS ) ) + ( ( FirstVNF_Mem_Server - ARS ) - DDR ) )", "choosing": "( ( MUR - RCSe ) + ( ( ( DS - RRSe ) - ( RMSe + ( ( DS / ( Max( RRSe,MUR ) - DS ) ) + ( MUM / DS ) ) ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,Max( Max( ACS,DDR ),FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,Max( ( Max( RMSe,( Min( MUM ,DS ) / RMSe ) ) / CS ),Max( CS,CS ) ) ) ,( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( ( ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) + ( ( PN * PN ) - ( DDR * ACS ) ) ) / Max( ( ( FirstVNF_RAM / ( RRS / Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,( DDR * FirstVNF_RAM_Server ) ) ) ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ),Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - RRSe ) * Max( ( RRSe + MUM ),( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MRS * MDR ) ,( Max( Const,MDR ) / ( RRS - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * ( MUM + MLU ) ) - ( Min( Max( RCSe,MUC ) ,Min( ( MUR - MLU ) ,( MUC * Min( RCSe ,MUC ) ) ) ) / ( ( RMSe * Max( MUM,( MUC - ( RRSe - RMSe ) ) ) ) + ( MUC / Max( RMSe,RRSe ) ) ) ) ),Max( ( RCSe + ( MLU - ( MUR * RMSe ) ) ),Min( ( RMSe - DS ) ,Min( DS ,Min( DS ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( ( ARS - Min( ARS ,MRS ) ) / Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( ARS * ARS ) - ( FirstVNF_Mem + Const ) ) ) )", "choosing": "( ( Max( CS,CS ) + ( ( ( RCSe - MUC ) - DS ) / ( MUC * ( ( Max( ( RRSe - MUC ),Max( MLU,RCSe ) ) + DS ) - RMSe ) ) ) ) / ( DS - ( Max( RCSe,DS ) / DS ) ) )", "obj1": 0.9414225941422594, "obj2": 0.041371649213418946}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ( FirstVNF_RAM - FirstVNF_CPU ) ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( CS + ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - ( RMSe * MUR ) ) ) + ( DS / ( ( RCSe / DS ) + MUR ) ) ) ) ) ) + ( MUR - Max( MUM,( MUC - RCSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.21972237838191602}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( ( Const + ACS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( Min( FirstVNF_RAM_Server ,ACS ) - ( CRS / FirstVNF_RAM ) ) + ( Min( Const ,( ( AMS / ( CRS / Min( DDR ,FirstVNF_CPU ) ) ) * ( PN / CRS ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MUM ,RRSe ) * ( ( RCSe - DS ) * ( MUR + RMSe ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,RCSe ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.7447698744769874, "obj2": 0.13393942608838041}, {"determining": "( Max( Min( ( FirstVNF_CPU + Const ) ,( ARS * ( MRS / FirstVNF_CPU_Server ) ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( Max( ( RCSe / RMSe ),RMSe ) / RMSe ) / RMSe ) ) ) ,Max( ( MUC - CS ),MLU ) ) )", "obj1": 0.895397489539749, "obj2": 0.04297672594991672}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( MUR + RMSe ) ) ) ) ) * MUM ) )", "obj1": 0.8849372384937239, "obj2": 0.0508329997464804}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ( FirstVNF_Mem_Server - Min( AMS ,RRS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( Const / ACS ) ) ) * ( ACS * ARS ) ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( ( RMSe * ( ( MUM / MLU ) * DS ) ) ,DS ) ) / ( Min( RMSe ,MUR ) - Max( RRSe,MLU ) ) )", "obj1": 0.6485355648535565, "obj2": 0.2384744796248617}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( AMS ,PN ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * Max( AMS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) ) ,DS ) ) / ( ( ( ( RCSe - RRSe ) - RMSe ) * ( MUR - RRSe ) ) - ( RRSe * MLU ) ) )", "obj1": 0.8347280334728033, "obj2": 0.08002611407038848}, {"determining": "( ( MDR / ( MRS - FirstVNF_RAM ) ) - ( FirstVNF_RAM + ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / Max( Max( BR,FirstVNF_RAM_Server ),PN ) ) ) ) )", "choosing": "( ( ( ( ( ( MUR - Min( MUM ,DS ) ) / MUR ) / RMSe ) - MUM ) + RRSe ) * ( ( DS + DS ) - MLU ) )", "obj1": 0.7301255230125523, "obj2": 0.1556338865419399}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( AMS ,PN ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * Max( AMS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) ) ,DS ) ) / ( ( ( ( RCSe - RRSe ) - RMSe ) * ( MUR - RRSe ) ) - ( RRSe * MLU ) ) )", "obj1": 0.8242677824267782, "obj2": 0.08838542722264318}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "( ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) / Max( Min( Const ,Max( BR,Max( FirstVNF_Mem_Server,BR ) ) ),Max( FirstVNF_RAM,DDR ) ) )", "choosing": "( ( Min( MUM ,MUR ) - RCSe ) + Max( ( ( Min( Min( ( DS - MLU ) ,Min( RCSe ,( MUC * MUC ) ) ) ,CS ) - MUC ) + MUM ),RMSe ) )", "obj1": 0.7782426778242678, "obj2": 0.10813023959416185}, {"determining": "( Max( ( ( Min( BR ,Const ) - Min( AMS ,PN ) ) + ( FirstVNF_CPU + Const ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( ( BR * FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) ) + ( Min( Const ,( ( AMS * ( RRS + ( PN - BR ) ) ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( Min( ( ( DS / MUM ) - ( RRSe - ( RCSe - ( DS * RMSe ) ) ) ) ,MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.12500589381639257}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7677824267782427, "obj2": 0.11904228908385242}, {"determining": "( Max( ( ( ( ( ACS + MRS ) * ( PN + ( DDR * PN ) ) ) + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( ARS * Const ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( ( ( MUC / MLU ) * ( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( Max( ( RRSe - DS ),MUR ),MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8472803347280334, "obj2": 0.06813394999846897}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.8661087866108786, "obj2": 0.06352115893960114}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( BR - ( BR - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) )", "choosing": "( RRSe * Max( ( RCSe - ( ( RMSe - ( ( RRSe + ( DS - CS ) ) / CS ) ) - RRSe ) ),Min( MLU ,MUM ) ) )", "obj1": 0.6213389121338913, "obj2": 0.26513698437414773}, {"determining": "( ( ( MDR * CRS ) + ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( AMS ,PN ) ) ) + MRS ) )", "choosing": "( ( RCSe * RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.023384866675943382}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( Min( Min( PN ,Min( Min( FirstVNF_Mem ,ACS ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( DS + MUC ) - ( CS - Min( Min( Max( RCSe,MUC ) ,RMSe ) ,( Min( ( DS / RRSe ) ,RCSe ) - MLU ) ) ) ) ) + ( Min( ( RMSe - MLU ) ,RRSe ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6380753138075314, "obj2": 0.24195612736266645}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( Min( MUC ,( CS * DS ) ) * ( MUM - DS ) )", "obj1": 0.8075313807531381, "obj2": 0.09563876064816497}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 0.6150627615062761, "obj2": 0.2671910127456893}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.7907949790794979, "obj2": 0.10412513850965081}, {"determining": "( Min( ( MDR - MRS ) ,( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUC,CS ) / MUM ) * ( RMSe + RMSe ) )", "obj1": 0.7071129707112971, "obj2": 0.16790652145893775}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.0979433932701568}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server + Min( DDR ,Max( ( MRS / FirstVNF_RAM_Server ),ACS ) ) ) / FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( MDR * ARS ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( CS,MLU ) + RCSe ) * Min( RRSe ,( ( Max( ( Min( RMSe ,CS ) - ( MUM - MUM ) ),( Max( RRSe,MLU ) - Min( CS ,MUM ) ) ) - ( DS * Max( RCSe,RMSe ) ) ) * CS ) ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + ( MUR + ( MUC - RMSe ) ) ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.06763870147299872}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7217573221757322, "obj2": 0.15975919179673057}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - Max( DS,( DS / DS ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / Max( ( ( DS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7154811715481172, "obj2": 0.16548024246435122}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + Max( RCSe,( MUR + MUM ) ) ) - Max( MLU,MLU ) ) ) ,( RRSe / RRSe ) )", "obj1": 0.702928870292887, "obj2": 0.17193817399630296}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,CRS ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( RMSe - Max( ( ( DS - Min( MUR ,( RRSe - MUC ) ) ) + DS ),DS ) ) )", "obj1": 0.698744769874477, "obj2": 0.1733787471398263}, {"determining": "( Max( MRS,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + DDR ) )", "choosing": "Min( Max( ( MUR + DS ),( MUM / MUC ) ) ,( Min( MUR ,RMSe ) - Max( MUC,RRSe ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020629082974171018}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),Max( ( Const + ACS ),( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_RAM / DDR ) * FirstVNF_RAM ) - ( MDR * ARS ) ) ) )", "choosing": "( Min( MUC ,( CS * Max( ( DS + RMSe ),RRSe ) ) ) * ( DS - CS ) )", "obj1": 0.7928870292887029, "obj2": 0.10285208731392882}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "Min( Min( MUC ,RMSe ) ,Max( ( MUM * ( MUC + DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( RRSe ,CS ) ) ) ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.008916546563619475}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) - Min( Const ,PN ) )", "choosing": "Min( ( ( Max( ( RRSe - ( ( ( RMSe * MUC ) / MUR ) - MUC ) ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( CS + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,MUR ) ,MUC ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( Max( ( ( DDR - MRS ) - Max( ( PN * Min( Max( Min( FirstVNF_RAM ,ARS ),( MDR + FirstVNF_CPU ) ) ,Max( ( CRS * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,DDR ) ) ) ),( Min( ( RRS * FirstVNF_Mem ) ,( FirstVNF_CPU_Server * RRS ) ) - CRS ) ) ),ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - Max( CRS,FirstVNF_RAM ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( ( RCSe + ( MUR - CS ) ) + Min( ( MUC * ( ( MUC * ( Min( MUR ,RRSe ) + ( CS * CS ) ) ) - ( DS * CS ) ) ) ,RMSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01548724310013873}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7280334728033473, "obj2": 0.15718498328110153}, {"determining": "( Max( ( ( DDR - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( FirstVNF_CPU_Server * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( Min( CS ,Max( ( Max( Max( ( DS + Max( MUR,DS ) ),CS ),Min( RRSe ,RMSe ) ) - RMSe ),MUR ) ) ,( RCSe - ( RCSe * MUR ) ) )", "obj1": 0.805439330543933, "obj2": 0.09651210666777467}, {"determining": "( BR - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( FirstVNF_RAM * AMS ) - Min( PN ,AMS ) ) ) + Min( FirstVNF_CPU_Server ,CRS ) ) )", "choosing": "( ( RCSe - RRSe ) - ( MUM * ( ( MUC - MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( DS - Min( MUC ,DS ) ) ) ) ) ) ) )", "obj1": 0.9748953974895398, "obj2": 0.010327621038757876}, {"determining": "( Min( RRS ,DDR ) / ( ( ( BR / ( FirstVNF_CPU_Server - MRS ) ) / FirstVNF_CPU ) * ( ( MDR * ARS ) * ( Const * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( MUR - ( CS - RCSe ) ) / MUM ) / RRSe ) - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - MUR ) ) ,Max( MLU,( MUC - MUM ) ) ) )", "obj1": 0.8640167364016736, "obj2": 0.06498982601859188}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( ARS - CRS ) + ( DDR * DDR ) ) - ( CRS - FirstVNF_RAM_Server ) ) + MRS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUM ) ,( MLU * RMSe ) )", "obj1": 0.9497907949790795, "obj2": 0.022059458957254148}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( Min( ( MDR * ACS ) ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM * ( DDR * BR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,DS ) / Min( MLU ,MUM ) ) - MUC ) ) + ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) )", "obj1": 0.6171548117154811, "obj2": 0.2651554948186778}, {"determining": "( FirstVNF_CPU - ( ( ( Min( ( FirstVNF_Mem * Const ) ,AMS ) * AMS ) / ( Max( Min( BR ,( Max( FirstVNF_RAM_Server,PN ) - BR ) ),CRS ) * CRS ) ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "Min( Max( ( DS * ( ( CS * RRSe ) + RCSe ) ),Min( Min( DS ,MUR ) ,( RRSe - CS ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + ( MUC - RCSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002550482499746131}, {"determining": "Max( ( ( ( BR * ACS ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( MRS / PN ) ) ),( BR / ( PN - ( ( ARS * ACS ) + AMS ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RMSe / MLU ) ) - ( ( RMSe * MUR ) / ( MLU + MUR ) ) ) * ( ( RCSe * MUR ) * MLU ) )", "obj1": 0.9665271966527197, "obj2": 0.012320646162627541}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) / PN ) ) )", "choosing": "( Max( ( Min( MLU ,( ( Max( MUM,( CS * RRSe ) ) / ( ( RCSe / RRSe ) / ( MUR - CS ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) * ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( Max( Min( FirstVNF_Mem ,( FirstVNF_Mem * Min( ( Min( MDR ,ACS ) / Const ) ,Max( PN,PN ) ) ) ),FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * Min( ( ACS * BR ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / MLU ),Min( ( RRSe / MUC ) ,Max( ( Min( RCSe ,RCSe ) - RMSe ),MUR ) ) ) / ( RCSe + ( RRSe - RMSe ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "Max( ( ( Min( BR ,ACS ) - ( RRS + ( CRS / AMS ) ) ) - Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( MRS / PN ) ) ),( ( ( ( AMS * ( BR / RRS ) ) / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( DS + RCSe ) * ( MLU / ( RCSe + RMSe ) ) ) ,( ( Min( MLU ,RRSe ) * ( MUM * CS ) ) * ( ( RCSe - RMSe ) / ( CS + CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.01335761123093077}, {"determining": "( Max( MRS,( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Min( ( MLU * RMSe ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * DS ) ) ) - MUR ) ) )", "obj1": 0.9644351464435147, "obj2": 0.013034891753074476}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( ( ( ( MRS / ( RRS / FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) / FirstVNF_RAM ),CRS ) ) * ( ( ( FirstVNF_RAM - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( RCSe * ( ( MUR / CS ) / MLU ) ) - ( DS + Min( ( Max( MLU,RMSe ) * Max( DS,MUC ) ) ,RRSe ) ) ),Min( MUC ,MUM ) ) * Min( ( Max( RRSe,( RCSe * RRSe ) ) * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + Max( Max( ( PN - BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + ( Min( ( Min( RCSe ,Max( ( RRSe * ( DS * RMSe ) ),MUC ) ) - ( RRSe + RCSe ) ) ,RCSe ) - Max( ( RRSe * Min( Max( RMSe,( RCSe * Min( DS ,RCSe ) ) ) ,RRSe ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RRSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - BR ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe - Min( ( RRSe * ( Max( MLU,RRSe ) / RRSe ) ) ,MUM ) ),( Max( Min( MUM ,MUC ),RMSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - FirstVNF_RAM ) - ( FirstVNF_CPU * Max( RRS,AMS ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( AMS ,Min( ARS ,RRS ) ) ) * ( FirstVNF_CPU + Const ) )", "choosing": "( Max( Max( ( Max( ( ( ( MLU * MUM ) / RRSe ) / ( DS / CS ) ),( Min( MUC ,( RRSe + RRSe ) ) / ( RRSe - MUC ) ) ) / MUC ),DS ),( RMSe + MLU ) ) / ( ( MLU + ( MUM - MLU ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Max( BR,CRS ) ) / ( FirstVNF_CPU_Server * CRS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS - Max( RRSe,( ( ( MUR / DS ) - RCSe ) * RCSe ) ) ) ) * Max( Max( MUM,CS ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * Max( ( PN * ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - MDR ) ) / Max( FirstVNF_Mem_Server,Const ) ) ),MDR ) ) ) - ( MRS - MRS ) )", "choosing": "( ( ( RRSe + RRSe ) - DS ) + ( RMSe - ( DS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( DDR + ( BR + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC / MUM ),Min( RMSe ,CS ) ) + ( Max( RCSe,( ( ( Max( RCSe,RMSe ) + RRSe ) * ( ( ( RMSe * MLU ) * MUM ) * Min( Max( RCSe,MUC ) ,MUM ) ) ) - Max( CS,DS ) ) ) / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( ( CRS + FirstVNF_CPU ) ,( FirstVNF_CPU_Server + BR ) ) )", "choosing": "( ( MUR - RCSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - DDR ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( CS + RRSe ) * Max( MLU,Max( MUR,( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MDR * MRS ) ,( ( Const - MDR ) / ( ( MDR * ( FirstVNF_Mem_Server + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * RRSe ) / Min( ( RCSe + Max( RMSe,MUR ) ) ,( MUM + MUM ) ) ),( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem ,MDR ) + Min( AMS ,AMS ) ) ,( ( ARS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + Min( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + MRS ) / DDR ) ) ) ) ,RRS ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( RCSe - RRSe ) / ( CS / MLU ) ) ,( RRSe + ( RRSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - Max( FirstVNF_Mem_Server,RRS ) ) - ( ( FirstVNF_RAM / Max( Min( PN ,Const ),( MRS * ACS ) ) ) * ( MRS / PN ) ) ),Min( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / DS ) ) - ( ( MUR * CS ) / ( MLU + Max( ( ( ( MUM - MUC ) / MUR ) / ( MUM * DS ) ),DS ) ) ) ) * ( ( Min( MUC ,RRSe ) - Max( RCSe,RMSe ) ) - ( Max( MLU,RCSe ) * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + PN ) - ( Max( ( PN - ARS ),DDR ) * ACS ) )", "choosing": "Max( Min( ( MUM - RCSe ) ,( Max( MLU,( RRSe - RCSe ) ) - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( ( CRS * MDR ) - Min( AMS ,( RRS * ARS ) ) ) ) - ( Max( FirstVNF_CPU,AMS ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,( CS * RMSe ) ) + Max( ( ( RRSe - DS ) * MLU ),Min( RCSe ,MUC ) ) ) * ( CS - Max( MUM,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( BR + FirstVNF_Mem ),( ( FirstVNF_CPU * BR ) - Min( Const ,FirstVNF_CPU ) ) ) ,( ( ( ( Min( PN ,DDR ) * MRS ) * ( FirstVNF_RAM / ( FirstVNF_CPU / Max( BR,ACS ) ) ) ) / ARS ) * MDR ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( Const,Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "Max( Max( MUC,( MLU + RCSe ) ),( Max( ( ( DS + ( Max( ( MUC / RMSe ),Min( MUM ,MLU ) ) / RMSe ) ) - ( RCSe * Max( ( RMSe / MUR ),MLU ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( CRS + PN ) ) + Max( ARS,DDR ) )", "choosing": "Max( ( ( CS / RCSe ) * Min( MUR ,CS ) ),Min( ( ( ( MLU / ( ( Max( CS,DS ) * RMSe ) * ( ( RMSe - MUC ) * RCSe ) ) ) - ( ( CS - MUC ) + RRSe ) ) - ( ( MUC * ( Max( ( RRSe * RMSe ),RCSe ) * Max( ( MUR * RCSe ),( CS / CS ) ) ) ) / ( MUC - MUC ) ) ) ,Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + ( AMS + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,( RRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( Min( Min( MUC ,RMSe ) ,DS ) * MLU ),MUM ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),( RRSe * CS ) ) - ( ( MUM + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( ACS / FirstVNF_Mem_Server ) ) - Min( ( CRS + ARS ) ,Min( Max( ACS,Max( ( Const + FirstVNF_CPU ),BR ) ) ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,( Max( ( RCSe + MUR ),Min( MUC ,( RCSe * ( DS * MLU ) ) ) ) / ( CS - Max( RRSe,Max( MUR,MLU ) ) ) ) ) * ( MUM - ( ( RCSe * CS ) / ( ( MUR / MUM ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Min( FirstVNF_Mem_Server ,( Max( FirstVNF_CPU_Server,PN ) / Min( FirstVNF_Mem ,ARS ) ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + MRS ) - Max( ( ( ( MRS + AMS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ),Max( Min( RRS ,MRS ),( CRS + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( CS - Max( MLU,( MLU * DS ) ) ) * ( MUR - CS ) ) ,( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,AMS ) ,AMS ) + Min( DDR ,RRS ) )", "choosing": "( Min( ( CS * MUR ) ,Min( MUM ,DS ) ) / ( ( RMSe * MUR ) - ( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / BR ) + ( ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,Const ) ) - ( ( CRS / FirstVNF_RAM ) + ( CRS + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( MRS / MRS ) ) ) ) ) )", "choosing": "Max( Min( Max( MLU,( RRSe * ( MUM - MUR ) ) ) ,RRSe ),( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - MRS ) / Const ) ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM * ( MLU + DS ) ) - ( ( RCSe + RRSe ) + RRSe ) ) * ( Max( ( RMSe + ( RRSe * ( MUM / CS ) ) ),RCSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + ( ( RRS - ( MDR + MRS ) ) - FirstVNF_RAM_Server ) ) + ARS ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUR / CS ),Max( RMSe,Max( ( CS / ( MUC * ( DS - MUC ) ) ),Max( ( MUC * DS ),RRSe ) ) ) ) ) * ( RRSe - ( Max( MUR,MUR ) * ( MLU - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( ARS,CRS ),( ( Max( BR,( ACS * RRS ) ) / ( Const / CRS ) ) / Max( RRS,ARS ) ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( ( ( ( ( RRS / MRS ) + ( FirstVNF_Mem - FirstVNF_CPU ) ) * Const ) + DDR ) / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( Max( ( RCSe + MUC ),Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUM + RRSe ) ,( MUC * CS ) ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( Max( PN,CRS ) - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,DDR ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MUM / MLU ) ,Max( RCSe,DS ) ),Min( Max( MUR,MUC ) ,Max( RRSe,MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( DS + ( ( Min( ( DS - RCSe ) ,MUC ) * ( ( ( RRSe / MUC ) + MUM ) * MLU ) ) - ( RCSe - ( MUM / CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Max( Const,MRS ) ) + ARS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,CS ),Max( RMSe,( ( ( MUC / MLU ) / ( Min( DS ,CS ) - Max( ( RMSe - RRSe ),CS ) ) ) / ( MUR * Max( MUM,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,DDR ) - ( ( ARS * FirstVNF_RAM ) / ( ( Const * AMS ) / ( MRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( Max( ( DS / RRSe ),( RCSe + MUC ) ) - ( ( ( CS - DS ) / RMSe ) - ( DS * CS ) ) ),Min( Max( DS,MUR ) ,( RRSe - MUR ) ) ) ,( Min( CS ,MUC ) * Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RCSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / DS ),Min( RRSe ,Min( ( ( ( MUR - MUC ) + DS ) + DS ) ,RRSe ) ) ) - ( ( MLU + MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) + ( ( PN * PN ) - ( DDR * ACS ) ) ) / Max( ( ( FirstVNF_RAM / ( RRS / Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,( DDR * FirstVNF_RAM_Server ) ) ) ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ),Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - RRSe ) * Max( ( RRSe + MUM ),( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( ( Const + ACS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( Min( FirstVNF_RAM_Server ,ACS ) - ( CRS / FirstVNF_RAM ) ) + ( Min( Const ,( ( AMS / ( CRS / Min( DDR ,FirstVNF_CPU ) ) ) * ( PN / CRS ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MUM ,RRSe ) * ( ( RCSe - DS ) * ( MUR + RMSe ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,RCSe ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.7447698744769874, "obj2": 0.13393942608838041}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( AMS ,PN ) ) ) / ( FirstVNF_RAM_Server - Min( Max( Min( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,DDR ),( Const + FirstVNF_RAM_Server ) ) ,PN ) ) )", "choosing": "( ( ( ( RMSe + Min( ( Min( RRSe ,RRSe ) - MUM ) ,( ( ( RCSe / CS ) + MUR ) - DS ) ) ) - MUC ) + CS ) * Min( Min( MUC ,( MUR * CS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.9225941422594143, "obj2": 0.029820485855098153}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( CRS ,Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,MUM ) / Min( MUC ,MLU ) ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( Min( MUM ,MUR ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6129707112970711, "obj2": 0.26267656829094416}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( Max( Min( ( FirstVNF_CPU + Const ) ,( ARS * ( MRS / FirstVNF_CPU_Server ) ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( Max( ( RCSe / RMSe ),RMSe ) / RMSe ) / RMSe ) ) ) ,Max( ( MUC - CS ),MLU ) ) )", "obj1": 0.895397489539749, "obj2": 0.04297672594991672}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( BR - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( FirstVNF_RAM * AMS ) - Min( PN ,AMS ) ) ) + Min( FirstVNF_CPU_Server ,CRS ) ) )", "choosing": "( ( RCSe - RRSe ) - ( MUM * ( ( MUC - MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( DS - Min( MUC ,DS ) ) ) ) ) ) ) )", "obj1": 0.6506276150627615, "obj2": 0.22170228102193298}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( AMS ,PN ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * Max( AMS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) ) ,DS ) ) / ( ( ( ( RCSe - RRSe ) - RMSe ) * ( MUR - RRSe ) ) - ( RRSe * MLU ) ) )", "obj1": 0.8347280334728033, "obj2": 0.08002611407038848}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUM ,MUR ) - RCSe ) + Max( ( ( Min( Min( ( DS - MLU ) ,Min( RCSe ,( MUC * MUC ) ) ) ,CS ) - MUC ) + MUM ),RMSe ) )", "obj1": 0.6569037656903766, "obj2": 0.2067288539009225}, {"determining": "( ( MDR / ( MRS - FirstVNF_RAM ) ) - ( FirstVNF_RAM + ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / Max( Max( BR,FirstVNF_RAM_Server ),PN ) ) ) ) )", "choosing": "( ( ( ( ( ( MUR - Min( MUM ,DS ) ) / MUR ) / RMSe ) - MUM ) + RRSe ) * ( ( DS + DS ) - MLU ) )", "obj1": 0.7301255230125523, "obj2": 0.1556338865419399}, {"determining": "( Max( ( ( Min( BR ,Const ) - Min( AMS ,PN ) ) + ( FirstVNF_CPU + Const ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( ( BR * FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) ) + ( Min( Const ,( ( AMS * ( RRS + ( PN - BR ) ) ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( Min( ( ( DS / MUM ) - ( RRSe - ( RCSe - ( DS * RMSe ) ) ) ) ,MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.12500589381639257}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.04956501243364898}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( AMS ,PN ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * Max( AMS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) ) ,DS ) ) / ( ( ( ( RCSe - RRSe ) - RMSe ) * ( MUR - RRSe ) ) - ( RRSe * MLU ) ) )", "obj1": 0.8242677824267782, "obj2": 0.08838542722264318}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( Max( BR,AMS ) - Min( AMS ,PN ) ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( BR ,( Max( ( Max( AMS,PN ) + ( ( BR * FirstVNF_Mem ) / Const ) ),DDR ) + AMS ) ) * ( CRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( RRSe - ( ( RCSe / MUR ) + RRSe ) ) - ( MUC / RCSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( ( ( DS / DS ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUM + MUC ) ) ) ) * MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7677824267782427, "obj2": 0.1149625414453676}, {"determining": "( Max( ( ( ( ( ACS + MRS ) * ( PN + ( DDR * PN ) ) ) + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( ARS * Const ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( ( ( MUC / MLU ) * ( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( Max( ( RRSe - DS ),MUR ),MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8472803347280334, "obj2": 0.06813394999846897}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ( FirstVNF_Mem_Server - Min( AMS ,RRS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( Const / ACS ) ) ) * ( ACS * ARS ) ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( ( RMSe * ( ( MUM / MLU ) * DS ) ) ,DS ) ) / ( Min( RMSe ,MUR ) - Max( RRSe,MLU ) ) )", "obj1": 0.6485355648535565, "obj2": 0.2384744796248617}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.8661087866108786, "obj2": 0.06352115893960114}, {"determining": "( ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) / Max( Min( Const ,Max( BR,Max( FirstVNF_Mem_Server,BR ) ) ),Max( FirstVNF_RAM,DDR ) ) )", "choosing": "( ( Min( MUM ,MUR ) - RCSe ) + Max( ( ( Min( Min( ( DS - MLU ) ,Min( RCSe ,( MUC * MUC ) ) ) ,CS ) - MUC ) + MUM ),RMSe ) )", "obj1": 0.7782426778242678, "obj2": 0.10813023959416185}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( RCSe * Max( ( RMSe / MUR ),MLU ) ) - ( DS + ( ( ( MLU - RMSe ) * Max( DS,MUC ) ) / RRSe ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 0.9456066945606695, "obj2": 0.026485592222834895}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( Min( Min( PN ,Min( Min( FirstVNF_Mem ,ACS ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( DS + MUC ) - ( CS - Min( Min( Max( RCSe,MUC ) ,RMSe ) ,( Min( ( DS / RRSe ) ,RCSe ) - MLU ) ) ) ) ) + ( Min( ( RMSe - MLU ) ,RRSe ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6380753138075314, "obj2": 0.24195612736266645}, {"determining": "( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( Const * ARS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8096234309623431, "obj2": 0.09285085672968701}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( Min( ( CS * MUR ) ,Min( MUM ,DS ) ) / ( ( RMSe * MUR ) - ( MUM * MLU ) ) )", "obj1": 0.893305439330544, "obj2": 0.04774252943697693}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.7907949790794979, "obj2": 0.10412513850965081}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.0979433932701568}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server + Min( DDR ,Max( ( MRS / FirstVNF_RAM_Server ),ACS ) ) ) / FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( MDR * ARS ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( CS,MLU ) + RCSe ) * Min( RRSe ,( ( Max( ( Min( RMSe ,CS ) - ( MUM - MUM ) ),( Max( RRSe,MLU ) - Min( CS ,MUM ) ) ) - ( DS * Max( RCSe,RMSe ) ) ) * CS ) ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + ( MUR + ( MUC - RMSe ) ) ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.06763870147299872}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( CS + ( RRSe - ( RMSe + ( ( MUM / ( Min( MLU ,CS ) - ( RMSe * MUR ) ) ) + ( DS / ( ( RCSe / DS ) + MUR ) ) ) ) ) ) + ( MUR - Max( MUM,( MUC - RCSe ) ) ) )", "obj1": 0.7050209205020921, "obj2": 0.16697230078027092}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7217573221757322, "obj2": 0.15975919179673057}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( ( CRS / AMS ) + ( MRS - ARS ) ) - Min( AMS ,( FirstVNF_CPU / CRS ) ) )", "choosing": "Max( ( ( ( DS * CS ) * ( MUM * Max( ( DS / RRSe ),Min( RRSe ,Min( ( RRSe - RCSe ) ,Min( MUC ,MUM ) ) ) ) ) ) * Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) ),Min( CS ,MUM ) )", "obj1": 0.7133891213389121, "obj2": 0.16487000637608867}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,CRS ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( RMSe - Max( ( ( DS - Min( MUR ,( RRSe - MUC ) ) ) + DS ),DS ) ) )", "obj1": 0.698744769874477, "obj2": 0.1733787471398263}, {"determining": "( Max( MRS,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + DDR ) )", "choosing": "Min( Max( ( MUR + DS ),( MUM / MUC ) ) ,( Min( MUR ,RMSe ) - Max( MUC,RRSe ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020629082974171018}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + Max( RCSe,( MUR + MUM ) ) ) - Max( MLU,MLU ) ) ) ,( RRSe / RRSe ) )", "obj1": 0.702928870292887, "obj2": 0.17193817399630296}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),Max( ( Const + ACS ),( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_RAM / DDR ) * FirstVNF_RAM ) - ( MDR * ARS ) ) ) )", "choosing": "( Min( MUC ,( CS * Max( ( DS + RMSe ),RRSe ) ) ) * ( DS - CS ) )", "obj1": 0.7928870292887029, "obj2": 0.10285208731392882}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "Min( Min( MUC ,RMSe ) ,Max( ( MUM * ( MUC + DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( RRSe ,CS ) ) ) ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.008916546563619475}, {"determining": "( Max( ( ( DDR - MRS ) - Max( ( PN * Min( Max( Min( FirstVNF_RAM ,ARS ),( MDR + FirstVNF_CPU ) ) ,Max( ( CRS * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,DDR ) ) ) ),( Min( ( RRS * FirstVNF_Mem ) ,( FirstVNF_CPU_Server * RRS ) ) - CRS ) ) ),ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - Max( CRS,FirstVNF_RAM ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( ( RCSe + ( MUR - CS ) ) + Min( ( MUC * ( ( MUC * ( Min( MUR ,RRSe ) + ( CS * CS ) ) ) - ( DS * CS ) ) ) ,RMSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01548724310013873}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7280334728033473, "obj2": 0.15718498328110153}, {"determining": "( Max( ( ( DDR - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM + PN ) + ( Const + ACS ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( FirstVNF_CPU_Server * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( Min( CS ,Max( ( Max( Max( ( DS + Max( MUR,DS ) ),CS ),Min( RRSe ,RMSe ) ) - RMSe ),MUR ) ) ,( RCSe - ( RCSe * MUR ) ) )", "obj1": 0.805439330543933, "obj2": 0.09651210666777467}, {"determining": "( BR - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( RCSe - RRSe ) - ( ( ( ( MUM + RCSe ) / DS ) - Min( RRSe ,( Min( RRSe ,MLU ) * ( ( RCSe / Max( MLU,CS ) ) / ( MUC / DS ) ) ) ) ) * Max( DS,RMSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.010211013023492274}, {"determining": "( Min( RRS ,DDR ) / ( ( ( BR / ( FirstVNF_CPU_Server - MRS ) ) / FirstVNF_CPU ) * ( ( MDR * ARS ) * ( Const * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( MUR - ( CS - RCSe ) ) / MUM ) / RRSe ) - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - MUR ) ) ,Max( MLU,( MUC - MUM ) ) ) )", "obj1": 0.8640167364016736, "obj2": 0.06498982601859188}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( ( ( MDR * CRS ) + ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( AMS ,PN ) ) ) + MRS ) )", "choosing": "( ( RCSe * RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.023384866675943382}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( ARS - CRS ) + ( DDR * DDR ) ) - ( CRS - FirstVNF_RAM_Server ) ) + MRS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUM ) ,( MLU * RMSe ) )", "obj1": 0.9497907949790795, "obj2": 0.022059458957254148}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) - Min( Const ,PN ) )", "choosing": "Min( ( ( Max( ( RRSe - ( ( ( RMSe * MUC ) / MUR ) - MUC ) ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( CS + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,MUR ) ,MUC ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( Min( MUC ,( CS * DS ) ) * ( MUM - DS ) )", "obj1": 0.8075313807531381, "obj2": 0.09563876064816497}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( FirstVNF_CPU - ( ( ( Min( ( FirstVNF_Mem * Const ) ,AMS ) * AMS ) / ( Max( Min( BR ,( Max( FirstVNF_RAM_Server,PN ) - BR ) ),CRS ) * CRS ) ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "Min( Max( ( DS * ( ( CS * RRSe ) + RCSe ) ),Min( Min( DS ,MUR ) ,( RRSe - CS ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + ( MUC - RCSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002550482499746131}, {"determining": "Max( ( ( ( BR * ACS ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( MRS / PN ) ) ),( BR / ( PN - ( ( ARS * ACS ) + AMS ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RMSe / MLU ) ) - ( ( RMSe * MUR ) / ( MLU + MUR ) ) ) * ( ( RCSe * MUR ) * MLU ) )", "obj1": 0.9665271966527197, "obj2": 0.012320646162627541}, {"determining": "( Max( Min( FirstVNF_Mem ,( FirstVNF_Mem * Min( ( Min( MDR ,ACS ) / Const ) ,Max( PN,PN ) ) ) ),FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * Min( ( ACS * BR ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / MLU ),Min( ( RRSe / MUC ) ,Max( ( Min( RCSe ,RCSe ) - RMSe ),MUR ) ) ) / ( RCSe + ( RRSe - RMSe ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) / PN ) ) )", "choosing": "( Max( ( Min( MLU ,( ( Max( MUM,( CS * RRSe ) ) / ( ( RCSe / RRSe ) / ( MUR - CS ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) * ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "Max( ( ( Min( BR ,ACS ) - ( RRS + ( CRS / AMS ) ) ) - Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( MRS / PN ) ) ),( ( ( ( AMS * ( BR / RRS ) ) / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( DS + RCSe ) * ( MLU / ( RCSe + RMSe ) ) ) ,( ( Min( MLU ,RRSe ) * ( MUM * CS ) ) * ( ( RCSe - RMSe ) / ( CS + CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.01335761123093077}, {"determining": "( Min( ARS ,( ( FirstVNF_Mem + FirstVNF_Mem ) / RRS ) ) - ( Max( ( RRS / CRS ),FirstVNF_Mem ) / FirstVNF_Mem ) )", "choosing": "Min( Min( Max( RMSe,Max( RCSe,( ( MLU / MUM ) + ( Max( MUM,( MUR / MUM ) ) * MUM ) ) ) ) ,RRSe ) ,( MLU * MLU ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( Max( MRS,( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Min( ( MLU * RMSe ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * DS ) ) ) - MUR ) ) )", "obj1": 0.9644351464435147, "obj2": 0.013034891753074476}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ACS - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MRS * MDR ) ,( Max( Const,MDR ) / ( RRS - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * ( MUM + MLU ) ) - ( Min( Max( RCSe,MUC ) ,Min( ( MUR - MLU ) ,( MUC * Min( RCSe ,MUC ) ) ) ) / ( ( RMSe * Max( MUM,( MUC - ( RRSe - RMSe ) ) ) ) + ( MUC / Max( RMSe,RRSe ) ) ) ) ),Max( ( RCSe + ( MLU - ( MUR * RMSe ) ) ),Min( ( RMSe - DS ) ,Min( DS ,Min( DS ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( ( ( ( MRS / ( RRS / FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) / FirstVNF_RAM ),CRS ) ) * ( ( ( FirstVNF_RAM - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( RCSe * ( ( MUR / CS ) / MLU ) ) - ( DS + Min( ( Max( MLU,RMSe ) * Max( DS,MUC ) ) ,RRSe ) ) ),Min( MUC ,MUM ) ) * Min( ( Max( RRSe,( RCSe * RRSe ) ) * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + Max( Max( ( PN - BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + ( Min( ( Min( RCSe ,Max( ( RRSe * ( DS * RMSe ) ),MUC ) ) - ( RRSe + RCSe ) ) ,RCSe ) - Max( ( RRSe * Min( Max( RMSe,( RCSe * Min( DS ,RCSe ) ) ) ,RRSe ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RRSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - BR ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe - Min( ( RRSe * ( Max( MLU,RRSe ) / RRSe ) ) ,MUM ) ),( Max( Min( MUM ,MUC ),RMSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - FirstVNF_RAM ) - ( FirstVNF_CPU * Max( RRS,AMS ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( AMS ,Min( ARS ,RRS ) ) ) * ( FirstVNF_CPU + Const ) )", "choosing": "( Max( Max( ( Max( ( ( ( MLU * MUM ) / RRSe ) / ( DS / CS ) ),( Min( MUC ,( RRSe + RRSe ) ) / ( RRSe - MUC ) ) ) / MUC ),DS ),( RMSe + MLU ) ) / ( ( MLU + ( MUM - MLU ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Max( BR,CRS ) ) / ( FirstVNF_CPU_Server * CRS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS - Max( RRSe,( ( ( MUR / DS ) - RCSe ) * RCSe ) ) ) ) * Max( Max( MUM,CS ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * Max( ( PN * ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - MDR ) ) / Max( FirstVNF_Mem_Server,Const ) ) ),MDR ) ) ) - ( MRS - MRS ) )", "choosing": "( ( ( RRSe + RRSe ) - DS ) + ( RMSe - ( DS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( DDR + ( BR + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC / MUM ),Min( RMSe ,CS ) ) + ( Max( RCSe,( ( ( Max( RCSe,RMSe ) + RRSe ) * ( ( ( RMSe * MLU ) * MUM ) * Min( Max( RCSe,MUC ) ,MUM ) ) ) - Max( CS,DS ) ) ) / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( ( CRS + FirstVNF_CPU ) ,( FirstVNF_CPU_Server + BR ) ) )", "choosing": "( ( MUR - RCSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - DDR ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( CS + RRSe ) * Max( MLU,Max( MUR,( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MDR * MRS ) ,( ( Const - MDR ) / ( ( MDR * ( FirstVNF_Mem_Server + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * RRSe ) / Min( ( RCSe + Max( RMSe,MUR ) ) ,( MUM + MUM ) ) ),( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem ,MDR ) + Min( AMS ,AMS ) ) ,( ( ARS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + Min( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + MRS ) / DDR ) ) ) ) ,RRS ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( RCSe - RRSe ) / ( CS / MLU ) ) ,( RRSe + ( RRSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - Max( FirstVNF_Mem_Server,RRS ) ) - ( ( FirstVNF_RAM / Max( Min( PN ,Const ),( MRS * ACS ) ) ) * ( MRS / PN ) ) ),Min( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / DS ) ) - ( ( MUR * CS ) / ( MLU + Max( ( ( ( MUM - MUC ) / MUR ) / ( MUM * DS ) ),DS ) ) ) ) * ( ( Min( MUC ,RRSe ) - Max( RCSe,RMSe ) ) - ( Max( MLU,RCSe ) * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + PN ) - ( Max( ( PN - ARS ),DDR ) * ACS ) )", "choosing": "Max( Min( ( MUM - RCSe ) ,( Max( MLU,( RRSe - RCSe ) ) - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( ( CRS * MDR ) - Min( AMS ,( RRS * ARS ) ) ) ) - ( Max( FirstVNF_CPU,AMS ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,( CS * RMSe ) ) + Max( ( ( RRSe - DS ) * MLU ),Min( RCSe ,MUC ) ) ) * ( CS - Max( MUM,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( BR + FirstVNF_Mem ),( ( FirstVNF_CPU * BR ) - Min( Const ,FirstVNF_CPU ) ) ) ,( ( ( ( Min( PN ,DDR ) * MRS ) * ( FirstVNF_RAM / ( FirstVNF_CPU / Max( BR,ACS ) ) ) ) / ARS ) * MDR ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( Const,Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "Max( Max( MUC,( MLU + RCSe ) ),( Max( ( ( DS + ( Max( ( MUC / RMSe ),Min( MUM ,MLU ) ) / RMSe ) ) - ( RCSe * Max( ( RMSe / MUR ),MLU ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( CRS + PN ) ) + Max( ARS,DDR ) )", "choosing": "Max( ( ( CS / RCSe ) * Min( MUR ,CS ) ),Min( ( ( ( MLU / ( ( Max( CS,DS ) * RMSe ) * ( ( RMSe - MUC ) * RCSe ) ) ) - ( ( CS - MUC ) + RRSe ) ) - ( ( MUC * ( Max( ( RRSe * RMSe ),RCSe ) * Max( ( MUR * RCSe ),( CS / CS ) ) ) ) / ( MUC - MUC ) ) ) ,Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + ( AMS + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,( RRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( Min( Min( MUC ,RMSe ) ,DS ) * MLU ),MUM ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),( RRSe * CS ) ) - ( ( MUM + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( ACS / FirstVNF_Mem_Server ) ) - Min( ( CRS + ARS ) ,Min( Max( ACS,Max( ( Const + FirstVNF_CPU ),BR ) ) ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,( Max( ( RCSe + MUR ),Min( MUC ,( RCSe * ( DS * MLU ) ) ) ) / ( CS - Max( RRSe,Max( MUR,MLU ) ) ) ) ) * ( MUM - ( ( RCSe * CS ) / ( ( MUR / MUM ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Min( FirstVNF_Mem_Server ,( Max( FirstVNF_CPU_Server,PN ) / Min( FirstVNF_Mem ,ARS ) ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + MRS ) - Max( ( ( ( MRS + AMS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ),Max( Min( RRS ,MRS ),( CRS + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( CS - Max( MLU,( MLU * DS ) ) ) * ( MUR - CS ) ) ,( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,AMS ) ,AMS ) + Min( DDR ,RRS ) )", "choosing": "( Min( ( CS * MUR ) ,Min( MUM ,DS ) ) / ( ( RMSe * MUR ) - ( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / BR ) + ( ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,Const ) ) - ( ( CRS / FirstVNF_RAM ) + ( CRS + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( MRS / MRS ) ) ) ) ) )", "choosing": "Max( Min( Max( MLU,( RRSe * ( MUM - MUR ) ) ) ,RRSe ),( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - MRS ) / Const ) ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM * ( MLU + DS ) ) - ( ( RCSe + RRSe ) + RRSe ) ) * ( Max( ( RMSe + ( RRSe * ( MUM / CS ) ) ),RCSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + ( ( RRS - ( MDR + MRS ) ) - FirstVNF_RAM_Server ) ) + ARS ) - ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) )", "choosing": "( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUR / CS ),Max( RMSe,Max( ( CS / ( MUC * ( DS - MUC ) ) ),Max( ( MUC * DS ),RRSe ) ) ) ) ) * ( RRSe - ( Max( MUR,MUR ) * ( MLU - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( AMS * PN ) * ( ACS * DDR ) ) ) / Max( ( PN - FirstVNF_RAM ),( Min( AMS ,MDR ) - CRS ) ) )", "choosing": "( ( MUC / MUR ) - ( ( ( RMSe - ( Min( RRSe ,MUR ) * Max( Max( RMSe,DS ),MUR ) ) ) - ( DS / ( MUM + RCSe ) ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RCSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / DS ),Min( RRSe ,Min( ( ( ( MUR - MUC ) + DS ) + DS ) ,RRSe ) ) ) - ( ( MLU + MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( ( Const + ACS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( Min( FirstVNF_RAM_Server ,ACS ) - ( CRS / FirstVNF_RAM ) ) + ( Min( Const ,( ( AMS / ( CRS / Min( DDR ,FirstVNF_CPU ) ) ) * ( PN / CRS ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MUM ,RRSe ) * ( ( RCSe - DS ) * ( MUR + RMSe ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,RCSe ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.7447698744769874, "obj2": 0.13393942608838041}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( AMS ,PN ) ) ) / ( FirstVNF_RAM_Server - Min( Max( Min( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,DDR ),( Const + FirstVNF_RAM_Server ) ) ,PN ) ) )", "choosing": "( ( ( ( RMSe + Min( ( Min( RRSe ,RRSe ) - MUM ) ,( ( ( RCSe / CS ) + MUR ) - DS ) ) ) - MUC ) + CS ) * Min( Min( MUC ,( MUR * CS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.9225941422594143, "obj2": 0.029820485855098153}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( CRS ,Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,MUM ) / Min( MUC ,MLU ) ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( Min( MUM ,MUR ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6129707112970711, "obj2": 0.26267656829094416}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( BR - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( FirstVNF_RAM * AMS ) - Min( PN ,AMS ) ) ) + Min( FirstVNF_CPU_Server ,CRS ) ) )", "choosing": "( ( RCSe - RRSe ) - ( MUM * ( ( MUC - MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( DS - Min( MUC ,DS ) ) ) ) ) ) ) )", "obj1": 0.6506276150627615, "obj2": 0.22170228102193298}, {"determining": "( Max( Min( ( FirstVNF_CPU + Const ) ,( ARS * ( MRS / FirstVNF_CPU_Server ) ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( Max( ( RCSe / RMSe ),RMSe ) / RMSe ) / RMSe ) ) ) ,Max( ( MUC - CS ),MLU ) ) )", "obj1": 0.895397489539749, "obj2": 0.04297672594991672}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( AMS ,PN ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * Max( AMS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) ) ,DS ) ) / ( ( ( ( RCSe - RRSe ) - RMSe ) * ( MUR - RRSe ) ) - ( RRSe * MLU ) ) )", "obj1": 0.8347280334728033, "obj2": 0.08002611407038848}, {"determining": "( ( MDR / ( MRS - FirstVNF_RAM ) ) - ( FirstVNF_RAM + ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / Max( Max( BR,FirstVNF_RAM_Server ),PN ) ) ) ) )", "choosing": "( ( ( ( ( ( MUR - Min( MUM ,DS ) ) / MUR ) / RMSe ) - MUM ) + RRSe ) * ( ( DS + DS ) - MLU ) )", "obj1": 0.7301255230125523, "obj2": 0.1556338865419399}, {"determining": "( Max( ( ( Min( BR ,Const ) - Min( AMS ,PN ) ) + ( FirstVNF_CPU + Const ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( ( BR * FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) ) + ( Min( Const ,( ( AMS * ( RRS + ( PN - BR ) ) ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( Min( ( ( DS / MUM ) - ( RRSe - ( RCSe - ( DS * RMSe ) ) ) ) ,MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.12500589381639257}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.04956501243364898}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( Max( BR,AMS ) - Min( AMS ,PN ) ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( BR ,( Max( ( Max( AMS,PN ) + ( ( BR * FirstVNF_Mem ) / Const ) ),DDR ) + AMS ) ) * ( CRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( RRSe - ( ( RCSe / MUR ) + RRSe ) ) - ( MUC / RCSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( ( ( DS / DS ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUM + MUC ) ) ) ) * MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7677824267782427, "obj2": 0.1149625414453676}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( AMS ,PN ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * Max( AMS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) ) ,DS ) ) / ( ( ( ( RCSe - RRSe ) - RMSe ) * ( MUR - RRSe ) ) - ( RRSe * MLU ) ) )", "obj1": 0.8242677824267782, "obj2": 0.08838542722264318}, {"determining": "( Max( ( ( ( ( ACS + MRS ) * ( PN + ( DDR * PN ) ) ) + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( ARS * Const ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( ( ( MUC / MLU ) * ( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( Max( ( RRSe - DS ),MUR ),MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8472803347280334, "obj2": 0.06813394999846897}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ( FirstVNF_Mem_Server - Min( AMS ,RRS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( Const / ACS ) ) ) * ( ACS * ARS ) ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( ( RMSe * ( ( MUM / MLU ) * DS ) ) ,DS ) ) / ( Min( RMSe ,MUR ) - Max( RRSe,MLU ) ) )", "obj1": 0.6485355648535565, "obj2": 0.2384744796248617}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( ( Min( Const ,( ( AMS / AMS ) * ( PN / CRS ) ) ) - ( ARS * MDR ) ) - ( CRS / ACS ) )", "choosing": "Max( Max( MUM,CS ),( Max( RCSe,RMSe ) * Max( RMSe,RCSe ) ) )", "obj1": 0.8661087866108786, "obj2": 0.06106715991763513}, {"determining": "( Max( ( ( Const + FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_RAM_Server ) ) + Max( Min( ( ( Const * ACS ) + BR ) ,( ( AMS * ( MDR / FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ),( MDR * ARS ) ) ) )", "choosing": "( Max( ( Min( MUM ,( DS * MUC ) ) / MLU ),Min( Max( MUR,MUC ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( ( CS * Min( Max( ( RRSe / RMSe ),RRSe ) ,MLU ) ),MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( RCSe * Max( ( RMSe / MUR ),MLU ) ) - ( DS + ( ( ( MLU - RMSe ) * Max( DS,MUC ) ) / RRSe ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 0.9456066945606695, "obj2": 0.026485592222834895}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUM ,MUR ) - RCSe ) + Max( ( ( Min( Min( ( DS - MLU ) ,Min( RCSe ,( MUC * MUC ) ) ) ,CS ) - MUC ) + MUM ),RMSe ) )", "obj1": 0.6569037656903766, "obj2": 0.2067288539009225}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( Min( Min( PN ,Min( Min( FirstVNF_Mem ,ACS ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( DS + MUC ) - ( CS - Min( Min( Max( RCSe,MUC ) ,RMSe ) ,( Min( ( DS / RRSe ) ,RCSe ) - MLU ) ) ) ) ) + ( Min( ( RMSe - MLU ) ,RRSe ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6380753138075314, "obj2": 0.24195612736266645}, {"determining": "( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( Const * ARS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8096234309623431, "obj2": 0.09285085672968701}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.0979433932701568}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ) ) - Min( Min( ACS ,AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,CS ) ) ) ) ) )", "obj1": 0.6610878661087866, "obj2": 0.20652234845425263}, {"determining": "( ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) / Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),Min( ( ( FirstVNF_Mem + BR ) * AMS ) ,Min( PN ,AMS ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * ( ( DS - ( RRSe - ( MUR / CS ) ) ) * Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.891213389121339, "obj2": 0.04478312122906941}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server + Min( DDR ,Max( ( MRS / FirstVNF_RAM_Server ),ACS ) ) ) / FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( MDR * ARS ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( CS,MLU ) + RCSe ) * Min( RRSe ,( ( Max( ( Min( RMSe ,CS ) - ( MUM - MUM ) ),( Max( RRSe,MLU ) - Min( CS ,MUM ) ) ) - ( DS * Max( RCSe,RMSe ) ) ) * CS ) ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + ( MUR + ( MUC - RMSe ) ) ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.06763870147299872}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.7907949790794979, "obj2": 0.10412513850965081}, {"determining": "( Max( ( MRS - ARS ),( PN * AMS ) ) - ( FirstVNF_CPU_Server + Const ) )", "choosing": "Max( ( ( ( Max( MUC,CS ) + MUR ) + Min( MUC ,MUM ) ) * Min( Max( RMSe,DS ) ,( MUM * Max( ( DS / RRSe ),Min( RRSe ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ),Min( CS ,MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.16569455882160966}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.805439330543933, "obj2": 0.09473957867045055}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7217573221757322, "obj2": 0.15975919179673057}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + Max( RCSe,( MUR + MUM ) ) ) - Max( MLU,MLU ) ) ) ,( RRSe / RRSe ) )", "obj1": 0.702928870292887, "obj2": 0.17193817399630296}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,CRS ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( RMSe - Max( ( ( DS - Min( MUR ,( RRSe - MUC ) ) ) + DS ),DS ) ) )", "obj1": 0.698744769874477, "obj2": 0.1733787471398263}, {"determining": "( Max( MRS,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + DDR ) )", "choosing": "Min( Max( ( MUR + DS ),( MUM / MUC ) ) ,( Min( MUR ,RMSe ) - Max( MUC,RRSe ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020629082974171018}, {"determining": "( Min( RRS ,DDR ) / ( ( ( BR / ( FirstVNF_CPU_Server - MRS ) ) / FirstVNF_CPU ) * ( ( MDR * ARS ) * ( Const * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( MUR - ( CS - RCSe ) ) / MUM ) / RRSe ) - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - MUR ) ) ,Max( MLU,( MUC - MUM ) ) ) )", "obj1": 0.8640167364016736, "obj2": 0.06498982601859188}, {"determining": "( ( ( CRS / AMS ) + ( MRS - ARS ) ) - Min( AMS ,( FirstVNF_CPU / CRS ) ) )", "choosing": "Max( ( ( ( DS * CS ) * ( MUM * Max( ( DS / RRSe ),Min( RRSe ,Min( ( RRSe - RCSe ) ,Min( MUC ,MUM ) ) ) ) ) ) * Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) ),Min( CS ,MUM ) )", "obj1": 0.7133891213389121, "obj2": 0.16487000637608867}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),Max( ( Const + ACS ),( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_RAM / DDR ) * FirstVNF_RAM ) - ( MDR * ARS ) ) ) )", "choosing": "( Min( MUC ,( CS * Max( ( DS + RMSe ),RRSe ) ) ) * ( DS - CS ) )", "obj1": 0.7928870292887029, "obj2": 0.10285208731392882}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "Min( Min( MUC ,RMSe ) ,Max( ( MUM * ( MUC + DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( RRSe ,CS ) ) ) ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.008916546563619475}, {"determining": "( Max( ( ( DDR - MRS ) - Max( ( PN * Min( Max( Min( FirstVNF_RAM ,ARS ),( MDR + FirstVNF_CPU ) ) ,Max( ( CRS * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,DDR ) ) ) ),( Min( ( RRS * FirstVNF_Mem ) ,( FirstVNF_CPU_Server * RRS ) ) - CRS ) ) ),ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - Max( CRS,FirstVNF_RAM ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( ( RCSe + ( MUR - CS ) ) + Min( ( MUC * ( ( MUC * ( Min( MUR ,RRSe ) + ( CS * CS ) ) ) - ( DS * CS ) ) ) ,RMSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01548724310013873}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7280334728033473, "obj2": 0.15718498328110153}, {"determining": "( BR - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( RCSe - RRSe ) - ( ( ( ( MUM + RCSe ) / DS ) - Min( RRSe ,( Min( RRSe ,MLU ) * ( ( RCSe / Max( MLU,CS ) ) / ( MUC / DS ) ) ) ) ) * Max( DS,RMSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.010211013023492274}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( ( ( MDR * CRS ) + ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( AMS ,PN ) ) ) + MRS ) )", "choosing": "( ( RCSe * RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.023384866675943382}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( ARS - CRS ) + ( DDR * DDR ) ) - ( CRS - FirstVNF_RAM_Server ) ) + MRS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUM ) ,( MLU * RMSe ) )", "obj1": 0.9497907949790795, "obj2": 0.022059458957254148}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) - Min( Const ,PN ) )", "choosing": "Min( ( ( Max( ( RRSe - ( ( ( RMSe * MUC ) / MUR ) - MUC ) ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( CS + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,MUR ) ,MUC ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( FirstVNF_CPU - ( ( ( Min( ( FirstVNF_Mem * Const ) ,AMS ) * AMS ) / ( Max( Min( BR ,( Max( FirstVNF_RAM_Server,PN ) - BR ) ),CRS ) * CRS ) ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "Min( Max( ( DS * ( ( CS * RRSe ) + RCSe ) ),Min( Min( DS ,MUR ) ,( RRSe - CS ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + ( MUC - RCSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002550482499746131}, {"determining": "Max( ( ( ( BR * ACS ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( MRS / PN ) ) ),( BR / ( PN - ( ( ARS * ACS ) + AMS ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RMSe / MLU ) ) - ( ( RMSe * MUR ) / ( MLU + MUR ) ) ) * ( ( RCSe * MUR ) * MLU ) )", "obj1": 0.9665271966527197, "obj2": 0.012320646162627541}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) / PN ) ) )", "choosing": "( Max( ( Min( MLU ,( ( Max( MUM,( CS * RRSe ) ) / ( ( RCSe / RRSe ) / ( MUR - CS ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) * ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( Max( Min( FirstVNF_Mem ,( FirstVNF_Mem * Min( ( Min( MDR ,ACS ) / Const ) ,Max( PN,PN ) ) ) ),FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * Min( ( ACS * BR ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / MLU ),Min( ( RRSe / MUC ) ,Max( ( Min( RCSe ,RCSe ) - RMSe ),MUR ) ) ) / ( RCSe + ( RRSe - RMSe ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "Max( ( ( Min( BR ,ACS ) - ( RRS + ( CRS / AMS ) ) ) - Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( MRS / PN ) ) ),( ( ( ( AMS * ( BR / RRS ) ) / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( DS + RCSe ) * ( MLU / ( RCSe + RMSe ) ) ) ,( ( Min( MLU ,RRSe ) * ( MUM * CS ) ) * ( ( RCSe - RMSe ) / ( CS + CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.01335761123093077}, {"determining": "( Min( ARS ,( ( FirstVNF_Mem + FirstVNF_Mem ) / RRS ) ) - ( Max( ( RRS / CRS ),FirstVNF_Mem ) / FirstVNF_Mem ) )", "choosing": "Min( Min( Max( RMSe,Max( RCSe,( ( MLU / MUM ) + ( Max( MUM,( MUR / MUM ) ) * MUM ) ) ) ) ,RRSe ) ,( MLU * MLU ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( Max( MRS,( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Min( ( MLU * RMSe ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * DS ) ) ) - MUR ) ) )", "obj1": 0.9644351464435147, "obj2": 0.013034891753074476}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) + ( ( PN * PN ) - ( DDR * ACS ) ) ) / Max( ( ( FirstVNF_RAM / ( RRS / Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,( DDR * FirstVNF_RAM_Server ) ) ) ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ),Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - RRSe ) * Max( ( RRSe + MUM ),( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MRS * MDR ) ,( Max( Const,MDR ) / ( RRS - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * ( MUM + MLU ) ) - ( Min( Max( RCSe,MUC ) ,Min( ( MUR - MLU ) ,( MUC * Min( RCSe ,MUC ) ) ) ) / ( ( RMSe * Max( MUM,( MUC - ( RRSe - RMSe ) ) ) ) + ( MUC / Max( RMSe,RRSe ) ) ) ) ),Max( ( RCSe + ( MLU - ( MUR * RMSe ) ) ),Min( ( RMSe - DS ) ,Min( DS ,Min( DS ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( ( ( ( MRS / ( RRS / FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) / FirstVNF_RAM ),CRS ) ) * ( ( ( FirstVNF_RAM - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( RCSe * ( ( MUR / CS ) / MLU ) ) - ( DS + Min( ( Max( MLU,RMSe ) * Max( DS,MUC ) ) ,RRSe ) ) ),Min( MUC ,MUM ) ) * Min( ( Max( RRSe,( RCSe * RRSe ) ) * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + Max( Max( ( PN - BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + ( Min( ( Min( RCSe ,Max( ( RRSe * ( DS * RMSe ) ),MUC ) ) - ( RRSe + RCSe ) ) ,RCSe ) - Max( ( RRSe * Min( Max( RMSe,( RCSe * Min( DS ,RCSe ) ) ) ,RRSe ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RRSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - BR ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe - Min( ( RRSe * ( Max( MLU,RRSe ) / RRSe ) ) ,MUM ) ),( Max( Min( MUM ,MUC ),RMSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - FirstVNF_RAM ) - ( FirstVNF_CPU * Max( RRS,AMS ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( AMS ,Min( ARS ,RRS ) ) ) * ( FirstVNF_CPU + Const ) )", "choosing": "( Max( Max( ( Max( ( ( ( MLU * MUM ) / RRSe ) / ( DS / CS ) ),( Min( MUC ,( RRSe + RRSe ) ) / ( RRSe - MUC ) ) ) / MUC ),DS ),( RMSe + MLU ) ) / ( ( MLU + ( MUM - MLU ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Max( BR,CRS ) ) / ( FirstVNF_CPU_Server * CRS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS - Max( RRSe,( ( ( MUR / DS ) - RCSe ) * RCSe ) ) ) ) * Max( Max( MUM,CS ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * Max( ( PN * ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - MDR ) ) / Max( FirstVNF_Mem_Server,Const ) ) ),MDR ) ) ) - ( MRS - MRS ) )", "choosing": "( ( ( RRSe + RRSe ) - DS ) + ( RMSe - ( DS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( DDR + ( BR + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC / MUM ),Min( RMSe ,CS ) ) + ( Max( RCSe,( ( ( Max( RCSe,RMSe ) + RRSe ) * ( ( ( RMSe * MLU ) * MUM ) * Min( Max( RCSe,MUC ) ,MUM ) ) ) - Max( CS,DS ) ) ) / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( ( CRS + FirstVNF_CPU ) ,( FirstVNF_CPU_Server + BR ) ) )", "choosing": "( ( MUR - RCSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - DDR ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( CS + RRSe ) * Max( MLU,Max( MUR,( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MDR * MRS ) ,( ( Const - MDR ) / ( ( MDR * ( FirstVNF_Mem_Server + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * RRSe ) / Min( ( RCSe + Max( RMSe,MUR ) ) ,( MUM + MUM ) ) ),( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem ,MDR ) + Min( AMS ,AMS ) ) ,( ( ARS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + Min( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + MRS ) / DDR ) ) ) ) ,RRS ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( RCSe - RRSe ) / ( CS / MLU ) ) ,( RRSe + ( RRSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - Max( FirstVNF_Mem_Server,RRS ) ) - ( ( FirstVNF_RAM / Max( Min( PN ,Const ),( MRS * ACS ) ) ) * ( MRS / PN ) ) ),Min( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / DS ) ) - ( ( MUR * CS ) / ( MLU + Max( ( ( ( MUM - MUC ) / MUR ) / ( MUM * DS ) ),DS ) ) ) ) * ( ( Min( MUC ,RRSe ) - Max( RCSe,RMSe ) ) - ( Max( MLU,RCSe ) * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + PN ) - ( Max( ( PN - ARS ),DDR ) * ACS ) )", "choosing": "Max( Min( ( MUM - RCSe ) ,( Max( MLU,( RRSe - RCSe ) ) - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( ( CRS * MDR ) - Min( AMS ,( RRS * ARS ) ) ) ) - ( Max( FirstVNF_CPU,AMS ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,( CS * RMSe ) ) + Max( ( ( RRSe - DS ) * MLU ),Min( RCSe ,MUC ) ) ) * ( CS - Max( MUM,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( BR + FirstVNF_Mem ),( ( FirstVNF_CPU * BR ) - Min( Const ,FirstVNF_CPU ) ) ) ,( ( ( ( Min( PN ,DDR ) * MRS ) * ( FirstVNF_RAM / ( FirstVNF_CPU / Max( BR,ACS ) ) ) ) / ARS ) * MDR ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( Const,Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "Max( Max( MUC,( MLU + RCSe ) ),( Max( ( ( DS + ( Max( ( MUC / RMSe ),Min( MUM ,MLU ) ) / RMSe ) ) - ( RCSe * Max( ( RMSe / MUR ),MLU ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( CRS + PN ) ) + Max( ARS,DDR ) )", "choosing": "Max( ( ( CS / RCSe ) * Min( MUR ,CS ) ),Min( ( ( ( MLU / ( ( Max( CS,DS ) * RMSe ) * ( ( RMSe - MUC ) * RCSe ) ) ) - ( ( CS - MUC ) + RRSe ) ) - ( ( MUC * ( Max( ( RRSe * RMSe ),RCSe ) * Max( ( MUR * RCSe ),( CS / CS ) ) ) ) / ( MUC - MUC ) ) ) ,Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + ( AMS + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,( RRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( Min( Min( MUC ,RMSe ) ,DS ) * MLU ),MUM ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),( RRSe * CS ) ) - ( ( MUM + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( ACS / FirstVNF_Mem_Server ) ) - Min( ( CRS + ARS ) ,Min( Max( ACS,Max( ( Const + FirstVNF_CPU ),BR ) ) ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,( Max( ( RCSe + MUR ),Min( MUC ,( RCSe * ( DS * MLU ) ) ) ) / ( CS - Max( RRSe,Max( MUR,MLU ) ) ) ) ) * ( MUM - ( ( RCSe * CS ) / ( ( MUR / MUM ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Min( FirstVNF_Mem_Server ,( Max( FirstVNF_CPU_Server,PN ) / Min( FirstVNF_Mem ,ARS ) ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + MRS ) - Max( ( ( ( MRS + AMS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ),Max( Min( RRS ,MRS ),( CRS + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( CS - Max( MLU,( MLU * DS ) ) ) * ( MUR - CS ) ) ,( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,AMS ) ,AMS ) + Min( DDR ,RRS ) )", "choosing": "( Min( ( CS * MUR ) ,Min( MUM ,DS ) ) / ( ( RMSe * MUR ) - ( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / BR ) + ( ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,Const ) ) - ( ( CRS / FirstVNF_RAM ) + ( CRS + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( MRS / MRS ) ) ) ) ) )", "choosing": "Max( Min( Max( MLU,( RRSe * ( MUM - MUR ) ) ) ,RRSe ),( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - MRS ) / Const ) ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM * ( MLU + DS ) ) - ( ( RCSe + RRSe ) + RRSe ) ) * ( Max( ( RMSe + ( RRSe * ( MUM / CS ) ) ),RCSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR / AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Min( MLU ,MUM ) / Max( MLU,DS ) ) ) - ( DS + ( ( ( MLU - RMSe ) * Max( DS,MUC ) ) / RRSe ) ) ),Min( MUC ,MUM ) ) + Min( Min( ( Max( Min( ( MUM / RMSe ) ,RCSe ),MLU ) * ( MLU + MUR ) ) ,MUM ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( AMS * PN ) * ( ACS * DDR ) ) ) / Max( ( PN - FirstVNF_RAM ),( Min( AMS ,MDR ) - CRS ) ) )", "choosing": "( ( MUC / MUR ) - ( ( ( RMSe - ( Min( RRSe ,MUR ) * Max( Max( RMSe,DS ),MUR ) ) ) - ( DS / ( MUM + RCSe ) ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( AMS ,PN ) ) ) / ( FirstVNF_RAM_Server - Min( Max( Min( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,DDR ),( Const + FirstVNF_RAM_Server ) ) ,PN ) ) )", "choosing": "( ( ( ( RMSe + Min( ( Min( RRSe ,RRSe ) - MUM ) ,( ( ( RCSe / CS ) + MUR ) - DS ) ) ) - MUC ) + CS ) * Min( Min( MUC ,( MUR * CS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.9225941422594143, "obj2": 0.029820485855098153}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( ( Const + ACS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( Min( FirstVNF_RAM_Server ,ACS ) - ( CRS / FirstVNF_RAM ) ) + ( Min( Const ,( ( AMS / ( CRS / Min( DDR ,FirstVNF_CPU ) ) ) * ( PN / CRS ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MUM ,RRSe ) * ( ( RCSe - DS ) * ( MUR + RMSe ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,RCSe ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.7447698744769874, "obj2": 0.13393942608838041}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( AMS ,PN ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * Max( AMS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) ) ,DS ) ) / ( ( ( ( RCSe - RRSe ) - RMSe ) * ( MUR - RRSe ) ) - ( RRSe * MLU ) ) )", "obj1": 0.8347280334728033, "obj2": 0.08002611407038848}, {"determining": "( Max( Min( ( FirstVNF_CPU + Const ) ,( ARS * ( MRS / FirstVNF_CPU_Server ) ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( Max( ( RCSe / RMSe ),RMSe ) / RMSe ) / RMSe ) ) ) ,Max( ( MUC - CS ),MLU ) ) )", "obj1": 0.895397489539749, "obj2": 0.04297672594991672}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUC + RCSe ) / MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( Max( DS,CS ) * CS ) ,CS ) ) )", "obj1": 0.6548117154811716, "obj2": 0.20305783014980566}, {"determining": "( BR - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( FirstVNF_RAM * AMS ) - Min( PN ,AMS ) ) ) + Min( FirstVNF_CPU_Server ,CRS ) ) )", "choosing": "( ( RCSe - RRSe ) - ( MUM * ( ( MUC - MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( DS - Min( MUC ,DS ) ) ) ) ) ) ) )", "obj1": 0.6506276150627615, "obj2": 0.22170228102193298}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( ( MDR / ( MRS - FirstVNF_RAM ) ) - ( FirstVNF_RAM + ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / Max( Max( BR,FirstVNF_RAM_Server ),PN ) ) ) ) )", "choosing": "( ( ( ( ( ( MUR - Min( MUM ,DS ) ) / MUR ) / RMSe ) - MUM ) + RRSe ) * ( ( DS + DS ) - MLU ) )", "obj1": 0.7301255230125523, "obj2": 0.1556338865419399}, {"determining": "( Max( ( ( Const + FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_RAM_Server ) ) + Max( Min( ( ( Const * ACS ) + BR ) ,( ( AMS * ( MDR / FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ),( MDR * ARS ) ) ) )", "choosing": "( Max( ( Min( MUM ,( DS * MUC ) ) / MLU ),Min( Max( MUR,MUC ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( ( CS * Min( Max( ( RRSe / RMSe ),RRSe ) ,MLU ) ),MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( Max( BR,AMS ) - Min( AMS ,PN ) ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( BR ,( Max( ( Max( AMS,PN ) + ( ( BR * FirstVNF_Mem ) / Const ) ),DDR ) + AMS ) ) * ( CRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( RRSe - ( ( RCSe / MUR ) + RRSe ) ) - ( MUC / RCSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( ( ( DS / DS ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUM + MUC ) ) ) ) * MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7677824267782427, "obj2": 0.1149625414453676}, {"determining": "( Max( ( ( ( ( ACS + MRS ) * ( PN + ( DDR * PN ) ) ) + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( ARS * Const ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( ( ( MUC / MLU ) * ( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( Max( ( RRSe - DS ),MUR ),MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.08810324055264004}, {"determining": "( Max( ( ( ( ( ACS + MRS ) * ( PN + ( DDR * PN ) ) ) + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( ARS * Const ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( ( ( MUC / MLU ) * ( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( Max( ( RRSe - DS ),MUR ),MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8472803347280334, "obj2": 0.06813394999846897}, {"determining": "( Min( ( MDR * ACS ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM * ( ( Min( CRS ,Max( MRS,FirstVNF_RAM_Server ) ) + ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,DS ) / RMSe ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6485355648535565, "obj2": 0.23400855983443472}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( CRS ,Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,MUM ) / Min( MUC ,MLU ) ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( Min( MUM ,MUR ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6129707112970711, "obj2": 0.25986572143879677}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( Min( Min( PN ,Min( Min( FirstVNF_Mem ,ACS ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( DS + MUC ) - ( CS - Min( Min( Max( RCSe,MUC ) ,RMSe ) ,( Min( ( DS / RRSe ) ,RCSe ) - MLU ) ) ) ) ) + ( Min( ( RMSe - MLU ) ,RRSe ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6380753138075314, "obj2": 0.24195612736266645}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( RCSe * Max( ( RMSe / MUR ),MLU ) ) - ( DS + ( ( ( MLU - RMSe ) * Max( DS,MUC ) ) / RRSe ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 0.9456066945606695, "obj2": 0.026485592222834895}, {"determining": "( Max( ( ( Min( BR ,Const ) - Min( AMS ,PN ) ) + ( FirstVNF_CPU + Const ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( ( BR * FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) ) + ( Min( Const ,( ( AMS * ( RRS + ( PN - BR ) ) ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( Min( ( ( DS / MUM ) - ( RRSe - ( RCSe - ( DS * RMSe ) ) ) ) ,MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.12500589381639257}, {"determining": "( ( ( ( FirstVNF_Mem - ( Const - AMS ) ) * Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) * Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( MUM,Min( RMSe ,( Min( RCSe ,( MLU - ( MUR + RCSe ) ) ) + RCSe ) ) ),RRSe ) * ( ( Min( RMSe ,( Min( RCSe ,MUC ) - ( MUM / Max( MUR,RCSe ) ) ) ) * Max( RCSe,DS ) ) * RRSe ) )", "obj1": 0.7907949790794979, "obj2": 0.09835665445325086}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.0511431133808049}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05810233342103458}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server + Min( DDR ,Max( ( MRS / FirstVNF_RAM_Server ),ACS ) ) ) / FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( MDR * ARS ) - ( Const - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( CS,MLU ) + RCSe ) * Min( RRSe ,( ( Max( ( Min( RMSe ,CS ) - ( MUM - MUM ) ),( Max( RRSe,MLU ) - Min( CS ,MUM ) ) ) - ( DS * Max( RCSe,RMSe ) ) ) * CS ) ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + ( MUR + ( MUC - RMSe ) ) ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.06763870147299872}, {"determining": "( Max( ( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ),( Max( FirstVNF_CPU,( ( FirstVNF_Mem * ( RRS / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( PN + ARS ) ) ) + ( ( BR * FirstVNF_RAM ) - Min( BR ,PN ) ) ) ) / ( CRS + ( ( FirstVNF_Mem - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe * Min( RRSe ,( ( MUC + DS ) + RRSe ) ) ) - ( ( ( RMSe + ( RCSe - Min( Min( RRSe ,MUR ) ,RRSe ) ) ) + RMSe ) * Min( RRSe ,MUC ) ) ) + ( RCSe + MUC ) )", "obj1": 0.7573221757322176, "obj2": 0.130569130941722}, {"determining": "( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( Const * ARS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8096234309623431, "obj2": 0.09285085672968701}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( CRS ,Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,MUM ) / Min( MUC ,MLU ) ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( Min( MUM ,MUR ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6129707112970711, "obj2": 0.25986572143879677}, {"determining": "( Max( ( MRS - ARS ),( PN * AMS ) ) - ( FirstVNF_CPU_Server + Const ) )", "choosing": "Max( ( ( ( Max( MUC,CS ) + MUR ) + Min( MUC ,MUM ) ) * Min( Max( RMSe,DS ) ,( MUM * Max( ( DS / RRSe ),Min( RRSe ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ),Min( CS ,MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.16569455882160966}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.803347280334728, "obj2": 0.09387576315376588}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7217573221757322, "obj2": 0.15975919179673057}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.797071129707113, "obj2": 0.0979433932701568}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + Max( RCSe,( MUR + MUM ) ) ) - Max( MLU,MLU ) ) ) ,( RRSe / RRSe ) )", "obj1": 0.702928870292887, "obj2": 0.17193817399630296}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - MLU ) ) ) )", "obj1": 0.8870292887029289, "obj2": 0.04740251214067483}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,CRS ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( RMSe - Max( ( ( DS - Min( MUR ,( RRSe - MUC ) ) ) + DS ),DS ) ) )", "obj1": 0.698744769874477, "obj2": 0.1733787471398263}, {"determining": "( Max( MRS,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + DDR ) )", "choosing": "Min( Max( ( MUR + DS ),( MUM / MUC ) ) ,( Min( MUR ,RMSe ) - Max( MUC,RRSe ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020629082974171018}, {"determining": "( ( ( CRS / AMS ) + ( MRS - ARS ) ) - Min( AMS ,( FirstVNF_CPU / CRS ) ) )", "choosing": "Max( ( ( ( DS * CS ) * ( MUM * Max( ( DS / RRSe ),Min( RRSe ,Min( ( RRSe - RCSe ) ,Min( MUC ,MUM ) ) ) ) ) ) * Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) ),Min( CS ,MUM ) )", "obj1": 0.7133891213389121, "obj2": 0.16487000637608867}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00872208088346264}, {"determining": "( ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) / Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),Min( ( ( FirstVNF_Mem + BR ) * AMS ) ,Min( PN ,AMS ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * ( ( DS - ( RRSe - ( MUR / CS ) ) ) * Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.891213389121339, "obj2": 0.04478312122906941}, {"determining": "( Max( ( ( DDR - MRS ) - Max( ( PN * Min( Max( Min( FirstVNF_RAM ,ARS ),( MDR + FirstVNF_CPU ) ) ,Max( ( CRS * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,DDR ) ) ) ),( Min( ( RRS * FirstVNF_Mem ) ,( FirstVNF_CPU_Server * RRS ) ) - CRS ) ) ),ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - Max( CRS,FirstVNF_RAM ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( ( RCSe + ( MUR - CS ) ) + Min( ( MUC * ( ( MUC * ( Min( MUR ,RRSe ) + ( CS * CS ) ) ) - ( DS * CS ) ) ) ,RMSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01548724310013873}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7280334728033473, "obj2": 0.15718498328110153}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.04956501243364898}, {"determining": "( BR - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( RCSe - RRSe ) - ( ( ( ( MUM + RCSe ) / DS ) - Min( RRSe ,( Min( RRSe ,MLU ) * ( ( RCSe / Max( MLU,CS ) ) / ( MUC / DS ) ) ) ) ) * Max( DS,RMSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.010211013023492274}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05810233342103458}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( ( MDR * CRS ) + ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( AMS ,PN ) ) ) + MRS ) )", "choosing": "( ( RCSe * RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.023384866675943382}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( ARS - CRS ) + ( DDR * DDR ) ) - ( CRS - FirstVNF_RAM_Server ) ) + MRS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUM ) ,( MLU * RMSe ) )", "obj1": 0.9497907949790795, "obj2": 0.022059458957254148}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) - Min( Const ,PN ) )", "choosing": "Min( ( ( Max( ( RRSe - ( ( ( RMSe * MUC ) / MUR ) - MUC ) ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( CS + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,MUR ) ,MUC ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( FirstVNF_CPU - ( ( ( Min( ( FirstVNF_Mem * Const ) ,AMS ) * AMS ) / ( Max( Min( BR ,( Max( FirstVNF_RAM_Server,PN ) - BR ) ),CRS ) * CRS ) ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "Min( Max( ( DS * ( ( CS * RRSe ) + RCSe ) ),Min( Min( DS ,MUR ) ,( RRSe - CS ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + ( MUC - RCSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002550482499746131}, {"determining": "Max( ( ( ( BR * ACS ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( MRS / PN ) ) ),( BR / ( PN - ( ( ARS * ACS ) + AMS ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RMSe / MLU ) ) - ( ( RMSe * MUR ) / ( MLU + MUR ) ) ) * ( ( RCSe * MUR ) * MLU ) )", "obj1": 0.9665271966527197, "obj2": 0.012320646162627541}, {"determining": "( Max( Min( FirstVNF_Mem ,( FirstVNF_Mem * Min( ( Min( MDR ,ACS ) / Const ) ,Max( PN,PN ) ) ) ),FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * Min( ( ACS * BR ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / MLU ),Min( ( RRSe / MUC ) ,Max( ( Min( RCSe ,RCSe ) - RMSe ),MUR ) ) ) / ( RCSe + ( RRSe - RMSe ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) / PN ) ) )", "choosing": "( Max( ( Min( MLU ,( ( Max( MUM,( CS * RRSe ) ) / ( ( RCSe / RRSe ) / ( MUR - CS ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) * ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "Max( ( ( Min( BR ,ACS ) - ( RRS + ( CRS / AMS ) ) ) - Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( MRS / PN ) ) ),( ( ( ( AMS * ( BR / RRS ) ) / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( DS + RCSe ) * ( MLU / ( RCSe + RMSe ) ) ) ,( ( Min( MLU ,RRSe ) * ( MUM * CS ) ) * ( ( RCSe - RMSe ) / ( CS + CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.01335761123093077}, {"determining": "( Min( ARS ,( ( FirstVNF_Mem + FirstVNF_Mem ) / RRS ) ) - ( Max( ( RRS / CRS ),FirstVNF_Mem ) / FirstVNF_Mem ) )", "choosing": "Min( Min( Max( RMSe,Max( RCSe,( ( MLU / MUM ) + ( Max( MUM,( MUR / MUM ) ) * MUM ) ) ) ) ,RRSe ) ,( MLU * MLU ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( Max( MRS,( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Min( ( MLU * RMSe ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * DS ) ) ) - MUR ) ) )", "obj1": 0.9644351464435147, "obj2": 0.013034891753074476}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RCSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / DS ),Min( RRSe ,Min( ( ( ( MUR - MUC ) + DS ) + DS ) ,RRSe ) ) ) - ( ( MLU + MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) + ( ( PN * PN ) - ( DDR * ACS ) ) ) / Max( ( ( FirstVNF_RAM / ( RRS / Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,( DDR * FirstVNF_RAM_Server ) ) ) ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ),Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - RRSe ) * Max( ( RRSe + MUM ),( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MRS * MDR ) ,( Max( Const,MDR ) / ( RRS - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * ( MUM + MLU ) ) - ( Min( Max( RCSe,MUC ) ,Min( ( MUR - MLU ) ,( MUC * Min( RCSe ,MUC ) ) ) ) / ( ( RMSe * Max( MUM,( MUC - ( RRSe - RMSe ) ) ) ) + ( MUC / Max( RMSe,RRSe ) ) ) ) ),Max( ( RCSe + ( MLU - ( MUR * RMSe ) ) ),Min( ( RMSe - DS ) ,Min( DS ,Min( DS ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( ( ( ( MRS / ( RRS / FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) / FirstVNF_RAM ),CRS ) ) * ( ( ( FirstVNF_RAM - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( RCSe * ( ( MUR / CS ) / MLU ) ) - ( DS + Min( ( Max( MLU,RMSe ) * Max( DS,MUC ) ) ,RRSe ) ) ),Min( MUC ,MUM ) ) * Min( ( Max( RRSe,( RCSe * RRSe ) ) * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + Max( Max( ( PN - BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + ( Min( ( Min( RCSe ,Max( ( RRSe * ( DS * RMSe ) ),MUC ) ) - ( RRSe + RCSe ) ) ,RCSe ) - Max( ( RRSe * Min( Max( RMSe,( RCSe * Min( DS ,RCSe ) ) ) ,RRSe ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RRSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - BR ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe - Min( ( RRSe * ( Max( MLU,RRSe ) / RRSe ) ) ,MUM ) ),( Max( Min( MUM ,MUC ),RMSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - FirstVNF_RAM ) - ( FirstVNF_CPU * Max( RRS,AMS ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( AMS ,Min( ARS ,RRS ) ) ) * ( FirstVNF_CPU + Const ) )", "choosing": "( Max( Max( ( Max( ( ( ( MLU * MUM ) / RRSe ) / ( DS / CS ) ),( Min( MUC ,( RRSe + RRSe ) ) / ( RRSe - MUC ) ) ) / MUC ),DS ),( RMSe + MLU ) ) / ( ( MLU + ( MUM - MLU ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Max( BR,CRS ) ) / ( FirstVNF_CPU_Server * CRS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS - Max( RRSe,( ( ( MUR / DS ) - RCSe ) * RCSe ) ) ) ) * Max( Max( MUM,CS ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * Max( ( PN * ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - MDR ) ) / Max( FirstVNF_Mem_Server,Const ) ) ),MDR ) ) ) - ( MRS - MRS ) )", "choosing": "( ( ( RRSe + RRSe ) - DS ) + ( RMSe - ( DS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( DDR + ( BR + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC / MUM ),Min( RMSe ,CS ) ) + ( Max( RCSe,( ( ( Max( RCSe,RMSe ) + RRSe ) * ( ( ( RMSe * MLU ) * MUM ) * Min( Max( RCSe,MUC ) ,MUM ) ) ) - Max( CS,DS ) ) ) / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( ( CRS + FirstVNF_CPU ) ,( FirstVNF_CPU_Server + BR ) ) )", "choosing": "( ( MUR - RCSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - DDR ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( CS + RRSe ) * Max( MLU,Max( MUR,( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MDR * MRS ) ,( ( Const - MDR ) / ( ( MDR * ( FirstVNF_Mem_Server + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * RRSe ) / Min( ( RCSe + Max( RMSe,MUR ) ) ,( MUM + MUM ) ) ),( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem ,MDR ) + Min( AMS ,AMS ) ) ,( ( ARS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + Min( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + MRS ) / DDR ) ) ) ) ,RRS ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( RCSe - RRSe ) / ( CS / MLU ) ) ,( RRSe + ( RRSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - Max( FirstVNF_Mem_Server,RRS ) ) - ( ( FirstVNF_RAM / Max( Min( PN ,Const ),( MRS * ACS ) ) ) * ( MRS / PN ) ) ),Min( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / DS ) ) - ( ( MUR * CS ) / ( MLU + Max( ( ( ( MUM - MUC ) / MUR ) / ( MUM * DS ) ),DS ) ) ) ) * ( ( Min( MUC ,RRSe ) - Max( RCSe,RMSe ) ) - ( Max( MLU,RCSe ) * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + PN ) - ( Max( ( PN - ARS ),DDR ) * ACS ) )", "choosing": "Max( Min( ( MUM - RCSe ) ,( Max( MLU,( RRSe - RCSe ) ) - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( ( CRS * MDR ) - Min( AMS ,( RRS * ARS ) ) ) ) - ( Max( FirstVNF_CPU,AMS ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,( CS * RMSe ) ) + Max( ( ( RRSe - DS ) * MLU ),Min( RCSe ,MUC ) ) ) * ( CS - Max( MUM,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( BR + FirstVNF_Mem ),( ( FirstVNF_CPU * BR ) - Min( Const ,FirstVNF_CPU ) ) ) ,( ( ( ( Min( PN ,DDR ) * MRS ) * ( FirstVNF_RAM / ( FirstVNF_CPU / Max( BR,ACS ) ) ) ) / ARS ) * MDR ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( Const,Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "Max( Max( MUC,( MLU + RCSe ) ),( Max( ( ( DS + ( Max( ( MUC / RMSe ),Min( MUM ,MLU ) ) / RMSe ) ) - ( RCSe * Max( ( RMSe / MUR ),MLU ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( CRS + PN ) ) + Max( ARS,DDR ) )", "choosing": "Max( ( ( CS / RCSe ) * Min( MUR ,CS ) ),Min( ( ( ( MLU / ( ( Max( CS,DS ) * RMSe ) * ( ( RMSe - MUC ) * RCSe ) ) ) - ( ( CS - MUC ) + RRSe ) ) - ( ( MUC * ( Max( ( RRSe * RMSe ),RCSe ) * Max( ( MUR * RCSe ),( CS / CS ) ) ) ) / ( MUC - MUC ) ) ) ,Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + ( AMS + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,( RRS / FirstVNF_CPU ) )", "choosing": "( ( Max( ( Min( Min( MUC ,RMSe ) ,DS ) * MLU ),MUM ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),( RRSe * CS ) ) - ( ( MUM + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( ACS / FirstVNF_Mem_Server ) ) - Min( ( CRS + ARS ) ,Min( Max( ACS,Max( ( Const + FirstVNF_CPU ),BR ) ) ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUC ,( Max( ( RCSe + MUR ),Min( MUC ,( RCSe * ( DS * MLU ) ) ) ) / ( CS - Max( RRSe,Max( MUR,MLU ) ) ) ) ) * ( MUM - ( ( RCSe * CS ) / ( ( MUR / MUM ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Min( FirstVNF_Mem_Server ,( Max( FirstVNF_CPU_Server,PN ) / Min( FirstVNF_Mem ,ARS ) ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + MRS ) - Max( ( ( ( MRS + AMS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ),Max( Min( RRS ,MRS ),( CRS + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( ( CS - Max( MLU,( MLU * DS ) ) ) * ( MUR - CS ) ) ,( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "( Min( AMS ,( CRS / FirstVNF_CPU ) ) - Max( ( PN - ( Min( Min( FirstVNF_Mem_Server ,( MRS + FirstVNF_CPU_Server ) ) ,( Const - FirstVNF_CPU ) ) + BR ) ),( MRS - ARS ) ) )", "choosing": "( ( RCSe * ( ( RMSe / RCSe ) / Min( RMSe ,DS ) ) ) * ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR / AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Min( MLU ,MUM ) / Max( MLU,DS ) ) ) - ( DS + ( ( ( MLU - RMSe ) * Max( DS,MUC ) ) / RRSe ) ) ),Min( MUC ,MUM ) ) + Min( Min( ( Max( Min( ( MUM / RMSe ) ,RCSe ),MLU ) * ( MLU + MUR ) ) ,MUM ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( MDR + ARS ) ) ) )", "choosing": "( Max( ( MUR + MLU ),( RCSe * MUC ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28262373344132685}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( AMS ,PN ) ) ) / ( FirstVNF_RAM_Server - Min( Max( Min( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,DDR ),( Const + FirstVNF_RAM_Server ) ) ,PN ) ) )", "choosing": "( ( ( ( RMSe + Min( ( Min( RRSe ,RRSe ) - MUM ) ,( ( ( RCSe / CS ) + MUR ) - DS ) ) ) - MUC ) + CS ) * Min( Min( MUC ,( MUR * CS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.9225941422594143, "obj2": 0.029820485855098153}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( ( Const + ACS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( Min( FirstVNF_RAM_Server ,ACS ) - ( CRS / FirstVNF_RAM ) ) + ( Min( Const ,( ( AMS / ( CRS / Min( DDR ,FirstVNF_CPU ) ) ) * ( PN / CRS ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MUM ,RRSe ) * ( ( RCSe - DS ) * ( MUR + RMSe ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,RCSe ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.7447698744769874, "obj2": 0.13393942608838041}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( ( BR * AMS ) - Min( AMS ,PN ) ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( ( Max( MLU,( MUC - CS ) ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.07877267295438474}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( Min( RCSe ,MUC ) - RCSe ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8472803347280334, "obj2": 0.06478763527200927}, {"determining": "( Max( Min( ( FirstVNF_CPU + Const ) ,( ARS * ( MRS / FirstVNF_CPU_Server ) ) ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( Max( ( RCSe / RMSe ),RMSe ) / RMSe ) / RMSe ) ) ) ,Max( ( MUC - CS ),MLU ) ) )", "obj1": 0.895397489539749, "obj2": 0.04297672594991672}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUC + RCSe ) / MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( Max( DS,CS ) * CS ) ,CS ) ) )", "obj1": 0.6548117154811716, "obj2": 0.20305783014980566}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( BR - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( FirstVNF_RAM * AMS ) - Min( PN ,AMS ) ) ) + Min( FirstVNF_CPU_Server ,CRS ) ) )", "choosing": "( ( RCSe - RRSe ) - ( MUM * ( ( MUC - MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( DS - Min( MUC ,DS ) ) ) ) ) ) ) )", "obj1": 0.6506276150627615, "obj2": 0.22170228102193298}, {"determining": "( ( MDR / ( MRS - FirstVNF_RAM ) ) - ( FirstVNF_RAM + ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / Max( Max( BR,FirstVNF_RAM_Server ),PN ) ) ) ) )", "choosing": "( ( ( ( ( ( MUR - Min( MUM ,DS ) ) / MUR ) / RMSe ) - MUM ) + RRSe ) * ( ( DS + DS ) - MLU ) )", "obj1": 0.7301255230125523, "obj2": 0.1556338865419399}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( ( Max( FirstVNF_CPU,PN ) / FirstVNF_CPU_Server ) - Min( ( ACS * Min( DDR ,ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MLU + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( Min( MUC ,MLU ),CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8786610878661087, "obj2": 0.04691030561325898}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( Max( BR,AMS ) - Min( AMS ,PN ) ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( BR ,( Max( ( Max( AMS,PN ) + ( ( BR * FirstVNF_Mem ) / Const ) ),DDR ) + AMS ) ) * ( CRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( RRSe - ( ( RCSe / MUR ) + RRSe ) ) - ( MUC / RCSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( ( ( DS / DS ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUM + MUC ) ) ) ) * MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7677824267782427, "obj2": 0.1149625414453676}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( Min( ( MDR * ACS ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM * ( ( Min( CRS ,Max( MRS,FirstVNF_RAM_Server ) ) + ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,DS ) / RMSe ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6485355648535565, "obj2": 0.23400855983443472}, {"determining": "( ( ( ARS - Max( Const,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( Max( FirstVNF_CPU_Server,Max( PN,RRS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( Min( Min( RMSe ,RRSe ) ,MUC ) - RCSe ) ) - Max( DS,RCSe ) ) * RRSe ) )", "obj1": 0.8138075313807531, "obj2": 0.08280447090819032}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( Min( Min( PN ,Min( Min( FirstVNF_Mem ,ACS ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( DS + MUC ) - ( CS - Min( Min( Max( RCSe,MUC ) ,RMSe ) ,( Min( ( DS / RRSe ) ,RCSe ) - MLU ) ) ) ) ) + ( Min( ( RMSe - MLU ) ,RRSe ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6380753138075314, "obj2": 0.24195612736266645}, {"determining": "( Max( ( ( Const + FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_RAM_Server ) ) + Max( Min( ( ( Const * ACS ) + BR ) ,( ( AMS * ( MDR / FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ),( MDR * ARS ) ) ) )", "choosing": "( Max( ( Min( MUM ,( DS * MUC ) ) / MLU ),Min( Max( MUR,MUC ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( ( CS * Min( Max( ( RRSe / RMSe ),RRSe ) ,MLU ) ),MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( RCSe * Max( ( RMSe / MUR ),MLU ) ) - ( DS + ( ( ( MLU - RMSe ) * Max( DS,MUC ) ) / RRSe ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 0.9456066945606695, "obj2": 0.026485592222834895}, {"determining": "( Max( ( ( Min( BR ,Const ) - Min( AMS ,PN ) ) + ( FirstVNF_CPU + Const ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( ( BR * FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) ) + ( Min( Const ,( ( AMS * ( RRS + ( PN - BR ) ) ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( Min( ( ( DS / MUM ) - ( RRSe - ( RCSe - ( DS * RMSe ) ) ) ) ,MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.12500589381639257}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( CRS ,Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,MUM ) / Min( MUC ,MLU ) ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( Min( MUM ,MUR ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6129707112970711, "obj2": 0.25986572143879677}, {"determining": "( Min( ( MDR * ACS ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM * ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,DS ) / Min( MLU ,MUC ) ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( ( RMSe / DS ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.608786610878661, "obj2": 0.26296011136900993}, {"determining": "( Max( ( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ),( Max( FirstVNF_CPU,( ( FirstVNF_Mem * ( RRS / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( PN + ARS ) ) ) + ( ( BR * FirstVNF_RAM ) - Min( BR ,PN ) ) ) ) / ( CRS + ( ( FirstVNF_Mem - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe * Min( RRSe ,( ( MUC + DS ) + RRSe ) ) ) - ( ( ( RMSe + ( RCSe - Min( Min( RRSe ,MUR ) ,RRSe ) ) ) + RMSe ) * Min( RRSe ,MUC ) ) ) + ( RCSe + MUC ) )", "obj1": 0.7573221757322176, "obj2": 0.130569130941722}, {"determining": "( Max( Max( ( ( FirstVNF_CPU + Const ) + ( ( BR * AMS ) - Min( AMS ,PN ) ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( ( ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7887029288702929, "obj2": 0.10517898882952356}, {"determining": "( ( ( ARS - Min( Const ,( ( ( ARS * Const ) * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.0598357560046252}, {"determining": "( ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) / Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),Min( ( ( FirstVNF_Mem + BR ) * AMS ) ,Min( PN ,AMS ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * ( ( DS - ( RRSe - ( MUR / CS ) ) ) * Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.891213389121339, "obj2": 0.04478312122906941}, {"determining": "( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( Const * ARS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8096234309623431, "obj2": 0.09285085672968701}, {"determining": "( Max( ( MRS - ARS ),( PN * AMS ) ) - ( FirstVNF_CPU_Server + Const ) )", "choosing": "Max( ( ( ( Max( MUC,CS ) + MUR ) + Min( MUC ,MUM ) ) * Min( Max( RMSe,DS ) ,( MUM * Max( ( DS / RRSe ),Min( RRSe ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ),Min( CS ,MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.16569455882160966}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05810233342103458}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7217573221757322, "obj2": 0.15975919179673057}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05810233342103458}, {"determining": "( Max( ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( Const + ACS ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( ( BR - ( RRS / ARS ) ) * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM * MUC ),( Min( Max( ( Max( MUR,RRSe ) * ( MLU - RRSe ) ),RRSe ) ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( ( MUC / RRSe ) - Min( CS ,( ( MUM + ( MUM - RMSe ) ) - MUR ) ) ) ) )", "obj1": 0.7949790794979079, "obj2": 0.09669158774083707}, {"determining": "( ( ( ( FirstVNF_Mem - ( Const - AMS ) ) * Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) * Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( MUM,Min( RMSe ,( Min( RCSe ,( MLU - ( MUR + RCSe ) ) ) + RCSe ) ) ),RRSe ) * ( ( Min( RMSe ,( Min( RCSe ,MUC ) - ( MUM / Max( MUR,RCSe ) ) ) ) * Max( RCSe,DS ) ) * RRSe ) )", "obj1": 0.7907949790794979, "obj2": 0.09835665445325086}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + Max( RCSe,( MUR + MUM ) ) ) - Max( MLU,MLU ) ) ) ,( RRSe / RRSe ) )", "obj1": 0.702928870292887, "obj2": 0.17193817399630296}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.803347280334728, "obj2": 0.09387576315376588}, {"determining": "( ( ( CRS / AMS ) + ( MRS - ARS ) ) - Min( AMS ,( FirstVNF_CPU / CRS ) ) )", "choosing": "Max( ( ( ( DS * CS ) * ( MUM * Max( ( DS / RRSe ),Min( RRSe ,Min( ( RRSe - RCSe ) ,Min( MUC ,MUM ) ) ) ) ) ) * Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) ),Min( CS ,MUM ) )", "obj1": 0.7133891213389121, "obj2": 0.16487000637608867}, {"determining": "( Max( MRS,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + DDR ) )", "choosing": "Min( Max( ( MUR + DS ),( MUM / MUC ) ) ,( Min( MUR ,RMSe ) - Max( MUC,RRSe ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020629082974171018}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( CRS ,Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,MUM ) / Min( MUC ,MLU ) ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( Min( MUM ,MUR ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6129707112970711, "obj2": 0.25986572143879677}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7280334728033473, "obj2": 0.15718498328110153}, {"determining": "( Max( ( ( DDR - MRS ) - Max( ( PN * Min( Max( Min( FirstVNF_RAM ,ARS ),( MDR + FirstVNF_CPU ) ) ,Max( ( CRS * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,DDR ) ) ) ),( Min( ( RRS * FirstVNF_Mem ) ,( FirstVNF_CPU_Server * RRS ) ) - CRS ) ) ),ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - Max( CRS,FirstVNF_RAM ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( ( RCSe + ( MUR - CS ) ) + Min( ( MUC * ( ( MUC * ( Min( MUR ,RRSe ) + ( CS * CS ) ) ) - ( DS * CS ) ) ) ,RMSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01548724310013873}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,CRS ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( RMSe - Max( ( ( DS - Min( MUR ,( RRSe - MUC ) ) ) + DS ),DS ) ) )", "obj1": 0.698744769874477, "obj2": 0.1733787471398263}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( ( MDR * CRS ) + ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( AMS ,PN ) ) ) + MRS ) )", "choosing": "( ( RCSe * RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.023384866675943382}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( ARS - CRS ) + ( DDR * DDR ) ) - ( CRS - FirstVNF_RAM_Server ) ) + MRS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUM ) ,( MLU * RMSe ) )", "obj1": 0.9497907949790795, "obj2": 0.022059458957254148}, {"determining": "( BR - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( RCSe - RRSe ) - ( ( ( ( MUM + RCSe ) / DS ) - Min( RRSe ,( Min( RRSe ,MLU ) * ( ( RCSe / Max( MLU,CS ) ) / ( MUC / DS ) ) ) ) ) * Max( DS,RMSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.010211013023492274}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( AMS / FirstVNF_CPU_Server ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * ( ( DS * CS ) + ( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUM / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.694560669456067, "obj2": 0.1746265176534872}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) - Min( Const ,PN ) )", "choosing": "Min( ( ( Max( ( RRSe - ( ( ( RMSe * MUC ) / MUR ) - MUC ) ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( CS + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,MUR ) ,MUC ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( FirstVNF_CPU - ( ( ( Min( ( FirstVNF_Mem * Const ) ,AMS ) * AMS ) / ( Max( Min( BR ,( Max( FirstVNF_RAM_Server,PN ) - BR ) ),CRS ) * CRS ) ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "Min( Max( ( DS * ( ( CS * RRSe ) + RCSe ) ),Min( Min( DS ,MUR ) ,( RRSe - CS ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + ( MUC - RCSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002550482499746131}, {"determining": "Max( ( ( ( BR * ACS ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( MRS / PN ) ) ),( BR / ( PN - ( ( ARS * ACS ) + AMS ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( RMSe / MLU ) ) - ( ( RMSe * MUR ) / ( MLU + MUR ) ) ) * ( ( RCSe * MUR ) * MLU ) )", "obj1": 0.9665271966527197, "obj2": 0.012320646162627541}, {"determining": "( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( Const * ARS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8075313807531381, "obj2": 0.09363839150903874}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) / PN ) ) )", "choosing": "( Max( ( Min( MLU ,( ( Max( MUM,( CS * RRSe ) ) / ( ( RCSe / RRSe ) / ( MUR - CS ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) * ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( Max( Min( FirstVNF_Mem ,( FirstVNF_Mem * Min( ( Min( MDR ,ACS ) / Const ) ,Max( PN,PN ) ) ) ),FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * Min( ( ACS * BR ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / MLU ),Min( ( RRSe / MUC ) ,Max( ( Min( RCSe ,RCSe ) - RMSe ),MUR ) ) ) / ( RCSe + ( RRSe - RMSe ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00872208088346264}, {"determining": "( ( BR / Const ) - Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),MDR ) )", "choosing": "( Max( DS,CS ) * ( ( RCSe + RRSe ) * ( DS / RMSe ) ) )", "obj1": 0.9769874476987448, "obj2": 0.009408934087197788}, {"determining": "( Min( ARS ,( ( FirstVNF_Mem + FirstVNF_Mem ) / RRS ) ) - ( Max( ( RRS / CRS ),FirstVNF_Mem ) / FirstVNF_Mem ) )", "choosing": "Min( Min( Max( RMSe,Max( RCSe,( ( MLU / MUM ) + ( Max( MUM,( MUR / MUM ) ) * MUM ) ) ) ) ,RRSe ) ,( MLU * MLU ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( Max( MRS,( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Min( ( MLU * RMSe ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * DS ) ) ) - MUR ) ) )", "obj1": 0.9644351464435147, "obj2": 0.013034891753074476}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Max( DDR,ACS ) ) ) - ( ( Const - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( MUM / ( MUM / ( ( MUC / RMSe ) / CS ) ) ) * Min( MUR ,( ( ( ( RRSe * ( RMSe * MUC ) ) / MUR ) / ( MUR * MUM ) ) + RMSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00872208088346264}, {"determining": "Max( ( ( Min( BR ,ACS ) - ( RRS + ( CRS / AMS ) ) ) - Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( MRS / PN ) ) ),( ( ( ( AMS * ( BR / RRS ) ) / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( DS + RCSe ) * ( MLU / ( RCSe + RMSe ) ) ) ,( ( Min( MLU ,RRSe ) * ( MUM * CS ) ) * ( ( RCSe - RMSe ) / ( CS + CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.01335761123093077}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "Max( ( ( Min( BR ,ACS ) - ( RRS + ( CRS / AMS ) ) ) - Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),( MRS / PN ) ) ),( ( ( ( AMS * ( BR / RRS ) ) / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( DS + RCSe ) * ( MLU / ( RCSe + RMSe ) ) ) ,( ( Min( MLU ,RRSe ) * ( MUM * CS ) ) * ( ( RCSe - RMSe ) / ( CS + CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.01335761123093077}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( AMS * PN ) * ( ACS * DDR ) ) ) / Max( ( PN - FirstVNF_RAM ),( Min( AMS ,MDR ) - CRS ) ) )", "choosing": "( ( MUC / MUR ) - ( ( ( RMSe - ( Min( RRSe ,MUR ) * Max( Max( RMSe,DS ),MUR ) ) ) - ( DS / ( MUM + RCSe ) ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RCSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / DS ),Min( RRSe ,Min( ( ( ( MUR - MUC ) + DS ) + DS ) ,RRSe ) ) ) - ( ( MLU + MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) + ( ( PN * PN ) - ( DDR * ACS ) ) ) / Max( ( ( FirstVNF_RAM / ( RRS / Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,( DDR * FirstVNF_RAM_Server ) ) ) ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ),Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - RRSe ) * Max( ( RRSe + MUM ),( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MRS * MDR ) ,( Max( Const,MDR ) / ( RRS - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * ( MUM + MLU ) ) - ( Min( Max( RCSe,MUC ) ,Min( ( MUR - MLU ) ,( MUC * Min( RCSe ,MUC ) ) ) ) / ( ( RMSe * Max( MUM,( MUC - ( RRSe - RMSe ) ) ) ) + ( MUC / Max( RMSe,RRSe ) ) ) ) ),Max( ( RCSe + ( MLU - ( MUR * RMSe ) ) ),Min( ( RMSe - DS ) ,Min( DS ,Min( DS ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( ( ( ( MRS / ( RRS / FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) / FirstVNF_RAM ),CRS ) ) * ( ( ( FirstVNF_RAM - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( RCSe * ( ( MUR / CS ) / MLU ) ) - ( DS + Min( ( Max( MLU,RMSe ) * Max( DS,MUC ) ) ,RRSe ) ) ),Min( MUC ,MUM ) ) * Min( ( Max( RRSe,( RCSe * RRSe ) ) * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + Max( Max( ( PN - BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + ( Min( ( Min( RCSe ,Max( ( RRSe * ( DS * RMSe ) ),MUC ) ) - ( RRSe + RCSe ) ) ,RCSe ) - Max( ( RRSe * Min( Max( RMSe,( RCSe * Min( DS ,RCSe ) ) ) ,RRSe ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RRSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - BR ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe - Min( ( RRSe * ( Max( MLU,RRSe ) / RRSe ) ) ,MUM ) ),( Max( Min( MUM ,MUC ),RMSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - FirstVNF_RAM ) - ( FirstVNF_CPU * Max( RRS,AMS ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( AMS ,Min( ARS ,RRS ) ) ) * ( FirstVNF_CPU + Const ) )", "choosing": "( Max( Max( ( Max( ( ( ( MLU * MUM ) / RRSe ) / ( DS / CS ) ),( Min( MUC ,( RRSe + RRSe ) ) / ( RRSe - MUC ) ) ) / MUC ),DS ),( RMSe + MLU ) ) / ( ( MLU + ( MUM - MLU ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Max( BR,CRS ) ) / ( FirstVNF_CPU_Server * CRS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS - Max( RRSe,( ( ( MUR / DS ) - RCSe ) * RCSe ) ) ) ) * Max( Max( MUM,CS ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * Max( ( PN * ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - MDR ) ) / Max( FirstVNF_Mem_Server,Const ) ) ),MDR ) ) ) - ( MRS - MRS ) )", "choosing": "( ( ( RRSe + RRSe ) - DS ) + ( RMSe - ( DS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( DDR + ( BR + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC / MUM ),Min( RMSe ,CS ) ) + ( Max( RCSe,( ( ( Max( RCSe,RMSe ) + RRSe ) * ( ( ( RMSe * MLU ) * MUM ) * Min( Max( RCSe,MUC ) ,MUM ) ) ) - Max( CS,DS ) ) ) / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( ( CRS + FirstVNF_CPU ) ,( FirstVNF_CPU_Server + BR ) ) )", "choosing": "( ( MUR - RCSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - DDR ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( CS + RRSe ) * Max( MLU,Max( MUR,( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MDR * MRS ) ,( ( Const - MDR ) / ( ( MDR * ( FirstVNF_Mem_Server + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * RRSe ) / Min( ( RCSe + Max( RMSe,MUR ) ) ,( MUM + MUM ) ) ),( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem ,MDR ) + Min( AMS ,AMS ) ) ,( ( ARS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + Min( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + MRS ) / DDR ) ) ) ) ,RRS ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( RCSe - RRSe ) / ( CS / MLU ) ) ,( RRSe + ( RRSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - Max( FirstVNF_Mem_Server,RRS ) ) - ( ( FirstVNF_RAM / Max( Min( PN ,Const ),( MRS * ACS ) ) ) * ( MRS / PN ) ) ),Min( ( ( Const + FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / DS ) ) - ( ( MUR * CS ) / ( MLU + Max( ( ( ( MUM - MUC ) / MUR ) / ( MUM * DS ) ),DS ) ) ) ) * ( ( Min( MUC ,RRSe ) - Max( RCSe,RMSe ) ) - ( Max( MLU,RCSe ) * ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + PN ) - ( Max( ( PN - ARS ),DDR ) * ACS ) )", "choosing": "Max( Min( ( MUM - RCSe ) ,( Max( MLU,( RRSe - RCSe ) ) - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( Min( DDR ,Max( Min( Max( ( FirstVNF_CPU_Server / ACS ),RRS ) ,Min( FirstVNF_CPU_Server ,( DDR * PN ) ) ),FirstVNF_RAM_Server ) ) + AMS ) ) - ( ( ( FirstVNF_Mem / CRS ) + Min( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ,MRS ) ) + ( ARS / RRS ) ) )", "choosing": "( ( ( ( ( ( MUR / RRSe ) + ( MUR - Min( RCSe ,MUC ) ) ) + ( RCSe + MUC ) ) - Min( MLU ,MUM ) ) + ( DS + ( MUR / ( ( Max( Max( RCSe,RMSe ),( CS + MLU ) ) / ( MUM - ( RMSe / CS ) ) ) - ( ( RMSe / MUR ) - RRSe ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( ( CS - Max( ( Min( CS ,RMSe ) / RCSe ),DS ) ) + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( ( CRS * MDR ) - Min( AMS ,( RRS * ARS ) ) ) ) - ( Max( FirstVNF_CPU,AMS ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,( CS * RMSe ) ) + Max( ( ( RRSe - DS ) * MLU ),Min( RCSe ,MUC ) ) ) * ( CS - Max( MUM,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( ( AMS + AMS ) - ( ( ( Const * DDR ) / ( MDR + ACS ) ) / ( MRS / FirstVNF_CPU ) ) )", "choosing": "( ( RCSe / MUM ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( CRS / FirstVNF_CPU ) ) - Max( ( PN - ( Min( Min( FirstVNF_Mem_Server ,( MRS + FirstVNF_CPU_Server ) ) ,( Const - FirstVNF_CPU ) ) + BR ) ),( MRS - ARS ) ) )", "choosing": "( ( RCSe * ( ( RMSe / RCSe ) / Min( RMSe ,DS ) ) ) * ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( FirstVNF_Mem * Const ) - RRS ) ) ,( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server / Max( ( BR * PN ),MRS ) ) ) - PN ) + AMS ) ) * ( Max( FirstVNF_Mem_Server,( MDR - MRS ) ) + ( DDR * ( Min( CRS ,Max( MRS,( BR * MRS ) ) ) + AMS ) ) ) )", "choosing": "( ( ( ( Min( ( ( DS - DS ) * RCSe ) ,( Max( MUC,MUM ) * Max( MLU,( MUR + DS ) ) ) ) * MUR ) / MUR ) / MUR ) + ( ( MLU - RMSe ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.28583014284586084}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( AMS ,PN ) ) ) / ( FirstVNF_RAM_Server - Min( Max( Min( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,DDR ),( Const + FirstVNF_RAM_Server ) ) ,PN ) ) )", "choosing": "( ( ( ( RMSe + Min( ( Min( RRSe ,RRSe ) - MUM ) ,( ( ( RCSe / CS ) + MUR ) - DS ) ) ) - MUC ) + CS ) * Min( Min( MUC ,( MUR * CS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.9225941422594143, "obj2": 0.029820485855098153}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( ( Const + ACS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( Min( FirstVNF_RAM_Server ,ACS ) - ( CRS / FirstVNF_RAM ) ) + ( Min( Const ,( ( AMS / ( CRS / Min( DDR ,FirstVNF_CPU ) ) ) * ( PN / CRS ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MUM ,RRSe ) * ( ( RCSe - DS ) * ( MUR + RMSe ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,RCSe ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.7447698744769874, "obj2": 0.13393942608838041}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( ( BR * AMS ) - Min( AMS ,PN ) ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( ( Max( MLU,( MUC - CS ) ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.07877267295438474}, {"determining": "( ( MDR / ( MRS - FirstVNF_RAM ) ) - ( FirstVNF_RAM + ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / Max( Max( BR,FirstVNF_RAM_Server ),PN ) ) ) ) )", "choosing": "( ( ( ( ( ( MUR - Min( MUM ,DS ) ) / MUR ) / RMSe ) - MUM ) + RRSe ) * ( ( DS + DS ) - MLU ) )", "obj1": 0.7301255230125523, "obj2": 0.1556338865419399}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( BR - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( FirstVNF_RAM * AMS ) - Min( PN ,AMS ) ) ) + Min( FirstVNF_CPU_Server ,CRS ) ) )", "choosing": "( ( RCSe - RRSe ) - ( MUM * ( ( MUC - MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( DS - Min( MUC ,DS ) ) ) ) ) ) ) )", "obj1": 0.6506276150627615, "obj2": 0.22170228102193298}, {"determining": "( ( ARS * DDR ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( ARS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.040478491347406276}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUC + RCSe ) / MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( Max( DS,CS ) * CS ) ,CS ) ) )", "obj1": 0.6548117154811716, "obj2": 0.20305783014980566}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( Min( RCSe ,MUC ) - RCSe ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8472803347280334, "obj2": 0.06478763527200927}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( Max( BR,AMS ) - Min( AMS ,PN ) ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( BR ,( Max( ( Max( AMS,PN ) + ( ( BR * FirstVNF_Mem ) / Const ) ),DDR ) + AMS ) ) * ( CRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( RRSe - ( ( RCSe / MUR ) + RRSe ) ) - ( MUC / RCSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( ( ( DS / DS ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUM + MUC ) ) ) ) * MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7677824267782427, "obj2": 0.1149625414453676}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / MRS ) ) - FirstVNF_Mem_Server ) / Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,DS ) / Min( MUC ,MLU ) ) - Min( RCSe ,MUM ) ) ) + ( MLU / ( ( CS - Max( ( Min( Max( CS,MUC ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2325247620956653}, {"determining": "( ( ( ARS - Max( Const,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( Max( FirstVNF_CPU_Server,Max( PN,RRS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( Min( Min( RMSe ,RRSe ) ,MUC ) - RCSe ) ) - Max( DS,RCSe ) ) * RRSe ) )", "obj1": 0.8138075313807531, "obj2": 0.08280447090819032}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( Max( ( PN * AMS ),( MRS - FirstVNF_Mem_Server ) ) - Min( AMS ,( Min( ( ACS * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - ACS ) ) ,( FirstVNF_Mem / Const ) ) / FirstVNF_CPU ) ) )", "choosing": "Min( Min( Max( MUR,Max( RCSe,( MUR + MUM ) ) ) ,RRSe ) ,( ( MUR * RRSe ) / ( MUR * CS ) ) )", "obj1": 0.6150627615062761, "obj2": 0.25302594318909555}, {"determining": "( Max( ( ( Const + FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_RAM_Server ) ) + Max( Min( ( ( Const * ACS ) + BR ) ,( ( AMS * ( MDR / FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ),( MDR * ARS ) ) ) )", "choosing": "( Max( ( Min( MUM ,( DS * MUC ) ) / MLU ),Min( Max( MUR,MUC ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( ( CS * Min( Max( ( RRSe / RMSe ),RRSe ) ,MLU ) ),MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Min( ( ( DS + RCSe ) * ( MLU / ( RCSe + RMSe ) ) ) ,( ( Min( MLU ,RRSe ) * ( MUM * CS ) ) * ( ( RCSe - RMSe ) / ( CS + CS ) ) ) )", "obj1": 0.9393305439330544, "obj2": 0.02424635149184312}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( Min( Min( PN ,Min( Min( FirstVNF_Mem ,ACS ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( DS + MUC ) - ( CS - Min( Min( Max( RCSe,MUC ) ,RMSe ) ,( Min( ( DS / RRSe ) ,RCSe ) - MLU ) ) ) ) ) + ( Min( ( RMSe - MLU ) ,RRSe ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6380753138075314, "obj2": 0.24195612736266645}, {"determining": "( Max( ( ( Min( BR ,Const ) - Min( AMS ,PN ) ) + ( FirstVNF_CPU + Const ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( ( BR * FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) ) + ( Min( Const ,( ( AMS * ( RRS + ( PN - BR ) ) ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( Min( ( ( DS / MUM ) - ( RRSe - ( RCSe - ( DS * RMSe ) ) ) ) ,MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.12500589381639257}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( MDR + ARS ) ) ) )", "choosing": "( Max( ( MUR + MLU ),( RCSe * MUC ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28262373344132685}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + RRSe ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04691030561325898}, {"determining": "( Min( ( MDR * ACS ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM * ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,DS ) / Min( MLU ,MUC ) ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( ( RMSe / DS ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.608786610878661, "obj2": 0.26296011136900993}, {"determining": "( Max( ( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ),( Max( FirstVNF_CPU,( ( FirstVNF_Mem * ( RRS / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( PN + ARS ) ) ) + ( ( BR * FirstVNF_RAM ) - Min( BR ,PN ) ) ) ) / ( CRS + ( ( FirstVNF_Mem - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe * Min( RRSe ,( ( MUC + DS ) + RRSe ) ) ) - ( ( ( RMSe + ( RCSe - Min( Min( RRSe ,MUR ) ,RRSe ) ) ) + RMSe ) * Min( RRSe ,MUC ) ) ) + ( RCSe + MUC ) )", "obj1": 0.7573221757322176, "obj2": 0.130569130941722}, {"determining": "( Max( Max( ( ( FirstVNF_CPU + Const ) + ( ( BR * AMS ) - Min( AMS ,PN ) ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( ( ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7887029288702929, "obj2": 0.10517898882952356}, {"determining": "( ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) / Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),Min( ( ( FirstVNF_Mem + BR ) * AMS ) ,Min( PN ,AMS ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * ( ( DS - ( RRSe - ( MUR / CS ) ) ) * Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.891213389121339, "obj2": 0.04478312122906941}, {"determining": "( Max( ( PN * AMS ),( Max( ( RRS + Min( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - BR ) ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ),( MRS - ARS ) ) - ( AMS - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( CS * RMSe ) * ( ( Max( MLU,MUC ) + ( CS / MUC ) ) / Max( ( MUC - MUC ),MUC ) ) )", "obj1": 0.7196652719665272, "obj2": 0.15682738639378044}, {"determining": "( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( Const * ARS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8096234309623431, "obj2": 0.09285085672968701}, {"determining": "( Max( ( MRS - ARS ),( PN * AMS ) ) - ( FirstVNF_CPU_Server + Const ) )", "choosing": "Max( ( ( ( Max( MUC,CS ) + MUR ) + Min( MUC ,MUM ) ) * Min( Max( RMSe,DS ) ,( MUM * Max( ( DS / RRSe ),Min( RRSe ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ),Min( CS ,MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.16569455882160966}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05810233342103458}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( ( Max( FirstVNF_CPU,PN ) / FirstVNF_CPU_Server ) - Min( ( ACS * Min( DDR ,ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MLU + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( Min( MUC ,MLU ),CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8786610878661087, "obj2": 0.04691030561325898}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05810233342103458}, {"determining": "( Max( ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( Const + ACS ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( ( BR - ( RRS / ARS ) ) * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM * MUC ),( Min( Max( ( Max( MUR,RRSe ) * ( MLU - RRSe ) ),RRSe ) ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( ( MUC / RRSe ) - Min( CS ,( ( MUM + ( MUM - RMSe ) ) - MUR ) ) ) ) )", "obj1": 0.7949790794979079, "obj2": 0.09669158774083707}, {"determining": "( ( ( ( FirstVNF_Mem - ( Const - AMS ) ) * Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) * Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( MUM,Min( RMSe ,( Min( RCSe ,( MLU - ( MUR + RCSe ) ) ) + RCSe ) ) ),RRSe ) * ( ( Min( RMSe ,( Min( RCSe ,MUC ) - ( MUM / Max( MUR,RCSe ) ) ) ) * Max( RCSe,DS ) ) * RRSe ) )", "obj1": 0.7907949790794979, "obj2": 0.09835665445325086}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( Min( RCSe ,MUC ) - MLU ) ) * Max( RCSe,DS ) ) * RRSe ) )", "obj1": 0.8535564853556485, "obj2": 0.061725647798514145}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + Max( RCSe,( MUR + MUM ) ) ) - Max( MLU,MLU ) ) ) ,( RRSe / RRSe ) )", "obj1": 0.702928870292887, "obj2": 0.17193817399630296}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.803347280334728, "obj2": 0.09387576315376588}, {"determining": "( ( ( CRS / AMS ) + ( MRS - ARS ) ) - Min( AMS ,( FirstVNF_CPU / CRS ) ) )", "choosing": "Max( ( ( ( DS * CS ) * ( MUM * Max( ( DS / RRSe ),Min( RRSe ,Min( ( RRSe - RCSe ) ,Min( MUC ,MUM ) ) ) ) ) ) * Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) ),Min( CS ,MUM ) )", "obj1": 0.7133891213389121, "obj2": 0.16487000637608867}, {"determining": "( Max( MRS,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + DDR ) )", "choosing": "Min( Max( ( MUR + DS ),( MUM / MUC ) ) ,( Min( MUR ,RMSe ) - Max( MUC,RRSe ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020629082974171018}, {"determining": "( Max( ( ( DDR - MRS ) - Max( ( PN * Min( Max( Min( FirstVNF_RAM ,ARS ),( MDR + FirstVNF_CPU ) ) ,Max( ( CRS * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,DDR ) ) ) ),( Min( ( RRS * FirstVNF_Mem ) ,( FirstVNF_CPU_Server * RRS ) ) - CRS ) ) ),ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - Max( CRS,FirstVNF_RAM ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( ( RCSe + ( MUR - CS ) ) + Min( ( MUC * ( ( MUC * ( Min( MUR ,RRSe ) + ( CS * CS ) ) ) - ( DS * CS ) ) ) ,RMSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01548724310013873}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( CRS ,Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,MUM ) / Min( MUC ,MLU ) ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( Min( MUM ,MUR ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6129707112970711, "obj2": 0.25986572143879677}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) - Min( Const ,PN ) )", "choosing": "Min( ( ( Max( ( RRSe - ( ( ( RMSe * MUC ) / MUR ) - MUC ) ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( CS + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,MUR ) ,MUC ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( ( MDR * CRS ) + ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( AMS ,PN ) ) ) + MRS ) )", "choosing": "( ( RCSe * RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.023384866675943382}, {"determining": "( ( ( ARS - Min( Const ,( ( ( ARS * Const ) * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.0598357560046252}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,CRS ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( RMSe - Max( ( ( DS - Min( MUR ,( RRSe - MUC ) ) ) + DS ),DS ) ) )", "obj1": 0.698744769874477, "obj2": 0.1733787471398263}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( ARS - CRS ) + ( DDR * DDR ) ) - ( CRS - FirstVNF_RAM_Server ) ) + MRS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUM ) ,( MLU * RMSe ) )", "obj1": 0.9497907949790795, "obj2": 0.022059458957254148}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( BR - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( RCSe - RRSe ) - ( ( ( ( MUM + RCSe ) / DS ) - Min( RRSe ,( Min( RRSe ,MLU ) * ( ( RCSe / Max( MLU,CS ) ) / ( MUC / DS ) ) ) ) ) * Max( DS,RMSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.010211013023492274}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( AMS / FirstVNF_CPU_Server ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * ( ( DS * CS ) + ( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUM / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.694560669456067, "obj2": 0.1746265176534872}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( ( Const * Max( RRS,AMS ) ) - PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( RCSe * ( RCSe + MUM ) ) * RMSe ) ) ) ,Max( ( CS * DS ),( Max( RRSe,CS ) - MUR ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( MRS,( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Min( ( MLU * RMSe ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * DS ) ) ) - MUR ) ) )", "obj1": 0.9644351464435147, "obj2": 0.013034891753074476}, {"determining": "( FirstVNF_CPU - ( ( ( Min( ( FirstVNF_Mem * Const ) ,AMS ) * AMS ) / ( Max( Min( BR ,( Max( FirstVNF_RAM_Server,PN ) - BR ) ),CRS ) * CRS ) ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "Min( Max( ( DS * ( ( CS * RRSe ) + RCSe ) ),Min( Min( DS ,MUR ) ,( RRSe - CS ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + ( MUC - RCSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002550482499746131}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.011381633189458638}, {"determining": "( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( Const * ARS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8075313807531381, "obj2": 0.09363839150903874}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( RMSe / ( MUC * ( ( MLU / MLU ) - ( Max( CS,DS ) + DS ) ) ) ),( Min( DS ,( MUR * ( ( DS * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( MUC,MLU ) ) ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.013311730069588742}, {"determining": "( Max( Min( FirstVNF_Mem ,( FirstVNF_Mem * Min( ( Min( MDR ,ACS ) / Const ) ,Max( PN,PN ) ) ) ),FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * Min( ( ACS * BR ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / MLU ),Min( ( RRSe / MUC ) ,Max( ( Min( RCSe ,RCSe ) - RMSe ),MUR ) ) ) / ( RCSe + ( RRSe - RMSe ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( CRS ,Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,MUM ) / Min( MUC ,MLU ) ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( Min( MUM ,MUR ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6129707112970711, "obj2": 0.25986572143879677}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Max( FirstVNF_CPU_Server,( MDR / ARS ) ) ) * ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( ACS - FirstVNF_CPU ) + ( CRS + DDR ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( DS / MLU ),Max( Min( Min( RCSe ,Min( RMSe ,MUR ) ) ,DS ),RCSe ) ) ) + CS ) * Min( ( MUC - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00872208088346264}, {"determining": "( ( BR / Const ) - Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),MDR ) )", "choosing": "( Max( DS,CS ) * ( ( RCSe + RRSe ) * ( DS / RMSe ) ) )", "obj1": 0.9769874476987448, "obj2": 0.009408934087197788}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) / PN ) ) )", "choosing": "( Max( ( Min( MLU ,( ( Max( MUM,( CS * RRSe ) ) / ( ( RCSe / RRSe ) / ( MUR - CS ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) * ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Max( DDR,ACS ) ) ) - ( ( Const - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( MUM / ( MUM / ( ( MUC / RMSe ) / CS ) ) ) * Min( MUR ,( ( ( ( RRSe * ( RMSe * MUC ) ) / MUR ) / ( MUR * MUM ) ) + RMSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00872208088346264}, {"determining": "( Min( ARS ,( ( FirstVNF_Mem + FirstVNF_Mem ) / RRS ) ) - ( Max( ( RRS / CRS ),FirstVNF_Mem ) / FirstVNF_Mem ) )", "choosing": "Min( Min( Max( RMSe,Max( RCSe,( ( MLU / MUM ) + ( Max( MUM,( MUR / MUM ) ) * MUM ) ) ) ) ,RRSe ) ,( MLU * MLU ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR / AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Min( MLU ,MUM ) / Max( MLU,DS ) ) ) - ( DS + ( ( ( MLU - RMSe ) * Max( DS,MUC ) ) / RRSe ) ) ),Min( MUC ,MUM ) ) + Min( Min( ( Max( Min( ( MUM / RMSe ) ,RCSe ),MLU ) * ( MLU + MUR ) ) ,MUM ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( AMS * PN ) * ( ACS * DDR ) ) ) / Max( ( PN - FirstVNF_RAM ),( Min( AMS ,MDR ) - CRS ) ) )", "choosing": "( ( MUC / MUR ) - ( ( ( RMSe - ( Min( RRSe ,MUR ) * Max( Max( RMSe,DS ),MUR ) ) ) - ( DS / ( MUM + RCSe ) ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RCSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / DS ),Min( RRSe ,Min( ( ( ( MUR - MUC ) + DS ) + DS ) ,RRSe ) ) ) - ( ( MLU + MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) + ( ( PN * PN ) - ( DDR * ACS ) ) ) / Max( ( ( FirstVNF_RAM / ( RRS / Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,( DDR * FirstVNF_RAM_Server ) ) ) ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ),Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - RRSe ) * Max( ( RRSe + MUM ),( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MRS * MDR ) ,( Max( Const,MDR ) / ( RRS - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * ( MUM + MLU ) ) - ( Min( Max( RCSe,MUC ) ,Min( ( MUR - MLU ) ,( MUC * Min( RCSe ,MUC ) ) ) ) / ( ( RMSe * Max( MUM,( MUC - ( RRSe - RMSe ) ) ) ) + ( MUC / Max( RMSe,RRSe ) ) ) ) ),Max( ( RCSe + ( MLU - ( MUR * RMSe ) ) ),Min( ( RMSe - DS ) ,Min( DS ,Min( DS ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( ( ( ( MRS / ( RRS / FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) / FirstVNF_RAM ),CRS ) ) * ( ( ( FirstVNF_RAM - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( RCSe * ( ( MUR / CS ) / MLU ) ) - ( DS + Min( ( Max( MLU,RMSe ) * Max( DS,MUC ) ) ,RRSe ) ) ),Min( MUC ,MUM ) ) * Min( ( Max( RRSe,( RCSe * RRSe ) ) * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + Max( Max( ( PN - BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + ( Min( ( Min( RCSe ,Max( ( RRSe * ( DS * RMSe ) ),MUC ) ) - ( RRSe + RCSe ) ) ,RCSe ) - Max( ( RRSe * Min( Max( RMSe,( RCSe * Min( DS ,RCSe ) ) ) ,RRSe ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RRSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - BR ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe - Min( ( RRSe * ( Max( MLU,RRSe ) / RRSe ) ) ,MUM ) ),( Max( Min( MUM ,MUC ),RMSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - FirstVNF_RAM ) - ( FirstVNF_CPU * Max( RRS,AMS ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( AMS ,Min( ARS ,RRS ) ) ) * ( FirstVNF_CPU + Const ) )", "choosing": "( Max( Max( ( Max( ( ( ( MLU * MUM ) / RRSe ) / ( DS / CS ) ),( Min( MUC ,( RRSe + RRSe ) ) / ( RRSe - MUC ) ) ) / MUC ),DS ),( RMSe + MLU ) ) / ( ( MLU + ( MUM - MLU ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Max( BR,CRS ) ) / ( FirstVNF_CPU_Server * CRS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS - Max( RRSe,( ( ( MUR / DS ) - RCSe ) * RCSe ) ) ) ) * Max( Max( MUM,CS ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * Max( ( PN * ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - MDR ) ) / Max( FirstVNF_Mem_Server,Const ) ) ),MDR ) ) ) - ( MRS - MRS ) )", "choosing": "( ( ( RRSe + RRSe ) - DS ) + ( RMSe - ( DS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( DDR + ( BR + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC / MUM ),Min( RMSe ,CS ) ) + ( Max( RCSe,( ( ( Max( RCSe,RMSe ) + RRSe ) * ( ( ( RMSe * MLU ) * MUM ) * Min( Max( RCSe,MUC ) ,MUM ) ) ) - Max( CS,DS ) ) ) / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( ( CRS + FirstVNF_CPU ) ,( FirstVNF_CPU_Server + BR ) ) )", "choosing": "( ( MUR - RCSe ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,Min( ( AMS - DDR ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( CS + RRSe ) * Max( MLU,Max( MUR,( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MDR * MRS ) ,( ( Const - MDR ) / ( ( MDR * ( FirstVNF_Mem_Server + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * RRSe ) / Min( ( RCSe + Max( RMSe,MUR ) ) ,( MUM + MUM ) ) ),( MUM / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem ,MDR ) + Min( AMS ,AMS ) ) ,( ( ARS + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + Min( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + MRS ) / DDR ) ) ) ) ,RRS ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( RCSe - RRSe ) / ( CS / MLU ) ) ,( RRSe + ( RRSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( Max( MDR,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( MUM * RCSe ) ,( ( RMSe * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Max( DDR,ACS ) ) ) - ( ( Const - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( MUM / ( MUM / ( ( MUC / RMSe ) / CS ) ) ) * Min( MUR ,( ( ( ( RRSe * ( RMSe * MUC ) ) / MUR ) / ( MUR * MUM ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( ( ( Const * DDR ) / ( MDR + ACS ) ) / ( MRS / FirstVNF_CPU ) ) )", "choosing": "( ( RCSe / MUM ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( FirstVNF_Mem * Const ) - RRS ) ) ,( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server / Max( ( BR * PN ),MRS ) ) ) - PN ) + AMS ) ) * ( Max( FirstVNF_Mem_Server,( MDR - MRS ) ) + ( DDR * ( Min( CRS ,Max( MRS,( BR * MRS ) ) ) + AMS ) ) ) )", "choosing": "( ( ( ( Min( ( ( DS - DS ) * RCSe ) ,( Max( MUC,MUM ) * Max( MLU,( MUR + DS ) ) ) ) * MUR ) / MUR ) / MUR ) + ( ( MLU - RMSe ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.28583014284586084}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( AMS - FirstVNF_CPU_Server ) ),( ( BR * AMS ) - Min( AMS ,PN ) ) ) / ( FirstVNF_RAM_Server - Min( Max( Min( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + FirstVNF_CPU ) ,DDR ),( Const + FirstVNF_RAM_Server ) ) ,PN ) ) )", "choosing": "( ( ( ( RMSe + Min( ( Min( RRSe ,RRSe ) - MUM ) ,( ( ( RCSe / CS ) + MUR ) - DS ) ) ) - MUC ) + CS ) * Min( Min( MUC ,( MUR * CS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.9225941422594143, "obj2": 0.029820485855098153}, {"determining": "( ( ARS * DDR ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( ARS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.040478491347406276}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( ( Const + ACS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( Min( FirstVNF_RAM_Server ,ACS ) - ( CRS / FirstVNF_RAM ) ) + ( Min( Const ,( ( AMS / ( CRS / Min( DDR ,FirstVNF_CPU ) ) ) * ( PN / CRS ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MUM ,RRSe ) * ( ( RCSe - DS ) * ( MUR + RMSe ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,RCSe ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.7447698744769874, "obj2": 0.13393942608838041}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( ( ( ARS - Max( Const,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( Max( FirstVNF_CPU_Server,Max( PN,RRS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( Min( Min( RMSe ,RRSe ) ,MUC ) - RCSe ) ) - Max( DS,RCSe ) ) * RRSe ) )", "obj1": 0.8138075313807531, "obj2": 0.08280447090819032}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.7343096234309623, "obj2": 0.15382417325928774}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( Max( BR,AMS ) - Min( AMS ,PN ) ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( BR ,( Max( ( Max( AMS,PN ) + ( ( BR * FirstVNF_Mem ) / Const ) ),DDR ) + AMS ) ) * ( CRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( RRSe - ( ( RCSe / MUR ) + RRSe ) ) - ( MUC / RCSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( ( ( DS / DS ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUM + MUC ) ) ) ) * MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7677824267782427, "obj2": 0.1149625414453676}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / MRS ) ) - FirstVNF_Mem_Server ) / Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,DS ) / Min( MUC ,MLU ) ) - Min( RCSe ,MUM ) ) ) + ( MLU / ( ( CS - Max( ( Min( Max( CS,MUC ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2325247620956653}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( FirstVNF_RAM,Min( BR ,FirstVNF_Mem_Server ) ) * ARS ) ) ) ) - DDR ) * Min( ( ( FirstVNF_RAM_Server / MDR ) / FirstVNF_CPU_Server ) ,Min( ( ACS * ( DDR - ACS ) ) ,( Const / Max( FirstVNF_RAM,( MDR * RRS ) ) ) ) ) )", "choosing": "( Max( Max( ( ( RMSe * ( DS / Max( CS,RMSe ) ) ) * Max( RRSe,( RCSe / DS ) ) ),DS ),( Max( DS,Min( ( ( MLU - RMSe ) - MUM ) ,MUR ) ) + ( ( ( CS + Min( MUC ,( MUM - RRSe ) ) ) * RCSe ) + RMSe ) ) ) / ( ( ( MUR + RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( Max( RMSe,MUM ) + ( MUR * DS ) ) ,( ( RRSe / MLU ) / Max( MLU,CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.07230959894124851}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "( BR - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( FirstVNF_RAM * AMS ) - Min( PN ,AMS ) ) ) + Min( FirstVNF_CPU_Server ,CRS ) ) )", "choosing": "( ( RCSe - RRSe ) - ( MUM * ( ( MUC - MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( DS - Min( MUC ,DS ) ) ) ) ) ) ) )", "obj1": 0.6485355648535565, "obj2": 0.21967476026117436}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUC + RCSe ) / MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( Max( DS,CS ) * CS ) ,CS ) ) )", "obj1": 0.6548117154811716, "obj2": 0.20305783014980566}, {"determining": "( Max( ( PN * AMS ),( MRS - FirstVNF_Mem_Server ) ) - Min( AMS ,( Min( ( ACS * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - ACS ) ) ,( FirstVNF_Mem / Const ) ) / FirstVNF_CPU ) ) )", "choosing": "Min( Min( Max( MUR,Max( RCSe,( MUR + MUM ) ) ) ,RRSe ) ,( ( MUR * RRSe ) / ( MUR * CS ) ) )", "obj1": 0.6150627615062761, "obj2": 0.25302594318909555}, {"determining": "( ( ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) * ( ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + ( ACS + MRS ) ) / PN ) ) ) - DDR ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( ( Min( ( ( ( RRSe * Min( MUR ,RMSe ) ) + ( MLU * MLU ) ) + RCSe ) ,RCSe ) / MUM ) * ( CS + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.9393305439330544, "obj2": 0.024204825722000133}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( Min( Min( PN ,Min( Min( FirstVNF_Mem ,ACS ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( DS + MUC ) - ( CS - Min( Min( Max( RCSe,MUC ) ,RMSe ) ,( Min( ( DS / RRSe ) ,RCSe ) - MLU ) ) ) ) ) + ( Min( ( RMSe - MLU ) ,RRSe ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6380753138075314, "obj2": 0.24195612736266645}, {"determining": "( Max( ( ( Min( BR ,Const ) - Min( AMS ,PN ) ) + ( FirstVNF_CPU + Const ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( ( BR * FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) ) + ( Min( Const ,( ( AMS * ( RRS + ( PN - BR ) ) ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( Min( ( ( DS / MUM ) - ( RRSe - ( RCSe - ( DS * RMSe ) ) ) ) ,MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.12500589381639257}, {"determining": "( Max( ( ( Const + FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_RAM_Server ) ) + Max( Min( ( ( Const * ACS ) + BR ) ,( ( AMS * ( MDR / FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ),( MDR * ARS ) ) ) )", "choosing": "( Max( ( Min( MUM ,( DS * MUC ) ) / MLU ),Min( Max( MUR,MUC ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( ( CS * Min( Max( ( RRSe / RMSe ),RRSe ) ,MLU ) ),MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ( AMS + AMS ) - ( Min( ( BR - MDR ) ,BR ) / ( ( Const * DDR ) / ( MDR + MDR ) ) ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUM ) ,( MLU * RMSe ) )", "obj1": 0.6506276150627615, "obj2": 0.21075601012918144}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( Min( RCSe ,MUC ) - RCSe ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8472803347280334, "obj2": 0.06478763527200927}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( MDR + ARS ) ) ) )", "choosing": "( Max( ( MUR + MLU ),( RCSe * MUC ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28262373344132685}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( Max( MDR,( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( ( RCSe - MUC ) * RCSe ) * RRSe ) )", "obj1": 0.8368200836820083, "obj2": 0.07093086112945209}, {"determining": "( Min( ( MDR * ACS ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM * ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,DS ) / Min( MLU ,MUC ) ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( ( RMSe / DS ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.608786610878661, "obj2": 0.26296011136900993}, {"determining": "( Max( ( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ),( Max( FirstVNF_CPU,( ( FirstVNF_Mem * ( RRS / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( PN + ARS ) ) ) + ( ( BR * FirstVNF_RAM ) - Min( BR ,PN ) ) ) ) / ( CRS + ( ( FirstVNF_Mem - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe * Min( RRSe ,( ( MUC + DS ) + RRSe ) ) ) - ( ( ( RMSe + ( RCSe - Min( Min( RRSe ,MUR ) ,RRSe ) ) ) + RMSe ) * Min( RRSe ,MUC ) ) ) + ( RCSe + MUC ) )", "obj1": 0.7573221757322176, "obj2": 0.130569130941722}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.7845188284518828, "obj2": 0.10474628867822267}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * CRS )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( ( MUM * ( MUC / DS ) ) - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8870292887029289, "obj2": 0.0445550790495698}, {"determining": "( Max( ( PN * AMS ),( Max( ( RRS + Min( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - BR ) ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ),( MRS - ARS ) ) - ( AMS - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( CS * RMSe ) * ( ( Max( MLU,MUC ) + ( CS / MUC ) ) / Max( ( MUC - MUC ),MUC ) ) )", "obj1": 0.7196652719665272, "obj2": 0.15682738639378044}, {"determining": "( Max( ( MRS - ARS ),( PN * AMS ) ) - ( FirstVNF_CPU_Server + Const ) )", "choosing": "Max( ( ( ( Max( MUC,CS ) + MUR ) + Min( MUC ,MUM ) ) * Min( Max( RMSe,DS ) ,( MUM * Max( ( DS / RRSe ),Min( RRSe ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ),Min( CS ,MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.16569455882160966}, {"determining": "( ( ( ( FirstVNF_Mem - ( Const - AMS ) ) * Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) * Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( MUM,Min( RMSe ,( Min( RCSe ,( MLU - ( MUR + RCSe ) ) ) + RCSe ) ) ),RRSe ) * ( ( Min( RMSe ,( Min( RCSe ,MUC ) - ( MUM / Max( MUR,RCSe ) ) ) ) * Max( RCSe,DS ) ) * RRSe ) )", "obj1": 0.7907949790794979, "obj2": 0.09835665445325086}, {"determining": "( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( Const * ARS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( CS,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8096234309623431, "obj2": 0.09227773683868838}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( RRSe / MUC ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( CS,RRSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8661087866108786, "obj2": 0.05195434606807462}, {"determining": "( Max( ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( Const + ACS ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( ( BR - ( RRS / ARS ) ) * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM * MUC ),( Min( Max( ( Max( MUR,RRSe ) * ( MLU - RRSe ) ),RRSe ) ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( ( MUC / RRSe ) - Min( CS ,( ( MUM + ( MUM - RMSe ) ) - MUR ) ) ) ) )", "obj1": 0.7949790794979079, "obj2": 0.09669158774083707}, {"determining": "( ( MDR / ( MRS - FirstVNF_RAM ) ) - ( FirstVNF_RAM + ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / Max( Max( BR,FirstVNF_RAM_Server ),PN ) ) ) ) )", "choosing": "( ( ( ( ( ( MUR - Min( MUM ,DS ) ) / MUR ) / RMSe ) - MUM ) + RRSe ) * ( ( DS + DS ) - MLU ) )", "obj1": 0.7301255230125523, "obj2": 0.1556338865419399}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( Min( RCSe ,MUC ) - MLU ) ) * Max( RCSe,DS ) ) * RRSe ) )", "obj1": 0.8535564853556485, "obj2": 0.061725647798514145}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + Max( RCSe,( MUR + MUM ) ) ) - Max( MLU,MLU ) ) ) ,( RRSe / RRSe ) )", "obj1": 0.702928870292887, "obj2": 0.17193817399630296}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.803347280334728, "obj2": 0.09387576315376588}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUC / MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / MUR ) ,RCSe ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.7133891213389121, "obj2": 0.1638314200932266}, {"determining": "( Max( MRS,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + DDR ) )", "choosing": "Min( Max( ( MUR + DS ),( MUM / MUC ) ) ,( Min( MUR ,RMSe ) - Max( MUC,RRSe ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020629082974171018}, {"determining": "( Max( ( ( DDR - MRS ) - Max( ( PN * Min( Max( Min( FirstVNF_RAM ,ARS ),( MDR + FirstVNF_CPU ) ) ,Max( ( CRS * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,DDR ) ) ) ),( Min( ( RRS * FirstVNF_Mem ) ,( FirstVNF_CPU_Server * RRS ) ) - CRS ) ) ),ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - Max( CRS,FirstVNF_RAM ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( ( RCSe + ( MUR - CS ) ) + Min( ( MUC * ( ( MUC * ( Min( MUR ,RRSe ) + ( CS * CS ) ) ) - ( DS * CS ) ) ) ,RMSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01548724310013873}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( CRS ,Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,MUM ) / Min( MUC ,MLU ) ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( Min( MUM ,MUR ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6129707112970711, "obj2": 0.25986572143879677}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) - Min( Const ,PN ) )", "choosing": "Min( ( ( Max( ( RRSe - ( ( ( RMSe * MUC ) / MUR ) - MUC ) ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( CS + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,MUR ) ,MUC ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( ( Max( FirstVNF_CPU,PN ) / FirstVNF_CPU_Server ) - Min( ( ACS * Min( DDR ,ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MLU + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( Min( MUC ,MLU ),CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8786610878661087, "obj2": 0.04691030561325898}, {"determining": "( ( ( ARS - Min( Const ,( ( ( ARS * Const ) * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.0598357560046252}, {"determining": "( ( ( MDR * CRS ) + ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( AMS ,PN ) ) ) + MRS ) )", "choosing": "( ( RCSe * RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.023384866675943382}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS / ( DDR - ( ( MRS / ( ARS - FirstVNF_CPU_Server ) ) / ARS ) ) ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( Min( RCSe ,( MLU + ( ( Max( Max( MUC,CS ),MUR ) - ( RCSe - ( Max( RRSe,MUM ) * RCSe ) ) ) + RRSe ) ) ) * ( RRSe - ( ( MUC / ( ( ( ( MLU * RCSe ) / RMSe ) * RCSe ) * ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) ) - MLU ) ) )", "obj1": 0.8744769874476988, "obj2": 0.05061404440687041}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05810233342103458}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,CRS ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( RMSe - Max( ( ( DS - Min( MUR ,( RRSe - MUC ) ) ) + DS ),DS ) ) )", "obj1": 0.698744769874477, "obj2": 0.1733787471398263}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( Min( RCSe ,MUC ) - ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) ) ) * Max( RCSe,DS ) ) * RRSe ) )", "obj1": 0.8723849372384938, "obj2": 0.051894467927815505}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( ARS - CRS ) + ( DDR * DDR ) ) - ( CRS - FirstVNF_RAM_Server ) ) + MRS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUM ) ,( MLU * RMSe ) )", "obj1": 0.9497907949790795, "obj2": 0.022059458957254148}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( BR - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( RCSe - RRSe ) - ( ( ( ( MUM + RCSe ) / DS ) - Min( RRSe ,( Min( RRSe ,MLU ) * ( ( RCSe / Max( MLU,CS ) ) / ( MUC / DS ) ) ) ) ) * Max( DS,RMSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.010211013023492274}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( AMS / FirstVNF_CPU_Server ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * ( ( DS * CS ) + ( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUM / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.694560669456067, "obj2": 0.1746265176534872}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( ( Const * Max( RRS,AMS ) ) - PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( RCSe * ( RCSe + MUM ) ) * RMSe ) ) ) ,Max( ( CS * DS ),( Max( RRSe,CS ) - MUR ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( MRS,( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Min( ( MLU * RMSe ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * DS ) ) ) - MUR ) ) )", "obj1": 0.9644351464435147, "obj2": 0.013034891753074476}, {"determining": "( FirstVNF_CPU - ( ( ( Min( ( FirstVNF_Mem * Const ) ,AMS ) * AMS ) / ( Max( Min( BR ,( Max( FirstVNF_RAM_Server,PN ) - BR ) ),CRS ) * CRS ) ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "Min( Max( ( DS * ( ( CS * RRSe ) + RCSe ) ),Min( Min( DS ,MUR ) ,( RRSe - CS ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + ( MUC - RCSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002550482499746131}, {"determining": "( Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + Const ),( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( DDR * BR ) ) + ( ( Const * ARS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.8075313807531381, "obj2": 0.09363839150903874}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.011381633189458638}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + RRSe ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04691030561325898}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( RMSe / ( MUC * ( ( MLU / MLU ) - ( Max( CS,DS ) + DS ) ) ) ),( Min( DS ,( MUR * ( ( DS * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( MUC,MLU ) ) ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.013311730069588742}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05810233342103458}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) / PN ) ) )", "choosing": "( Max( ( Min( MLU ,( ( Max( MUM,( CS * RRSe ) ) / ( ( RCSe / RRSe ) / ( MUR - CS ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) * ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( CRS ,Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,MUM ) / Min( MUC ,MLU ) ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( Min( MUM ,MUR ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6129707112970711, "obj2": 0.25986572143879677}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00872208088346264}, {"determining": "( ( BR / Const ) - Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),MDR ) )", "choosing": "( Max( DS,CS ) * ( ( RCSe + RRSe ) * ( DS / RMSe ) ) )", "obj1": 0.9769874476987448, "obj2": 0.009408934087197788}, {"determining": "( Max( Min( FirstVNF_Mem ,( FirstVNF_Mem * Min( ( Min( MDR ,ACS ) / Const ) ,Max( PN,PN ) ) ) ),FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * Min( ( ACS * BR ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / MLU ),Min( ( RRSe / MUC ) ,Max( ( Min( RCSe ,RCSe ) - RMSe ),MUR ) ) ) / ( RCSe + ( RRSe - RMSe ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Max( FirstVNF_CPU_Server,( MDR / ARS ) ) ) * ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( ACS - FirstVNF_CPU ) + ( CRS + DDR ) ) ) ) )", "choosing": "( ( ( MUC - Max( ( DS / MLU ),Max( Min( Min( RCSe ,Min( RMSe ,MUR ) ) ,DS ),RCSe ) ) ) + CS ) * Min( ( MUC - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( MUR + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00872208088346264}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ARS ,( ( FirstVNF_Mem + FirstVNF_Mem ) / RRS ) ) - ( Max( ( RRS / CRS ),FirstVNF_Mem ) / FirstVNF_Mem ) )", "choosing": "Min( Min( Max( RMSe,Max( RCSe,( ( MLU / MUM ) + ( Max( MUM,( MUR / MUM ) ) * MUM ) ) ) ) ,RRSe ) ,( MLU * MLU ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( Min( AMS ,( CRS / FirstVNF_CPU ) ) - Max( ( PN - ( Min( Min( FirstVNF_Mem_Server ,( MRS + FirstVNF_CPU_Server ) ) ,( Const - FirstVNF_CPU ) ) + BR ) ),( MRS - ARS ) ) )", "choosing": "( ( RCSe * ( ( RMSe / RCSe ) / Min( RMSe ,DS ) ) ) * ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR / AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Min( MLU ,MUM ) / Max( MLU,DS ) ) ) - ( DS + ( ( ( MLU - RMSe ) * Max( DS,MUC ) ) / RRSe ) ) ),Min( MUC ,MUM ) ) + Min( Min( ( Max( Min( ( MUM / RMSe ) ,RCSe ),MLU ) * ( MLU + MUR ) ) ,MUM ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( AMS * PN ) * ( ACS * DDR ) ) ) / Max( ( PN - FirstVNF_RAM ),( Min( AMS ,MDR ) - CRS ) ) )", "choosing": "( ( MUC / MUR ) - ( ( ( RMSe - ( Min( RRSe ,MUR ) * Max( Max( RMSe,DS ),MUR ) ) ) - ( DS / ( MUM + RCSe ) ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RCSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / DS ),Min( RRSe ,Min( ( ( ( MUR - MUC ) + DS ) + DS ) ,RRSe ) ) ) - ( ( MLU + MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) + ( ( PN * PN ) - ( DDR * ACS ) ) ) / Max( ( ( FirstVNF_RAM / ( RRS / Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,( DDR * FirstVNF_RAM_Server ) ) ) ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ),Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - RRSe ) * Max( ( RRSe + MUM ),( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MRS * MDR ) ,( Max( Const,MDR ) / ( RRS - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * ( MUM + MLU ) ) - ( Min( Max( RCSe,MUC ) ,Min( ( MUR - MLU ) ,( MUC * Min( RCSe ,MUC ) ) ) ) / ( ( RMSe * Max( MUM,( MUC - ( RRSe - RMSe ) ) ) ) + ( MUC / Max( RMSe,RRSe ) ) ) ) ),Max( ( RCSe + ( MLU - ( MUR * RMSe ) ) ),Min( ( RMSe - DS ) ,Min( DS ,Min( DS ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( ( ( ( MRS / ( RRS / FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) / FirstVNF_RAM ),CRS ) ) * ( ( ( FirstVNF_RAM - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( RCSe * ( ( MUR / CS ) / MLU ) ) - ( DS + Min( ( Max( MLU,RMSe ) * Max( DS,MUC ) ) ,RRSe ) ) ),Min( MUC ,MUM ) ) * Min( ( Max( RRSe,( RCSe * RRSe ) ) * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + Max( Max( ( PN - BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + ( Min( ( Min( RCSe ,Max( ( RRSe * ( DS * RMSe ) ),MUC ) ) - ( RRSe + RCSe ) ) ,RCSe ) - Max( ( RRSe * Min( Max( RMSe,( RCSe * Min( DS ,RCSe ) ) ) ,RRSe ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RRSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - BR ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe - Min( ( RRSe * ( Max( MLU,RRSe ) / RRSe ) ) ,MUM ) ),( Max( Min( MUM ,MUC ),RMSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - FirstVNF_RAM ) - ( FirstVNF_CPU * Max( RRS,AMS ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Min( AMS ,Min( ARS ,RRS ) ) ) * ( FirstVNF_CPU + Const ) )", "choosing": "( Max( Max( ( Max( ( ( ( MLU * MUM ) / RRSe ) / ( DS / CS ) ),( Min( MUC ,( RRSe + RRSe ) ) / ( RRSe - MUC ) ) ) / MUC ),DS ),( RMSe + MLU ) ) / ( ( MLU + ( MUM - MLU ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Max( BR,CRS ) ) / ( FirstVNF_CPU_Server * CRS ) )", "choosing": "( ( ( RCSe / MLU ) * ( DS - Max( RRSe,( ( ( MUR / DS ) - RCSe ) * RCSe ) ) ) ) * Max( Max( MUM,CS ),( RRSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - DDR ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * Max( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ),Max( ARS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Min( MLU ,( Min( DS ,Min( ( CS * RCSe ) ,Max( MLU,MUM ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) / ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Max( DDR,ACS ) ) ) - ( ( Const - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( MUM / ( MUM / ( ( MUC / RMSe ) / CS ) ) ) * Min( MUR ,( ( ( ( RRSe * ( RMSe * MUC ) ) / MUR ) / ( MUR * MUM ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( FirstVNF_Mem * Const ) - RRS ) ) ,( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server / Max( ( BR * PN ),MRS ) ) ) - PN ) + AMS ) ) * ( Max( FirstVNF_Mem_Server,( MDR - MRS ) ) + ( DDR * ( Min( CRS ,Max( MRS,( BR * MRS ) ) ) + AMS ) ) ) )", "choosing": "( ( ( ( Min( ( ( DS - DS ) * RCSe ) ,( Max( MUC,MUM ) * Max( MLU,( MUR + DS ) ) ) ) * MUR ) / MUR ) / MUR ) + ( ( MLU - RMSe ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.28583014284586084}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( ( Const + ACS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( Min( FirstVNF_RAM_Server ,ACS ) - ( CRS / FirstVNF_RAM ) ) + ( Min( Const ,( ( AMS / ( CRS / Min( DDR ,FirstVNF_CPU ) ) ) * ( PN / CRS ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MUM ,RRSe ) * ( ( RCSe - DS ) * ( MUR + RMSe ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,RCSe ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.7447698744769874, "obj2": 0.13393942608838041}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( BR - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( FirstVNF_RAM * AMS ) - Min( PN ,AMS ) ) ) + Min( FirstVNF_CPU_Server ,CRS ) ) )", "choosing": "( ( RCSe - RRSe ) - ( MUM * ( ( MUC - MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( DS - Min( MUC ,DS ) ) ) ) ) ) ) )", "obj1": 0.6485355648535565, "obj2": 0.21967476026117436}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( DDR,ACS ) ) ) - ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) / Max( Min( FirstVNF_CPU ,Const ),CRS ) ) * Min( AMS ,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / ( MUM / Max( Max( RMSe,MUM ),Min( Max( CS,RRSe ) ,( CS - ( RMSe - CS ) ) ) ) ) ) * Min( CS ,Min( MUM ,CS ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03789983870698308}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( Const ,( Min( Max( AMS,AMS ) ,AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( CRS - Const ) ) - ( ( ( ( CRS / ARS ) / ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + ( ( Max( BR,Const ) * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( MLU,MUM ) / Max( Max( ( CS - ( MUC - ( MUR / RMSe ) ) ),MUC ),( Max( ( RMSe - MUC ),RRSe ) / Min( MLU ,RRSe ) ) ) ) - ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / ( RMSe / CS ) ) )", "obj1": 0.9225941422594143, "obj2": 0.027448040642281093}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.7343096234309623, "obj2": 0.15382417325928774}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( Max( BR,AMS ) - Min( AMS ,PN ) ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( BR ,( Max( ( Max( AMS,PN ) + ( ( BR * FirstVNF_Mem ) / Const ) ),DDR ) + AMS ) ) * ( CRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( RRSe - ( ( RCSe / MUR ) + RRSe ) ) - ( MUC / RCSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( ( ( DS / DS ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUM + MUC ) ) ) ) * MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7677824267782427, "obj2": 0.1149625414453676}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / MRS ) ) - FirstVNF_Mem_Server ) / Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,DS ) / Min( MUC ,MLU ) ) - Min( RCSe ,MUM ) ) ) + ( MLU / ( ( CS - Max( ( Min( Max( CS,MUC ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2325247620956653}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( Max( ( PN * AMS ),( MRS - FirstVNF_Mem_Server ) ) - Min( AMS ,( Min( ( ACS * ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - ACS ) ) ,( FirstVNF_Mem / Const ) ) / FirstVNF_CPU ) ) )", "choosing": "Min( Min( Max( MUR,Max( RCSe,( MUR + MUM ) ) ) ,RRSe ) ,( ( MUR * RRSe ) / ( MUR * CS ) ) )", "obj1": 0.6150627615062761, "obj2": 0.25302594318909555}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( Max( ( PN * AMS ),( MRS - CRS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( Min( ( MUR + MUM ) ,MLU ) - MLU ) ) * Max( RCSe,DS ) ) * RRSe ) )", "obj1": 0.8451882845188284, "obj2": 0.0620387050527121}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( Min( Min( PN ,Min( Min( FirstVNF_Mem ,ACS ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( DS + MUC ) - ( CS - Min( Min( Max( RCSe,MUC ) ,RMSe ) ,( Min( ( DS / RRSe ) ,RCSe ) - MLU ) ) ) ) ) + ( Min( ( RMSe - MLU ) ,RRSe ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6380753138075314, "obj2": 0.24195612736266645}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + Const ),( ( BR * AMS ) - Min( ( FirstVNF_CPU * DDR ) ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( Const * FirstVNF_CPU_Server ) ) + ( ( Const * ARS ) - Max( MDR,ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * ( Max( MUC,Max( ( RMSe / DS ),( MUC * DS ) ) ) - MUR ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( RCSe * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( CS,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.799163179916318, "obj2": 0.09160702012804112}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( MUR + MUM ) ,MLU ) ,( MLU * MLU ) )", "obj1": 0.8075313807531381, "obj2": 0.08234794800315615}, {"determining": "( Max( ( ( Min( BR ,Const ) - Min( AMS ,PN ) ) + ( FirstVNF_CPU + Const ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( ( BR * FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) ) + ( Min( Const ,( ( AMS * ( RRS + ( PN - BR ) ) ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( Min( ( ( DS / MUM ) - ( RRSe - ( RCSe - ( DS * RMSe ) ) ) ) ,MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.12500589381639257}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.07001058916685218}, {"determining": "( Max( ( ( Const + FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_RAM_Server ) ) + Max( Min( ( ( Const * ACS ) + BR ) ,( ( AMS * ( MDR / FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ),( MDR * ARS ) ) ) )", "choosing": "( Max( ( Min( MUM ,( DS * MUC ) ) / MLU ),Min( Max( MUR,MUC ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( ( CS * Min( Max( ( RRSe / RMSe ),RRSe ) ,MLU ) ),MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( ( ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) * ( ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + ( ACS + MRS ) ) / PN ) ) ) - DDR ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( ( Min( ( ( ( RRSe * Min( MUR ,RMSe ) ) + ( MLU * MLU ) ) + RCSe ) ,RCSe ) / MUM ) * ( CS + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.9393305439330544, "obj2": 0.024204825722000133}, {"determining": "( ( ( ( Max( Const,Const ) / ( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM / MRS ) ) - FirstVNF_Mem ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUM * ( MUC + ( ( MLU * RCSe ) / MUM ) ) ),( Max( DS,Min( MUC ,CS ) ) * Min( ( DS * CS ) ,Min( ( ( Min( ( MUM - MUM ) ,MLU ) / Max( ( CS - RRSe ),( MLU * MUC ) ) ) * ( Max( RRSe,CS ) * RCSe ) ) ,( CS - ( DS + ( Max( RRSe,MLU ) - Min( RRSe ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6506276150627615, "obj2": 0.20446938440249213}, {"determining": "( ( ARS * DDR ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( ARS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.040478491347406276}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( MDR + ARS ) ) ) )", "choosing": "( Max( ( MUR + MLU ),( RCSe * MUC ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28262373344132685}, {"determining": "( Min( ( MDR * ACS ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM * ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,DS ) / Min( MLU ,MUC ) ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( ( RMSe / DS ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.608786610878661, "obj2": 0.26296011136900993}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( FirstVNF_RAM,Min( BR ,FirstVNF_Mem_Server ) ) * ARS ) ) ) ) - DDR ) * Min( ( ( FirstVNF_RAM_Server / MDR ) / FirstVNF_CPU_Server ) ,Min( ( ACS * ( DDR - ACS ) ) ,( Const / Max( FirstVNF_RAM,( MDR * RRS ) ) ) ) ) )", "choosing": "( Max( Max( ( ( RMSe * ( DS / Max( CS,RMSe ) ) ) * Max( RRSe,( RCSe / DS ) ) ),DS ),( Max( DS,Min( ( ( MLU - RMSe ) - MUM ) ,MUR ) ) + ( ( ( CS + Min( MUC ,( MUM - RRSe ) ) ) * RCSe ) + RMSe ) ) ) / ( ( ( MUR + RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( Max( RMSe,MUM ) + ( MUR * DS ) ) ,( ( RRSe / MLU ) / Max( MLU,CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.07230959894124851}, {"determining": "( Max( ( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ),( Max( FirstVNF_CPU,( ( FirstVNF_Mem * ( RRS / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( PN + ARS ) ) ) + ( ( BR * FirstVNF_RAM ) - Min( BR ,PN ) ) ) ) / ( CRS + ( ( FirstVNF_Mem - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe * Min( RRSe ,( ( MUC + DS ) + RRSe ) ) ) - ( ( ( RMSe + ( RCSe - Min( Min( RRSe ,MUR ) ,RRSe ) ) ) + RMSe ) * Min( RRSe ,MUC ) ) ) + ( RCSe + MUC ) )", "obj1": 0.7573221757322176, "obj2": 0.130569130941722}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.7845188284518828, "obj2": 0.10474628867822267}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUC + RCSe ) / MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( Max( DS,CS ) * CS ) ,CS ) ) )", "obj1": 0.6548117154811716, "obj2": 0.20305783014980566}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( ( ( Max( ACS,( ( PN + ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - ( Max( BR,PN ) - Const ) ) ) - CRS ) + Const ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( ( ( Min( ( CS - RCSe ) ,( RCSe - MLU ) ) + MLU ) * CS ) - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( RCSe ,MLU ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) * ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / DS ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 0.8179916317991632, "obj2": 0.07962697046415748}, {"determining": "( Max( ( PN * AMS ),( Max( ( RRS + Min( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - BR ) ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ),( MRS - ARS ) ) - ( AMS - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( CS * RMSe ) * ( ( Max( MLU,MUC ) + ( CS / MUC ) ) / Max( ( MUC - MUC ),MUC ) ) )", "obj1": 0.7196652719665272, "obj2": 0.15682738639378044}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( Max( ( MRS - ARS ),( PN * AMS ) ) - ( FirstVNF_CPU_Server + Const ) )", "choosing": "Max( ( ( ( Max( MUC,CS ) + MUR ) + Min( MUC ,MUM ) ) * Min( Max( RMSe,DS ) ,( MUM * Max( ( DS / RRSe ),Min( RRSe ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ),Min( CS ,MUM ) )", "obj1": 0.7050209205020921, "obj2": 0.16569455882160966}, {"determining": "( ( ( ( FirstVNF_Mem - ( Const - AMS ) ) * Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) * Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( MUM,Min( RMSe ,( Min( RCSe ,( MLU - ( MUR + RCSe ) ) ) + RCSe ) ) ),RRSe ) * ( ( Min( RMSe ,( Min( RCSe ,MUC ) - ( MUM / Max( MUR,RCSe ) ) ) ) * Max( RCSe,DS ) ) * RRSe ) )", "obj1": 0.7907949790794979, "obj2": 0.09835665445325086}, {"determining": "( ( ( ( ( FirstVNF_Mem + ( ACS / BR ) ) + FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Min( ( ( AMS / AMS ) + ( Min( RRS ,( Min( FirstVNF_Mem_Server ,DDR ) - ( FirstVNF_CPU / DDR ) ) ) / ( ( Const * MDR ) / ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + ( RRS * MRS ) ) ) ) ) ,Min( Const ,FirstVNF_Mem ) ) ) * ( ( ARS - Min( FirstVNF_RAM ,CRS ) ) - ( BR - ARS ) ) )", "choosing": "Min( Min( ( Min( ( ( MUR * Min( Max( MUM,MUR ) ,MUC ) ) - MUR ) ,CS ) / MUC ) ,MUM ) ,( ( RCSe / MUC ) + RRSe ) )", "obj1": 0.6610878661087866, "obj2": 0.194468252171246}, {"determining": "( ( DDR - ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( ( MRS - ARS ),Const ) + ARS ) ) ) ) ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,( DDR + RRS ) ) ) ) ,( ( Max( ( PN / BR ),FirstVNF_Mem_Server ) - PN ) + Const ) ),( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / ( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MUM ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) - ( MLU / RMSe ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.05227908683176889}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS / ( DDR - ( ( MRS / ( ARS - FirstVNF_CPU_Server ) ) / ARS ) ) ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( Min( RCSe ,( MLU + ( ( Max( Max( MUC,CS ),MUR ) - ( RCSe - ( Max( RRSe,MUM ) * RCSe ) ) ) + RRSe ) ) ) * ( RRSe - ( ( MUC / ( ( ( ( MLU * RCSe ) / RMSe ) * RCSe ) * ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) ) - MLU ) ) )", "obj1": 0.8744769874476988, "obj2": 0.05061404440687041}, {"determining": "( ( MDR / ( MRS - FirstVNF_RAM ) ) - ( FirstVNF_RAM + ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / Max( Max( BR,FirstVNF_RAM_Server ),PN ) ) ) ) )", "choosing": "( ( ( ( ( ( MUR - Min( MUM ,DS ) ) / MUR ) / RMSe ) - MUM ) + RRSe ) * ( ( DS + DS ) - MLU ) )", "obj1": 0.7301255230125523, "obj2": 0.1556338865419399}, {"determining": "( Max( ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( Const + ACS ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( ( BR - ( RRS / ARS ) ) * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM * MUC ),( Min( Max( ( Max( MUR,RRSe ) * ( MLU - RRSe ) ),RRSe ) ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( ( MUC / RRSe ) - Min( CS ,( ( MUM + ( MUM - RMSe ) ) - MUR ) ) ) ) )", "obj1": 0.7949790794979079, "obj2": 0.09669158774083707}, {"determining": "( ( ( ARS - Min( Const ,( ( ( ARS * Const ) * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.0598357560046252}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + Max( RCSe,( MUR + MUM ) ) ) - Max( MLU,MLU ) ) ) ,( RRSe / RRSe ) )", "obj1": 0.702928870292887, "obj2": 0.17193817399630296}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( MUR + ( ( ( ( Min( RCSe ,MUC ) - RCSe ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8661087866108786, "obj2": 0.051712089047780976}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + RRSe ) ) ) )", "obj1": 0.8870292887029289, "obj2": 0.04446162980430521}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUC / MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / MUR ) ,RCSe ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.7133891213389121, "obj2": 0.1638314200932266}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RMSe + ( Max( RCSe,MLU ) - ( ( MUC - MUM ) + ( Max( ( ( RCSe - MUM ) / ( DS + RRSe ) ),CS ) * DS ) ) ) ) ,( RRSe / RRSe ) )", "obj1": 0.8535564853556485, "obj2": 0.060064954738061116}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( Min( ( MLU + ( ( Max( Max( MUC,CS ),MUR ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) * ( RRSe - ( ( MUC / ( ( ( ( MLU * RCSe ) / RMSe ) * RCSe ) * ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) ) - MLU ) ) )", "obj1": 0.9539748953974896, "obj2": 0.01850410128415462}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( FirstVNF_Mem - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( RRSe / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.8158995815899581, "obj2": 0.08029771053232156}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( CRS ,Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,MUM ) / Min( MUC ,MLU ) ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( Min( MUM ,MUR ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6129707112970711, "obj2": 0.25986572143879677}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) - Min( Const ,PN ) )", "choosing": "Min( ( ( Max( ( RRSe - ( ( ( RMSe * MUC ) / MUR ) - MUC ) ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( CS + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,MUR ) ,MUC ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + RRSe ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04691030561325898}, {"determining": "( ( ( MDR * CRS ) + ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( AMS ,PN ) ) ) + MRS ) )", "choosing": "( ( RCSe * RRSe ) - ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) )", "obj1": 0.9476987447698745, "obj2": 0.023384866675943382}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( ( ( ( ARS - CRS ) + ( DDR * DDR ) ) - ( CRS - FirstVNF_RAM_Server ) ) + MRS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUM ) ,( MLU * RMSe ) )", "obj1": 0.9497907949790795, "obj2": 0.022059458957254148}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,CRS ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( RMSe - Max( ( ( DS - Min( MUR ,( RRSe - MUC ) ) ) + DS ),DS ) ) )", "obj1": 0.698744769874477, "obj2": 0.1733787471398263}, {"determining": "( ( ( ARS - Min( Const ,( ( Max( FirstVNF_RAM,Const ) * AMS ) * ( ARS + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) ) ) * Min( ( MLU + ( ( Max( CS,RRSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.891213389121339, "obj2": 0.04421384656026941}, {"determining": "( Max( ( ( DDR - MRS ) - Max( ( PN * Min( Max( Min( FirstVNF_RAM ,ARS ),( MDR + FirstVNF_CPU ) ) ,Max( ( CRS * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,DDR ) ) ) ),( Min( ( RRS * FirstVNF_Mem ) ,( FirstVNF_CPU_Server * RRS ) ) - CRS ) ) ),ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - Max( CRS,FirstVNF_RAM ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( ( RCSe + ( MUR - CS ) ) + Min( ( MUC * ( ( MUC * ( Min( MUR ,RRSe ) + ( CS * CS ) ) ) - ( DS * CS ) ) ) ,RMSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01548724310013873}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( BR - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( RCSe - RRSe ) - ( ( ( ( MUM + RCSe ) / DS ) - Min( RRSe ,( Min( RRSe ,MLU ) * ( ( RCSe / Max( MLU,CS ) ) / ( MUC / DS ) ) ) ) ) * Max( DS,RMSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.010211013023492274}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( AMS / FirstVNF_CPU_Server ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * ( ( DS * CS ) + ( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUM / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.694560669456067, "obj2": 0.1746265176534872}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( ( Const * Max( RRS,AMS ) ) - PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( RCSe * ( RCSe + MUM ) ) * RMSe ) ) ) ,Max( ( CS * DS ),( Max( RRSe,CS ) - MUR ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( MRS,( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Min( ( MLU * RMSe ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * DS ) ) ) - MUR ) ) )", "obj1": 0.9644351464435147, "obj2": 0.013034891753074476}, {"determining": "( FirstVNF_CPU - ( ( ( Min( ( FirstVNF_Mem * Const ) ,AMS ) * AMS ) / ( Max( Min( BR ,( Max( FirstVNF_RAM_Server,PN ) - BR ) ),CRS ) * CRS ) ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "Min( Max( ( DS * ( ( CS * RRSe ) + RCSe ) ),Min( Min( DS ,MUR ) ,( RRSe - CS ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + ( MUC - RCSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002550482499746131}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.011381633189458638}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( ( Max( FirstVNF_CPU,PN ) / FirstVNF_CPU_Server ) - Min( ( ACS * Min( DDR ,ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MLU + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( Min( MUC ,MLU ),CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8786610878661087, "obj2": 0.04691030561325898}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( RMSe / ( MUC * ( ( MLU / MLU ) - ( Max( CS,DS ) + DS ) ) ) ),( Min( DS ,( MUR * ( ( DS * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( MUC,MLU ) ) ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.013311730069588742}, {"determining": "( Max( Min( FirstVNF_Mem ,( FirstVNF_Mem * Min( ( Min( MDR ,ACS ) / Const ) ,Max( PN,PN ) ) ) ),FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * Min( ( ACS * BR ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / MLU ),Min( ( RRSe / MUC ) ,Max( ( Min( RCSe ,RCSe ) - RMSe ),MUR ) ) ) / ( RCSe + ( RRSe - RMSe ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( CRS ,Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,MUM ) / Min( MUC ,MLU ) ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( Min( MUM ,MUR ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6129707112970711, "obj2": 0.25986572143879677}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ACS ,FirstVNF_CPU_Server ) - Min( RRS ,DDR ) ) * ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( Const - FirstVNF_CPU ) ) - ( Min( ACS ,( RRS + MDR ) ) + ( CRS + DDR ) ) ) ) )", "choosing": "( Min( ( DS - ( DS - RRSe ) ) ,Max( MLU,( ( MUR + MLU ) + ( ( CS / ( ( DS * CS ) + MUC ) ) / ( CS - RCSe ) ) ) ) ) * ( ( MUC - ( RMSe + CS ) ) + CS ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00872208088346264}, {"determining": "( ( BR / Const ) - Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),MDR ) )", "choosing": "( Max( DS,CS ) * ( ( RCSe + RRSe ) * ( DS / RMSe ) ) )", "obj1": 0.9769874476987448, "obj2": 0.009408934087197788}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) / PN ) ) )", "choosing": "( Max( ( Min( MLU ,( ( Max( MUM,( CS * RRSe ) ) / ( ( RCSe / RRSe ) / ( MUR - CS ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) * ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( MUR + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00872208088346264}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ARS ,( ( FirstVNF_Mem + FirstVNF_Mem ) / RRS ) ) - ( Max( ( RRS / CRS ),FirstVNF_Mem ) / FirstVNF_Mem ) )", "choosing": "Min( Min( Max( RMSe,Max( RCSe,( ( MLU / MUM ) + ( Max( MUM,( MUR / MUM ) ) * MUM ) ) ) ) ,RRSe ) ,( MLU * MLU ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( AMS + AMS ) - ( ( ( Const * DDR ) / ( MDR + ACS ) ) / ( MRS / FirstVNF_CPU ) ) )", "choosing": "( ( RCSe / MUM ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( CRS / FirstVNF_CPU ) ) - Max( ( PN - ( Min( Min( FirstVNF_Mem_Server ,( MRS + FirstVNF_CPU_Server ) ) ,( Const - FirstVNF_CPU ) ) + BR ) ),( MRS - ARS ) ) )", "choosing": "( ( RCSe * ( ( RMSe / RCSe ) / Min( RMSe ,DS ) ) ) * ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR / AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Min( MLU ,MUM ) / Max( MLU,DS ) ) ) - ( DS + ( ( ( MLU - RMSe ) * Max( DS,MUC ) ) / RRSe ) ) ),Min( MUC ,MUM ) ) + Min( Min( ( Max( Min( ( MUM / RMSe ) ,RCSe ),MLU ) * ( MLU + MUR ) ) ,MUM ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( AMS * PN ) * ( ACS * DDR ) ) ) / Max( ( PN - FirstVNF_RAM ),( Min( AMS ,MDR ) - CRS ) ) )", "choosing": "( ( MUC / MUR ) - ( ( ( RMSe - ( Min( RRSe ,MUR ) * Max( Max( RMSe,DS ),MUR ) ) ) - ( DS / ( MUM + RCSe ) ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RCSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / DS ),Min( RRSe ,Min( ( ( ( MUR - MUC ) + DS ) + DS ) ,RRSe ) ) ) - ( ( MLU + MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) + ( ( PN * PN ) - ( DDR * ACS ) ) ) / Max( ( ( FirstVNF_RAM / ( RRS / Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,( DDR * FirstVNF_RAM_Server ) ) ) ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ),Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - RRSe ) * Max( ( RRSe + MUM ),( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MRS * MDR ) ,( Max( Const,MDR ) / ( RRS - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * ( MUM + MLU ) ) - ( Min( Max( RCSe,MUC ) ,Min( ( MUR - MLU ) ,( MUC * Min( RCSe ,MUC ) ) ) ) / ( ( RMSe * Max( MUM,( MUC - ( RRSe - RMSe ) ) ) ) + ( MUC / Max( RMSe,RRSe ) ) ) ) ),Max( ( RCSe + ( MLU - ( MUR * RMSe ) ) ),Min( ( RMSe - DS ) ,Min( DS ,Min( DS ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( ( ( ( MRS / ( RRS / FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) / FirstVNF_RAM ),CRS ) ) * ( ( ( FirstVNF_RAM - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( RCSe * ( ( MUR / CS ) / MLU ) ) - ( DS + Min( ( Max( MLU,RMSe ) * Max( DS,MUC ) ) ,RRSe ) ) ),Min( MUC ,MUM ) ) * Min( ( Max( RRSe,( RCSe * RRSe ) ) * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + Max( Max( ( PN - BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + ( Min( ( Min( RCSe ,Max( ( RRSe * ( DS * RMSe ) ),MUC ) ) - ( RRSe + RCSe ) ) ,RCSe ) - Max( ( RRSe * Min( Max( RMSe,( RCSe * Min( DS ,RCSe ) ) ) ,RRSe ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RRSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - BR ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe - Min( ( RRSe * ( Max( MLU,RRSe ) / RRSe ) ) ,MUM ) ),( Max( Min( MUM ,MUC ),RMSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - FirstVNF_RAM ) - ( FirstVNF_CPU * Max( RRS,AMS ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "( ( DDR - FirstVNF_Mem ) - Max( ( FirstVNF_RAM_Server + CRS ),Const ) )", "choosing": "( ( Min( MUM ,CS ) + Min( MLU ,CS ) ) * ( ( RRSe + RCSe ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - DDR ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * Max( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ),Max( ARS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Min( MLU ,( Min( DS ,Min( ( CS * RCSe ) ,Max( MLU,MUM ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) / ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( FirstVNF_Mem * Const ) - RRS ) ) ,( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server / Max( ( BR * PN ),MRS ) ) ) - PN ) + AMS ) ) * ( Max( FirstVNF_Mem_Server,( MDR - MRS ) ) + ( DDR * ( Min( CRS ,Max( MRS,( BR * MRS ) ) ) + AMS ) ) ) )", "choosing": "( ( ( ( Min( ( ( DS - DS ) * RCSe ) ,( Max( MUC,MUM ) * Max( MLU,( MUR + DS ) ) ) ) * MUR ) / MUR ) / MUR ) + ( ( MLU - RMSe ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.28583014284586084}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( ( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + RCSe ) ) + ( MLU / ( ( CS - Max( ( Min( Min( DS ,RCSe ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.606694560669456, "obj2": 0.25097724497058976}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( DDR * FirstVNF_CPU ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - Max( ( AMS * BR ),Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( Max( Min( ACS ,MRS ),( CRS - FirstVNF_RAM_Server ) ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( CS + MUM ) + CS ) * DS ),( ( RRSe - DS ) + MUC ) ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * MUR ) ) ) + MUR ) ) )", "obj1": 0.7217573221757322, "obj2": 0.13661886296456716}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( BR - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( FirstVNF_RAM * AMS ) - Min( PN ,AMS ) ) ) + Min( FirstVNF_CPU_Server ,CRS ) ) )", "choosing": "( ( RCSe - RRSe ) - ( MUM * ( ( MUC - MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( ( Min( MLU ,RRSe ) * RRSe ) / ( DS - Min( MUC ,DS ) ) ) ) ) ) ) )", "obj1": 0.6485355648535565, "obj2": 0.21967476026117436}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( DDR,ACS ) ) ) - ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) / Max( Min( FirstVNF_CPU ,Const ),CRS ) ) * Min( AMS ,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / ( MUM / Max( Max( RMSe,MUM ),Min( Max( CS,RRSe ) ,( CS - ( RMSe - CS ) ) ) ) ) ) * Min( CS ,Min( MUM ,CS ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03789983870698308}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( Max( ( FirstVNF_RAM + FirstVNF_CPU ),( ( Const + ACS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( Min( FirstVNF_RAM_Server ,ACS ) - ( CRS / FirstVNF_RAM ) ) + ( Min( Const ,( ( AMS / ( CRS / Min( DDR ,FirstVNF_CPU ) ) ) * ( PN / CRS ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MUM ,RRSe ) * ( ( RCSe - DS ) * ( MUR + RMSe ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,RCSe ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.7447698744769874, "obj2": 0.13393942608838041}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( Max( BR,AMS ) - Min( AMS ,PN ) ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( BR ,( Max( ( Max( AMS,PN ) + ( ( BR * FirstVNF_Mem ) / Const ) ),DDR ) + AMS ) ) * ( CRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( RRSe - ( ( RCSe / MUR ) + RRSe ) ) - ( MUC / RCSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( ( ( DS / DS ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUM + MUC ) ) ) ) * MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7677824267782427, "obj2": 0.1149625414453676}, {"determining": "( Max( ( PN * AMS ),( Max( ( RRS + Min( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - BR ) ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ),( MRS - ARS ) ) - ( AMS - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( CS * RMSe ) * ( ( Max( MLU,MUC ) + ( CS / MUC ) ) / Max( ( MUC - MUC ),MUC ) ) )", "obj1": 0.7196652719665272, "obj2": 0.15682738639378044}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / MRS ) ) - FirstVNF_Mem_Server ) / Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,DS ) / Min( MUC ,MLU ) ) - Min( RCSe ,MUM ) ) ) + ( MLU / ( ( CS - Max( ( Min( Max( CS,MUC ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2325247620956653}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( Max( ( PN * AMS ),( MRS - CRS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( Min( ( MUR + MUM ) ,MLU ) - MLU ) ) * Max( RCSe,DS ) ) * RRSe ) )", "obj1": 0.8451882845188284, "obj2": 0.0620387050527121}, {"determining": "( ( ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) * ( ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + ( ACS + MRS ) ) / PN ) ) ) - DDR ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( ( Min( ( ( ( RRSe * Min( MUR ,RMSe ) ) + ( MLU * MLU ) ) + RCSe ) ,RCSe ) / MUM ) * ( CS + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.9393305439330544, "obj2": 0.024204825722000133}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( Min( Min( PN ,Min( Min( FirstVNF_Mem ,ACS ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( DS + MUC ) - ( CS - Min( Min( Max( RCSe,MUC ) ,RMSe ) ,( Min( ( DS / RRSe ) ,RCSe ) - MLU ) ) ) ) ) + ( Min( ( RMSe - MLU ) ,RRSe ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6380753138075314, "obj2": 0.24195612736266645}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + Const ),( ( BR * AMS ) - Min( ( FirstVNF_CPU * DDR ) ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( Const * FirstVNF_CPU_Server ) ) + ( ( Const * ARS ) - Max( MDR,ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * ( Max( MUC,Max( ( RMSe / DS ),( MUC * DS ) ) ) - MUR ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( RCSe * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( CS,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.799163179916318, "obj2": 0.09160702012804112}, {"determining": "( Max( ( ( Min( BR ,Const ) - Min( AMS ,PN ) ) + ( FirstVNF_CPU + Const ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( ( BR * FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) ) + ( Min( Const ,( ( AMS * ( RRS + ( PN - BR ) ) ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( Min( ( ( DS / MUM ) - ( RRSe - ( RCSe - ( DS * RMSe ) ) ) ) ,MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.12500589381639257}, {"determining": "( ( ARS * DDR ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( ARS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.040478491347406276}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.07001058916685218}, {"determining": "( Max( ( ( Const + FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_RAM_Server ) ) + Max( Min( ( ( Const * ACS ) + BR ) ,( ( AMS * ( MDR / FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ),( MDR * ARS ) ) ) )", "choosing": "( Max( ( Min( MUM ,( DS * MUC ) ) / MLU ),Min( Max( MUR,MUC ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( ( CS * Min( Max( ( RRSe / RMSe ),RRSe ) ,MLU ) ),MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( ( ( ( Max( Const,Const ) / ( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM / MRS ) ) - FirstVNF_Mem ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUM * ( MUC + ( ( MLU * RCSe ) / MUM ) ) ),( Max( DS,Min( MUC ,CS ) ) * Min( ( DS * CS ) ,Min( ( ( Min( ( MUM - MUM ) ,MLU ) / Max( ( CS - RRSe ),( MLU * MUC ) ) ) * ( Max( RRSe,CS ) * RCSe ) ) ,( CS - ( DS + ( Max( RRSe,MLU ) - Min( RRSe ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6506276150627615, "obj2": 0.20446938440249213}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( MDR + ARS ) ) ) )", "choosing": "( Max( ( MUR + MLU ),( RCSe * MUC ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28262373344132685}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( MUR + MUM ) ,MLU ) ,( MLU * MLU ) )", "obj1": 0.8075313807531381, "obj2": 0.08234794800315615}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( FirstVNF_RAM,Min( BR ,FirstVNF_Mem_Server ) ) * ARS ) ) ) ) - DDR ) * Min( ( ( FirstVNF_RAM_Server / MDR ) / FirstVNF_CPU_Server ) ,Min( ( ACS * ( DDR - ACS ) ) ,( Const / Max( FirstVNF_RAM,( MDR * RRS ) ) ) ) ) )", "choosing": "( Max( Max( ( ( RMSe * ( DS / Max( CS,RMSe ) ) ) * Max( RRSe,( RCSe / DS ) ) ),DS ),( Max( DS,Min( ( ( MLU - RMSe ) - MUM ) ,MUR ) ) + ( ( ( CS + Min( MUC ,( MUM - RRSe ) ) ) * RCSe ) + RMSe ) ) ) / ( ( ( MUR + RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( Max( RMSe,MUM ) + ( MUR * DS ) ) ,( ( RRSe / MLU ) / Max( MLU,CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.07230959894124851}, {"determining": "( Max( ( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ),( Max( FirstVNF_CPU,( ( FirstVNF_Mem * ( RRS / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( PN + ARS ) ) ) + ( ( BR * FirstVNF_RAM ) - Min( BR ,PN ) ) ) ) / ( CRS + ( ( FirstVNF_Mem - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe * Min( RRSe ,( ( MUC + DS ) + RRSe ) ) ) - ( ( ( RMSe + ( RCSe - Min( Min( RRSe ,MUR ) ,RRSe ) ) ) + RMSe ) * Min( RRSe ,MUC ) ) ) + ( RCSe + MUC ) )", "obj1": 0.7573221757322176, "obj2": 0.130569130941722}, {"determining": "( Max( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( Min( ( RRS + ARS ) ,FirstVNF_RAM ) + ARS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe * ( MLU / ( ( MLU - RRSe ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.02819236408560707}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.7845188284518828, "obj2": 0.10474628867822267}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUC + RCSe ) / MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( Max( DS,CS ) * CS ) ,CS ) ) )", "obj1": 0.6548117154811716, "obj2": 0.20305783014980566}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( Const ,( Min( Max( AMS,AMS ) ,AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( CRS - Const ) ) - ( ( ( ( CRS / ARS ) / ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + ( ( Max( BR,Const ) * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( MLU,MUM ) / Max( Max( ( CS - ( MUC - ( MUR / RMSe ) ) ),MUC ),( Max( ( RMSe - MUC ),RRSe ) / Min( MLU ,RRSe ) ) ) ) - ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / ( RMSe / CS ) ) )", "obj1": 0.9225941422594143, "obj2": 0.027448040642281093}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( ( ( Max( ACS,( ( PN + ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - ( Max( BR,PN ) - Const ) ) ) - CRS ) + Const ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( ( ( Min( ( CS - RCSe ) ,( RCSe - MLU ) ) + MLU ) * CS ) - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( RCSe ,MLU ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) * ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / DS ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 0.8179916317991632, "obj2": 0.07962697046415748}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,MUM ) / Min( MUC ,MLU ) ) - Min( MUM ,RCSe ) ) ) + ( MLU / ( ( CS - Max( ( Min( Min( MUM ,MUR ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9476987447698745, "obj2": 0.020505657170085324}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( ( ( ( FirstVNF_Mem - ( Const - AMS ) ) * Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) * Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( MUM,Min( RMSe ,( Min( RCSe ,( MLU - ( MUR + RCSe ) ) ) + RCSe ) ) ),RRSe ) * ( ( Min( RMSe ,( Min( RCSe ,MUC ) - ( MUM / Max( MUR,RCSe ) ) ) ) * Max( RCSe,DS ) ) * RRSe ) )", "obj1": 0.7907949790794979, "obj2": 0.09835665445325086}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS / ( DDR - ( ( MRS / ( ARS - FirstVNF_CPU_Server ) ) / ARS ) ) ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( Min( RCSe ,( MLU + ( ( Max( Max( MUC,CS ),MUR ) - ( RCSe - ( Max( RRSe,MUM ) * RCSe ) ) ) + RRSe ) ) ) * ( RRSe - ( ( MUC / ( ( ( ( MLU * RCSe ) / RMSe ) * RCSe ) * ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) ) - MLU ) ) )", "obj1": 0.8744769874476988, "obj2": 0.05061404440687041}, {"determining": "( ( ( ( ( FirstVNF_Mem + ( ACS / BR ) ) + FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Min( ( ( AMS / AMS ) + ( Min( RRS ,( Min( FirstVNF_Mem_Server ,DDR ) - ( FirstVNF_CPU / DDR ) ) ) / ( ( Const * MDR ) / ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + ( RRS * MRS ) ) ) ) ) ,Min( Const ,FirstVNF_Mem ) ) ) * ( ( ARS - Min( FirstVNF_RAM ,CRS ) ) - ( BR - ARS ) ) )", "choosing": "Min( Min( ( Min( ( ( MUR * Min( Max( MUM,MUR ) ,MUC ) ) - MUR ) ,CS ) / MUC ) ,MUM ) ,( ( RCSe / MUC ) + RRSe ) )", "obj1": 0.6610878661087866, "obj2": 0.194468252171246}, {"determining": "( ( DDR - ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( ( MRS - ARS ),Const ) + ARS ) ) ) ) ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,( DDR + RRS ) ) ) ) ,( ( Max( ( PN / BR ),FirstVNF_Mem_Server ) - PN ) + Const ) ),( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / ( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MUM ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) - ( MLU / RMSe ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.05227908683176889}, {"determining": "( Max( ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( Const + ACS ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( ( BR - ( RRS / ARS ) ) * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM * MUC ),( Min( Max( ( Max( MUR,RRSe ) * ( MLU - RRSe ) ),RRSe ) ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( ( MUC / RRSe ) - Min( CS ,( ( MUM + ( MUM - RMSe ) ) - MUR ) ) ) ) )", "obj1": 0.7949790794979079, "obj2": 0.09669158774083707}, {"determining": "( ( ( ARS - Min( Const ,( ( ( ARS * Const ) * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.0598357560046252}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( ( AMS + AMS ) + ( RRS / ( CRS / MRS ) ) ) + ( AMS + FirstVNF_RAM ) ) ),( FirstVNF_Mem * BR ) ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM / Max( DS,RMSe ) ) / MUM ) * ( MUR + ( ( ( ( Min( RCSe ,Min( RCSe ,CS ) ) - ( ( MLU * RMSe ) / MUR ) ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8640167364016736, "obj2": 0.05152784453698841}, {"determining": "( Max( Min( AMS ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / ( AMS + PN ) ) ),( MRS - ARS ) ) - ( ( MRS / FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "Max( ( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( MUM * CS ) ,( ( ( DS / RRSe ) * Min( RRSe ,Min( DS ,Min( MUM ,MUM ) ) ) ) * MUM ) ) ),Min( CS ,( MUC * ( Max( RCSe,( MLU / ( MUM * MUC ) ) ) * MLU ) ) ) )", "obj1": 0.7050209205020921, "obj2": 0.16498831742849923}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RMSe + ( Max( RCSe,MLU ) - ( ( MUC - MUM ) + ( Max( ( ( RCSe - MUM ) / ( DS + RRSe ) ),CS ) * DS ) ) ) ) ,( RRSe / RRSe ) )", "obj1": 0.8535564853556485, "obj2": 0.060064954738061116}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( ARS * ( CRS + RRS ) ) ),( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,Const ) ) - FirstVNF_CPU ) ) - ( ( ( Max( ACS,Const ) + ( DDR * DDR ) ) - ( Min( BR ,AMS ) - Min( PN ,DDR ) ) ) + MRS ) )", "choosing": "( ( ( ( MUC - Max( Min( ( RRSe / MUR ) ,RRSe ),DS ) ) * ( ( ( MUM * Max( RCSe,RRSe ) ) * MUC ) - ( RMSe + MUC ) ) ) - RRSe ) * ( ( ( MLU / RRSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9518828451882845, "obj2": 0.017000215383070047}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,CRS ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( RMSe - Max( ( ( DS - Min( MUR ,( RRSe - MUC ) ) ) + DS ),DS ) ) )", "obj1": 0.698744769874477, "obj2": 0.1733787471398263}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + RRSe ) ) ) )", "obj1": 0.8870292887029289, "obj2": 0.04446162980430521}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUC / MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / MUR ) ,RCSe ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.7133891213389121, "obj2": 0.1638314200932266}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) - Min( Const ,PN ) )", "choosing": "Min( ( ( Max( ( RRSe - ( ( ( RMSe * MUC ) / MUR ) - MUC ) ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( CS + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,MUR ) ,MUC ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( ( Max( FirstVNF_CPU,PN ) / FirstVNF_CPU_Server ) - Min( ( ACS * Min( DDR ,ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MLU + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( Min( MUC ,MLU ),CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8786610878661087, "obj2": 0.04691030561325898}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + RRSe ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + RRSe ) ) ) )", "obj1": 0.8891213389121339, "obj2": 0.04383387530728156}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.700836820083682, "obj2": 0.1683047351125904}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( Max( ARS,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( ( MUM + ( DS * MUC ) ) / MLU ),( ( MUC - CS ) + ( ( ( CS + Max( ( RMSe / MUM ),MUC ) ) * RCSe ) + RMSe ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( Max( RMSe,MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.8138075313807531, "obj2": 0.08179176743889788}, {"determining": "( Max( ( ( DDR - MRS ) - Max( ( PN * Min( Max( Min( FirstVNF_RAM ,ARS ),( MDR + FirstVNF_CPU ) ) ,Max( ( CRS * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,DDR ) ) ) ),( Min( ( RRS * FirstVNF_Mem ) ,( FirstVNF_CPU_Server * RRS ) ) - CRS ) ) ),ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - Max( CRS,FirstVNF_RAM ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( ( RCSe + ( MUR - CS ) ) + Min( ( MUC * ( ( MUC * ( Min( MUR ,RRSe ) + ( CS * CS ) ) ) - ( DS * CS ) ) ) ,RMSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01548724310013873}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( BR - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( RCSe - RRSe ) - ( ( ( ( MUM + RCSe ) / DS ) - Min( RRSe ,( Min( RRSe ,MLU ) * ( ( RCSe / Max( MLU,CS ) ) / ( MUC / DS ) ) ) ) ) * Max( DS,RMSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.010211013023492274}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( AMS / FirstVNF_CPU_Server ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * ( ( DS * CS ) + ( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUM / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.694560669456067, "obj2": 0.1746265176534872}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( ( Const * Max( RRS,AMS ) ) - PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( RCSe * ( RCSe + MUM ) ) * RMSe ) ) ) ,Max( ( CS * DS ),( Max( RRSe,CS ) - MUR ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( MRS,( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Min( ( MLU * RMSe ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * DS ) ) ) - MUR ) ) )", "obj1": 0.9644351464435147, "obj2": 0.013034891753074476}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM * ( MUC + ( ( MLU * RCSe ) / MUR ) ) ),( Max( DS,Min( MUC ,CS ) ) * Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.16802825218859227}, {"determining": "( FirstVNF_CPU - ( ( ( Min( ( FirstVNF_Mem * Const ) ,AMS ) * AMS ) / ( Max( Min( BR ,( Max( FirstVNF_RAM_Server,PN ) - BR ) ),CRS ) * CRS ) ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "Min( Max( ( DS * ( ( CS * RRSe ) + RCSe ) ),Min( Min( DS ,MUR ) ,( RRSe - CS ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + ( MUC - RCSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002550482499746131}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + RRSe ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.04691030561325898}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( FirstVNF_Mem - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( RRSe / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.8158995815899581, "obj2": 0.08029771053232156}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( RMSe / ( MUC * ( ( MLU / MLU ) - ( Max( CS,DS ) + DS ) ) ) ),( Min( DS ,( MUR * ( ( DS * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( MUC,MLU ) ) ) ) ) )", "obj1": 0.9602510460251046, "obj2": 0.013311730069588742}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( ( MUM + ( DS * MUC ) ) / MLU ),( Max( DS,Min( ( ( MLU - RMSe ) - MUM ) ,MUM ) ) + ( ( ( CS + Max( ( RMSe / MUM ),MUC ) ) * RCSe ) + RMSe ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( Max( RMSe,MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00872208088346264}, {"determining": "( ( BR / Const ) - Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),MDR ) )", "choosing": "( Max( DS,CS ) * ( ( RCSe + RRSe ) * ( DS / RMSe ) ) )", "obj1": 0.9769874476987448, "obj2": 0.009408934087197788}, {"determining": "( Max( Min( FirstVNF_Mem ,( FirstVNF_Mem * Min( ( Min( MDR ,ACS ) / Const ) ,Max( PN,PN ) ) ) ),FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * Min( ( ACS * BR ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( MUR / MLU ),Min( ( RRSe / MUC ) ,Max( ( Min( RCSe ,RCSe ) - RMSe ),MUR ) ) ) / ( RCSe + ( RRSe - RMSe ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ACS ,FirstVNF_CPU_Server ) - Min( RRS ,DDR ) ) * ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( Const - FirstVNF_CPU ) ) - ( Min( ACS ,( RRS + MDR ) ) + ( CRS + DDR ) ) ) ) )", "choosing": "( Min( ( DS - ( DS - RRSe ) ) ,Max( MLU,( ( MUR + MLU ) + ( ( CS / ( ( DS * CS ) + MUC ) ) / ( CS - RCSe ) ) ) ) ) * ( ( MUC - ( RMSe + CS ) ) + CS ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( MUR + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00872208088346264}, {"determining": "( Max( ( FirstVNF_Mem / MDR ),( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + MRS ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUM ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( MUM + MUM ) * ( RCSe / CS ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.011381633189458638}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.011381633189458638}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ARS ,( ( FirstVNF_Mem + FirstVNF_Mem ) / RRS ) ) - ( Max( ( RRS / CRS ),FirstVNF_Mem ) / FirstVNF_Mem ) )", "choosing": "Min( Min( Max( RMSe,Max( RCSe,( ( MLU / MUM ) + ( Max( MUM,( MUR / MUM ) ) * MUM ) ) ) ) ,RRSe ) ,( MLU * MLU ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Max( DDR,ACS ) ) ) - ( ( Const - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( MUM / ( MUM / ( ( MUC / RMSe ) / CS ) ) ) * Min( MUR ,( ( ( ( RRSe * ( RMSe * MUC ) ) / MUR ) / ( MUR * MUM ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( ( ( Const * DDR ) / ( MDR + ACS ) ) / ( MRS / FirstVNF_CPU ) ) )", "choosing": "( ( RCSe / MUM ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( CRS / FirstVNF_CPU ) ) - Max( ( PN - ( Min( Min( FirstVNF_Mem_Server ,( MRS + FirstVNF_CPU_Server ) ) ,( Const - FirstVNF_CPU ) ) + BR ) ),( MRS - ARS ) ) )", "choosing": "( ( RCSe * ( ( RMSe / RCSe ) / Min( RMSe ,DS ) ) ) * ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR / AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Min( MLU ,MUM ) / Max( MLU,DS ) ) ) - ( DS + ( ( ( MLU - RMSe ) * Max( DS,MUC ) ) / RRSe ) ) ),Min( MUC ,MUM ) ) + Min( Min( ( Max( Min( ( MUM / RMSe ) ,RCSe ),MLU ) * ( MLU + MUR ) ) ,MUM ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( AMS * PN ) * ( ACS * DDR ) ) ) / Max( ( PN - FirstVNF_RAM ),( Min( AMS ,MDR ) - CRS ) ) )", "choosing": "( ( MUC / MUR ) - ( ( ( RMSe - ( Min( RRSe ,MUR ) * Max( Max( RMSe,DS ),MUR ) ) ) - ( DS / ( MUM + RCSe ) ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RCSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / DS ),Min( RRSe ,Min( ( ( ( MUR - MUC ) + DS ) + DS ) ,RRSe ) ) ) - ( ( MLU + MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) + ( ( PN * PN ) - ( DDR * ACS ) ) ) / Max( ( ( FirstVNF_RAM / ( RRS / Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,( DDR * FirstVNF_RAM_Server ) ) ) ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ),Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - RRSe ) * Max( ( RRSe + MUM ),( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MRS * MDR ) ,( Max( Const,MDR ) / ( RRS - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * ( MUM + MLU ) ) - ( Min( Max( RCSe,MUC ) ,Min( ( MUR - MLU ) ,( MUC * Min( RCSe ,MUC ) ) ) ) / ( ( RMSe * Max( MUM,( MUC - ( RRSe - RMSe ) ) ) ) + ( MUC / Max( RMSe,RRSe ) ) ) ) ),Max( ( RCSe + ( MLU - ( MUR * RMSe ) ) ),Min( ( RMSe - DS ) ,Min( DS ,Min( DS ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( ( ( ( MRS / ( RRS / FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) / FirstVNF_RAM ),CRS ) ) * ( ( ( FirstVNF_RAM - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( RCSe * ( ( MUR / CS ) / MLU ) ) - ( DS + Min( ( Max( MLU,RMSe ) * Max( DS,MUC ) ) ,RRSe ) ) ),Min( MUC ,MUM ) ) * Min( ( Max( RRSe,( RCSe * RRSe ) ) * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + Max( Max( ( PN - BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + ( Min( ( Min( RCSe ,Max( ( RRSe * ( DS * RMSe ) ),MUC ) ) - ( RRSe + RCSe ) ) ,RCSe ) - Max( ( RRSe * Min( Max( RMSe,( RCSe * Min( DS ,RCSe ) ) ) ,RRSe ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RRSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - BR ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe - Min( ( RRSe * ( Max( MLU,RRSe ) / RRSe ) ) ,MUM ) ),( Max( Min( MUM ,MUC ),RMSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( AMS + PN ) ) - ( FirstVNF_Mem - ( BR - Min( ( MDR - AMS ) ,Max( DDR,Min( PN ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUM * CS ) ,Min( ( ( MUC / ( Min( DS ,( MLU * MUR ) ) / MUR ) ) + ( Min( ( ( RCSe - MUC ) * RCSe ) ,DS ) - MLU ) ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( MDR / PN ) ,Max( ( DDR * PN ),DDR ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - FirstVNF_RAM ) - ( FirstVNF_CPU * Max( RRS,AMS ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( Max( ( AMS + Min( Min( ACS ,Max( ( FirstVNF_CPU * ACS ),( FirstVNF_CPU - MDR ) ) ) ,FirstVNF_Mem ) ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - BR ) )", "choosing": "Max( ( MLU + ( MUM - ( ( Min( MUR ,MUR ) / ( MUR / ( MLU + ( CS - RRSe ) ) ) ) / ( Max( RCSe,MUR ) / RCSe ) ) ) ),Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Const ) / FirstVNF_Mem ) + ( CRS * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe + ( ( ( MUC - MUM ) + ( Max( Min( RCSe ,( MLU - CS ) ),CS ) * DS ) ) - Max( RCSe,MLU ) ) ) ,Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( FirstVNF_CPU_Server - ( Const + PN ) ) ) * ( AMS - FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) * Min( ( MUC + ( ( RRSe * ( MLU / ( DS - ( MUR / MUR ) ) ) ) - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS * Min( MRS ,Min( Const ,( Const * FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_CPU_Server ,MDR ) )", "choosing": "Min( Max( Max( CS,RRSe ),RMSe ) ,Max( DS,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ARS ,( RRS / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( ( BR / FirstVNF_CPU ) + ( ACS + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUC,RRSe ) * ( ( Min( RMSe ,( ( ( RCSe / RCSe ) - MUC ) - RCSe ) ) * Max( DS,RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "21": [{"determining": "( ( BR * Const ) - Max( ( FirstVNF_Mem * ( PN / BR ) ),MDR ) )", "choosing": "( ( MUM / ( MUM / Max( RMSe,CS ) ) ) * Min( MUR ,( RMSe + ( RMSe * ( ( RRSe + Min( RRSe ,MUC ) ) * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem ) - Max( ( FirstVNF_RAM_Server + CRS ),Const ) )", "choosing": "( ( Min( MUM ,CS ) + Min( MLU ,CS ) ) * ( ( RRSe + RCSe ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( Max( FirstVNF_Mem_Server,( ( Const / ( FirstVNF_CPU - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Const ) ) - RRS ) ) * Min( ( MDR * ACS ) ,( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MUR,( CS / MUC ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( ( ( ( ( ( Max( RRSe,RRSe ) * ( MLU / MUR ) ) / ( ( CS * RRSe ) - Max( RRSe,RCSe ) ) ) - Max( CS,( Min( RCSe ,MUC ) + ( MLU * MUC ) ) ) ) - DS ) - ( MUR + MUM ) ) - ( ( MLU / MUR ) + Min( RRSe ,CS ) ) ) )", "obj1": 0.5564853556485355, "obj2": 0.3139967929980099}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( FirstVNF_Mem * Const ) - RRS ) ) ,( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server / Max( ( BR * PN ),MRS ) ) ) - PN ) + AMS ) ) * ( Max( FirstVNF_Mem_Server,( MDR - MRS ) ) + ( DDR * ( Min( CRS ,Max( MRS,( BR * MRS ) ) ) + AMS ) ) ) )", "choosing": "( ( ( ( Min( ( ( DS - DS ) * RCSe ) ,( Max( MUC,MUM ) * Max( MLU,( MUR + DS ) ) ) ) * MUR ) / MUR ) / MUR ) + ( ( MLU - RMSe ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.28583014284586084}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( ( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + RCSe ) ) + ( MLU / ( ( CS - Max( ( Min( Min( DS ,RCSe ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.606694560669456, "obj2": 0.25097724497058976}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( BR - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( FirstVNF_RAM * AMS ) - Min( PN ,AMS ) ) ) + Min( FirstVNF_CPU_Server ,CRS ) ) )", "choosing": "Max( ( MUM * ( MUC + ( ( MLU * RCSe ) / MUR ) ) ),( Max( DS,Min( MUC ,CS ) ) * Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6464435146443515, "obj2": 0.21425435034254894}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / MRS ) ) - FirstVNF_Mem_Server ) / Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,DS ) / Min( MUC ,MLU ) ) - Min( RCSe ,MUM ) ) ) + ( MLU / ( ( CS - Max( ( Min( Max( CS,MUC ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2325247620956653}, {"determining": "( Max( ( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ),( Max( FirstVNF_CPU,( ( FirstVNF_Mem * ( RRS / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( PN + ARS ) ) ) + ( ( BR * FirstVNF_RAM ) - Min( BR ,PN ) ) ) ) / ( CRS + ( ( FirstVNF_Mem - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe * Min( RRSe ,( ( MUC + DS ) + RRSe ) ) ) - ( ( ( RMSe + ( RCSe - Min( Min( RRSe ,MUR ) ,RRSe ) ) ) + RMSe ) * Min( RRSe ,MUC ) ) ) + ( RCSe + MUC ) )", "obj1": 0.7573221757322176, "obj2": 0.130569130941722}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( ( FirstVNF_CPU_Server + Min( MDR ,Max( FirstVNF_CPU,Const ) ) ) * BR ),( Const + Max( DDR,BR ) ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Min( Max( ( MUM * ( Max( Min( DS ,( RRSe + RRSe ) ),RCSe ) - MUM ) ),MUC ) ,RMSe ) ,( Max( RCSe,RCSe ) + ( MUR - Max( ( CS - DS ),Max( MUR,( ( Max( RRSe,MUR ) * Max( MUR,DS ) ) * MUR ) ) ) ) ) )", "obj1": 0.7259414225941423, "obj2": 0.1339044380663284}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( Max( BR,AMS ) - Min( AMS ,PN ) ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( BR ,( Max( ( Max( AMS,PN ) + ( ( BR * FirstVNF_Mem ) / Const ) ),DDR ) + AMS ) ) * ( CRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( RRSe - ( ( RCSe / MUR ) + RRSe ) ) - ( MUC / RCSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( ( ( DS / DS ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUM + MUC ) ) ) ) * MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7677824267782427, "obj2": 0.1149625414453676}, {"determining": "( Max( ( PN * AMS ),( Max( ( RRS + Min( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - BR ) ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ),( MRS - ARS ) ) - ( AMS - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( CS * RMSe ) * ( ( Max( MLU,MUC ) + ( CS / MUC ) ) / Max( ( MUC - MUC ),MUC ) ) )", "obj1": 0.7196652719665272, "obj2": 0.15682738639378044}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( DDR * FirstVNF_CPU ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - Max( ( AMS * BR ),Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( Max( Min( ACS ,MRS ),( CRS - FirstVNF_RAM_Server ) ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( CS + MUM ) + CS ) * DS ),( ( RRSe - DS ) + MUC ) ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * MUR ) ) ) + MUR ) ) )", "obj1": 0.7217573221757322, "obj2": 0.13661886296456716}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( DDR,ACS ) ) ) - ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) / Max( Min( FirstVNF_CPU ,Const ),CRS ) ) * Min( AMS ,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / ( MUM / Max( Max( RMSe,MUM ),Min( Max( CS,RRSe ) ,( CS - ( RMSe - CS ) ) ) ) ) ) * Min( CS ,Min( MUM ,CS ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03789983870698308}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,CRS ) / MDR ) / CRS ) - DDR ) * ( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + ACS ) ) - Min( ( ACS * ( PN - RRS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Max( Min( RMSe ,MUM ),MUM ) ) ) ) ) ) * ( ( Min( MLU ,MUC ) + ( CS * MUC ) ) / Max( Min( MUM ,MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.06008764660866809}, {"determining": "( ( ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) * ( ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,( ( BR + ( ACS + MRS ) ) / PN ) ) ) - DDR ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( ( Min( ( ( ( RRSe * Min( MUR ,RMSe ) ) + ( MLU * MLU ) ) + RCSe ) ,RCSe ) / MUM ) * ( CS + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.9393305439330544, "obj2": 0.024204825722000133}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( Min( Min( PN ,Min( Min( FirstVNF_Mem ,ACS ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( DS + MUC ) - ( CS - Min( Min( Max( RCSe,MUC ) ,RMSe ) ,( Min( ( DS / RRSe ) ,RCSe ) - MLU ) ) ) ) ) + ( Min( ( RMSe - MLU ) ,RRSe ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6380753138075314, "obj2": 0.24195612736266645}, {"determining": "( Max( ( ( Min( BR ,Const ) - Min( AMS ,PN ) ) + ( FirstVNF_CPU + Const ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( ( BR * FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) ) + ( Min( Const ,( ( AMS * ( RRS + ( PN - BR ) ) ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( Min( ( ( DS / MUM ) - ( RRSe - ( RCSe - ( DS * RMSe ) ) ) ) ,MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.12500589381639257}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( MDR + ARS ) ) ) )", "choosing": "( Max( ( MUR + MLU ),( RCSe * MUC ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28262373344132685}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.07001058916685218}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.7845188284518828, "obj2": 0.10474628867822267}, {"determining": "( Max( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( Min( ( RRS + ARS ) ,FirstVNF_RAM ) + ARS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe * ( MLU / ( ( MLU - RRSe ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.02819236408560707}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUC + RCSe ) / MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( Max( DS,CS ) * CS ) ,CS ) ) )", "obj1": 0.6548117154811716, "obj2": 0.20305783014980566}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( Const ,( Min( Max( AMS,AMS ) ,AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( CRS - Const ) ) - ( ( ( ( CRS / ARS ) / ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + ( ( Max( BR,Const ) * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( MLU,MUM ) / Max( Max( ( CS - ( MUC - ( MUR / RMSe ) ) ),MUC ),( Max( ( RMSe - MUC ),RRSe ) / Min( MLU ,RRSe ) ) ) ) - ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / ( RMSe / CS ) ) )", "obj1": 0.9225941422594143, "obj2": 0.027448040642281093}, {"determining": "( ( ( ( Max( Const,Const ) / ( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM / MRS ) ) - FirstVNF_Mem ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUM * ( MUC + ( ( MLU * RCSe ) / MUM ) ) ),( Max( DS,Min( MUC ,CS ) ) * Min( ( DS * CS ) ,Min( ( ( Min( ( MUM - MUM ) ,MLU ) / Max( ( CS - RRSe ),( MLU * MUC ) ) ) * ( Max( RRSe,CS ) * RCSe ) ) ,( CS - ( DS + ( Max( RRSe,MLU ) - Min( RRSe ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6506276150627615, "obj2": 0.20446938440249213}, {"determining": "( Max( MRS,( ( ( Const * ACS ) - ( MDR * ARS ) ) + Max( DDR,MDR ) ) ) - ( ( Max( ( MDR * BR ),Min( PN ,AMS ) ) - ( ( CRS / ARS ) + Max( BR,( DDR - FirstVNF_CPU ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * ( RCSe + RMSe ) ) ) * ( ( ( MLU / MUC ) + ( MUC * CS ) ) / Max( ( MUM + MUM ),Min( ( RRSe * MUR ) ,CS ) ) ) )", "obj1": 0.9456066945606695, "obj2": 0.019575911215747564}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( ( MRS - ARS ),Const ) + ARS ) ) ) ) - DDR ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) ,( ( Max( ( PN / BR ),FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) + Const ) ),Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03976796382971673}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( ( ( ( FirstVNF_Mem - ( Const - AMS ) ) * Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) * Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( MUM,Min( RMSe ,( Min( RCSe ,( MLU - ( MUR + RCSe ) ) ) + RCSe ) ) ),RRSe ) * ( ( Min( RMSe ,( Min( RCSe ,MUC ) - ( MUM / Max( MUR,RCSe ) ) ) ) * Max( RCSe,DS ) ) * RRSe ) )", "obj1": 0.7907949790794979, "obj2": 0.09835665445325086}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 0.803347280334728, "obj2": 0.08929388093318207}, {"determining": "( Max( ( ( AMS + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( Const + ACS ) ) / ( BR - ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "( Max( ( ( RMSe - CS ) / MLU ),DS ) / ( ( Max( MLU,DS ) / Min( MLU ,MUM ) ) / ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS / ( DDR - ( ( MRS / ( ARS - FirstVNF_CPU_Server ) ) / ARS ) ) ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( Min( RCSe ,( MLU + ( ( Max( Max( MUC,CS ),MUR ) - ( RCSe - ( Max( RRSe,MUM ) * RCSe ) ) ) + RRSe ) ) ) * ( RRSe - ( ( MUC / ( ( ( ( MLU * RCSe ) / RMSe ) * RCSe ) * ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) ) - MLU ) ) )", "obj1": 0.8744769874476988, "obj2": 0.05061404440687041}, {"determining": "( ( ( ( ( FirstVNF_Mem + ( ACS / BR ) ) + FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Min( ( ( AMS / AMS ) + ( Min( RRS ,( Min( FirstVNF_Mem_Server ,DDR ) - ( FirstVNF_CPU / DDR ) ) ) / ( ( Const * MDR ) / ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + ( RRS * MRS ) ) ) ) ) ,Min( Const ,FirstVNF_Mem ) ) ) * ( ( ARS - Min( FirstVNF_RAM ,CRS ) ) - ( BR - ARS ) ) )", "choosing": "Min( Min( ( Min( ( ( MUR * Min( Max( MUM,MUR ) ,MUC ) ) - MUR ) ,CS ) / MUC ) ,MUM ) ,( ( RCSe / MUC ) + RRSe ) )", "obj1": 0.6610878661087866, "obj2": 0.194468252171246}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RMSe + ( Max( RCSe,MLU ) - ( ( MUC - MUM ) + ( Max( ( ( RCSe - MUM ) / ( DS + RRSe ) ),CS ) * DS ) ) ) ) ,( RRSe / RRSe ) )", "obj1": 0.8535564853556485, "obj2": 0.060064954738061116}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( MUR + MUM ) ,MLU ) ,( MLU * MLU ) )", "obj1": 0.8075313807531381, "obj2": 0.08234794800315615}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + Const ),( ( BR * AMS ) - Min( ( FirstVNF_CPU * DDR ) ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( Const * FirstVNF_CPU_Server ) ) + ( ( Const * ARS ) - Max( MDR,ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * ( Max( MUC,Max( ( RMSe / DS ),( MUC * DS ) ) ) - MUR ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( RCSe * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( CS,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.799163179916318, "obj2": 0.09160702012804112}, {"determining": "( ( DDR - ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( ( MRS - ARS ),Const ) + ARS ) ) ) ) ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,( DDR + RRS ) ) ) ) ,( ( Max( ( PN / BR ),FirstVNF_Mem_Server ) - PN ) + Const ) ),( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / ( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MUM ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) - ( MLU / RMSe ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.05227908683176889}, {"determining": "( Max( ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( Const + ACS ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( ( BR - ( RRS / ARS ) ) * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM * MUC ),( Min( Max( ( Max( MUR,RRSe ) * ( MLU - RRSe ) ),RRSe ) ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( ( MUC / RRSe ) - Min( CS ,( ( MUM + ( MUM - RMSe ) ) - MUR ) ) ) ) )", "obj1": 0.7949790794979079, "obj2": 0.09669158774083707}, {"determining": "( ( ARS * DDR ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( ARS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.040478491347406276}, {"determining": "( ( ( ARS - Min( Const ,( ( ( ARS * Const ) * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( ( ( MUR - ( MUR / MUM ) ) * Min( ( ( RRSe + MUC ) - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUR / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.0598357560046252}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( ( AMS + AMS ) + ( RRS / ( CRS / MRS ) ) ) + ( AMS + FirstVNF_RAM ) ) ),( FirstVNF_Mem * BR ) ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM / Max( DS,RMSe ) ) / MUM ) * ( MUR + ( ( ( ( Min( RCSe ,Min( RCSe ,CS ) ) - ( ( MLU * RMSe ) / MUR ) ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8640167364016736, "obj2": 0.05152784453698841}, {"determining": "( Max( Min( AMS ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / ( AMS + PN ) ) ),( MRS - ARS ) ) - ( ( MRS / FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "Max( ( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( MUM * CS ) ,( ( ( DS / RRSe ) * Min( RRSe ,Min( DS ,Min( MUM ,MUM ) ) ) ) * MUM ) ) ),Min( CS ,( MUC * ( Max( RCSe,( MLU / ( MUM * MUC ) ) ) * MLU ) ) ) )", "obj1": 0.7050209205020921, "obj2": 0.16498831742849923}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( ARS * ( CRS + RRS ) ) ),( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,Const ) ) - FirstVNF_CPU ) ) - ( ( ( Max( ACS,Const ) + ( DDR * DDR ) ) - ( Min( BR ,AMS ) - Min( PN ,DDR ) ) ) + MRS ) )", "choosing": "( ( ( ( MUC - Max( Min( ( RRSe / MUR ) ,RRSe ),DS ) ) * ( ( ( MUM * Max( RCSe,RRSe ) ) * MUC ) - ( RMSe + MUC ) ) ) - RRSe ) * ( ( ( MLU / RRSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9518828451882845, "obj2": 0.017000215383070047}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + RRSe ) ) ) )", "obj1": 0.8870292887029289, "obj2": 0.04446162980430521}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,CRS ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( RMSe - Max( ( ( DS - Min( MUR ,( RRSe - MUC ) ) ) + DS ),DS ) ) )", "obj1": 0.698744769874477, "obj2": 0.1733787471398263}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( FirstVNF_RAM,Min( BR ,FirstVNF_Mem_Server ) ) * ARS ) ) ) ) - DDR ) * Min( ( ( FirstVNF_RAM_Server / MDR ) / FirstVNF_CPU_Server ) ,Min( ( ACS * ( DDR - ACS ) ) ,( Const / Max( FirstVNF_RAM,( MDR * RRS ) ) ) ) ) )", "choosing": "( Max( Max( ( ( RMSe * ( DS / Max( CS,RMSe ) ) ) * Max( RRSe,( RCSe / DS ) ) ),DS ),( Max( DS,Min( ( ( MLU - RMSe ) - MUM ) ,MUR ) ) + ( ( ( CS + Min( MUC ,( MUM - RRSe ) ) ) * RCSe ) + RMSe ) ) ) / ( ( ( MUR + RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( Max( RMSe,MUM ) + ( MUR * DS ) ) ,( ( RRSe / MLU ) / Max( MLU,CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.07230959894124851}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUC / MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / MUR ) ,RCSe ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.7133891213389121, "obj2": 0.1638314200932266}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( AMS * AMS ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( ( MLU / MUC ) + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8786610878661087, "obj2": 0.04691030561325898}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) - Min( Const ,PN ) )", "choosing": "Min( ( ( Max( ( RRSe - ( ( ( RMSe * MUC ) / MUR ) - MUC ) ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( CS + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,MUR ) ,MUC ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUM + ( DS * MUC ) ) / MLU ),( Max( DS,Min( ( ( MLU - RMSe ) - MUM ) ,MUM ) ) + ( ( ( CS + Max( ( RMSe / MUM ),MUC ) ) * RCSe ) + RMSe ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( Max( RMSe,MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07520147177329733}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( ( ( Max( ACS,( ( PN + ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - ( Max( BR,PN ) - Const ) ) ) - CRS ) + Const ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( ( ( Min( ( CS - RCSe ) ,( RCSe - MLU ) ) + MLU ) * CS ) - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( RCSe ,MLU ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) * ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / DS ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 0.8179916317991632, "obj2": 0.07962697046415748}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( ( FirstVNF_RAM * FirstVNF_Mem ) - Max( ( RRS - DDR ),( FirstVNF_Mem / AMS ) ) ) ) ) ) - DDR ) * ( Min( Min( Max( MDR,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Const ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) * Max( MLU,MLU ) ) * RCSe ) * MLU ) ) - ( MUC / MLU ) ) ) * Min( DS ,( ( Min( Max( CS,MLU ) ,( DS + MLU ) ) + RRSe ) + MLU ) ) )", "obj1": 0.8891213389121339, "obj2": 0.04325563979704806}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.700836820083682, "obj2": 0.1683047351125904}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( BR - PN ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,DDR ) ) ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / RRSe ) ,( CS * MUR ) ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.9602510460251046, "obj2": 0.012898195531609003}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( FirstVNF_RAM,Min( BR ,FirstVNF_Mem_Server ) ) * ARS ) ) ) ) - DDR ) * Min( ( ( FirstVNF_RAM_Server / MDR ) / FirstVNF_CPU_Server ) ,Min( ( ACS * ( DDR - ACS ) ) ,( Const / Max( FirstVNF_RAM,( MDR * RRS ) ) ) ) ) )", "choosing": "( Max( Max( ( ( RMSe * ( DS / Max( CS,RMSe ) ) ) * Max( RRSe,( RCSe / DS ) ) ),DS ),( Max( DS,Min( ( ( MLU - RMSe ) - MUM ) ,MUR ) ) + ( ( ( CS + Min( MUC ,( MUM - RRSe ) ) ) * RCSe ) + RMSe ) ) ) / ( ( ( MUR + RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( Max( RMSe,MUM ) + ( MUR * DS ) ) ,( ( RRSe / MLU ) / Max( MLU,CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.8117154811715481, "obj2": 0.08167095337303504}, {"determining": "( Max( ( ( DDR - MRS ) - Max( ( PN * Min( Max( Min( FirstVNF_RAM ,ARS ),( MDR + FirstVNF_CPU ) ) ,Max( ( CRS * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,DDR ) ) ) ),( Min( ( RRS * FirstVNF_Mem ) ,( FirstVNF_CPU_Server * RRS ) ) - CRS ) ) ),ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - Max( CRS,FirstVNF_RAM ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( ( RCSe + ( MUR - CS ) ) + Min( ( MUC * ( ( MUC * ( Min( MUR ,RRSe ) + ( CS * CS ) ) ) - ( DS * CS ) ) ) ,RMSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01548724310013873}, {"determining": "( ( ( ARS - Min( Const ,Min( ( MRS - Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) ,( Max( ( FirstVNF_RAM - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe / Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RCSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( RMSe + MUC ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 0.8242677824267782, "obj2": 0.0746069007437417}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( Max( ( ( Const + FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_RAM_Server ) ) + Max( Min( ( ( Const * ACS ) + BR ) ,( ( AMS * ( MDR / FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ),( MDR * ARS ) ) ) )", "choosing": "( Max( ( Min( MUM ,( DS * MUC ) ) / MLU ),Min( Max( MUR,MUC ) ,( RRSe / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( ( CS * Min( Max( ( RRSe / RMSe ),RRSe ) ,MLU ) ),MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( BR - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( RCSe - RRSe ) - ( ( ( ( MUM + RCSe ) / DS ) - Min( RRSe ,( Min( RRSe ,MLU ) * ( ( RCSe / Max( MLU,CS ) ) / ( MUC / DS ) ) ) ) ) * Max( DS,RMSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.010211013023492274}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( AMS / FirstVNF_CPU_Server ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * ( ( DS * CS ) + ( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUM / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.694560669456067, "obj2": 0.1746265176534872}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ( FirstVNF_CPU_Server - ( Const + PN ) ),Max( Max( ARS,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( ( MUM + ( DS * MUR ) ) / MLU ),( ( MUC - CS ) + ( ( ( CS + Max( ( RMSe / MUM ),MUC ) ) * RCSe ) + RMSe ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( Max( RMSe,MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.8158995815899581, "obj2": 0.0801034097558062}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM * ( MUC + ( ( MLU * RCSe ) / MUR ) ) ),( Max( DS,Min( MUC ,CS ) ) * Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.16802825218859227}, {"determining": "( FirstVNF_CPU - ( ( ( Min( ( FirstVNF_Mem * Const ) ,AMS ) * AMS ) / ( Max( Min( BR ,( Max( FirstVNF_RAM_Server,PN ) - BR ) ),CRS ) * CRS ) ) / ( FirstVNF_RAM - ARS ) ) )", "choosing": "Min( Max( ( DS * ( ( CS * RRSe ) + RCSe ) ),Min( Min( DS ,MUR ) ,( RRSe - CS ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + ( MUC - RCSe ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002550482499746131}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( ( Max( FirstVNF_CPU,PN ) / FirstVNF_CPU_Server ) - Min( ( ACS * Min( DDR ,ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MLU + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( Min( MUC ,MLU ),CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8786610878661087, "obj2": 0.04691030561325898}, {"determining": "( Max( ( FirstVNF_Mem / MDR ),( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + MRS ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUM ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( MUM + MUM ) * ( RCSe / CS ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.011381633189458638}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( ( MUM + ( DS * MUC ) ) / MLU ),( Max( DS,Min( ( ( MLU - RMSe ) - MUM ) ,MUM ) ) + ( ( ( CS + Max( ( RMSe / MUM ),MUC ) ) * RCSe ) + RMSe ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( Max( RMSe,MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ACS ,FirstVNF_CPU_Server ) - Min( RRS ,DDR ) ) * ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( Const - FirstVNF_CPU ) ) - ( Min( ACS ,( RRS + MDR ) ) + ( CRS + DDR ) ) ) ) )", "choosing": "( Min( ( DS - ( DS - RRSe ) ) ,Max( MLU,( ( MUR + MLU ) + ( ( CS / ( ( DS * CS ) + MUC ) ) / ( CS - RCSe ) ) ) ) ) * ( ( MUC - ( RMSe + CS ) ) + CS ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( RRSe + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00872208088346264}, {"determining": "( ( BR / Const ) - Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),MDR ) )", "choosing": "( Max( DS,CS ) * ( ( RCSe + RRSe ) * ( DS / RMSe ) ) )", "obj1": 0.9769874476987448, "obj2": 0.009408934087197788}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( ( MUM + ( DS * MUC ) ) / MLU ),( Max( DS,Min( ( ( MLU - RMSe ) - MUM ) ,MUM ) ) + ( ( ( CS + Max( ( RMSe / MUM ),MUC ) ) * RCSe ) + RMSe ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( Max( RMSe,MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( FirstVNF_Mem_Server - Max( MDR,( MDR - PN ) ) ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( PN ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( ( RRSe - ( ( RCSe * ( RCSe + MUM ) ) * ( RMSe / ( MLU * RRSe ) ) ) ) - DS ) ,Max( ( MUC - CS ),MLU ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( ( ( MUM / Max( DS,Min( Max( CS,RRSe ) ,RMSe ) ) ) / MUM ) * ( MUR + ( ( ( MUR * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.00872208088346264}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Const ) ) - ( ( ( ( CRS / ARS ) + ( FirstVNF_CPU / DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( RMSe / ( MUC * ( ( ( RMSe * RRSe ) / MLU ) - ( Max( CS,DS ) + DS ) ) ) ),( Min( DS ,( MUR * ( ( DS * CS ) + Min( MUC ,RMSe ) ) ) ) + Max( Max( RRSe,MUC ),Max( MUC,MLU ) ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( ( Const * Max( RRS,AMS ) ) - PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( RCSe * ( RCSe + MUM ) ) * RMSe ) ) ) ,Max( ( CS * DS ),( Max( RRSe,CS ) - MUR ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.011381633189458638}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ARS ,( ( FirstVNF_Mem + FirstVNF_Mem ) / RRS ) ) - ( Max( ( RRS / CRS ),FirstVNF_Mem ) / FirstVNF_Mem ) )", "choosing": "Min( Min( Max( RMSe,Max( RCSe,( ( MLU / MUM ) + ( Max( MUM,( MUR / MUM ) ) * MUM ) ) ) ) ,RRSe ) ,( MLU * MLU ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - DDR ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * Max( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ),Max( ARS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Min( MLU ,( Min( DS ,Min( ( CS * RCSe ) ,Max( MLU,MUM ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) / ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Max( DDR,ACS ) ) ) - ( ( Const - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( MUM / ( MUM / ( ( MUC / RMSe ) / CS ) ) ) * Min( MUR ,( ( ( ( RRSe * ( RMSe * MUC ) ) / MUR ) / ( MUR * MUM ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( ( ( Const * DDR ) / ( MDR + ACS ) ) / ( MRS / FirstVNF_CPU ) ) )", "choosing": "( ( RCSe / MUM ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( CRS / FirstVNF_CPU ) ) - Max( ( PN - ( Min( Min( FirstVNF_Mem_Server ,( MRS + FirstVNF_CPU_Server ) ) ,( Const - FirstVNF_CPU ) ) + BR ) ),( MRS - ARS ) ) )", "choosing": "( ( RCSe * ( ( RMSe / RCSe ) / Min( RMSe ,DS ) ) ) * ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR / AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Min( MLU ,MUM ) / Max( MLU,DS ) ) ) - ( DS + ( ( ( MLU - RMSe ) * Max( DS,MUC ) ) / RRSe ) ) ),Min( MUC ,MUM ) ) + Min( Min( ( Max( Min( ( MUM / RMSe ) ,RCSe ),MLU ) * ( MLU + MUR ) ) ,MUM ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( AMS * PN ) * ( ACS * DDR ) ) ) / Max( ( PN - FirstVNF_RAM ),( Min( AMS ,MDR ) - CRS ) ) )", "choosing": "( ( MUC / MUR ) - ( ( ( RMSe - ( Min( RRSe ,MUR ) * Max( Max( RMSe,DS ),MUR ) ) ) - ( DS / ( MUM + RCSe ) ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RCSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / DS ),Min( RRSe ,Min( ( ( ( MUR - MUC ) + DS ) + DS ) ,RRSe ) ) ) - ( ( MLU + MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) + ( ( PN * PN ) - ( DDR * ACS ) ) ) / Max( ( ( FirstVNF_RAM / ( RRS / Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,( DDR * FirstVNF_RAM_Server ) ) ) ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ),Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - RRSe ) * Max( ( RRSe + MUM ),( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MRS * MDR ) ,( Max( Const,MDR ) / ( RRS - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * ( MUM + MLU ) ) - ( Min( Max( RCSe,MUC ) ,Min( ( MUR - MLU ) ,( MUC * Min( RCSe ,MUC ) ) ) ) / ( ( RMSe * Max( MUM,( MUC - ( RRSe - RMSe ) ) ) ) + ( MUC / Max( RMSe,RRSe ) ) ) ) ),Max( ( RCSe + ( MLU - ( MUR * RMSe ) ) ),Min( ( RMSe - DS ) ,Min( DS ,Min( DS ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( ( ( ( MRS / ( RRS / FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) / FirstVNF_RAM ),CRS ) ) * ( ( ( FirstVNF_RAM - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( RCSe * ( ( MUR / CS ) / MLU ) ) - ( DS + Min( ( Max( MLU,RMSe ) * Max( DS,MUC ) ) ,RRSe ) ) ),Min( MUC ,MUM ) ) * Min( ( Max( RRSe,( RCSe * RRSe ) ) * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) + Max( Max( ( PN - BR ),FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RCSe ) + ( Min( ( Min( RCSe ,Max( ( RRSe * ( DS * RMSe ) ),MUC ) ) - ( RRSe + RCSe ) ) ,RCSe ) - Max( ( RRSe * Min( Max( RMSe,( RCSe * Min( DS ,RCSe ) ) ) ,RRSe ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ARS / BR ) ,( DDR - ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RRSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,Min( RCSe ,RRSe ) ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - BR ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe - Min( ( RRSe * ( Max( MLU,RRSe ) / RRSe ) ) ,MUM ) ),( Max( Min( MUM ,MUC ),RMSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "( ( BR - FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( RMSe + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RCSe ) ,( DS + MLU ) ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Const ) - Max( ( FirstVNF_Mem * ( PN / BR ) ),MDR ) )", "choosing": "( ( MUM / ( MUM / Max( RMSe,CS ) ) ) * Min( MUR ,( RMSe + ( RMSe * ( ( RRSe + Min( RRSe ,MUC ) ) * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( Max( FirstVNF_Mem_Server,( ( Const / ( FirstVNF_CPU - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Const ) ) - RRS ) ) * Min( ( MDR * ACS ) ,( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MUR,( CS / MUC ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( ( ( ( ( ( Max( RRSe,RRSe ) * ( MLU / MUR ) ) / ( ( CS * RRSe ) - Max( RRSe,RCSe ) ) ) - Max( CS,( Min( RCSe ,MUC ) + ( MLU * MUC ) ) ) ) - DS ) - ( MUR + MUM ) ) - ( ( MLU / MUR ) + Min( RRSe ,CS ) ) ) )", "obj1": 0.5564853556485355, "obj2": 0.3139967929980099}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( FirstVNF_Mem * Const ) - RRS ) ) ,( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server / Max( ( BR * PN ),MRS ) ) ) - PN ) + AMS ) ) * ( Max( FirstVNF_Mem_Server,( MDR - MRS ) ) + ( DDR * ( Min( CRS ,Max( MRS,( BR * MRS ) ) ) + AMS ) ) ) )", "choosing": "( ( ( ( Min( ( ( DS - DS ) * RCSe ) ,( Max( MUC,MUM ) * Max( MLU,( MUR + DS ) ) ) ) * MUR ) / MUR ) / MUR ) + ( ( MLU - RMSe ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.28583014284586084}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( ( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + RCSe ) ) + ( MLU / ( ( CS - Max( ( Min( Min( DS ,RCSe ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.606694560669456, "obj2": 0.25097724497058976}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( Max( ( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ),( Max( FirstVNF_CPU,( ( FirstVNF_Mem * ( RRS / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( PN + ARS ) ) ) + ( ( BR * FirstVNF_RAM ) - Min( BR ,PN ) ) ) ) / ( CRS + ( ( FirstVNF_Mem - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe * Min( RRSe ,( ( MUC + DS ) + RRSe ) ) ) - ( ( ( RMSe + ( RCSe - Min( Min( RRSe ,MUR ) ,RRSe ) ) ) + RMSe ) * Min( RRSe ,MUC ) ) ) + ( RCSe + MUC ) )", "obj1": 0.7573221757322176, "obj2": 0.130569130941722}, {"determining": "( ( ( ARS * ( Const * FirstVNF_Mem ) ) - ARS ) * ( ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( ACS * ( DDR - ACS ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( ( ( DS + Max( ( MUC * Min( DS ,MUR ) ),( MUR * MUM ) ) ) + ( RCSe + MUM ) ) + RCSe ) / MUM ),( Max( DS,Min( MUC ,( CS / ( ( ( MUM / CS ) * Max( CS,RCSe ) ) * CS ) ) ) ) * Min( ( Max( DS,CS ) * CS ) ,DS ) ) )", "obj1": 0.6464435146443515, "obj2": 0.21425004833030678}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / MRS ) ) - FirstVNF_Mem_Server ) / Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,DS ) / Min( MUC ,MLU ) ) - Min( RCSe ,MUM ) ) ) + ( MLU / ( ( CS - Max( ( Min( Max( CS,MUC ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2325247620956653}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( ( FirstVNF_CPU_Server + Min( MDR ,Max( FirstVNF_CPU,Const ) ) ) * BR ),( Const + Max( DDR,BR ) ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Min( Max( ( MUM * ( Max( Min( DS ,( RRSe + RRSe ) ),RCSe ) - MUM ) ),MUC ) ,RMSe ) ,( Max( RCSe,RCSe ) + ( MUR - Max( ( CS - DS ),Max( MUR,( ( Max( RRSe,MUR ) * Max( MUR,DS ) ) * MUR ) ) ) ) ) )", "obj1": 0.7259414225941423, "obj2": 0.1339044380663284}, {"determining": "( Max( ( PN * AMS ),( Max( ( RRS + Min( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - BR ) ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ),( MRS - ARS ) ) - ( AMS - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( CS * RMSe ) * ( ( Max( MLU,MUC ) + ( CS / MUC ) ) / Max( ( MUC - MUC ),MUC ) ) )", "obj1": 0.7196652719665272, "obj2": 0.15682738639378044}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( DDR * FirstVNF_CPU ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - Max( ( AMS * BR ),Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( Max( Min( ACS ,MRS ),( CRS - FirstVNF_RAM_Server ) ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( CS + MUM ) + CS ) * DS ),( ( RRSe - DS ) + MUC ) ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * MUR ) ) ) + MUR ) ) )", "obj1": 0.7217573221757322, "obj2": 0.13661886296456716}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( Max( BR,AMS ) - Min( AMS ,PN ) ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( BR ,( Max( ( Max( AMS,PN ) + ( ( BR * FirstVNF_Mem ) / Const ) ),DDR ) + AMS ) ) * ( CRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( RRSe - ( ( RCSe / MUR ) + RRSe ) ) - ( MUC / RCSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( ( ( DS / DS ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUM + MUC ) ) ) ) * MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7677824267782427, "obj2": 0.1149625414453676}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( DDR,ACS ) ) ) - ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) / Max( Min( FirstVNF_CPU ,Const ),CRS ) ) * Min( AMS ,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / ( MUM / Max( Max( RMSe,MUM ),Min( Max( CS,RRSe ) ,( CS - ( RMSe - CS ) ) ) ) ) ) * Min( CS ,Min( MUM ,CS ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03789983870698308}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9393305439330544, "obj2": 0.02007281454107505}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( Min( Min( PN ,Min( Min( FirstVNF_Mem ,ACS ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( DS + MUC ) - ( CS - Min( Min( Max( RCSe,MUC ) ,RMSe ) ,( Min( ( DS / RRSe ) ,RCSe ) - MLU ) ) ) ) ) + ( Min( ( RMSe - MLU ) ,RRSe ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6380753138075314, "obj2": 0.24195612736266645}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( Max( BR,FirstVNF_RAM_Server ) * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.12070985841070478}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,CRS ) / MDR ) / CRS ) - DDR ) * ( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + ACS ) ) - Min( ( ACS * ( PN - RRS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Max( Min( RMSe ,MUM ),MUM ) ) ) ) ) ) * ( ( Min( MLU ,MUC ) + ( CS * MUC ) ) / Max( Min( MUM ,MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.06008764660866809}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( Const ,( Min( Max( AMS,AMS ) ,AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( CRS - Const ) ) - ( ( ( ( CRS / ARS ) / ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + ( ( Max( BR,Const ) * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( MLU,MUM ) / Max( Max( ( CS - ( MUC - ( MUR / RMSe ) ) ),MUC ),( Max( ( RMSe - MUC ),RRSe ) / Min( MLU ,RRSe ) ) ) ) - ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / ( RMSe / CS ) ) )", "obj1": 0.9225941422594143, "obj2": 0.027448040642281093}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( MDR + ARS ) ) ) )", "choosing": "( Max( ( MUR + MLU ),( RCSe * MUC ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28262373344132685}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.7845188284518828, "obj2": 0.10474628867822267}, {"determining": "( Max( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( Min( ( RRS + ARS ) ,FirstVNF_RAM ) + ARS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe * ( MLU / ( ( MLU - RRSe ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.02819236408560707}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUC + RCSe ) / MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( Max( DS,CS ) * CS ) ,CS ) ) )", "obj1": 0.6548117154811716, "obj2": 0.20305783014980566}, {"determining": "( ( ( ( Max( Const,Const ) / ( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM / MRS ) ) - FirstVNF_Mem ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUM * ( MUC + ( ( MLU * RCSe ) / MUM ) ) ),( Max( DS,Min( MUC ,CS ) ) * Min( ( DS * CS ) ,Min( ( ( Min( ( MUM - MUM ) ,MLU ) / Max( ( CS - RRSe ),( MLU * MUC ) ) ) * ( Max( RRSe,CS ) * RCSe ) ) ,( CS - ( DS + ( Max( RRSe,MLU ) - Min( RRSe ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6506276150627615, "obj2": 0.20446938440249213}, {"determining": "( ( Min( Min( Max( MDR,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Const ,( Const / FirstVNF_Mem ) ) ) * ( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + CRS ) ) - DDR ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / Max( MLU,MLU ) ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( ( ( MUR - ( MUR / MUM ) ) * ( Max( MUC,Max( MUR,( MUC * DS ) ) ) - MUR ) ) - Max( Min( Max( MUC,MLU ) ,( ( RCSe / DS ) * RCSe ) ),( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( CS,MUR ) * Max( MLU,MUM ) ) ) ) ) ) ,( ( Min( ( DS + MLU ) ,Max( CS,MLU ) ) + RRSe ) + MLU ) ) )", "obj1": 0.8326359832635983, "obj2": 0.0697313590897965}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( ( MRS - ARS ),Const ) + ARS ) ) ) ) - DDR ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) ,( ( Max( ( PN / BR ),FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) + Const ) ),Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03976796382971673}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( ( ( ( FirstVNF_Mem - ( Const - AMS ) ) * Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) * Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( MUM,Min( RMSe ,( Min( RCSe ,( MLU - ( MUR + RCSe ) ) ) + RCSe ) ) ),RRSe ) * ( ( Min( RMSe ,( Min( RCSe ,MUC ) - ( MUM / Max( MUR,RCSe ) ) ) ) * Max( RCSe,DS ) ) * RRSe ) )", "obj1": 0.7907949790794979, "obj2": 0.09835665445325086}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 0.803347280334728, "obj2": 0.08929388093318207}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( MUR + MUM ) ,MLU ) ,( MLU * MLU ) )", "obj1": 0.8075313807531381, "obj2": 0.08234794800315615}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( Min( ( BR * FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * ( RRS / Max( MDR,AMS ) ) ) ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( ( Min( MLU ,( ( MLU / MUC ) / ( RCSe + RCSe ) ) ) / MLU ),Max( ( MUC - ( ( MLU / MLU ) * CS ) ),( MUM + ( ( Max( DS,RCSe ) - CS ) * ( ( ( RMSe + RMSe ) / Max( MLU,MUR ) ) - ( ( RCSe * RRSe ) * ( MUM - RMSe ) ) ) ) ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( ( ( ( ( FirstVNF_Mem + ( ACS / BR ) ) + FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Min( ( ( AMS / AMS ) + ( Min( RRS ,( Min( FirstVNF_Mem_Server ,DDR ) - ( FirstVNF_CPU / DDR ) ) ) / ( ( Const * MDR ) / ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + ( RRS * MRS ) ) ) ) ) ,Min( Const ,FirstVNF_Mem ) ) ) * ( ( ARS - Min( FirstVNF_RAM ,CRS ) ) - ( BR - ARS ) ) )", "choosing": "Min( Min( ( Min( ( ( MUR * Min( Max( MUM,MUR ) ,MUC ) ) - MUR ) ,CS ) / MUC ) ,MUM ) ,( ( RCSe / MUC ) + RRSe ) )", "obj1": 0.6610878661087866, "obj2": 0.194468252171246}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + Const ),( ( BR * AMS ) - Min( ( FirstVNF_CPU * DDR ) ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( Const * FirstVNF_CPU_Server ) ) + ( ( Const * ARS ) - Max( MDR,ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * ( Max( MUC,Max( ( RMSe / DS ),( MUC * DS ) ) ) - MUR ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( RCSe * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( CS,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.799163179916318, "obj2": 0.09160702012804112}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS / ( DDR - ( ( MRS / ( ARS - FirstVNF_CPU_Server ) ) / ARS ) ) ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( Min( RCSe ,( MLU + ( ( Max( Max( MUC,CS ),MUR ) - ( RCSe - ( Max( RRSe,MUM ) * RCSe ) ) ) + RRSe ) ) ) * ( RRSe - ( ( MUC / ( ( ( ( MLU * RCSe ) / RMSe ) * RCSe ) * ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) ) - MLU ) ) )", "obj1": 0.8744769874476988, "obj2": 0.05061404440687041}, {"determining": "( ( DDR - ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( ( MRS - ARS ),Const ) + ARS ) ) ) ) ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,( DDR + RRS ) ) ) ) ,( ( Max( ( PN / BR ),FirstVNF_Mem_Server ) - PN ) + Const ) ),( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / ( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MUM ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) - ( MLU / RMSe ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.05227908683176889}, {"determining": "( Max( ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( Const + ACS ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( ( BR - ( RRS / ARS ) ) * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM * MUC ),( Min( Max( ( Max( MUR,RRSe ) * ( MLU - RRSe ) ),RRSe ) ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( ( MUC / RRSe ) - Min( CS ,( ( MUM + ( MUM - RMSe ) ) - MUR ) ) ) ) )", "obj1": 0.7949790794979079, "obj2": 0.09669158774083707}, {"determining": "( ( ARS * DDR ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( ARS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.040478491347406276}, {"determining": "( ( ( ARS - ( ( MRS * PN ) * FirstVNF_Mem ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( PN / FirstVNF_CPU ) ) ) / FirstVNF_Mem ) ) - Min( Min( MDR ,FirstVNF_RAM_Server ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RMSe - ( RRSe - Min( RRSe ,( MLU / DS ) ) ) ) + DS ) ,( MLU * MLU ) )", "obj1": 0.8577405857740585, "obj2": 0.059795248275162534}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( ( AMS + AMS ) + ( RRS / ( CRS / MRS ) ) ) + ( AMS + FirstVNF_RAM ) ) ),( FirstVNF_Mem * BR ) ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM / Max( DS,RMSe ) ) / MUM ) * ( MUR + ( ( ( ( Min( RCSe ,Min( RCSe ,CS ) ) - ( ( MLU * RMSe ) / MUR ) ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8640167364016736, "obj2": 0.05152784453698841}, {"determining": "( Max( MRS,( ( ( Const * ACS ) - ( MDR * ARS ) ) + Max( DDR,MDR ) ) ) - ( ( Max( ( MDR * BR ),Min( PN ,AMS ) ) - ( ( CRS / ARS ) + Max( BR,( DDR - FirstVNF_CPU ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * ( RCSe + RMSe ) ) ) * ( ( ( MLU / MUC ) + ( MUC * CS ) ) / Max( ( MUM + MUM ),Min( ( RRSe * MUR ) ,CS ) ) ) )", "obj1": 0.9456066945606695, "obj2": 0.019575911215747564}, {"determining": "( Max( Min( AMS ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / ( AMS + PN ) ) ),( MRS - ARS ) ) - ( ( MRS / FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "Max( ( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( MUM * CS ) ,( ( ( DS / RRSe ) * Min( RRSe ,Min( DS ,Min( MUM ,MUM ) ) ) ) * MUM ) ) ),Min( CS ,( MUC * ( Max( RCSe,( MLU / ( MUM * MUC ) ) ) * MLU ) ) ) )", "obj1": 0.7050209205020921, "obj2": 0.16498831742849923}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( ARS * ( CRS + RRS ) ) ),( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,Const ) ) - FirstVNF_CPU ) ) - ( ( ( Max( ACS,Const ) + ( DDR * DDR ) ) - ( Min( BR ,AMS ) - Min( PN ,DDR ) ) ) + MRS ) )", "choosing": "( ( ( ( MUC - Max( Min( ( RRSe / MUR ) ,RRSe ),DS ) ) * ( ( ( MUM * Max( RCSe,RRSe ) ) * MUC ) - ( RMSe + MUC ) ) ) - RRSe ) * ( ( ( MLU / RRSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9518828451882845, "obj2": 0.017000215383070047}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),DS ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.8117154811715481, "obj2": 0.08015770330379832}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,CRS ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( RMSe - Max( ( ( DS - Min( MUR ,( RRSe - MUC ) ) ) + DS ),DS ) ) )", "obj1": 0.698744769874477, "obj2": 0.1733787471398263}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( MUR + MUM ) ,MLU ) ,( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) )", "obj1": 0.8158995815899581, "obj2": 0.07712712412911658}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUC / MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / MUR ) ,RCSe ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.7133891213389121, "obj2": 0.1638314200932266}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( Max( FirstVNF_RAM,PN ),Const ) + ARS ) ) ) ) - DDR ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_CPU ) ) ) ) ,( ARS * MDR ) ),( Min( Const ,( ( AMS * Const ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * ( Max( MLU,DS ) / ( Max( Min( ( ( RRSe / MUC ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ),Max( Max( ( MUM * MUR ),RMSe ),MUR ) ) * MUM ) ) ) )", "obj1": 0.8493723849372385, "obj2": 0.06007281926635311}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) - Min( Const ,PN ) )", "choosing": "Min( ( ( Max( ( RRSe - ( ( ( RMSe * MUC ) / MUR ) - MUC ) ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( CS + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,MUR ) ,MUC ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) )", "choosing": "Min( ( RMSe + ( Max( RCSe,MLU ) - ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) ) ,( RRSe / RRSe ) )", "obj1": 0.8242677824267782, "obj2": 0.07278602075523256}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( ( FirstVNF_RAM * FirstVNF_Mem ) - Max( ( RRS - DDR ),( FirstVNF_Mem / AMS ) ) ) ) ) ) - DDR ) * ( Min( Min( Max( MDR,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Const ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) * Max( MLU,MLU ) ) * RCSe ) * MLU ) ) - ( MUC / MLU ) ) ) * Min( DS ,( ( Min( Max( CS,MLU ) ,( DS + MLU ) ) + RRSe ) + MLU ) ) )", "obj1": 0.8891213389121339, "obj2": 0.04325563979704806}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.700836820083682, "obj2": 0.1683047351125904}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( BR - PN ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,DDR ) ) ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / RRSe ) ,( CS * MUR ) ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.9602510460251046, "obj2": 0.012898195531609003}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( ( RCSe + ( MUR - CS ) ) + Min( ( MUC * ( ( MUC * ( Min( MUR ,RRSe ) + ( CS * CS ) ) ) - ( DS * CS ) ) ) ,RMSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.007917770637524179}, {"determining": "( Max( ( ( DDR - MRS ) - Max( ( PN * Min( Max( Min( FirstVNF_RAM ,ARS ),( MDR + FirstVNF_CPU ) ) ,Max( ( CRS * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,DDR ) ) ) ),( Min( ( RRS * FirstVNF_Mem ) ,( FirstVNF_CPU_Server * RRS ) ) - CRS ) ) ),ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - Max( CRS,FirstVNF_RAM ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( ( RCSe + ( MUR - CS ) ) + Min( ( MUC * ( ( MUC * ( Min( MUR ,RRSe ) + ( CS * CS ) ) ) - ( DS * CS ) ) ) ,RMSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01548724310013873}, {"determining": "( ( ( FirstVNF_Mem + PN ) + RRS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM + MUC ) - Min( RCSe ,RMSe ) ) - ( Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( ( MUC + MUM ) - RRSe ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8765690376569037, "obj2": 0.04727731987559975}, {"determining": "( ( ( ARS - Min( Const ,Max( ( AMS * AMS ),( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,( AMS * AMS ) ) - Min( ( ACS * ( ( ACS / FirstVNF_Mem ) - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( DS + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( ( MLU / MUC ) + ( ( Max( ( ( MLU * RRSe ) - ( CS - MUM ) ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8828451882845189, "obj2": 0.045213902229149616}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( Max( ( ( AMS + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( Const + ACS ) ) / ( BR - ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "( Max( ( ( RMSe - CS ) / MLU ),DS ) / ( ( Max( MLU,DS ) / Min( MLU ,MUM ) ) / ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( BR - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( RCSe - RRSe ) - ( ( ( ( MUM + RCSe ) / DS ) - Min( RRSe ,( Min( RRSe ,MLU ) * ( ( RCSe / Max( MLU,CS ) ) / ( MUC / DS ) ) ) ) ) * Max( DS,RMSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.010211013023492274}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( AMS / FirstVNF_CPU_Server ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * ( ( DS * CS ) + ( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUM / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.694560669456067, "obj2": 0.1746265176534872}, {"determining": "( ( FirstVNF_CPU - PN ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( CRS,BR ) ) * Min( ( FirstVNF_Mem * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RCSe / DS ) / RRSe ) ) ) ) ) ) * ( Max( ( MLU / MUC ),( CS * MUC ) ) / Max( ( MUM + Max( CS,( Min( MUM ,( MUC + MUC ) ) - ( RMSe / RRSe ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.07075922075752833}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) ) - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.046013369280182945}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + RRSe ) ) ) )", "obj1": 0.8870292887029289, "obj2": 0.04446162980430521}, {"determining": "( ( ( ARS - Min( Const ,( AMS + ARS ) ) ) - MRS ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),( Min( MUC ,RCSe ) + ( RCSe / RMSe ) ) ) / ( ( ( MUR / RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.0755516722320791}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM * ( MUC + ( ( MLU * RCSe ) / MUR ) ) ),( Max( DS,Min( MUC ,CS ) ) * Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.16802825218859227}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC / MUR ) - ( ( ( RMSe - ( Min( RRSe ,MUR ) * Max( Max( RMSe,DS ),MUR ) ) ) - ( DS / ( MUM + RCSe ) ) ) * MUM ) )", "obj1": 0.9937238493723849, "obj2": 0.0024359363605831797}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RMSe + ( Max( RCSe,MLU ) - ( ( MUC - MUM ) + ( Max( ( ( RCSe - MUM ) / ( DS + RRSe ) ),CS ) * DS ) ) ) ) ,( RRSe / RRSe ) )", "obj1": 0.8535564853556485, "obj2": 0.060064954738061116}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUM + ( DS * MUC ) ) / MLU ),( Max( DS,Min( ( ( MLU - RMSe ) - MUM ) ,MUM ) ) + ( ( ( CS + Max( ( RMSe / MUM ),MUC ) ) * RCSe ) + RMSe ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( Max( RMSe,MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07520147177329733}, {"determining": "( Max( ( FirstVNF_Mem / MDR ),( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + MRS ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUM ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( MUM + MUM ) * ( RCSe / CS ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.011381633189458638}, {"determining": "( ( BR / Const ) - Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),MDR ) )", "choosing": "( Max( DS,CS ) * ( ( RCSe + RRSe ) * ( DS / RMSe ) ) )", "obj1": 0.9769874476987448, "obj2": 0.009408934087197788}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( ( MUM + ( DS * MUC ) ) / MLU ),( Max( DS,Min( ( ( MLU - RMSe ) - MUM ) ,MUM ) ) + ( ( ( CS + Max( ( RMSe / RRSe ),MUC ) ) * RCSe ) + RMSe ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( Max( RMSe,MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ( AMS + AMS ) ,( Const / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM / Max( DS,RMSe ) ) / MUM ) * ( MUR + ( ( ( ( Min( MUC ,MUC ) - RCSe ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8305439330543933, "obj2": 0.07067612544239785}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( ( MUM + ( DS * MUC ) ) / MLU ),( Max( DS,Min( ( ( MLU - RMSe ) - MUM ) ,MUM ) ) + ( ( ( CS + Max( ( RMSe / MUM ),MUC ) ) * RCSe ) + RMSe ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( Max( RMSe,MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( ( Const * Max( RRS,AMS ) ) - PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( RCSe * ( RCSe + MUM ) ) * RMSe ) ) ) ,Max( ( CS * DS ),( Max( RRSe,CS ) - MUR ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ACS ,FirstVNF_CPU_Server ) - Min( RRS ,DDR ) ) * ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( Const - FirstVNF_CPU ) ) - ( Min( ACS ,( RRS + MDR ) ) + ( CRS + DDR ) ) ) ) )", "choosing": "( Min( ( DS - ( DS - RRSe ) ) ,Max( MLU,( ( MUR + MLU ) + ( ( CS / ( ( DS * CS ) + MUC ) ) / ( CS - RCSe ) ) ) ) ) * ( ( MUC - ( RMSe + CS ) ) + CS ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( FirstVNF_Mem_Server - Max( MDR,( MDR - PN ) ) ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( PN ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( ( RRSe - ( ( RCSe * ( RCSe + MUM ) ) * ( RMSe / ( MLU * RRSe ) ) ) ) - DS ) ,Max( ( MUC - CS ),MLU ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.011381633189458638}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Const ) ) - ( ( ( ( CRS / ARS ) + ( FirstVNF_CPU / DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( RMSe / ( MUC * ( ( ( RMSe * RRSe ) / MLU ) - ( Max( CS,DS ) + DS ) ) ) ),( Min( DS ,( MUR * ( ( DS * CS ) + Min( MUC ,RMSe ) ) ) ) + Max( Max( RRSe,MUC ),Max( MUC,MLU ) ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ARS ,( ( FirstVNF_Mem + FirstVNF_Mem ) / RRS ) ) - ( Max( ( RRS / CRS ),FirstVNF_Mem ) / FirstVNF_Mem ) )", "choosing": "Min( Min( Max( RMSe,Max( RCSe,( ( MLU / MUM ) + ( Max( MUM,( MUR / MUM ) ) * MUM ) ) ) ) ,RRSe ) ,( MLU * MLU ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( DDR - FirstVNF_Mem ) - Max( ( FirstVNF_RAM_Server + CRS ),Const ) )", "choosing": "( ( Min( MUM ,CS ) + Min( MLU ,CS ) ) * ( ( RRSe + RCSe ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - DDR ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * Max( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ),Max( ARS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Min( MLU ,( Min( DS ,Min( ( CS * RCSe ) ,Max( MLU,MUM ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) / ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Max( DDR,ACS ) ) ) - ( ( Const - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( MUM / ( MUM / ( ( MUC / RMSe ) / CS ) ) ) * Min( MUR ,( ( ( ( RRSe * ( RMSe * MUC ) ) / MUR ) / ( MUR * MUM ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( ( ( Const * DDR ) / ( MDR + ACS ) ) / ( MRS / FirstVNF_CPU ) ) )", "choosing": "( ( RCSe / MUM ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( CRS / FirstVNF_CPU ) ) - Max( ( PN - ( Min( Min( FirstVNF_Mem_Server ,( MRS + FirstVNF_CPU_Server ) ) ,( Const - FirstVNF_CPU ) ) + BR ) ),( MRS - ARS ) ) )", "choosing": "( ( RCSe * ( ( RMSe / RCSe ) / Min( RMSe ,DS ) ) ) * ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR / AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Min( MLU ,MUM ) / Max( MLU,DS ) ) ) - ( DS + ( ( ( MLU - RMSe ) * Max( DS,MUC ) ) / RRSe ) ) ),Min( MUC ,MUM ) ) + Min( Min( ( Max( Min( ( MUM / RMSe ) ,RCSe ),MLU ) * ( MLU + MUR ) ) ,MUM ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( AMS * PN ) * ( ACS * DDR ) ) ) / Max( ( PN - FirstVNF_RAM ),( Min( AMS ,MDR ) - CRS ) ) )", "choosing": "( ( MUC / MUR ) - ( ( ( RMSe - ( Min( RRSe ,MUR ) * Max( Max( RMSe,DS ),MUR ) ) ) - ( DS / ( MUM + RCSe ) ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) )", "choosing": "( ( ( ( MUC + RMSe ) - ( RCSe - Max( ( ( MLU / RRSe ) / ( DS * Min( MLU ,DS ) ) ),( ( Min( MLU ,RCSe ) * Min( MUM ,CS ) ) * ( ( RCSe - RMSe ) - ( CS + RMSe ) ) ) ) ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / DS ),Min( RRSe ,Min( ( ( ( MUR - MUC ) + DS ) + DS ) ,RRSe ) ) ) - ( ( MLU + MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) + ( ( PN * PN ) - ( DDR * ACS ) ) ) / Max( ( ( FirstVNF_RAM / ( RRS / Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,( DDR * FirstVNF_RAM_Server ) ) ) ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ),Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - RRSe ) * Max( ( RRSe + MUM ),( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Max( FirstVNF_RAM_Server,PN ) ) - Min( ( MRS * MDR ) ,( Max( Const,MDR ) / ( RRS - RRS ) ) ) )", "choosing": "Max( ( ( RMSe * ( MUM + MLU ) ) - ( Min( Max( RCSe,MUC ) ,Min( ( MUR - MLU ) ,( MUC * Min( RCSe ,MUC ) ) ) ) / ( ( RMSe * Max( MUM,( MUC - ( RRSe - RMSe ) ) ) ) + ( MUC / Max( RMSe,RRSe ) ) ) ) ),Max( ( RCSe + ( MLU - ( MUR * RMSe ) ) ),Min( ( RMSe - DS ) ,Min( DS ,Min( DS ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + BR ) ) - Max( ( ( ( MRS / ( RRS / FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) / FirstVNF_RAM ),CRS ) ) * ( ( ( FirstVNF_RAM - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( ( ( RCSe * ( ( MUR / CS ) / MLU ) ) - ( DS + Min( ( Max( MLU,RMSe ) * Max( DS,MUC ) ) ,RRSe ) ) ),Min( MUC ,MUM ) ) * Min( ( Max( RRSe,( RCSe * RRSe ) ) * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ARS ) * Min( Min( FirstVNF_RAM ,ACS ) ,( Min( ( AMS / CRS ) ,( ( ( ACS - ARS ) * Const ) / PN ) ) + ACS ) ) )", "choosing": "( ( MUM * MUR ) + ( ( RCSe - MUM ) / Max( MUM,( Min( RRSe ,RCSe ) - Max( ( RRSe / MUC ),CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "23": [{"determining": "( ( ( ( ARS - Min( Min( ( ( AMS * AMS ) * ACS ) ,Const ) ,( ( DDR * DDR ) / ( ( FirstVNF_CPU_Server * PN ) - PN ) ) ) ) - DDR ) * ( DDR * Min( AMS ,BR ) ) ) - Min( ( MDR * RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( RRSe,MUM ) * ( MUC / ( ( MUR + CS ) / Max( RMSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( RMSe + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RCSe ) ,( DS + MLU ) ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( Max( FirstVNF_Mem_Server,( ( Const / ( FirstVNF_CPU - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Const ) ) - RRS ) ) * Min( ( MDR * ACS ) ,( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MUR,( CS / MUC ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( ( ( ( ( ( Max( RRSe,RRSe ) * ( MLU / MUR ) ) / ( ( CS * RRSe ) - Max( RRSe,RCSe ) ) ) - Max( CS,( Min( RCSe ,MUC ) + ( MLU * MUC ) ) ) ) - DS ) - ( MUR + MUM ) ) - ( ( MLU / MUR ) + Min( RRSe ,CS ) ) ) )", "obj1": 0.5564853556485355, "obj2": 0.3139967929980099}, {"determining": "( Min( ( FirstVNF_CPU * MDR ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + ACS ) ) ) * Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( MUR,( RCSe / ( ( DS + MUC ) / ( ( RRSe / DS ) / ( DS - DS ) ) ) ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,CS ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.30767215481461996}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( ( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + RCSe ) ) + ( MLU / ( ( CS - Max( ( Min( Min( DS ,RCSe ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.606694560669456, "obj2": 0.25097724497058976}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( FirstVNF_Mem * Const ) - RRS ) ) ,( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server / Max( ( BR * PN ),MRS ) ) ) - PN ) + AMS ) ) * ( Max( FirstVNF_Mem_Server,( MDR - MRS ) ) + ( DDR * ( Min( CRS ,Max( MRS,( BR * MRS ) ) ) + AMS ) ) ) )", "choosing": "( ( ( ( Min( ( ( DS - DS ) * RCSe ) ,( Max( MUC,MUM ) * Max( MLU,( MUR + DS ) ) ) ) * MUR ) / MUR ) / MUR ) + ( ( MLU - RMSe ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.28583014284586084}, {"determining": "( Max( ( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ),( Max( FirstVNF_CPU,( ( FirstVNF_Mem * ( RRS / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( PN + ARS ) ) ) + ( ( BR * FirstVNF_RAM ) - Min( BR ,PN ) ) ) ) / ( CRS + ( ( FirstVNF_Mem - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe * Min( RRSe ,( ( MUC + DS ) + RRSe ) ) ) - ( ( ( RMSe + ( RCSe - Min( Min( RRSe ,MUR ) ,RRSe ) ) ) + RMSe ) * Min( RRSe ,MUC ) ) ) + ( RCSe + MUC ) )", "obj1": 0.7573221757322176, "obj2": 0.130569130941722}, {"determining": "( ( ( ARS * ( Const * FirstVNF_Mem ) ) - ARS ) * ( ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( ACS * ( DDR - ACS ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( ( ( DS + Max( ( MUC * Min( DS ,MUR ) ),( MUR * MUM ) ) ) + ( RCSe + MUM ) ) + RCSe ) / MUM ),( Max( DS,Min( MUC ,( CS / ( ( ( MUM / CS ) * Max( CS,RCSe ) ) * CS ) ) ) ) * Min( ( Max( DS,CS ) * CS ) ,DS ) ) )", "obj1": 0.6464435146443515, "obj2": 0.21425004833030678}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / MRS ) ) - FirstVNF_Mem_Server ) / Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,DS ) / Min( MUC ,MLU ) ) - Min( RCSe ,MUM ) ) ) + ( MLU / ( ( CS - Max( ( Min( Max( CS,MUC ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2325247620956653}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( ( FirstVNF_CPU_Server + Min( MDR ,Max( FirstVNF_CPU,Const ) ) ) * BR ),( Const + Max( DDR,BR ) ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Min( Max( ( MUM * ( Max( Min( DS ,( RRSe + RRSe ) ),RCSe ) - MUM ) ),MUC ) ,RMSe ) ,( Max( RCSe,RCSe ) + ( MUR - Max( ( CS - DS ),Max( MUR,( ( Max( RRSe,MUR ) * Max( MUR,DS ) ) * MUR ) ) ) ) ) )", "obj1": 0.7259414225941423, "obj2": 0.1339044380663284}, {"determining": "( Max( ( PN * AMS ),( Max( ( RRS + Min( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - BR ) ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ),( MRS - ARS ) ) - ( AMS - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( CS * RMSe ) * ( ( Max( MLU,MUC ) + ( CS / MUC ) ) / Max( ( MUC - MUC ),MUC ) ) )", "obj1": 0.7196652719665272, "obj2": 0.15682738639378044}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( DDR * FirstVNF_CPU ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - Max( ( AMS * BR ),Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( Max( Min( ACS ,MRS ),( CRS - FirstVNF_RAM_Server ) ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( CS + MUM ) + CS ) * DS ),( ( RRSe - DS ) + MUC ) ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * MUR ) ) ) + MUR ) ) )", "obj1": 0.7217573221757322, "obj2": 0.13661886296456716}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS + Max( RRSe,RRSe ) ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( RCSe + MUC ) )", "obj1": 0.6861924686192469, "obj2": 0.18375419188287842}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( Min( Min( PN ,Min( Min( FirstVNF_Mem ,ACS ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( DS + MUC ) - ( CS - Min( Min( Max( RCSe,MUC ) ,RMSe ) ,( Min( ( DS / RRSe ) ,RCSe ) - MLU ) ) ) ) ) + ( Min( ( RMSe - MLU ) ,RRSe ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6380753138075314, "obj2": 0.24195612736266645}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( Max( BR,AMS ) - Min( AMS ,PN ) ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( BR ,( Max( ( Max( AMS,PN ) + ( ( BR * FirstVNF_Mem ) / Const ) ),DDR ) + AMS ) ) * ( CRS * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( RRSe - ( ( RCSe / MUR ) + RRSe ) ) - ( MUC / RCSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( ( ( DS / DS ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUM + MUC ) ) ) ) * MUM ) - ( MUM + RCSe ) ) ) )", "obj1": 0.7677824267782427, "obj2": 0.1149625414453676}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( MDR + ARS ) ) ) )", "choosing": "( Max( ( MUR + MLU ),( RCSe * MUC ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28262373344132685}, {"determining": "( ( ( ( ( ACS - AMS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( ( ACS * Const ) - ( CRS + DDR ) ) ) - ( CRS - RRS ) ) ) + MRS ) - ( ( FirstVNF_RAM * FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( Min( MUR ,RMSe ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MUR ) / RCSe ) ) ) ) * Min( ( ( DS - ( Min( MUC ,CS ) + MLU ) ) / RRSe ) ,RRSe ) )", "obj1": 0.9351464435146444, "obj2": 0.022210372528401336}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( ( MDR / FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ,( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( MUR + MUM ) ,MLU ) ,( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( Max( RMSe,CS ) / DS ) / DS ) ) ) ) ) )", "obj1": 0.7824267782426778, "obj2": 0.10210034256497108}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUC + RCSe ) / MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( Max( DS,CS ) * CS ) ,CS ) ) )", "obj1": 0.6548117154811716, "obj2": 0.20305783014980566}, {"determining": "( ( ( ( Max( Const,Const ) / ( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM / MRS ) ) - FirstVNF_Mem ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUM * ( MUC + ( ( MLU * RCSe ) / MUM ) ) ),( Max( DS,Min( MUC ,CS ) ) * Min( ( DS * CS ) ,Min( ( ( Min( ( MUM - MUM ) ,MLU ) / Max( ( CS - RRSe ),( MLU * MUC ) ) ) * ( Max( RRSe,CS ) * RCSe ) ) ,( CS - ( DS + ( Max( RRSe,MLU ) - Min( RRSe ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6506276150627615, "obj2": 0.20446938440249213}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( Const ,( Min( Max( AMS,AMS ) ,AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( CRS - Const ) ) - ( ( ( ( CRS / ARS ) / ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + ( ( Max( BR,Const ) * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( MLU,MUM ) / Max( Max( ( CS - ( MUC - ( MUR / RMSe ) ) ),MUC ),( Max( ( RMSe - MUC ),RRSe ) / Min( MLU ,RRSe ) ) ) ) - ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / ( RMSe / CS ) ) )", "obj1": 0.9225941422594143, "obj2": 0.027448040642281093}, {"determining": "( ( Min( ARS ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( DDR,ACS ) ) ) - ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) / Max( Min( FirstVNF_CPU ,Const ),CRS ) ) * Min( AMS ,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM / ( MUM / Max( Max( RMSe,MUM ),Min( Max( CS,RRSe ) ,( CS - ( RMSe - CS ) ) ) ) ) ) * Min( CS ,Min( MUM ,CS ) ) )", "obj1": 0.9121338912133892, "obj2": 0.03789983870698308}, {"determining": "( ( ( ( FirstVNF_Mem - ( Const - AMS ) ) * Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) * Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( MUM,Min( RMSe ,( Min( RCSe ,( MLU - ( MUR + RCSe ) ) ) + RCSe ) ) ),RRSe ) * ( ( Min( RMSe ,( Min( RCSe ,MUC ) - ( MUM / Max( MUR,RCSe ) ) ) ) * Max( RCSe,DS ) ) * RRSe ) )", "obj1": 0.7907949790794979, "obj2": 0.09835665445325086}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( ( MRS - ARS ),Const ) + ARS ) ) ) ) - DDR ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) ,( ( Max( ( PN / BR ),FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) + Const ) ),Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03976796382971673}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( Max( BR,FirstVNF_RAM_Server ) * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUR,MUC ) ) + Max( ( MUM / MUC ),( Min( RMSe ,MUR ) + ( MUC * ( CS / MUC ) ) ) ) ) ,Min( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.12070985841070478}, {"determining": "( ( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_Mem,Const ) ) ) ) ) - DDR ) - ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ACS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + CS ) - Min( MLU ,MUM ) ) - ( Max( MUR,( RCSe / ( MLU / ( ( MLU / MLU ) / DS ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.032591001656630876}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 0.803347280334728, "obj2": 0.08929388093318207}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( MUR + MUM ) ,MLU ) ,( MLU * MLU ) )", "obj1": 0.8075313807531381, "obj2": 0.08234794800315615}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "( ( ( ( ( FirstVNF_Mem + ( ACS / BR ) ) + FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Min( ( ( AMS / AMS ) + ( Min( RRS ,( Min( FirstVNF_Mem_Server ,DDR ) - ( FirstVNF_CPU / DDR ) ) ) / ( ( Const * MDR ) / ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + ( RRS * MRS ) ) ) ) ) ,Min( Const ,FirstVNF_Mem ) ) ) * ( ( ARS - Min( FirstVNF_RAM ,CRS ) ) - ( BR - ARS ) ) )", "choosing": "Min( Min( ( Min( ( ( MUR * Min( Max( MUM,MUR ) ,MUC ) ) - MUR ) ,CS ) / MUC ) ,MUM ) ,( ( RCSe / MUC ) + RRSe ) )", "obj1": 0.6610878661087866, "obj2": 0.194468252171246}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ( AMS + AMS ) ,( ( AMS * AMS ) / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM / Max( DS,RMSe ) ) / MUM ) * ( MUR + ( ( ( ( Min( MUC ,MUC ) - RCSe ) * MUM ) * RMSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.8368200836820083, "obj2": 0.06317086098232244}, {"determining": "( Max( ( ( AMS + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( Const + ACS ) ) / ( BR - ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "( Max( ( ( RMSe - CS ) / MLU ),DS ) / ( ( Max( MLU,DS ) / Min( MLU ,MUM ) ) / ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS / ( DDR - ( ( MRS / ( ARS - FirstVNF_CPU_Server ) ) / ARS ) ) ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( Min( RCSe ,( MLU + ( ( Max( Max( MUC,CS ),MUR ) - ( RCSe - ( Max( RRSe,MUM ) * RCSe ) ) ) + RRSe ) ) ) * ( RRSe - ( ( MUC / ( ( ( ( MLU * RCSe ) / RMSe ) * RCSe ) * ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) ) - MLU ) ) )", "obj1": 0.8744769874476988, "obj2": 0.05061404440687041}, {"determining": "( ( DDR - ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( ( MRS - ARS ),Const ) + ARS ) ) ) ) ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,( DDR + RRS ) ) ) ) ,( ( Max( ( PN / BR ),FirstVNF_Mem_Server ) - PN ) + Const ) ),( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / ( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MUM ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) - ( MLU / RMSe ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.05227908683176889}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Min( Max( RMSe,RCSe ) ,CS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7928870292887029, "obj2": 0.09357461831892687}, {"determining": "( ( ARS * DDR ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( ARS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.040478491347406276}, {"determining": "( ( ( ARS - ( ( MRS * PN ) * FirstVNF_Mem ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( PN / FirstVNF_CPU ) ) ) / FirstVNF_Mem ) ) - Min( Min( MDR ,FirstVNF_RAM_Server ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RMSe - ( RRSe - Min( RRSe ,( MLU / DS ) ) ) ) + DS ) ,( MLU * MLU ) )", "obj1": 0.8577405857740585, "obj2": 0.059795248275162534}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( ( AMS + AMS ) + ( RRS / ( CRS / MRS ) ) ) + ( AMS + FirstVNF_RAM ) ) ),( FirstVNF_Mem * BR ) ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM / Max( DS,RMSe ) ) / MUM ) * ( MUR + ( ( ( ( Min( RCSe ,Min( RCSe ,CS ) ) - ( ( MLU * RMSe ) / MUR ) ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8640167364016736, "obj2": 0.05152784453698841}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,CRS ) / MDR ) / CRS ) - DDR ) * ( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + ACS ) ) - Min( ( ACS * ( PN - RRS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Max( Min( RMSe ,MUM ),MUM ) ) ) ) ) ) * ( ( Min( MLU ,MUC ) + ( CS * MUC ) ) / Max( Min( MUM ,MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.06008764660866809}, {"determining": "( Max( MRS,( ( ( Const * ACS ) - ( MDR * ARS ) ) + Max( DDR,MDR ) ) ) - ( ( Max( ( MDR * BR ),Min( PN ,AMS ) ) - ( ( CRS / ARS ) + Max( BR,( DDR - FirstVNF_CPU ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * ( RCSe + RMSe ) ) ) * ( ( ( MLU / MUC ) + ( MUC * CS ) ) / Max( ( MUM + MUM ),Min( ( RRSe * MUR ) ,CS ) ) ) )", "obj1": 0.9456066945606695, "obj2": 0.019575911215747564}, {"determining": "( ( Min( Min( Max( MDR,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Const ,( Const / FirstVNF_Mem ) ) ) * ( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + CRS ) ) - DDR ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / Max( MLU,MLU ) ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( ( ( MUR - ( MUR / MUM ) ) * ( Max( MUC,Max( MUR,( MUC * DS ) ) ) - MUR ) ) - Max( Min( Max( MUC,MLU ) ,( ( RCSe / DS ) * RCSe ) ),( ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( CS,MUR ) * Max( MLU,MUM ) ) ) ) ) ) ,( ( Min( ( DS + MLU ) ,Max( CS,MLU ) ) + RRSe ) + MLU ) ) )", "obj1": 0.8326359832635983, "obj2": 0.0697313590897965}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + Const ),( ( BR * AMS ) - Min( ( FirstVNF_CPU * DDR ) ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( Const * FirstVNF_CPU_Server ) ) + ( ( Const * ARS ) - Max( MDR,ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * ( Max( MUC,Max( ( RMSe / DS ),( MUC * DS ) ) ) - MUR ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( RCSe * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( CS,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.799163179916318, "obj2": 0.09160702012804112}, {"determining": "( Max( ( ( FirstVNF_CPU + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ) ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( RMSe / ( MUC * ( ( ( RMSe * RRSe ) / MLU ) - ( Max( CS,DS ) + DS ) ) ) ),( Min( DS ,( MUR * ( ( DS * CS ) + Min( MUC ,RMSe ) ) ) ) + Max( Max( RRSe,MUC ),Max( MUC,MLU ) ) ) ) ) )", "obj1": 0.7615062761506276, "obj2": 0.11774479026578272}, {"determining": "( Max( Min( AMS ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / ( AMS + PN ) ) ),( MRS - ARS ) ) - ( ( MRS / FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "Max( ( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( MUM * CS ) ,( ( ( DS / RRSe ) * Min( RRSe ,Min( DS ,Min( MUM ,MUM ) ) ) ) * MUM ) ) ),Min( CS ,( MUC * ( Max( RCSe,( MLU / ( MUM * MUC ) ) ) * MLU ) ) ) )", "obj1": 0.7050209205020921, "obj2": 0.16498831742849923}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( ARS * ( CRS + RRS ) ) ),( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,Const ) ) - FirstVNF_CPU ) ) - ( ( ( Max( ACS,Const ) + ( DDR * DDR ) ) - ( Min( BR ,AMS ) - Min( PN ,DDR ) ) ) + MRS ) )", "choosing": "( ( ( ( MUC - Max( Min( ( RRSe / MUR ) ,RRSe ),DS ) ) * ( ( ( MUM * Max( RCSe,RRSe ) ) * MUC ) - ( RMSe + MUC ) ) ) - RRSe ) * ( ( ( MLU / RRSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9518828451882845, "obj2": 0.017000215383070047}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),DS ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.8117154811715481, "obj2": 0.08015770330379832}, {"determining": "( Max( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( Min( ( RRS + ARS ) ,FirstVNF_RAM ) + ARS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe * ( MLU / ( ( MLU - RRSe ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.02819236408560707}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,CRS ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( RMSe - Max( ( ( DS - Min( MUR ,( RRSe - MUC ) ) ) + DS ),DS ) ) )", "obj1": 0.698744769874477, "obj2": 0.1733787471398263}, {"determining": "( ( ( ARS - Min( Const ,( ( Max( Min( ARS ,MRS ),DDR ) * AMS ) * ( ARS + ( ( PN / CRS ) / FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( RRSe - Min( MUC ,( CS - RRSe ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUC / ( ( ( ( RCSe / MLU ) * RMSe ) * RCSe ) * ( ( Max( MLU,RRSe ) + ( RRSe - MUC ) ) - ( MUR + MUM ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07141561894457803}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUC / MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / MUR ) ,RCSe ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.7133891213389121, "obj2": 0.1638314200932266}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( Max( FirstVNF_RAM,PN ),Const ) + ARS ) ) ) ) - DDR ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_CPU ) ) ) ) ,( ARS * MDR ) ),( Min( Const ,( ( AMS * Const ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * ( Max( MLU,DS ) / ( Max( Min( ( ( RRSe / MUC ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ),Max( Max( ( MUM * MUR ),RMSe ),MUR ) ) * MUM ) ) ) )", "obj1": 0.8493723849372385, "obj2": 0.06007281926635311}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9393305439330544, "obj2": 0.02007281454107505}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( Min( ( BR * FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * ( RRS / Max( MDR,AMS ) ) ) ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( ( Min( MLU ,( ( MLU / MUC ) / ( RCSe + RCSe ) ) ) / MLU ),Max( ( MUC - ( ( MLU / MLU ) * CS ) ),( MUM + ( ( Max( DS,RCSe ) - CS ) * ( ( ( RMSe + RMSe ) / Max( MLU,MUR ) ) - ( ( RCSe * RRSe ) * ( MUM - RMSe ) ) ) ) ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) - Min( Const ,PN ) )", "choosing": "Min( ( ( Max( ( RRSe - ( ( ( RMSe * MUC ) / MUR ) - MUC ) ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( CS + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,MUR ) ,MUC ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( MUR + MUM ) ,MLU ) ,( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) )", "obj1": 0.8158995815899581, "obj2": 0.07712712412911658}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.700836820083682, "obj2": 0.1683047351125904}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( BR - PN ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,DDR ) ) ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / RRSe ) ,( CS * MUR ) ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.9602510460251046, "obj2": 0.012898195531609003}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( ( FirstVNF_RAM * FirstVNF_Mem ) - Max( ( RRS - DDR ),( FirstVNF_Mem / AMS ) ) ) ) ) ) - DDR ) * ( Min( Min( Max( MDR,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Const ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) * Max( MLU,MLU ) ) * RCSe ) * MLU ) ) - ( MUC / MLU ) ) ) * Min( DS ,( ( Min( Max( CS,MLU ) ,( DS + MLU ) ) + RRSe ) + MLU ) ) )", "obj1": 0.8891213389121339, "obj2": 0.04325563979704806}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( ( RCSe + ( MUR - CS ) ) + Min( ( MUC * ( ( MUC * ( Min( MUR ,RRSe ) + ( CS * CS ) ) ) - ( DS * CS ) ) ) ,RMSe ) ) )", "obj1": 0.9790794979079498, "obj2": 0.007917770637524179}, {"determining": "( Max( ( ( DDR - MRS ) - Max( ( PN * Min( Max( Min( FirstVNF_RAM ,ARS ),( MDR + FirstVNF_CPU ) ) ,Max( ( CRS * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,DDR ) ) ) ),( Min( ( RRS * FirstVNF_Mem ) ,( FirstVNF_CPU_Server * RRS ) ) - CRS ) ) ),ACS ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - Max( CRS,FirstVNF_RAM ) ) + MRS ) )", "choosing": "Min( ( MUM + ( RCSe / CS ) ) ,( ( RCSe + ( MUR - CS ) ) + Min( ( MUC * ( ( MUC * ( Min( MUR ,RRSe ) + ( CS * CS ) ) ) - ( DS * CS ) ) ) ,RMSe ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01548724310013873}, {"determining": "( ( ( ARS - Min( Const ,Max( ( AMS * AMS ),( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,( AMS * AMS ) ) - Min( ( ACS * ( ( ACS / FirstVNF_Mem ) - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( DS + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( ( MLU / MUC ) + ( ( Max( ( ( MLU * RRSe ) - ( CS - MUM ) ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8828451882845189, "obj2": 0.045213902229149616}, {"determining": "( ( ( FirstVNF_Mem + PN ) + RRS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM + MUC ) - Min( RCSe ,RMSe ) ) - ( Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( ( MUC + MUM ) - RRSe ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8765690376569037, "obj2": 0.04727731987559975}, {"determining": "( ( ( ARS - Min( Const ,( AMS + ARS ) ) ) - MRS ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),( Min( MUC ,RCSe ) + ( RCSe / RMSe ) ) ) / ( ( ( MUR / RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.0755516722320791}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( BR - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( RCSe - RRSe ) - ( ( ( ( MUM + RCSe ) / DS ) - Min( RRSe ,( Min( RRSe ,MLU ) * ( ( RCSe / Max( MLU,CS ) ) / ( MUC / DS ) ) ) ) ) * Max( DS,RMSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.010211013023492274}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( AMS / FirstVNF_CPU_Server ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * ( ( DS * CS ) + ( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUM / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.694560669456067, "obj2": 0.1746265176534872}, {"determining": "( ( FirstVNF_CPU - PN ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( CRS,BR ) ) * Min( ( FirstVNF_Mem * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RCSe / DS ) / RRSe ) ) ) ) ) ) * ( Max( ( MLU / MUC ),( CS * MUC ) ) / Max( ( MUM + Max( CS,( Min( MUM ,( MUC + MUC ) ) - ( RMSe / RRSe ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.07075922075752833}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) ) - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.046013369280182945}, {"determining": "( ( ( ARS - Min( Const ,Min( ( ( Min( CRS ,FirstVNF_CPU_Server ) + ( Const / PN ) ) * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( AMS * AMS ) + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUM ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + Max( ( Min( RRSe ,( CS / RRSe ) ) + MUM ),( RCSe / CS ) ) ) ) ) )", "obj1": 0.8870292887029289, "obj2": 0.04425459158390734}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM * ( MUC + ( ( MLU * RCSe ) / MUR ) ) ),( Max( DS,Min( MUC ,CS ) ) * Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.16802825218859227}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC / MUR ) - ( ( ( RMSe - ( Min( RRSe ,MUR ) * Max( Max( RMSe,DS ),MUR ) ) ) - ( DS / ( MUM + RCSe ) ) ) * MUM ) )", "obj1": 0.9937238493723849, "obj2": 0.0024359363605831797}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RMSe + ( Max( RCSe,MLU ) - ( ( MUC - MUM ) + ( Max( ( ( RCSe - MUM ) / ( DS + RRSe ) ),CS ) * DS ) ) ) ) ,( RRSe / RRSe ) )", "obj1": 0.8535564853556485, "obj2": 0.060064954738061116}, {"determining": "( Max( ( FirstVNF_Mem / MDR ),( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + MRS ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUM ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( MUM + MUM ) * ( RCSe / CS ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.011381633189458638}, {"determining": "( ( BR / Const ) - Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),MDR ) )", "choosing": "( Max( DS,CS ) * ( ( RCSe + RRSe ) * ( DS / RMSe ) ) )", "obj1": 0.9769874476987448, "obj2": 0.009408934087197788}, {"determining": "( ( ( ( ( FirstVNF_CPU / ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,CRS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) + ( PN / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( DS / ( RMSe / ( RCSe * RMSe ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9874476987447699, "obj2": 0.004157974807349276}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RMSe + MLU ) ,( RRSe / RRSe ) )", "obj1": 0.8179916317991632, "obj2": 0.07562385623020304}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ( AMS + AMS ) ,( Const / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM / Max( DS,RMSe ) ) / MUM ) * ( MUR + ( ( ( ( Min( MUC ,MUC ) - RCSe ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8305439330543933, "obj2": 0.07067612544239785}, {"determining": "( ( PN / ( ( RRS / ( MRS * CRS ) ) / PN ) ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / RRS ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) - Max( MRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( MUM + ( DS * MUC ) ) / MLU ),( Max( DS,Min( ( ( ( RMSe - MLU ) - RMSe ) - MUM ) ,MUM ) ) + ( ( ( CS + Max( ( RMSe / RRSe ),MUC ) ) * RCSe ) / RMSe ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Max( ( RCSe * MUC ),( RMSe + MLU ) ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ACS ,FirstVNF_CPU_Server ) - Min( RRS ,DDR ) ) * ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( Const - FirstVNF_CPU ) ) - ( Min( ACS ,( RRS + MDR ) ) + ( CRS + DDR ) ) ) ) )", "choosing": "( Min( ( DS - ( DS - RRSe ) ) ,Max( MLU,( ( MUR + MLU ) + ( ( CS / ( ( DS * CS ) + MUC ) ) / ( CS - RCSe ) ) ) ) ) * ( ( MUC - ( RMSe + CS ) ) + CS ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Const ) ) - ( ( ( ( CRS / ARS ) + ( FirstVNF_CPU / DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( RMSe / ( MUC * ( ( ( RMSe * RRSe ) / MLU ) - ( Max( CS,DS ) + DS ) ) ) ),( Min( DS ,( MUR * ( ( DS * CS ) + Min( MUC ,RMSe ) ) ) ) + Max( Max( RRSe,MUC ),Max( MUC,MLU ) ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.011381633189458638}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( ( ( MUM + ( DS * MUC ) ) / MLU ),( Max( DS,Min( ( ( MLU - RMSe ) - MUM ) ,MUM ) ) + ( ( ( CS + Max( ( RMSe / RRSe ),MUC ) ) * RCSe ) + RMSe ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( Max( RMSe,MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( ( Const * Max( RRS,AMS ) ) - PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( RCSe * ( RCSe + MUM ) ) * RMSe ) ) ) ,Max( ( CS * DS ),( Max( RRSe,CS ) - MUR ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( DS - RRSe ) ) ,Max( MLU,( ( MUR + MLU ) + ( ( CS * ( MLU + MUC ) ) / ( CS + RCSe ) ) ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ARS ,( ( FirstVNF_Mem + FirstVNF_Mem ) / RRS ) ) - ( Max( ( RRS / CRS ),FirstVNF_Mem ) / FirstVNF_Mem ) )", "choosing": "Min( Min( Max( RMSe,Max( RCSe,( ( MLU / MUM ) + ( Max( MUM,( MUR / MUM ) ) * MUM ) ) ) ) ,RRSe ) ,( MLU * MLU ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( BR * Const ) - Max( ( FirstVNF_Mem * ( PN / BR ) ),MDR ) )", "choosing": "( ( MUM / ( MUM / Max( RMSe,CS ) ) ) * Min( MUR ,( RMSe + ( RMSe * ( ( RRSe + Min( RRSe ,MUC ) ) * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem ) - Max( ( FirstVNF_RAM_Server + CRS ),Const ) )", "choosing": "( ( Min( MUM ,CS ) + Min( MLU ,CS ) ) * ( ( RRSe + RCSe ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - DDR ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * Max( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ),Max( ARS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Min( MLU ,( Min( DS ,Min( ( CS * RCSe ) ,Max( MLU,MUM ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) / ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Max( DDR,ACS ) ) ) - ( ( Const - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( MUM / ( MUM / ( ( MUC / RMSe ) / CS ) ) ) * Min( MUR ,( ( ( ( RRSe * ( RMSe * MUC ) ) / MUR ) / ( MUR * MUM ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( ( ( Const * DDR ) / ( MDR + ACS ) ) / ( MRS / FirstVNF_CPU ) ) )", "choosing": "( ( RCSe / MUM ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "24": [{"determining": "( Min( ( FirstVNF_Mem_Server - MRS ) ,DDR ) * ( ( ( Const * FirstVNF_RAM ) - ( FirstVNF_Mem * ARS ) ) + AMS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Max( MLU,MUM ) ) - ( Max( MUR,( ( MLU / MLU ) / Min( ( Max( MLU,MLU ) * CS ) ,( DS - ( DS - RRSe ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) * ( CS * MUC ) ) / Max( ( MUM + RRSe ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS - Min( Min( ( ( AMS * AMS ) * ACS ) ,Const ) ,( ( DDR * DDR ) / ( ( FirstVNF_CPU_Server * PN ) - PN ) ) ) ) - DDR ) * ( DDR * Min( AMS ,BR ) ) ) - Min( ( MDR * RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( RRSe,MUM ) * ( MUC / ( ( MUR + CS ) / Max( RMSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( Max( FirstVNF_Mem_Server,( ( Const / ( FirstVNF_CPU - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Const ) ) - RRS ) ) * Min( ( MDR * ACS ) ,( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MUR,( CS / MUC ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( ( ( ( ( ( Max( RRSe,RRSe ) * ( MLU / MUR ) ) / ( ( CS * RRSe ) - Max( RRSe,RCSe ) ) ) - Max( CS,( Min( RCSe ,MUC ) + ( MLU * MUC ) ) ) ) - DS ) - ( MUR + MUM ) ) - ( ( MLU / MUR ) + Min( RRSe ,CS ) ) ) )", "obj1": 0.5564853556485355, "obj2": 0.3139967929980099}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUM ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( MUM + MUM ) * ( RCSe / CS ) ) ) )", "obj1": 0.7531380753138075, "obj2": 0.11299411079426579}, {"determining": "( Min( ( FirstVNF_CPU * MDR ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + ACS ) ) ) * Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( MUR,( RCSe / ( ( DS + MUC ) / ( ( RRSe / DS ) / ( DS - DS ) ) ) ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,CS ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.30767215481461996}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( ( FirstVNF_CPU_Server + Min( MDR ,Max( FirstVNF_CPU,Const ) ) ) * BR ),( Const + Max( DDR,BR ) ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Min( Max( ( MUM * ( Max( Min( DS ,( RRSe + RRSe ) ),RCSe ) - MUM ) ),MUC ) ,RMSe ) ,( Max( RCSe,RCSe ) + ( MUR - Max( ( CS - DS ),Max( MUR,( ( Max( RRSe,MUR ) * Max( MUR,DS ) ) * MUR ) ) ) ) ) )", "obj1": 0.7259414225941423, "obj2": 0.1339044380663284}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( ( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + RCSe ) ) + ( MLU / ( ( CS - Max( ( Min( Min( DS ,RCSe ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.606694560669456, "obj2": 0.25097724497058976}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( FirstVNF_Mem * Const ) - RRS ) ) ,( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server / Max( ( BR * PN ),MRS ) ) ) - PN ) + AMS ) ) * ( Max( FirstVNF_Mem_Server,( MDR - MRS ) ) + ( DDR * ( Min( CRS ,Max( MRS,( BR * MRS ) ) ) + AMS ) ) ) )", "choosing": "( ( ( ( Min( ( ( DS - DS ) * RCSe ) ,( Max( MUC,MUM ) * Max( MLU,( MUR + DS ) ) ) ) * MUR ) / MUR ) / MUR ) + ( ( MLU - RMSe ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.28583014284586084}, {"determining": "( ( ( ARS * ( Const * FirstVNF_Mem ) ) - ARS ) * ( ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( ( ACS * ( DDR - ACS ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( ( ( DS + Max( ( MUC * Min( DS ,MUR ) ),( MUR * MUM ) ) ) + ( RCSe + MUM ) ) + RCSe ) / MUM ),( Max( DS,Min( MUC ,( CS / ( ( ( MUM / CS ) * Max( CS,RCSe ) ) * CS ) ) ) ) * Min( ( Max( DS,CS ) * CS ) ,DS ) ) )", "obj1": 0.6464435146443515, "obj2": 0.21425004833030678}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_CPU / MRS ) ) - FirstVNF_Mem_Server ) / Max( MRS,FirstVNF_RAM_Server ) ) + AMS ) * DDR ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( ( Max( MLU,DS ) / Min( MUC ,MLU ) ) - Min( RCSe ,MUM ) ) ) + ( MLU / ( ( CS - Max( ( Min( Max( CS,MUC ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2325247620956653}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( Max( ( PN * AMS ),( Max( ( RRS + Min( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - BR ) ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ),( MRS - ARS ) ) - ( AMS - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( CS * RMSe ) * ( ( Max( MLU,MUC ) + ( CS / MUC ) ) / Max( ( MUC - MUC ),MUC ) ) )", "obj1": 0.7196652719665272, "obj2": 0.15682738639378044}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( DDR * FirstVNF_CPU ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - Max( ( AMS * BR ),Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( Max( Min( ACS ,MRS ),( CRS - FirstVNF_RAM_Server ) ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( CS + MUM ) + CS ) * DS ),( ( RRSe - DS ) + MUC ) ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * MUR ) ) ) + MUR ) ) )", "obj1": 0.7217573221757322, "obj2": 0.13661886296456716}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS + Max( RRSe,RRSe ) ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( RCSe + MUC ) )", "obj1": 0.6861924686192469, "obj2": 0.18375419188287842}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( ( Min( MLU ,( ( MLU / MUC ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.7740585774058577, "obj2": 0.10715698826989109}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( Min( Min( PN ,Min( Min( FirstVNF_Mem ,ACS ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( DS + MUC ) - ( CS - Min( Min( Max( RCSe,MUC ) ,RMSe ) ,( Min( ( DS / RRSe ) ,RCSe ) - MLU ) ) ) ) ) + ( Min( ( RMSe - MLU ) ,RRSe ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6380753138075314, "obj2": 0.24195612736266645}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( MDR + ARS ) ) ) )", "choosing": "( Max( ( MUR + MLU ),( RCSe * MUC ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28262373344132685}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( Const,( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( AMS / FirstVNF_Mem_Server ) / DDR ) ) ) ,( DDR + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( RRSe * RCSe ) ,MUC ) * ( MUR + ( ( ( ( Min( MUC ,MUC ) - RCSe ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8075313807531381, "obj2": 0.07559609615975409}, {"determining": "( ( ( ( ( ACS - AMS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( ( ACS * Const ) - ( CRS + DDR ) ) ) - ( CRS - RRS ) ) ) + MRS ) - ( ( FirstVNF_RAM * FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( Min( MUR ,RMSe ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MUR ) / RCSe ) ) ) ) * Min( ( ( DS - ( Min( MUC ,CS ) + MLU ) ) / RRSe ) ,RRSe ) )", "obj1": 0.9351464435146444, "obj2": 0.022210372528401336}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7824267782426778, "obj2": 0.10101181853800154}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUC + RCSe ) / MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( Max( DS,CS ) * CS ) ,CS ) ) )", "obj1": 0.6548117154811716, "obj2": 0.20305783014980566}, {"determining": "( ( ( ( Max( Const,Const ) / ( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM / MRS ) ) - FirstVNF_Mem ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUM * ( MUC + ( ( MLU * RCSe ) / MUM ) ) ),( Max( DS,Min( MUC ,CS ) ) * Min( ( DS * CS ) ,Min( ( ( Min( ( MUM - MUM ) ,MLU ) / Max( ( CS - RRSe ),( MLU * MUC ) ) ) * ( Max( RRSe,CS ) * RCSe ) ) ,( CS - ( DS + ( Max( RRSe,MLU ) - Min( RRSe ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6506276150627615, "obj2": 0.20446938440249213}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( ARS / ( PN - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR / PN ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - ( ( DDR / FirstVNF_CPU_Server ) - Const ) ) ) + MRS ) )", "choosing": "( ( ( ( ( Min( MUR ,( Min( RMSe ,MUC ) - Min( MLU ,MUC ) ) ) / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + CS ) ) + ( MLU / ( ( ( MUR - MUR ) - Max( ( Min( Min( RCSe ,DS ) ,RMSe ) + RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9456066945606695, "obj2": 0.016960403410094346}, {"determining": "( ( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_Mem,Const ) ) ) ) ) - DDR ) - ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ACS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + CS ) - Min( MLU ,MUM ) ) - ( Max( MUR,( RCSe / ( MLU / ( ( MLU / MLU ) / DS ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.032591001656630876}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( ( MDR / FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ,( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( MUR + MUM ) ,MLU ) ,( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( Max( RMSe,CS ) / DS ) / DS ) ) ) ) ) )", "obj1": 0.805439330543933, "obj2": 0.0847427110804511}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( Const ,( Min( Max( AMS,AMS ) ,AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( CRS - Const ) ) - ( ( ( ( CRS / ARS ) / ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + ( ( Max( BR,Const ) * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( MLU,MUM ) / Max( Max( ( CS - ( MUC - ( MUR / RMSe ) ) ),MUC ),( Max( ( RMSe - MUC ),RRSe ) / Min( MLU ,RRSe ) ) ) ) - ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / ( RMSe / CS ) ) )", "obj1": 0.9225941422594143, "obj2": 0.027448040642281093}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Const + ACS ) - BR ) ) - DDR ) * ( Min( ( ACS * ( CRS - ( ARS + ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_Mem ) ) ) ) ,( Const / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( ( CS / ( Max( ( MUR * MUM ),RRSe ) * ( DS * Min( RMSe ,MUM ) ) ) ) / DS ),( Min( DS ,( MUR * ( ( MLU * CS ) + Min( MUC ,DS ) ) ) ) + Max( Max( RRSe,MUC ),Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.6924686192468619, "obj2": 0.17574683664544327}, {"determining": "( ( ( ( FirstVNF_Mem - ( Const - AMS ) ) * Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) * Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( MUM,Min( RMSe ,( Min( RCSe ,( MLU - ( MUR + RCSe ) ) ) + RCSe ) ) ),RRSe ) * ( ( Min( RMSe ,( Min( RCSe ,MUC ) - ( MUM / Max( MUR,RCSe ) ) ) ) * Max( RCSe,DS ) ) * RRSe ) )", "obj1": 0.7907949790794979, "obj2": 0.09835665445325086}, {"determining": "( ( ( ARS - Min( Const ,( AMS + ARS ) ) ) - MRS ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),( Min( MUC ,RCSe ) + ( RCSe / RMSe ) ) ) / ( ( ( MUR / RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.0755516722320791}, {"determining": "( ( ( ( ( FirstVNF_Mem + ( ACS / BR ) ) + FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Min( ( ( AMS / AMS ) + ( Min( RRS ,( Min( FirstVNF_Mem_Server ,DDR ) - ( FirstVNF_CPU / DDR ) ) ) / ( ( Const * MDR ) / ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + ( RRS * MRS ) ) ) ) ) ,Min( Const ,FirstVNF_Mem ) ) ) * ( ( ARS - Min( FirstVNF_RAM ,CRS ) ) - ( BR - ARS ) ) )", "choosing": "Min( Min( ( Min( ( ( MUR * Min( Max( MUM,MUR ) ,MUC ) ) - MUR ) ,CS ) / MUC ) ,MUM ) ,( ( RCSe / MUC ) + RRSe ) )", "obj1": 0.6610878661087866, "obj2": 0.194468252171246}, {"determining": "( ( FirstVNF_RAM / ( ( Min( ( ( Min( FirstVNF_CPU ,ACS ) - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) + DDR ) ) * Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - Min( Max( MUC,RRSe ) ,( MUM - RRSe ) ) ) ) * MUM ) - Max( Max( RMSe,( CS * MUR ) ),MUR ) ) + ( MLU / ( ( CS - Max( ( Min( Min( CS ,RCSe ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9058577405857741, "obj2": 0.034581817291802895}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ( AMS + AMS ) ,( ( AMS * AMS ) / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM / Max( DS,RMSe ) ) / MUM ) * ( MUR + ( ( ( ( Min( MUC ,MUC ) - RCSe ) * MUM ) * RMSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.8368200836820083, "obj2": 0.06317086098232244}, {"determining": "( ( ( ARS - Min( Const ,( Min( Max( MRS,FirstVNF_Mem_Server ) ,AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUC ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RMSe / MUC ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( CS / RCSe ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06804264282929773}, {"determining": "( ( DDR - ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( ( MRS - ARS ),Const ) + ARS ) ) ) ) ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,( DDR + RRS ) ) ) ) ,( ( Max( ( PN / BR ),FirstVNF_Mem_Server ) - PN ) + Const ) ),( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / ( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MUM ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) - ( MLU / RMSe ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.05227908683176889}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9393305439330544, "obj2": 0.02007281454107505}, {"determining": "( ( ARS * DDR ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( ARS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.040478491347406276}, {"determining": "( ( ( ARS - ( ( MRS * PN ) * FirstVNF_Mem ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( PN / FirstVNF_CPU ) ) ) / FirstVNF_Mem ) ) - Min( Min( MDR ,FirstVNF_RAM_Server ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RMSe - ( RRSe - Min( RRSe ,( MLU / DS ) ) ) ) + DS ) ,( MLU * MLU ) )", "obj1": 0.8577405857740585, "obj2": 0.059795248275162534}, {"determining": "( Max( ( Min( Min( CRS ,( ( ARS - ACS ) + RRS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ),MRS ) - ( ( BR - ACS ) + Min( ( FirstVNF_Mem * CRS ) ,CRS ) ) )", "choosing": "( ( ( ( MLU * ( ( ( ( MUM + MLU ) / RMSe ) + RRSe ) / Max( RCSe,MUR ) ) ) * ( ( ( MUM * Max( RRSe,RCSe ) ) * MUC ) - ( RMSe + MUC ) ) ) * RRSe ) * ( ( ( RRSe / RMSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( ( DS + Min( MUR ,( MLU - RMSe ) ) ) / Min( MLU ,( MLU + MUR ) ) ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01483061349282627}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,CRS ) / MDR ) / CRS ) - DDR ) * ( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + ACS ) ) - Min( ( ACS * ( PN - RRS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Max( Min( RMSe ,MUM ),MUM ) ) ) ) ) ) * ( ( Min( MLU ,MUC ) + ( CS * MUC ) ) / Max( Min( MUM ,MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.06008764660866809}, {"determining": "( Max( Min( AMS ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / ( AMS + PN ) ) ),( MRS - ARS ) ) - ( ( MRS / FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "Max( ( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( MUM * CS ) ,( ( ( DS / RRSe ) * Min( RRSe ,Min( DS ,Min( MUM ,MUM ) ) ) ) * MUM ) ) ),Min( CS ,( MUC * ( Max( RCSe,( MLU / ( MUM * MUC ) ) ) * MLU ) ) ) )", "obj1": 0.7050209205020921, "obj2": 0.16498831742849923}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 0.803347280334728, "obj2": 0.08929388093318207}, {"determining": "( Max( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( Min( ( RRS + ARS ) ,FirstVNF_RAM ) + ARS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe * ( MLU / ( ( MLU - RRSe ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.02819236408560707}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( ( AMS + AMS ) + ( RRS / ( CRS / MRS ) ) ) + ( AMS + FirstVNF_RAM ) ) ),( FirstVNF_Mem * BR ) ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM / Max( DS,RMSe ) ) / MUM ) * ( MUR + ( ( ( ( Min( RCSe ,Min( RCSe ,CS ) ) - ( ( MLU * RMSe ) / MUR ) ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8640167364016736, "obj2": 0.05152784453698841}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,CRS ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( RMSe - Max( ( ( DS - Min( MUR ,( RRSe - MUC ) ) ) + DS ),DS ) ) )", "obj1": 0.698744769874477, "obj2": 0.1733787471398263}, {"determining": "( ( ( ARS - Min( Const ,( ( Max( Min( ARS ,MRS ),DDR ) * AMS ) * ( ARS + ( ( PN / CRS ) / FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( RRSe - Min( MUC ,( CS - RRSe ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUC / ( ( ( ( RCSe / MLU ) * RMSe ) * RCSe ) * ( ( Max( MLU,RRSe ) + ( RRSe - MUC ) ) - ( MUR + MUM ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07141561894457803}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( FirstVNF_CPU - Const ) ) ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.007383878674707006}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUC / MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / MUR ) ,RCSe ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.7133891213389121, "obj2": 0.1638314200932266}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( Max( FirstVNF_RAM,PN ),Const ) + ARS ) ) ) ) - DDR ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_CPU ) ) ) ) ,( ARS * MDR ) ),( Min( Const ,( ( AMS * Const ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * ( Max( MLU,DS ) / ( Max( Min( ( ( RRSe / MUC ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ),Max( Max( ( MUM * MUR ),RMSe ),MUR ) ) * MUM ) ) ) )", "obj1": 0.8493723849372385, "obj2": 0.06007281926635311}, {"determining": "( ( CRS - AMS ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,( AMS * AMS ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( ACS / Const ) ) ) )", "choosing": "( ( DS + ( MLU * CS ) ) * Min( ( ( MLU / MUC ) + ( ( Max( Max( MUC,CS ),RCSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8723849372384938, "obj2": 0.050256428202555825}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + Const ),( ( BR * AMS ) - Min( ( FirstVNF_CPU * DDR ) ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( Const * FirstVNF_CPU_Server ) ) + ( ( Const * ARS ) - Max( MDR,ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * ( Max( MUC,Max( ( RMSe / DS ),( MUC * DS ) ) ) - MUR ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( RCSe * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( CS,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.799163179916318, "obj2": 0.09160702012804112}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) - Min( Const ,PN ) )", "choosing": "Min( ( ( Max( ( RRSe - ( ( ( RMSe * MUC ) / MUR ) - MUC ) ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( CS + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,MUR ) ,MUC ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( FirstVNF_CPU - PN ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( CRS,BR ) ) * Min( ( FirstVNF_Mem * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RCSe / DS ) / RRSe ) ) ) ) ) ) * ( Max( ( MLU / MUC ),( CS * MUC ) ) / Max( ( MUM + Max( CS,( Min( MUM ,( MUC + MUC ) ) - ( RMSe / RRSe ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.07075922075752833}, {"determining": "( BR - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( RCSe - RRSe ) - ( ( ( ( MUM + RCSe ) / DS ) - Min( RRSe ,( Min( RRSe ,MLU ) * ( ( RCSe / Max( MLU,CS ) ) / ( MUC / DS ) ) ) ) ) * Max( DS,RMSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.010211013023492274}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( ( MRS - ARS ),Const ) + ARS ) ) ) ) - DDR ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) ,( ( Max( ( PN / BR ),FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) + Const ) ),Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03976796382971673}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.700836820083682, "obj2": 0.1683047351125904}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( ( FirstVNF_RAM * FirstVNF_Mem ) - Max( ( RRS - DDR ),( FirstVNF_Mem / AMS ) ) ) ) ) ) - DDR ) * ( Min( Min( Max( MDR,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Const ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) * Max( MLU,MLU ) ) * RCSe ) * MLU ) ) - ( MUC / MLU ) ) ) * Min( DS ,( ( Min( Max( CS,MLU ) ,( DS + MLU ) ) + RRSe ) + MLU ) ) )", "obj1": 0.8891213389121339, "obj2": 0.04325563979704806}, {"determining": "( ( Max( Const,Const ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUM * ( MUC + ( ( MLU * RCSe ) / MUR ) ) ),( ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + RRSe ) * Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.9037656903765691, "obj2": 0.039540119500024166}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Min( Max( RMSe,RCSe ) ,CS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7928870292887029, "obj2": 0.09357461831892687}, {"determining": "( ( ( ARS - Min( Const ,Max( ( AMS * AMS ),( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,( AMS * AMS ) ) - Min( ( ACS * ( ( ACS / FirstVNF_Mem ) - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( DS + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( ( MLU / MUC ) + ( ( Max( ( ( MLU * RRSe ) - ( CS - MUM ) ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8828451882845189, "obj2": 0.045213902229149616}, {"determining": "( Max( ( FirstVNF_CPU * AMS ),( AMS / FirstVNF_CPU_Server ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM * ( MUC / DS ) ),( Max( DS,Min( MUC ,MUM ) ) * ( ( DS * CS ) + ( DS - Min( ( MUM * MUR ) ,( ( MUR * ( MUM / RCSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.694560669456067, "obj2": 0.1746265176534872}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) ) - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.046013369280182945}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( ACS - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( Min( ( AMS + AMS ) ,( ( AMS * AMS ) / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( Min( RMSe ,MUC ),MLU ) / DS ) / ( ( Max( MUR,RRSe ) - Max( DS,MUR ) ) / ( Max( MLU,DS ) / Max( ( RCSe * MUC ),( RMSe + MLU ) ) ) ) )", "obj1": 0.7949790794979079, "obj2": 0.09333755013061276}, {"determining": "( ( ( ARS - Min( Const ,Min( ( ( Min( CRS ,FirstVNF_CPU_Server ) + ( Const / PN ) ) * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( AMS * AMS ) + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUM ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + Max( ( Min( RRSe ,( CS / RRSe ) ) + MUM ),( RCSe / CS ) ) ) ) ) )", "obj1": 0.8870292887029289, "obj2": 0.04425459158390734}, {"determining": "( Max( ( ( AMS + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( Const + ACS ) ) / ( BR - ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "( Max( ( ( RMSe - CS ) / MLU ),DS ) / ( ( Max( MLU,DS ) / Min( MLU ,MUM ) ) / ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011676256065021002}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM * ( MUC + ( ( MLU * RCSe ) / MUR ) ) ),( Max( DS,Min( MUC ,CS ) ) * Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.16802825218859227}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC / MUR ) - ( ( ( RMSe - ( Min( RRSe ,MUR ) * Max( Max( RMSe,DS ),MUR ) ) ) - ( DS / ( MUM + RCSe ) ) ) * MUM ) )", "obj1": 0.9937238493723849, "obj2": 0.0024359363605831797}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RMSe + ( Max( RCSe,MLU ) - ( ( MUC - MUM ) + ( Max( ( ( RCSe - MUM ) / ( DS + RRSe ) ),CS ) * DS ) ) ) ) ,( RRSe / RRSe ) )", "obj1": 0.8535564853556485, "obj2": 0.060064954738061116}, {"determining": "( ( ( Min( Const ,( ( AMS * AMS ) * ( ( FirstVNF_CPU + ACS ) + ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) - ARS ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( FirstVNF_Mem ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( DS + MUM ) * Max( MUR,( MUM / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8744769874476988, "obj2": 0.04890362863210643}, {"determining": "( ( ( FirstVNF_Mem + PN ) + RRS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM + MUC ) - Min( RCSe ,RMSe ) ) - ( Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( ( MUC + MUM ) - RRSe ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8765690376569037, "obj2": 0.04727731987559975}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( Min( ( BR * FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * ( RRS / Max( MDR,AMS ) ) ) ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( ( Min( MLU ,( ( MLU / MUC ) / ( RCSe + RCSe ) ) ) / MLU ),Max( ( MUC - ( ( MLU / MLU ) * CS ) ),( MUM + ( ( Max( DS,RCSe ) - CS ) * ( ( ( RMSe + RMSe ) / Max( MLU,MUR ) ) - ( ( RCSe * RRSe ) * ( MUM - RMSe ) ) ) ) ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.011056086767651171}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ACS ,FirstVNF_CPU_Server ) - Min( RRS ,DDR ) ) * ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( Const - FirstVNF_CPU ) ) - ( Min( ACS ,( RRS + MDR ) ) + ( CRS + DDR ) ) ) ) )", "choosing": "( Min( ( DS - ( DS - RRSe ) ) ,Max( MLU,( ( MUR + MLU ) + ( ( CS / ( ( DS * CS ) + MUC ) ) / ( CS - RCSe ) ) ) ) ) * ( ( MUC - ( RMSe + CS ) ) + CS ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( BR - PN ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,DDR ) ) ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / RRSe ) ,( CS * MUR ) ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.9602510460251046, "obj2": 0.012898195531609003}, {"determining": "( ( ( ( ( FirstVNF_CPU / ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,CRS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) + ( PN / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( DS / ( RMSe / ( RCSe * RMSe ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9874476987447699, "obj2": 0.004157974807349276}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUC * RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,( Min( Min( RMSe ,DS ) ,DS ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( PN / ( ( RRS / ( MRS * CRS ) ) / PN ) ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / RRS ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) - Max( MRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( MUM + ( DS * MUC ) ) / MLU ),( Max( DS,Min( ( ( ( RMSe - MLU ) - RMSe ) - MUM ) ,MUM ) ) + ( ( ( CS + Max( ( RMSe / RRSe ),MUC ) ) * RCSe ) / RMSe ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Max( ( RCSe * MUC ),( RMSe + MLU ) ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( ( Const * Max( RRS,AMS ) ) - PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( RCSe * ( RCSe + MUM ) ) * RMSe ) ) ) ,Max( ( CS * DS ),( Max( RRSe,CS ) - MUR ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Const ) ) - ( ( ( ( CRS / ARS ) + ( FirstVNF_CPU / DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( RMSe / ( MUC * ( ( ( RMSe * RRSe ) / MLU ) - ( Max( CS,DS ) + DS ) ) ) ),( Min( DS ,( MUR * ( ( DS * CS ) + Min( MUC ,RMSe ) ) ) ) + Max( Max( RRSe,MUC ),Max( MUC,MLU ) ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( ( RRS + FirstVNF_RAM_Server ) * RRS ) )", "choosing": "( ( CS + RCSe ) * ( Min( Max( DS,DS ) ,MUM ) + ( RRSe * RRSe ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Min( ARS ,( ( FirstVNF_Mem + FirstVNF_Mem ) / RRS ) ) - ( Max( ( RRS / CRS ),FirstVNF_Mem ) / FirstVNF_Mem ) )", "choosing": "Min( Min( Max( RMSe,Max( RCSe,( ( MLU / MUM ) + ( Max( MUM,( MUR / MUM ) ) * MUM ) ) ) ) ,RRSe ) ,( MLU * MLU ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( BR - FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( RMSe + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RCSe ) ,( DS + MLU ) ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Const ) - Max( ( FirstVNF_Mem * ( PN / BR ) ),MDR ) )", "choosing": "( ( MUM / ( MUM / Max( RMSe,CS ) ) ) * Min( MUR ,( RMSe + ( RMSe * ( ( RRSe + Min( RRSe ,MUC ) ) * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem ) - Max( ( FirstVNF_RAM_Server + CRS ),Const ) )", "choosing": "( ( Min( MUM ,CS ) + Min( MLU ,CS ) ) * ( ( RRSe + RCSe ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - DDR ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * Max( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ),Max( ARS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Min( MLU ,( Min( DS ,Min( ( CS * RCSe ) ,Max( MLU,MUM ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) / ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Max( DDR,ACS ) ) ) - ( ( Const - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( MUM / ( MUM / ( ( MUC / RMSe ) / CS ) ) ) * Min( MUR ,( ( ( ( RRSe * ( RMSe * MUC ) ) / MUR ) / ( MUR * MUM ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( ( ( Const * DDR ) / ( MDR + ACS ) ) / ( MRS / FirstVNF_CPU ) ) )", "choosing": "( ( RCSe / MUM ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS - Min( Min( ( ( AMS * AMS ) * ACS ) ,Const ) ,( ( DDR * DDR ) / ( ( FirstVNF_CPU_Server * PN ) - PN ) ) ) ) - DDR ) * ( DDR * Min( AMS ,BR ) ) ) - Min( ( MDR * RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( RRSe,MUM ) * ( MUC / ( ( MUR + CS ) / Max( RMSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) - MRS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( ( Min( DS ,( MUM + MUC ) ) * ( MUC / MUR ) ) + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ),( Max( FirstVNF_CPU,( ( FirstVNF_Mem * ( RRS / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( PN + ARS ) ) ) + ( ( BR * FirstVNF_RAM ) - Min( BR ,PN ) ) ) ) / ( CRS + ( ( FirstVNF_Mem - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe * Min( RRSe ,( ( MUC + DS ) + RRSe ) ) ) - ( ( ( RMSe + ( RCSe - Min( Min( RRSe ,MUR ) ,RRSe ) ) ) + RMSe ) * Min( RRSe ,MUC ) ) ) + ( RCSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}], "25": [{"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( MRS + FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,DDR ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server - MRS ) ,DDR ) * ( ( ( Const * FirstVNF_RAM ) - ( FirstVNF_Mem * ARS ) ) + AMS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Max( MLU,MUM ) ) - ( Max( MUR,( ( MLU / MLU ) / Min( ( Max( MLU,MLU ) * CS ) ,( DS - ( DS - RRSe ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) * ( CS * MUC ) ) / Max( ( MUM + RRSe ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( Max( FirstVNF_Mem_Server,( ( Const / ( FirstVNF_CPU - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Const ) ) - RRS ) ) * Min( ( MDR * ACS ) ,( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MUR,( CS / MUC ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( ( ( ( ( ( Max( RRSe,RRSe ) * ( MLU / MUR ) ) / ( ( CS * RRSe ) - Max( RRSe,RCSe ) ) ) - Max( CS,( Min( RCSe ,MUC ) + ( MLU * MUC ) ) ) ) - DS ) - ( MUR + MUM ) ) - ( ( MLU / MUR ) + Min( RRSe ,CS ) ) ) )", "obj1": 0.5564853556485355, "obj2": 0.3139967929980099}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( ACS ,Max( AMS,ARS ) ) / Min( Min( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + AMS ) ,( RRS / ( MRS + Const ) ) ) ,( AMS + FirstVNF_RAM ) ) ),Const ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RMSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( ( RMSe / ( RCSe * MUR ) ) / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( CS + ( ( MUR + ( MUC - ( RCSe * Max( MLU,RCSe ) ) ) ) * ( Max( ( ( RRSe / MLU ) + Min( MLU ,RMSe ) ),CS ) * RCSe ) ) ) ) )", "obj1": 0.6401673640167364, "obj2": 0.1954572829929765}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( ( BR * AMS ) - Min( PN ,AMS ) ) ) / ( Min( Min( PN ,Min( Min( FirstVNF_Mem ,ACS ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) + ( ( Const * ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( DS + MUC ) - ( CS - Min( Min( Max( RCSe,MUC ) ,RMSe ) ,( Min( ( DS / RRSe ) ,RCSe ) - MLU ) ) ) ) ) + ( Min( ( RMSe - MLU ) ,RRSe ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.6380753138075314, "obj2": 0.24195612736266645}, {"determining": "( Min( ( FirstVNF_CPU * MDR ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + ACS ) ) ) * Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( MUR,( RCSe / ( ( DS + MUC ) / ( ( RRSe / DS ) / ( DS - DS ) ) ) ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,CS ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.30767215481461996}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( ( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + RCSe ) ) + ( MLU / ( ( CS - Max( ( Min( Min( DS ,RCSe ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.606694560669456, "obj2": 0.25097724497058976}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.7405857740585774, "obj2": 0.11919506272667857}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( FirstVNF_Mem * Const ) - RRS ) ) ,( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server / Max( ( BR * PN ),MRS ) ) ) - PN ) + AMS ) ) * ( Max( FirstVNF_Mem_Server,( MDR - MRS ) ) + ( DDR * ( Min( CRS ,Max( MRS,( BR * MRS ) ) ) + AMS ) ) ) )", "choosing": "( ( ( ( Min( ( ( DS - DS ) * RCSe ) ,( Max( MUC,MUM ) * Max( MLU,( MUR + DS ) ) ) ) * MUR ) / MUR ) / MUR ) + ( ( MLU - RMSe ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.28583014284586084}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUM ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( MUM + MUM ) * ( RCSe / CS ) ) ) )", "obj1": 0.7531380753138075, "obj2": 0.11299411079426579}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( ( FirstVNF_CPU_Server + Min( MDR ,Max( FirstVNF_CPU,Const ) ) ) * BR ),( Const + Max( DDR,BR ) ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Min( Max( ( MUM * ( Max( Min( DS ,( RRSe + RRSe ) ),RCSe ) - MUM ) ),MUC ) ,RMSe ) ,( Max( RCSe,RCSe ) + ( MUR - Max( ( CS - DS ),Max( MUR,( ( Max( RRSe,MUR ) * Max( MUR,DS ) ) * MUR ) ) ) ) ) )", "obj1": 0.7259414225941423, "obj2": 0.1339044380663284}, {"determining": "( Max( ( PN * AMS ),( Max( ( RRS + Min( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - BR ) ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ),( MRS - ARS ) ) - ( AMS - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( CS * RMSe ) * ( ( Max( MLU,MUC ) + ( CS / MUC ) ) / Max( ( MUC - MUC ),MUC ) ) )", "obj1": 0.7196652719665272, "obj2": 0.15682738639378044}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS + Max( RRSe,RRSe ) ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) * Min( RRSe ,RMSe ) ) ) + ( RCSe + MUC ) )", "obj1": 0.6861924686192469, "obj2": 0.18375419188287842}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( DDR * FirstVNF_CPU ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - Max( ( AMS * BR ),Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( Max( Min( ACS ,MRS ),( CRS - FirstVNF_RAM_Server ) ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( CS + MUM ) + CS ) * DS ),( ( RRSe - DS ) + MUC ) ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * MUR ) ) ) + MUR ) ) )", "obj1": 0.7217573221757322, "obj2": 0.13661886296456716}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( ( Min( MLU ,( ( MLU / MUC ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.7740585774058577, "obj2": 0.10715698826989109}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7824267782426778, "obj2": 0.10101181853800154}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( MDR + ARS ) ) ) )", "choosing": "( Max( ( MUR + MLU ),( RCSe * MUC ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28262373344132685}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( Const,( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( AMS / FirstVNF_Mem_Server ) / DDR ) ) ) ,( DDR + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( RRSe * RCSe ) ,MUC ) * ( MUR + ( ( ( ( Min( MUC ,MUC ) - RCSe ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8075313807531381, "obj2": 0.07559609615975409}, {"determining": "( Max( ( ACS * AMS ),( MRS - ARS ) ) - Min( ( CRS / FirstVNF_CPU ) ,( ARS - MRS ) ) )", "choosing": "( ( ( ( MUC / MUR ) - MUM ) / ( ( CS - Min( Min( ( MUR + DS ) ,MUM ) ,( Min( ( RMSe / MUR ) ,RCSe ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.6924686192468619, "obj2": 0.1735858032989527}, {"determining": "( ( ( ( ( ACS - AMS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( ( ACS * Const ) - ( CRS + DDR ) ) ) - ( CRS - RRS ) ) ) + MRS ) - ( ( FirstVNF_RAM * FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( Min( MUR ,RMSe ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MUR ) / RCSe ) ) ) ) * Min( ( ( DS - ( Min( MUC ,CS ) + MLU ) ) / RRSe ) ,RRSe ) )", "obj1": 0.9351464435146444, "obj2": 0.022210372528401336}, {"determining": "( ( ( ( ( FirstVNF_Mem + ( ACS / BR ) ) + FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Min( ( ( AMS / AMS ) + ( Min( RRS ,( Min( FirstVNF_Mem_Server ,DDR ) - ( FirstVNF_CPU / DDR ) ) ) / ( ( Const * MDR ) / ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + ( RRS * MRS ) ) ) ) ) ,Min( Const ,FirstVNF_Mem ) ) ) * ( ( ARS - Min( FirstVNF_RAM ,CRS ) ) - ( BR - ARS ) ) )", "choosing": "Min( Min( ( Min( ( ( MUR * Min( Max( MUM,MUR ) ,MUC ) ) - MUR ) ,CS ) / MUC ) ,MUM ) ,( ( RCSe / MUC ) + RRSe ) )", "obj1": 0.6610878661087866, "obj2": 0.194468252171246}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( ARS / ( PN - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR / PN ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - ( ( DDR / FirstVNF_CPU_Server ) - Const ) ) ) + MRS ) )", "choosing": "( ( ( ( ( Min( MUR ,( Min( RMSe ,MUC ) - Min( MLU ,MUC ) ) ) / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + CS ) ) + ( MLU / ( ( ( MUR - MUR ) - Max( ( Min( Min( RCSe ,DS ) ,RMSe ) + RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9456066945606695, "obj2": 0.016960403410094346}, {"determining": "( ( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_Mem,Const ) ) ) ) ) - DDR ) - ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ACS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + CS ) - Min( MLU ,MUM ) ) - ( Max( MUR,( RCSe / ( MLU / ( ( MLU / MLU ) / DS ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.032591001656630876}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( ( MDR / FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ,( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( MUR + MUM ) ,MLU ) ,( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( Max( RMSe,CS ) / DS ) / DS ) ) ) ) ) )", "obj1": 0.805439330543933, "obj2": 0.0847427110804511}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( Const ,( Min( Max( AMS,AMS ) ,AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( CRS - Const ) ) - ( ( ( ( CRS / ARS ) / ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + ( ( Max( BR,Const ) * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( MLU,MUM ) / Max( Max( ( CS - ( MUC - ( MUR / RMSe ) ) ),MUC ),( Max( ( RMSe - MUC ),RRSe ) / Min( MLU ,RRSe ) ) ) ) - ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / ( RMSe / CS ) ) )", "obj1": 0.9225941422594143, "obj2": 0.027448040642281093}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( Max( ( ( CRS / ARS ) + ( DDR * DDR ) ),( ( ( ARS * Const ) - DDR ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Min( Max( ( Max( ( ( ( MUM - Min( DS ,RMSe ) ) / RCSe ) / ( ( ( RCSe * MUC ) * ( CS + MLU ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,( Min( Min( RMSe ,DS ) ,DS ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.7887029288702929, "obj2": 0.09380288103284468}, {"determining": "( ( ( ARS - Min( Const ,( AMS + ARS ) ) ) - MRS ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),( Min( MUC ,RCSe ) + ( RCSe / RMSe ) ) ) / ( ( ( MUR / RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.0755516722320791}, {"determining": "( ( FirstVNF_RAM / ( ( Min( ( ( Min( FirstVNF_CPU ,ACS ) - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) + DDR ) ) * Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - Min( Max( MUC,RRSe ) ,( MUM - RRSe ) ) ) ) * MUM ) - Max( Max( RMSe,( CS * MUR ) ),MUR ) ) + ( MLU / ( ( CS - Max( ( Min( Min( CS ,RCSe ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9058577405857741, "obj2": 0.034581817291802895}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RMSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8368200836820083, "obj2": 0.06310192050969243}, {"determining": "( ( ( ARS - Min( Const ,( Min( Max( MRS,FirstVNF_Mem_Server ) ,AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUC ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RMSe / MUC ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( CS / RCSe ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06804264282929773}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9393305439330544, "obj2": 0.02007281454107505}, {"determining": "( Max( ( Min( Min( CRS ,( ( ARS - ACS ) + RRS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ),MRS ) - ( ( BR - ACS ) + Min( ( FirstVNF_Mem * CRS ) ,CRS ) ) )", "choosing": "( ( ( ( MLU * ( ( ( ( MUM + MLU ) / RMSe ) + RRSe ) / Max( RCSe,MUR ) ) ) * ( ( ( MUM * Max( RRSe,RCSe ) ) * MUC ) - ( RMSe + MUC ) ) ) * RRSe ) * ( ( ( RRSe / RMSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( ( DS + Min( MUR ,( MLU - RMSe ) ) ) / Min( MLU ,( MLU + MUR ) ) ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01483061349282627}, {"determining": "( ( Max( DDR,FirstVNF_RAM ) - ( MDR - FirstVNF_Mem ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( Min( CRS ,( ( AMS * AMS ) / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),CRS ) ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( MUR / ( ( Max( ( DS * MUC ),RRSe ) - Max( DS,MUR ) ) / ( Max( DS,MLU ) / Max( ( RCSe * MUC ),( RMSe + MLU ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.056994543561588916}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,CRS ) / MDR ) / CRS ) - DDR ) * ( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + ACS ) ) - Min( ( ACS * ( PN - RRS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Max( Min( RMSe ,MUM ),MUM ) ) ) ) ) ) * ( ( Min( MLU ,MUC ) + ( CS * MUC ) ) / Max( Min( MUM ,MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.06008764660866809}, {"determining": "( Max( Min( AMS ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / ( AMS + PN ) ) ),( MRS - ARS ) ) - ( ( MRS / FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "Max( ( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( MUM * CS ) ,( ( ( DS / RRSe ) * Min( RRSe ,Min( DS ,Min( MUM ,MUM ) ) ) ) * MUM ) ) ),Min( CS ,( MUC * ( Max( RCSe,( MLU / ( MUM * MUC ) ) ) * MLU ) ) ) )", "obj1": 0.7050209205020921, "obj2": 0.16498831742849923}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 0.803347280334728, "obj2": 0.08929388093318207}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,CRS ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( RMSe - Max( ( ( DS - Min( MUR ,( RRSe - MUC ) ) ) + DS ),DS ) ) )", "obj1": 0.698744769874477, "obj2": 0.1733787471398263}, {"determining": "( Max( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( Min( ( RRS + ARS ) ,FirstVNF_RAM ) + ARS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe * ( MLU / ( ( MLU - RRSe ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.02819236408560707}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( ( AMS + AMS ) + ( RRS / ( CRS / MRS ) ) ) + ( AMS + FirstVNF_RAM ) ) ),( FirstVNF_Mem * BR ) ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM / Max( DS,RMSe ) ) / MUM ) * ( MUR + ( ( ( ( Min( RCSe ,Min( RCSe ,CS ) ) - ( ( MLU * RMSe ) / MUR ) ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8640167364016736, "obj2": 0.05152784453698841}, {"determining": "( ( ( ARS - Min( Const ,( ( Max( Min( ARS ,MRS ),DDR ) * AMS ) * ( ARS + ( ( PN / CRS ) / FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( RRSe - Min( MUC ,( CS - RRSe ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUC / ( ( ( ( RCSe / MLU ) * RMSe ) * RCSe ) * ( ( Max( MLU,RRSe ) + ( RRSe - MUC ) ) - ( MUR + MUM ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07141561894457803}, {"determining": "( ( ARS * DDR ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( ARS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.040478491347406276}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( Max( FirstVNF_RAM,PN ),Const ) + ARS ) ) ) ) - DDR ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_CPU ) ) ) ) ,( ARS * MDR ) ),( Min( Const ,( ( AMS * Const ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * ( Max( MLU,DS ) / ( Max( Min( ( ( RRSe / MUC ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ),Max( Max( ( MUM * MUR ),RMSe ),MUR ) ) * MUM ) ) ) )", "obj1": 0.8493723849372385, "obj2": 0.06007281926635311}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( FirstVNF_CPU - Const ) ) ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.007383878674707006}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUC / MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / MUR ) ,RCSe ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.7133891213389121, "obj2": 0.1638314200932266}, {"determining": "( ( CRS - AMS ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,( AMS * AMS ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( ACS / Const ) ) ) )", "choosing": "( ( DS + ( MLU * CS ) ) * Min( ( ( MLU / MUC ) + ( ( Max( Max( MUC,CS ),RCSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8723849372384938, "obj2": 0.050256428202555825}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + Const ),( ( BR * AMS ) - Min( ( FirstVNF_CPU * DDR ) ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( Const * FirstVNF_CPU_Server ) ) + ( ( Const * ARS ) - Max( MDR,ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / MUM ) ) * ( Max( MUC,Max( ( RMSe / DS ),( MUC * DS ) ) ) - MUR ) ) - Max( RCSe,( ( Min( ( MUC / MLU ) ,( RCSe * MUC ) ) / Max( ( MUM + MLU ),( RCSe / CS ) ) ) * ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( CS,MUR ) * ( MLU + MUM ) ) ) ) ) )", "obj1": 0.799163179916318, "obj2": 0.09160702012804112}, {"determining": "( ( DDR - ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( ( MRS - ARS ),Const ) + ARS ) ) ) ) ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,( DDR + RRS ) ) ) ) ,( ( Max( ( PN / BR ),FirstVNF_Mem_Server ) - PN ) + Const ) ),( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / ( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MUM ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) - ( MLU / RMSe ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.05227908683176889}, {"determining": "( ( ACS * FirstVNF_Mem_Server ) - Min( Const ,PN ) )", "choosing": "Min( ( ( Max( ( RRSe - ( ( ( RMSe * MUC ) / MUR ) - MUC ) ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( CS + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,MUR ) ,MUC ) ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( FirstVNF_CPU - PN ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( CRS,BR ) ) * Min( ( FirstVNF_Mem * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RCSe / DS ) / RRSe ) ) ) ) ) ) * ( Max( ( MLU / MUC ),( CS * MUC ) ) / Max( ( MUM + Max( CS,( Min( MUM ,( MUC + MUC ) ) - ( RMSe / RRSe ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.07075922075752833}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8535564853556485, "obj2": 0.05979664996548774}, {"determining": "( BR - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( RCSe - RRSe ) - ( ( ( ( MUM + RCSe ) / DS ) - Min( RRSe ,( Min( RRSe ,MLU ) * ( ( RCSe / Max( MLU,CS ) ) / ( MUC / DS ) ) ) ) ) * Max( DS,RMSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.010211013023492274}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( ( MRS - ARS ),Const ) + ARS ) ) ) ) - DDR ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) ,( ( Max( ( PN / BR ),FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) + Const ) ),Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MLU ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) ,MUM ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03976796382971673}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( MLU + ( ( Max( Max( MUC,CS ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.700836820083682, "obj2": 0.1683047351125904}, {"determining": "( ( Max( Const,Const ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUM * ( MUC + ( ( MLU * RCSe ) / MUR ) ) ),( ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + RRSe ) * Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.9037656903765691, "obj2": 0.039540119500024166}, {"determining": "( ( ( ARS - Min( Const ,Max( ( AMS * AMS ),( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,( AMS * AMS ) ) - Min( ( ACS * ( ( ACS / FirstVNF_Mem ) - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( DS + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( ( MLU / MUC ) + ( ( Max( ( ( MLU * RRSe ) - ( CS - MUM ) ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8828451882845189, "obj2": 0.045213902229149616}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) ) - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.046013369280182945}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( ACS - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( Min( ( AMS + AMS ) ,( ( AMS * AMS ) / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( Min( RMSe ,MUC ),MLU ) / DS ) / ( ( Max( MUR,RRSe ) - Max( DS,MUR ) ) / ( Max( MLU,DS ) / Max( ( RCSe * MUC ),( RMSe + MLU ) ) ) ) )", "obj1": 0.7949790794979079, "obj2": 0.09333755013061276}, {"determining": "( ( ( ARS - Min( Const ,Min( ( ( Min( CRS ,FirstVNF_CPU_Server ) + ( Const / PN ) ) * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( AMS * AMS ) + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUM ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + Max( ( Min( RRSe ,( CS / RRSe ) ) + MUM ),( RCSe / CS ) ) ) ) ) )", "obj1": 0.8870292887029289, "obj2": 0.04425459158390734}, {"determining": "( Max( ( ( AMS + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( Const + ACS ) ) / ( BR - ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "( Max( ( ( RMSe - CS ) / MLU ),DS ) / ( ( Max( MLU,DS ) / Min( MLU ,MUM ) ) / ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM * ( MUC + ( ( MLU * RCSe ) / MUR ) ) ),( Max( DS,Min( MUC ,CS ) ) * Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.16802825218859227}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC / MUR ) - ( ( ( RMSe - ( Min( RRSe ,MUR ) * Max( Max( RMSe,DS ),MUR ) ) ) - ( DS / ( MUM + RCSe ) ) ) * MUM ) )", "obj1": 0.9937238493723849, "obj2": 0.0024359363605831797}, {"determining": "( ( ( Min( Const ,( ( AMS * AMS ) * ( ( FirstVNF_CPU + ACS ) + ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) - ARS ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( FirstVNF_Mem ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( DS + MUM ) * Max( MUR,( MUM / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8744769874476988, "obj2": 0.04890362863210643}, {"determining": "( ( ( FirstVNF_Mem + PN ) + RRS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM + MUC ) - Min( RCSe ,RMSe ) ) - ( Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( ( MUC + MUM ) - RRSe ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8765690376569037, "obj2": 0.04727731987559975}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( AMS * AMS ) + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + Max( ( MUM + MUM ),( RCSe / CS ) ) ) ) ) )", "obj1": 0.891213389121339, "obj2": 0.04306087450685867}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( Min( ( BR * FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * ( RRS / Max( MDR,AMS ) ) ) ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( ( Min( MLU ,( ( MLU / MUC ) / ( RCSe + RCSe ) ) ) / MLU ),Max( ( MUC - ( ( MLU / MLU ) * CS ) ),( MUM + ( ( Max( DS,RCSe ) - CS ) * ( ( ( RMSe + RMSe ) / Max( MLU,MUR ) ) - ( ( RCSe * RRSe ) * ( MUM - RMSe ) ) ) ) ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.011056086767651171}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ACS ,FirstVNF_CPU_Server ) - Min( RRS ,DDR ) ) * ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( Const - FirstVNF_CPU ) ) - ( Min( ACS ,( RRS + MDR ) ) + ( CRS + DDR ) ) ) ) )", "choosing": "( Min( ( DS - ( DS - RRSe ) ) ,Max( MLU,( ( MUR + MLU ) + ( ( CS / ( ( DS * CS ) + MUC ) ) / ( CS - RCSe ) ) ) ) ) * ( ( MUC - ( RMSe + CS ) ) + CS ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( BR - PN ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,DDR ) ) ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / RRSe ) ,( CS * MUR ) ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.9602510460251046, "obj2": 0.012898195531609003}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Min( Max( RMSe,RCSe ) ,CS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7928870292887029, "obj2": 0.09357461831892687}, {"determining": "( ( ( ( ( FirstVNF_CPU / ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,CRS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) + ( PN / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( DS / ( RMSe / ( RCSe * RMSe ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9874476987447699, "obj2": 0.004157974807349276}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011676256065021002}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( ( FirstVNF_RAM * FirstVNF_Mem ) - Max( ( RRS - DDR ),( FirstVNF_Mem / AMS ) ) ) ) ) ) - DDR ) * ( Min( Min( Max( MDR,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Const ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) * Max( MLU,MLU ) ) * RCSe ) * MLU ) ) - ( MUC / MLU ) ) ) * Min( DS ,( ( Min( Max( CS,MLU ) ,( DS + MLU ) ) + RRSe ) + MLU ) ) )", "obj1": 0.8891213389121339, "obj2": 0.04325563979704806}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Min( Max( RMSe,RCSe ) ,CS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Const ) ) - ( ( ( ( CRS / ARS ) + ( FirstVNF_CPU / DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( RMSe / ( MUC * ( ( ( RMSe * RRSe ) / MLU ) - ( Max( CS,DS ) + DS ) ) ) ),( Min( DS ,( MUR * ( ( DS * CS ) + Min( MUC ,RMSe ) ) ) ) + Max( Max( RRSe,MUC ),Max( MUC,MLU ) ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUC * RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,( Min( Min( RMSe ,DS ) ,DS ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( ( Const * Max( RRS,AMS ) ) - PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( RCSe * ( RCSe + MUM ) ) * RMSe ) ) ) ,Max( ( CS * DS ),( Max( RRSe,CS ) - MUR ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( ( RRS + FirstVNF_RAM_Server ) * RRS ) )", "choosing": "( ( CS + RCSe ) * ( Min( Max( DS,DS ) ,MUM ) + ( RRSe * RRSe ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011676256065021002}, {"determining": "( Min( ARS ,( ( FirstVNF_Mem + FirstVNF_Mem ) / RRS ) ) - ( Max( ( RRS / CRS ),FirstVNF_Mem ) / FirstVNF_Mem ) )", "choosing": "Min( Min( Max( RMSe,Max( RCSe,( ( MLU / MUM ) + ( Max( MUM,( MUR / MUM ) ) * MUM ) ) ) ) ,RRSe ) ,( MLU * MLU ) )", "obj1": 0.7175732217573222, "obj2": 0.16348140534358824}, {"determining": "( ( ( ( ARS - Min( Min( ( ( AMS * AMS ) * ACS ) ,Const ) ,( ( DDR * DDR ) / ( ( FirstVNF_CPU_Server * PN ) - PN ) ) ) ) - DDR ) * ( DDR * Min( AMS ,BR ) ) ) - Min( ( MDR * RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( RRSe,MUM ) * ( MUC / ( ( MUR + CS ) / Max( RMSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( RMSe + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RCSe ) ,( DS + MLU ) ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Const ) - Max( ( FirstVNF_Mem * ( PN / BR ) ),MDR ) )", "choosing": "( ( MUM / ( MUM / Max( RMSe,CS ) ) ) * Min( MUR ,( RMSe + ( RMSe * ( ( RRSe + Min( RRSe ,MUC ) ) * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem ) - Max( ( FirstVNF_RAM_Server + CRS ),Const ) )", "choosing": "( ( Min( MUM ,CS ) + Min( MLU ,CS ) ) * ( ( RRSe + RCSe ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - DDR ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * Max( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ),Max( ARS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Min( MLU ,( Min( DS ,Min( ( CS * RCSe ) ,Max( MLU,MUM ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) / ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Max( DDR,ACS ) ) ) - ( ( Const - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( MUM / ( MUM / ( ( MUC / RMSe ) / CS ) ) ) * Min( MUR ,( ( ( ( RRSe * ( RMSe * MUC ) ) / MUR ) / ( MUR * MUM ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( ( ( Const * DDR ) / ( MDR + ACS ) ) / ( MRS / FirstVNF_CPU ) ) )", "choosing": "( ( RCSe / MUM ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS - Min( Min( ( ( AMS * AMS ) * ACS ) ,Const ) ,( ( DDR * DDR ) / ( ( FirstVNF_CPU_Server * PN ) - PN ) ) ) ) - DDR ) * ( DDR * Min( AMS ,BR ) ) ) - Min( ( MDR * RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( RRSe,MUM ) * ( MUC / ( ( MUR + CS ) / Max( RMSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) - MRS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( ( Min( DS ,( MUM + MUC ) ) * ( MUC / MUR ) ) + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ),( Max( FirstVNF_CPU,( ( FirstVNF_Mem * ( RRS / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( PN + ARS ) ) ) + ( ( BR * FirstVNF_RAM ) - Min( BR ,PN ) ) ) ) / ( CRS + ( ( FirstVNF_Mem - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe * Min( RRSe ,( ( MUC + DS ) + RRSe ) ) ) - ( ( ( RMSe + ( RCSe - Min( Min( RRSe ,MUR ) ,RRSe ) ) ) + RMSe ) * Min( RRSe ,MUC ) ) ) + ( RCSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}], "26": [{"determining": "( ( FirstVNF_RAM - ACS ) - Max( ( ( MDR * ACS ) / ( Const * Max( FirstVNF_CPU_Server,RRS ) ) ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Max( ( MLU * MUR ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( RMSe + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,RMSe ) ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( MRS + FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,DDR ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( Max( FirstVNF_Mem_Server,( ( Const / ( FirstVNF_CPU - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Const ) ) - RRS ) ) * Min( ( MDR * ACS ) ,( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MUR,( CS / MUC ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( ( ( ( ( ( Max( RRSe,RRSe ) * ( MLU / MUR ) ) / ( ( CS * RRSe ) - Max( RRSe,RCSe ) ) ) - Max( CS,( Min( RCSe ,MUC ) + ( MLU * MUC ) ) ) ) - DS ) - ( MUR + MUM ) ) - ( ( MLU / MUR ) + Min( RRSe ,CS ) ) ) )", "obj1": 0.5564853556485355, "obj2": 0.3139967929980099}, {"determining": "( Max( ( PN * Const ),( MRS - ARS ) ) - ( AMS * ( ( Const + PN ) / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUC / MUR ) - RRSe ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / MUR ) ,MUC ) - MLU ) ) ) - ( RCSe + MLU ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.6715481171548117, "obj2": 0.15106754631933428}, {"determining": "( Min( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Min( FirstVNF_RAM ,RRS ) ) - ( ( ( ACS - DDR ) * ACS ) / ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) / FirstVNF_Mem ) ) ) ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * MUM ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( DS ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 0.6234309623430963, "obj2": 0.24256664272337358}, {"determining": "( Min( ( FirstVNF_CPU * MDR ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + ACS ) ) ) * Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( MUR,( RCSe / ( ( DS + MUC ) / ( ( RRSe / DS ) / ( DS - DS ) ) ) ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,CS ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.30767215481461996}, {"determining": "( ( Min( ( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / MLU ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( RCSe - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),Max( DS,Min( CS ,MUC ) ) ) )", "obj1": 0.702928870292887, "obj2": 0.1376225920162687}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( ( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + RCSe ) ) + ( MLU / ( ( CS - Max( ( Min( Min( DS ,RCSe ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.606694560669456, "obj2": 0.25097724497058976}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( ACS ,Max( AMS,ARS ) ) / Min( Min( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + AMS ) ,( RRS / ( MRS + Const ) ) ) ,( AMS + FirstVNF_RAM ) ) ),Const ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RMSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( ( RMSe / ( RCSe * MUR ) ) / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( CS + ( ( MUR + ( MUC - ( RCSe * Max( MLU,RCSe ) ) ) ) * ( Max( ( ( RRSe / MLU ) + Min( MLU ,RMSe ) ),CS ) * RCSe ) ) ) ) )", "obj1": 0.6401673640167364, "obj2": 0.1954572829929765}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( FirstVNF_Mem * Const ) - RRS ) ) ,( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server / Max( ( BR * PN ),MRS ) ) ) - PN ) + AMS ) ) * ( Max( FirstVNF_Mem_Server,( MDR - MRS ) ) + ( DDR * ( Min( CRS ,Max( MRS,( BR * MRS ) ) ) + AMS ) ) ) )", "choosing": "( ( ( ( Min( ( ( DS - DS ) * RCSe ) ,( Max( MUC,MUM ) * Max( MLU,( MUR + DS ) ) ) ) * MUR ) / MUR ) / MUR ) + ( ( MLU - RMSe ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.28583014284586084}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUM ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( MUM + MUM ) * ( RCSe / CS ) ) ) )", "obj1": 0.7531380753138075, "obj2": 0.11299411079426579}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( ( FirstVNF_CPU_Server + Min( MDR ,Max( FirstVNF_CPU,Const ) ) ) * BR ),( Const + Max( DDR,BR ) ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Min( Max( ( MUM * ( Max( Min( DS ,( RRSe + RRSe ) ),RCSe ) - MUM ) ),MUC ) ,RMSe ) ,( Max( RCSe,RCSe ) + ( MUR - Max( ( CS - DS ),Max( MUR,( ( Max( RRSe,MUR ) * Max( MUR,DS ) ) * MUR ) ) ) ) ) )", "obj1": 0.6380753138075314, "obj2": 0.21939207112215908}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( ( FirstVNF_CPU_Server + Min( MDR ,Max( FirstVNF_CPU,Const ) ) ) * BR ),( Const + Max( DDR,BR ) ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Min( Max( ( MUM * ( Max( Min( DS ,( RRSe + RRSe ) ),RCSe ) - MUM ) ),MUC ) ,RMSe ) ,( Max( RCSe,RCSe ) + ( MUR - Max( ( CS - DS ),Max( MUR,( ( Max( RRSe,MUR ) * Max( MUR,DS ) ) * MUR ) ) ) ) ) )", "obj1": 0.7259414225941423, "obj2": 0.1339044380663284}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( MRS / CRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - ( ( MRS - BR ) + MDR ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - RRSe ) + DS ) * RMSe ) ,( Max( RCSe,MUM ) + ( MUR - Max( ( RMSe - DS ),Max( MUR,( MUC * MUR ) ) ) ) ) )", "obj1": 0.7384937238493724, "obj2": 0.12034635635616181}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( ( FirstVNF_CPU_Server + Min( MDR ,Max( FirstVNF_CPU,Const ) ) ) * BR ),( Const + Max( DDR,BR ) ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Min( Max( ( MUM * ( Max( Min( DS ,( RRSe + RRSe ) ),RCSe ) - MUM ) ),MUC ) ,RMSe ) ,( Max( RCSe,RCSe ) + ( MUR - Max( ( CS - DS ),Max( MUR,( ( Max( RRSe,MUR ) * Max( MUR,DS ) ) * MUR ) ) ) ) ) )", "obj1": 0.6380753138075314, "obj2": 0.21939207112215908}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( ( Min( MLU ,( ( MLU / MUC ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.7740585774058577, "obj2": 0.10715698826989109}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7824267782426778, "obj2": 0.10101181853800154}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( MDR + ARS ) ) ) )", "choosing": "( Max( ( MUR + MLU ),( RCSe * MUC ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28262373344132685}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( DDR * FirstVNF_CPU ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - Max( ( AMS * BR ),Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( Max( Min( ACS ,MRS ),( CRS - FirstVNF_RAM_Server ) ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( CS + MUM ) + CS ) * DS ),( ( RRSe - DS ) + MUC ) ) ,( ( RCSe + MUM ) + ( Max( MUC,Max( MUR,( MUC * MUR ) ) ) + MUR ) ) )", "obj1": 0.7217573221757322, "obj2": 0.13661886296456716}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( Const,( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( AMS / FirstVNF_Mem_Server ) / DDR ) ) ) ,( DDR + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( RRSe * RCSe ) ,MUC ) * ( MUR + ( ( ( ( Min( MUC ,MUC ) - RCSe ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8075313807531381, "obj2": 0.07559609615975409}, {"determining": "( ( ( ( ( ACS - AMS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( ( ACS * Const ) - ( CRS + DDR ) ) ) - ( CRS - RRS ) ) ) + MRS ) - ( ( FirstVNF_RAM * FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( Min( MUR ,RMSe ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MUR ) / RCSe ) ) ) ) * Min( ( ( DS - ( Min( MUC ,CS ) + MLU ) ) / RRSe ) ,RRSe ) )", "obj1": 0.9351464435146444, "obj2": 0.022210372528401336}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( Max( ( ( CRS / ARS ) + ( DDR * DDR ) ),( ( ( ARS * Const ) - DDR ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Min( Max( ( Max( ( ( ( MUM - Min( DS ,RMSe ) ) / RCSe ) / ( ( ( RCSe * MUC ) * ( CS + MLU ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,( Min( Min( RMSe ,DS ) ,DS ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.7887029288702929, "obj2": 0.09380288103284468}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.7405857740585774, "obj2": 0.11919506272667857}, {"determining": "( ( ( ( ( FirstVNF_Mem + ( ACS / BR ) ) + FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Min( ( ( AMS / AMS ) + ( Min( RRS ,( Min( FirstVNF_Mem_Server ,DDR ) - ( FirstVNF_CPU / DDR ) ) ) / ( ( Const * MDR ) / ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + ( RRS * MRS ) ) ) ) ) ,Min( Const ,FirstVNF_Mem ) ) ) * ( ( ARS - Min( FirstVNF_RAM ,CRS ) ) - ( BR - ARS ) ) )", "choosing": "Min( Min( ( Min( ( ( MUR * Min( Max( MUM,MUR ) ,MUC ) ) - MUR ) ,CS ) / MUC ) ,MUM ) ,( ( RCSe / MUC ) + RRSe ) )", "obj1": 0.6610878661087866, "obj2": 0.194468252171246}, {"determining": "( ( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_Mem,Const ) ) ) ) ) - DDR ) - ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ACS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + CS ) - Min( MLU ,MUM ) ) - ( Max( MUR,( RCSe / ( MLU / ( ( MLU / MLU ) / DS ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9142259414225942, "obj2": 0.032591001656630876}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( ( MDR / FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ,( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( MUR + MUM ) ,MLU ) ,( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( Max( RMSe,CS ) / DS ) / DS ) ) ) ) ) )", "obj1": 0.805439330543933, "obj2": 0.0847427110804511}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( Const ,( Min( Max( AMS,AMS ) ,AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( CRS - Const ) ) - ( ( ( ( CRS / ARS ) / ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + ( ( Max( BR,Const ) * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( MLU,MUM ) / Max( Max( ( CS - ( MUC - ( MUR / RMSe ) ) ),MUC ),( Max( ( RMSe - MUC ),RRSe ) / Min( MLU ,RRSe ) ) ) ) - ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / ( RMSe / CS ) ) )", "obj1": 0.9225941422594143, "obj2": 0.027448040642281093}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( ( FirstVNF_RAM / ( ( Min( ( ( Min( FirstVNF_CPU ,ACS ) - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) + DDR ) ) * Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - Min( Max( MUC,RRSe ) ,( MUM - RRSe ) ) ) ) * MUM ) - Max( Max( RMSe,( CS * MUR ) ),MUR ) ) + ( MLU / ( ( CS - Max( ( Min( Min( CS ,RCSe ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9058577405857741, "obj2": 0.034581817291802895}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( ARS / ( PN - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR / PN ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - ( ( DDR / FirstVNF_CPU_Server ) - Const ) ) ) + MRS ) )", "choosing": "( ( ( ( ( Min( MUR ,( Min( RMSe ,MUC ) - Min( MLU ,MUC ) ) ) / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + CS ) ) + ( MLU / ( ( ( MUR - MUR ) - Max( ( Min( Min( RCSe ,DS ) ,RMSe ) + RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9456066945606695, "obj2": 0.016960403410094346}, {"determining": "( ( MRS - ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - Max( MRS,ARS ) )", "choosing": "Min( Max( ( Max( ( MUM / ( ( ( MUC * RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),( RCSe + DS ) ) ,( Min( Min( RMSe ,DS ) ,DS ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.7928870292887029, "obj2": 0.0897625887737664}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS / Max( Min( FirstVNF_CPU ,Max( Min( PN ,( ARS / DDR ) ),ACS ) ),FirstVNF_CPU ) ) ) * ( ( ARS - Min( Const ,Min( ( FirstVNF_CPU_Server * AMS ) ,( Max( ( MRS - DDR ),Min( AMS ,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + CS ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( RRSe,CS ) ,( DS + RRSe ) ) + Max( Min( ( Min( RMSe ,MUR ) + CS ) ,Max( Max( CS,MLU ),RRSe ) ),CS ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03888409692450047}, {"determining": "( ( ( ARS - Min( Const ,( AMS + ARS ) ) ) - MRS ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),( Min( MUC ,RCSe ) + ( RCSe / RMSe ) ) ) / ( ( ( MUR / RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.0755516722320791}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 0.803347280334728, "obj2": 0.08929388093318207}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RMSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8368200836820083, "obj2": 0.06310192050969243}, {"determining": "( ( ( ARS - Min( Const ,( Min( Max( MRS,FirstVNF_Mem_Server ) ,AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUC ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RMSe / MUC ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( CS / RCSe ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06804264282929773}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ),MRS ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( Max( MUR,MUC ) ,( CS + ( ( Max( MLU,MUM ) / MLU ) * RMSe ) ) ) - Min( MLU ,MUM ) ) - ( ( MLU + CS ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9393305439330544, "obj2": 0.020038673307247405}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,CRS ) / MDR ) / CRS ) - DDR ) * ( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + ACS ) ) - Min( ( ACS * ( PN - RRS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Max( Min( RMSe ,MUM ),MUM ) ) ) ) ) ) * ( ( Min( MLU ,MUC ) + ( CS * MUC ) ) / Max( Min( MUM ,MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.06008764660866809}, {"determining": "( ( ARS * DDR ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( ARS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.040478491347406276}, {"determining": "( Max( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( Min( ( RRS + ARS ) ,FirstVNF_RAM ) + ARS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe * ( MLU / ( ( MLU - RRSe ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.02819236408560707}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( ( AMS + AMS ) + ( RRS / ( CRS / MRS ) ) ) + ( AMS + FirstVNF_RAM ) ) ),( FirstVNF_Mem * BR ) ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM / Max( DS,RMSe ) ) / MUM ) * ( MUR + ( ( ( ( Min( RCSe ,Min( RCSe ,CS ) ) - ( ( MLU * RMSe ) / MUR ) ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8640167364016736, "obj2": 0.05152784453698841}, {"determining": "( ( ( ARS - Min( Const ,( ( Max( Min( ARS ,MRS ),DDR ) * AMS ) * ( ARS + ( ( PN / CRS ) / FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( RRSe - Min( MUC ,( CS - RRSe ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUC / ( ( ( ( RCSe / MLU ) * RMSe ) * RCSe ) * ( ( Max( MLU,RRSe ) + ( RRSe - MUC ) ) - ( MUR + MUM ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07141561894457803}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( Max( FirstVNF_RAM,PN ),Const ) + ARS ) ) ) ) - DDR ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,Max( BR,FirstVNF_CPU ) ) ) ) ,( ARS * MDR ) ),( Min( Const ,( ( AMS * Const ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * ( Max( MLU,DS ) / ( Max( Min( ( ( RRSe / MUC ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ),Max( Max( ( MUM * MUR ),RMSe ),MUR ) ) * MUM ) ) ) )", "obj1": 0.8493723849372385, "obj2": 0.06007281926635311}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( FirstVNF_CPU - Const ) ) ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.007383878674707006}, {"determining": "( ( CRS - AMS ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,( AMS * AMS ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( ACS / Const ) ) ) )", "choosing": "( ( DS + ( MLU * CS ) ) * Min( ( ( MLU / MUC ) + ( ( Max( Max( MUC,CS ),RCSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8723849372384938, "obj2": 0.050256428202555825}, {"determining": "( ( DDR - ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( ( MRS - ARS ),Const ) + ARS ) ) ) ) ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,( DDR + RRS ) ) ) ) ,( ( Max( ( PN / BR ),FirstVNF_Mem_Server ) - PN ) + Const ) ),( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / ( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MUM ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) - ( MLU / RMSe ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.05227908683176889}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( MUC - Max( Min( ( RRSe / MUR ) ,RRSe ),DS ) ) * ( ( ( MUM * Max( RCSe,RRSe ) ) * MUC ) - ( RMSe + MUC ) ) ) - RRSe ) * ( ( ( MLU / RRSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9539748953974896, "obj2": 0.015428724287415206}, {"determining": "( ( FirstVNF_CPU - PN ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( CRS,BR ) ) * Min( ( FirstVNF_Mem * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RCSe / DS ) / RRSe ) ) ) ) ) ) * ( Max( ( MLU / MUC ),( CS * MUC ) ) / Max( ( MUM + Max( CS,( Min( MUM ,( MUC + MUC ) ) - ( RMSe / RRSe ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.07075922075752833}, {"determining": "( ( Max( DDR,FirstVNF_RAM ) - ( MDR - FirstVNF_Mem ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( Min( CRS ,( ( AMS * AMS ) / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),CRS ) ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( MUR / ( ( Max( ( DS * MUC ),RRSe ) - Max( DS,MUR ) ) / ( Max( DS,MLU ) / Max( ( RCSe * MUC ),( RMSe + MLU ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.056994543561588916}, {"determining": "( BR - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( RCSe - RRSe ) - ( ( ( ( MUM + RCSe ) / DS ) - Min( RRSe ,( Min( RRSe ,MLU ) * ( ( RCSe / Max( MLU,CS ) ) / ( MUC / DS ) ) ) ) ) * Max( DS,RMSe ) ) )", "obj1": 0.9748953974895398, "obj2": 0.010211013023492274}, {"determining": "( ( ( ARS - Min( Const ,Max( ( AMS * AMS ),( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,( AMS * AMS ) ) - Min( ( ACS * ( ( ACS / FirstVNF_Mem ) - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( DS + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( ( MLU / MUC ) + ( ( Max( ( ( MLU * RRSe ) - ( CS - MUM ) ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8828451882845189, "obj2": 0.045213902229149616}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) ) - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.046013369280182945}, {"determining": "( ( ( ARS - Min( Const ,Min( ( ( Min( CRS ,FirstVNF_CPU_Server ) + ( Const / PN ) ) * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( AMS * AMS ) + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUM ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + Max( ( Min( RRSe ,( CS / RRSe ) ) + MUM ),( RCSe / CS ) ) ) ) ) )", "obj1": 0.8870292887029289, "obj2": 0.04425459158390734}, {"determining": "( Max( ( ( AMS + Const ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( Const + ACS ) ) / ( BR - ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "( Max( ( ( RMSe - CS ) / MLU ),DS ) / ( ( Max( MLU,DS ) / Min( MLU ,MUM ) ) / ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC / MUR ) - ( ( ( RMSe - ( Min( RRSe ,MUR ) * Max( Max( RMSe,DS ),MUR ) ) ) - ( DS / ( MUM + RCSe ) ) ) * MUM ) )", "obj1": 0.9937238493723849, "obj2": 0.0024359363605831797}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8535564853556485, "obj2": 0.05979664996548774}, {"determining": "( ( ( Min( Const ,( ( AMS * AMS ) * ( ( FirstVNF_CPU + ACS ) + ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) - ARS ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( FirstVNF_Mem ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( DS + MUM ) * Max( MUR,( MUM / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8744769874476988, "obj2": 0.04890362863210643}, {"determining": "( ( ( FirstVNF_Mem + PN ) + RRS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM + MUC ) - Min( RCSe ,RMSe ) ) - ( Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( ( MUC + MUM ) - RRSe ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8765690376569037, "obj2": 0.04727731987559975}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ( ( AMS * AMS ) * ( RRS / Max( MDR,AMS ) ) ) * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( RCSe * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.05849702558020715}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( AMS * AMS ) + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + Max( ( MUM + MUM ),( RCSe / CS ) ) ) ) ) )", "obj1": 0.891213389121339, "obj2": 0.04306087450685867}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( Min( ( BR * FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * ( RRS / Max( MDR,AMS ) ) ) ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( ( Min( MLU ,( ( MLU / MUC ) / ( RCSe + RCSe ) ) ) / MLU ),Max( ( MUC - ( ( MLU / MLU ) * CS ) ),( MUM + ( ( Max( DS,RCSe ) - CS ) * ( ( ( RMSe + RMSe ) / Max( MLU,MUR ) ) - ( ( RCSe * RRSe ) * ( MUM - RMSe ) ) ) ) ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.7761506276150628, "obj2": 0.10587288594563128}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.011056086767651171}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ACS ,FirstVNF_CPU_Server ) - Min( RRS ,DDR ) ) * ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( Const - FirstVNF_CPU ) ) - ( Min( ACS ,( RRS + MDR ) ) + ( CRS + DDR ) ) ) ) )", "choosing": "( Min( ( DS - ( DS - RRSe ) ) ,Max( MLU,( ( MUR + MLU ) + ( ( CS / ( ( DS * CS ) + MUC ) ) / ( CS - RCSe ) ) ) ) ) * ( ( MUC - ( RMSe + CS ) ) + CS ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( BR - PN ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,DDR ) ) ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / RRSe ) ,( CS * MUR ) ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.9602510460251046, "obj2": 0.012898195531609003}, {"determining": "( Max( ( Min( Min( CRS ,( ( ARS - ACS ) + RRS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ),MRS ) - ( ( BR - ACS ) + Min( ( FirstVNF_Mem * CRS ) ,CRS ) ) )", "choosing": "( ( ( ( MLU * ( ( ( ( MUM + MLU ) / RMSe ) + RRSe ) / Max( RCSe,MUR ) ) ) * ( ( ( MUM * Max( RRSe,RCSe ) ) * MUC ) - ( RMSe + MUC ) ) ) * RRSe ) * ( ( ( RRSe / RMSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( ( DS + Min( MUR ,( MLU - RMSe ) ) ) / Min( MLU ,( MLU + MUR ) ) ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01483061349282627}, {"determining": "( ( ( ( ( FirstVNF_CPU / ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,CRS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) + ( PN / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( DS / ( RMSe / ( RCSe * RMSe ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9874476987447699, "obj2": 0.004157974807349276}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011676256065021002}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( ( FirstVNF_RAM * FirstVNF_Mem ) - Max( ( RRS - DDR ),( FirstVNF_Mem / AMS ) ) ) ) ) ) - DDR ) * ( Min( Min( Max( MDR,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Const ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) * Max( MLU,MLU ) ) * RCSe ) * MLU ) ) - ( MUC / MLU ) ) ) * Min( DS ,( ( Min( Max( CS,MLU ) ,( DS + MLU ) ) + RRSe ) + MLU ) ) )", "obj1": 0.8891213389121339, "obj2": 0.04325563979704806}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUC * RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,( Min( Min( RMSe ,DS ) ,DS ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Min( Max( RMSe,RCSe ) ,CS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( ( Const * Max( RRS,AMS ) ) - PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( RCSe * ( RCSe + MUM ) ) * RMSe ) ) ) ,Max( ( CS * DS ),( Max( RRSe,CS ) - MUR ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Const ) ) - ( ( ( ( CRS / ARS ) + ( FirstVNF_CPU / DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( RMSe / ( MUC * ( ( ( RMSe * RRSe ) / MLU ) - ( Max( CS,DS ) + DS ) ) ) ),( Min( DS ,( MUR * ( ( DS * CS ) + Min( MUC ,RMSe ) ) ) ) + Max( Max( RRSe,MUC ),Max( MUC,MLU ) ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( ( RRS + FirstVNF_RAM_Server ) * RRS ) )", "choosing": "( ( CS + RCSe ) * ( Min( Max( DS,DS ) ,MUM ) + ( RRSe * RRSe ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011676256065021002}, {"determining": "( Min( ( FirstVNF_Mem_Server - MRS ) ,DDR ) * ( ( ( Const * FirstVNF_RAM ) - ( FirstVNF_Mem * ARS ) ) + AMS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Max( MLU,MUM ) ) - ( Max( MUR,( ( MLU / MLU ) / Min( ( Max( MLU,MLU ) * CS ) ,( DS - ( DS - RRSe ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) * ( CS * MUC ) ) / Max( ( MUM + RRSe ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS - Min( Min( ( ( AMS * AMS ) * ACS ) ,Const ) ,( ( DDR * DDR ) / ( ( FirstVNF_CPU_Server * PN ) - PN ) ) ) ) - DDR ) * ( DDR * Min( AMS ,BR ) ) ) - Min( ( MDR * RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( RRSe,MUM ) * ( MUC / ( ( MUR + CS ) / Max( RMSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( RMSe + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RCSe ) ,( DS + MLU ) ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Const ) - Max( ( FirstVNF_Mem * ( PN / BR ) ),MDR ) )", "choosing": "( ( MUM / ( MUM / Max( RMSe,CS ) ) ) * Min( MUR ,( RMSe + ( RMSe * ( ( RRSe + Min( RRSe ,MUC ) ) * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem ) - Max( ( FirstVNF_RAM_Server + CRS ),Const ) )", "choosing": "( ( Min( MUM ,CS ) + Min( MLU ,CS ) ) * ( ( RRSe + RCSe ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - DDR ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * Max( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ),Max( ARS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Min( MLU ,( Min( DS ,Min( ( CS * RCSe ) ,Max( MLU,MUM ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) / ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Max( DDR,ACS ) ) ) - ( ( Const - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( MUM / ( MUM / ( ( MUC / RMSe ) / CS ) ) ) * Min( MUR ,( ( ( ( RRSe * ( RMSe * MUC ) ) / MUR ) / ( MUR * MUM ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( ( ( Const * DDR ) / ( MDR + ACS ) ) / ( MRS / FirstVNF_CPU ) ) )", "choosing": "( ( RCSe / MUM ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS - Min( Min( ( ( AMS * AMS ) * ACS ) ,Const ) ,( ( DDR * DDR ) / ( ( FirstVNF_CPU_Server * PN ) - PN ) ) ) ) - DDR ) * ( DDR * Min( AMS ,BR ) ) ) - Min( ( MDR * RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( RRSe,MUM ) * ( MUC / ( ( MUR + CS ) / Max( RMSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) - MRS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( ( Min( DS ,( MUM + MUC ) ) * ( MUC / MUR ) ) + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ),( Max( FirstVNF_CPU,( ( FirstVNF_Mem * ( RRS / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( PN + ARS ) ) ) + ( ( BR * FirstVNF_RAM ) - Min( BR ,PN ) ) ) ) / ( CRS + ( ( FirstVNF_Mem - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe * Min( RRSe ,( ( MUC + DS ) + RRSe ) ) ) - ( ( ( RMSe + ( RCSe - Min( Min( RRSe ,MUR ) ,RRSe ) ) ) + RMSe ) * Min( RRSe ,MUC ) ) ) + ( RCSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( MRS ,RRS ),FirstVNF_Mem ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( RCSe ,RCSe ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( CS * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + Const ),( ( BR * AMS ) - Min( ( FirstVNF_CPU * DDR ) ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( Const * FirstVNF_CPU_Server ) ) + ( ( Const * ARS ) - Max( MDR,ARS ) ) ) )", "choosing": "( ( ( ( MUM + MUC ) - Min( RCSe ,RMSe ) ) - ( Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( ( MUC + MUM ) - RRSe ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - Min( Const ,FirstVNF_CPU ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),Min( ( ( Max( ( ( RCSe * RRSe ) / RMSe ),Min( MUC ,MUR ) ) + ( MLU / ( ( RMSe / DS ) / DS ) ) ) + MLU ) ,( MLU * MLU ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,FirstVNF_RAM ) * ( MRS + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( CS * ( ( ( ( MUM - RMSe ) / CS ) + ( DS + Min( MUM ,DS ) ) ) - MUM ) ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( Min( DS ,CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( ( MLU / MUC ) ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,( AMS * AMS ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( ACS / Const ) ) ) )", "choosing": "( ( DS + ( MLU * CS ) ) * Min( ( ( MLU / MUC ) + ( ( Max( Max( MUC,CS ),RCSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) - MRS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( ( Min( DS ,( MUM + MUC ) ) * ( MUC / MUR ) ) + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "27": [{"determining": "( ( AMS + AMS ) - ( ( ( Const * DDR ) / ( MDR + ACS ) ) / ( MRS / FirstVNF_CPU ) ) )", "choosing": "( ( DS + ( MLU * CS ) ) * Min( ( ( MLU / MUC ) + ( ( Max( Max( MUC,CS ),RCSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ACS ) - Max( ( ( MDR * ACS ) / ( Const * Max( FirstVNF_CPU_Server,RRS ) ) ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Max( ( MLU * MUR ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( RMSe + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,RMSe ) ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( Max( FirstVNF_Mem_Server,( ( Const / ( FirstVNF_CPU - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Const ) ) - RRS ) ) * Min( ( MDR * ACS ) ,( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MUR,( CS / MUC ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( ( ( ( ( ( Max( RRSe,RRSe ) * ( MLU / MUR ) ) / ( ( CS * RRSe ) - Max( RRSe,RCSe ) ) ) - Max( CS,( Min( RCSe ,MUC ) + ( MLU * MUC ) ) ) ) - DS ) - ( MUR + MUM ) ) - ( ( MLU / MUR ) + Min( RRSe ,CS ) ) ) )", "obj1": 0.5564853556485355, "obj2": 0.3139967929980099}, {"determining": "( Max( ( PN * Const ),( MRS - ARS ) ) - ( AMS * ( ( Const + PN ) / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUC / MUR ) - RRSe ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / MUR ) ,MUC ) - MLU ) ) ) - ( RCSe + MLU ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.6715481171548117, "obj2": 0.15106754631933428}, {"determining": "( Min( ( FirstVNF_CPU * MDR ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + ACS ) ) ) * Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( MUR,( RCSe / ( ( DS + MUC ) / ( ( RRSe / DS ) / ( DS - DS ) ) ) ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,CS ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.30767215481461996}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( AMS * BR ),Max( ( FirstVNF_Mem_Server * MDR ),MDR ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * ( Max( MLU,DS ) / ( Max( Min( ( ( RRSe / MUC ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ),Max( Max( ( MUM * MUR ),RMSe ),MUR ) ) * MUM ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.22996825900760554}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( ACS ,Max( AMS,ARS ) ) / Min( Min( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + AMS ) ,( RRS / ( MRS + Const ) ) ) ,( AMS + FirstVNF_RAM ) ) ),Const ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RMSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( ( RMSe / ( RCSe * MUR ) ) / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( CS + ( ( MUR + ( MUC - ( RCSe * Max( MLU,RCSe ) ) ) ) * ( Max( ( ( RRSe / MLU ) + Min( MLU ,RMSe ) ),CS ) * RCSe ) ) ) ) )", "obj1": 0.6401673640167364, "obj2": 0.1954572829929765}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( BR * AMS ) - Min( PN ,DDR ) ) + ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + RCSe ) ) + ( MLU / ( ( CS - ( ( Min( Min( DS ,RCSe ) ,RMSe ) / RCSe ) / DS ) ) + ( MUR * ( Min( MLU ,MUR ) - DS ) ) ) ) )", "obj1": 0.7301255230125523, "obj2": 0.1286839909719523}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( FirstVNF_Mem * Const ) - RRS ) ) ,( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server / Max( ( BR * PN ),MRS ) ) ) - PN ) + AMS ) ) * ( Max( FirstVNF_Mem_Server,( MDR - MRS ) ) + ( DDR * ( Min( CRS ,Max( MRS,( BR * MRS ) ) ) + AMS ) ) ) )", "choosing": "( ( ( ( Min( ( ( DS - DS ) * RCSe ) ,( Max( MUC,MUM ) * Max( MLU,( MUR + DS ) ) ) ) * MUR ) / MUR ) / MUR ) + ( ( MLU - RMSe ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.28583014284586084}, {"determining": "( ( Min( ( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / MLU ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( RCSe - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),Max( DS,Min( CS ,MUC ) ) ) )", "obj1": 0.694560669456067, "obj2": 0.136427375110537}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( ( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + RCSe ) ) + ( MLU / ( ( CS - Max( ( Min( Min( DS ,RCSe ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.606694560669456, "obj2": 0.25097724497058976}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( ( FirstVNF_CPU_Server + Min( MDR ,Max( FirstVNF_CPU,Const ) ) ) * BR ),( Const + Max( DDR,BR ) ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Min( Max( ( MUM * ( Max( Min( DS ,( RRSe + RRSe ) ),RCSe ) - MUM ) ),MUC ) ,RMSe ) ,( Max( RCSe,RCSe ) + ( MUR - Max( ( CS - DS ),Max( MUR,( ( Max( RRSe,MUR ) * Max( MUR,DS ) ) * MUR ) ) ) ) ) )", "obj1": 0.6380753138075314, "obj2": 0.21939207112215908}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7824267782426778, "obj2": 0.10101181853800154}, {"determining": "( ( Min( ( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.698744769874477, "obj2": 0.13224460190052748}, {"determining": "( Min( Const ,( ( AMS * Const ) * FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( Max( ( MUM * MUR ),RMSe ) / CS ) ) ) )", "obj1": 0.7552301255230126, "obj2": 0.10413415661949606}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * Min( AMS ,( CRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( MLU + MUM ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.6192468619246861, "obj2": 0.24820139008596628}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUM ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( MUM + MUM ) * ( RCSe / CS ) ) ) )", "obj1": 0.7531380753138075, "obj2": 0.11299411079426579}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( MDR + ARS ) ) ) )", "choosing": "( Max( ( MUR + MLU ),( RCSe * MUC ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28262373344132685}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( Const,( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( AMS / FirstVNF_Mem_Server ) / DDR ) ) ) ,( DDR + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( RRSe * RCSe ) ,MUC ) * ( MUR + ( ( ( ( Min( MUC ,MUC ) - RCSe ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8075313807531381, "obj2": 0.07559609615975409}, {"determining": "( ( ( ( ( ACS - AMS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( ( ACS * Const ) - ( CRS + DDR ) ) ) - ( CRS - RRS ) ) ) + MRS ) - ( ( FirstVNF_RAM * FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( Min( MUR ,RMSe ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MUR ) / RCSe ) ) ) ) * Min( ( ( DS - ( Min( MUC ,CS ) + MLU ) ) / RRSe ) ,RRSe ) )", "obj1": 0.9351464435146444, "obj2": 0.022210372528401336}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( Max( ( ( CRS / ARS ) + ( DDR * DDR ) ),( ( ( ARS * Const ) - DDR ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Min( Max( ( Max( ( ( ( MUM - Min( DS ,RMSe ) ) / RCSe ) / ( ( ( RCSe * MUC ) * ( CS + MLU ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,( Min( Min( RMSe ,DS ) ,DS ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.7887029288702929, "obj2": 0.09380288103284468}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.7405857740585774, "obj2": 0.11919506272667857}, {"determining": "( ( ( ( ( FirstVNF_Mem + ( ACS / BR ) ) + FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Min( ( ( AMS / AMS ) + ( Min( RRS ,( Min( FirstVNF_Mem_Server ,DDR ) - ( FirstVNF_CPU / DDR ) ) ) / ( ( Const * MDR ) / ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + ( RRS * MRS ) ) ) ) ) ,Min( Const ,FirstVNF_Mem ) ) ) * ( ( ARS - Min( FirstVNF_RAM ,CRS ) ) - ( BR - ARS ) ) )", "choosing": "Min( Min( ( Min( ( ( MUR * Min( Max( MUM,MUR ) ,MUC ) ) - MUR ) ,CS ) / MUC ) ,MUM ) ,( ( RCSe / MUC ) + RRSe ) )", "obj1": 0.6610878661087866, "obj2": 0.194468252171246}, {"determining": "( ( FirstVNF_RAM / ( ( Min( ( ( Min( FirstVNF_CPU ,ACS ) - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) + DDR ) ) * Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - Min( Max( MUC,RRSe ) ,( MUM - RRSe ) ) ) ) * MUM ) - Max( Max( RMSe,( CS * MUR ) ),MUR ) ) + ( MLU / ( ( CS - Max( ( Min( Min( CS ,RCSe ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9058577405857741, "obj2": 0.034581817291802895}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( MRS / CRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - ( ( MRS - BR ) + MDR ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - RRSe ) + DS ) * RMSe ) ,( Max( RCSe,MUM ) + ( MUR - Max( ( RMSe - DS ),Max( MUR,( MUC * MUR ) ) ) ) ) )", "obj1": 0.7384937238493724, "obj2": 0.12034635635616181}, {"determining": "( DDR * ( FirstVNF_RAM / ( ( Min( ( ( ( AMS * Const ) - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - Max( Max( ( CS * MUR ),RMSe ),MUR ) ) + ( MLU / ( ( CS - Max( ( Min( Min( DS ,DS ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9142259414225942, "obj2": 0.030608491297719}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) ) - DDR ) * ( Min( Min( ( MDR / FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ,( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( MUR + MUM ) ,MLU ) ,( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( ( Max( RMSe,CS ) / DS ) / DS ) ) ) ) ) )", "obj1": 0.805439330543933, "obj2": 0.0847427110804511}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( Const ,( Min( Max( AMS,AMS ) ,AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( CRS - Const ) ) - ( ( ( ( CRS / ARS ) / ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + ( ( Max( BR,Const ) * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( MLU,MUM ) / Max( Max( ( CS - ( MUC - ( MUR / RMSe ) ) ),MUC ),( Max( ( RMSe - MUC ),RRSe ) / Min( MLU ,RRSe ) ) ) ) - ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / ( RMSe / CS ) ) )", "obj1": 0.9225941422594143, "obj2": 0.027448040642281093}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( ARS / ( PN - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR / PN ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - ( ( DDR / FirstVNF_CPU_Server ) - Const ) ) ) + MRS ) )", "choosing": "( ( ( ( ( Min( MUR ,( Min( RMSe ,MUC ) - Min( MLU ,MUC ) ) ) / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + CS ) ) + ( MLU / ( ( ( MUR - MUR ) - Max( ( Min( Min( RCSe ,DS ) ,RMSe ) + RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9456066945606695, "obj2": 0.016960403410094346}, {"determining": "( ( MRS - ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - Max( MRS,ARS ) )", "choosing": "Min( Max( ( Max( ( MUM / ( ( ( MUC * RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),( RCSe + DS ) ) ,( Min( Min( RMSe ,DS ) ,DS ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.7928870292887029, "obj2": 0.0897625887737664}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS / Max( Min( FirstVNF_CPU ,Max( Min( PN ,( ARS / DDR ) ),ACS ) ),FirstVNF_CPU ) ) ) * ( ( ARS - Min( Const ,Min( ( FirstVNF_CPU_Server * AMS ) ,( Max( ( MRS - DDR ),Min( AMS ,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + CS ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( RRSe,CS ) ,( DS + RRSe ) ) + Max( Min( ( Min( RMSe ,MUR ) + CS ) ,Max( Max( CS,MLU ),RRSe ) ),CS ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03888409692450047}, {"determining": "( ( ( ARS - Min( Const ,( AMS + ARS ) ) ) - MRS ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),( Min( MUC ,RCSe ) + ( RCSe / RMSe ) ) ) / ( ( ( MUR / RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.0755516722320791}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe / ( Max( ( ( ( CS - MUC ) / MUR ) / Max( Min( MUR ,RRSe ),RCSe ) ),MUR ) - RMSe ) ) / RCSe ) * ( MUC / ( MUM - RRSe ) ) )", "obj1": 0.803347280334728, "obj2": 0.08929388093318207}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RMSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8368200836820083, "obj2": 0.06310192050969243}, {"determining": "( ( ( ARS - Min( Const ,( Min( Max( MRS,FirstVNF_Mem_Server ) ,AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUC ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RMSe / MUC ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( CS / RCSe ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06804264282929773}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ),MRS ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( Max( MUR,MUC ) ,( CS + ( ( Max( MLU,MUM ) / MLU ) * RMSe ) ) ) - Min( MLU ,MUM ) ) - ( ( MLU + CS ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9393305439330544, "obj2": 0.020038673307247405}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( ( FirstVNF_CPU_Server + Min( MDR ,Max( FirstVNF_CPU,Const ) ) ) * BR ),( Const + Max( DDR,BR ) ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Min( Max( ( MUM * ( Max( Min( DS ,( RRSe + RRSe ) ),RCSe ) - MUM ) ),MUC ) ,RMSe ) ,( Max( RCSe,RCSe ) + ( MUR - Max( ( CS - DS ),Max( MUR,( ( Max( RRSe,MUR ) * Max( MUR,DS ) ) * MUR ) ) ) ) ) )", "obj1": 0.6380753138075314, "obj2": 0.21939207112215908}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( FirstVNF_CPU + Max( FirstVNF_RAM,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ( ( AMS * AMS ) * ( RRS / Max( MDR,AMS ) ) ) * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( RCSe * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( MUR,( RCSe / ( MLU / MUR ) ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.058234744569385766}, {"determining": "( ( Max( DDR,FirstVNF_RAM ) - ( MDR - FirstVNF_Mem ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( Min( CRS ,( ( AMS * AMS ) / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),CRS ) ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( MUR / ( ( Max( ( DS * MUC ),RRSe ) - Max( DS,MUR ) ) / ( Max( DS,MLU ) / Max( ( RCSe * MUC ),( RMSe + MLU ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.056994543561588916}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,CRS ) / MDR ) / CRS ) - DDR ) * ( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + ACS ) ) - Min( ( ACS * ( PN - RRS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Max( Min( RMSe ,MUM ),MUM ) ) ) ) ) ) * ( ( Min( MLU ,MUC ) + ( CS * MUC ) ) / Max( Min( MUM ,MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.06008764660866809}, {"determining": "( ( ( ARS - Min( Const ,( ( Max( Min( ARS ,MRS ),DDR ) * AMS ) * ( ARS + ( ( PN / CRS ) / FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( RRSe - Min( MUC ,( CS - RRSe ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUC / ( ( ( ( RCSe / MLU ) * RMSe ) * RCSe ) * ( ( Max( MLU,RRSe ) + ( RRSe - MUC ) ) - ( MUR + MUM ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07141561894457803}, {"determining": "( ( ARS * DDR ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( ARS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.040478491347406276}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Max( ( ARS / MRS ),DDR ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( Max( MUM,( Max( RRSe,RMSe ) + MUM ) ) + MUR ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8514644351464435, "obj2": 0.057177193186285453}, {"determining": "( ( CRS - AMS ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,( AMS * AMS ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( ACS / Const ) ) ) )", "choosing": "( ( DS + ( MLU * CS ) ) * Min( ( ( MLU / MUC ) + ( ( Max( Max( MUC,CS ),RCSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8723849372384938, "obj2": 0.050256428202555825}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( MUC - Max( Min( ( RRSe / MUR ) ,RRSe ),DS ) ) * ( ( ( MUM * Max( RCSe,RRSe ) ) * MUC ) - ( RMSe + MUC ) ) ) - RRSe ) * ( ( ( MLU / RRSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9539748953974896, "obj2": 0.015428724287415206}, {"determining": "( ( FirstVNF_CPU - PN ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( CRS,BR ) ) * Min( ( FirstVNF_Mem * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RCSe / DS ) / RRSe ) ) ) ) ) ) * ( Max( ( MLU / MUC ),( CS * MUC ) ) / Max( ( MUM + Max( CS,( Min( MUM ,( MUC + MUC ) ) - ( RMSe / RRSe ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.07075922075752833}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( ( AMS + AMS ) + ( RRS / ( CRS / MRS ) ) ) + ( AMS + FirstVNF_RAM ) ) ),( FirstVNF_Mem * BR ) ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM / Max( DS,RMSe ) ) / MUM ) * ( MUR + ( ( ( ( Min( RCSe ,Min( RCSe ,CS ) ) - ( ( MLU * RMSe ) / MUR ) ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8640167364016736, "obj2": 0.05152784453698841}, {"determining": "( Max( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( Min( ( RRS + ARS ) ,FirstVNF_RAM ) + ARS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe * ( MLU / ( ( MLU - RRSe ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.02819236408560707}, {"determining": "( ( DDR - ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( ( MRS - ARS ),Const ) + ARS ) ) ) ) ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,( DDR + RRS ) ) ) ) ,( ( Max( ( PN / BR ),FirstVNF_Mem_Server ) - PN ) + Const ) ),( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / ( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MUM ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) - ( MLU / RMSe ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.05227908683176889}, {"determining": "( ( ( ARS - Min( Const ,Max( ( AMS * AMS ),( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,( AMS * AMS ) ) - Min( ( ACS * ( ( ACS / FirstVNF_Mem ) - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( DS + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( ( MLU / MUC ) + ( ( Max( ( ( MLU * RRSe ) - ( CS - MUM ) ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8828451882845189, "obj2": 0.045213902229149616}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) ) - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.046013369280182945}, {"determining": "( ( ( ARS - Min( Const ,Min( ( ( Min( CRS ,FirstVNF_CPU_Server ) + ( Const / PN ) ) * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( AMS * AMS ) + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUM ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + Max( ( Min( RRSe ,( CS / RRSe ) ) + MUM ),( RCSe / CS ) ) ) ) ) )", "obj1": 0.8870292887029289, "obj2": 0.04425459158390734}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( ( ( ARS - ( ( FirstVNF_Mem + PN ) + RRS ) ) - DDR ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),Min( ( ( Max( ( ( RCSe * RRSe ) / RMSe ),Min( MUC ,MUR ) ) + MUM ) + MLU ) ,( MLU * MLU ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002278226602246279}, {"determining": "( Min( ( BR + ( ACS - FirstVNF_Mem_Server ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( MUC - Max( Min( ( RRSe / MUR ) ,RRSe ),DS ) ) * ( ( ( MUM * Max( RCSe,( MUM + MUC ) ) ) * MUC ) - ( RMSe + MUC ) ) ) - RRSe ) * ( ( ( MLU / RRSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00895756443492801}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( FirstVNF_CPU - Const ) ) ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.006706781592803547}, {"determining": "( ( ( Min( Const ,( ( AMS * AMS ) * ( ( FirstVNF_CPU + ACS ) + ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) - ARS ) - DDR ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( FirstVNF_Mem ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( DS + MUM ) * Max( MUR,( MUM / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8744769874476988, "obj2": 0.04890362863210643}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( BR - RRS ) ) ) ) - ( PN / BR ) ) + MRS ) )", "choosing": "( ( ( Max( RCSe,MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( ( MUR / MUR ) * Min( ( ( RRSe / MUR ) * MUC ) ,MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9707112970711297, "obj2": 0.009165238076926416}, {"determining": "( ( ( FirstVNF_Mem + PN ) + RRS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM + MUC ) - Min( RCSe ,RMSe ) ) - ( Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( ( MUC + MUM ) - RRSe ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8765690376569037, "obj2": 0.04727731987559975}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( FirstVNF_Mem ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( MUC / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.891213389121339, "obj2": 0.04184791354211783}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.010980552250898334}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( ( FirstVNF_RAM * FirstVNF_Mem ) - Max( ( RRS - DDR ),( FirstVNF_Mem / AMS ) ) ) ) ) ) - DDR ) * ( Min( Min( Max( MDR,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Const ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) * Max( MLU,MLU ) ) * RCSe ) * MLU ) ) - ( MUC / MLU ) ) ) * Min( DS ,( ( Min( Max( CS,MLU ) ,( DS + MLU ) ) + RRSe ) + MLU ) ) )", "obj1": 0.8891213389121339, "obj2": 0.04325563979704806}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( FirstVNF_CPU - Const ) ) ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.007383878674707006}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( BR - PN ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,DDR ) ) ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / RRSe ) ,( CS * MUR ) ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.9602510460251046, "obj2": 0.012898195531609003}, {"determining": "( Max( ( Min( Min( CRS ,( ( ARS - ACS ) + RRS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ),MRS ) - ( ( BR - ACS ) + Min( ( FirstVNF_Mem * CRS ) ,CRS ) ) )", "choosing": "( ( ( ( MLU * ( ( ( ( MUM + MLU ) / RMSe ) + RRSe ) / Max( RCSe,MUR ) ) ) * ( ( ( MUM * Max( RRSe,RCSe ) ) * MUC ) - ( RMSe + MUC ) ) ) * RRSe ) * ( ( ( RRSe / RMSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( ( DS + Min( MUR ,( MLU - RMSe ) ) ) / Min( MLU ,( MLU + MUR ) ) ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01483061349282627}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( Min( ( ACS * Max( ( RRS * FirstVNF_Mem ),ACS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_CPU / FirstVNF_Mem ) ) - Max( ARS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUR,RRSe ) - Min( RMSe ,MUR ) ) / ( MLU * CS ) ) / Max( ( Min( MLU ,( Min( ( MUR + MUM ) ,MLU ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) )", "obj1": 0.9874476987447699, "obj2": 0.003766526982141878}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RMSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05210688617347154}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ACS ,FirstVNF_CPU_Server ) - Min( RRS ,DDR ) ) * ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( Const - FirstVNF_CPU ) ) - ( Min( ACS ,( RRS + MDR ) ) + ( CRS + DDR ) ) ) ) )", "choosing": "( Min( ( DS - ( DS - RRSe ) ) ,Max( MLU,( ( MUR + MLU ) + ( ( CS / ( ( DS * CS ) + MUC ) ) / ( CS - RCSe ) ) ) ) ) * ( ( MUC - ( RMSe + CS ) ) + CS ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Min( Max( RMSe,RCSe ) ,CS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( ( Const * Max( RRS,AMS ) ) - PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( RCSe * ( RCSe + MUM ) ) * RMSe ) ) ) ,Max( ( CS * DS ),( Max( RRSe,CS ) - MUR ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011676256065021002}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Const ) ) - ( ( ( ( CRS / ARS ) + ( FirstVNF_CPU / DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( RMSe / ( MUC * ( ( ( RMSe * RRSe ) / MLU ) - ( Max( CS,DS ) + DS ) ) ) ),( Min( DS ,( MUR * ( ( DS * CS ) + Min( MUC ,RMSe ) ) ) ) + Max( Max( RRSe,MUC ),Max( MUC,MLU ) ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUC * RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,( Min( Min( RMSe ,DS ) ,DS ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( ( RRS + FirstVNF_RAM_Server ) * RRS ) )", "choosing": "( ( CS + RCSe ) * ( Min( Max( DS,DS ) ,MUM ) + ( RRSe * RRSe ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011676256065021002}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( MRS + FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,DDR ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server - MRS ) ,DDR ) * ( ( ( Const * FirstVNF_RAM ) - ( FirstVNF_Mem * ARS ) ) + AMS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Max( MLU,MUM ) ) - ( Max( MUR,( ( MLU / MLU ) / Min( ( Max( MLU,MLU ) * CS ) ,( DS - ( DS - RRSe ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) * ( CS * MUC ) ) / Max( ( MUM + RRSe ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS - Min( Min( ( ( AMS * AMS ) * ACS ) ,Const ) ,( ( DDR * DDR ) / ( ( FirstVNF_CPU_Server * PN ) - PN ) ) ) ) - DDR ) * ( DDR * Min( AMS ,BR ) ) ) - Min( ( MDR * RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( RRSe,MUM ) * ( MUC / ( ( MUR + CS ) / Max( RMSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( RMSe + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RCSe ) ,( DS + MLU ) ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Const ) - Max( ( FirstVNF_Mem * ( PN / BR ) ),MDR ) )", "choosing": "( ( MUM / ( MUM / Max( RMSe,CS ) ) ) * Min( MUR ,( RMSe + ( RMSe * ( ( RRSe + Min( RRSe ,MUC ) ) * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem ) - Max( ( FirstVNF_RAM_Server + CRS ),Const ) )", "choosing": "( ( Min( MUM ,CS ) + Min( MLU ,CS ) ) * ( ( RRSe + RCSe ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - DDR ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * Max( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ),Max( ARS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Min( MLU ,( Min( DS ,Min( ( CS * RCSe ) ,Max( MLU,MUM ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) / ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Max( DDR,ACS ) ) ) - ( ( Const - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( MUM / ( MUM / ( ( MUC / RMSe ) / CS ) ) ) * Min( MUR ,( ( ( ( RRSe * ( RMSe * MUC ) ) / MUR ) / ( MUR * MUM ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( ( ( Const * DDR ) / ( MDR + ACS ) ) / ( MRS / FirstVNF_CPU ) ) )", "choosing": "( ( RCSe / MUM ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS - Min( Min( ( ( AMS * AMS ) * ACS ) ,Const ) ,( ( DDR * DDR ) / ( ( FirstVNF_CPU_Server * PN ) - PN ) ) ) ) - DDR ) * ( DDR * Min( AMS ,BR ) ) ) - Min( ( MDR * RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( RRSe,MUM ) * ( MUC / ( ( MUR + CS ) / Max( RMSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) - MRS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( ( Min( DS ,( MUM + MUC ) ) * ( MUC / MUR ) ) + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ),( Max( FirstVNF_CPU,( ( FirstVNF_Mem * ( RRS / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( PN + ARS ) ) ) + ( ( BR * FirstVNF_RAM ) - Min( BR ,PN ) ) ) ) / ( CRS + ( ( FirstVNF_Mem - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe * Min( RRSe ,( ( MUC + DS ) + RRSe ) ) ) - ( ( ( RMSe + ( RCSe - Min( Min( RRSe ,MUR ) ,RRSe ) ) ) + RMSe ) * Min( RRSe ,MUC ) ) ) + ( RCSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( MRS ,RRS ),FirstVNF_Mem ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( RCSe ,RCSe ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( CS * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + Const ),( ( BR * AMS ) - Min( ( FirstVNF_CPU * DDR ) ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( Const * FirstVNF_CPU_Server ) ) + ( ( Const * ARS ) - Max( MDR,ARS ) ) ) )", "choosing": "( ( ( ( MUM + MUC ) - Min( RCSe ,RMSe ) ) - ( Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( ( MUC + MUM ) - RRSe ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - Min( Const ,FirstVNF_CPU ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),Min( ( ( Max( ( ( RCSe * RRSe ) / RMSe ),Min( MUC ,MUR ) ) + ( MLU / ( ( RMSe / DS ) / DS ) ) ) + MLU ) ,( MLU * MLU ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,FirstVNF_RAM ) * ( MRS + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( CS * ( ( ( ( MUM - RMSe ) / CS ) + ( DS + Min( MUM ,DS ) ) ) - MUM ) ),( Max( ( Max( MUC,CS ) + MUR ),Min( MUC ,MUM ) ) * Min( Min( DS ,CS ) ,( MUM * Max( ( DS / RRSe ),Min( ( ( MLU * RCSe ) - ( RRSe / MUR ) ) ,Min( ( MLU / MUC ) ,Min( MUC ,MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "28": [{"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( Max( AMS,DDR ) + AMS ) ) ) )", "choosing": "( Max( Max( MUR,MLU ),Max( DS,Max( RMSe,Min( MUM ,MUM ) ) ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( ( ( Const * DDR ) / ( MDR + ACS ) ) / ( MRS / FirstVNF_CPU ) ) )", "choosing": "( ( DS + ( MLU * CS ) ) * Min( ( ( MLU / MUC ) + ( ( Max( Max( MUC,CS ),RCSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( Max( FirstVNF_Mem_Server,( ( Const / ( FirstVNF_CPU - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Const ) ) - RRS ) ) * Min( ( MDR * ACS ) ,( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MUR,( CS / MUC ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( ( ( ( ( ( Max( RRSe,RRSe ) * ( MLU / MUR ) ) / ( ( CS * RRSe ) - Max( RRSe,RCSe ) ) ) - Max( CS,( Min( RCSe ,MUC ) + ( MLU * MUC ) ) ) ) - DS ) - ( MUR + MUM ) ) - ( ( MLU / MUR ) + Min( RRSe ,CS ) ) ) )", "obj1": 0.5564853556485355, "obj2": 0.3139967929980099}, {"determining": "( Max( ( PN * Const ),( MRS - ARS ) ) - ( AMS * ( ( Const + PN ) / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUC / MUR ) - RRSe ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / MUR ) ,MUC ) - MLU ) ) ) - ( RCSe + MLU ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.6715481171548117, "obj2": 0.15106754631933428}, {"determining": "( Min( ( FirstVNF_CPU * MDR ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + ACS ) ) ) * Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( MUR,( RCSe / ( ( DS + MUC ) / ( ( RRSe / DS ) / ( DS - DS ) ) ) ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,CS ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.30767215481461996}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) )", "choosing": "Max( ( MUC * CS ),( Max( DS,Min( CS ,MUC ) ) - Min( ( DS * CS ) ,Min( Min( Max( RMSe,RCSe ) ,CS ) ,( MUC - Max( DS,Min( RCSe ,MLU ) ) ) ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.18489539907279057}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( AMS * BR ),Max( ( FirstVNF_Mem_Server * MDR ),MDR ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * ( Max( MLU,DS ) / ( Max( Min( ( ( RRSe / MUC ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ),Max( Max( ( MUM * MUR ),RMSe ),MUR ) ) * MUM ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.22996825900760554}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( ACS ,Max( AMS,ARS ) ) / Min( Min( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + AMS ) ,( RRS / ( MRS + Const ) ) ) ,( AMS + FirstVNF_RAM ) ) ),Const ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RMSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( ( RMSe / ( RCSe * MUR ) ) / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( CS + ( ( MUR + ( MUC - ( RCSe * Max( MLU,RCSe ) ) ) ) * ( Max( ( ( RRSe / MLU ) + Min( MLU ,RMSe ) ),CS ) * RCSe ) ) ) ) )", "obj1": 0.6401673640167364, "obj2": 0.1954572829929765}, {"determining": "( ( ARS * Min( ( ( FirstVNF_RAM + ( Max( DDR,FirstVNF_Mem_Server ) + Const ) ) - CRS ) ,Min( FirstVNF_RAM_Server ,( ( CRS / AMS ) / ( ( FirstVNF_Mem / CRS ) * FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_Mem_Server * ( DDR * BR ) ) )", "choosing": "( Max( ( RMSe + RRSe ),DS ) + ( CS - Min( RMSe ,MUC ) ) )", "obj1": 0.5983263598326359, "obj2": 0.26950450385234237}, {"determining": "( Min( ( FirstVNF_CPU * MDR ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + ACS ) ) ) * Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUR,( RCSe / ( ( DS + MUC ) / ( ( RRSe / DS ) / ( DS - DS ) ) ) ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( MLU - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.2848010376470221}, {"determining": "( Min( Const ,( ( AMS * Const ) * FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - ( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( Max( RRSe,RMSe ) / CS ) ) ) )", "obj1": 0.7301255230125523, "obj2": 0.12765990047938322}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( ( FirstVNF_CPU_Server + Min( MDR ,Max( FirstVNF_CPU,Const ) ) ) * BR ),( Const + Max( DDR,BR ) ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Min( Max( ( MUM * ( Max( Min( DS ,( RRSe + RRSe ) ),RCSe ) - MUM ) ),MUC ) ,RMSe ) ,( Max( RCSe,RCSe ) + ( MUR - Max( ( CS - DS ),Max( MUR,( ( Max( RRSe,MUR ) * Max( MUR,DS ) ) * MUR ) ) ) ) ) )", "obj1": 0.6380753138075314, "obj2": 0.21939207112215908}, {"determining": "( Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) * ( FirstVNF_RAM / ( ( Min( ( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + RCSe ) ) + ( MLU / ( ( CS - Max( ( Min( Min( DS ,RCSe ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.606694560669456, "obj2": 0.25097724497058976}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7824267782426778, "obj2": 0.10101181853800154}, {"determining": "( ( Min( ( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.698744769874477, "obj2": 0.12808283759603845}, {"determining": "( Min( Const ,( ( AMS * Const ) * FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( Max( ( MUM * MUR ),RMSe ) / CS ) ) ) )", "obj1": 0.7552301255230126, "obj2": 0.10413415661949606}, {"determining": "( Min( ( MDR * ( BR - Const ) ) ,Min( Max( ARS,ACS ) ,( FirstVNF_Mem - FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_CPU + FirstVNF_CPU ) * AMS ) / ( Max( ( PN / DDR ),Const ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) / ( RRSe - ( ( MUR / MUR ) * Min( ( RCSe / RRSe ) ,MUR ) ) ) ) * MUM ) - ( ( RCSe - ( MUR - MUR ) ) + RCSe ) ) + ( MLU / ( RRSe + RCSe ) ) )", "obj1": 0.6129707112970711, "obj2": 0.24459617419998908}, {"determining": "( ( Min( ( ( ( ( AMS / Max( FirstVNF_CPU_Server,RRS ) ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * Max( DDR,( ( FirstVNF_Mem - Min( MDR ,AMS ) ) - FirstVNF_Mem_Server ) ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( FirstVNF_CPU_Server / CRS ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "Min( ( CS * RMSe ) ,( Min( Min( RMSe ,DS ) ,DS ) * ( ( MUC - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.6861924686192469, "obj2": 0.14371937630463646}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( Max( MUR,( RCSe / ( MLU / ( ( RRSe / DS ) / ( RCSe * MUM ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( MUM + MUM ) * ( RCSe / CS ) ) ) )", "obj1": 0.7531380753138075, "obj2": 0.11299411079426579}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( Const,( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( AMS / FirstVNF_Mem_Server ) / DDR ) ) ) ,( DDR + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( RRSe * RCSe ) ,MUC ) * ( MUR + ( ( ( ( Min( MUC ,MUC ) - RCSe ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8075313807531381, "obj2": 0.07559609615975409}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + ( FirstVNF_Mem_Server * ( DDR - ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RCSe * RRSe ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7949790794979079, "obj2": 0.08049644303988868}, {"determining": "( ( Min( ( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / MLU ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( RCSe - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),Max( DS,Min( CS ,MUC ) ) ) )", "obj1": 0.694560669456067, "obj2": 0.136427375110537}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( MDR + ARS ) ) ) )", "choosing": "( Max( ( MUR + MLU ),( RCSe * MUC ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28262373344132685}, {"determining": "( ( ( ( ( ACS - AMS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( ( ACS * Const ) - ( CRS + DDR ) ) ) - ( CRS - RRS ) ) ) + MRS ) - ( ( FirstVNF_RAM * FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( Min( MUR ,RMSe ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MUR ) / RCSe ) ) ) ) * Min( ( ( DS - ( Min( MUC ,CS ) + MLU ) ) / RRSe ) ,RRSe ) )", "obj1": 0.9351464435146444, "obj2": 0.022210372528401336}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + ( CRS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Min( PN ,AMS ) - ( ( ARS - Min( ARS ,MRS ) ) - DDR ) ) ) + MRS ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUC * RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,( ( MUM + Max( ( ( RCSe * RRSe ) / RMSe ),Min( MUC ,MUR ) ) ) * ( ( RCSe - RMSe ) / ( ( ( ( CS - MUM ) * DS ) / MUR ) + MUM ) ) ) )", "obj1": 0.7866108786610879, "obj2": 0.09224956818513332}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.7405857740585774, "obj2": 0.11919506272667857}, {"determining": "( ( MRS - ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - Max( MRS,ARS ) )", "choosing": "Min( Max( ( Max( ( MUM / ( ( ( MUC * RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),( RCSe + DS ) ) ,( Min( Min( RMSe ,DS ) ,DS ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.7928870292887029, "obj2": 0.0897625887737664}, {"determining": "( ( ( ( ( FirstVNF_Mem + ( ACS / BR ) ) + FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Min( ( ( AMS / AMS ) + ( Min( RRS ,( Min( FirstVNF_Mem_Server ,DDR ) - ( FirstVNF_CPU / DDR ) ) ) / ( ( Const * MDR ) / ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + ( RRS * MRS ) ) ) ) ) ,Min( Const ,FirstVNF_Mem ) ) ) * ( ( ARS - Min( FirstVNF_RAM ,CRS ) ) - ( BR - ARS ) ) )", "choosing": "Min( Min( ( Min( ( ( MUR * Min( Max( MUM,MUR ) ,MUC ) ) - MUR ) ,CS ) / MUC ) ,MUM ) ,( ( RCSe / MUC ) + RRSe ) )", "obj1": 0.6610878661087866, "obj2": 0.194468252171246}, {"determining": "( ( FirstVNF_RAM / ( ( Min( ( ( Min( FirstVNF_CPU ,ACS ) - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) + DDR ) ) * Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - Min( Max( MUC,RRSe ) ,( MUM - RRSe ) ) ) ) * MUM ) - Max( Max( RMSe,( CS * MUR ) ),MUR ) ) + ( MLU / ( ( CS - Max( ( Min( Min( CS ,RCSe ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9058577405857741, "obj2": 0.034581817291802895}, {"determining": "( DDR * ( FirstVNF_RAM / ( ( Min( ( ( ( AMS * Const ) - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - Max( Max( ( CS * MUR ),RMSe ),MUR ) ) + ( MLU / ( ( CS - Max( ( Min( Min( DS ,DS ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9142259414225942, "obj2": 0.030608491297719}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( Const ,( Min( Max( AMS,AMS ) ,AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( CRS - Const ) ) - ( ( ( ( CRS / ARS ) / ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + ( ( Max( BR,Const ) * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( MLU,MUM ) / Max( Max( ( CS - ( MUC - ( MUR / RMSe ) ) ),MUC ),( Max( ( RMSe - MUC ),RRSe ) / Min( MLU ,RRSe ) ) ) ) - ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / ( RMSe / CS ) ) )", "obj1": 0.9225941422594143, "obj2": 0.027448040642281093}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( MRS / CRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - ( ( MRS - BR ) + MDR ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - RRSe ) + DS ) * RMSe ) ,( Max( RCSe,MUM ) + ( MUR - Max( ( RMSe - DS ),Max( MUR,( MUC * MUR ) ) ) ) ) )", "obj1": 0.7384937238493724, "obj2": 0.12034635635616181}, {"determining": "( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( ( Min( ( ( FirstVNF_RAM - CRS ) * FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS / AMS ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.19445037336633955}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( ARS / ( PN - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR / PN ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - ( ( DDR / FirstVNF_CPU_Server ) - Const ) ) ) + MRS ) )", "choosing": "( ( ( ( ( Min( MUR ,( Min( RMSe ,MUC ) - Min( MLU ,MUC ) ) ) / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + CS ) ) + ( MLU / ( ( ( MUR - MUR ) - Max( ( Min( Min( RCSe ,DS ) ,RMSe ) + RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9456066945606695, "obj2": 0.016960403410094346}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS / Max( Min( FirstVNF_CPU ,Max( Min( PN ,( ARS / DDR ) ),ACS ) ),FirstVNF_CPU ) ) ) * ( ( ARS - Min( Const ,Min( ( FirstVNF_CPU_Server * AMS ) ,( Max( ( MRS - DDR ),Min( AMS ,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + CS ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( RRSe,CS ) ,( DS + RRSe ) ) + Max( Min( ( Min( RMSe ,MUR ) + CS ) ,Max( Max( CS,MLU ),RRSe ) ),CS ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03888409692450047}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( Const / ACS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( Min( RCSe ,MUC ) + ( MLU * MUC ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07355849139621061}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RMSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8368200836820083, "obj2": 0.06310192050969243}, {"determining": "( ( ( ARS - Min( Const ,( Min( Max( MRS,FirstVNF_Mem_Server ) ,AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUC ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RMSe / MUC ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( CS / RCSe ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06804264282929773}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( MRS - ARS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( FirstVNF_Mem ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( MUM / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) ) ) )", "obj1": 0.8723849372384938, "obj2": 0.04766531634910393}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ),MRS ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( Max( MUR,MUC ) ,( CS + ( ( Max( MLU,MUM ) / MLU ) * RMSe ) ) ) - Min( MLU ,MUM ) ) - ( ( MLU + CS ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9393305439330544, "obj2": 0.020038673307247405}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( ( FirstVNF_CPU_Server + Min( MDR ,Max( FirstVNF_CPU,Const ) ) ) * BR ),( Const + Max( DDR,BR ) ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Min( Max( ( MUM * ( Max( Min( DS ,( RRSe + RRSe ) ),RCSe ) - MUM ) ),MUC ) ,RMSe ) ,( Max( RCSe,RCSe ) + ( MUR - Max( ( CS - DS ),Max( MUR,( ( Max( RRSe,MUR ) * Max( MUR,DS ) ) * MUR ) ) ) ) ) )", "obj1": 0.6380753138075314, "obj2": 0.21939207112215908}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( ( AMS + AMS ) + ( RRS / ( CRS / MRS ) ) ) + ( AMS + FirstVNF_RAM ) ) ),( FirstVNF_Mem * BR ) ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM / Max( DS,RMSe ) ) / MUM ) * ( MUR + ( ( ( ( Min( RCSe ,Min( RCSe ,CS ) ) - ( ( MLU * RMSe ) / MUR ) ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8640167364016736, "obj2": 0.05152784453698841}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( FirstVNF_CPU + Max( FirstVNF_RAM,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ( ( AMS * AMS ) * ( RRS / Max( MDR,AMS ) ) ) * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( RCSe * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( MUR,( RCSe / ( MLU / MUR ) ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.058234744569385766}, {"determining": "( ( Max( DDR,FirstVNF_RAM ) - ( MDR - FirstVNF_Mem ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( Min( CRS ,( ( AMS * AMS ) / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),CRS ) ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( MUR / ( ( Max( ( DS * MUC ),RRSe ) - Max( DS,MUR ) ) / ( Max( DS,MLU ) / Max( ( RCSe * MUC ),( RMSe + MLU ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.056994543561588916}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,CRS ) / MDR ) / CRS ) - DDR ) * ( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + ACS ) ) - Min( ( ACS * ( PN - RRS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Max( Min( RMSe ,MUM ),MUM ) ) ) ) ) ) * ( ( Min( MLU ,MUC ) + ( CS * MUC ) ) / Max( Min( MUM ,MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.06008764660866809}, {"determining": "( ( ARS * DDR ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( ARS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.040478491347406276}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Max( ( ARS / MRS ),DDR ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( Max( MUM,( Max( RRSe,RMSe ) + MUM ) ) + MUR ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8514644351464435, "obj2": 0.057177193186285453}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( MUC - Max( Min( ( RRSe / MUR ) ,RRSe ),DS ) ) * ( ( ( MUM * Max( RCSe,RRSe ) ) * MUC ) - ( RMSe + MUC ) ) ) - RRSe ) * ( ( ( MLU / RRSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9539748953974896, "obj2": 0.015428724287415206}, {"determining": "( ( FirstVNF_CPU - PN ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( CRS,BR ) ) * Min( ( FirstVNF_Mem * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RCSe / DS ) / RRSe ) ) ) ) ) ) * ( Max( ( MLU / MUC ),( CS * MUC ) ) / Max( ( MUM + Max( CS,( Min( MUM ,( MUC + MUC ) ) - ( RMSe / RRSe ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.07075922075752833}, {"determining": "( Max( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( Min( ( RRS + ARS ) ,FirstVNF_RAM ) + ARS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe * ( MLU / ( ( MLU - RRSe ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.02819236408560707}, {"determining": "( ( ( ARS - Min( Const ,( ( Max( Min( ARS ,MRS ),DDR ) * AMS ) * ( ARS + ( ( PN / CRS ) / FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( RRSe - Min( MUC ,( CS - RRSe ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUC / ( ( ( ( RCSe / MLU ) * RMSe ) * RCSe ) * ( ( Max( MLU,RRSe ) + ( RRSe - MUC ) ) - ( MUR + MUM ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07141561894457803}, {"determining": "( ( DDR - ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( ( MRS - ARS ),Const ) + ARS ) ) ) ) ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,( DDR + RRS ) ) ) ) ,( ( Max( ( PN / BR ),FirstVNF_Mem_Server ) - PN ) + Const ) ),( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / ( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MUM ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) - ( MLU / RMSe ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.05227908683176889}, {"determining": "( ( ( ARS - Min( Const ,Max( ( AMS * AMS ),( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,( AMS * AMS ) ) - Min( ( ACS * ( ( ACS / FirstVNF_Mem ) - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( DS + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( ( MLU / MUC ) + ( ( Max( ( ( MLU * RRSe ) - ( CS - MUM ) ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8828451882845189, "obj2": 0.045213902229149616}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) ) - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.046013369280182945}, {"determining": "( ( ( ARS - Min( Const ,Min( ( ( Min( CRS ,FirstVNF_CPU_Server ) + ( Const / PN ) ) * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( AMS * AMS ) + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUM ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RRSe ) ,( DS + MLU ) ) + Max( ( Min( RRSe ,( CS / RRSe ) ) + MUM ),( RCSe / CS ) ) ) ) ) )", "obj1": 0.8870292887029289, "obj2": 0.04425459158390734}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * Min( ( DDR * ( FirstVNF_CPU - FirstVNF_CPU ) ) ,Const ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * ( ACS + ( FirstVNF_CPU * ( ACS / MDR ) ) ) ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "( ( ( ( Min( ( MUR + ( ( MLU * MUM ) / RRSe ) ) ,RMSe ) * Max( DS,RCSe ) ) + RCSe ) / ( MUM * RCSe ) ) / ( MUM + ( Max( DS,MUC ) * RMSe ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010426881298674034}, {"determining": "( ( ( ARS - ( ( FirstVNF_Mem + PN ) + RRS ) ) - DDR ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),Min( ( ( Max( ( ( RCSe * RRSe ) / RMSe ),Min( MUC ,MUR ) ) + MUM ) + MLU ) ,( MLU * MLU ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002278226602246279}, {"determining": "( Min( ( BR + ( ACS - FirstVNF_Mem_Server ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( MUC - Max( Min( ( RRSe / MUR ) ,RRSe ),DS ) ) * ( ( ( MUM * Max( RCSe,( MUM + MUC ) ) ) * MUC ) - ( RMSe + MUC ) ) ) - RRSe ) * ( ( ( MLU / RRSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00895756443492801}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( FirstVNF_CPU - Const ) ) ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.006706781592803547}, {"determining": "( ( ( FirstVNF_Mem + PN ) + RRS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM + MUC ) - Min( RCSe ,RMSe ) ) - ( Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( ( MUC + MUM ) - RRSe ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8765690376569037, "obj2": 0.04727731987559975}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( BR - RRS ) ) ) ) - ( PN / BR ) ) + MRS ) )", "choosing": "( ( ( Max( RCSe,MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( ( MUR / MUR ) * Min( ( ( RRSe / MUR ) * MUC ) ,MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9707112970711297, "obj2": 0.009165238076926416}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( FirstVNF_Mem ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( MUC / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.891213389121339, "obj2": 0.04184791354211783}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.010980552250898334}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( ( FirstVNF_RAM * FirstVNF_Mem ) - Max( ( RRS - DDR ),( FirstVNF_Mem / AMS ) ) ) ) ) ) - DDR ) * ( Min( Min( Max( MDR,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Const ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) * Max( MLU,MLU ) ) * RCSe ) * MLU ) ) - ( MUC / MLU ) ) ) * Min( DS ,( ( Min( Max( CS,MLU ) ,( DS + MLU ) ) + RRSe ) + MLU ) ) )", "obj1": 0.8891213389121339, "obj2": 0.04325563979704806}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( BR - PN ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,DDR ) ) ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / RRSe ) ,( CS * MUR ) ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.9602510460251046, "obj2": 0.012898195531609003}, {"determining": "( Max( ( Min( Min( CRS ,( ( ARS - ACS ) + RRS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ),MRS ) - ( ( BR - ACS ) + Min( ( FirstVNF_Mem * CRS ) ,CRS ) ) )", "choosing": "( ( ( ( MLU * ( ( ( ( MUM + MLU ) / RMSe ) + RRSe ) / Max( RCSe,MUR ) ) ) * ( ( ( MUM * Max( RRSe,RCSe ) ) * MUC ) - ( RMSe + MUC ) ) ) * RRSe ) * ( ( ( RRSe / RMSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( ( DS + Min( MUR ,( MLU - RMSe ) ) ) / Min( MLU ,( MLU + MUR ) ) ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01483061349282627}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( Min( ( ACS * Max( ( RRS * FirstVNF_Mem ),ACS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_CPU / FirstVNF_Mem ) ) - Max( ARS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUR,RRSe ) - Min( RMSe ,MUR ) ) / ( MLU * CS ) ) / Max( ( Min( MLU ,( Min( ( MUR + MUM ) ,MLU ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) )", "obj1": 0.9874476987447699, "obj2": 0.003766526982141878}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RMSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05210688617347154}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ACS ,FirstVNF_CPU_Server ) - Min( RRS ,DDR ) ) * ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( Const - FirstVNF_CPU ) ) - ( Min( ACS ,( RRS + MDR ) ) + ( CRS + DDR ) ) ) ) )", "choosing": "( Min( ( DS - ( DS - RRSe ) ) ,Max( MLU,( ( MUR + MLU ) + ( ( CS / ( ( DS * CS ) + MUC ) ) / ( CS - RCSe ) ) ) ) ) * ( ( MUC - ( RMSe + CS ) ) + CS ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUC * RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,( Min( Min( RMSe ,DS ) ,DS ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ( CRS / FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Min( ( ACS * ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( FirstVNF_CPU - Const ) ) ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( MUC / MUR ) ) ) ) ) ) ) * ( Max( ( RRSe + MUM ),( RCSe / CS ) ) / ( ( MLU / MUC ) + ( CS * MUC ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.007383878674707006}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( ( Const * Max( RRS,AMS ) ) - PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( RCSe * ( RCSe + MUM ) ) * RMSe ) ) ) ,Max( ( CS * DS ),( Max( RRSe,CS ) - MUR ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011676256065021002}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Min( Max( RMSe,RCSe ) ,CS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Const ) ) - ( ( ( ( CRS / ARS ) + ( FirstVNF_CPU / DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( RMSe / ( MUC * ( ( ( RMSe * RRSe ) / MLU ) - ( Max( CS,DS ) + DS ) ) ) ),( Min( DS ,( MUR * ( ( DS * CS ) + Min( MUC ,RMSe ) ) ) ) + Max( Max( RRSe,MUC ),Max( MUC,MLU ) ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( ( RRS + FirstVNF_RAM_Server ) * RRS ) )", "choosing": "( ( CS + RCSe ) * ( Min( Max( DS,DS ) ,MUM ) + ( RRSe * RRSe ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011676256065021002}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( FirstVNF_CPU - Const ) ) ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.007383878674707006}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( FirstVNF_RAM - ACS ) - Max( ( ( MDR * ACS ) / ( Const * Max( FirstVNF_CPU_Server,RRS ) ) ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Max( ( MLU * MUR ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( RMSe + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,RMSe ) ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( MRS + FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,DDR ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server - MRS ) ,DDR ) * ( ( ( Const * FirstVNF_RAM ) - ( FirstVNF_Mem * ARS ) ) + AMS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Max( MLU,MUM ) ) - ( Max( MUR,( ( MLU / MLU ) / Min( ( Max( MLU,MLU ) * CS ) ,( DS - ( DS - RRSe ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) * ( CS * MUC ) ) / Max( ( MUM + RRSe ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS - Min( Min( ( ( AMS * AMS ) * ACS ) ,Const ) ,( ( DDR * DDR ) / ( ( FirstVNF_CPU_Server * PN ) - PN ) ) ) ) - DDR ) * ( DDR * Min( AMS ,BR ) ) ) - Min( ( MDR * RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( RRSe,MUM ) * ( MUC / ( ( MUR + CS ) / Max( RMSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( RMSe + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RCSe ) ,( DS + MLU ) ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Const ) - Max( ( FirstVNF_Mem * ( PN / BR ) ),MDR ) )", "choosing": "( ( MUM / ( MUM / Max( RMSe,CS ) ) ) * Min( MUR ,( RMSe + ( RMSe * ( ( RRSe + Min( RRSe ,MUC ) ) * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem ) - Max( ( FirstVNF_RAM_Server + CRS ),Const ) )", "choosing": "( ( Min( MUM ,CS ) + Min( MLU ,CS ) ) * ( ( RRSe + RCSe ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - DDR ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * Max( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ),Max( ARS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Min( MLU ,( Min( DS ,Min( ( CS * RCSe ) ,Max( MLU,MUM ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) / ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Max( DDR,ACS ) ) ) - ( ( Const - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( MUM / ( MUM / ( ( MUC / RMSe ) / CS ) ) ) * Min( MUR ,( ( ( ( RRSe * ( RMSe * MUC ) ) / MUR ) / ( MUR * MUM ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( ( ( Const * DDR ) / ( MDR + ACS ) ) / ( MRS / FirstVNF_CPU ) ) )", "choosing": "( ( RCSe / MUM ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS - Min( Min( ( ( AMS * AMS ) * ACS ) ,Const ) ,( ( DDR * DDR ) / ( ( FirstVNF_CPU_Server * PN ) - PN ) ) ) ) - DDR ) * ( DDR * Min( AMS ,BR ) ) ) - Min( ( MDR * RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( RRSe,MUM ) * ( MUC / ( ( MUR + CS ) / Max( RMSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) - MRS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( ( Min( DS ,( MUM + MUC ) ) * ( MUC / MUR ) ) + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ),( Max( FirstVNF_CPU,( ( FirstVNF_Mem * ( RRS / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( PN + ARS ) ) ) + ( ( BR * FirstVNF_RAM ) - Min( BR ,PN ) ) ) ) / ( CRS + ( ( FirstVNF_Mem - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe * Min( RRSe ,( ( MUC + DS ) + RRSe ) ) ) - ( ( ( RMSe + ( RCSe - Min( Min( RRSe ,MUR ) ,RRSe ) ) ) + RMSe ) * Min( RRSe ,MUC ) ) ) + ( RCSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( MRS ,RRS ),FirstVNF_Mem ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( RCSe ,RCSe ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( CS * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + Const ),( ( BR * AMS ) - Min( ( FirstVNF_CPU * DDR ) ,AMS ) ) ) / ( ( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( DDR * CRS ) / FirstVNF_RAM_Server ) ) + DDR ) * ( Const * FirstVNF_CPU_Server ) ) + ( ( Const * ARS ) - Max( MDR,ARS ) ) ) )", "choosing": "( ( ( ( MUM + MUC ) - Min( RCSe ,RMSe ) ) - ( Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( ( MUC + MUM ) - RRSe ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - Min( Const ,FirstVNF_CPU ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),Min( ( ( Max( ( ( RCSe * RRSe ) / RMSe ),Min( MUC ,MUR ) ) + ( MLU / ( ( RMSe / DS ) / DS ) ) ) + MLU ) ,( MLU * MLU ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "29": [{"determining": "( ( FirstVNF_RAM - ( AMS * ( CRS / ( Min( FirstVNF_Mem_Server ,Max( ACS,ARS ) ) / FirstVNF_CPU_Server ) ) ) ) - Max( ( ( Const * DDR ) / ( MDR * ACS ) ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * ( Max( MLU,DS ) / ( Max( Min( ( ( MUM * RMSe ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ),Max( Max( ( MUM * MUR ),RMSe ),MUR ) ) * MUM ) ) ) / Max( ( MUC + RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( Max( AMS,DDR ) + AMS ) ) ) )", "choosing": "( Max( Max( MUR,MLU ),Max( DS,Max( RMSe,Min( MUM ,MUM ) ) ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( Max( FirstVNF_Mem_Server,( ( Const / ( FirstVNF_CPU - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Const ) ) - RRS ) ) * Min( ( MDR * ACS ) ,( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MUR,( CS / MUC ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( ( ( ( ( ( Max( RRSe,RRSe ) * ( MLU / MUR ) ) / ( ( CS * RRSe ) - Max( RRSe,RCSe ) ) ) - Max( CS,( Min( RCSe ,MUC ) + ( MLU * MUC ) ) ) ) - DS ) - ( MUR + MUM ) ) - ( ( MLU / MUR ) + Min( RRSe ,CS ) ) ) )", "obj1": 0.5564853556485355, "obj2": 0.3139967929980099}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( AMS * BR ),Max( ( FirstVNF_Mem_Server * MDR ),MDR ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2478712274067805}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( AMS * BR ),Max( ( FirstVNF_Mem_Server * MDR ),MDR ) ) ) + ( ( BR * AMS ) - Min( DDR ,( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * ( Max( MLU,DS ) / ( Max( Min( ( ( RRSe / MUC ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ),Max( Max( ( DS * MUR ),RMSe ),MUR ) ) * MUM ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.17586362399476366}, {"determining": "( Min( ( FirstVNF_CPU * MDR ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + ACS ) ) ) * Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( MUR,( RCSe / ( ( DS + MUC ) / ( ( RRSe / DS ) / ( DS - DS ) ) ) ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,CS ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.30767215481461996}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( MDR + ARS ) ) ) )", "choosing": "( Max( ( MUR + MLU ),( RCSe * MUC ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28262373344132685}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( AMS * BR ),Max( ( FirstVNF_Mem_Server * MDR ),MDR ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * ( Max( MLU,DS ) / ( Max( Min( ( ( RRSe / MUC ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ),Max( Max( ( MUM * MUR ),RMSe ),MUR ) ) * MUM ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.22996825900760554}, {"determining": "( Max( ( PN * Const ),( MRS - ARS ) ) - ( AMS * ( ( Const + PN ) / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUC / MUR ) - RRSe ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / MUR ) ,MUC ) - MLU ) ) ) - ( RCSe + MLU ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.6715481171548117, "obj2": 0.15106754631933428}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( ACS ,Max( AMS,ARS ) ) / Min( Min( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + AMS ) ,( RRS / ( MRS + Const ) ) ) ,( AMS + FirstVNF_RAM ) ) ),Const ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RMSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( ( RMSe / ( RCSe * MUR ) ) / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( CS + ( ( MUR + ( MUC - ( RCSe * Max( MLU,RCSe ) ) ) ) * ( Max( ( ( RRSe / MLU ) + Min( MLU ,RMSe ) ),CS ) * RCSe ) ) ) ) )", "obj1": 0.6401673640167364, "obj2": 0.1954572829929765}, {"determining": "( Min( ( FirstVNF_CPU * MDR ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + ACS ) ) ) * Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUR,( RCSe / ( ( DS + MUC ) / ( ( RRSe / DS ) / ( DS - DS ) ) ) ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( MLU - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.2848010376470221}, {"determining": "( ( Min( ( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.698744769874477, "obj2": 0.12808283759603845}, {"determining": "( Min( Const ,( ( AMS * Const ) * FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( Max( ( MUM * MUR ),RMSe ) / CS ) ) ) )", "obj1": 0.7552301255230126, "obj2": 0.10413415661949606}, {"determining": "( ( ( ( ( FirstVNF_Mem + ( ACS / BR ) ) + FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - Min( ( ( AMS / AMS ) + ( Min( RRS ,( Min( FirstVNF_Mem_Server ,DDR ) - ( FirstVNF_CPU / DDR ) ) ) / ( ( Const * MDR ) / ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + ( RRS * MRS ) ) ) ) ) ,Min( Const ,FirstVNF_Mem ) ) ) * ( ( ARS - Min( FirstVNF_RAM ,CRS ) ) - ( BR - ARS ) ) )", "choosing": "Min( Min( ( Min( ( ( MUR * Min( Max( MUM,MUR ) ,MUC ) ) - MUR ) ,CS ) / MUC ) ,MUM ) ,( ( RCSe / MUC ) + RRSe ) )", "obj1": 0.6610878661087866, "obj2": 0.194468252171246}, {"determining": "( ( Min( ( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - ( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( ( ( MLU / MUC ) + ( CS * MUC ) ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( RCSe - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),Max( DS,Min( CS ,MUC ) ) ) )", "obj1": 0.7280334728033473, "obj2": 0.12067258050357334}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( ( FirstVNF_CPU_Server + Min( MDR ,Max( FirstVNF_CPU,Const ) ) ) * BR ),( Const + Max( DDR,BR ) ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Min( Max( ( MUM * ( Max( Min( DS ,( RRSe + RRSe ) ),RCSe ) - MUM ) ),MUC ) ,RMSe ) ,( Max( RCSe,RCSe ) + ( MUR - Max( ( CS - DS ),Max( MUR,( ( Max( RRSe,MUR ) * Max( MUR,DS ) ) * MUR ) ) ) ) ) )", "obj1": 0.6380753138075314, "obj2": 0.21939207112215908}, {"determining": "( Min( ( MDR * ( BR - Const ) ) ,Min( Max( ARS,ACS ) ,( FirstVNF_Mem - FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_CPU + FirstVNF_CPU ) * AMS ) / ( Max( ( PN / DDR ),Const ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) / ( RRSe - ( ( MUR / MUR ) * Min( ( RCSe / RRSe ) ,MUR ) ) ) ) * MUM ) - ( ( RCSe - ( MUR - MUR ) ) + RCSe ) ) + ( MLU / ( RRSe + RCSe ) ) )", "obj1": 0.6129707112970711, "obj2": 0.24459617419998908}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) + ( Min( Const ,( ( AMS * AMS ) * FirstVNF_RAM_Server ) ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7824267782426778, "obj2": 0.10101181853800154}, {"determining": "( Min( Const ,( ( AMS * Const ) * FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - MDR ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ),( Max( ( MUM * MUR ),RMSe ) / CS ) ) ) )", "obj1": 0.7426778242677824, "obj2": 0.11074693982858376}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( Const,( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( AMS / FirstVNF_Mem_Server ) / DDR ) ) ) ,( DDR + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( RRSe * RCSe ) ,MUC ) * ( MUR + ( ( ( ( Min( MUC ,MUC ) - RCSe ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8075313807531381, "obj2": 0.07559609615975409}, {"determining": "( ( Min( ( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / MLU ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( RCSe - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),Max( DS,Min( CS ,MUC ) ) ) )", "obj1": 0.694560669456067, "obj2": 0.136427375110537}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + ( FirstVNF_Mem_Server * ( DDR - ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RCSe * RRSe ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7949790794979079, "obj2": 0.08049644303988868}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + ( CRS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Min( PN ,AMS ) - ( ( ARS - Min( ARS ,MRS ) ) - DDR ) ) ) + MRS ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUC * RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,( ( MUM + Max( ( ( RCSe * RRSe ) / RMSe ),Min( MUC ,MUR ) ) ) * ( ( RCSe - RMSe ) / ( ( ( ( CS - MUM ) * DS ) / MUR ) + MUM ) ) ) )", "obj1": 0.7866108786610879, "obj2": 0.09224956818513332}, {"determining": "( ( ( ( ( ACS - AMS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( ( ACS * Const ) - ( CRS + DDR ) ) ) - ( CRS - RRS ) ) ) + MRS ) - ( ( FirstVNF_RAM * FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( Min( MUR ,RMSe ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MUR ) / RCSe ) ) ) ) * Min( ( ( DS - ( Min( MUC ,CS ) + MLU ) ) / RRSe ) ,RRSe ) )", "obj1": 0.9351464435146444, "obj2": 0.022210372528401336}, {"determining": "( ( Min( ( ( ( ( AMS / Max( FirstVNF_CPU_Server,RRS ) ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * Max( DDR,( ( FirstVNF_Mem - Min( MDR ,AMS ) ) - FirstVNF_Mem_Server ) ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( FirstVNF_CPU_Server / CRS ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "Min( ( CS * RMSe ) ,( Min( Min( RMSe ,DS ) ,DS ) * ( ( MUC - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.6861924686192469, "obj2": 0.14371937630463646}, {"determining": "( ( Min( ( ( DDR - ( ( Max( BR,AMS ) - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MRS,Max( ( ( PN - FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - MRS ) ),FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( Max( ( DS * ( DS / ( MUM / RMSe ) ) ),Max( ( RRSe + RCSe ),RRSe ) ) / ( CS + ( MUC / MUR ) ) )", "obj1": 0.6820083682008368, "obj2": 0.14662217331619598}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ( AMS + AMS ) ,( Const / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MLU * ( ( ( ( DS + MLU ) / RMSe ) + RRSe ) / Max( RCSe,MUR ) ) ) * ( ( ( MUM * Max( RRSe,RCSe ) ) * MUC ) - ( RMSe + MUC ) ) ) * RRSe ) * ( ( ( RRSe / RMSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / Min( MLU ,( MLU + MUR ) ) ) ) ) )", "obj1": 0.7928870292887029, "obj2": 0.08706719861576775}, {"determining": "( ( FirstVNF_RAM / ( ( Min( ( ( Min( FirstVNF_CPU ,ACS ) - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) + DDR ) ) * Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - Min( Max( MUC,RRSe ) ,( MUM - RRSe ) ) ) ) * MUM ) - Max( Max( RMSe,( CS * MUR ) ),MUR ) ) + ( MLU / ( ( CS - Max( ( Min( Min( CS ,RCSe ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9058577405857741, "obj2": 0.034581817291802895}, {"determining": "( DDR * ( FirstVNF_RAM / ( ( Min( ( ( ( AMS * Const ) - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - Max( Max( ( CS * MUR ),RMSe ),MUR ) ) + ( MLU / ( ( CS - Max( ( Min( Min( DS ,DS ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9142259414225942, "obj2": 0.030608491297719}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( Const ,( Min( Max( AMS,AMS ) ,AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( CRS - Const ) ) - ( ( ( ( CRS / ARS ) / ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + ( ( Max( BR,Const ) * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( MLU,MUM ) / Max( Max( ( CS - ( MUC - ( MUR / RMSe ) ) ),MUC ),( Max( ( RMSe - MUC ),RRSe ) / Min( MLU ,RRSe ) ) ) ) - ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / ( RMSe / CS ) ) )", "obj1": 0.9225941422594143, "obj2": 0.027448040642281093}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( ARS / ( PN - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR / PN ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - ( ( DDR / FirstVNF_CPU_Server ) - Const ) ) ) + MRS ) )", "choosing": "( ( ( ( ( Min( MUR ,( Min( RMSe ,MUC ) - Min( MLU ,MUC ) ) ) / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + CS ) ) + ( MLU / ( ( ( MUR - MUR ) - Max( ( Min( Min( RCSe ,DS ) ,RMSe ) + RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9456066945606695, "obj2": 0.016960403410094346}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS / Max( Min( FirstVNF_CPU ,Max( Min( PN ,( ARS / DDR ) ),ACS ) ),FirstVNF_CPU ) ) ) * ( ( ARS - Min( Const ,Min( ( FirstVNF_CPU_Server * AMS ) ,( Max( ( MRS - DDR ),Min( AMS ,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + CS ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( RRSe,CS ) ,( DS + RRSe ) ) + Max( Min( ( Min( RMSe ,MUR ) + CS ) ,Max( Max( CS,MLU ),RRSe ) ),CS ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03888409692450047}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( Const / ACS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( Min( RCSe ,MUC ) + ( MLU * MUC ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07355849139621061}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( Const,Const ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / Min( Max( CS,RRSe ) ,( DS + MLU ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06733937869573119}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RMSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8368200836820083, "obj2": 0.06310192050969243}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ),MRS ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( Max( MUR,MUC ) ,( CS + ( ( Max( MLU,MUM ) / MLU ) * RMSe ) ) ) - Min( MLU ,MUM ) ) - ( ( MLU + CS ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9393305439330544, "obj2": 0.020038673307247405}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.7405857740585774, "obj2": 0.11919506272667857}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( ( FirstVNF_CPU_Server + Min( MDR ,Max( FirstVNF_CPU,Const ) ) ) * BR ),( Const + Max( DDR,BR ) ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Min( Max( ( MUM * ( Max( Min( DS ,( RRSe + RRSe ) ),RCSe ) - MUM ) ),MUC ) ,RMSe ) ,( Max( RCSe,RCSe ) + ( MUR - Max( ( CS - DS ),Max( MUR,( ( Max( RRSe,MUR ) * Max( MUR,DS ) ) * MUR ) ) ) ) ) )", "obj1": 0.6380753138075314, "obj2": 0.21939207112215908}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( ( AMS + AMS ) + ( RRS / ( CRS / MRS ) ) ) + ( AMS + FirstVNF_RAM ) ) ),( FirstVNF_Mem * BR ) ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM / Max( DS,RMSe ) ) / MUM ) * ( MUR + ( ( ( ( Min( RCSe ,Min( RCSe ,CS ) ) - ( ( MLU * RMSe ) / MUR ) ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8640167364016736, "obj2": 0.05152784453698841}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( FirstVNF_CPU + Max( FirstVNF_RAM,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ( ( AMS * AMS ) * ( RRS / Max( MDR,AMS ) ) ) * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( RCSe * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( MUR,( RCSe / ( MLU / MUR ) ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.058234744569385766}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Max( ( ARS / MRS ),DDR ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( Max( MUM,( Max( RRSe,RMSe ) + MUM ) ) + MUR ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8514644351464435, "obj2": 0.057177193186285453}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( ( MUR / MUR ),( ( MLU / MLU ) / ( MLU / ( ( RMSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.05452838431897592}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,CRS ) / MDR ) / CRS ) - DDR ) * ( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + ACS ) ) - Min( ( ACS * ( PN - RRS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Max( Min( RMSe ,MUM ),MUM ) ) ) ) ) ) * ( ( Min( MLU ,MUC ) + ( CS * MUC ) ) / Max( Min( MUM ,MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.06008764660866809}, {"determining": "( ( ARS * DDR ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( ARS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.040478491347406276}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( MRS / CRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - ( ( MRS - BR ) + MDR ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - RRSe ) + DS ) * RMSe ) ,( Max( RCSe,MUM ) + ( MUR - Max( ( RMSe - DS ),Max( MUR,( MUC * MUR ) ) ) ) ) )", "obj1": 0.7384937238493724, "obj2": 0.12034635635616181}, {"determining": "( ( FirstVNF_CPU - PN ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( CRS,BR ) ) * Min( ( FirstVNF_Mem * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RCSe / DS ) / RRSe ) ) ) ) ) ) * ( Max( ( MLU / MUC ),( CS * MUC ) ) / Max( ( MUM + Max( CS,( Min( MUM ,( MUC + MUC ) ) - ( RMSe / RRSe ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.07075922075752833}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( MUC - Max( Min( ( RRSe / MUR ) ,RRSe ),DS ) ) * ( ( ( MUM * Max( RCSe,RRSe ) ) * MUC ) - ( RMSe + MUC ) ) ) - RRSe ) * ( ( ( MLU / RRSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9539748953974896, "obj2": 0.015428724287415206}, {"determining": "( Max( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( Min( ( RRS + ARS ) ,FirstVNF_RAM ) + ARS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe * ( MLU / ( ( MLU - RRSe ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.02819236408560707}, {"determining": "( ( ( ARS - Min( Const ,( ( Max( Min( ARS ,MRS ),DDR ) * AMS ) * ( ARS + ( ( PN / CRS ) / FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( RRSe - Min( MUC ,( CS - RRSe ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUC / ( ( ( ( RCSe / MLU ) * RMSe ) * RCSe ) * ( ( Max( MLU,RRSe ) + ( RRSe - MUC ) ) - ( MUR + MUM ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07141561894457803}, {"determining": "( ( ( ARS - Min( Const ,Max( ( AMS * AMS ),( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ,( AMS * AMS ) ) - Min( ( ACS * ( ( ACS / FirstVNF_Mem ) - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( DS + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( ( ( MLU / MUC ) + ( ( Max( ( ( MLU * RRSe ) - ( CS - MUM ) ),RMSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 0.8828451882845189, "obj2": 0.045213902229149616}, {"determining": "( ( DDR - ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( ( MRS - ARS ),Const ) + ARS ) ) ) ) ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,( DDR + RRS ) ) ) ) ,( ( Max( ( PN / BR ),FirstVNF_Mem_Server ) - PN ) + Const ) ),( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / ( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MUM ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) - ( MLU / RMSe ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.05227908683176889}, {"determining": "( ( ( ARS * Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( MRS - FirstVNF_RAM ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Max( RRS,MDR ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUC + MUC ) - Min( MLU ,MUM ) ) - ( ( CS - ( MLU / RRSe ) ) * Max( MUR,( MUM / ( ( Max( MUR,MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) ) ) )", "obj1": 0.8723849372384938, "obj2": 0.04766531634910393}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) ) - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.046013369280182945}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( DDR ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( MUC / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * RMSe )", "obj1": 0.8870292887029289, "obj2": 0.04348237974908368}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( MRS - ARS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( FirstVNF_Mem ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( MUM / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) ) ) )", "obj1": 0.8723849372384938, "obj2": 0.04766531634910393}, {"determining": "( ( ( ARS - FirstVNF_Mem ) - DDR ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),Min( ( ( Max( ( ( RCSe * RRSe ) / RMSe ),Min( MUC ,MUR ) ) + MUM ) + MLU ) ,( MLU * MLU ) ) ) / ( ( Max( MUR,RRSe ) - Max( RRSe,MUR ) ) / Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010144827415268618}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( ( ( BR - PN ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,DDR ) ) ) + FirstVNF_RAM ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUC ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9728033472803347, "obj2": 0.008228367793240847}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * Const ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.006324316815421155}, {"determining": "( ( ( FirstVNF_Mem + PN ) + RRS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM + MUC ) - Min( RCSe ,RMSe ) ) - ( Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( ( MUC + MUM ) - RRSe ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8765690376569037, "obj2": 0.04727731987559975}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.010980552250898334}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( FirstVNF_Mem ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( MUC / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.891213389121339, "obj2": 0.04184791354211783}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( BR - PN ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,DDR ) ) ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / RRSe ) ,( CS * MUR ) ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.9602510460251046, "obj2": 0.012898195531609003}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( BR - RRS ) ) ) ) - ( PN / BR ) ) + MRS ) )", "choosing": "( ( ( Max( RCSe,MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( ( MUR / MUR ) * Min( ( ( RRSe / MUR ) * MUC ) ,MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9707112970711297, "obj2": 0.009165238076926416}, {"determining": "( Max( ( Min( Min( CRS ,( ( ARS - ACS ) + RRS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ),MRS ) - ( ( BR - ACS ) + Min( ( FirstVNF_Mem * CRS ) ,CRS ) ) )", "choosing": "( ( ( ( MLU * ( ( ( ( MUM + MLU ) / RMSe ) + RRSe ) / Max( RCSe,MUR ) ) ) * ( ( ( MUM * Max( RRSe,RCSe ) ) * MUC ) - ( RMSe + MUC ) ) ) * RRSe ) * ( ( ( RRSe / RMSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( ( DS + Min( MUR ,( MLU - RMSe ) ) ) / Min( MLU ,( MLU + MUR ) ) ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01483061349282627}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( Min( ( ACS * Max( ( RRS * FirstVNF_Mem ),ACS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_CPU / FirstVNF_Mem ) ) - Max( ARS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUR,RRSe ) - Min( RMSe ,MUR ) ) / ( MLU * CS ) ) / Max( ( Min( MLU ,( Min( ( MUR + MUM ) ,MLU ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) )", "obj1": 0.9874476987447699, "obj2": 0.003766526982141878}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( ( FirstVNF_RAM * FirstVNF_Mem ) - Max( ( RRS - DDR ),( FirstVNF_Mem / AMS ) ) ) ) ) ) - DDR ) * ( Min( Min( Max( MDR,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Const ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) * Max( MLU,MLU ) ) * RCSe ) * MLU ) ) - ( MUC / MLU ) ) ) * Min( DS ,( ( Min( Max( CS,MLU ) ,( DS + MLU ) ) + RRSe ) + MLU ) ) )", "obj1": 0.8891213389121339, "obj2": 0.04325563979704806}, {"determining": "( ( BR / Const ) - Max( ( FirstVNF_Mem * ( Min( Min( Max( MDR,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Const ,( Const / FirstVNF_Mem ) ) ) ),MDR ) )", "choosing": "( ( MUM / ( MUM / Max( RMSe,CS ) ) ) * Min( MUR ,( ( RMSe * ( MUR * ( DS + MLU ) ) ) + RMSe ) ) )", "obj1": 0.9916317991631799, "obj2": 0.003144909367103697}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ( CRS / FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Min( ( ACS * ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( FirstVNF_CPU - Const ) ) ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( MUC / MUR ) ) ) ) ) ) ) * ( Max( ( RRSe + MUM ),( RCSe / CS ) ) / ( ( MLU / MUC ) + ( CS * MUC ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.007383878674707006}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RMSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05210688617347154}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ACS ,FirstVNF_CPU_Server ) - Min( RRS ,DDR ) ) * ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( Const - FirstVNF_CPU ) ) - ( Min( ACS ,( RRS + MDR ) ) + ( CRS + DDR ) ) ) ) )", "choosing": "( Min( ( DS - ( DS - RRSe ) ) ,Max( MLU,( ( MUR + MLU ) + ( ( CS / ( ( DS * CS ) + MUC ) ) / ( CS - RCSe ) ) ) ) ) * ( ( MUC - ( RMSe + CS ) ) + CS ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( ( Const * Max( RRS,AMS ) ) - PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( RCSe * ( RCSe + MUM ) ) * RMSe ) ) ) ,Max( ( CS * DS ),( Max( RRSe,CS ) - MUR ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( Max( MLU,MUM ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011676256065021002}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Const ) ) - ( ( ( ( CRS / ARS ) + ( FirstVNF_CPU / DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( RMSe / ( MUC * ( ( ( RMSe * RRSe ) / MLU ) - ( Max( CS,DS ) + DS ) ) ) ),( Min( DS ,( MUR * ( ( DS * CS ) + Min( MUC ,RMSe ) ) ) ) + Max( Max( RRSe,MUC ),Max( MUC,MLU ) ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( ARS - ( ( FirstVNF_Mem + PN ) + RRS ) ) - DDR ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),Min( ( ( Max( ( ( RCSe * RRSe ) / RMSe ),Min( MUC ,MUR ) ) + MUM ) + MLU ) ,( MLU * MLU ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002278226602246279}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( FirstVNF_CPU - Const ) ) ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.007383878674707006}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( ( ARS - ( ( FirstVNF_Mem + PN ) + RRS ) ) - DDR ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),Min( ( ( Max( ( ( RCSe * RRSe ) / RMSe ),Min( MUC ,MUR ) ) + MUM ) + MLU ) ,( MLU * MLU ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002278226602246279}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( ( RRS + FirstVNF_RAM_Server ) * RRS ) )", "choosing": "( ( CS + RCSe ) * ( Min( Max( DS,DS ) ,MUM ) + ( RRSe * RRSe ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011676256065021002}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Min( Max( RMSe,RCSe ) ,CS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUC * RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,( Min( Min( RMSe ,DS ) ,DS ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( AMS + AMS ) - ( ( ( Const * DDR ) / ( MDR + ACS ) ) / ( MRS / FirstVNF_CPU ) ) )", "choosing": "( ( DS + ( MLU * CS ) ) * Min( ( ( MLU / MUC ) + ( ( Max( Max( MUC,CS ),RCSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ACS ) - Max( ( ( MDR * ACS ) / ( Const * Max( FirstVNF_CPU_Server,RRS ) ) ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Max( ( MLU * MUR ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( RMSe + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,RMSe ) ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( MRS + FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,DDR ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server - MRS ) ,DDR ) * ( ( ( Const * FirstVNF_RAM ) - ( FirstVNF_Mem * ARS ) ) + AMS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Max( MLU,MUM ) ) - ( Max( MUR,( ( MLU / MLU ) / Min( ( Max( MLU,MLU ) * CS ) ,( DS - ( DS - RRSe ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) * ( CS * MUC ) ) / Max( ( MUM + RRSe ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS - Min( Min( ( ( AMS * AMS ) * ACS ) ,Const ) ,( ( DDR * DDR ) / ( ( FirstVNF_CPU_Server * PN ) - PN ) ) ) ) - DDR ) * ( DDR * Min( AMS ,BR ) ) ) - Min( ( MDR * RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( RRSe,MUM ) * ( MUC / ( ( MUR + CS ) / Max( RMSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( RMSe + MUR ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( CS,RCSe ) ,( DS + MLU ) ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Const ) - Max( ( FirstVNF_Mem * ( PN / BR ) ),MDR ) )", "choosing": "( ( MUM / ( MUM / Max( RMSe,CS ) ) ) * Min( MUR ,( RMSe + ( RMSe * ( ( RRSe + Min( RRSe ,MUC ) ) * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_Mem ) - Max( ( FirstVNF_RAM_Server + CRS ),Const ) )", "choosing": "( ( Min( MUM ,CS ) + Min( MLU ,CS ) ) * ( ( RRSe + RCSe ) * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - DDR ) + ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * Max( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ),Max( ARS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Min( MLU ,( Min( DS ,Min( ( CS * RCSe ) ,Max( MLU,MUM ) ) ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) / ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Max( DDR,ACS ) ) ) - ( ( Const - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( MUM / ( MUM / ( ( MUC / RMSe ) / CS ) ) ) * Min( MUR ,( ( ( ( RRSe * ( RMSe * MUC ) ) / MUR ) / ( MUR * MUM ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( ( ( Const * DDR ) / ( MDR + ACS ) ) / ( MRS / FirstVNF_CPU ) ) )", "choosing": "( ( RCSe / MUM ) * ( RMSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS - Min( Min( ( ( AMS * AMS ) * ACS ) ,Const ) ,( ( DDR * DDR ) / ( ( FirstVNF_CPU_Server * PN ) - PN ) ) ) ) - DDR ) * ( DDR * Min( AMS ,BR ) ) ) - Min( ( MDR * RRS ) ,FirstVNF_CPU ) )", "choosing": "( Max( RRSe,MUM ) * ( MUC / ( ( MUR + CS ) / Max( RMSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) - MRS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( ( Min( DS ,( MUM + MUC ) ) * ( MUC / MUR ) ) + CS ) ) + CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( MLU,( MUC - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const + ACS ) + ( FirstVNF_RAM + PN ) ),( Max( FirstVNF_CPU,( ( FirstVNF_Mem * ( RRS / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) / ( PN + ARS ) ) ) + ( ( BR * FirstVNF_RAM ) - Min( BR ,PN ) ) ) ) / ( CRS + ( ( FirstVNF_Mem - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe * Min( RRSe ,( ( MUC + DS ) + RRSe ) ) ) - ( ( ( RMSe + ( RCSe - Min( Min( RRSe ,MUR ) ,RRSe ) ) ) + RMSe ) * Min( RRSe ,MUC ) ) ) + ( RCSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}], "30": [{"determining": "( Min( ( MDR * ( BR - Const ) ) ,Min( Max( ARS,ACS ) ,( FirstVNF_Mem - FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_CPU + FirstVNF_CPU ) * AMS ) / ( Max( ( PN / DDR ),Const ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) / ( RRSe - ( ( MUR / MUR ) * Min( ( RCSe / RRSe ) ,MUR ) ) ) ) * MUM ) - ( ( RCSe - ( MUR - MUR ) ) + RCSe ) ) + ( MLU / ( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( AMS * ( CRS / ( Min( FirstVNF_Mem_Server ,Max( ACS,ARS ) ) / FirstVNF_CPU_Server ) ) ) ) - Max( ( ( Const * DDR ) / ( MDR * ACS ) ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * ( Max( MLU,DS ) / ( Max( Min( ( ( MUM * RMSe ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ),Max( Max( ( MUM * MUR ),RMSe ),MUR ) ) * MUM ) ) ) / Max( ( MUC + RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( Max( FirstVNF_Mem_Server,( ( Const / ( FirstVNF_CPU - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Const ) ) - RRS ) ) * Min( ( MDR * ACS ) ,( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MUR,( CS / MUC ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( ( ( ( ( ( Max( RRSe,RRSe ) * ( MLU / MUR ) ) / ( ( CS * RRSe ) - Max( RRSe,RCSe ) ) ) - Max( CS,( Min( RCSe ,MUC ) + ( MLU * MUC ) ) ) ) - DS ) - ( MUR + MUM ) ) - ( ( MLU / MUR ) + Min( RRSe ,CS ) ) ) )", "obj1": 0.5564853556485355, "obj2": 0.3139967929980099}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( ACS ,Max( AMS,ARS ) ) / Min( Min( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + AMS ) ,( RRS / ( MRS + Const ) ) ) ,( AMS + FirstVNF_RAM ) ) ),Const ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RMSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( ( RMSe / ( RCSe * MUR ) ) / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( CS + ( ( MUR + ( MUC - ( RCSe * Max( MLU,RCSe ) ) ) ) * ( Max( ( ( RRSe / MLU ) + Min( MLU ,RMSe ) ),CS ) * RCSe ) ) ) ) )", "obj1": 0.6401673640167364, "obj2": 0.1954572829929765}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( AMS * BR ),Max( ( FirstVNF_Mem_Server * MDR ),MDR ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2478712274067805}, {"determining": "( Min( Const ,( ( AMS * Const ) * FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( Max( ( MUM * MUR ),RMSe ) / CS ) ) ) )", "obj1": 0.7552301255230126, "obj2": 0.10413415661949606}, {"determining": "( Min( ( FirstVNF_CPU * MDR ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + ACS ) ) ) * Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( MUR,( RCSe / ( ( DS + MUC ) / ( ( RRSe / DS ) / ( DS - DS ) ) ) ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,CS ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.30767215481461996}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( MDR + ARS ) ) ) )", "choosing": "( Max( ( MUR + MLU ),( RCSe * MUC ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28262373344132685}, {"determining": "( Min( Const ,( ( AMS * Const ) * FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * BR ),( MRS - MDR ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ),( Max( MUM,RMSe ) / CS ) ) ) )", "obj1": 0.7824267782426778, "obj2": 0.08886557059878462}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( AMS * BR ),Max( ( FirstVNF_Mem_Server * MDR ),MDR ) ) ) + ( ( BR * AMS ) - Min( DDR ,( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * ( Max( MLU,DS ) / ( Max( Min( ( ( RRSe / MUC ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ),Max( Max( ( DS * MUR ),RMSe ),MUR ) ) * MUM ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.17586362399476366}, {"determining": "( Min( ( FirstVNF_CPU * MDR ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + ACS ) ) ) * Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUR,( RCSe / ( ( DS + MUC ) / ( ( RRSe / DS ) / ( DS - DS ) ) ) ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( MLU - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.2848010376470221}, {"determining": "( ( Min( ( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.698744769874477, "obj2": 0.12808283759603845}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( AMS * BR ),Max( ( FirstVNF_Mem_Server * MDR ),MDR ) ) ) + ( ( BR * AMS ) - Min( DDR ,( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * ( Max( MLU,DS ) / ( Max( Min( ( ( RRSe / MUC ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ),Max( Max( ( DS * MUR ),RMSe ),MUR ) ) * MUM ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.18273446477000002}, {"determining": "( ( Min( ( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - ( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( ( ( MLU / MUC ) + ( CS * MUC ) ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( RCSe - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),Max( DS,Min( CS ,MUC ) ) ) )", "obj1": 0.7280334728033473, "obj2": 0.12067258050357334}, {"determining": "( Max( ( PN * Const ),( MRS - ARS ) ) - ( AMS * ( ( Const + PN ) / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUC / MUR ) - RRSe ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / MUR ) ,MUC ) - MLU ) ) ) - ( RCSe + MLU ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.6715481171548117, "obj2": 0.15106754631933428}, {"determining": "( Min( ( MDR * ( BR - Const ) ) ,Min( Max( ARS,ACS ) ,( FirstVNF_Mem - FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_CPU + FirstVNF_CPU ) * AMS ) / ( Max( ( PN / DDR ),Const ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) / ( RRSe - ( ( MUR / MUR ) * Min( ( RCSe / RRSe ) ,MUR ) ) ) ) * MUM ) - ( ( RCSe - ( MUR - MUR ) ) + RCSe ) ) + ( MLU / ( RRSe + RCSe ) ) )", "obj1": 0.6129707112970711, "obj2": 0.24459617419998908}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( ( FirstVNF_CPU_Server + Min( MDR ,Max( FirstVNF_CPU,Const ) ) ) * BR ),( Const + Max( DDR,BR ) ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Min( Max( ( MUM * ( Max( Min( DS ,( RRSe + RRSe ) ),RCSe ) - MUM ) ),MUC ) ,RMSe ) ,( Max( RCSe,RCSe ) + ( MUR - Max( ( CS - DS ),Max( MUR,( ( Max( RRSe,MUR ) * Max( MUR,DS ) ) * MUR ) ) ) ) ) )", "obj1": 0.6380753138075314, "obj2": 0.21939207112215908}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( AMS * BR ),Max( ( FirstVNF_Mem_Server * MDR ),MDR ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * ( Max( MLU,DS ) / ( Max( Min( ( ( RRSe / MUC ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ),Max( Max( ( MUM * MUR ),RMSe ),MUR ) ) * MUM ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.22996825900760554}, {"determining": "( Min( Const ,( ( AMS * Const ) * FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - MDR ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ),( Max( ( MUM * MUR ),RMSe ) / CS ) ) ) )", "obj1": 0.7426778242677824, "obj2": 0.11074693982858376}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( Const,( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( AMS / FirstVNF_Mem_Server ) / DDR ) ) ) ,( DDR + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( RRSe * RCSe ) ,MUC ) * ( MUR + ( ( ( ( Min( MUC ,MUC ) - RCSe ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8075313807531381, "obj2": 0.07559609615975409}, {"determining": "( ( Min( ( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / MLU ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( RCSe - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),Max( DS,Min( CS ,MUC ) ) ) )", "obj1": 0.694560669456067, "obj2": 0.136427375110537}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( AMS * BR ),Max( ( FirstVNF_RAM_Server * MDR ),MDR ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * Max( ( MUR / MUR ),( ( MLU / MLU ) / ( MLU / ( ( RMSe / DS ) / DS ) ) ) ) ) )", "obj1": 0.6276150627615062, "obj2": 0.2251862220885626}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + ( FirstVNF_Mem_Server * ( DDR - ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RCSe * RRSe ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7949790794979079, "obj2": 0.08049644303988868}, {"determining": "( ( ( ( ( ACS - AMS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( ( ACS * Const ) - ( CRS + DDR ) ) ) - ( CRS - RRS ) ) ) + MRS ) - ( ( FirstVNF_RAM * FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( Min( MUR ,RMSe ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MUR ) / RCSe ) ) ) ) * Min( ( ( DS - ( Min( MUC ,CS ) + MLU ) ) / RRSe ) ,RRSe ) )", "obj1": 0.9351464435146444, "obj2": 0.022210372528401336}, {"determining": "( DDR * ( FirstVNF_RAM / ( ( Min( ( ( ( AMS * Const ) - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - Max( Max( ( CS * MUR ),RMSe ),MUR ) ) + ( MLU / ( ( CS - Max( ( Min( Min( DS ,DS ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9142259414225942, "obj2": 0.030608491297719}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ( AMS + AMS ) ,( Const / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MLU * ( ( ( ( DS + MLU ) / RMSe ) + RRSe ) / Max( RCSe,MUR ) ) ) * ( ( ( MUM * Max( RRSe,RCSe ) ) * MUC ) - ( RMSe + MUC ) ) ) * RRSe ) * ( ( ( RRSe / RMSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / Min( MLU ,( MLU + MUR ) ) ) ) ) )", "obj1": 0.7928870292887029, "obj2": 0.08706719861576775}, {"determining": "( ( FirstVNF_RAM / ( ( Min( ( ( Min( FirstVNF_CPU ,ACS ) - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) + DDR ) ) * Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - Min( Max( MUC,RRSe ) ,( MUM - RRSe ) ) ) ) * MUM ) - Max( Max( RMSe,( CS * MUR ) ),MUR ) ) + ( MLU / ( ( CS - Max( ( Min( Min( CS ,RCSe ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9058577405857741, "obj2": 0.034581817291802895}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( Const ,( Min( Max( AMS,AMS ) ,AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( CRS - Const ) ) - ( ( ( ( CRS / ARS ) / ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + ( ( Max( BR,Const ) * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( MLU,MUM ) / Max( Max( ( CS - ( MUC - ( MUR / RMSe ) ) ),MUC ),( Max( ( RMSe - MUC ),RRSe ) / Min( MLU ,RRSe ) ) ) ) - ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / ( RMSe / CS ) ) )", "obj1": 0.9225941422594143, "obj2": 0.027448040642281093}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS / Max( Min( FirstVNF_CPU ,Max( Min( PN ,( ARS / DDR ) ),ACS ) ),FirstVNF_CPU ) ) ) * ( ( ARS - Min( Const ,Min( ( FirstVNF_CPU_Server * AMS ) ,( Max( ( MRS - DDR ),Min( AMS ,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + CS ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( RRSe,CS ) ,( DS + RRSe ) ) + Max( Min( ( Min( RMSe ,MUR ) + CS ) ,Max( Max( CS,MLU ),RRSe ) ),CS ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03888409692450047}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( Const / ACS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( Min( RCSe ,MUC ) + ( MLU * MUC ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07355849139621061}, {"determining": "( ( Min( ( ( DDR - ( ( Max( BR,AMS ) - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MRS,Max( ( ( PN - FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - MRS ) ),FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( Max( ( DS * ( DS / ( MUM / RMSe ) ) ),Max( ( RRSe + RCSe ),RRSe ) ) / ( CS + ( MUC / MUR ) ) )", "obj1": 0.6820083682008368, "obj2": 0.14662217331619598}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( ARS / ( PN - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR / PN ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - ( ( DDR / FirstVNF_CPU_Server ) - Const ) ) ) + MRS ) )", "choosing": "( ( ( ( ( Min( MUR ,( Min( RMSe ,MUC ) - Min( MLU ,MUC ) ) ) / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + CS ) ) + ( MLU / ( ( ( MUR - MUR ) - Max( ( Min( Min( RCSe ,DS ) ,RMSe ) + RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9456066945606695, "obj2": 0.016960403410094346}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.7405857740585774, "obj2": 0.11919506272667857}, {"determining": "( ( Min( ( ( ( ( ( BR * AMS ) - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( RRSe - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.6778242677824268, "obj2": 0.1504940778436843}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( ( AMS + AMS ) + ( RRS / ( CRS / MRS ) ) ) + ( AMS + FirstVNF_RAM ) ) ),( FirstVNF_Mem * BR ) ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM / Max( DS,RMSe ) ) / MUM ) * ( MUR + ( ( ( ( Min( RCSe ,Min( RCSe ,CS ) ) - ( ( MLU * RMSe ) / MUR ) ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8640167364016736, "obj2": 0.05152784453698841}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Max( ( ARS / MRS ),DDR ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( Max( MUM,( Max( RRSe,RMSe ) + MUM ) ) + MUR ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8514644351464435, "obj2": 0.057177193186285453}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( ( MUR / MUR ),( ( MLU / MLU ) / ( MLU / ( ( RMSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.05452838431897592}, {"determining": "( ( ARS * DDR ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( ARS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.040478491347406276}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( MRS / CRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - ( ( MRS - BR ) + MDR ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - RRSe ) + DS ) * RMSe ) ,( Max( RCSe,MUM ) + ( MUR - Max( ( RMSe - DS ),Max( MUR,( MUC * MUR ) ) ) ) ) )", "obj1": 0.7384937238493724, "obj2": 0.12034635635616181}, {"determining": "( ( FirstVNF_CPU - PN ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( CRS,BR ) ) * Min( ( FirstVNF_Mem * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RCSe / DS ) / RRSe ) ) ) ) ) ) * ( Max( ( MLU / MUC ),( CS * MUC ) ) / Max( ( MUM + Max( CS,( Min( MUM ,( MUC + MUC ) ) - ( RMSe / RRSe ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.07075922075752833}, {"determining": "( ( Min( ( ( DDR - ( ( Max( BR,AMS ) - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MRS,Max( ( ( PN - FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - MRS ) ),FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( Max( ( DS * ( DS / ( MUM / RMSe ) ) ),Max( ( RRSe + RCSe ),RRSe ) ) / ( CS + ( MUC / MUR ) ) )", "obj1": 0.6861924686192469, "obj2": 0.1434361868119914}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RMSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8368200836820083, "obj2": 0.06310192050969243}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( MUC - Max( Min( ( RRSe / MUR ) ,RRSe ),DS ) ) * ( ( ( MUM * Max( RCSe,RRSe ) ) * MUC ) - ( RMSe + MUC ) ) ) - RRSe ) * ( ( ( MLU / RRSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9539748953974896, "obj2": 0.015428724287415206}, {"determining": "( ( Min( ( ( DDR - ( ( Max( BR,AMS ) - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MRS,Max( ( ( PN - FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - MRS ) ),FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( Max( ( DS * ( DS / ( MUM / RMSe ) ) ),Max( ( RRSe + RCSe ),RRSe ) ) / ( CS + ( MUC / MUR ) ) )", "obj1": 0.6861924686192469, "obj2": 0.1434361868119914}, {"determining": "( ( ( ARS - Min( Const ,( ( Max( Min( ARS ,MRS ),DDR ) * AMS ) * ( ARS + ( ( PN / CRS ) / FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( RRSe - Min( MUC ,( CS - RRSe ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUC / ( ( ( ( RCSe / MLU ) * RMSe ) * RCSe ) * ( ( Max( MLU,RRSe ) + ( RRSe - MUC ) ) - ( MUR + MUM ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07141561894457803}, {"determining": "( ( ( ARS - Min( Const ,( ( ( ( Const * DDR ) / ( MDR * ACS ) ) * AMS ) * ( FirstVNF_CPU + Max( FirstVNF_RAM,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ( ( AMS * AMS ) * ( RRS / Max( MDR,AMS ) ) ) * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( RCSe * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( MUR,( RCSe / ( ( RRSe - ( DS - MUR ) ) / MUR ) ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06556781119329433}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( MDR / MRS ),ACS ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( FirstVNF_Mem ,( Const / MDR ) ) ) )", "choosing": "( ( ( ( MUC + MUC ) - Min( MLU ,MUM ) ) - ( Min( RCSe ,MLU ) * Max( MUR,( MUM / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( DS + MUR ) * ( ( RCSe / ( ( ( MUC / DS ) / ( RCSe * MUR ) ) / MLU ) ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.8828451882845189, "obj2": 0.04416445917540917}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( Const,Const ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / Min( Max( CS,RRSe ) ,( DS + MLU ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06733937869573119}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( Min( ( FirstVNF_CPU_Server / BR ) ,( Const + PN ) ) - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.046013369280182945}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9414225941422594, "obj2": 0.019434572919754107}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( ( FirstVNF_CPU_Server + Min( MDR ,Max( FirstVNF_CPU,Const ) ) ) * BR ),( Const + Max( DDR,BR ) ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Min( Max( ( MUM * ( Max( Min( DS ,( RRSe + RRSe ) ),RCSe ) - MUM ) ),MUC ) ,RMSe ) ,( Max( RCSe,RCSe ) + ( MUR - Max( ( CS - DS ),Max( MUR,( ( Max( RRSe,MUR ) * Max( MUR,DS ) ) * MUR ) ) ) ) ) )", "obj1": 0.6380753138075314, "obj2": 0.21939207112215908}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ),MRS ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( Max( MUR,MUC ) ,( CS + ( ( Max( MLU,MUM ) / MLU ) * RMSe ) ) ) - Min( MLU ,MUM ) ) - ( ( MLU + CS ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9393305439330544, "obj2": 0.020038673307247405}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,CRS ) / MDR ) / CRS ) - DDR ) * ( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + ACS ) ) - Min( ( ACS * ( PN - RRS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Max( Min( RMSe ,MUM ),MUM ) ) ) ) ) ) * ( ( Min( MLU ,MUC ) + ( CS * MUC ) ) / Max( Min( MUM ,MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.06008764660866809}, {"determining": "( ( DDR - ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( ( MRS - ARS ),Const ) + ARS ) ) ) ) ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,( DDR + RRS ) ) ) ) ,( ( Max( ( PN / BR ),FirstVNF_Mem_Server ) - PN ) + Const ) ),( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / ( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MUM ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) - ( MLU / RMSe ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.05227908683176889}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( MRS - ARS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( FirstVNF_Mem ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( MUM / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) ) ) )", "obj1": 0.8723849372384938, "obj2": 0.04766531634910393}, {"determining": "( ( ( ARS * Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( MRS - FirstVNF_RAM ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Max( RRS,MDR ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUC + MUC ) - Min( MLU ,MUM ) ) - ( ( CS - ( MLU / RRSe ) ) * Max( MUR,( MUM / ( ( Max( MUR,MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) ) ) )", "obj1": 0.8723849372384938, "obj2": 0.04766531634910393}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + ( ( ( Const * DDR ) / ( MDR * ACS ) ) * ( DDR - ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RRSe * RRSe ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8410041841004184, "obj2": 0.05914750410691971}, {"determining": "( ( ( FirstVNF_Mem + PN ) + RRS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM + MUC ) - Min( RCSe ,RMSe ) ) - ( Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( ( MUC + MUM ) - RRSe ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8765690376569037, "obj2": 0.04727731987559975}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( FirstVNF_Mem ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( MUC / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.891213389121339, "obj2": 0.04184791354211783}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( FirstVNF_CPU + Max( FirstVNF_RAM,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ( ( AMS * AMS ) * ( RRS / Max( MDR,AMS ) ) ) * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( RCSe * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( MUR / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( MUR,( RCSe / ( MLU / MUR ) ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.058234744569385766}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( DDR ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( MUC / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * RMSe )", "obj1": 0.8870292887029289, "obj2": 0.04348237974908368}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( BR - PN ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,DDR ) ) ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / RRSe ) ,( CS * MUR ) ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.9602510460251046, "obj2": 0.012898195531609003}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( BR - RRS ) ) ) ) - ( PN / BR ) ) + MRS ) )", "choosing": "( ( ( Max( RCSe,MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( ( MUR / MUR ) * Min( ( ( RRSe / MUR ) * MUC ) ,MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9707112970711297, "obj2": 0.009165238076926416}, {"determining": "( Max( ( Min( Min( CRS ,( ( ARS - ACS ) + RRS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ),MRS ) - ( ( BR - ACS ) + Min( ( FirstVNF_Mem * CRS ) ,CRS ) ) )", "choosing": "( ( ( ( MLU * ( ( ( ( MUM + MLU ) / RMSe ) + RRSe ) / Max( RCSe,MUR ) ) ) * ( ( ( MUM * Max( RRSe,RCSe ) ) * MUC ) - ( RMSe + MUC ) ) ) * RRSe ) * ( ( ( RRSe / RMSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( ( DS + Min( MUR ,( MLU - RMSe ) ) ) / Min( MLU ,( MLU + MUR ) ) ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01483061349282627}, {"determining": "( ( ( ARS * Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( MRS - FirstVNF_RAM ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Max( RRS,MDR ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUC + MUC ) - Min( MLU ,MUM ) ) - ( ( CS - ( MLU / RRSe ) ) * Max( MUR,( MUM / ( ( Max( MUR,MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.027623326440271163}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( Min( ( ACS * Max( ( RRS * FirstVNF_Mem ),ACS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_CPU / FirstVNF_Mem ) ) - Max( ARS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUR,RRSe ) - Min( RMSe ,MUR ) ) / ( MLU * CS ) ) / Max( ( Min( MLU ,( Min( ( MUR + MUM ) ,MLU ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) )", "obj1": 0.9874476987447699, "obj2": 0.003766526982141878}, {"determining": "( ( ( ARS - Min( Const ,Min( ( AMS * AMS ) ,( ( FirstVNF_RAM * FirstVNF_Mem ) - Max( ( RRS - DDR ),( FirstVNF_Mem / AMS ) ) ) ) ) ) - DDR ) * ( Min( Min( Max( MDR,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Const ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + MUR ) * Max( MLU,MLU ) ) * RCSe ) * MLU ) ) - ( MUC / MLU ) ) ) * Min( DS ,( ( Min( Max( CS,MLU ) ,( DS + MLU ) ) + RRSe ) + MLU ) ) )", "obj1": 0.8891213389121339, "obj2": 0.04325563979704806}, {"determining": "( ( ( ARS * Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( MRS - FirstVNF_RAM ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Max( RRS,MDR ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUC + MUC ) - Min( MLU ,MUM ) ) - ( ( CS - ( MLU / RRSe ) ) * Max( MUR,( MUM / ( ( Max( MUR,MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.027623326440271163}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.010980552250898334}, {"determining": "( ( ( ARS - FirstVNF_Mem ) - DDR ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),Min( ( ( Max( ( ( RCSe * RRSe ) / RMSe ),Min( MUC ,MUR ) ) + MUM ) + MLU ) ,( MLU * MLU ) ) ) / ( ( Max( MUR,RRSe ) - Max( RRSe,MUR ) ) / Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010144827415268618}, {"determining": "( ( BR / Const ) - Max( ( FirstVNF_Mem * ( Min( Min( Max( MDR,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Const ,( Const / FirstVNF_Mem ) ) ) ),MDR ) )", "choosing": "( ( MUM / ( MUM / Max( RMSe,CS ) ) ) * Min( MUR ,( ( RMSe * ( MUR * ( DS + MLU ) ) ) + RMSe ) ) )", "obj1": 0.9916317991631799, "obj2": 0.003144909367103697}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ( CRS / FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Min( ( ACS * ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( FirstVNF_CPU - Const ) ) ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( MUC / MUR ) ) ) ) ) ) ) * ( Max( ( RRSe + MUM ),( RCSe / CS ) ) / ( ( MLU / MUC ) + ( CS * MUC ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.007383878674707006}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * Const ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.006324316815421155}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( FirstVNF_CPU + Max( FirstVNF_RAM,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ( ( AMS * AMS ) * ( RRS / Max( MDR,AMS ) ) ) * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( RCSe * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( MUR,( RCSe / ( MLU / MUR ) ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.058234744569385766}, {"determining": "( Max( ( ( BR * AMS ) - Min( DDR ,PN ) ),( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( ( ( BR - PN ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,DDR ) ) ) + FirstVNF_RAM ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / Min( ( ( RRSe / MUC ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUC ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9728033472803347, "obj2": 0.008228367793240847}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * ( ( Const - MDR ) / FirstVNF_CPU ) ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( MUC - Max( Min( ( RRSe / MUR ) ,RRSe ),DS ) ) * ( ( ( MUM * Max( RCSe,( MUR * MUM ) ) ) * MUC ) - ( RMSe + MUC ) ) ) - RRSe ) * ( ( ( MLU / RRSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.010412742093286064}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RMSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05210688617347154}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ACS ,FirstVNF_CPU_Server ) - Min( RRS ,DDR ) ) * ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( Const - FirstVNF_CPU ) ) - ( Min( ACS ,( RRS + MDR ) ) + ( CRS + DDR ) ) ) ) )", "choosing": "( Min( ( DS - ( DS - RRSe ) ) ,Max( MLU,( ( MUR + MLU ) + ( ( CS / ( ( DS * CS ) + MUC ) ) / ( CS - RCSe ) ) ) ) ) * ( ( MUC - ( RMSe + CS ) ) + CS ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( ( Const * Max( RRS,AMS ) ) - PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( RCSe * ( RCSe + MUM ) ) * RMSe ) ) ) ,Max( ( CS * DS ),( Max( RRSe,CS ) - MUR ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( PN,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MLU / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011676256065021002}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( ARS - ( ( FirstVNF_Mem + PN ) + RRS ) ) - DDR ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),Min( ( ( Max( ( ( RCSe * RRSe ) / RMSe ),Min( MUC ,MUR ) ) + MUM ) + MLU ) ,( MLU * MLU ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002278226602246279}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( FirstVNF_CPU - Const ) ) ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.007383878674707006}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( ( ( BR - PN ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,DDR ) ) ) + FirstVNF_RAM ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUC ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9728033472803347, "obj2": 0.008228367793240847}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Const ) ) - ( ( ( ( CRS / ARS ) + ( FirstVNF_CPU / DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( RMSe / ( MUC * ( ( ( RMSe * RRSe ) / MLU ) - ( Max( CS,DS ) + DS ) ) ) ),( Min( DS ,( MUR * ( ( DS * CS ) + Min( MUC ,RMSe ) ) ) ) + Max( Max( RRSe,MUC ),Max( MUC,MLU ) ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( ( ARS - ( ( FirstVNF_Mem + PN ) + RRS ) ) - DDR ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),Min( ( ( Max( ( ( RCSe * RRSe ) / RMSe ),Min( MUC ,MUR ) ) + MUM ) + MLU ) ,( MLU * MLU ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002278226602246279}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( ( RRS + FirstVNF_RAM_Server ) * RRS ) )", "choosing": "( ( CS + RCSe ) * ( Min( Max( DS,DS ) ,MUM ) + ( RRSe * RRSe ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( Max( MLU,MUM ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011676256065021002}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * Const ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.006324316815421155}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUC * RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,( Min( Min( RMSe ,DS ) ,DS ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Min( Max( RMSe,RCSe ) ,CS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( Max( AMS,DDR ) + AMS ) ) ) )", "choosing": "( Max( Max( MUR,MLU ),Max( DS,Max( RMSe,Min( MUM ,MUM ) ) ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + AMS ) - ( ( ( Const * DDR ) / ( MDR + ACS ) ) / ( MRS / FirstVNF_CPU ) ) )", "choosing": "( ( DS + ( MLU * CS ) ) * Min( ( ( MLU / MUC ) + ( ( Max( Max( MUC,CS ),RCSe ) - ( RCSe - RRSe ) ) + RRSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ACS ) - Max( ( ( MDR * ACS ) / ( Const * Max( FirstVNF_CPU_Server,RRS ) ) ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Max( ( MLU * MUR ),Min( MUC ,DS ) ) + MUM ) + MLU ) ,Max( ( RMSe + MUM ),Min( Min( Max( ( MLU / CS ),RCSe ) ,RMSe ) ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS - ARS ),( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( ( Max( ( MRS + FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) + Max( FirstVNF_CPU,DDR ) ) ) ) - ( FirstVNF_CPU + ( AMS - CRS ) ) )", "choosing": "( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "31": [{"determining": "( ( ( ( Min( Min( CRS ,( ( ARS - ACS ) + RRS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) + PN ) + RRS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM + MUC ) - Min( RCSe ,RMSe ) ) - ( Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( ( MUC + MUM ) - RRSe ) ) / ( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR * ( BR - Const ) ) ,Min( Max( ARS,ACS ) ,( FirstVNF_Mem - FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_CPU + FirstVNF_CPU ) * AMS ) / ( Max( ( PN / DDR ),Const ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) / ( RRSe - ( ( MUR / MUR ) * Min( ( RCSe / RRSe ) ,MUR ) ) ) ) * MUM ) - ( ( RCSe - ( MUR - MUR ) ) + RCSe ) ) + ( MLU / ( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( Max( FirstVNF_Mem_Server,( ( Const / ( FirstVNF_CPU - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) / Const ) ) - RRS ) ) * Min( ( MDR * ACS ) ,( FirstVNF_Mem - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MUR,( CS / MUC ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( ( ( ( ( ( Max( RRSe,RRSe ) * ( MLU / MUR ) ) / ( ( CS * RRSe ) - Max( RRSe,RCSe ) ) ) - Max( CS,( Min( RCSe ,MUC ) + ( MLU * MUC ) ) ) ) - DS ) - ( MUR + MUM ) ) - ( ( MLU / MUR ) + Min( RRSe ,CS ) ) ) )", "obj1": 0.5564853556485355, "obj2": 0.3139967929980099}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( AMS * BR ),Max( ( FirstVNF_Mem_Server * MDR ),MDR ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.5983263598326359, "obj2": 0.2478712274067805}, {"determining": "( Min( Const ,( ( AMS * Const ) * FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( Max( ( MUM * MUR ),RMSe ) / CS ) ) ) )", "obj1": 0.7552301255230126, "obj2": 0.10413415661949606}, {"determining": "( Min( ( FirstVNF_CPU * MDR ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + ACS ) ) ) * Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( MUR,( RCSe / ( ( DS + MUC ) / ( ( RRSe / DS ) / ( DS - DS ) ) ) ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( Max( ( DS / MUR ),Min( RRSe ,CS ) ) - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5732217573221757, "obj2": 0.30767215481461996}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_Mem / ( ( ACS / ( PN - DDR ) ) - RRS ) ) ) * ( FirstVNF_RAM * ( DDR * ( MDR + ARS ) ) ) )", "choosing": "( Max( ( MUR + MLU ),( RCSe * MUC ) ) / ( MLU * Min( RCSe ,MLU ) ) )", "obj1": 0.5941422594142259, "obj2": 0.28262373344132685}, {"determining": "( Min( Const ,( ( AMS * Const ) * FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * BR ),( MRS - MDR ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ),( Max( MUM,RMSe ) / CS ) ) ) )", "obj1": 0.7824267782426778, "obj2": 0.08886557059878462}, {"determining": "( Min( ( FirstVNF_CPU * MDR ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + ACS ) ) ) * Min( ( AMS * AMS ) ,( Max( ( MRS - DDR ),( AMS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUR,( RCSe / ( ( DS + MUC ) / ( ( RRSe / DS ) / ( DS - DS ) ) ) ) ) * ( ( MUR + RMSe ) * ( RCSe - DS ) ) ) + ( MLU - ( ( Max( MLU,RRSe ) + DS ) - ( MUR + MUM ) ) ) )", "obj1": 0.5857740585774058, "obj2": 0.2848010376470221}, {"determining": "( ( Min( ( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.698744769874477, "obj2": 0.12808283759603845}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( ACS ,Max( AMS,ARS ) ) / Min( Min( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + AMS ) ,( RRS / ( MRS + Const ) ) ) ,( AMS + FirstVNF_RAM ) ) ),Const ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RMSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( ( RMSe / ( RCSe * MUR ) ) / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( CS + ( ( MUR + ( MUC - ( RCSe * Max( MLU,RCSe ) ) ) ) * ( Max( ( ( RRSe / MLU ) + Min( MLU ,RMSe ) ),CS ) * RCSe ) ) ) ) )", "obj1": 0.6401673640167364, "obj2": 0.1954572829929765}, {"determining": "( ( Min( ( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - ( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( ( ( MLU / MUC ) + ( CS * MUC ) ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( RCSe - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),Max( DS,Min( CS ,MUC ) ) ) )", "obj1": 0.7280334728033473, "obj2": 0.12067258050357334}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( AMS * BR ),Max( ( FirstVNF_RAM_Server * MDR ),MDR ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * Max( ( MUR / MUR ),( ( MLU / MLU ) / ( MLU / ( ( RMSe / DS ) / DS ) ) ) ) ) )", "obj1": 0.6129707112970711, "obj2": 0.24032936111243947}, {"determining": "( Max( ( PN * Const ),( MRS - ARS ) ) - ( AMS * ( ( Const + PN ) / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUC / MUR ) - RRSe ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / MUR ) ,MUC ) - MLU ) ) ) - ( RCSe + MLU ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.6715481171548117, "obj2": 0.15106754631933428}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( AMS * BR ),Max( ( FirstVNF_Mem_Server * MDR ),MDR ) ) ) + ( ( BR * AMS ) - Min( DDR ,( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * ( Max( MLU,DS ) / ( Max( Min( ( ( RRSe / MUC ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ),Max( Max( ( DS * MUR ),RMSe ),MUR ) ) * MUM ) ) ) )", "obj1": 0.6673640167364017, "obj2": 0.17580835772943162}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( AMS * BR ),Max( ( FirstVNF_Mem_Server * MDR ),MDR ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RMSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( ( RMSe / ( RCSe * MUR ) ) / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( CS + ( ( MUR + ( MUC - ( RCSe * Max( MLU,RCSe ) ) ) ) * ( Max( ( ( RRSe / MLU ) + Min( MLU ,RMSe ) ),CS ) * RCSe ) ) ) ) )", "obj1": 0.6380753138075314, "obj2": 0.2176955411371066}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( AMS * BR ),Max( ( FirstVNF_Mem_Server * MDR ),MDR ) ) ) + ( ( BR * AMS ) - Min( DDR ,PN ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * ( Max( MLU,DS ) / ( Max( Min( ( ( RRSe / MUC ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ),Max( Max( ( MUM * MUR ),RMSe ),MUR ) ) * MUM ) ) ) )", "obj1": 0.6213389121338913, "obj2": 0.22996825900760554}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ( Const / FirstVNF_Mem ) ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( ( AMS + AMS ) + ( RRS / ( CRS / MRS ) ) ) + ( AMS + FirstVNF_RAM ) ) ),( FirstVNF_Mem * BR ) ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM / Max( DS,RMSe ) ) / ( ( MLU / MUC ) + ( CS * MUC ) ) ) * ( MUR + ( ( ( ( Min( RCSe ,Min( RCSe ,CS ) ) - ( ( MLU * RMSe ) / MUR ) ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.6464435146443515, "obj2": 0.18645308159369875}, {"determining": "( Min( Const ,( ( AMS * Const ) * FirstVNF_RAM_Server ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - MDR ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ),( Max( ( MUM * MUR ),RMSe ) / CS ) ) ) )", "obj1": 0.7426778242677824, "obj2": 0.11074693982858376}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( Const,( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( AMS / FirstVNF_Mem_Server ) / DDR ) ) ) ,( DDR + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( RRSe * RCSe ) ,MUC ) * ( MUR + ( ( ( ( Min( MUC ,MUC ) - RCSe ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8075313807531381, "obj2": 0.07559609615975409}, {"determining": "( ( Min( ( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / MLU ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( RCSe - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),Max( DS,Min( CS ,MUC ) ) ) )", "obj1": 0.694560669456067, "obj2": 0.136427375110537}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( AMS * BR ),Max( ( FirstVNF_Mem_Server * MDR ),MDR ) ) ) + ( ( BR * AMS ) - Min( DDR ,( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * ( Max( MLU,DS ) / ( Max( Min( ( ( RRSe / MUC ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ),Max( Max( ( DS * MUR ),RMSe ),MUR ) ) * MUM ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.18273446477000002}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + ( FirstVNF_Mem_Server * ( DDR - ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RCSe * RRSe ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.7949790794979079, "obj2": 0.08049644303988868}, {"determining": "( ( ( ( ( ACS - AMS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( ( ACS * Const ) - ( CRS + DDR ) ) ) - ( CRS - RRS ) ) ) + MRS ) - ( ( FirstVNF_RAM * FirstVNF_CPU ) + FirstVNF_RAM ) )", "choosing": "( ( Min( MUR ,RMSe ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MUR ) / RCSe ) ) ) ) * Min( ( ( DS - ( Min( MUC ,CS ) + MLU ) ) / RRSe ) ,RRSe ) )", "obj1": 0.9351464435146444, "obj2": 0.022210372528401336}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( AMS * BR ),Max( ( FirstVNF_Mem_Server * MDR ),MDR ) ) ) + ( ( BR * AMS ) - Min( DDR ,( ( ( AMS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * RCSe ) )", "obj1": 0.6276150627615062, "obj2": 0.22166162652557653}, {"determining": "( DDR * ( FirstVNF_RAM / ( ( Min( ( ( ( AMS * Const ) - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) * DDR ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - Max( Max( ( CS * MUR ),RMSe ),MUR ) ) + ( MLU / ( ( CS - Max( ( Min( Min( DS ,DS ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9142259414225942, "obj2": 0.030608491297719}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( Min( ( AMS + AMS ) ,( Const / Const ) ) + ( AMS + FirstVNF_RAM ) ) ),Const ) ,( CRS + Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MLU * ( ( ( ( DS + MLU ) / RMSe ) + RRSe ) / Max( RCSe,MUR ) ) ) * ( ( ( MUM * Max( RRSe,RCSe ) ) * MUC ) - ( RMSe + MUC ) ) ) * RRSe ) * ( ( ( RRSe / RMSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / Min( MLU ,( MLU + MUR ) ) ) ) ) )", "obj1": 0.7928870292887029, "obj2": 0.08706719861576775}, {"determining": "( ( FirstVNF_RAM / ( ( Min( ( ( Min( FirstVNF_CPU ,ACS ) - DDR ) - FirstVNF_Mem_Server ) ,AMS ) + AMS ) + DDR ) ) * Min( ( MDR * Max( BR,Const ) ) ,Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) )", "choosing": "( ( ( ( ( DS / MUM ) - ( RRSe - Min( Max( MUC,RRSe ) ,( MUM - RRSe ) ) ) ) * MUM ) - Max( Max( RMSe,( CS * MUR ) ),MUR ) ) + ( MLU / ( ( CS - Max( ( Min( Min( CS ,RCSe ) ,RMSe ) / RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9058577405857741, "obj2": 0.034581817291802895}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( Const ,( Min( Max( AMS,AMS ) ,AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ),( CRS - Const ) ) - ( ( ( ( CRS / ARS ) / ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + ( ( Max( BR,Const ) * MDR ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( MLU,MUM ) / Max( Max( ( CS - ( MUC - ( MUR / RMSe ) ) ),MUC ),( Max( ( RMSe - MUC ),RRSe ) / Min( MLU ,RRSe ) ) ) ) - ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) ) * ( ( ( MUC / MLU ) + ( CS * MUC ) ) / ( RMSe / CS ) ) )", "obj1": 0.9225941422594143, "obj2": 0.027448040642281093}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS / Max( Min( FirstVNF_CPU ,Max( Min( PN ,( ARS / DDR ) ),ACS ) ),FirstVNF_CPU ) ) ) * ( ( ARS - Min( Const ,Min( ( FirstVNF_CPU_Server * AMS ) ,( Max( ( MRS - DDR ),Min( AMS ,FirstVNF_Mem ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) - DDR ) )", "choosing": "( ( RRSe - ( ( MUC / ( ( ( ( MUR + CS ) / RMSe ) * RCSe ) * MLU ) ) - MLU ) ) * Min( DS ,( MLU + ( Min( Max( RRSe,CS ) ,( DS + RRSe ) ) + Max( Min( ( Min( RMSe ,MUR ) + CS ) ,Max( Max( CS,MLU ),RRSe ) ),CS ) ) ) ) )", "obj1": 0.9016736401673641, "obj2": 0.03888409692450047}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( Const / ACS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( Min( RCSe ,MUC ) + ( MLU * MUC ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.07355849139621061}, {"determining": "( ( Min( ( ( DDR - ( ( Max( BR,AMS ) - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MRS,Max( ( ( PN - FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - MRS ) ),FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( Max( ( DS * ( DS / ( MUM / RMSe ) ) ),Max( ( RRSe + RCSe ),RRSe ) ) / ( CS + ( MUC / MUR ) ) )", "obj1": 0.6820083682008368, "obj2": 0.14662217331619598}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - ( ARS / ( PN - FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( CRS / ARS ) + ( DDR / PN ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - ( ( DDR / FirstVNF_CPU_Server ) - Const ) ) ) + MRS ) )", "choosing": "( ( ( ( ( Min( MUR ,( Min( RMSe ,MUC ) - Min( MLU ,MUC ) ) ) / MUM ) - ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ) ) * MUM ) - ( MUM + CS ) ) + ( MLU / ( ( ( MUR - MUR ) - Max( ( Min( Min( RCSe ,DS ) ,RMSe ) + RCSe ),DS ) ) + MUM ) ) )", "obj1": 0.9456066945606695, "obj2": 0.016960403410094346}, {"determining": "( ( AMS + CRS ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) * Max( ( AMS * BR ),Max( ( FirstVNF_Mem_Server * MDR ),MDR ) ) ) + ( ( BR * AMS ) - Min( DDR ,( ( ( ( RRS - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) * ( Max( MLU,DS ) / ( Max( Min( ( ( RRSe / MUC ) / ( MLU + CS ) ) ,( ( RMSe / MUM ) + ( MUR * MUC ) ) ),Max( Max( ( DS * MUR ),RMSe ),MUR ) ) * MUM ) ) ) )", "obj1": 0.6631799163179917, "obj2": 0.17586362399476366}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - Min( PN ,AMS ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Max( ( MUM * ( MUC + RCSe ) ),( Max( DS,( Min( Min( ( RMSe / CS ) ,CS ) ,MUM ) / ( ( Max( RRSe,MLU ) + RMSe ) - DS ) ) ) * Min( ( DS * CS ) ,( MUM * Max( ( DS / ( Min( RMSe ,MUM ) / DS ) ),Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 0.7405857740585774, "obj2": 0.11919506272667857}, {"determining": "( ( Min( ( ( ( ( ( BR * AMS ) - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( RRSe - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.6778242677824268, "obj2": 0.1504940778436843}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( ACS ,Max( AMS,ARS ) ) / Min( Min( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + AMS ) ,( RRS / ( MRS + Const ) ) ) ,( AMS + FirstVNF_RAM ) ) ),Const ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RMSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( ( RMSe / ( RCSe * MUR ) ) / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( CS + ( ( MUR + ( MUC - ( RCSe * Max( MLU,RCSe ) ) ) ) * ( Max( ( ( RRSe / MLU ) + Min( MLU ,RMSe ) ),CS ) * RCSe ) ) ) ) )", "obj1": 0.6317991631799164, "obj2": 0.2186257509698293}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Max( ( ARS / MRS ),DDR ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( Max( MUM,( Max( RRSe,RMSe ) + MUM ) ) + MUR ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8514644351464435, "obj2": 0.057177193186285453}, {"determining": "( ( ARS * DDR ) / ( ( ( ( BR * AMS ) - Min( PN ,AMS ) ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( ARS * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.893305439330544, "obj2": 0.040478491347406276}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( MRS / CRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( FirstVNF_CPU * DDR ) ,AMS ) + ( DDR * FirstVNF_RAM_Server ) ) - ( ( AMS * BR ) - ( ( MRS - BR ) + MDR ) ) ) + ( ( BR * AMS ) - Min( PN ,DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - RRSe ) + DS ) * RMSe ) ,( Max( RCSe,MUM ) + ( MUR - Max( ( RMSe - DS ),Max( MUR,( MUC * MUR ) ) ) ) ) )", "obj1": 0.7384937238493724, "obj2": 0.12034635635616181}, {"determining": "( ( FirstVNF_CPU - PN ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( CRS,BR ) ) * Min( ( FirstVNF_Mem * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RCSe / DS ) / RRSe ) ) ) ) ) ) * ( Max( ( MLU / MUC ),( CS * MUC ) ) / Max( ( MUM + Max( CS,( Min( MUM ,( MUC + MUC ) ) - ( RMSe / RRSe ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.07075922075752833}, {"determining": "( ( Min( ( ( DDR - ( ( Max( BR,AMS ) - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MRS,Max( ( ( PN - FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - MRS ) ),FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( Max( ( DS * ( DS / ( MUM / RMSe ) ) ),Max( ( RRSe + RCSe ),RRSe ) ) / ( CS + ( MUC / MUR ) ) )", "obj1": 0.6861924686192469, "obj2": 0.1434361868119914}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RMSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8368200836820083, "obj2": 0.06310192050969243}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( MRS - ARS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( FirstVNF_Mem ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( MUM / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) ) ) )", "obj1": 0.8682008368200836, "obj2": 0.049818064528674474}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( MUC - Max( Min( ( RRSe / MUR ) ,RRSe ),DS ) ) * ( ( ( MUM * Max( RCSe,RRSe ) ) * MUC ) - ( RMSe + MUC ) ) ) - RRSe ) * ( ( ( MLU / RRSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9539748953974896, "obj2": 0.015428724287415206}, {"determining": "( ( Min( ( ( DDR - ( ( Max( BR,AMS ) - FirstVNF_Mem ) - Min( FirstVNF_RAM ,MRS ) ) ) * ( CRS / FirstVNF_RAM ) ) ,( Const / Max( MRS,Max( ( ( PN - FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - MRS ) ),FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - ( CRS - Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( Max( ( DS * ( DS / ( MUM / RMSe ) ) ),Max( ( RRSe + RCSe ),RRSe ) ) / ( CS + ( MUC / MUR ) ) )", "obj1": 0.6861924686192469, "obj2": 0.1434361868119914}, {"determining": "( ( ( ARS - Min( Const ,( ( Max( Min( ARS ,MRS ),DDR ) * AMS ) * ( ARS + ( ( PN / CRS ) / FirstVNF_Mem ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MUM ,MLU ) ) - ( RRSe - Min( MUC ,( CS - RRSe ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUC / ( ( ( ( RCSe / MLU ) * RMSe ) * RCSe ) * ( ( Max( MLU,RRSe ) + ( RRSe - MUC ) ) - ( MUR + MUM ) ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.8221757322175732, "obj2": 0.07141561894457803}, {"determining": "( ( ( ARS - Min( Const ,( ( ( ( Const * DDR ) / ( MDR * ACS ) ) * AMS ) * ( FirstVNF_CPU + Max( FirstVNF_RAM,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ( ( AMS * AMS ) * ( RRS / Max( MDR,AMS ) ) ) * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( RCSe * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( MUR,( RCSe / ( ( RRSe - ( DS - MUR ) ) / MUR ) ) ) ) )", "obj1": 0.8326359832635983, "obj2": 0.06556781119329433}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( FirstVNF_Mem ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( MUC / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.891213389121339, "obj2": 0.04184791354211783}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( MRS - FirstVNF_RAM ),ACS ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( FirstVNF_Mem ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUC + MUC ) - Min( MLU ,MUM ) ) - ( Min( RCSe ,MLU ) * Max( MUR,( MUM / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) ) ) )", "obj1": 0.8849372384937239, "obj2": 0.04295251804317559}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( FirstVNF_RAM,Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,Max( Const,Const ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / Min( Max( CS,RRSe ) ,( DS + MLU ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8305439330543933, "obj2": 0.06733937869573119}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( ( MUR / MUR ),( ( MLU / MLU ) / ( MLU / ( ( RMSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8556485355648535, "obj2": 0.05452838431897592}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( MRS - ARS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server / MRS ) + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ),( Max( CRS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( MUM / ( ( ( MUR - MUC ) + DS ) / ( ( DS / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.045637808052611674}, {"determining": "( Max( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ),MRS ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( Max( MUR,MUC ) ,( CS + ( ( Max( MLU,MUM ) / MLU ) * RMSe ) ) ) - Min( MLU ,MUM ) ) - ( ( MLU + CS ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9393305439330544, "obj2": 0.020038673307247405}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( MDR / MRS ),ACS ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( FirstVNF_Mem ,( Const / MDR ) ) ) )", "choosing": "( ( ( ( MUC + MUC ) - Min( MLU ,MUM ) ) - ( Min( RCSe ,MLU ) * Max( MUR,( MUM / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( DS + MUR ) * ( ( RCSe / ( ( ( MUC / DS ) / ( RCSe * MUR ) ) / MLU ) ) - ( CS * RCSe ) ) ) ) )", "obj1": 0.8828451882845189, "obj2": 0.04416445917540917}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,CRS ) / MDR ) / CRS ) - DDR ) * ( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + ACS ) ) - Min( ( ACS * ( PN - RRS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Max( Min( RMSe ,MUM ),MUM ) ) ) ) ) ) * ( ( Min( MLU ,MUC ) + ( CS * MUC ) ) / Max( Min( MUM ,MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.06008764660866809}, {"determining": "( ( ( ( ARS - Min( FirstVNF_RAM ,MRS ) ) - DDR ) * ( Min( Min( Max( RRS,AMS ) ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( DDR - ACS ) ) ,( Const / FirstVNF_Mem ) ) ) ) - Min( Max( ( Min( FirstVNF_Mem_Server ,Max( AMS,ARS ) ) / ( ( ( AMS + AMS ) + ( RRS / ( CRS / MRS ) ) ) + ( AMS + FirstVNF_RAM ) ) ),( FirstVNF_Mem * BR ) ) ,( CRS * Max( ACS,Max( BR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM / Max( DS,RMSe ) ) / MUM ) * ( MUR + ( ( ( ( Min( RCSe ,Min( RCSe ,CS ) ) - ( ( MLU * RMSe ) / MUR ) ) * MUM ) * RMSe ) + RMSe ) ) )", "obj1": 0.8640167364016736, "obj2": 0.05152784453698841}, {"determining": "( ( ( FirstVNF_Mem + PN ) + RRS ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM + MUC ) - Min( RCSe ,RMSe ) ) - ( Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) * ( MLU + MUM ) ) ) * ( ( ( MLU / MUC ) + ( ( MUC + MUM ) - RRSe ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8765690376569037, "obj2": 0.04727731987559975}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + ( ( ( Const * DDR ) / ( MDR * ACS ) ) * ( DDR - ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RRSe * RRSe ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8410041841004184, "obj2": 0.05914750410691971}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( Max( MLU,MUM ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MUC ) / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9728033472803347, "obj2": 0.008206285392302741}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( FirstVNF_CPU + Max( FirstVNF_RAM,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ( ( AMS * AMS ) * ( RRS / Max( MDR,AMS ) ) ) * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( RCSe * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( MUR,( RCSe / ( MLU / MUR ) ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.058234744569385766}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( MRS - ARS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( FirstVNF_Mem ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( MUM / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) ) ) )", "obj1": 0.8577405857740585, "obj2": 0.05378877720470078}, {"determining": "( ( ( ARS * Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( MRS - FirstVNF_RAM ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Max( RRS,MDR ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUC + MUC ) - Min( MLU ,MUM ) ) - ( ( CS - ( MLU / RRSe ) ) * Max( MUR,( MUM / ( ( Max( MUR,MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) ) ) )", "obj1": 0.8723849372384938, "obj2": 0.04766531634910393}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( BR - PN ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,DDR ) ) ) + FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUM ) / ( ( CS - Min( Min( Max( RCSe,MUC ) ,MUM ) ,( Min( ( MUM / RRSe ) ,( CS * MUR ) ) - MLU ) ) ) - ( DS + MUC ) ) ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 0.9602510460251046, "obj2": 0.012898195531609003}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( BR - RRS ) ) ) ) - ( PN / BR ) ) + MRS ) )", "choosing": "( ( ( Max( RCSe,MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( ( MUR / MUR ) * Min( ( ( RRSe / MUR ) * MUC ) ,MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9707112970711297, "obj2": 0.009165238076926416}, {"determining": "( Max( ( Min( Min( CRS ,( ( ARS - ACS ) + RRS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ),MRS ) - ( ( BR - ACS ) + Min( ( FirstVNF_Mem * CRS ) ,CRS ) ) )", "choosing": "( ( ( ( MLU * ( ( ( ( MUM + MLU ) / RMSe ) + RRSe ) / Max( RCSe,MUR ) ) ) * ( ( ( MUM * Max( RRSe,RCSe ) ) * MUC ) - ( RMSe + MUC ) ) ) * RRSe ) * ( ( ( RRSe / RMSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( ( DS + Min( MUR ,( MLU - RMSe ) ) ) / Min( MLU ,( MLU + MUR ) ) ) ) ) )", "obj1": 0.9560669456066946, "obj2": 0.01483061349282627}, {"determining": "( ( DDR - ( ARS - Min( Const ,( ( AMS * AMS ) * ( Max( ( MRS - ARS ),Const ) + ARS ) ) ) ) ) * Max( Min( Min( FirstVNF_RAM_Server ,( CRS + Max( ACS,( DDR + RRS ) ) ) ) ,( ( Max( ( PN / BR ),FirstVNF_Mem_Server ) - PN ) + Const ) ),( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + RCSe ),MLU ) / ( ( Max( RMSe,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / ( Max( Min( ( ( RMSe / MUM ) + ( MUR * MUC ) ) ,( ( RRSe / MUM ) / ( MLU + CS ) ) ),Max( Max( CS,RMSe ),MUR ) ) - ( MLU / RMSe ) ) ) ) )", "obj1": 0.8598326359832636, "obj2": 0.05227908683176889}, {"determining": "( ( ( ARS * Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( MRS - FirstVNF_RAM ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Max( RRS,MDR ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUC + MUC ) - Min( MLU ,MUM ) ) - ( ( CS - ( MLU / RRSe ) ) * Max( MUR,( MUM / ( ( Max( MUR,MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.027623326440271163}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( Min( ( ACS * Max( ( RRS * FirstVNF_Mem ),ACS ) ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_CPU / FirstVNF_Mem ) ) - Max( ARS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUR,RRSe ) - Min( RMSe ,MUR ) ) / ( MLU * CS ) ) / Max( ( Min( MLU ,( Min( ( MUR + MUM ) ,MLU ) / ( RCSe + RCSe ) ) ) / MLU ),DS ) )", "obj1": 0.9874476987447699, "obj2": 0.003766526982141878}, {"determining": "( ( ( ARS * Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( MRS - FirstVNF_RAM ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Max( RRS,MDR ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUC + MUC ) - Min( MLU ,MUM ) ) - ( ( CS - ( MLU / RRSe ) ) * Max( MUR,( MUM / ( ( Max( MUR,MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) ) ) )", "obj1": 0.9205020920502092, "obj2": 0.027623326440271163}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9644351464435147, "obj2": 0.010980552250898334}, {"determining": "( ( BR / Const ) - Max( ( FirstVNF_Mem * ( Min( Min( Max( MDR,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( Const ,( Const / FirstVNF_Mem ) ) ) ),MDR ) )", "choosing": "( ( MUM / ( MUM / Max( RMSe,CS ) ) ) * Min( MUR ,( ( RMSe * ( MUR * ( DS + MLU ) ) ) + RMSe ) ) )", "obj1": 0.9916317991631799, "obj2": 0.003144909367103697}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ( CRS / FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Min( ( ACS * ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( FirstVNF_CPU - Const ) ) ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( MUC / MUR ) ) ) ) ) ) ) * ( Max( ( RRSe + MUM ),( RCSe / CS ) ) / ( ( MLU / MUC ) + ( CS * MUC ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.007383878674707006}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * Const ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.006324316815421155}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( FirstVNF_CPU + Max( FirstVNF_RAM,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ( ( AMS * AMS ) * ( RRS / Max( MDR,AMS ) ) ) * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( RCSe * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( MUR / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( MUR,( RCSe / ( MLU / MUR ) ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.058234744569385766}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MUR / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9414225941422594, "obj2": 0.019434572919754107}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * ( ( Const - MDR ) / FirstVNF_CPU ) ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( MUC - Max( Min( ( RRSe / MUR ) ,RRSe ),DS ) ) * ( ( ( MUM * Max( RCSe,( MUR * MUM ) ) ) * MUC ) - ( RMSe + MUC ) ) ) - RRSe ) * ( ( ( MLU / RRSe ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9665271966527197, "obj2": 0.010412742093286064}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( AMS + AMS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( ( ACS * ( DDR - AMS ) ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( ( MLU / MLU ) / ( MLU / ( ( RMSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.05210688617347154}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( Min( ACS ,FirstVNF_CPU_Server ) - Min( RRS ,DDR ) ) * ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( Const - FirstVNF_CPU ) ) - ( Min( ACS ,( RRS + MDR ) ) + ( CRS + DDR ) ) ) ) )", "choosing": "( Min( ( DS - ( DS - RRSe ) ) ,Max( MLU,( ( MUR + MLU ) + ( ( CS / ( ( DS * CS ) + MUC ) ) / ( CS - RCSe ) ) ) ) ) * ( ( MUC - ( RMSe + CS ) ) + CS ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ),( Max( MUM,RMSe ) / CS ) ) ) )", "obj1": 0.9414225941422594, "obj2": 0.019434572919754107}, {"determining": "( ( ( ARS - Min( Const ,( ( AMS * AMS ) * ( ARS + Max( ( MRS - ARS ),Const ) ) ) ) ) - DDR ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - Min( FirstVNF_Mem ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( MUM / ( ( ( MUR - MUC ) + DS ) / ( ( RRSe / DS ) / DS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / ( ( DS + MUR ) * ( ( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) - ( CS * DS ) ) ) ) )", "obj1": 0.8723849372384938, "obj2": 0.04766531634910393}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( ( Const * Max( RRS,AMS ) ) - PN ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) + CS ) * Min( ( DS - ( RRSe - ( ( RCSe * ( RCSe + MUM ) ) * RMSe ) ) ) ,Max( ( CS * DS ),( Max( RRSe,CS ) - MUR ) ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / Min( Max( RMSe,RCSe ) ,CS ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( MUM + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011676256065021002}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Const ) ) - ( ( ( ( CRS / ARS ) + ( FirstVNF_CPU / DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) + MRS ) )", "choosing": "Max( ( MUM * ( MUC + DS ) ),( MUC + Max( ( RMSe / ( MUC * ( ( ( RMSe * RRSe ) / MLU ) - ( Max( CS,DS ) + DS ) ) ) ),( Min( DS ,( MUR * ( ( DS * CS ) + Min( MUC ,RMSe ) ) ) ) + Max( Max( RRSe,MUC ),Max( MUC,MLU ) ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( ( ARS - FirstVNF_Mem ) - DDR ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),Min( ( ( Max( ( ( RCSe * RRSe ) / RMSe ),Min( MUC ,MUR ) ) + MUM ) + MLU ) ,( MLU * MLU ) ) ) / ( ( Max( MUR,RRSe ) - Max( RRSe,MUR ) ) / Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010144827415268618}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( Min( ( BR + ( ACS - CRS ) ) ,( Const / Max( MDR,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) * ( ( MDR / Min( FirstVNF_Mem_Server ,PN ) ) * ( CRS / FirstVNF_Mem_Server ) ) ) - ( MRS - Min( ( MRS / Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( ( ( CS + ( ( ( MUC - ( MUM / Min( DS ,MUR ) ) ) / RCSe ) - Max( CS,( MUM - ( DS * DS ) ) ) ) ) - MUM ) + Max( Min( ( ( ( MUC / MUR ) * Min( DS ,( MUM + MUC ) ) ) - ( ( Min( ( MUC - MUR ) ,Min( RMSe ,MUM ) ) + RMSe ) * RRSe ) ) ,Max( MLU,Min( RMSe ,MUM ) ) ),MUM ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( ( ARS - ( ( FirstVNF_Mem + PN ) + RRS ) ) - DDR ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),Min( ( ( Max( ( ( RCSe * RRSe ) / RMSe ),Min( MUC ,MUR ) ) + MUM ) + MLU ) ,( MLU * MLU ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002278226602246279}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( FirstVNF_CPU - Const ) ) ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,RCSe ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / ( CS / ( RCSe * MUR ) ) ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe + MUM ),( RCSe / CS ) ) ) )", "obj1": 0.9769874476987448, "obj2": 0.007383878674707006}, {"determining": "( Max( ( FirstVNF_CPU - MRS ),MRS ) - ( ( ( ( Max( ARS,DDR ) * AMS ) - ( PN - AMS ) ) - ( ( ( ( FirstVNF_RAM / ( Const + BR ) ) / Const ) * MDR ) + ( DDR * DDR ) ) ) + MRS ) )", "choosing": "Max( Min( ( RMSe - RCSe ) ,MUR ),( MUC + Max( ( RMSe / ( MUC * ( ( Max( CS,DS ) / DS ) - ( MLU / MLU ) ) ) ),( ( DS - ( MUR * ( Min( CS ,CS ) - RCSe ) ) ) + Max( DS,RRSe ) ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.013687361031098206}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( ( FirstVNF_CPU / ( ACS / MDR ) ) * AMS ) ) - ( Max( PN,AMS ) - Min( FirstVNF_Mem_Server ,Const ) ) ) - Min( ( FirstVNF_CPU_Server + ( ACS - MRS ) ) ,( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUM + RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,Min( Min( Min( RMSe ,DS ) ,DS ) ,( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( ( ARS - ( ( FirstVNF_Mem + PN ) + RRS ) ) - DDR ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),Min( ( ( Max( ( ( RCSe * RRSe ) / RMSe ),Min( MUC ,MUR ) ) + MUM ) + MLU ) ,( MLU * MLU ) ) ) / ( ( Max( MUR,RRSe ) - Max( RMSe,MUR ) ) / Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) ) )", "obj1": 0.9937238493723849, "obj2": 0.002278226602246279}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( ( RRS + FirstVNF_RAM_Server ) * RRS ) )", "choosing": "( ( CS + RCSe ) * ( Min( Max( DS,DS ) ,MUM ) + ( RRSe * RRSe ) ) )", "obj1": 0.9853556485355649, "obj2": 0.004997580991283662}, {"determining": "( Max( PN,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * AMS ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( MLU ,MUM ) ) - ( ( MLU + MUM ) * Max( MUR,( RCSe / ( MLU / MLU ) ) ) ) ) * ( ( ( MLU / MUC ) + ( CS * MUC ) ) / Max( ( RRSe - ( Min( RRSe ,MUR ) * ( MLU / MUR ) ) ),( RCSe / CS ) ) ) )", "obj1": 0.9623430962343096, "obj2": 0.011676256065021002}, {"determining": "( Min( CRS ,ACS ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + ACS ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC - ( RMSe + CS ) ) - CS ) * Min( ( DS - ( RRSe - DS ) ) ,Max( ( ( MLU * Min( Min( ( MUR - RCSe ) ,( CS - MUC ) ) ,CS ) ) - CS ),MLU ) ) )", "obj1": 0.9832635983263598, "obj2": 0.005693934841056438}, {"determining": "( Max( MRS,( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - FirstVNF_CPU ) ) - ( ( ( ( CRS / ARS ) + ( DDR * Min( FirstVNF_Mem ,( FirstVNF_RAM - RRS ) ) ) ) - ( Max( ( PN * Const ),( MRS - ARS ) ) - Min( AMS ,( CRS / FirstVNF_CPU ) ) ) ) + MRS ) )", "choosing": "( Max( ( ( CS - ( ( ( ( MUR / MUR ) * ( MUC - RCSe ) ) - RRSe ) + RMSe ) ) / MLU ),Min( Max( MUC,MUR ) ,( CS / MUC ) ) ) / ( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.9790794979079498, "obj2": 0.006324316815421155}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( ( Const * DDR ) / ( MDR * ACS ) ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / ( Min( MUC ,CS ) + Max( RRSe,MLU ) ) ),( ( RRSe - ( ( CS * MUM ) + ( RRSe / DS ) ) ) - Min( DS ,MUR ) ) ) ,( ( RRSe - ( ( DS - ( RRSe - ( DS - MUR ) ) ) * RCSe ) ) / ( Max( ( ( ( CS / ( MUM * RCSe ) ) * MUR ) / MUR ),( ( MUC + MLU ) * ( MUC * MLU ) ) ) / MLU ) ) )", "obj1": 0.997907949790795, "obj2": 0.0006277544970236464}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUC * RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,( Min( Min( RMSe ,DS ) ,DS ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}, {"determining": "( ( ( ARS - FirstVNF_Mem ) - DDR ) * CRS )", "choosing": "( Max( ( Min( MLU ,( MLU / ( RCSe + RCSe ) ) ) / MLU ),Min( ( ( Max( ( ( RCSe * RRSe ) / RMSe ),Min( MUC ,MUR ) ) + MUM ) + MLU ) ,( MLU * MLU ) ) ) / ( ( Max( MUR,RRSe ) - Max( RRSe,MUR ) ) / Max( MUR,( RCSe / ( MLU / ( RMSe / ( RCSe * MUR ) ) ) ) ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010144827415268618}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( Max( ( MUC / ( ( ( MUC * RCSe ) * ( CS + CS ) ) / RMSe ) ),RCSe ) / Min( CS ,RRSe ) ),Min( Min( DS ,MUR ) ,( DS - MUR ) ) ) ,( Min( Min( RMSe ,DS ) ,DS ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) ) )", "obj1": 0.9895397489539749, "obj2": 0.0033533907964017726}]}