{"1": [{"determining": "( ( BR * MDR ) - ( BR - Const ) )", "choosing": "( ( DS / CS ) * ( MUR / MUM ) )", "obj1": 0.7222222222222222, "obj2": 0.2448682258136885}, {"determining": "( Max( ( Const * CRS ),RRS ) / ( FirstVNF_CPU_Server + ( ARS + FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,( MUC * Max( MUC,RRSe ) ) ) + MUR ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,MRS ) ,( BR - Const ) )", "choosing": "( ( DS + RRSe ) * ( RCSe - RMSe ) )", "obj1": 0.7337164750957854, "obj2": 0.23033996625342193}, {"determining": "( Min( MRS ,MRS ) - Min( AMS ,( Min( DDR ,AMS ) - MDR ) ) )", "choosing": "Max( ( DS + DS ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR / MDR ) / FirstVNF_RAM_Server ) ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( ( ( MUR / ( ( DS / ( MUM - RRSe ) ) / ( CS + RRSe ) ) ) * MUC ) + DS ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - BR ) - ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( MUC - MUR ) * ( MUM / ( MUR + ( ( MUM - MUC ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "( ( MUM - MUR ) * ( DS / RRSe ) )", "obj1": 0.7701149425287356, "obj2": 0.19959713018475092}, {"determining": "( Min( ( Max( BR,( FirstVNF_Mem - FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( Const + ( Min( FirstVNF_Mem ,MRS ) + ( ( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) ) - ( ( ARS + CRS ) * Const ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - BR ) * ( BR - ( AMS / ( FirstVNF_Mem - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) - Max( ( ( BR / FirstVNF_Mem_Server ) + AMS ),( Const + FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * RRSe ),Min( RMSe ,( MUR / Min( Max( RRSe,( CS - RCSe ) ) ,( MUC / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( ( BR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ) )", "obj1": 0.8295019157088123, "obj2": 0.1500414141990453}, {"determining": "( ( ( CRS + DDR ) - Min( FirstVNF_CPU ,MRS ) ) / Max( Min( ( BR / ( FirstVNF_CPU * DDR ) ) ,MDR ),( ( ( Max( Const,ACS ) + ( ( PN / MDR ) - FirstVNF_RAM ) ) / FirstVNF_Mem ) - CRS ) ) )", "choosing": "( Max( ( MUC / Min( DS ,Min( Max( RMSe,RMSe ) ,( DS + Min( RCSe ,MLU ) ) ) ) ),Max( DS,( DS + RMSe ) ) ) + Min( Min( RCSe ,MUM ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) - ( DDR / ACS ) ) - ( ( AMS + FirstVNF_RAM ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( CS ,MUM ) * RRSe ) )", "obj1": 0.7183908045977011, "obj2": 0.24644539684258282}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - Const ) ),PN ) * FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe * ( Max( Min( ( DS / CS ) ,MUM ),MUM ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / MRS ) + DDR ) / ( FirstVNF_CPU_Server / MDR ) )", "choosing": "( ( ( RCSe + RCSe ) - Max( RCSe,MUM ) ) * ( Min( RMSe ,MLU ) - ( RMSe * DS ) ) )", "obj1": 0.6187739463601533, "obj2": 0.27378960229480764}, {"determining": "( ( Min( ( Const - CRS ) ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) - Min( DDR ,MDR ) )", "choosing": "( ( Max( MUR,DS ) + Min( ( CS + RRSe ) ,DS ) ) / ( RCSe - ( ( MUM / MUR ) * ( MUR * Min( ( ( RMSe * DS ) / Min( DS ,RMSe ) ) ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Min( ( Min( Const ,( ACS * ( MRS * FirstVNF_Mem ) ) ) - MDR ) ,( ( ARS - ARS ) / CRS ) )", "choosing": "( ( Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) / ( ( RRSe + CS ) * Min( MLU ,RCSe ) ) ) / ( ( ( RRSe / MUM ) * ( CS * MLU ) ) / Max( ( RCSe + MUC ),Max( ( DS / MLU ),DS ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.007946336171085765}, {"determining": "( ( ( ( DDR + RRS ) + ACS ) - FirstVNF_RAM_Server ) + Max( Max( FirstVNF_CPU,CRS ),PN ) )", "choosing": "Max( ( Min( ( CS + RMSe ) ,( MUR / MUC ) ) * ( ( MLU - RRSe ) - Min( RMSe ,MUC ) ) ),( Min( ( MLU - DS ) ,Min( CS ,MUM ) ) + ( ( RCSe + RCSe ) / ( RCSe * RRSe ) ) ) )", "obj1": 0.7068965517241379, "obj2": 0.2532745143539823}, {"determining": "Min( ( ( Max( ( ( RRS * FirstVNF_RAM_Server ) * DDR ),( FirstVNF_Mem * FirstVNF_RAM ) ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) - ( ( BR / MRS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MLU + MUC ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( Max( Max( MUM,MLU ),CS ) * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 0.7471264367816092, "obj2": 0.2225425525066572}, {"determining": "Min( ( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) - ( Max( CRS,FirstVNF_RAM ) * ( ACS * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_RAM_Server ) * Max( ARS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / BR ) ) )", "choosing": "Max( ( ( MUR - RRSe ) + ( RMSe + RRSe ) ),( ( ( DS + MLU ) * ( CS - MLU ) ) * Max( ( ( DS / MUC ) / Max( ( ( ( RCSe + RRSe ) / RRSe ) + DS ),MUM ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Min( Const ,MDR ) ) * Max( ( FirstVNF_Mem - MDR ),Max( RRS,FirstVNF_RAM ) ) ) ,Max( MRS,DDR ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( DS,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( ( ( CS - MLU ) + ( RMSe * Min( MUM ,( RMSe * CS ) ) ) ),MUM ) / ( RMSe - Max( DS,( RRSe / ( ( RMSe * DS ) / ( MLU - RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),Max( MUR,CS ) ) ),Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}], "2": [{"determining": "( Max( ( Const * CRS ),RRS ) / ( FirstVNF_CPU_Server + ( ARS + FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,( MUC * Max( MUC,RRSe ) ) ) + MUR ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Min( AMS ,( Min( DDR ,AMS ) - MDR ) ) )", "choosing": "Max( ( DS + DS ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR / MDR ) / FirstVNF_RAM_Server ) ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( ( ( MUR / ( ( DS / ( MUM - RRSe ) ) / ( CS + RRSe ) ) ) * MUC ) + DS ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - BR ) - ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( MUC - MUR ) * ( MUM / ( MUR + ( ( MUM - MUC ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,( FirstVNF_Mem - FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( Const + ( Min( FirstVNF_Mem ,MRS ) + ( ( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) ) - ( ( ARS + CRS ) * Const ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - BR ) * ( BR - ( AMS / ( FirstVNF_Mem - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) - Max( ( ( BR / FirstVNF_Mem_Server ) + AMS ),( Const + FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * RRSe ),Min( RMSe ,( MUR / Min( Max( RRSe,( CS - RCSe ) ) ,( MUC / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + BR ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,DS ) - ( CS * MUM ) )", "obj1": 0.6302681992337165, "obj2": 0.25425025090957126}, {"determining": "( ( BR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ) )", "obj1": 0.8295019157088123, "obj2": 0.1500414141990453}, {"determining": "( ( ( CRS + DDR ) - Min( FirstVNF_CPU ,MRS ) ) / Max( Min( ( BR / ( FirstVNF_CPU * DDR ) ) ,MDR ),( ( ( Max( Const,ACS ) + ( ( PN / MDR ) - FirstVNF_RAM ) ) / FirstVNF_Mem ) - CRS ) ) )", "choosing": "( Max( ( MUC / Min( DS ,Min( Max( RMSe,RMSe ) ,( DS + Min( RCSe ,MLU ) ) ) ) ),Max( DS,( DS + RMSe ) ) ) + Min( Min( RCSe ,MUM ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - Const ) ),PN ) * FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe * ( Max( Min( ( DS / CS ) ,MUM ),MUM ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const - CRS ) ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) - Min( DDR ,MDR ) )", "choosing": "( ( Max( MUR,DS ) + Min( ( CS + RRSe ) ,DS ) ) / ( RCSe - ( ( MUM / MUR ) * ( MUR * Min( ( ( RMSe * DS ) / Min( DS ,RMSe ) ) ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Min( ( Min( Const ,( ACS * ( MRS * FirstVNF_Mem ) ) ) - MDR ) ,( ( ARS - ARS ) / CRS ) )", "choosing": "( ( Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) / ( ( RRSe + CS ) * Min( MLU ,RCSe ) ) ) / ( ( ( RRSe / MUM ) * ( CS * MLU ) ) / Max( ( RCSe + MUC ),Max( ( DS / MLU ),DS ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.007946336171085765}, {"determining": "Min( ( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) - ( Max( CRS,FirstVNF_RAM ) * ( ACS * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_RAM_Server ) * Max( ARS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / BR ) ) )", "choosing": "Max( ( ( MUR - RRSe ) + ( RMSe + RRSe ) ),( ( ( DS + MLU ) * ( CS - MLU ) ) * Max( ( ( DS / MUC ) / Max( ( ( ( RCSe + RRSe ) / RRSe ) + DS ),MUM ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Min( Const ,MDR ) ) * Max( ( FirstVNF_Mem - MDR ),Max( RRS,FirstVNF_RAM ) ) ) ,Max( MRS,DDR ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( DS,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( ( ( CS - MLU ) + ( RMSe * Min( MUM ,( RMSe * CS ) ) ) ),MUM ) / ( RMSe - Max( DS,( RRSe / ( ( RMSe * DS ) / ( MLU - RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),Max( MUR,CS ) ) ),Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "Min( ( ( ( MDR * Const ) - ( Const * FirstVNF_Mem_Server ) ) * ( DDR + FirstVNF_CPU ) ) ,Min( ( Const / ( ACS + DDR ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( MRS,( RRS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUC,( RCSe + ( Min( MUR ,RRSe ) / RCSe ) ) ) - DS ) / Max( ( Max( Max( ( CS - MLU ),Max( MLU,( Min( DS ,CS ) * Min( CS ,CS ) ) ) ),MUR ) * ( ( Min( DS ,Max( CS,MUC ) ) - RMSe ) * Max( ( MUC - Max( CS,MUM ) ),( RRSe - Max( DS,RRSe ) ) ) ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( PN / AMS ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ,( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * ( ACS / ACS ) ) )", "choosing": "( ( ( ( ( MUR + Min( RRSe ,MUM ) ) + MUR ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( ARS / Const ) ) - ( MDR * ( CRS * ARS ) ) )", "choosing": "( ( ( RCSe * Min( MLU ,( RMSe - MLU ) ) ) * ( MUM * MUC ) ) - ( ( RRSe - ( Max( RMSe,( RMSe - ( ( MLU + RRSe ) * ( RCSe - RRSe ) ) ) ) - RMSe ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) - ( MDR - ( FirstVNF_RAM * AMS ) ) )", "choosing": "( Max( ( MUR / ( ( RMSe - RMSe ) - ( Max( Max( RCSe,MUM ),MUR ) * RCSe ) ) ),MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - ( Const + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) * Max( Min( RRS ,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Min( ( FirstVNF_CPU / AMS ) ,Max( DDR,BR ) ) ,( Min( Const ,Min( BR ,ACS ) ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MLU,( RMSe / ( CS - RMSe ) ) ) ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( BR / RRS ) ) * ( ( MDR * Min( ( ( MRS + ACS ) * Max( ARS,MRS ) ) ,( ( RRS + ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) ) - MRS ) )", "choosing": "( Min( ( MUR - RCSe ) ,MLU ) * Min( ( CS / RMSe ) ,( RCSe + DS ) ) )", "obj1": 0.60727969348659, "obj2": 0.26825209378682807}, {"determining": "( ( ACS + Min( ACS ,FirstVNF_Mem_Server ) ) - Min( RRS ,RRS ) )", "choosing": "Max( Max( ( RMSe - MLU ),MLU ),( ( MLU + ( ( Min( ( MUR - MUC ) ,( CS + ( DS + MUC ) ) ) / CS ) + ( MUR / Min( ( MLU - Min( CS ,DS ) ) ,Max( ( MUR * MLU ),( DS * MUR ) ) ) ) ) ) / ( ( RCSe * DS ) / ( Min( ( MLU / Min( ( MUR / RCSe ) ,( MUM * RCSe ) ) ) ,MUC ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( FirstVNF_RAM - Max( FirstVNF_Mem,( ACS - FirstVNF_CPU ) ) ) ) - FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Max( ( CRS + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ),( FirstVNF_Mem / Min( Max( ( DDR + FirstVNF_Mem ),ACS ) ,CRS ) ) ) ) ,Const ) )", "choosing": "( Min( CS ,( ( Max( ( RMSe / MLU ),( MUR / CS ) ) / ( DS - RCSe ) ) * MLU ) ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - Min( DDR ,RRS ) ) )", "choosing": "( ( Min( ( RCSe * RCSe ) ,RCSe ) + Max( MUR,CS ) ) / ( ( ( RRSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0007993714282739525}, {"determining": "( ( BR - CRS ) * ( FirstVNF_CPU + CRS ) )", "choosing": "( Min( MUM ,( ( ( MUR * RCSe ) + CS ) - Min( RMSe ,MUR ) ) ) - ( RCSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / ( Max( RRS,Const ) + ( Const + CRS ) ) ) + AMS ) / ( FirstVNF_CPU_Server / ( ( MDR * FirstVNF_Mem ) - Min( MRS ,RRS ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) - RRSe ) * ( Max( ( ( Min( RRSe ,MLU ) + CS ) * ( Min( ( ( MUC - RMSe ) + ( RRSe * MUR ) ) ,Max( RCSe,RCSe ) ) / MUC ) ),RMSe ) - ( RMSe * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( DDR * RRS ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( ( CS / RCSe ) + ( MUC - MLU ) ) ,( MLU * DS ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6819923371647509, "obj2": 0.2236077733659829}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) - Min( BR ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) - ( AMS - ( MRS * AMS ) ) )", "choosing": "( Min( Min( ( RMSe - MLU ) ,RCSe ) ,Max( DS,RCSe ) ) / ( RMSe * ( MUC * Max( ( MUC / Max( Min( DS ,MLU ),MUM ) ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MDR ,( ( FirstVNF_CPU + RRS ) / FirstVNF_Mem ) ) - Max( AMS,ACS ) ) * FirstVNF_RAM ) - ( ( ( Min( ( FirstVNF_RAM_Server + RRS ) ,( ( FirstVNF_CPU_Server - DDR ) + MRS ) ) / MRS ) / DDR ) + Const ) )", "choosing": "( Min( MUC ,Min( ( Max( ( MLU * MUM ),DS ) / ( Min( MUC ,MUC ) * DS ) ) ,Min( RCSe ,MUM ) ) ) - ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Max( ( FirstVNF_Mem + ( BR / DDR ) ),AMS ) )", "choosing": "Min( ( Max( RRSe,( ( Min( Min( ( DS + RMSe ) ,( DS + RRSe ) ) ,( DS * Min( MUR ,RMSe ) ) ) / ( ( CS - MUC ) * RMSe ) ) * CS ) ) + Max( MLU,CS ) ) ,( Max( MUM,( MLU / RRSe ) ) + Max( Min( RCSe ,RRSe ),( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( CRS ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( DS,RRSe ) / ( ( RMSe + RRSe ) / ( Max( RMSe,DS ) * MUC ) ) )", "obj1": 0.6532567049808429, "obj2": 0.25274286045418703}, {"determining": "( ( BR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 0.8524904214559387, "obj2": 0.12192675686451043}, {"determining": "( ( Const / FirstVNF_RAM ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "Max( ( Max( Max( RMSe,Max( MUR,MUR ) ),MUR ) - MUR ),Max( ( CS + Max( Min( MUM ,RMSe ),RRSe ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( Min( DDR ,( ( FirstVNF_CPU - ( MDR - CRS ) ) - FirstVNF_RAM_Server ) ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( ( ( Min( DS ,MUC ) / CS ) * ( ( ( MUR / RRSe ) * CS ) + ( Min( MUC ,RCSe ) * DS ) ) ) - MUM ) - RCSe ),MUC ) - ( ( MUR - RMSe ) - Max( MUM,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( MDR - MRS ) )", "choosing": "Max( ( Max( ( MUR / DS ),MLU ) + ( MUM + MUC ) ),Max( MLU,MLU ) )", "obj1": 0.7298850574712644, "obj2": 0.20247976941655008}, {"determining": "Min( ( DDR / FirstVNF_RAM_Server ) ,Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( MUC * RMSe ) ) + ( ( RCSe / MUM ) + Max( RMSe,RMSe ) ) ) / Min( ( ( MUM + Min( ( CS - MUR ) ,MUM ) ) * Min( ( ( RRSe * Max( ( MUC - RRSe ),Max( MUR,CS ) ) ) / CS ) ,RRSe ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,PN ) + ( Const + CRS ) ) - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( Min( ( MUC + RRSe ) ,MUC ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ( ( DDR - FirstVNF_RAM ) + ( PN - MRS ) ) ) - ( ( BR / ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Min( DS ,( RMSe / DS ) ) / ( Max( RMSe,( MUR + MUM ) ) + MUR ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 0.7701149425287356, "obj2": 0.18589789828683187}, {"determining": "( ( BR - ( CRS / ( Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) + ACS ),FirstVNF_Mem_Server ) - RRS ) ) ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Min( MUC ,MUM ) - Min( RRSe ,Min( CS ,( MUM * ( RMSe - ( RMSe / MUC ) ) ) ) ) )", "obj1": 0.896551724137931, "obj2": 0.11780912429186939}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( DDR / CRS ) ) - ( ( ( RRS - PN ) + FirstVNF_RAM ) / ( FirstVNF_CPU - PN ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + MUM ) - ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ) )", "obj1": 0.8122605363984674, "obj2": 0.16523311664024448}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) * Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( Min( MUC ,( MUC + RRSe ) ) / ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Max( MUR,MUC ) - ( ( Max( MUR,MUC ) - RMSe ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.009756612589980763}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Max( FirstVNF_CPU,MDR ) - ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - MDR ) )", "choosing": "Max( Max( ( Max( CS,RRSe ) * Max( Max( Min( MUR ,RCSe ),RCSe ),CS ) ),MLU ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * CRS ),RRS ) / ( FirstVNF_CPU_Server + ( ARS + FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,( MUC * Max( MUC,RRSe ) ) ) + MUR ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( BR / RRS ) ) * ( ( MDR * Min( ( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) + ACS ) * Max( ARS,MRS ) ) ,( ( RRS + ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) ) - MRS ) )", "choosing": "( Min( ( MUR - RCSe ) ,MLU ) * Min( ( CS / RMSe ) ,( RCSe + ( ( MUR + MUM ) * CS ) ) ) )", "obj1": 0.5996168582375478, "obj2": 0.2792016164201355}, {"determining": "( ( FirstVNF_CPU_Server - CRS ) / ( FirstVNF_RAM - ARS ) )", "choosing": "( ( MUM - MUR ) * ( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.9233716475095786, "obj2": 0.07909974187041935}, {"determining": "( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,Const ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "( ( ( MLU / ( ( ( ( MUC / Max( MUM,DS ) ) / RRSe ) * MLU ) * ( ( Max( CS,Min( MUM ,DS ) ) + RRSe ) / RCSe ) ) ) + ( RCSe / Max( Min( Max( ( Max( CS,RMSe ) + RRSe ),CS ) ,( MLU - MUR ) ),( RRSe + DS ) ) ) ) + Max( Max( MUM,MUR ),( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( MUM - ( MUC - RCSe ) ) ,RCSe ) ,( CS / CS ) ) ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.011855100432494287}, {"determining": "Min( ( ( BR - ( ( DDR - FirstVNF_RAM ) + ( PN - MRS ) ) ) - ( ( BR / ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Min( DS ,( RMSe / DS ) ) / ( Max( RMSe,( MUR + MUM ) ) + MUR ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 0.7701149425287356, "obj2": 0.18589789828683187}, {"determining": "( ( BR / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + MUM ) - ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ) )", "obj1": 0.8084291187739464, "obj2": 0.15941451052060523}, {"determining": "( ( BR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS - MUR ),Max( MLU,MLU ) )", "obj1": 0.8524904214559387, "obj2": 0.12192675686451043}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( DDR * RRS ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( ( CS / RCSe ) + ( MUC - MLU ) ) ,( MLU * DS ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6704980842911877, "obj2": 0.22236187426831194}, {"determining": "( ACS - ( MDR - MRS ) )", "choosing": "( Max( ( MUR / DS ),MLU ) + ( MUM + MUC ) )", "obj1": 0.7126436781609196, "obj2": 0.19205692596528787}, {"determining": "( ( BR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ) )", "obj1": 0.8295019157088123, "obj2": 0.1500414141990453}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( ( FirstVNF_RAM - ARS ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( DDR + AMS ) ) / ( FirstVNF_CPU_Server + Min( RRS ,Min( ( FirstVNF_Mem_Server / ARS ) ,MRS ) ) ) ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ( FirstVNF_RAM_Server + BR ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( Min( RRSe ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,( Max( DS,Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) ) + ( MUM - ( MUR + MUR ) ) ) ) + ( MLU + ( MUR + MLU ) ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6590038314176245, "obj2": 0.22848122749179894}, {"determining": "( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,ARS ) ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( MUR - MLU ) ) * Max( Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,DS ),( CS / RMSe ) ) )", "obj1": 0.6283524904214559, "obj2": 0.24884824936832975}, {"determining": "( ( BR - ( BR / FirstVNF_CPU ) ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( ( MUR * MUC ) + Min( MLU ,Min( MUR ,MUM ) ) )", "obj1": 0.8888888888888888, "obj2": 0.11574056691714503}, {"determining": "Min( ( ( ( Const * MRS ) + ( Min( ( Min( Const ,FirstVNF_CPU ) + RRS ) ,( FirstVNF_RAM / ( DDR - FirstVNF_RAM ) ) ) + PN ) ) + ( ( BR / ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( Max( ( MLU * MUR ),Min( CS ,MUM ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( CS - RCSe ),( MUR - MUR ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.1898712781126619}, {"determining": "Min( ( ( Max( ( ( RRS * FirstVNF_RAM_Server ) * DDR ),( FirstVNF_Mem * FirstVNF_RAM ) ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) - ( ( BR / MRS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),( MLU + MUC ) ) + Min( Max( MUM,DS ) ,Max( RMSe,MUC ) ) ) + ( Max( ( Max( Max( MUM,MLU ),CS ) * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 0.9157088122605364, "obj2": 0.10047041327403738}, {"determining": "( ( CRS / FirstVNF_RAM ) + ( Min( ( Min( ( FirstVNF_RAM - AMS ) ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) / AMS ) )", "choosing": "( ( ( Max( DS,RCSe ) / Min( MLU ,MUM ) ) / CS ) / ( CS - ( CS + ( Min( ( ( Max( RMSe,CS ) - RRSe ) + CS ) ,CS ) + Max( ( ( MUM * MLU ) + MUM ),DS ) ) ) ) )", "obj1": 0.9042145593869731, "obj2": 0.10784613920646857}, {"determining": "( ( AMS / ( BR / RRS ) ) * ( ( MDR * Min( ( ( MRS + ACS ) * Max( ARS,MRS ) ) ,( ( RRS + ARS ) + ( FirstVNF_Mem_Server * BR ) ) ) ) - MRS ) )", "choosing": "( Min( ( MUR - RCSe ) ,MLU ) * Min( ( CS / RMSe ) ,( RCSe + DS ) ) )", "obj1": 0.60727969348659, "obj2": 0.26825209378682807}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( ( ( MUR * CS ) - RRSe ),RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6149425287356322, "obj2": 0.2668780983558345}, {"determining": "Min( ( Min( Const ,( ACS * ( MRS * FirstVNF_Mem ) ) ) - MDR ) ,( ( ARS - ARS ) / CRS ) )", "choosing": "( ( Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) / ( ( RRSe + CS ) * Min( MLU ,RCSe ) ) ) / ( ( ( RRSe / MUM ) * ( CS * MLU ) ) / Max( ( RCSe + MUC ),Max( ( DS / MLU ),DS ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.007946336171085765}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),Max( MUR,CS ) ) ),Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.009756612589980763}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,( AMS * ARS ) ) + Max( ( FirstVNF_CPU / ARS ),Min( PN ,ARS ) ) ) * ( ( ( ( RRS * FirstVNF_CPU ) * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + ( ( DS * RRSe ) + ( MUR / MUM ) ) ) ) ) * ( ( Min( CS ,CS ) * ( CS * RRSe ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26763926957485257}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - Min( DDR ,RRS ) ) )", "choosing": "( ( Min( ( RCSe * RCSe ) ,RCSe ) + Max( MUR,CS ) ) / ( ( ( RRSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0007993714282739525}, {"determining": "( Min( MRS ,MRS ) - Min( AMS ,( Min( DDR ,AMS ) - MDR ) ) )", "choosing": "Max( ( DS + DS ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR / MDR ) / FirstVNF_RAM_Server ) ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( ( ( MUR / ( ( DS / ( MUM - RRSe ) ) / ( CS + RRSe ) ) ) * MUC ) + DS ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - BR ) - ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( MUC - MUR ) * ( MUM / ( MUR + ( ( MUM - MUC ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,( FirstVNF_Mem - FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( Const + ( Min( FirstVNF_Mem ,MRS ) + ( ( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) ) - ( ( ARS + CRS ) * Const ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - BR ) * ( BR - ( AMS / ( FirstVNF_Mem - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) - Max( ( ( BR / FirstVNF_Mem_Server ) + AMS ),( Const + FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * RRSe ),Min( RMSe ,( MUR / Min( Max( RRSe,( CS - RCSe ) ) ,( MUC / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + DDR ) - Min( FirstVNF_CPU ,MRS ) ) / Max( Min( ( BR / ( FirstVNF_CPU * DDR ) ) ,MDR ),( ( ( Max( Const,ACS ) + ( ( PN / MDR ) - FirstVNF_RAM ) ) / FirstVNF_Mem ) - CRS ) ) )", "choosing": "( Max( ( MUC / Min( DS ,Min( Max( RMSe,RMSe ) ,( DS + Min( RCSe ,MLU ) ) ) ) ),Max( DS,( DS + RMSe ) ) ) + Min( Min( RCSe ,MUM ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - Const ) ),PN ) * FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe * ( Max( Min( ( DS / CS ) ,MUM ),MUM ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const - CRS ) ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) - Min( DDR ,MDR ) )", "choosing": "( ( Max( MUR,DS ) + Min( ( CS + RRSe ) ,DS ) ) / ( RCSe - ( ( MUM / MUR ) * ( MUR * Min( ( ( RMSe * DS ) / Min( DS ,RMSe ) ) ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) - ( Max( CRS,FirstVNF_RAM ) * ( ACS * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_RAM_Server ) * Max( ARS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / BR ) ) )", "choosing": "Max( ( ( MUR - RRSe ) + ( RMSe + RRSe ) ),( ( ( DS + MLU ) * ( CS - MLU ) ) * Max( ( ( DS / MUC ) / Max( ( ( ( RCSe + RRSe ) / RRSe ) + DS ),MUM ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Min( Const ,MDR ) ) * Max( ( FirstVNF_Mem - MDR ),Max( RRS,FirstVNF_RAM ) ) ) ,Max( MRS,DDR ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( DS,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( ( ( CS - MLU ) + ( RMSe * Min( MUM ,( RMSe * CS ) ) ) ),MUM ) / ( RMSe - Max( DS,( RRSe / ( ( RMSe * DS ) / ( MLU - RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR * Const ) - ( Const * FirstVNF_Mem_Server ) ) * ( DDR + FirstVNF_CPU ) ) ,Min( ( Const / ( ACS + DDR ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( MRS,( RRS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUC,( RCSe + ( Min( MUR ,RRSe ) / RCSe ) ) ) - DS ) / Max( ( Max( Max( ( CS - MLU ),Max( MLU,( Min( DS ,CS ) * Min( CS ,CS ) ) ) ),MUR ) * ( ( Min( DS ,Max( CS,MUC ) ) - RMSe ) * Max( ( MUC - Max( CS,MUM ) ),( RRSe - Max( DS,RRSe ) ) ) ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( PN / AMS ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ,( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * ( ACS / ACS ) ) )", "choosing": "( ( ( ( ( MUR + Min( RRSe ,MUM ) ) + MUR ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( ARS / Const ) ) - ( MDR * ( CRS * ARS ) ) )", "choosing": "( ( ( RCSe * Min( MLU ,( RMSe - MLU ) ) ) * ( MUM * MUC ) ) - ( ( RRSe - ( Max( RMSe,( RMSe - ( ( MLU + RRSe ) * ( RCSe - RRSe ) ) ) ) - RMSe ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) - ( MDR - ( FirstVNF_RAM * AMS ) ) )", "choosing": "( Max( ( MUR / ( ( RMSe - RMSe ) - ( Max( Max( RCSe,MUM ),MUR ) * RCSe ) ) ),MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - ( Const + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) * Max( Min( RRS ,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Min( ( FirstVNF_CPU / AMS ) ,Max( DDR,BR ) ) ,( Min( Const ,Min( BR ,ACS ) ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MLU,( RMSe / ( CS - RMSe ) ) ) ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + Min( ACS ,FirstVNF_Mem_Server ) ) - Min( RRS ,RRS ) )", "choosing": "Max( Max( ( RMSe - MLU ),MLU ),( ( MLU + ( ( Min( ( MUR - MUC ) ,( CS + ( DS + MUC ) ) ) / CS ) + ( MUR / Min( ( MLU - Min( CS ,DS ) ) ,Max( ( MUR * MLU ),( DS * MUR ) ) ) ) ) ) / ( ( RCSe * DS ) / ( Min( ( MLU / Min( ( MUR / RCSe ) ,( MUM * RCSe ) ) ) ,MUC ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( FirstVNF_RAM - Max( FirstVNF_Mem,( ACS - FirstVNF_CPU ) ) ) ) - FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Max( ( CRS + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ),( FirstVNF_Mem / Min( Max( ( DDR + FirstVNF_Mem ),ACS ) ,CRS ) ) ) ) ,Const ) )", "choosing": "( Min( CS ,( ( Max( ( RMSe / MLU ),( MUR / CS ) ) / ( DS - RCSe ) ) * MLU ) ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - CRS ) * ( FirstVNF_CPU + CRS ) )", "choosing": "( Min( MUM ,( ( ( MUR * RCSe ) + CS ) - Min( RMSe ,MUR ) ) ) - ( RCSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / ( Max( RRS,Const ) + ( Const + CRS ) ) ) + AMS ) / ( FirstVNF_CPU_Server / ( ( MDR * FirstVNF_Mem ) - Min( MRS ,RRS ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) - RRSe ) * ( Max( ( ( Min( RRSe ,MLU ) + CS ) * ( Min( ( ( MUC - RMSe ) + ( RRSe * MUR ) ) ,Max( RCSe,RCSe ) ) / MUC ) ),RMSe ) - ( RMSe * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) - Min( BR ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) - ( AMS - ( MRS * AMS ) ) )", "choosing": "( Min( Min( ( RMSe - MLU ) ,RCSe ) ,Max( DS,RCSe ) ) / ( RMSe * ( MUC * Max( ( MUC / Max( Min( DS ,MLU ),MUM ) ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MDR ,( ( FirstVNF_CPU + RRS ) / FirstVNF_Mem ) ) - Max( AMS,ACS ) ) * FirstVNF_RAM ) - ( ( ( Min( ( FirstVNF_RAM_Server + RRS ) ,( ( FirstVNF_CPU_Server - DDR ) + MRS ) ) / MRS ) / DDR ) + Const ) )", "choosing": "( Min( MUC ,Min( ( Max( ( MLU * MUM ),DS ) / ( Min( MUC ,MUC ) * DS ) ) ,Min( RCSe ,MUM ) ) ) - ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Max( ( FirstVNF_Mem + ( BR / DDR ) ),AMS ) )", "choosing": "Min( ( Max( RRSe,( ( Min( Min( ( DS + RMSe ) ,( DS + RRSe ) ) ,( DS * Min( MUR ,RMSe ) ) ) / ( ( CS - MUC ) * RMSe ) ) * CS ) ) + Max( MLU,CS ) ) ,( Max( MUM,( MLU / RRSe ) ) + Max( Min( RCSe ,RRSe ),( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_RAM ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "Max( ( Max( Max( RMSe,Max( MUR,MUR ) ),MUR ) - MUR ),Max( ( CS + Max( Min( MUM ,RMSe ),RRSe ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( Min( DDR ,( ( FirstVNF_CPU - ( MDR - CRS ) ) - FirstVNF_RAM_Server ) ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( ( ( Min( DS ,MUC ) / CS ) * ( ( ( MUR / RRSe ) * CS ) + ( Min( MUC ,RCSe ) * DS ) ) ) - MUM ) - RCSe ),MUC ) - ( ( MUR - RMSe ) - Max( MUM,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / FirstVNF_RAM_Server ) ,Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( MUC * RMSe ) ) + ( ( RCSe / MUM ) + Max( RMSe,RMSe ) ) ) / Min( ( ( MUM + Min( ( CS - MUR ) ,MUM ) ) * Min( ( ( RRSe * Max( ( MUC - RRSe ),Max( MUR,CS ) ) ) / CS ) ,RRSe ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,PN ) + ( Const + CRS ) ) - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( Min( ( MUC + RRSe ) ,MUC ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( DDR / CRS ) ) - ( ( ( RRS - PN ) + FirstVNF_RAM ) / ( FirstVNF_CPU - PN ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) * Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( Min( MUC ,( MUC + RRSe ) ) / ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Max( MUR,MUC ) - ( ( Max( MUR,MUC ) - RMSe ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( MUM * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / ( MDR + PN ) ) ,Const ) * ( Max( Const,AMS ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * RCSe ) ,Max( MUR,MLU ) ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( ( Max( BR,AMS ) * MRS ) / FirstVNF_RAM_Server ) * PN ) ) - ( MDR - Const ) )", "choosing": "( ( MUC + ( CS * MUC ) ) + ( Max( ( MUC - MUR ),( CS - RCSe ) ) / Max( ( MUM * DS ),( CS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( CS / Max( ( MLU / RCSe ),( MUM * MUC ) ) ) * ( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / BR ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "( ( MUM / RCSe ) - ( ( ( Max( RRSe,Min( ( MLU + ( MUM + MUC ) ) ,MLU ) ) + ( Max( RCSe,( Min( DS ,RMSe ) - MLU ) ) + ( ( RRSe / CS ) - DS ) ) ) - CS ) / Min( ( RCSe + ( DS * MUC ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - ( DDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_RAM ,DDR ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - ( CRS * ( ( FirstVNF_RAM_Server + ACS ) * FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( ( ( RMSe / ( MUM * MUR ) ) / MUM ) * ( ( MUR + MUM ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( CS - MUC ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "Min( Min( ( Max( MLU,( ( DS - ( ( RCSe + CS ) - Min( MUC ,RRSe ) ) ) - RCSe ) ) * ( ( MUM + MUR ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) / ( Min( Min( ( Const * FirstVNF_Mem ) ,( ( ( DDR + FirstVNF_RAM ) * ( MDR - BR ) ) - PN ) ) ,ARS ) * ( RRS * FirstVNF_RAM ) ) ) - Max( ( MRS / FirstVNF_RAM ),Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( MUR + RRSe ) + Max( CS,CS ) ) ,( ( Max( MUM,RCSe ) - Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) ) ) ,Min( Max( Max( ( DDR * Const ),BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,RRSe ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / MRS ) + DDR ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( ( DS / CS ) * ( MUR / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Min( AMS ,( Min( DDR ,AMS ) - MDR ) ) )", "choosing": "Max( ( DS + DS ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( Min( MUM ,CS ) - ( RRSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / MDR ) - Max( ( FirstVNF_RAM / MRS ),Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( RRSe + MUR ) + Max( CS,CS ) ) ,( ( Max( ( MUR - ( RMSe + CS ) ),RCSe ) + Min( MUR ,CS ) ) + Max( Max( MLU,RRSe ),( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( CRS ,( BR - FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,MUM ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( Min( BR ,BR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ,( ( Min( CRS ,( BR * FirstVNF_CPU ) ) - ( ( PN / ( RRS + PN ) ) * ( PN * AMS ) ) ) / MRS ) )", "choosing": "( ( Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( CRS ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( ( RMSe + RRSe ) / ( Max( RMSe,DS ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "Max( ( Min( ( CS + RMSe ) ,( MUR / MUC ) ) * ( ( MLU - RRSe ) - Min( RMSe ,MUC ) ) ),( Min( ( MLU - DS ) ,Min( CS ,MUM ) ) + ( ( RCSe + RCSe ) / ( RCSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( DDR ,DDR ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MUC,( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * CRS ) - ( MRS + ( FirstVNF_RAM - AMS ) ) )", "choosing": "Max( DS,Max( Min( ( RMSe * CS ) ,RMSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( DDR * PN ) )", "choosing": "( Max( ( ( RRSe / RCSe ) / DS ),MLU ) + ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,BR ) * ( MDR - MRS ) ) * ( PN * ARS ) )", "choosing": "( ( DS + Max( MLU,MLU ) ) - Max( ( DS - MUR ),Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * Min( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * ( Min( FirstVNF_RAM ,ARS ) * ( DDR * RRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + MUM ) - Min( MUM ,( ( RRSe / MUM ) - Min( RMSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( Min( ( ( AMS + AMS ) * ( MDR + Const ) ) ,BR ),FirstVNF_RAM ) ),( FirstVNF_RAM / MRS ) ) )", "choosing": "Min( Min( ( Max( MLU,( MUM - Max( CS,MLU ) ) ) * ( ( MUR + MUM ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + Max( ( MLU + RRSe ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Max( ( FirstVNF_Mem + ( BR / DDR ) ),AMS ) )", "choosing": "Min( ( Max( RRSe,( ( Min( Min( ( DS + RMSe ) ,( DS + RRSe ) ) ,( DS * Min( MUR ,RMSe ) ) ) / ( ( CS - MUC ) * RMSe ) ) * CS ) ) + Max( MLU,CS ) ) ,( Max( MUM,( MLU / RRSe ) ) + Max( Min( RCSe ,RRSe ),( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( AMS + AMS ) * ( MDR + Const ) ) ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( DS - MUR ),Max( CS,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * ( Min( CRS ,PN ) * BR ) ) - Max( Const,MDR ) ) * Max( Max( RRS,PN ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( FirstVNF_Mem ,Const ) / ( BR - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( ( RRSe - MUR ) ,( DS * DS ) ),( Max( RMSe,MLU ) * ( MLU - RRSe ) ) ) / ( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Max( FirstVNF_CPU,( Min( ( MDR * CRS ) ,DDR ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),( FirstVNF_RAM / MRS ) ) )", "choosing": "( ( DS / CS ) * ( MUC - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS * ARS ) * Max( FirstVNF_CPU_Server,RRS ) ) - ( CRS / MRS ) ) / AMS ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - Min( ( ( DS * RRSe ) + DS ) ,Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS * ARS ) * Max( FirstVNF_CPU_Server,RRS ) ) + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( Min( ( MLU - Max( RCSe,RRSe ) ) ,RCSe ) + Max( MUR,CS ) ) / ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) * ( ( ( PN * Max( Min( ( MDR - FirstVNF_Mem ) ,Min( PN ,RRS ) ),CRS ) ) * FirstVNF_Mem_Server ) * Max( Const,MDR ) ) ) ,( MDR - ( DDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) + ( Min( DS ,RMSe ) - ( RRSe - ( MUM * Max( RRSe,CS ) ) ) ) ) / ( Min( ( RRSe * MUR ) ,( DS * DS ) ) + ( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / CRS ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( FirstVNF_Mem / MRS ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( ( MUM + ( RRSe * DS ) ) * Min( ( MUR * RRSe ) ,Max( ( MUR / MUR ),RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const * FirstVNF_Mem ) ,( ( ( DDR + FirstVNF_RAM ) * RRS ) - PN ) )", "choosing": "Max( ( ( Min( MUR ,MLU ) + ( MUR - MUM ) ) / Min( Min( MUR ,RMSe ) ,( MLU / MUC ) ) ),( Min( Max( RRSe,MUR ) ,( MUR / MUR ) ) - Min( MLU ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ( Min( DDR ,DDR ) / ( FirstVNF_CPU_Server * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) / ( Min( ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( DDR + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - MDR ) ,BR ) * ( DDR * ( RRS / ( FirstVNF_RAM / PN ) ) ) ) ) - Max( ( MRS / FirstVNF_RAM ),Min( ( ( AMS + ( Const + Const ) ) * ( Const + MDR ) ) ,BR ) ) )", "choosing": "Min( ( ( RRSe + CS ) * Max( CS,( DS + ( DS - MUR ) ) ) ) ,( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,MDR ) - ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - MDR ) )", "choosing": "Max( Max( ( Max( CS,RRSe ) * Max( Max( Min( MUR ,RCSe ),RCSe ),CS ) ),MLU ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,Min( CRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( DS,Max( MLU,( CS - RRSe ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2775661084554374}, {"determining": "( ( PN * ( ( DDR / ( DDR * ( AMS + ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - ARS ) ) ) ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( AMS + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( ( MUR - Min( RCSe ,Max( ( Max( DS,MUM ) * ( DS * ( RMSe / MUR ) ) ),( RCSe + RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 0.842911877394636, "obj2": 0.07172296895254329}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,FirstVNF_CPU_Server ) / ACS ) - ( MDR - ( Max( DDR,ACS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( ( MDR * FirstVNF_Mem ) * Min( RRS ,( FirstVNF_Mem + RRS ) ) ) ) )", "choosing": "( ( ( RRSe / MUC ) - Min( RMSe ,MLU ) ) * Min( MUR ,MLU ) )", "obj1": 0.9482758620689655, "obj2": 0.01849580379720876}, {"determining": "( ( BR / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ) )", "obj1": 0.8295019157088123, "obj2": 0.1500414141990453}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) ,ARS ) * ( Max( FirstVNF_CPU,( ( MDR - Min( ARS ,PN ) ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM / MRS ) ) )", "choosing": "Min( Min( ( Max( MLU,( ( DS - ( ( MUC - MLU ) - Min( MUC ,RRSe ) ) ) - RCSe ) ) * ( ( MUR + MUM ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( MUM + Max( RMSe,DS ) ) + MUC ) )", "obj1": 0.710727969348659, "obj2": 0.20643652779731522}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( DDR * RRS ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( ( CS / RCSe ) + ( MUC - MLU ) ) ,( MLU * DS ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6704980842911877, "obj2": 0.22236187426831194}, {"determining": "Min( ( ( BR - ( ( DDR - FirstVNF_RAM ) + ( PN - MRS ) ) ) - ( ( BR / ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Min( DS ,( RMSe / DS ) ) / ( Max( RMSe,( MUR + MUM ) ) + MUR ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 0.7662835249042146, "obj2": 0.1844279753087214}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) + ( Min( ( Min( ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,PN ) ) ) ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ,Min( ( FirstVNF_Mem_Server / Const ) ,( MDR + ARS ) ) ) / AMS ) )", "choosing": "Max( ( ( RMSe * MUM ) - MUM ),( RMSe * ( MUC * MLU ) ) )", "obj1": 0.7950191570881227, "obj2": 0.17509251786252147}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( ( FirstVNF_RAM - ARS ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( DDR + AMS ) ) / ( FirstVNF_CPU_Server + Min( RRS ,Min( ( FirstVNF_Mem_Server / ARS ) ,MRS ) ) ) ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ( FirstVNF_RAM_Server + BR ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( Min( RRSe ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,( Max( DS,Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) ) + ( MUM - ( MUR + MUR ) ) ) ) + ( MLU + ( MUR + MLU ) ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6590038314176245, "obj2": 0.22848122749179894}, {"determining": "( ( BR / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( MDR - ( ( BR + ( Const / FirstVNF_Mem_Server ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,Max( DS,RCSe ) ) * Max( RRSe,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24433803546381383}, {"determining": "Min( ( ( BR - ( ( DDR - FirstVNF_RAM ) + ( PN - MRS ) ) ) - ( ( BR / ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Min( DS ,( RMSe / DS ) ) / ( Max( RMSe,( MUR + MUM ) ) + MUR ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1892554478410262}, {"determining": "( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,Const ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "( ( ( MLU / ( ( ( ( MUC / Max( MUM,DS ) ) / RRSe ) * MLU ) * ( ( Max( CS,Min( MUM ,DS ) ) + RRSe ) / RCSe ) ) ) + ( RCSe / Max( Min( Max( ( Max( CS,RMSe ) + RRSe ),CS ) ,( MLU - MUR ) ),( RRSe + DS ) ) ) ) + Max( Max( MUM,MUR ),( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( MUM - ( MUC - RCSe ) ) ,RCSe ) ,( CS / CS ) ) ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.011855100432494287}, {"determining": "( ( BR / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + MUM ) - ( ( RRSe - RRSe ) / Max( RMSe,RMSe ) ) )", "obj1": 0.8084291187739464, "obj2": 0.15941451052060523}, {"determining": "( ACS - ( MDR - MRS ) )", "choosing": "( Max( ( MUR / DS ),MLU ) + ( MUM + MUC ) )", "obj1": 0.7126436781609196, "obj2": 0.19205692596528787}, {"determining": "Min( ( ( ( Const * MRS ) + ( Min( ( Min( Const ,FirstVNF_CPU ) + RRS ) ,( FirstVNF_RAM / ( DDR - FirstVNF_RAM ) ) ) + PN ) ) + ( ( BR / ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( Max( ( MLU * MUR ),Min( CS ,MUM ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( CS - RCSe ),( MUR - MUR ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.1898712781126619}, {"determining": "( ( BR / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUR * CS ) - RRSe ),RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.8007662835249042, "obj2": 0.1636117573473625}, {"determining": "( ( AMS + FirstVNF_RAM ) * ( Min( Max( MDR,RRS ) ,( FirstVNF_CPU_Server * MDR ) ) + Max( ( RRS - Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / ( ( RMSe + MLU ) - RCSe ) ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,RRSe ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.60727969348659, "obj2": 0.2679551064694199}, {"determining": "( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,ARS ) ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( MUR - MLU ) ) * Max( Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,DS ),( CS / RMSe ) ) )", "obj1": 0.6283524904214559, "obj2": 0.24884824936832975}, {"determining": "( ( ( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ) - ( MDR - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) ) ) - BR ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( ( ( ( ( MUR - DS ) + MUR ) - ( RCSe * ( DS * RMSe ) ) ) + DS ) + ( DS - ( ( MUC - MLU ) - Min( MUC ,RRSe ) ) ) ),MUC ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * CS ) + MUC ) * ( DS * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 0.6340996168582376, "obj2": 0.24661402531723142}, {"determining": "Min( ( Min( Const ,( ACS * ( MRS * FirstVNF_Mem ) ) ) - MDR ) ,( ( ARS - ARS ) / CRS ) )", "choosing": "( ( Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) / ( ( RRSe + CS ) * Min( MLU ,RCSe ) ) ) / ( ( ( RRSe / MUM ) * ( CS * MLU ) ) / Max( ( RCSe + MUC ),Max( ( DS / MLU ),DS ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.007946336171085765}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),Max( MUR,CS ) ) ),Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6187739463601533, "obj2": 0.2639481342424833}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( ( ( MUR * CS ) - RRSe ),RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6149425287356322, "obj2": 0.2668780983558345}, {"determining": "( ( AMS * FirstVNF_RAM ) - ( DDR / RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( MLU + RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,( CS / CS ) ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.009756612589980763}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,( AMS * ARS ) ) + Max( ( FirstVNF_CPU / ARS ),Min( PN ,ARS ) ) ) * ( ( ( ( RRS * FirstVNF_CPU ) * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + ( ( DS * RRSe ) + ( MUR / MUM ) ) ) ) ) * ( ( Min( CS ,CS ) * ( CS * RRSe ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26763926957485257}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6187739463601533, "obj2": 0.2639481342424833}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( ( ( ( FirstVNF_Mem_Server * PN ) / FirstVNF_Mem ) / Min( PN ,BR ) ) + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( ( ( MUR * CS ) - RRSe ),RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6130268199233716, "obj2": 0.2673691926339421}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.009756612589980763}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server + ( CRS / FirstVNF_Mem_Server ) ) + MRS ) ) / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,ACS ) ) ) - ( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( ( ( RMSe - ( ( MLU * Min( DS ,( DS - RRSe ) ) ) * ( CS + RCSe ) ) ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0007993714282739525}, {"determining": "( ( ( ( FirstVNF_CPU * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - Min( DDR ,RRS ) ) )", "choosing": "( ( Min( ( RCSe * RCSe ) ,RCSe ) + Max( MUR,CS ) ) / ( ( ( RRSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0007993714282739525}, {"determining": "( Max( ( Const * CRS ),RRS ) / ( FirstVNF_CPU_Server + ( ARS + FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,( MUC * Max( MUC,RRSe ) ) ) + MUR ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Min( AMS ,( Min( DDR ,AMS ) - MDR ) ) )", "choosing": "Max( ( DS + DS ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR / MDR ) / FirstVNF_RAM_Server ) ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( ( ( MUR / ( ( DS / ( MUM - RRSe ) ) / ( CS + RRSe ) ) ) * MUC ) + DS ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - BR ) - ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( MUC - MUR ) * ( MUM / ( MUR + ( ( MUM - MUC ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,( FirstVNF_Mem - FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( Const + ( Min( FirstVNF_Mem ,MRS ) + ( ( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) ) - ( ( ARS + CRS ) * Const ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - BR ) * ( BR - ( AMS / ( FirstVNF_Mem - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) - Max( ( ( BR / FirstVNF_Mem_Server ) + AMS ),( Const + FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * RRSe ),Min( RMSe ,( MUR / Min( Max( RRSe,( CS - RCSe ) ) ,( MUC / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + DDR ) - Min( FirstVNF_CPU ,MRS ) ) / Max( Min( ( BR / ( FirstVNF_CPU * DDR ) ) ,MDR ),( ( ( Max( Const,ACS ) + ( ( PN / MDR ) - FirstVNF_RAM ) ) / FirstVNF_Mem ) - CRS ) ) )", "choosing": "( Max( ( MUC / Min( DS ,Min( Max( RMSe,RMSe ) ,( DS + Min( RCSe ,MLU ) ) ) ) ),Max( DS,( DS + RMSe ) ) ) + Min( Min( RCSe ,MUM ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - Const ) ),PN ) * FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe * ( Max( Min( ( DS / CS ) ,MUM ),MUM ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const - CRS ) ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) - Min( DDR ,MDR ) )", "choosing": "( ( Max( MUR,DS ) + Min( ( CS + RRSe ) ,DS ) ) / ( RCSe - ( ( MUM / MUR ) * ( MUR * Min( ( ( RMSe * DS ) / Min( DS ,RMSe ) ) ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) - ( Max( CRS,FirstVNF_RAM ) * ( ACS * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_RAM_Server ) * Max( ARS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / BR ) ) )", "choosing": "Max( ( ( MUR - RRSe ) + ( RMSe + RRSe ) ),( ( ( DS + MLU ) * ( CS - MLU ) ) * Max( ( ( DS / MUC ) / Max( ( ( ( RCSe + RRSe ) / RRSe ) + DS ),MUM ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Min( Const ,MDR ) ) * Max( ( FirstVNF_Mem - MDR ),Max( RRS,FirstVNF_RAM ) ) ) ,Max( MRS,DDR ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( DS,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( ( ( CS - MLU ) + ( RMSe * Min( MUM ,( RMSe * CS ) ) ) ),MUM ) / ( RMSe - Max( DS,( RRSe / ( ( RMSe * DS ) / ( MLU - RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR * Const ) - ( Const * FirstVNF_Mem_Server ) ) * ( DDR + FirstVNF_CPU ) ) ,Min( ( Const / ( ACS + DDR ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( MRS,( RRS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUC,( RCSe + ( Min( MUR ,RRSe ) / RCSe ) ) ) - DS ) / Max( ( Max( Max( ( CS - MLU ),Max( MLU,( Min( DS ,CS ) * Min( CS ,CS ) ) ) ),MUR ) * ( ( Min( DS ,Max( CS,MUC ) ) - RMSe ) * Max( ( MUC - Max( CS,MUM ) ),( RRSe - Max( DS,RRSe ) ) ) ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( PN / AMS ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ,( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * ( ACS / ACS ) ) )", "choosing": "( ( ( ( ( MUR + Min( RRSe ,MUM ) ) + MUR ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( ARS / Const ) ) - ( MDR * ( CRS * ARS ) ) )", "choosing": "( ( ( RCSe * Min( MLU ,( RMSe - MLU ) ) ) * ( MUM * MUC ) ) - ( ( RRSe - ( Max( RMSe,( RMSe - ( ( MLU + RRSe ) * ( RCSe - RRSe ) ) ) ) - RMSe ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) - ( MDR - ( FirstVNF_RAM * AMS ) ) )", "choosing": "( Max( ( MUR / ( ( RMSe - RMSe ) - ( Max( Max( RCSe,MUM ),MUR ) * RCSe ) ) ),MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - ( Const + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) * Max( Min( RRS ,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Min( ( FirstVNF_CPU / AMS ) ,Max( DDR,BR ) ) ,( Min( Const ,Min( BR ,ACS ) ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MLU,( RMSe / ( CS - RMSe ) ) ) ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + Min( ACS ,FirstVNF_Mem_Server ) ) - Min( RRS ,RRS ) )", "choosing": "Max( Max( ( RMSe - MLU ),MLU ),( ( MLU + ( ( Min( ( MUR - MUC ) ,( CS + ( DS + MUC ) ) ) / CS ) + ( MUR / Min( ( MLU - Min( CS ,DS ) ) ,Max( ( MUR * MLU ),( DS * MUR ) ) ) ) ) ) / ( ( RCSe * DS ) / ( Min( ( MLU / Min( ( MUR / RCSe ) ,( MUM * RCSe ) ) ) ,MUC ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( FirstVNF_RAM - Max( FirstVNF_Mem,( ACS - FirstVNF_CPU ) ) ) ) - FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Max( ( CRS + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ),( FirstVNF_Mem / Min( Max( ( DDR + FirstVNF_Mem ),ACS ) ,CRS ) ) ) ) ,Const ) )", "choosing": "( Min( CS ,( ( Max( ( RMSe / MLU ),( MUR / CS ) ) / ( DS - RCSe ) ) * MLU ) ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - CRS ) * ( FirstVNF_CPU + CRS ) )", "choosing": "( Min( MUM ,( ( ( MUR * RCSe ) + CS ) - Min( RMSe ,MUR ) ) ) - ( RCSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / ( Max( RRS,Const ) + ( Const + CRS ) ) ) + AMS ) / ( FirstVNF_CPU_Server / ( ( MDR * FirstVNF_Mem ) - Min( MRS ,RRS ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) - RRSe ) * ( Max( ( ( Min( RRSe ,MLU ) + CS ) * ( Min( ( ( MUC - RMSe ) + ( RRSe * MUR ) ) ,Max( RCSe,RCSe ) ) / MUC ) ),RMSe ) - ( RMSe * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) - Min( BR ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) - ( AMS - ( MRS * AMS ) ) )", "choosing": "( Min( Min( ( RMSe - MLU ) ,RCSe ) ,Max( DS,RCSe ) ) / ( RMSe * ( MUC * Max( ( MUC / Max( Min( DS ,MLU ),MUM ) ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MDR ,( ( FirstVNF_CPU + RRS ) / FirstVNF_Mem ) ) - Max( AMS,ACS ) ) * FirstVNF_RAM ) - ( ( ( Min( ( FirstVNF_RAM_Server + RRS ) ,( ( FirstVNF_CPU_Server - DDR ) + MRS ) ) / MRS ) / DDR ) + Const ) )", "choosing": "( Min( MUC ,Min( ( Max( ( MLU * MUM ),DS ) / ( Min( MUC ,MUC ) * DS ) ) ,Min( RCSe ,MUM ) ) ) - ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Max( ( FirstVNF_Mem + ( BR / DDR ) ),AMS ) )", "choosing": "Min( ( Max( RRSe,( ( Min( Min( ( DS + RMSe ) ,( DS + RRSe ) ) ,( DS * Min( MUR ,RMSe ) ) ) / ( ( CS - MUC ) * RMSe ) ) * CS ) ) + Max( MLU,CS ) ) ,( Max( MUM,( MLU / RRSe ) ) + Max( Min( RCSe ,RRSe ),( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_RAM ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "Max( ( Max( Max( RMSe,Max( MUR,MUR ) ),MUR ) - MUR ),Max( ( CS + Max( Min( MUM ,RMSe ),RRSe ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( Min( DDR ,( ( FirstVNF_CPU - ( MDR - CRS ) ) - FirstVNF_RAM_Server ) ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( ( ( Min( DS ,MUC ) / CS ) * ( ( ( MUR / RRSe ) * CS ) + ( Min( MUC ,RCSe ) * DS ) ) ) - MUM ) - RCSe ),MUC ) - ( ( MUR - RMSe ) - Max( MUM,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / FirstVNF_RAM_Server ) ,Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( MUC * RMSe ) ) + ( ( RCSe / MUM ) + Max( RMSe,RMSe ) ) ) / Min( ( ( MUM + Min( ( CS - MUR ) ,MUM ) ) * Min( ( ( RRSe * Max( ( MUC - RRSe ),Max( MUR,CS ) ) ) / CS ) ,RRSe ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,PN ) + ( Const + CRS ) ) - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( Min( ( MUC + RRSe ) ,MUC ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( DDR / CRS ) ) - ( ( ( RRS - PN ) + FirstVNF_RAM ) / ( FirstVNF_CPU - PN ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) * Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( Min( MUC ,( MUC + RRSe ) ) / ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Max( MUR,MUC ) - ( ( Max( MUR,MUC ) - RMSe ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( MUM * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / ( MDR + PN ) ) ,Const ) * ( Max( Const,AMS ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * RCSe ) ,Max( MUR,MLU ) ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( ( Max( BR,AMS ) * MRS ) / FirstVNF_RAM_Server ) * PN ) ) - ( MDR - Const ) )", "choosing": "( ( MUC + ( CS * MUC ) ) + ( Max( ( MUC - MUR ),( CS - RCSe ) ) / Max( ( MUM * DS ),( CS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( CS / Max( ( MLU / RCSe ),( MUM * MUC ) ) ) * ( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / BR ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "( ( MUM / RCSe ) - ( ( ( Max( RRSe,Min( ( MLU + ( MUM + MUC ) ) ,MLU ) ) + ( Max( RCSe,( Min( DS ,RMSe ) - MLU ) ) + ( ( RRSe / CS ) - DS ) ) ) - CS ) / Min( ( RCSe + ( DS * MUC ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - ( DDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_RAM ,DDR ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - ( CRS * ( ( FirstVNF_RAM_Server + ACS ) * FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( ( ( RMSe / ( MUM * MUR ) ) / MUM ) * ( ( MUR + MUM ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( CS - MUC ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "Min( Min( ( Max( MLU,( ( DS - ( ( RCSe + CS ) - Min( MUC ,RRSe ) ) ) - RCSe ) ) * ( ( MUM + MUR ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) / ( Min( Min( ( Const * FirstVNF_Mem ) ,( ( ( DDR + FirstVNF_RAM ) * ( MDR - BR ) ) - PN ) ) ,ARS ) * ( RRS * FirstVNF_RAM ) ) ) - Max( ( MRS / FirstVNF_RAM ),Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( MUR + RRSe ) + Max( CS,CS ) ) ,( ( Max( MUM,RCSe ) - Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) ) ) ,Min( Max( Max( ( DDR * Const ),BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,RRSe ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / MRS ) + DDR ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( ( DS / CS ) * ( MUR / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Min( AMS ,( Min( DDR ,AMS ) - MDR ) ) )", "choosing": "Max( ( DS + DS ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( Min( MUM ,CS ) - ( RRSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / MDR ) - Max( ( FirstVNF_RAM / MRS ),Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( RRSe + MUR ) + Max( CS,CS ) ) ,( ( Max( ( MUR - ( RMSe + CS ) ),RCSe ) + Min( MUR ,CS ) ) + Max( Max( MLU,RRSe ),( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( CRS ,( BR - FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,MUM ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( Min( BR ,BR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ,( ( Min( CRS ,( BR * FirstVNF_CPU ) ) - ( ( PN / ( RRS + PN ) ) * ( PN * AMS ) ) ) / MRS ) )", "choosing": "( ( Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( CRS ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( ( RMSe + RRSe ) / ( Max( RMSe,DS ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "Max( ( Min( ( CS + RMSe ) ,( MUR / MUC ) ) * ( ( MLU - RRSe ) - Min( RMSe ,MUC ) ) ),( Min( ( MLU - DS ) ,Min( CS ,MUM ) ) + ( ( RCSe + RCSe ) / ( RCSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( DDR ,DDR ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MUC,( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * CRS ) - ( MRS + ( FirstVNF_RAM - AMS ) ) )", "choosing": "Max( DS,Max( Min( ( RMSe * CS ) ,RMSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) - ( DDR * PN ) )", "choosing": "( Max( ( ( RRSe / RCSe ) / DS ),MLU ) + ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,BR ) * ( MDR - MRS ) ) * ( PN * ARS ) )", "choosing": "( ( DS + Max( MLU,MLU ) ) - Max( ( DS - MUR ),Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) * Min( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ,Const ) )", "choosing": "( Min( MUM ,MUC ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * ( Min( FirstVNF_RAM ,ARS ) * ( DDR * RRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + MUM ) - Min( MUM ,( ( RRSe / MUM ) - Min( RMSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( Min( ( ( AMS + AMS ) * ( MDR + Const ) ) ,BR ),FirstVNF_RAM ) ),( FirstVNF_RAM / MRS ) ) )", "choosing": "Min( Min( ( Max( MLU,( MUM - Max( CS,MLU ) ) ) * ( ( MUR + MUM ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + Max( ( MLU + RRSe ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( Min( FirstVNF_Mem_Server ,ACS ) * ( BR - ( FirstVNF_CPU * BR ) ) )", "choosing": "( ( ( MUM + RRSe ) + MLU ) - ( ( RRSe - DS ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) / ( FirstVNF_CPU_Server * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) / ( Min( ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( DDR + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - MDR ) ,BR ) * ( DDR * ( RRS / ( FirstVNF_RAM / PN ) ) ) ) ) - Max( ( MRS / FirstVNF_RAM ),Min( ( ( AMS + ( Const + Const ) ) * ( Const + MDR ) ) ,BR ) ) )", "choosing": "Min( ( ( RRSe + CS ) * Max( CS,( DS + ( DS - MUR ) ) ) ) ,( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,Min( CRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( DS,Max( MLU,( CS - RRSe ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2775661084554374}, {"determining": "( ( PN * ( ( DDR / ( DDR * ( AMS + ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - ARS ) ) ) ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( AMS + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( ( MUR - Min( RCSe ,Max( ( Max( DS,MUM ) * ( DS * ( RMSe / MUR ) ) ),( RCSe + RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 0.842911877394636, "obj2": 0.07172296895254329}, {"determining": "( ( ( ( ( RRS * PN ) / FirstVNF_Mem ) / Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( ( ACS * FirstVNF_RAM_Server ) ,RRS ) )", "choosing": "( ( RRSe * CS ) / MUC )", "obj1": 0.7931034482758621, "obj2": 0.1423322318798682}, {"determining": "( ( Max( ( BR + FirstVNF_Mem ),( ARS + MDR ) ) * ( FirstVNF_CPU_Server - Const ) ) - ( ( ARS * CRS ) / ( Min( Min( RRS ,AMS ) ,( MRS / ARS ) ) / DDR ) ) )", "choosing": "Max( ( ( MLU * MUM ) - MUM ),( MUR - Min( Max( Min( MUR ,RMSe ),Min( RCSe ,RMSe ) ) ,RCSe ) ) )", "obj1": 0.9291187739463601, "obj2": 0.02947880479686938}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Const + MRS ) )", "choosing": "( ( MUM - ( DS * MUR ) ) - ( ( MUR - Min( RCSe ,Max( ( ( Min( RRSe ,CS ) + MUC ) * ( DS * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( MLU ,RCSe ) ) )", "obj1": 0.8122605363984674, "obj2": 0.08720315128683923}, {"determining": "Min( ( ( BR - ( ( DDR - FirstVNF_RAM ) + ( PN - MRS ) ) ) - ( ( BR / ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Min( DS ,( RMSe / DS ) ) / ( Max( RMSe,( MUR + MUM ) ) + MUR ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 0.7662835249042146, "obj2": 0.1844279753087214}, {"determining": "( ( ( Min( ACS ,AMS ) / ( ACS + Const ) ) / ( Min( ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_Mem / ARS ) ) / DDR ) ) ,ARS ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM / MRS ) ) )", "choosing": "Min( Min( ( Max( MLU,( RCSe - MUM ) ) * ( ( MUR + MUM ) * CS ) ) ,( RCSe - DS ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + Max( ( MLU + RRSe ),Min( CS ,MLU ) ) ) )", "obj1": 0.710727969348659, "obj2": 0.20591629691746965}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( DDR * RRS ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( ( CS / RCSe ) + ( MUC - MLU ) ) ,( MLU * DS ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6704980842911877, "obj2": 0.22236187426831194}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( ( FirstVNF_RAM - ARS ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( DDR + AMS ) ) / ( FirstVNF_CPU_Server + Min( RRS ,Min( ( FirstVNF_Mem_Server / ARS ) ,MRS ) ) ) ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ( FirstVNF_RAM_Server + BR ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( Min( RRSe ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,( Max( DS,Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) ) + ( MUM - ( MUR + MUR ) ) ) ) + ( MLU + ( MUR + MLU ) ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6590038314176245, "obj2": 0.22848122749179894}, {"determining": "( ( BR / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( MDR - ( ( BR + ( Const / FirstVNF_Mem_Server ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,Max( DS,RCSe ) ) * Max( RRSe,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24433803546381383}, {"determining": "Min( ( ( BR - ( ( DDR - FirstVNF_RAM ) + ( PN - MRS ) ) ) - ( ( BR / ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Min( DS ,( RMSe / DS ) ) / ( Max( RMSe,( MUR + MUM ) ) + MUR ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1892554478410262}, {"determining": "( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,Const ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "( ( ( MLU / ( ( ( ( MUC / Max( MUM,DS ) ) / RRSe ) * MLU ) * ( ( Max( CS,Min( MUM ,DS ) ) + RRSe ) / RCSe ) ) ) + ( RCSe / Max( Min( Max( ( Max( CS,RMSe ) + RRSe ),CS ) ,( MLU - MUR ) ),( RRSe + DS ) ) ) ) + Max( Max( MUM,MUR ),( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( MUM - ( MUC - RCSe ) ) ,RCSe ) ,( CS / CS ) ) ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.011855100432494287}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( ( DS / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9482758620689655, "obj2": 0.01849580379720876}, {"determining": "( ACS - ( MDR - MRS ) )", "choosing": "( Max( ( MUR / DS ),MLU ) + ( MUM + MUC ) )", "obj1": 0.7126436781609196, "obj2": 0.19205692596528787}, {"determining": "Min( ( ( ( Const * MRS ) + ( Min( ( Min( Const ,FirstVNF_CPU ) + RRS ) ,( FirstVNF_RAM / ( DDR - FirstVNF_RAM ) ) ) + PN ) ) + ( ( BR / ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( Max( ( MLU * MUR ),Min( CS ,MUM ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( CS - RCSe ),( MUR - MUR ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.1898712781126619}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) ,MLU ) * Min( ( CS / RMSe ) ,( RCSe + DS ) ) )", "obj1": 0.946360153256705, "obj2": 0.021868247106424727}, {"determining": "( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,ARS ) ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( MUR - MLU ) ) * Max( Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,DS ),( CS / RMSe ) ) )", "obj1": 0.6283524904214559, "obj2": 0.24884824936832975}, {"determining": "( ( ( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ) - ( MDR - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) ) ) - BR ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( ( ( ( ( MUR - DS ) + MUR ) - ( RCSe * ( DS * RMSe ) ) ) + DS ) + ( DS - ( ( MUC - MLU ) - Min( MUC ,RRSe ) ) ) ),MUC ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * CS ) + MUC ) * ( DS * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 0.6340996168582376, "obj2": 0.24661402531723142}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "Min( ( MDR - Max( ( RRS + FirstVNF_RAM ),RRS ) ) ,PN )", "choosing": "( ( Max( ( ( RRSe / RCSe ) / DS ),MLU ) + ( MUC + MLU ) ) / ( ( ( MUC / MUM ) * ( ( DS * DS ) * MLU ) ) / Max( ( MUC + MUM ),Max( RCSe,DS ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.007602994406971843}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "Max( Max( Min( Max( MLU,MUM ) ,( RCSe / MUC ) ),Max( ( RMSe + MUM ),Max( MUR,CS ) ) ),Max( Max( ( RCSe / MLU ),( CS - DS ) ),( ( RCSe + CS ) / Max( MUM,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0018585370072360663}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6187739463601533, "obj2": 0.2639481342424833}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.6053639846743295, "obj2": 0.2683511823453599}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,FirstVNF_CPU_Server ) / ACS ) - ( MDR - ( Max( DDR,ACS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( ( MDR * FirstVNF_Mem ) * Min( RRS ,( FirstVNF_Mem + RRS ) ) ) ) )", "choosing": "( ( ( RRSe / MUC ) - Min( RMSe ,MLU ) ) * Min( MUR ,MLU ) )", "obj1": 0.9482758620689655, "obj2": 0.01849580379720876}, {"determining": "( Max( MRS,ARS ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( ( Min( RRS ,MDR ) * CRS ),RRS ),Min( ( ( Const - ACS ) - ( Max( ACS,FirstVNF_Mem ) / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * MUC ) ) - ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( ( RCSe + Max( RMSe,RCSe ) ) - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.2651211698961255}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.009756612589980763}, {"determining": "( ( AMS + FirstVNF_RAM ) * ( Min( Max( MDR,RRS ) ,( FirstVNF_CPU_Server * MDR ) ) + Max( ( RRS - Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / ( ( RMSe + MLU ) - RCSe ) ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,RRSe ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.60727969348659, "obj2": 0.2679551064694199}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,( AMS * ARS ) ) + Max( ( FirstVNF_CPU / ARS ),Min( PN ,ARS ) ) ) * ( ( ( ( RRS * FirstVNF_CPU ) * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + ( ( DS * RRSe ) + ( MUR / MUM ) ) ) ) ) * ( ( Min( CS ,CS ) * ( CS * RRSe ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26763926957485257}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( ( ( ( FirstVNF_Mem_Server * PN ) / FirstVNF_Mem ) / Min( PN ,BR ) ) + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( ( ( MUR * CS ) - RRSe ),RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6130268199233716, "obj2": 0.2673691926339421}, {"determining": "( ( AMS * FirstVNF_RAM ) - ( DDR / RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( MLU + RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,( CS / CS ) ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.009756612589980763}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6187739463601533, "obj2": 0.2639481342424833}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - ( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) ) )", "choosing": "Max( Max( ( RMSe - MLU ),MLU ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0007993714282739525}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server + ( CRS / FirstVNF_Mem_Server ) ) + MRS ) ) / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,ACS ) ) ) - ( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / ( ( ( RMSe - ( ( MLU * Min( DS ,( DS - RRSe ) ) ) * ( CS + RCSe ) ) ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0007993714282739525}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( ( ( ( FirstVNF_Mem_Server * PN ) / Min( BR ,BR ) ) / Min( PN ,BR ) ) + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( ( ( MUR * CS ) - Max( RMSe,( MUR + MUM ) ) ),RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6130268199233716, "obj2": 0.2673691926339421}, {"determining": "( Max( FirstVNF_CPU,MDR ) - ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - MDR ) )", "choosing": "Max( Max( ( Max( CS,RRSe ) * Max( Max( Min( MUR ,RCSe ),RCSe ),CS ) ),MLU ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * CRS ),RRS ) / ( FirstVNF_CPU_Server + ( ARS + FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,( MUC * Max( MUC,RRSe ) ) ) + MUR ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Min( AMS ,( Min( DDR ,AMS ) - MDR ) ) )", "choosing": "Max( ( DS + DS ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR / MDR ) / FirstVNF_RAM_Server ) ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( ( ( MUR / ( ( DS / ( MUM - RRSe ) ) / ( CS + RRSe ) ) ) * MUC ) + DS ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - BR ) - ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( MUC - MUR ) * ( MUM / ( MUR + ( ( MUM - MUC ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,( FirstVNF_Mem - FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( Const + ( Min( FirstVNF_Mem ,MRS ) + ( ( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) ) - ( ( ARS + CRS ) * Const ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - BR ) * ( BR - ( AMS / ( FirstVNF_Mem - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) - Max( ( ( BR / FirstVNF_Mem_Server ) + AMS ),( Const + FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * RRSe ),Min( RMSe ,( MUR / Min( Max( RRSe,( CS - RCSe ) ) ,( MUC / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + DDR ) - Min( FirstVNF_CPU ,MRS ) ) / Max( Min( ( BR / ( FirstVNF_CPU * DDR ) ) ,MDR ),( ( ( Max( Const,ACS ) + ( ( PN / MDR ) - FirstVNF_RAM ) ) / FirstVNF_Mem ) - CRS ) ) )", "choosing": "( Max( ( MUC / Min( DS ,Min( Max( RMSe,RMSe ) ,( DS + Min( RCSe ,MLU ) ) ) ) ),Max( DS,( DS + RMSe ) ) ) + Min( Min( RCSe ,MUM ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - Const ) ),PN ) * FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe * ( Max( Min( ( DS / CS ) ,MUM ),MUM ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const - CRS ) ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) - Min( DDR ,MDR ) )", "choosing": "( ( Max( MUR,DS ) + Min( ( CS + RRSe ) ,DS ) ) / ( RCSe - ( ( MUM / MUR ) * ( MUR * Min( ( ( RMSe * DS ) / Min( DS ,RMSe ) ) ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) - ( Max( CRS,FirstVNF_RAM ) * ( ACS * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_RAM_Server ) * Max( ARS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / BR ) ) )", "choosing": "Max( ( ( MUR - RRSe ) + ( RMSe + RRSe ) ),( ( ( DS + MLU ) * ( CS - MLU ) ) * Max( ( ( DS / MUC ) / Max( ( ( ( RCSe + RRSe ) / RRSe ) + DS ),MUM ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Min( Const ,MDR ) ) * Max( ( FirstVNF_Mem - MDR ),Max( RRS,FirstVNF_RAM ) ) ) ,Max( MRS,DDR ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( DS,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( ( ( CS - MLU ) + ( RMSe * Min( MUM ,( RMSe * CS ) ) ) ),MUM ) / ( RMSe - Max( DS,( RRSe / ( ( RMSe * DS ) / ( MLU - RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR * Const ) - ( Const * FirstVNF_Mem_Server ) ) * ( DDR + FirstVNF_CPU ) ) ,Min( ( Const / ( ACS + DDR ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( MRS,( RRS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUC,( RCSe + ( Min( MUR ,RRSe ) / RCSe ) ) ) - DS ) / Max( ( Max( Max( ( CS - MLU ),Max( MLU,( Min( DS ,CS ) * Min( CS ,CS ) ) ) ),MUR ) * ( ( Min( DS ,Max( CS,MUC ) ) - RMSe ) * Max( ( MUC - Max( CS,MUM ) ),( RRSe - Max( DS,RRSe ) ) ) ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( PN / AMS ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ,( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * ( ACS / ACS ) ) )", "choosing": "( ( ( ( ( MUR + Min( RRSe ,MUM ) ) + MUR ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( ARS / Const ) ) - ( MDR * ( CRS * ARS ) ) )", "choosing": "( ( ( RCSe * Min( MLU ,( RMSe - MLU ) ) ) * ( MUM * MUC ) ) - ( ( RRSe - ( Max( RMSe,( RMSe - ( ( MLU + RRSe ) * ( RCSe - RRSe ) ) ) ) - RMSe ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) - ( MDR - ( FirstVNF_RAM * AMS ) ) )", "choosing": "( Max( ( MUR / ( ( RMSe - RMSe ) - ( Max( Max( RCSe,MUM ),MUR ) * RCSe ) ) ),MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - ( Const + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) * Max( Min( RRS ,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Min( ( FirstVNF_CPU / AMS ) ,Max( DDR,BR ) ) ,( Min( Const ,Min( BR ,ACS ) ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MLU,( RMSe / ( CS - RMSe ) ) ) ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + Min( ACS ,FirstVNF_Mem_Server ) ) - Min( RRS ,RRS ) )", "choosing": "Max( Max( ( RMSe - MLU ),MLU ),( ( MLU + ( ( Min( ( MUR - MUC ) ,( CS + ( DS + MUC ) ) ) / CS ) + ( MUR / Min( ( MLU - Min( CS ,DS ) ) ,Max( ( MUR * MLU ),( DS * MUR ) ) ) ) ) ) / ( ( RCSe * DS ) / ( Min( ( MLU / Min( ( MUR / RCSe ) ,( MUM * RCSe ) ) ) ,MUC ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( FirstVNF_RAM - Max( FirstVNF_Mem,( ACS - FirstVNF_CPU ) ) ) ) - FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Max( ( CRS + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ),( FirstVNF_Mem / Min( Max( ( DDR + FirstVNF_Mem ),ACS ) ,CRS ) ) ) ) ,Const ) )", "choosing": "( Min( CS ,( ( Max( ( RMSe / MLU ),( MUR / CS ) ) / ( DS - RCSe ) ) * MLU ) ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - CRS ) * ( FirstVNF_CPU + CRS ) )", "choosing": "( Min( MUM ,( ( ( MUR * RCSe ) + CS ) - Min( RMSe ,MUR ) ) ) - ( RCSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / ( Max( RRS,Const ) + ( Const + CRS ) ) ) + AMS ) / ( FirstVNF_CPU_Server / ( ( MDR * FirstVNF_Mem ) - Min( MRS ,RRS ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) - RRSe ) * ( Max( ( ( Min( RRSe ,MLU ) + CS ) * ( Min( ( ( MUC - RMSe ) + ( RRSe * MUR ) ) ,Max( RCSe,RCSe ) ) / MUC ) ),RMSe ) - ( RMSe * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) - Min( BR ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) - ( AMS - ( MRS * AMS ) ) )", "choosing": "( Min( Min( ( RMSe - MLU ) ,RCSe ) ,Max( DS,RCSe ) ) / ( RMSe * ( MUC * Max( ( MUC / Max( Min( DS ,MLU ),MUM ) ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MDR ,( ( FirstVNF_CPU + RRS ) / FirstVNF_Mem ) ) - Max( AMS,ACS ) ) * FirstVNF_RAM ) - ( ( ( Min( ( FirstVNF_RAM_Server + RRS ) ,( ( FirstVNF_CPU_Server - DDR ) + MRS ) ) / MRS ) / DDR ) + Const ) )", "choosing": "( Min( MUC ,Min( ( Max( ( MLU * MUM ),DS ) / ( Min( MUC ,MUC ) * DS ) ) ,Min( RCSe ,MUM ) ) ) - ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Max( ( FirstVNF_Mem + ( BR / DDR ) ),AMS ) )", "choosing": "Min( ( Max( RRSe,( ( Min( Min( ( DS + RMSe ) ,( DS + RRSe ) ) ,( DS * Min( MUR ,RMSe ) ) ) / ( ( CS - MUC ) * RMSe ) ) * CS ) ) + Max( MLU,CS ) ) ,( Max( MUM,( MLU / RRSe ) ) + Max( Min( RCSe ,RRSe ),( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_RAM ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "Max( ( Max( Max( RMSe,Max( MUR,MUR ) ),MUR ) - MUR ),Max( ( CS + Max( Min( MUM ,RMSe ),RRSe ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( Min( DDR ,( ( FirstVNF_CPU - ( MDR - CRS ) ) - FirstVNF_RAM_Server ) ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( ( ( Min( DS ,MUC ) / CS ) * ( ( ( MUR / RRSe ) * CS ) + ( Min( MUC ,RCSe ) * DS ) ) ) - MUM ) - RCSe ),MUC ) - ( ( MUR - RMSe ) - Max( MUM,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / FirstVNF_RAM_Server ) ,Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( MUC * RMSe ) ) + ( ( RCSe / MUM ) + Max( RMSe,RMSe ) ) ) / Min( ( ( MUM + Min( ( CS - MUR ) ,MUM ) ) * Min( ( ( RRSe * Max( ( MUC - RRSe ),Max( MUR,CS ) ) ) / CS ) ,RRSe ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,PN ) + ( Const + CRS ) ) - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( Min( ( MUC + RRSe ) ,MUC ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( DDR / CRS ) ) - ( ( ( RRS - PN ) + FirstVNF_RAM ) / ( FirstVNF_CPU - PN ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) * Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( Min( MUC ,( MUC + RRSe ) ) / ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Max( MUR,MUC ) - ( ( Max( MUR,MUC ) - RMSe ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( MUM * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / ( MDR + PN ) ) ,Const ) * ( Max( Const,AMS ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * RCSe ) ,Max( MUR,MLU ) ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( ( Max( BR,AMS ) * MRS ) / FirstVNF_RAM_Server ) * PN ) ) - ( MDR - Const ) )", "choosing": "( ( MUC + ( CS * MUC ) ) + ( Max( ( MUC - MUR ),( CS - RCSe ) ) / Max( ( MUM * DS ),( CS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( CS / Max( ( MLU / RCSe ),( MUM * MUC ) ) ) * ( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / BR ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "( ( MUM / RCSe ) - ( ( ( Max( RRSe,Min( ( MLU + ( MUM + MUC ) ) ,MLU ) ) + ( Max( RCSe,( Min( DS ,RMSe ) - MLU ) ) + ( ( RRSe / CS ) - DS ) ) ) - CS ) / Min( ( RCSe + ( DS * MUC ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - ( DDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_RAM ,DDR ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - ( CRS * ( ( FirstVNF_RAM_Server + ACS ) * FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( ( ( RMSe / ( MUM * MUR ) ) / MUM ) * ( ( MUR + MUM ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( CS - MUC ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "Min( Min( ( Max( MLU,( ( DS - ( ( RCSe + CS ) - Min( MUC ,RRSe ) ) ) - RCSe ) ) * ( ( MUM + MUR ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) / ( Min( Min( ( Const * FirstVNF_Mem ) ,( ( ( DDR + FirstVNF_RAM ) * ( MDR - BR ) ) - PN ) ) ,ARS ) * ( RRS * FirstVNF_RAM ) ) ) - Max( ( MRS / FirstVNF_RAM ),Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( MUR + RRSe ) + Max( CS,CS ) ) ,( ( Max( MUM,RCSe ) - Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) ) ) ,Min( Max( Max( ( DDR * Const ),BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,RRSe ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / MRS ) + DDR ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( ( DS / CS ) * ( MUR / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Min( AMS ,( Min( DDR ,AMS ) - MDR ) ) )", "choosing": "Max( ( DS + DS ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( Min( MUM ,CS ) - ( RRSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / MDR ) - Max( ( FirstVNF_RAM / MRS ),Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( RRSe + MUR ) + Max( CS,CS ) ) ,( ( Max( ( MUR - ( RMSe + CS ) ),RCSe ) + Min( MUR ,CS ) ) + Max( Max( MLU,RRSe ),( MLU * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( CRS ,( BR - FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,MUM ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( Min( BR ,BR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUM / RCSe ) - Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ,( ( Min( CRS ,( BR * FirstVNF_CPU ) ) - ( ( PN / ( RRS + PN ) ) * ( PN * AMS ) ) ) / MRS ) )", "choosing": "( ( Min( Min( CS ,MUR ) ,( RCSe + RRSe ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( CRS ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) - ( FirstVNF_Mem_Server * DDR ) ) ,( ( ARS + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( ( RMSe + RRSe ) / ( Max( RMSe,DS ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "Max( ( Min( ( CS + RMSe ) ,( MUR / MUC ) ) * ( ( MLU - RRSe ) - Min( RMSe ,MUC ) ) ),( Min( ( MLU - DS ) ,Min( CS ,MUM ) ) + ( ( RCSe + RCSe ) / ( RCSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( DDR ,DDR ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MUC,( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * CRS ) - ( MRS + ( FirstVNF_RAM - AMS ) ) )", "choosing": "Max( DS,Max( Min( ( RMSe * CS ) ,RMSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( Max( ARS,ACS ) ,DDR ) - ( AMS - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( Max( ( ( MUM * MUC ) - Min( MLU ,CS ) ),( ( MLU * DS ) - MUM ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) * ( BR - ( FirstVNF_CPU * BR ) ) )", "choosing": "( ( ( MUM + RRSe ) + MLU ) - ( ( RRSe - DS ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,Max( MUR,MLU ) ) - ( MLU * DS ) )", "obj1": 0.5862068965517241, "obj2": 0.2942380699522149}, {"determining": "( Min( MRS ,FirstVNF_Mem ) - ( ( ARS * CRS ) / ( Min( ( ACS + FirstVNF_Mem ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( ( MUR * CS ) - RRSe ),( ( Min( Min( MUC ,MUR ) ,RMSe ) / Min( ( ( DS / MUC ) / RRSe ) ,( RCSe - DS ) ) ) * ( MUC - RRSe ) ) ) / MLU )", "obj1": 0.9099616858237548, "obj2": 0.0420109442984921}, {"determining": "Min( ( ( BR - ( ( DDR - FirstVNF_RAM ) + ( PN - MRS ) ) ) - ( ( BR / ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Min( DS ,( RMSe / DS ) ) / ( Max( RMSe,( MUR + MUM ) ) + MUR ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 0.7662835249042146, "obj2": 0.1844279753087214}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Const + MRS ) )", "choosing": "( ( MUM - ( DS * MUR ) ) - ( ( MUR - Min( RCSe ,Max( ( ( Min( RRSe ,CS ) + MUC ) * ( DS * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( MLU ,RCSe ) ) )", "obj1": 0.8122605363984674, "obj2": 0.08720315128683923}, {"determining": "( Min( ARS ,BR ) - ( Const - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * ( ( MUC - MUC ) - MUR ) ) * RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.8448275862068966, "obj2": 0.06907213620261439}, {"determining": "( ( ( ( ( RRS * PN ) / FirstVNF_Mem ) / Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( ( ACS * FirstVNF_RAM_Server ) ,RRS ) )", "choosing": "( ( RRSe * CS ) / MUC )", "obj1": 0.7931034482758621, "obj2": 0.1423322318798682}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MRS + Min( ( BR - FirstVNF_Mem_Server ) ,DDR ) ) ) / FirstVNF_Mem ) / Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "Max( ( Min( RRSe ,RRSe ) + DS ),( RRSe * RMSe ) )", "obj1": 0.8103448275862069, "obj2": 0.1283943263365216}, {"determining": "( ( Max( ( BR + FirstVNF_Mem ),( ARS + MDR ) ) * ( FirstVNF_CPU_Server - Const ) ) - ( ( ARS * CRS ) / ( Min( Min( RRS ,AMS ) ,( MRS / ARS ) ) / DDR ) ) )", "choosing": "Max( ( ( MLU * MUM ) - MUM ),( MUR - Min( Max( Min( MUR ,RMSe ),Min( RCSe ,RMSe ) ) ,RCSe ) ) )", "obj1": 0.9291187739463601, "obj2": 0.02947880479686938}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( DDR * RRS ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( ( CS / RCSe ) + ( MUC - MLU ) ) ,( MLU * DS ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6704980842911877, "obj2": 0.22236187426831194}, {"determining": "( ACS - ( MDR - MRS ) )", "choosing": "( Max( ( MUR / DS ),MLU ) + ( MUM + MUC ) )", "obj1": 0.6839080459770115, "obj2": 0.20350750586661526}, {"determining": "( ( PN * ( ( DDR / ( DDR * ( AMS + ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - ARS ) ) ) ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( AMS + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( ( MUR - Min( RCSe ,Max( ( Max( DS,MUM ) * ( DS * ( RMSe / MUR ) ) ),( RCSe + RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 0.842911877394636, "obj2": 0.07172296895254329}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( ( FirstVNF_RAM - ARS ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( DDR + AMS ) ) / ( FirstVNF_CPU_Server + Min( RRS ,Min( ( FirstVNF_Mem_Server / ARS ) ,MRS ) ) ) ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ( FirstVNF_RAM_Server + BR ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( Min( RRSe ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,( Max( DS,Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) ) + ( MUM - ( MUR + MUR ) ) ) ) + ( MLU + ( MUR + MLU ) ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6590038314176245, "obj2": 0.22848122749179894}, {"determining": "( ( BR / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( MDR - ( ( BR + ( Const / FirstVNF_Mem_Server ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,Max( DS,RCSe ) ) * Max( RRSe,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24433803546381383}, {"determining": "Min( ( ( BR - ( ( DDR - FirstVNF_RAM ) + ( PN - MRS ) ) ) - ( ( BR / ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Min( DS ,( RMSe / DS ) ) / ( Max( RMSe,( MUR + MUM ) ) + MUR ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 0.7452107279693486, "obj2": 0.1892554478410262}, {"determining": "( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,Const ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "( ( ( MLU / ( ( ( ( MUC / Max( MUM,DS ) ) / RRSe ) * MLU ) * ( ( Max( CS,Min( MUM ,DS ) ) + RRSe ) / RCSe ) ) ) + ( RCSe / Max( Min( Max( ( Max( CS,RMSe ) + RRSe ),CS ) ,( MLU - MUR ) ),( RRSe + DS ) ) ) ) + Max( Max( MUM,MUR ),( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( MUM - ( MUC - RCSe ) ) ,RCSe ) ,( CS / CS ) ) ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.011855100432494287}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,Min( CRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( DS,Max( MLU,( CS - RRSe ) ) )", "obj1": 0.5957854406130269, "obj2": 0.2775661084554374}, {"determining": "( Min( MRS ,MRS ) - ( ( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * Min( Min( Const ,FirstVNF_Mem ) ,FirstVNF_RAM ) ) ) - Max( Max( Max( PN,FirstVNF_RAM ),( AMS * PN ) ),( FirstVNF_RAM / MRS ) ) ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Max( ( ( MLU * Max( MLU,( Min( ( MUC / MUC ) ,RMSe ) - RCSe ) ) ) - MUM ),( MUR - Min( RCSe ,Max( ( ( ( RRSe * CS ) + MUC ) * ( DS * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) )", "obj1": 0.6992337164750958, "obj2": 0.2007402669396079}, {"determining": "( ACS - ( MDR - MRS ) )", "choosing": "( Max( ( MUR / DS ),MLU ) + ( MUM + MUC ) )", "obj1": 0.7126436781609196, "obj2": 0.19205692596528787}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,FirstVNF_CPU_Server ) / ACS ) - ( MDR - ( Max( DDR,ACS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( ( MDR * FirstVNF_Mem ) * Min( RRS ,( FirstVNF_Mem + RRS ) ) ) ) )", "choosing": "( ( ( RRSe / MUC ) - Min( RMSe ,MLU ) ) * Min( MUR ,MLU ) )", "obj1": 0.9482758620689655, "obj2": 0.01849580379720876}, {"determining": "( ( ( Min( MRS ,( MRS - Const ) ) - Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "Max( ( ( MLU + MUM ) - MUM ),( MUR - Min( RCSe ,Max( ( ( ( RRSe * ( MUC / CS ) ) + MUC ) * ( DS * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) )", "obj1": 0.8026819923371648, "obj2": 0.1338330237951092}, {"determining": "Min( ( ( ( Const * MRS ) + ( Min( ( Min( Const ,FirstVNF_CPU ) + RRS ) ,( FirstVNF_RAM / ( DDR - FirstVNF_RAM ) ) ) + PN ) ) + ( ( BR / ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( Max( ( MLU * MUR ),Min( CS ,MUM ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( CS - RCSe ),( MUR - MUR ) ) ) )", "obj1": 0.7241379310344828, "obj2": 0.1898712781126619}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) ,MLU ) * Min( ( CS / RMSe ) ,( RCSe + DS ) ) )", "obj1": 0.946360153256705, "obj2": 0.021868247106424727}, {"determining": "( ( ( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ) - ( MDR - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) ) ) - BR ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( ( ( ( ( MUR - DS ) + MUR ) - ( RCSe * ( DS * RMSe ) ) ) + DS ) + ( DS - ( ( MUC - MLU ) - Min( MUC ,RRSe ) ) ) ),MUC ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * CS ) + MUC ) * ( DS * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 0.6340996168582376, "obj2": 0.24661402531723142}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,ARS ) ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( MUR - MLU ) ) * Max( Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,DS ),( CS / RMSe ) ) )", "obj1": 0.6283524904214559, "obj2": 0.24884824936832975}, {"determining": "( Max( MRS,ARS ) * ( ( ( ACS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Max( ( DDR * Min( ACS ,AMS ) ),PN ) ),( Min( FirstVNF_CPU_Server ,( AMS * ( DDR - Const ) ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / ( ( RMSe - MLU ) / ( ( ( RCSe / MLU ) * MUM ) * ( MUR + MUC ) ) ) ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + MUR ) - ( CS + RCSe ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( ( MUR * MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6168582375478927, "obj2": 0.26025487958474686}, {"determining": "Min( ( MDR - Max( ( RRS + FirstVNF_RAM ),RRS ) ) ,PN )", "choosing": "( ( Max( ( ( RRSe / RCSe ) / DS ),MLU ) + ( MUC + MLU ) ) / ( ( ( MUC / MUM ) * ( ( DS * DS ) * MLU ) ) / Max( ( MUC + MUM ),Max( RCSe,DS ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.007602994406971843}, {"determining": "( Max( MRS,ARS ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( ( Min( RRS ,MDR ) * CRS ),RRS ),Min( ( ( Const - ACS ) - ( Max( ACS,FirstVNF_Mem ) / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * MUC ) ) - ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( ( RCSe + Max( RMSe,RCSe ) ) - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.2651211698961255}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.6053639846743295, "obj2": 0.2683511823453599}, {"determining": "Min( ( MDR - Max( ACS,RRS ) ) ,( ( Min( CRS ,( BR * FirstVNF_CPU ) ) - ( ( PN + ( RRS + Min( Min( CRS ,FirstVNF_Mem_Server ) ,PN ) ) ) * ( PN * AMS ) ) ) / MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) + Max( Max( MLU,DS ),Max( RCSe,( Max( ( MUR / Max( DS,RCSe ) ),MLU ) / RRSe ) ) ) ) )", "obj1": 0.9942528735632183, "obj2": 0.005837176848617453}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2557621972692562}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( ( DS / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9482758620689655, "obj2": 0.01849580379720876}, {"determining": "( Max( Const,Min( ACS ,( BR - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Const * ( ( Const - BR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUC - RCSe ) ,( ( Max( RCSe,CS ) + ( RCSe - RMSe ) ) + Max( ( MLU + CS ),Min( MLU ,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "( ( AMS * FirstVNF_RAM ) - ( DDR / RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( MLU + RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,( CS / CS ) ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.009756612589980763}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( AMS + FirstVNF_RAM ) * ( Min( Max( MDR,RRS ) ,( FirstVNF_CPU_Server * MDR ) ) + Max( ( RRS - Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / ( ( RMSe + MLU ) - RCSe ) ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,RRSe ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.60727969348659, "obj2": 0.2679551064694199}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,( AMS * ARS ) ) + Max( ( FirstVNF_CPU / ARS ),Min( PN ,ARS ) ) ) * ( ( ( ( RRS * FirstVNF_CPU ) * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + ( ( DS * RRSe ) + ( MUR / MUM ) ) ) ) ) * ( ( Min( CS ,CS ) * ( CS * RRSe ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26763926957485257}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2557621972692562}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( ( ( ( FirstVNF_Mem_Server * PN ) / FirstVNF_Mem ) / Min( PN ,BR ) ) + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( ( ( MUR * CS ) - RRSe ),RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6130268199233716, "obj2": 0.2673691926339421}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.009756612589980763}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - ( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) ) )", "choosing": "Max( Max( ( RMSe - MLU ),MLU ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0007993714282739525}, {"determining": "( ( Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) ) - ( ( MDR - ( DDR + MRS ) ) - Min( MRS ,BR ) ) )", "choosing": "( Max( ( MLU * MUR ),( CS / MUM ) ) + ( Max( MUM,( ( DS - CS ) * RCSe ) ) / Max( ( CS - RCSe ),( MUR - MUR ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0007993714282739525}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( ( ( ( FirstVNF_Mem_Server * PN ) / Min( BR ,BR ) ) / Min( PN ,BR ) ) + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( ( ( MUR * CS ) - Max( RMSe,( MUR + MUM ) ) ),RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6130268199233716, "obj2": 0.2673691926339421}, {"determining": "( ( ( Min( DDR ,DDR ) / ( FirstVNF_CPU_Server * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) / ( Min( ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( DDR + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - MDR ) ,BR ) * ( DDR * ( RRS / ( FirstVNF_RAM / PN ) ) ) ) ) - Max( ( MRS / FirstVNF_RAM ),Min( ( ( AMS + ( Const + Const ) ) * ( Const + MDR ) ) ,BR ) ) )", "choosing": "Min( ( ( RRSe + CS ) * Max( CS,( DS + ( DS - MUR ) ) ) ) ,( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,MDR ) - ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - MDR ) )", "choosing": "Max( Max( ( Max( CS,RRSe ) * Max( Max( Min( MUR ,RCSe ),RCSe ),CS ) ),MLU ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * CRS ),RRS ) / ( FirstVNF_CPU_Server + ( ARS + FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,( MUC * Max( MUC,RRSe ) ) ) + MUR ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Min( AMS ,( Min( DDR ,AMS ) - MDR ) ) )", "choosing": "Max( ( DS + DS ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR / MDR ) / FirstVNF_RAM_Server ) ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( ( ( MUR / ( ( DS / ( MUM - RRSe ) ) / ( CS + RRSe ) ) ) * MUC ) + DS ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - BR ) - ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( MUC - MUR ) * ( MUM / ( MUR + ( ( MUM - MUC ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,( FirstVNF_Mem - FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( Const + ( Min( FirstVNF_Mem ,MRS ) + ( ( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) ) - ( ( ARS + CRS ) * Const ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - BR ) * ( BR - ( AMS / ( FirstVNF_Mem - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) - Max( ( ( BR / FirstVNF_Mem_Server ) + AMS ),( Const + FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * RRSe ),Min( RMSe ,( MUR / Min( Max( RRSe,( CS - RCSe ) ) ,( MUC / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + DDR ) - Min( FirstVNF_CPU ,MRS ) ) / Max( Min( ( BR / ( FirstVNF_CPU * DDR ) ) ,MDR ),( ( ( Max( Const,ACS ) + ( ( PN / MDR ) - FirstVNF_RAM ) ) / FirstVNF_Mem ) - CRS ) ) )", "choosing": "( Max( ( MUC / Min( DS ,Min( Max( RMSe,RMSe ) ,( DS + Min( RCSe ,MLU ) ) ) ) ),Max( DS,( DS + RMSe ) ) ) + Min( Min( RCSe ,MUM ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - Const ) ),PN ) * FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe * ( Max( Min( ( DS / CS ) ,MUM ),MUM ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const - CRS ) ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) - Min( DDR ,MDR ) )", "choosing": "( ( Max( MUR,DS ) + Min( ( CS + RRSe ) ,DS ) ) / ( RCSe - ( ( MUM / MUR ) * ( MUR * Min( ( ( RMSe * DS ) / Min( DS ,RMSe ) ) ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) - ( Max( CRS,FirstVNF_RAM ) * ( ACS * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_RAM_Server ) * Max( ARS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / BR ) ) )", "choosing": "Max( ( ( MUR - RRSe ) + ( RMSe + RRSe ) ),( ( ( DS + MLU ) * ( CS - MLU ) ) * Max( ( ( DS / MUC ) / Max( ( ( ( RCSe + RRSe ) / RRSe ) + DS ),MUM ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Min( Const ,MDR ) ) * Max( ( FirstVNF_Mem - MDR ),Max( RRS,FirstVNF_RAM ) ) ) ,Max( MRS,DDR ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( DS,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( ( ( CS - MLU ) + ( RMSe * Min( MUM ,( RMSe * CS ) ) ) ),MUM ) / ( RMSe - Max( DS,( RRSe / ( ( RMSe * DS ) / ( MLU - RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR * Const ) - ( Const * FirstVNF_Mem_Server ) ) * ( DDR + FirstVNF_CPU ) ) ,Min( ( Const / ( ACS + DDR ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( MRS,( RRS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUC,( RCSe + ( Min( MUR ,RRSe ) / RCSe ) ) ) - DS ) / Max( ( Max( Max( ( CS - MLU ),Max( MLU,( Min( DS ,CS ) * Min( CS ,CS ) ) ) ),MUR ) * ( ( Min( DS ,Max( CS,MUC ) ) - RMSe ) * Max( ( MUC - Max( CS,MUM ) ),( RRSe - Max( DS,RRSe ) ) ) ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( PN / AMS ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ,( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * ( ACS / ACS ) ) )", "choosing": "( ( ( ( ( MUR + Min( RRSe ,MUM ) ) + MUR ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( ARS / Const ) ) - ( MDR * ( CRS * ARS ) ) )", "choosing": "( ( ( RCSe * Min( MLU ,( RMSe - MLU ) ) ) * ( MUM * MUC ) ) - ( ( RRSe - ( Max( RMSe,( RMSe - ( ( MLU + RRSe ) * ( RCSe - RRSe ) ) ) ) - RMSe ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) - ( MDR - ( FirstVNF_RAM * AMS ) ) )", "choosing": "( Max( ( MUR / ( ( RMSe - RMSe ) - ( Max( Max( RCSe,MUM ),MUR ) * RCSe ) ) ),MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - ( Const + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) * Max( Min( RRS ,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Min( ( FirstVNF_CPU / AMS ) ,Max( DDR,BR ) ) ,( Min( Const ,Min( BR ,ACS ) ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MLU,( RMSe / ( CS - RMSe ) ) ) ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + Min( ACS ,FirstVNF_Mem_Server ) ) - Min( RRS ,RRS ) )", "choosing": "Max( Max( ( RMSe - MLU ),MLU ),( ( MLU + ( ( Min( ( MUR - MUC ) ,( CS + ( DS + MUC ) ) ) / CS ) + ( MUR / Min( ( MLU - Min( CS ,DS ) ) ,Max( ( MUR * MLU ),( DS * MUR ) ) ) ) ) ) / ( ( RCSe * DS ) / ( Min( ( MLU / Min( ( MUR / RCSe ) ,( MUM * RCSe ) ) ) ,MUC ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( FirstVNF_RAM - Max( FirstVNF_Mem,( ACS - FirstVNF_CPU ) ) ) ) - FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Max( ( CRS + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ),( FirstVNF_Mem / Min( Max( ( DDR + FirstVNF_Mem ),ACS ) ,CRS ) ) ) ) ,Const ) )", "choosing": "( Min( CS ,( ( Max( ( RMSe / MLU ),( MUR / CS ) ) / ( DS - RCSe ) ) * MLU ) ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - CRS ) * ( FirstVNF_CPU + CRS ) )", "choosing": "( Min( MUM ,( ( ( MUR * RCSe ) + CS ) - Min( RMSe ,MUR ) ) ) - ( RCSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / ( Max( RRS,Const ) + ( Const + CRS ) ) ) + AMS ) / ( FirstVNF_CPU_Server / ( ( MDR * FirstVNF_Mem ) - Min( MRS ,RRS ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) - RRSe ) * ( Max( ( ( Min( RRSe ,MLU ) + CS ) * ( Min( ( ( MUC - RMSe ) + ( RRSe * MUR ) ) ,Max( RCSe,RCSe ) ) / MUC ) ),RMSe ) - ( RMSe * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) - Min( BR ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) - ( AMS - ( MRS * AMS ) ) )", "choosing": "( Min( Min( ( RMSe - MLU ) ,RCSe ) ,Max( DS,RCSe ) ) / ( RMSe * ( MUC * Max( ( MUC / Max( Min( DS ,MLU ),MUM ) ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MDR ,( ( FirstVNF_CPU + RRS ) / FirstVNF_Mem ) ) - Max( AMS,ACS ) ) * FirstVNF_RAM ) - ( ( ( Min( ( FirstVNF_RAM_Server + RRS ) ,( ( FirstVNF_CPU_Server - DDR ) + MRS ) ) / MRS ) / DDR ) + Const ) )", "choosing": "( Min( MUC ,Min( ( Max( ( MLU * MUM ),DS ) / ( Min( MUC ,MUC ) * DS ) ) ,Min( RCSe ,MUM ) ) ) - ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Max( ( FirstVNF_Mem + ( BR / DDR ) ),AMS ) )", "choosing": "Min( ( Max( RRSe,( ( Min( Min( ( DS + RMSe ) ,( DS + RRSe ) ) ,( DS * Min( MUR ,RMSe ) ) ) / ( ( CS - MUC ) * RMSe ) ) * CS ) ) + Max( MLU,CS ) ) ,( Max( MUM,( MLU / RRSe ) ) + Max( Min( RCSe ,RRSe ),( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_RAM ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "Max( ( Max( Max( RMSe,Max( MUR,MUR ) ),MUR ) - MUR ),Max( ( CS + Max( Min( MUM ,RMSe ),RRSe ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( Min( DDR ,( ( FirstVNF_CPU - ( MDR - CRS ) ) - FirstVNF_RAM_Server ) ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( ( ( Min( DS ,MUC ) / CS ) * ( ( ( MUR / RRSe ) * CS ) + ( Min( MUC ,RCSe ) * DS ) ) ) - MUM ) - RCSe ),MUC ) - ( ( MUR - RMSe ) - Max( MUM,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / FirstVNF_RAM_Server ) ,Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( MUC * RMSe ) ) + ( ( RCSe / MUM ) + Max( RMSe,RMSe ) ) ) / Min( ( ( MUM + Min( ( CS - MUR ) ,MUM ) ) * Min( ( ( RRSe * Max( ( MUC - RRSe ),Max( MUR,CS ) ) ) / CS ) ,RRSe ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,PN ) + ( Const + CRS ) ) - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( Min( ( MUC + RRSe ) ,MUC ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( DDR / CRS ) ) - ( ( ( RRS - PN ) + FirstVNF_RAM ) / ( FirstVNF_CPU - PN ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) * Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( Min( MUC ,( MUC + RRSe ) ) / ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Max( MUR,MUC ) - ( ( Max( MUR,MUC ) - RMSe ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( MUM * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / ( MDR + PN ) ) ,Const ) * ( Max( Const,AMS ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * RCSe ) ,Max( MUR,MLU ) ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( ( Max( BR,AMS ) * MRS ) / FirstVNF_RAM_Server ) * PN ) ) - ( MDR - Const ) )", "choosing": "( ( MUC + ( CS * MUC ) ) + ( Max( ( MUC - MUR ),( CS - RCSe ) ) / Max( ( MUM * DS ),( CS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( CS / Max( ( MLU / RCSe ),( MUM * MUC ) ) ) * ( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / BR ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "( ( MUM / RCSe ) - ( ( ( Max( RRSe,Min( ( MLU + ( MUM + MUC ) ) ,MLU ) ) + ( Max( RCSe,( Min( DS ,RMSe ) - MLU ) ) + ( ( RRSe / CS ) - DS ) ) ) - CS ) / Min( ( RCSe + ( DS * MUC ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - ( DDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_RAM ,DDR ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - ( CRS * ( ( FirstVNF_RAM_Server + ACS ) * FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( ( ( RMSe / ( MUM * MUR ) ) / MUM ) * ( ( MUR + MUM ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( CS - MUC ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "Min( Min( ( Max( MLU,( ( DS - ( ( RCSe + CS ) - Min( MUC ,RRSe ) ) ) - RCSe ) ) * ( ( MUM + MUR ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) / ( Min( Min( ( Const * FirstVNF_Mem ) ,( ( ( DDR + FirstVNF_RAM ) * ( MDR - BR ) ) - PN ) ) ,ARS ) * ( RRS * FirstVNF_RAM ) ) ) - Max( ( MRS / FirstVNF_RAM ),Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( MUR + RRSe ) + Max( CS,CS ) ) ,( ( Max( MUM,RCSe ) - Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) ) ) ,Min( Max( Max( ( DDR * Const ),BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,RRSe ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / MRS ) + DDR ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( ( DS / CS ) * ( MUR / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Min( AMS ,( Min( DDR ,AMS ) - MDR ) ) )", "choosing": "Max( ( DS + DS ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( DDR ,DDR ) - ( MDR - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( ( ( Max( RCSe,Max( RMSe,MUR ) ) * Min( RMSe ,MUC ) ) / RCSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( Max( ARS,ACS ) ,DDR ) - ( AMS - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( Max( ( ( MUM * MUC ) - Min( MLU ,CS ) ),( ( MLU * DS ) - MUM ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( MRS + ACS ) - Min( DDR ,RRS ) )", "choosing": "Min( Min( ( ( ( RMSe - ( MUM * MUR ) ) / MUM ) * ( ( CS / Max( CS,( DS - ( RMSe * MUM ) ) ) ) - MUM ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.16025368145879557}, {"determining": "( FirstVNF_CPU_Server - ( MDR * ( Min( DDR ,DDR ) - ( MDR - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( ( ( Min( DS ,( RMSe / DS ) ) / ( Max( RMSe,( MUR + MUM ) ) + MUR ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) ) * MUM ) )", "obj1": 0.7088122605363985, "obj2": 0.17140098425462158}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( ( MUR * CS ) - RRSe ),RRSe ) / MLU )", "obj1": 0.89272030651341, "obj2": 0.05554407548435219}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Const + MRS ) )", "choosing": "( ( MUM - ( DS * MUR ) ) - ( ( MUR - Min( RCSe ,Max( ( ( Min( RRSe ,CS ) + MUC ) * ( DS * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( MLU ,RCSe ) ) )", "obj1": 0.8122605363984674, "obj2": 0.08720315128683923}, {"determining": "( Min( ARS ,BR ) - ( Const - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * ( ( MUC - MUC ) - MUR ) ) * RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.8448275862068966, "obj2": 0.06907213620261439}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MRS + Min( ( BR - FirstVNF_Mem_Server ) ,DDR ) ) ) / FirstVNF_Mem ) / Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "Max( ( Min( RRSe ,RRSe ) + DS ),( RRSe * RMSe ) )", "obj1": 0.8103448275862069, "obj2": 0.1283943263365216}, {"determining": "( Min( MRS ,FirstVNF_Mem ) - ( ( ARS * CRS ) / ( Min( ( ACS + FirstVNF_Mem ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( ( MUR * CS ) - RRSe ),( ( Min( Min( MUC ,MUR ) ,RMSe ) / Min( ( ( DS / MUC ) / RRSe ) ,( RCSe - DS ) ) ) * ( MUC - RRSe ) ) ) / MLU )", "obj1": 0.9099616858237548, "obj2": 0.0420109442984921}, {"determining": "( ( ( ( ( RRS * PN ) / FirstVNF_Mem ) / Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( ( ACS * FirstVNF_RAM_Server ) ,RRS ) )", "choosing": "( ( RRSe * CS ) / MUC )", "obj1": 0.7931034482758621, "obj2": 0.1423322318798682}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( DDR * RRS ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( ( CS / RCSe ) + ( MUC - MLU ) ) ,( MLU * DS ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6704980842911877, "obj2": 0.22236187426831194}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( ( FirstVNF_RAM - ARS ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( DDR + AMS ) ) / ( FirstVNF_CPU_Server + Min( RRS ,Min( ( FirstVNF_Mem_Server / ARS ) ,MRS ) ) ) ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ( FirstVNF_RAM_Server + BR ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( Min( RRSe ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,( Max( DS,Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) ) + ( MUM - ( MUR + MUR ) ) ) ) + ( MLU + ( MUR + MLU ) ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6590038314176245, "obj2": 0.22848122749179894}, {"determining": "( ( PN * Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server + Max( ARS,AMS ) ) ) ) ,( FirstVNF_CPU_Server * MRS ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( RRSe + Min( MLU ,RRSe ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.8275862068965517, "obj2": 0.07608451185454128}, {"determining": "( ( BR / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( MDR - ( ( BR + ( Const / FirstVNF_Mem_Server ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,Max( DS,RCSe ) ) * Max( RRSe,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24433803546381383}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "Min( Min( ( Max( MLU,( ( DS - ( ( RCSe + CS ) - Min( MUC ,RRSe ) ) ) - RCSe ) ) * ( ( MUM + MUR ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.011083365744899572}, {"determining": "( Max( ( FirstVNF_Mem * MRS ),( FirstVNF_RAM - RRS ) ) - ( ( AMS * ARS ) / RRS ) )", "choosing": "( Max( ( DS / ( MUM + ( Max( Min( ( RCSe * RRSe ) ,MUR ),MUC ) + ( ( Min( MUR ,DS ) / MUM ) / RCSe ) ) ) ),( DS + RCSe ) ) + ( RMSe + MUC ) )", "obj1": 0.6839080459770115, "obj2": 0.20350750586661526}, {"determining": "Min( ( ( BR - ( ( DDR - ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) + ( PN - MRS ) ) ) - ( ( BR / ACS ) + ( MDR * RRS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + Max( CRS,ACS ) ) ) )", "choosing": "( ( Min( DS ,( RMSe / DS ) ) / ( Max( RMSe,( MUR + Max( ( MUM / DS ),Max( CS,RMSe ) ) ) ) + MUR ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 0.7068965517241379, "obj2": 0.19048231668009105}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ACS ) ) / DDR ) ) )", "choosing": "Max( ( ( MLU * MUM ) - MUM ),( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) ) )", "obj1": 0.9252873563218391, "obj2": 0.030894575616313216}, {"determining": "( Min( MRS ,MRS ) - ( ( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * Min( Min( Const ,FirstVNF_Mem ) ,FirstVNF_RAM ) ) ) - Max( Max( Max( PN,FirstVNF_RAM ),( AMS * PN ) ),( FirstVNF_RAM / MRS ) ) ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Max( ( ( MLU * Max( MLU,( Min( ( MUC / MUC ) ,RMSe ) - RCSe ) ) ) - MUM ),( MUR - Min( RCSe ,Max( ( ( ( RRSe * CS ) + MUC ) * ( DS * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) )", "obj1": 0.6992337164750958, "obj2": 0.2007402669396079}, {"determining": "( ( ( Min( MRS ,( MRS - Const ) ) - Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "Max( ( ( MLU + MUM ) - MUM ),( MUR - Min( RCSe ,Max( ( ( ( RRSe * ( MUC / CS ) ) + MUC ) * ( DS * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) )", "obj1": 0.8026819923371648, "obj2": 0.1338330237951092}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( ( DS / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9482758620689655, "obj2": 0.01849580379720876}, {"determining": "( ( PN * ( ( DDR / ( DDR * ( AMS + ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - ARS ) ) ) ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( AMS + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( ( MUR - Min( RCSe ,Max( ( Max( DS,MUM ) * ( DS * ( RMSe / MUR ) ) ),( RCSe + RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 0.842911877394636, "obj2": 0.07172296895254329}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.9406130268199234, "obj2": 0.02465345506541569}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24497932868220526}, {"determining": "( ACS - ( MDR - MRS ) )", "choosing": "( Max( ( MUR / DS ),MLU ) + ( MUM + MUC ) )", "obj1": 0.7030651340996169, "obj2": 0.19553297784996662}, {"determining": "( ( ( MDR * CRS ) / ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU / ( ACS - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) / DDR ) ) - ( ( Max( FirstVNF_RAM,PN ) + ACS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC + MUC ) * CS ) / MLU )", "obj1": 0.9846743295019157, "obj2": 0.008345750637544164}, {"determining": "( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,ARS ) ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( MUR - MLU ) ) * Max( Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,DS ),( CS / RMSe ) ) )", "obj1": 0.6283524904214559, "obj2": 0.24884824936832975}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( ( MRS + ACS ) * Max( ARS,MRS ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.0277258666715012}, {"determining": "( Max( MRS,ARS ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( ( Min( RRS ,MDR ) * CRS ),RRS ),Min( ( ( Const - ACS ) - ( Max( ACS,FirstVNF_Mem ) / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * MUC ) ) - ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( ( RCSe + Max( RMSe,RCSe ) ) - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( ACS - ( MDR - MRS ) )", "choosing": "( Max( ( MUR / DS ),MLU ) + ( MUM + MUC ) )", "obj1": 0.6839080459770115, "obj2": 0.20350750586661526}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( ( DS / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01915090154153745}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * PN ) / FirstVNF_Mem ) / Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "Min( Min( Min( DS ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.8084291187739464, "obj2": 0.1333652678411037}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( ( ( ( FirstVNF_Mem_Server * PN ) / FirstVNF_Mem ) / Min( PN ,BR ) ) + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( ( ( MUR * CS ) - RRSe ),RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6130268199233716, "obj2": 0.2673691926339421}, {"determining": "( ( Max( ( BR + FirstVNF_Mem ),( ARS + MDR ) ) * ( FirstVNF_CPU_Server - Const ) ) - ( ( ARS * CRS ) / ( Min( Min( RRS ,AMS ) ,( MRS / ARS ) ) / DDR ) ) )", "choosing": "Max( ( ( MLU * MUM ) - MUM ),( MUR - Min( Max( Min( MUR ,RMSe ),Min( RCSe ,RMSe ) ) ,RCSe ) ) )", "obj1": 0.9291187739463601, "obj2": 0.02947880479686938}, {"determining": "Min( ( MDR - Max( ( RRS + FirstVNF_RAM ),RRS ) ) ,PN )", "choosing": "( ( Max( ( ( RRSe / RCSe ) / DS ),MLU ) + ( MUC + MLU ) ) / ( ( ( MUC / MUM ) * ( ( DS * DS ) * MLU ) ) / Max( ( MUC + MUM ),Max( RCSe,DS ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.007602994406971843}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,FirstVNF_CPU_Server ) / ACS ) - ( MDR - ( Max( DDR,ACS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( ( MDR * FirstVNF_Mem ) * Min( RRS ,( FirstVNF_Mem + RRS ) ) ) ) )", "choosing": "( ( ( RRSe / MUC ) - Min( RMSe ,MLU ) ) * Min( MUR ,MLU ) )", "obj1": 0.9482758620689655, "obj2": 0.01849580379720876}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.6053639846743295, "obj2": 0.2683511823453599}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2557621972692562}, {"determining": "( Max( Const,Min( ACS ,( BR - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Const * ( ( Const - BR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUC - RCSe ) ,( ( Max( RCSe,CS ) + ( RCSe - RMSe ) ) + Max( ( MLU + CS ),Min( MLU ,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Min( ( MDR - Max( ACS,RRS ) ) ,( ( Min( CRS ,( BR * FirstVNF_CPU ) ) - ( ( PN + ( RRS + Min( Min( CRS ,FirstVNF_Mem_Server ) ,PN ) ) ) * ( PN * AMS ) ) ) / MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) + Max( Max( MLU,DS ),Max( RCSe,( Max( ( MUR / Max( DS,RCSe ) ),MLU ) / RRSe ) ) ) ) )", "obj1": 0.9942528735632183, "obj2": 0.005837176848617453}, {"determining": "( ( AMS + FirstVNF_RAM ) * ( Min( Max( MDR,RRS ) ,( FirstVNF_CPU_Server * MDR ) ) + Max( ( RRS - Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / ( ( RMSe + MLU ) - RCSe ) ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,RRSe ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.60727969348659, "obj2": 0.2679551064694199}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,( AMS * ARS ) ) + Max( ( FirstVNF_CPU / ARS ),Min( PN ,ARS ) ) ) * ( ( ( ( RRS * FirstVNF_CPU ) * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( RRS,Const ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( DS / RMSe ) ,Min( MLU ,RMSe ) ) + ( ( RCSe + CS ) * ( RCSe + ( ( DS * RRSe ) + ( MUR / MUM ) ) ) ) ) * ( ( Min( CS ,CS ) * ( CS * RRSe ) ) - ( Min( MUR ,MUM ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.26763926957485257}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.2557621972692562}, {"determining": "Min( ( MDR / Max( FirstVNF_Mem_Server,RRS ) ) ,( ( Min( CRS ,( BR * FirstVNF_CPU ) ) - ( ( ( Const / FirstVNF_CPU_Server ) + Const ) - ACS ) ) / MRS ) )", "choosing": "( ( ( ( ( Max( RCSe,MUC ) / MUM ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,Min( CS ,CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( RCSe - ( RRSe + RRSe ) ) + MUM ) )", "obj1": 0.9942528735632183, "obj2": 0.005837176848617453}, {"determining": "( Max( MRS,ARS ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( ( Min( RRS ,MDR ) * CRS ),RRS ),Min( ( ( Const - ACS ) - ( Max( ACS,FirstVNF_Mem ) / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * MUC ) ) - ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( ( RCSe + Max( RMSe,RCSe ) ) - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - ( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) ) )", "choosing": "Max( Max( ( RMSe - MLU ),MLU ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0007993714282739525}, {"determining": "( ( Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) ) - ( ( MDR - ( DDR + MRS ) ) - Min( MRS ,BR ) ) )", "choosing": "( Max( ( MLU * MUR ),( CS / MUM ) ) + ( Max( MUM,( ( DS - CS ) * RCSe ) ) / Max( ( CS - RCSe ),( MUR - MUR ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0007993714282739525}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ,Min( ( ( ( ( FirstVNF_Mem_Server * PN ) / Min( BR ,BR ) ) / Min( PN ,BR ) ) + ARS ) ,( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( ( ( MUR * CS ) - Max( RMSe,( MUR + MUM ) ) ),RRSe ) / Min( MLU ,MUM ) )", "obj1": 0.6130268199233716, "obj2": 0.2673691926339421}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) * ( BR - ( FirstVNF_CPU * BR ) ) )", "choosing": "( ( ( MUM + RRSe ) + MLU ) - ( ( RRSe - DS ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) / ( FirstVNF_CPU_Server * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) / ( Min( ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( DDR + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - MDR ) ,BR ) * ( DDR * ( RRS / ( FirstVNF_RAM / PN ) ) ) ) ) - Max( ( MRS / FirstVNF_RAM ),Min( ( ( AMS + ( Const + Const ) ) * ( Const + MDR ) ) ,BR ) ) )", "choosing": "Min( ( ( RRSe + CS ) * Max( CS,( DS + ( DS - MUR ) ) ) ) ,( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,MDR ) - ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - MDR ) )", "choosing": "Max( Max( ( Max( CS,RRSe ) * Max( Max( Min( MUR ,RCSe ),RCSe ),CS ) ),MLU ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * CRS ),RRS ) / ( FirstVNF_CPU_Server + ( ARS + FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,( MUC * Max( MUC,RRSe ) ) ) + MUR ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Min( AMS ,( Min( DDR ,AMS ) - MDR ) ) )", "choosing": "Max( ( DS + DS ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR / MDR ) / FirstVNF_RAM_Server ) ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( ( ( MUR / ( ( DS / ( MUM - RRSe ) ) / ( CS + RRSe ) ) ) * MUC ) + DS ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - BR ) - ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( MUC - MUR ) * ( MUM / ( MUR + ( ( MUM - MUC ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,( FirstVNF_Mem - FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( Const + ( Min( FirstVNF_Mem ,MRS ) + ( ( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) ) - ( ( ARS + CRS ) * Const ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - BR ) * ( BR - ( AMS / ( FirstVNF_Mem - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) - Max( ( ( BR / FirstVNF_Mem_Server ) + AMS ),( Const + FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * RRSe ),Min( RMSe ,( MUR / Min( Max( RRSe,( CS - RCSe ) ) ,( MUC / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + DDR ) - Min( FirstVNF_CPU ,MRS ) ) / Max( Min( ( BR / ( FirstVNF_CPU * DDR ) ) ,MDR ),( ( ( Max( Const,ACS ) + ( ( PN / MDR ) - FirstVNF_RAM ) ) / FirstVNF_Mem ) - CRS ) ) )", "choosing": "( Max( ( MUC / Min( DS ,Min( Max( RMSe,RMSe ) ,( DS + Min( RCSe ,MLU ) ) ) ) ),Max( DS,( DS + RMSe ) ) ) + Min( Min( RCSe ,MUM ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - Const ) ),PN ) * FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe * ( Max( Min( ( DS / CS ) ,MUM ),MUM ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const - CRS ) ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) - Min( DDR ,MDR ) )", "choosing": "( ( Max( MUR,DS ) + Min( ( CS + RRSe ) ,DS ) ) / ( RCSe - ( ( MUM / MUR ) * ( MUR * Min( ( ( RMSe * DS ) / Min( DS ,RMSe ) ) ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) - ( Max( CRS,FirstVNF_RAM ) * ( ACS * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_RAM_Server ) * Max( ARS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / BR ) ) )", "choosing": "Max( ( ( MUR - RRSe ) + ( RMSe + RRSe ) ),( ( ( DS + MLU ) * ( CS - MLU ) ) * Max( ( ( DS / MUC ) / Max( ( ( ( RCSe + RRSe ) / RRSe ) + DS ),MUM ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Min( Const ,MDR ) ) * Max( ( FirstVNF_Mem - MDR ),Max( RRS,FirstVNF_RAM ) ) ) ,Max( MRS,DDR ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( DS,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( ( ( CS - MLU ) + ( RMSe * Min( MUM ,( RMSe * CS ) ) ) ),MUM ) / ( RMSe - Max( DS,( RRSe / ( ( RMSe * DS ) / ( MLU - RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR * Const ) - ( Const * FirstVNF_Mem_Server ) ) * ( DDR + FirstVNF_CPU ) ) ,Min( ( Const / ( ACS + DDR ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( MRS,( RRS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUC,( RCSe + ( Min( MUR ,RRSe ) / RCSe ) ) ) - DS ) / Max( ( Max( Max( ( CS - MLU ),Max( MLU,( Min( DS ,CS ) * Min( CS ,CS ) ) ) ),MUR ) * ( ( Min( DS ,Max( CS,MUC ) ) - RMSe ) * Max( ( MUC - Max( CS,MUM ) ),( RRSe - Max( DS,RRSe ) ) ) ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( PN / AMS ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ,( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * ( ACS / ACS ) ) )", "choosing": "( ( ( ( ( MUR + Min( RRSe ,MUM ) ) + MUR ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( ARS / Const ) ) - ( MDR * ( CRS * ARS ) ) )", "choosing": "( ( ( RCSe * Min( MLU ,( RMSe - MLU ) ) ) * ( MUM * MUC ) ) - ( ( RRSe - ( Max( RMSe,( RMSe - ( ( MLU + RRSe ) * ( RCSe - RRSe ) ) ) ) - RMSe ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) - ( MDR - ( FirstVNF_RAM * AMS ) ) )", "choosing": "( Max( ( MUR / ( ( RMSe - RMSe ) - ( Max( Max( RCSe,MUM ),MUR ) * RCSe ) ) ),MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - ( Const + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) * Max( Min( RRS ,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Min( ( FirstVNF_CPU / AMS ) ,Max( DDR,BR ) ) ,( Min( Const ,Min( BR ,ACS ) ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MLU,( RMSe / ( CS - RMSe ) ) ) ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + Min( ACS ,FirstVNF_Mem_Server ) ) - Min( RRS ,RRS ) )", "choosing": "Max( Max( ( RMSe - MLU ),MLU ),( ( MLU + ( ( Min( ( MUR - MUC ) ,( CS + ( DS + MUC ) ) ) / CS ) + ( MUR / Min( ( MLU - Min( CS ,DS ) ) ,Max( ( MUR * MLU ),( DS * MUR ) ) ) ) ) ) / ( ( RCSe * DS ) / ( Min( ( MLU / Min( ( MUR / RCSe ) ,( MUM * RCSe ) ) ) ,MUC ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( FirstVNF_RAM - Max( FirstVNF_Mem,( ACS - FirstVNF_CPU ) ) ) ) - FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Max( ( CRS + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ),( FirstVNF_Mem / Min( Max( ( DDR + FirstVNF_Mem ),ACS ) ,CRS ) ) ) ) ,Const ) )", "choosing": "( Min( CS ,( ( Max( ( RMSe / MLU ),( MUR / CS ) ) / ( DS - RCSe ) ) * MLU ) ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - CRS ) * ( FirstVNF_CPU + CRS ) )", "choosing": "( Min( MUM ,( ( ( MUR * RCSe ) + CS ) - Min( RMSe ,MUR ) ) ) - ( RCSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / ( Max( RRS,Const ) + ( Const + CRS ) ) ) + AMS ) / ( FirstVNF_CPU_Server / ( ( MDR * FirstVNF_Mem ) - Min( MRS ,RRS ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) - RRSe ) * ( Max( ( ( Min( RRSe ,MLU ) + CS ) * ( Min( ( ( MUC - RMSe ) + ( RRSe * MUR ) ) ,Max( RCSe,RCSe ) ) / MUC ) ),RMSe ) - ( RMSe * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) - Min( BR ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) - ( AMS - ( MRS * AMS ) ) )", "choosing": "( Min( Min( ( RMSe - MLU ) ,RCSe ) ,Max( DS,RCSe ) ) / ( RMSe * ( MUC * Max( ( MUC / Max( Min( DS ,MLU ),MUM ) ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MDR ,( ( FirstVNF_CPU + RRS ) / FirstVNF_Mem ) ) - Max( AMS,ACS ) ) * FirstVNF_RAM ) - ( ( ( Min( ( FirstVNF_RAM_Server + RRS ) ,( ( FirstVNF_CPU_Server - DDR ) + MRS ) ) / MRS ) / DDR ) + Const ) )", "choosing": "( Min( MUC ,Min( ( Max( ( MLU * MUM ),DS ) / ( Min( MUC ,MUC ) * DS ) ) ,Min( RCSe ,MUM ) ) ) - ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Max( ( FirstVNF_Mem + ( BR / DDR ) ),AMS ) )", "choosing": "Min( ( Max( RRSe,( ( Min( Min( ( DS + RMSe ) ,( DS + RRSe ) ) ,( DS * Min( MUR ,RMSe ) ) ) / ( ( CS - MUC ) * RMSe ) ) * CS ) ) + Max( MLU,CS ) ) ,( Max( MUM,( MLU / RRSe ) ) + Max( Min( RCSe ,RRSe ),( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_RAM ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "Max( ( Max( Max( RMSe,Max( MUR,MUR ) ),MUR ) - MUR ),Max( ( CS + Max( Min( MUM ,RMSe ),RRSe ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( Min( DDR ,( ( FirstVNF_CPU - ( MDR - CRS ) ) - FirstVNF_RAM_Server ) ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( ( ( Min( DS ,MUC ) / CS ) * ( ( ( MUR / RRSe ) * CS ) + ( Min( MUC ,RCSe ) * DS ) ) ) - MUM ) - RCSe ),MUC ) - ( ( MUR - RMSe ) - Max( MUM,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / FirstVNF_RAM_Server ) ,Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( MUC * RMSe ) ) + ( ( RCSe / MUM ) + Max( RMSe,RMSe ) ) ) / Min( ( ( MUM + Min( ( CS - MUR ) ,MUM ) ) * Min( ( ( RRSe * Max( ( MUC - RRSe ),Max( MUR,CS ) ) ) / CS ) ,RRSe ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,PN ) + ( Const + CRS ) ) - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( Min( ( MUC + RRSe ) ,MUC ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( DDR / CRS ) ) - ( ( ( RRS - PN ) + FirstVNF_RAM ) / ( FirstVNF_CPU - PN ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) * Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( Min( MUC ,( MUC + RRSe ) ) / ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Max( MUR,MUC ) - ( ( Max( MUR,MUC ) - RMSe ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( MUM * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / ( MDR + PN ) ) ,Const ) * ( Max( Const,AMS ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * RCSe ) ,Max( MUR,MLU ) ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( ( Max( BR,AMS ) * MRS ) / FirstVNF_RAM_Server ) * PN ) ) - ( MDR - Const ) )", "choosing": "( ( MUC + ( CS * MUC ) ) + ( Max( ( MUC - MUR ),( CS - RCSe ) ) / Max( ( MUM * DS ),( CS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ACS / ( DDR + FirstVNF_RAM ) ) - Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( MUR * ( Max( MUR,RCSe ) / ( RRSe + CS ) ) ) ,DS ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUR,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / ( ( ( Max( MLU,MUM ) - ( DS - CS ) ) - Min( ( RRSe * ( Min( RMSe ,MUC ) * ( MLU - DS ) ) ) ,( MLU - MUM ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( DDR ,DDR ) - ( MDR - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( ( ( Max( RCSe,Max( RMSe,MUR ) ) * Min( RMSe ,MUC ) ) / RCSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( MRS + ACS ) - Min( DDR ,RRS ) )", "choosing": "Min( Min( ( ( ( RMSe - ( MUM * MUR ) ) / MUM ) * ( ( CS / Max( CS,( DS - ( RMSe * MUM ) ) ) ) - MUM ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.16025368145879557}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( ( MUR * CS ) - RRSe ),RRSe ) / MLU )", "obj1": 0.89272030651341, "obj2": 0.05554407548435219}, {"determining": "( FirstVNF_CPU_Server - ( MDR * ( Min( DDR ,DDR ) - ( MDR - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( ( ( Min( DS ,( RMSe / DS ) ) / ( Max( RMSe,( MUR + MUM ) ) + MUR ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) ) * MUM ) )", "obj1": 0.7088122605363985, "obj2": 0.17140098425462158}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Const + MRS ) )", "choosing": "( ( MUM - ( DS * MUR ) ) - ( ( MUR - Min( RCSe ,Max( ( ( Min( RRSe ,CS ) + MUC ) * ( DS * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( MLU ,RCSe ) ) )", "obj1": 0.8122605363984674, "obj2": 0.08720315128683923}, {"determining": "( Min( ARS ,BR ) - ( Const - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * ( ( MUC - MUC ) - MUR ) ) * RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.8448275862068966, "obj2": 0.06907213620261439}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MRS + Min( ( BR - FirstVNF_Mem_Server ) ,DDR ) ) ) / FirstVNF_Mem ) / Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "Max( ( Min( RRSe ,RRSe ) + DS ),( RRSe * RMSe ) )", "obj1": 0.8103448275862069, "obj2": 0.1283943263365216}, {"determining": "( Min( MRS ,FirstVNF_Mem ) - ( ( ARS * CRS ) / ( Min( ( ACS + FirstVNF_Mem ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( ( MUR * CS ) - RRSe ),( ( Min( Min( MUC ,MUR ) ,RMSe ) / Min( ( ( DS / MUC ) / RRSe ) ,( RCSe - DS ) ) ) * ( MUC - RRSe ) ) ) / MLU )", "obj1": 0.9099616858237548, "obj2": 0.0420109442984921}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( DDR * RRS ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( ( CS / RCSe ) + ( MUC - MLU ) ) ,( MLU * DS ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6704980842911877, "obj2": 0.22236187426831194}, {"determining": "( ACS - ( MDR - MRS ) )", "choosing": "Max( MLU,( ( ( Max( RCSe,Max( RMSe,MUR ) ) * Min( RMSe ,MUC ) ) / RCSe ) * MUM ) )", "obj1": 0.6973180076628352, "obj2": 0.17937067339175006}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( ( FirstVNF_RAM - ARS ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( DDR + AMS ) ) / ( FirstVNF_CPU_Server + Min( RRS ,Min( ( FirstVNF_Mem_Server / ARS ) ,MRS ) ) ) ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ( FirstVNF_RAM_Server + BR ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( Min( RRSe ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,( Max( DS,Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) ) + ( MUM - ( MUR + MUR ) ) ) ) + ( MLU + ( MUR + MLU ) ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6590038314176245, "obj2": 0.22848122749179894}, {"determining": "( ( PN * Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server + Max( ARS,AMS ) ) ) ) ,( FirstVNF_CPU_Server * MRS ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( RRSe + Min( MLU ,RRSe ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.8275862068965517, "obj2": 0.07608451185454128}, {"determining": "( ( BR / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( MDR - ( ( BR + ( Const / FirstVNF_Mem_Server ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,Max( DS,RCSe ) ) * Max( RRSe,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24433803546381383}, {"determining": "( ( ( ( ( RRS * PN ) / FirstVNF_Mem ) / Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( ( ACS * FirstVNF_RAM_Server ) ,RRS ) )", "choosing": "( ( RRSe * CS ) / MUC )", "obj1": 0.7931034482758621, "obj2": 0.1423322318798682}, {"determining": "( Max( ( FirstVNF_Mem * MRS ),( FirstVNF_RAM - RRS ) ) - ( ( AMS * ARS ) / RRS ) )", "choosing": "( Max( ( DS / ( MUM + ( Max( Min( ( RCSe * RRSe ) ,MUR ),MUC ) + ( ( Min( MUR ,DS ) / MUM ) / RCSe ) ) ) ),( DS + RCSe ) ) + ( RMSe + MUC ) )", "obj1": 0.6839080459770115, "obj2": 0.20350750586661526}, {"determining": "( ACS - ( MDR - MRS ) )", "choosing": "( Max( ( MUR / DS ),MLU ) + ( MUM + MUC ) )", "obj1": 0.6839080459770115, "obj2": 0.20350750586661526}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( ( ( AMS / ARS ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( DDR * MDR ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( ( MLU * MUR ),Min( MUM ,CS ) ) + ( Max( MUM,( ( DS - CS ) * RCSe ) ) / Max( ( Min( RCSe ,MUC ) - RCSe ),( Min( ( RCSe + MUC ) ,( Max( RCSe,MUM ) + MUM ) ) - MUR ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.26660572008838096}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ACS ) ) / DDR ) ) )", "choosing": "Max( ( ( MLU * MUM ) - MUM ),( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) ) )", "obj1": 0.9233716475095786, "obj2": 0.03319340649693983}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "Min( Min( ( Max( MLU,( ( DS - ( ( RCSe + CS ) - Min( MUC ,RRSe ) ) ) - RCSe ) ) * ( ( MUM + MUR ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.011083365744899572}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,FirstVNF_CPU_Server ) / ACS ) - ( MDR - ( Max( DDR,ACS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( ( MDR * FirstVNF_Mem ) * Min( RRS ,( FirstVNF_Mem + RRS ) ) ) ) )", "choosing": "( ( ( RRSe / MUC ) - Min( RMSe ,MLU ) ) * Min( MUR ,MLU ) )", "obj1": 0.9482758620689655, "obj2": 0.01849580379720876}, {"determining": "( ( PN * ( ( DDR / ( DDR * ( AMS + ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - ARS ) ) ) ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( AMS + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( ( MUR - Min( RCSe ,Max( ( Max( DS,MUM ) * ( DS * ( RMSe / MUR ) ) ),( RCSe + RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 0.842911877394636, "obj2": 0.07172296895254329}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.9406130268199234, "obj2": 0.02465345506541569}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24497932868220526}, {"determining": "( FirstVNF_CPU_Server - ( MDR * ( Min( DDR ,DDR ) - ( MDR - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( ( ( Min( ( RRSe - DS ) ,RRSe ) + MUR ) - MUR ),Max( MUM,MLU ) )", "obj1": 0.7030651340996169, "obj2": 0.17596727516565727}, {"determining": "( ( ( MDR * CRS ) / ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU / ( ACS - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) / DDR ) ) - ( ( Max( FirstVNF_RAM,PN ) + ACS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC + MUC ) * CS ) / MLU )", "obj1": 0.9846743295019157, "obj2": 0.008345750637544164}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * PN ) / FirstVNF_Mem ) / Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( Min( MUM ,Max( MUR,MLU ) ) - ( MLU * DS ) )", "obj1": 0.8007662835249042, "obj2": 0.13928917744830877}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) - ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Max( MLU,( ( DS - ( ( CS + RCSe ) - Min( MUC ,RRSe ) ) ) - RCSe ) ) * ( Max( MUM,MUR ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,( RCSe * MUR ) ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.011083365744899572}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( ( MRS + ACS ) * Max( ARS,MRS ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.0277258666715012}, {"determining": "( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,ARS ) ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( MUR - MLU ) ) * Max( Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,DS ),( CS / RMSe ) ) )", "obj1": 0.6283524904214559, "obj2": 0.24884824936832975}, {"determining": "( Max( MRS,( ( RRS / Const ) - ACS ) ) * ( ( ( RRS * Const ) * Max( Max( MDR,FirstVNF_RAM ),AMS ) ) + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) * ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( ( ( MLU * CS ) + DS ) + ( MUR - Max( DS,RCSe ) ) ) - ( MUR - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.25364511381513893}, {"determining": "( Max( MRS,ARS ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( ( Min( RRS ,MDR ) * CRS ),RRS ),Min( ( ( Const - ACS ) - ( Max( ACS,FirstVNF_Mem ) / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * MUC ) ) - ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( ( RCSe + Max( RMSe,RCSe ) ) - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( ( DS / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01915090154153745}, {"determining": "( ( ( Min( MRS ,( MRS - Const ) ) - Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "Max( ( ( MLU + MUM ) - MUM ),( MUR - Min( RCSe ,Max( ( ( ( RRSe * ( MUC / CS ) ) + MUC ) * ( DS * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) )", "obj1": 0.8026819923371648, "obj2": 0.1338330237951092}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * PN ) / FirstVNF_Mem ) / Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "Min( Min( Min( DS ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.8084291187739464, "obj2": 0.1333652678411037}, {"determining": "( ( Max( ( BR + FirstVNF_Mem ),( ARS + MDR ) ) * ( FirstVNF_CPU_Server - Const ) ) - ( ( ARS * CRS ) / ( Min( Min( RRS ,AMS ) ,( MRS / ARS ) ) / DDR ) ) )", "choosing": "Max( ( ( MLU * MUM ) - MUM ),( MUR - Min( Max( Min( MUR ,RMSe ),Min( RCSe ,RMSe ) ) ,RCSe ) ) )", "obj1": 0.9291187739463601, "obj2": 0.02947880479686938}, {"determining": "Min( ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ,( ( Min( CRS ,( BR * FirstVNF_CPU ) ) - ( ( PN / ( RRS + ( ( AMS * FirstVNF_RAM ) - ( DDR / CRS ) ) ) ) * ( PN * AMS ) ) ) / MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( MLU,RCSe ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.007222434910919379}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( ( DS / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9482758620689655, "obj2": 0.01849580379720876}, {"determining": "( Max( MRS,ARS ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( ( Min( RRS ,MDR ) * CRS ),RRS ),Min( ( ( Const - ACS ) - ( Max( ACS,FirstVNF_Mem ) / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * MUC ) ) - ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( ( RCSe + Max( RMSe,RCSe ) ) - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( Max( Const,Min( ACS ,( BR - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Const * ( ( Const - BR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUC - RCSe ) ,( ( Max( RCSe,CS ) + ( RCSe - RMSe ) ) + Max( ( MLU + CS ),Min( MLU ,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ACS ) ) / DDR ) ) )", "choosing": "Max( ( ( MLU * MUM ) - MUM ),( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) ) )", "obj1": 0.9252873563218391, "obj2": 0.030894575616313216}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "Min( ( MDR - Max( ACS,RRS ) ) ,( ( Min( CRS ,( BR * FirstVNF_CPU ) ) - ( ( PN + ( RRS + Min( Min( CRS ,FirstVNF_Mem_Server ) ,PN ) ) ) * ( PN * AMS ) ) ) / MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) + Max( Max( MLU,DS ),Max( RCSe,( Max( ( MUR / Max( DS,RCSe ) ),MLU ) / RRSe ) ) ) ) )", "obj1": 0.9942528735632183, "obj2": 0.005837176848617453}, {"determining": "Min( ( MDR / Max( FirstVNF_Mem_Server,RRS ) ) ,( ( Min( CRS ,( BR * FirstVNF_CPU ) ) - ( ( ( Const / FirstVNF_CPU_Server ) + Const ) - ACS ) ) / MRS ) )", "choosing": "( ( ( ( ( Max( RCSe,MUC ) / MUM ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,Min( CS ,CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( RCSe - ( RRSe + RRSe ) ) + MUM ) )", "obj1": 0.9942528735632183, "obj2": 0.005837176848617453}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - ( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) ) )", "choosing": "Max( Max( ( RMSe - MLU ),MLU ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0007993714282739525}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - ( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 0.9980842911877394, "obj2": 0.0007993714282739525}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( Max( ARS,ACS ) ,DDR ) - ( AMS - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( Max( ( ( MUM * MUC ) - Min( MLU ,CS ) ),( ( MLU * DS ) - MUM ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) * ( BR - ( FirstVNF_CPU * BR ) ) )", "choosing": "( ( ( MUM + RRSe ) + MLU ) - ( ( RRSe - DS ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) / ( FirstVNF_CPU_Server * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) / ( Min( ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( DDR + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - MDR ) ,BR ) * ( DDR * ( RRS / ( FirstVNF_RAM / PN ) ) ) ) ) - Max( ( MRS / FirstVNF_RAM ),Min( ( ( AMS + ( Const + Const ) ) * ( Const + MDR ) ) ,BR ) ) )", "choosing": "Min( ( ( RRSe + CS ) * Max( CS,( DS + ( DS - MUR ) ) ) ) ,( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,MDR ) - ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - MDR ) )", "choosing": "Max( Max( ( Max( CS,RRSe ) * Max( Max( Min( MUR ,RCSe ),RCSe ),CS ) ),MLU ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * CRS ),RRS ) / ( FirstVNF_CPU_Server + ( ARS + FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,( MUC * Max( MUC,RRSe ) ) ) + MUR ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Min( AMS ,( Min( DDR ,AMS ) - MDR ) ) )", "choosing": "Max( ( DS + DS ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR / MDR ) / FirstVNF_RAM_Server ) ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( ( ( MUR / ( ( DS / ( MUM - RRSe ) ) / ( CS + RRSe ) ) ) * MUC ) + DS ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - BR ) - ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( MUC - MUR ) * ( MUM / ( MUR + ( ( MUM - MUC ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,( FirstVNF_Mem - FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( Const + ( Min( FirstVNF_Mem ,MRS ) + ( ( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) ) - ( ( ARS + CRS ) * Const ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - BR ) * ( BR - ( AMS / ( FirstVNF_Mem - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) - Max( ( ( BR / FirstVNF_Mem_Server ) + AMS ),( Const + FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * RRSe ),Min( RMSe ,( MUR / Min( Max( RRSe,( CS - RCSe ) ) ,( MUC / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + DDR ) - Min( FirstVNF_CPU ,MRS ) ) / Max( Min( ( BR / ( FirstVNF_CPU * DDR ) ) ,MDR ),( ( ( Max( Const,ACS ) + ( ( PN / MDR ) - FirstVNF_RAM ) ) / FirstVNF_Mem ) - CRS ) ) )", "choosing": "( Max( ( MUC / Min( DS ,Min( Max( RMSe,RMSe ) ,( DS + Min( RCSe ,MLU ) ) ) ) ),Max( DS,( DS + RMSe ) ) ) + Min( Min( RCSe ,MUM ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - Const ) ),PN ) * FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe * ( Max( Min( ( DS / CS ) ,MUM ),MUM ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const - CRS ) ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) - Min( DDR ,MDR ) )", "choosing": "( ( Max( MUR,DS ) + Min( ( CS + RRSe ) ,DS ) ) / ( RCSe - ( ( MUM / MUR ) * ( MUR * Min( ( ( RMSe * DS ) / Min( DS ,RMSe ) ) ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) - ( Max( CRS,FirstVNF_RAM ) * ( ACS * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_RAM_Server ) * Max( ARS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / BR ) ) )", "choosing": "Max( ( ( MUR - RRSe ) + ( RMSe + RRSe ) ),( ( ( DS + MLU ) * ( CS - MLU ) ) * Max( ( ( DS / MUC ) / Max( ( ( ( RCSe + RRSe ) / RRSe ) + DS ),MUM ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Min( Const ,MDR ) ) * Max( ( FirstVNF_Mem - MDR ),Max( RRS,FirstVNF_RAM ) ) ) ,Max( MRS,DDR ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( DS,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( ( ( CS - MLU ) + ( RMSe * Min( MUM ,( RMSe * CS ) ) ) ),MUM ) / ( RMSe - Max( DS,( RRSe / ( ( RMSe * DS ) / ( MLU - RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR * Const ) - ( Const * FirstVNF_Mem_Server ) ) * ( DDR + FirstVNF_CPU ) ) ,Min( ( Const / ( ACS + DDR ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( MRS,( RRS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUC,( RCSe + ( Min( MUR ,RRSe ) / RCSe ) ) ) - DS ) / Max( ( Max( Max( ( CS - MLU ),Max( MLU,( Min( DS ,CS ) * Min( CS ,CS ) ) ) ),MUR ) * ( ( Min( DS ,Max( CS,MUC ) ) - RMSe ) * Max( ( MUC - Max( CS,MUM ) ),( RRSe - Max( DS,RRSe ) ) ) ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( PN / AMS ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ,( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * ( ACS / ACS ) ) )", "choosing": "( ( ( ( ( MUR + Min( RRSe ,MUM ) ) + MUR ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( ARS / Const ) ) - ( MDR * ( CRS * ARS ) ) )", "choosing": "( ( ( RCSe * Min( MLU ,( RMSe - MLU ) ) ) * ( MUM * MUC ) ) - ( ( RRSe - ( Max( RMSe,( RMSe - ( ( MLU + RRSe ) * ( RCSe - RRSe ) ) ) ) - RMSe ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) - ( MDR - ( FirstVNF_RAM * AMS ) ) )", "choosing": "( Max( ( MUR / ( ( RMSe - RMSe ) - ( Max( Max( RCSe,MUM ),MUR ) * RCSe ) ) ),MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - ( Const + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) * Max( Min( RRS ,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Min( ( FirstVNF_CPU / AMS ) ,Max( DDR,BR ) ) ,( Min( Const ,Min( BR ,ACS ) ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MLU,( RMSe / ( CS - RMSe ) ) ) ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + Min( ACS ,FirstVNF_Mem_Server ) ) - Min( RRS ,RRS ) )", "choosing": "Max( Max( ( RMSe - MLU ),MLU ),( ( MLU + ( ( Min( ( MUR - MUC ) ,( CS + ( DS + MUC ) ) ) / CS ) + ( MUR / Min( ( MLU - Min( CS ,DS ) ) ,Max( ( MUR * MLU ),( DS * MUR ) ) ) ) ) ) / ( ( RCSe * DS ) / ( Min( ( MLU / Min( ( MUR / RCSe ) ,( MUM * RCSe ) ) ) ,MUC ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( FirstVNF_RAM - Max( FirstVNF_Mem,( ACS - FirstVNF_CPU ) ) ) ) - FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Max( ( CRS + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ),( FirstVNF_Mem / Min( Max( ( DDR + FirstVNF_Mem ),ACS ) ,CRS ) ) ) ) ,Const ) )", "choosing": "( Min( CS ,( ( Max( ( RMSe / MLU ),( MUR / CS ) ) / ( DS - RCSe ) ) * MLU ) ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - CRS ) * ( FirstVNF_CPU + CRS ) )", "choosing": "( Min( MUM ,( ( ( MUR * RCSe ) + CS ) - Min( RMSe ,MUR ) ) ) - ( RCSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / ( Max( RRS,Const ) + ( Const + CRS ) ) ) + AMS ) / ( FirstVNF_CPU_Server / ( ( MDR * FirstVNF_Mem ) - Min( MRS ,RRS ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) - RRSe ) * ( Max( ( ( Min( RRSe ,MLU ) + CS ) * ( Min( ( ( MUC - RMSe ) + ( RRSe * MUR ) ) ,Max( RCSe,RCSe ) ) / MUC ) ),RMSe ) - ( RMSe * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) - Min( BR ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) - ( AMS - ( MRS * AMS ) ) )", "choosing": "( Min( Min( ( RMSe - MLU ) ,RCSe ) ,Max( DS,RCSe ) ) / ( RMSe * ( MUC * Max( ( MUC / Max( Min( DS ,MLU ),MUM ) ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MDR ,( ( FirstVNF_CPU + RRS ) / FirstVNF_Mem ) ) - Max( AMS,ACS ) ) * FirstVNF_RAM ) - ( ( ( Min( ( FirstVNF_RAM_Server + RRS ) ,( ( FirstVNF_CPU_Server - DDR ) + MRS ) ) / MRS ) / DDR ) + Const ) )", "choosing": "( Min( MUC ,Min( ( Max( ( MLU * MUM ),DS ) / ( Min( MUC ,MUC ) * DS ) ) ,Min( RCSe ,MUM ) ) ) - ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Max( ( FirstVNF_Mem + ( BR / DDR ) ),AMS ) )", "choosing": "Min( ( Max( RRSe,( ( Min( Min( ( DS + RMSe ) ,( DS + RRSe ) ) ,( DS * Min( MUR ,RMSe ) ) ) / ( ( CS - MUC ) * RMSe ) ) * CS ) ) + Max( MLU,CS ) ) ,( Max( MUM,( MLU / RRSe ) ) + Max( Min( RCSe ,RRSe ),( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_RAM ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "Max( ( Max( Max( RMSe,Max( MUR,MUR ) ),MUR ) - MUR ),Max( ( CS + Max( Min( MUM ,RMSe ),RRSe ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( Min( DDR ,( ( FirstVNF_CPU - ( MDR - CRS ) ) - FirstVNF_RAM_Server ) ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( ( ( Min( DS ,MUC ) / CS ) * ( ( ( MUR / RRSe ) * CS ) + ( Min( MUC ,RCSe ) * DS ) ) ) - MUM ) - RCSe ),MUC ) - ( ( MUR - RMSe ) - Max( MUM,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / FirstVNF_RAM_Server ) ,Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( MUC * RMSe ) ) + ( ( RCSe / MUM ) + Max( RMSe,RMSe ) ) ) / Min( ( ( MUM + Min( ( CS - MUR ) ,MUM ) ) * Min( ( ( RRSe * Max( ( MUC - RRSe ),Max( MUR,CS ) ) ) / CS ) ,RRSe ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,PN ) + ( Const + CRS ) ) - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( Min( ( MUC + RRSe ) ,MUC ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( DDR / CRS ) ) - ( ( ( RRS - PN ) + FirstVNF_RAM ) / ( FirstVNF_CPU - PN ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) * Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( Min( MUC ,( MUC + RRSe ) ) / ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( Max( MUR,MUC ) - ( ( Max( MUR,MUC ) - RMSe ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( Max( BR,CRS ) / ( FirstVNF_RAM_Server / AMS ) ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( MUM * DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / ( MDR + PN ) ) ,Const ) * ( Max( Const,AMS ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * RCSe ) ,Max( MUR,MLU ) ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,RCSe ) + Max( MUR,CS ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( ( Max( BR,AMS ) * MRS ) / FirstVNF_RAM_Server ) * PN ) ) - ( MDR - Const ) )", "choosing": "( ( MUC + ( CS * MUC ) ) + ( Max( ( MUC - MUR ),( CS - RCSe ) ) / Max( ( MUM * DS ),( CS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ( ( ( Min( MRS ,Min( BR ,MRS ) ) / DDR ) - ( ( MRS - FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) + ( PN - MRS ) ) ) / ( ( MDR * RRS ) + ( BR / ACS ) ) ) ,( Min( Min( DDR ,FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( BR * FirstVNF_CPU_Server ) + ( CRS * ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,( ( Max( CS,( RCSe - MUC ) ) - ( MLU + ( MUC + CS ) ) ) + Max( ( MUM / DS ),Max( CS,MUM ) ) ) ) + MUR ) / Min( DS ,( RMSe / DS ) ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( ( DDR / ( DDR * ( ( ( BR - CRS ) * ( FirstVNF_CPU + CRS ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - ARS ) ) ) ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( AMS + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( ( MUR - ( ( ( MUR * RCSe ) + CS ) - Min( RMSe ,MUR ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * ( FirstVNF_CPU / ( ( ARS - MDR ) + AMS ) ) ) ,Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) + Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( CS ,RRSe ) / Max( Min( ( RCSe * MUR ) ,( DS * DS ) ),( Max( RMSe,DS ) * Min( RRSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( DDR + FirstVNF_RAM ) ) - Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( MUR * ( Max( MUR,RCSe ) / ( RRSe + CS ) ) ) ,DS ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUR,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / ( ( ( Max( MLU,MUM ) - ( DS - CS ) ) - Min( ( RRSe * ( Min( RMSe ,MUC ) * ( MLU - DS ) ) ) ,( MLU - MUM ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( FirstVNF_CPU_Server - ( MDR * ( Min( DDR ,DDR ) - ( MDR - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( ( ( Min( DS ,( RMSe / DS ) ) / ( Max( RMSe,( MUR + MUM ) ) + MUR ) ) + ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( CS - RCSe ) ) ) ) * MUM ) )", "obj1": 0.7088122605363985, "obj2": 0.17140098425462158}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * PN ) / FirstVNF_Mem ) / Min( PN ,BR ) ) - ( Min( AMS ,PN ) + FirstVNF_Mem_Server ) ) - ( DDR / RRS ) )", "choosing": "Min( Min( ( Max( DS,( ( DS - ( ( RCSe + CS ) - ( RRSe - RCSe ) ) ) - RCSe ) ) * ( ( MUM + MUR ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.1599668428642867}, {"determining": "( Min( ( MDR * ( Min( DDR ,DDR ) - ( MDR - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) ,Const ) * ( Max( Const,AMS ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * RCSe ) ,MUC ) - ( MLU * DS ) )", "obj1": 0.6762452107279694, "obj2": 0.2013069303593653}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Const + MRS ) )", "choosing": "( ( MUM - ( DS * MUR ) ) - ( ( MUR - Min( RCSe ,Max( ( ( Min( RRSe ,CS ) + MUC ) * ( DS * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( MLU ,RCSe ) ) )", "obj1": 0.8122605363984674, "obj2": 0.08720315128683923}, {"determining": "( ( ( PN / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( ( ( AMS + FirstVNF_CPU ) * DDR ) - ( DDR - FirstVNF_Mem ) ) ) ) * Max( PN,AMS ) ) - ( ( ARS * ARS ) / Max( FirstVNF_RAM,BR ) ) )", "choosing": "( Max( ( MUR - RRSe ),RRSe ) / Min( Max( ( MUM / Max( ( MUC - RCSe ),( ( CS - ( RRSe - RCSe ) ) / ( CS + MUM ) ) ) ),CS ) ,RRSe ) )", "obj1": 0.8697318007662835, "obj2": 0.05876915130333881}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MRS + Min( ( BR - FirstVNF_Mem_Server ) ,DDR ) ) ) / FirstVNF_Mem ) / Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "Max( ( Min( RRSe ,RRSe ) + DS ),( RRSe * RMSe ) )", "obj1": 0.8103448275862069, "obj2": 0.1283943263365216}, {"determining": "( ACS - ( MDR - MRS ) )", "choosing": "Max( MLU,( ( ( Max( RCSe,Max( RMSe,MUR ) ) * Min( RMSe ,MUC ) ) / RCSe ) * MUM ) )", "obj1": 0.6973180076628352, "obj2": 0.17937067339175006}, {"determining": "( ( ( MDR * Min( ( ( FirstVNF_Mem + ACS ) * Max( ARS,MRS ) ) ,( RRS + Const ) ) ) - ( AMS + ACS ) ) * ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / DDR ) ) / DDR ) ) ) / ( FirstVNF_RAM - RRS ) ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / ( ( ( MUR * ( MUR / MUC ) ) + MUR ) - ( ( RRSe * ( ( CS - MUC ) / CS ) ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.8908045977011494, "obj2": 0.04873432743178363}, {"determining": "( ( BR / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( MDR - ( ( BR + ( Const / FirstVNF_Mem_Server ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,Max( DS,RCSe ) ) * Max( RRSe,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24433803546381383}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( ( FirstVNF_RAM - ARS ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( DDR + AMS ) ) / ( FirstVNF_CPU_Server + Min( RRS ,Min( ( FirstVNF_Mem_Server / ARS ) ,MRS ) ) ) ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ( FirstVNF_RAM_Server + BR ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( Min( RRSe ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,( Max( DS,Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) ) + ( MUM - ( MUR + MUR ) ) ) ) + ( MLU + ( MUR + MLU ) ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6590038314176245, "obj2": 0.22848122749179894}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( DDR * RRS ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( ( CS / RCSe ) + ( MUC - MLU ) ) ,( MLU * DS ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6704980842911877, "obj2": 0.22236187426831194}, {"determining": "( Min( ARS ,BR ) - ( Const - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * ( ( MUC - MUC ) - MUR ) ) * RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.8448275862068966, "obj2": 0.06907213620261439}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * PN ) / FirstVNF_Mem ) / Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "Min( Min( ( ( ( RMSe - ( MUM * MUR ) ) / MUM ) * ( ( MUR + MUM ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.15791681383922138}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( ( ( ( RRS * PN ) / FirstVNF_Mem ) / Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( ( ACS * FirstVNF_RAM_Server ) ,RRS ) )", "choosing": "( ( RRSe * CS ) / MUC )", "obj1": 0.7931034482758621, "obj2": 0.1423322318798682}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) * Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * RMSe ) * ( DS - MUR ) ) ) ) ,MLU ) )", "obj1": 0.9655172413793104, "obj2": 0.015528860733764764}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) )", "obj1": 0.8218390804597702, "obj2": 0.0776501159993537}, {"determining": "( ( PN * ( Min( Min( ACS ,( FirstVNF_CPU / ARS ) ) ,DDR ) - ( CRS * Max( BR,Min( ( RRS * MDR ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( Const + Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( DS + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( RMSe + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.8275862068965517, "obj2": 0.07572998944978063}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 0.9061302681992337, "obj2": 0.042127879174424315}, {"determining": "( ( PN * ( ( DDR / ( DDR * ( AMS + ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - ARS ) ) ) ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( AMS + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( ( MUR - Min( RCSe ,Max( ( Max( DS,MUM ) * ( DS * ( RMSe / MUR ) ) ),( RCSe + RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 0.842911877394636, "obj2": 0.07172296895254329}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ACS ) ) / DDR ) ) )", "choosing": "Min( Min( Min( DS ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.9195402298850575, "obj2": 0.03571094231755472}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.9406130268199234, "obj2": 0.02465345506541569}, {"determining": "( ( ( ( AMS / ARS ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( DDR * MDR ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( ( MLU * MUR ),Min( MUM ,CS ) ) + ( Max( MUM,( ( DS - CS ) * RCSe ) ) / Max( ( Min( RCSe ,MUC ) - RCSe ),( Min( ( RCSe + MUC ) ,( Max( RCSe,MUM ) + MUM ) ) - MUR ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.26660572008838096}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24497932868220526}, {"determining": "( FirstVNF_CPU_Server - ( MDR * ( Min( DDR ,DDR ) - ( MDR - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( ( ( Min( ( RRSe - DS ) ,RRSe ) + MUR ) - MUR ),Max( MUM,MLU ) )", "obj1": 0.7030651340996169, "obj2": 0.17596727516565727}, {"determining": "( ( ( MDR * CRS ) / ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU / ( ACS - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) / DDR ) ) - ( ( Max( FirstVNF_RAM,PN ) + ACS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC + MUC ) * CS ) / MLU )", "obj1": 0.9846743295019157, "obj2": 0.008345750637544164}, {"determining": "( Min( MRS ,FirstVNF_Mem ) - ( ( ARS * CRS ) / ( Min( ( ACS + FirstVNF_Mem ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( ( MUR * CS ) - RRSe ),( ( Min( Min( MUC ,MUR ) ,RMSe ) / Min( ( ( DS / MUC ) / RRSe ) ,( RCSe - DS ) ) ) * ( MUC - RRSe ) ) ) / MLU )", "obj1": 0.9099616858237548, "obj2": 0.0420109442984921}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.6130268199233716, "obj2": 0.26416731944318134}, {"determining": "( ( BR / FirstVNF_RAM_Server ) * ( ( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / ( MDR - PN ) ) ,Const ) * Min( ( MDR - ( ( BR + ( MRS / Const ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( Max( MUR,MLU ) ,( DS + RCSe ) ) * Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * RMSe ) * ( DS - MUR ) ) ) ) ,MLU ) )", "obj1": 0.6685823754789272, "obj2": 0.22753679804817756}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * PN ) / FirstVNF_Mem ) / Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( Min( MUM ,Max( MUR,MLU ) ) - ( MLU * DS ) )", "obj1": 0.8007662835249042, "obj2": 0.13928917744830877}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( ( MRS + ACS ) * Max( ARS,MRS ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.0277258666715012}, {"determining": "( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,ARS ) ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( MUR - MLU ) ) * Max( Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,DS ),( CS / RMSe ) ) )", "obj1": 0.6283524904214559, "obj2": 0.24884824936832975}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( ( DS / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9482758620689655, "obj2": 0.01849580379720876}, {"determining": "( Max( MRS,( ( RRS / Const ) - ACS ) ) * ( ( ( RRS * Const ) * Max( Max( MDR,FirstVNF_RAM ),AMS ) ) + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) * ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( ( ( MLU * CS ) + DS ) + ( MUR - Max( DS,RCSe ) ) ) - ( MUR - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.25364511381513893}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( ( DS / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01915090154153745}, {"determining": "( ( ( Min( MRS ,( MRS - Const ) ) - Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "Max( ( ( MLU + MUM ) - MUM ),( MUR - Min( RCSe ,Max( ( ( ( RRSe * ( MUC / CS ) ) + MUC ) * ( DS * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) )", "obj1": 0.8026819923371648, "obj2": 0.1338330237951092}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( Max( AMS,Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( RRS + Min( MDR ,RRS ) ) ) * FirstVNF_RAM ) ) ) - Max( Min( ACS ,Min( CRS ,FirstVNF_CPU ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "Max( Min( MUC ,( MUC + RRSe ) ),( ( ( MUC / RMSe ) - ( MUC / DS ) ) + ( ( ( RRSe - MLU ) * MUM ) - ( ( Max( Max( ( RCSe / RMSe ),MLU ),( ( MUR + MUR ) - RCSe ) ) - ( RCSe + MLU ) ) / CS ) ) ) )", "obj1": 0.9712643678160919, "obj2": 0.012071758695084487}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * PN ) / FirstVNF_Mem ) / Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "Min( Min( Min( DS ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.8084291187739464, "obj2": 0.1333652678411037}, {"determining": "( ( Max( ( BR + FirstVNF_Mem ),( ARS + MDR ) ) * ( FirstVNF_CPU_Server - Const ) ) - ( ( ARS * CRS ) / ( Min( Min( RRS ,AMS ) ,( MRS / ARS ) ) / DDR ) ) )", "choosing": "Max( ( ( MLU * MUM ) - MUM ),( MUR - Min( Max( Min( MUR ,RMSe ),Min( RCSe ,RMSe ) ) ,RCSe ) ) )", "obj1": 0.9291187739463601, "obj2": 0.02947880479686938}, {"determining": "Min( ( MDR - Max( FirstVNF_Mem_Server,RRS ) ) ,( ( Min( CRS ,( BR * FirstVNF_CPU ) ) - ( ( PN / ( RRS + ( ( AMS * FirstVNF_RAM ) - ( DDR / CRS ) ) ) ) * ( PN * AMS ) ) ) / MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( MLU,RCSe ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.007222434910919379}, {"determining": "( Max( MRS,ARS ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( Const,RRS ),Min( ( Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / Min( MUR ,MUC ) ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( Min( MUM ,CS ) - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ACS ) ) / DDR ) ) )", "choosing": "Max( ( ( MLU * MUM ) - MUM ),( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) ) )", "obj1": 0.9233716475095786, "obj2": 0.03319340649693983}, {"determining": "Min( ( MDR - Max( FirstVNF_Mem_Server,( Max( ARS,RRS ) / ( CRS - ( ARS - FirstVNF_Mem ) ) ) ) ) ,( ( Min( CRS ,( BR * FirstVNF_CPU ) ) - ( ( PN / ( RRS + ( ( AMS * FirstVNF_RAM ) - ( DDR / CRS ) ) ) ) * ( PN * AMS ) ) ) / MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.9942528735632183, "obj2": 0.005384471617433921}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * PN ) / FirstVNF_Mem ) / Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "( Max( MUC,Max( MUM,MUC ) ) + ( MUC + MUM ) )", "obj1": 0.7950191570881227, "obj2": 0.1417806504668306}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ACS ) ) / DDR ) ) )", "choosing": "Max( ( ( MLU * MUM ) - MUM ),( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) ) )", "obj1": 0.9252873563218391, "obj2": 0.030894575616313216}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "Min( Min( ( ( ( RMSe - ( MUM * MUR ) ) / MUM ) * ( ( MUR + MUM ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.011083365744899572}, {"determining": "( Max( Const,Min( ACS ,( BR - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Const * ( ( Const - BR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUC - RCSe ) ,( ( Max( RCSe,CS ) + ( RCSe - RMSe ) ) + Max( ( MLU + CS ),Min( MLU ,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "Min( Min( ( Max( MLU,( ( DS - ( ( RCSe + CS ) - Min( MUC ,RRSe ) ) ) - RCSe ) ) * ( ( MUM + MUR ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.011083365744899572}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,FirstVNF_CPU_Server ) / ACS ) - ( MDR - ( Max( DDR,ACS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( ( MDR * FirstVNF_Mem ) * Min( RRS ,( FirstVNF_Mem + RRS ) ) ) ) )", "choosing": "( ( ( RRSe / MUC ) - Min( RMSe ,MLU ) ) * Min( MUR ,MLU ) )", "obj1": 0.9482758620689655, "obj2": 0.01849580379720876}, {"determining": "( Max( MRS,ARS ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( ( Min( RRS ,MDR ) * CRS ),RRS ),Min( ( ( Const - ACS ) - ( Max( ACS,FirstVNF_Mem ) / FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * MUC ) ) - ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( ( RCSe + Max( RMSe,RCSe ) ) - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - ( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) ) )", "choosing": "Max( Max( ( RMSe - MLU ),MLU ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0007993714282739525}, {"determining": "( ( ( ( ARS * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - ( ( MDR - ( ( MDR / Const ) + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) ) )", "choosing": "Max( MUC,Max( Min( MUM ,RCSe ),MUR ) )", "obj1": 0.9980842911877394, "obj2": 0.0007993714282739525}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( DDR ,DDR ) - ( MDR - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( ( ( Max( RCSe,Max( RMSe,MUR ) ) * Min( RMSe ,MUC ) ) / RCSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( Max( ARS,ACS ) ,DDR ) - ( AMS - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( Max( ( ( MUM * MUC ) - Min( MLU ,CS ) ),( ( MLU * DS ) - MUM ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) * ( BR - ( FirstVNF_CPU * BR ) ) )", "choosing": "( ( ( MUM + RRSe ) + MLU ) - ( ( RRSe - DS ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) / ( FirstVNF_CPU_Server * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) / ( Min( ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( DDR + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - MDR ) ,BR ) * ( DDR * ( RRS / ( FirstVNF_RAM / PN ) ) ) ) ) - Max( ( MRS / FirstVNF_RAM ),Min( ( ( AMS + ( Const + Const ) ) * ( Const + MDR ) ) ,BR ) ) )", "choosing": "Min( ( ( RRSe + CS ) * Max( CS,( DS + ( DS - MUR ) ) ) ) ,( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,MDR ) - ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - MDR ) )", "choosing": "Max( Max( ( Max( CS,RRSe ) * Max( Max( Min( MUR ,RCSe ),RCSe ),CS ) ),MLU ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * CRS ),RRS ) / ( FirstVNF_CPU_Server + ( ARS + FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,( MUC * Max( MUC,RRSe ) ) ) + MUR ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Min( AMS ,( Min( DDR ,AMS ) - MDR ) ) )", "choosing": "Max( ( DS + DS ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR / MDR ) / FirstVNF_RAM_Server ) ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( ( ( MUR / ( ( DS / ( MUM - RRSe ) ) / ( CS + RRSe ) ) ) * MUC ) + DS ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - BR ) - ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( MUC - MUR ) * ( MUM / ( MUR + ( ( MUM - MUC ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,( FirstVNF_Mem - FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( Const + ( Min( FirstVNF_Mem ,MRS ) + ( ( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) ) - ( ( ARS + CRS ) * Const ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - BR ) * ( BR - ( AMS / ( FirstVNF_Mem - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) - Max( ( ( BR / FirstVNF_Mem_Server ) + AMS ),( Const + FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * RRSe ),Min( RMSe ,( MUR / Min( Max( RRSe,( CS - RCSe ) ) ,( MUC / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + DDR ) - Min( FirstVNF_CPU ,MRS ) ) / Max( Min( ( BR / ( FirstVNF_CPU * DDR ) ) ,MDR ),( ( ( Max( Const,ACS ) + ( ( PN / MDR ) - FirstVNF_RAM ) ) / FirstVNF_Mem ) - CRS ) ) )", "choosing": "( Max( ( MUC / Min( DS ,Min( Max( RMSe,RMSe ) ,( DS + Min( RCSe ,MLU ) ) ) ) ),Max( DS,( DS + RMSe ) ) ) + Min( Min( RCSe ,MUM ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - Const ) ),PN ) * FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe * ( Max( Min( ( DS / CS ) ,MUM ),MUM ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const - CRS ) ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) - Min( DDR ,MDR ) )", "choosing": "( ( Max( MUR,DS ) + Min( ( CS + RRSe ) ,DS ) ) / ( RCSe - ( ( MUM / MUR ) * ( MUR * Min( ( ( RMSe * DS ) / Min( DS ,RMSe ) ) ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) - ( Max( CRS,FirstVNF_RAM ) * ( ACS * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_RAM_Server ) * Max( ARS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / BR ) ) )", "choosing": "Max( ( ( MUR - RRSe ) + ( RMSe + RRSe ) ),( ( ( DS + MLU ) * ( CS - MLU ) ) * Max( ( ( DS / MUC ) / Max( ( ( ( RCSe + RRSe ) / RRSe ) + DS ),MUM ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Min( Const ,MDR ) ) * Max( ( FirstVNF_Mem - MDR ),Max( RRS,FirstVNF_RAM ) ) ) ,Max( MRS,DDR ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( DS,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( ( ( CS - MLU ) + ( RMSe * Min( MUM ,( RMSe * CS ) ) ) ),MUM ) / ( RMSe - Max( DS,( RRSe / ( ( RMSe * DS ) / ( MLU - RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR * Const ) - ( Const * FirstVNF_Mem_Server ) ) * ( DDR + FirstVNF_CPU ) ) ,Min( ( Const / ( ACS + DDR ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( MRS,( RRS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUC,( RCSe + ( Min( MUR ,RRSe ) / RCSe ) ) ) - DS ) / Max( ( Max( Max( ( CS - MLU ),Max( MLU,( Min( DS ,CS ) * Min( CS ,CS ) ) ) ),MUR ) * ( ( Min( DS ,Max( CS,MUC ) ) - RMSe ) * Max( ( MUC - Max( CS,MUM ) ),( RRSe - Max( DS,RRSe ) ) ) ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( PN / AMS ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ,( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * ( ACS / ACS ) ) )", "choosing": "( ( ( ( ( MUR + Min( RRSe ,MUM ) ) + MUR ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( ARS / Const ) ) - ( MDR * ( CRS * ARS ) ) )", "choosing": "( ( ( RCSe * Min( MLU ,( RMSe - MLU ) ) ) * ( MUM * MUC ) ) - ( ( RRSe - ( Max( RMSe,( RMSe - ( ( MLU + RRSe ) * ( RCSe - RRSe ) ) ) ) - RMSe ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) - ( MDR - ( FirstVNF_RAM * AMS ) ) )", "choosing": "( Max( ( MUR / ( ( RMSe - RMSe ) - ( Max( Max( RCSe,MUM ),MUR ) * RCSe ) ) ),MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - ( Const + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) * Max( Min( RRS ,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Min( ( FirstVNF_CPU / AMS ) ,Max( DDR,BR ) ) ,( Min( Const ,Min( BR ,ACS ) ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MLU,( RMSe / ( CS - RMSe ) ) ) ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + Min( ACS ,FirstVNF_Mem_Server ) ) - Min( RRS ,RRS ) )", "choosing": "Max( Max( ( RMSe - MLU ),MLU ),( ( MLU + ( ( Min( ( MUR - MUC ) ,( CS + ( DS + MUC ) ) ) / CS ) + ( MUR / Min( ( MLU - Min( CS ,DS ) ) ,Max( ( MUR * MLU ),( DS * MUR ) ) ) ) ) ) / ( ( RCSe * DS ) / ( Min( ( MLU / Min( ( MUR / RCSe ) ,( MUM * RCSe ) ) ) ,MUC ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( FirstVNF_RAM - Max( FirstVNF_Mem,( ACS - FirstVNF_CPU ) ) ) ) - FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Max( ( CRS + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ),( FirstVNF_Mem / Min( Max( ( DDR + FirstVNF_Mem ),ACS ) ,CRS ) ) ) ) ,Const ) )", "choosing": "( Min( CS ,( ( Max( ( RMSe / MLU ),( MUR / CS ) ) / ( DS - RCSe ) ) * MLU ) ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - CRS ) * ( FirstVNF_CPU + CRS ) )", "choosing": "( Min( MUM ,( ( ( MUR * RCSe ) + CS ) - Min( RMSe ,MUR ) ) ) - ( RCSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / ( Max( RRS,Const ) + ( Const + CRS ) ) ) + AMS ) / ( FirstVNF_CPU_Server / ( ( MDR * FirstVNF_Mem ) - Min( MRS ,RRS ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) - RRSe ) * ( Max( ( ( Min( RRSe ,MLU ) + CS ) * ( Min( ( ( MUC - RMSe ) + ( RRSe * MUR ) ) ,Max( RCSe,RCSe ) ) / MUC ) ),RMSe ) - ( RMSe * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) - Min( BR ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) - ( AMS - ( MRS * AMS ) ) )", "choosing": "( Min( Min( ( RMSe - MLU ) ,RCSe ) ,Max( DS,RCSe ) ) / ( RMSe * ( MUC * Max( ( MUC / Max( Min( DS ,MLU ),MUM ) ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MDR ,( ( FirstVNF_CPU + RRS ) / FirstVNF_Mem ) ) - Max( AMS,ACS ) ) * FirstVNF_RAM ) - ( ( ( Min( ( FirstVNF_RAM_Server + RRS ) ,( ( FirstVNF_CPU_Server - DDR ) + MRS ) ) / MRS ) / DDR ) + Const ) )", "choosing": "( Min( MUC ,Min( ( Max( ( MLU * MUM ),DS ) / ( Min( MUC ,MUC ) * DS ) ) ,Min( RCSe ,MUM ) ) ) - ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Max( ( FirstVNF_Mem + ( BR / DDR ) ),AMS ) )", "choosing": "Min( ( Max( RRSe,( ( Min( Min( ( DS + RMSe ) ,( DS + RRSe ) ) ,( DS * Min( MUR ,RMSe ) ) ) / ( ( CS - MUC ) * RMSe ) ) * CS ) ) + Max( MLU,CS ) ) ,( Max( MUM,( MLU / RRSe ) ) + Max( Min( RCSe ,RRSe ),( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_RAM ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "Max( ( Max( Max( RMSe,Max( MUR,MUR ) ),MUR ) - MUR ),Max( ( CS + Max( Min( MUM ,RMSe ),RRSe ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( Min( DDR ,( ( FirstVNF_CPU - ( MDR - CRS ) ) - FirstVNF_RAM_Server ) ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( ( ( Min( DS ,MUC ) / CS ) * ( ( ( MUR / RRSe ) * CS ) + ( Min( MUC ,RCSe ) * DS ) ) ) - MUM ) - RCSe ),MUC ) - ( ( MUR - RMSe ) - Max( MUM,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / FirstVNF_RAM_Server ) ,Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( MUC * RMSe ) ) + ( ( RCSe / MUM ) + Max( RMSe,RMSe ) ) ) / Min( ( ( MUM + Min( ( CS - MUR ) ,MUM ) ) * Min( ( ( RRSe * Max( ( MUC - RRSe ),Max( MUR,CS ) ) ) / CS ) ,RRSe ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,PN ) + ( Const + CRS ) ) - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( Min( ( MUC + RRSe ) ,MUC ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( DDR / CRS ) ) - ( ( ( RRS - PN ) + FirstVNF_RAM ) / ( FirstVNF_CPU - PN ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) * Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( Min( MUC ,( MUC + RRSe ) ) / ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) - Min( Min( FirstVNF_CPU ,RRS ) ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( CS + ( Min( ( MUM + ( RCSe - MLU ) ) ,MUR ) * RMSe ) ) + ( Min( RMSe ,Min( DS ,RRSe ) ) * MUC ) ),( MUM * Max( RRSe,Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * ( FirstVNF_CPU / ( ( ARS - MDR ) + AMS ) ) ) ,Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) + Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( CS ,RRSe ) / Max( Min( ( RCSe * MUR ) ,( DS * DS ) ),( Max( RMSe,DS ) * Min( RRSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( FirstVNF_RAM_Server * Min( ( MDR + Min( RRS ,( CRS + ARS ) ) ) ,ARS ) ) - ( FirstVNF_RAM * ( Min( DDR ,DDR ) - ( MDR - ( ( ( AMS - Const ) + CRS ) / RRS ) ) ) ) )", "choosing": "Max( ( Max( Max( MUR,DS ),RCSe ) - MLU ),( ( Min( ( RRSe - DS ) ,( CS * MUR ) ) + MUR ) - MUR ) )", "obj1": 0.6685823754789272, "obj2": 0.19367809502077254}, {"determining": "( Max( PN,( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,MDR ) + ( BR * ( AMS - FirstVNF_Mem_Server ) ) ) - ( Min( ACS ,( Max( DDR,ARS ) / FirstVNF_RAM ) ) / ( AMS / MDR ) ) ) ) - ( ARS + ARS ) )", "choosing": "( ( CS - RCSe ) - Max( RRSe,Max( Max( RCSe,MUC ),( ( DS * Min( DS ,( RMSe - ( MLU / MLU ) ) ) ) - RRSe ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.09479477959911128}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( ( FirstVNF_RAM - ARS ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( DDR + AMS ) ) / ( FirstVNF_CPU_Server + Min( RRS ,Min( ( FirstVNF_Mem_Server / ARS ) ,MRS ) ) ) ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ( FirstVNF_RAM_Server + BR ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( Min( RRSe ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,( Max( DS,Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) ) + ( MUM - ( MUR + MUR ) ) ) ) + ( MLU + ( MUR + MLU ) ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6590038314176245, "obj2": 0.22848122749179894}, {"determining": "( ( BR / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( MDR - ( ( BR + ( Const / FirstVNF_Mem_Server ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,Max( DS,RCSe ) ) * Max( RRSe,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24433803546381383}, {"determining": "( ( PN - ( ( Min( ( Const + Max( MDR,MDR ) ) ,ACS ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) * Max( Min( ( Max( ( MLU * ( Min( MUM ,RRSe ) + Max( CS,RCSe ) ) ),DS ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) )", "obj1": 0.7911877394636015, "obj2": 0.09058619436394133}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Const + MRS ) )", "choosing": "( ( MUM - ( DS * MUR ) ) - ( ( MUR - Min( RCSe ,Max( ( ( Min( RRSe ,CS ) + MUC ) * ( DS * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( MLU ,RCSe ) ) )", "obj1": 0.8122605363984674, "obj2": 0.08720315128683923}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( PN * ( ( Min( ACS ,( ( ( PN + PN ) + ARS ) / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( CRS + MRS ) )", "choosing": "( Min( ( CS + ( MUC - CS ) ) ,MUC ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.8601532567049809, "obj2": 0.06332795750226998}, {"determining": "( FirstVNF_CPU_Server - ( MDR * ( ( DDR + ( MRS - RRS ) ) - ( MDR - ( MDR - ( AMS * BR ) ) ) ) ) )", "choosing": "Max( ( MLU * MUR ),Min( MUM ,Max( Min( CS ,( ( ( RCSe + ( RRSe - MLU ) ) / MUM ) * ( Max( ( DS / CS ),Max( RCSe,DS ) ) / ( MUR - Min( RCSe ,MLU ) ) ) ) ),DS ) ) )", "obj1": 0.8793103448275862, "obj2": 0.05301691831249107}, {"determining": "( ( ( PN / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( ( ( AMS + FirstVNF_CPU ) * DDR ) - ( DDR - FirstVNF_Mem ) ) ) ) * Max( PN,AMS ) ) - ( ( ARS * ARS ) / Max( FirstVNF_RAM,BR ) ) )", "choosing": "( Max( ( MUR - RRSe ),RRSe ) / Min( Max( ( MUM / Max( ( MUC - RCSe ),( ( CS - ( RRSe - RCSe ) ) / ( CS + MUM ) ) ) ),CS ) ,RRSe ) )", "obj1": 0.8697318007662835, "obj2": 0.05876915130333881}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) * Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * RMSe ) * ( DS - MUR ) ) ) ) ,MLU ) )", "obj1": 0.9655172413793104, "obj2": 0.015528860733764764}, {"determining": "( ( PN * ( Min( Min( ACS ,( FirstVNF_CPU / ARS ) ) ,DDR ) - ( CRS * Max( BR,Min( ( RRS * MDR ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( Const + Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( DS + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( RMSe + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.8275862068965517, "obj2": 0.07572998944978063}, {"determining": "( Min( ARS ,BR ) - ( Const - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * ( ( MUC - MUC ) - MUR ) ) * RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.8448275862068966, "obj2": 0.06907213620261439}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ACS ) ) / DDR ) ) )", "choosing": "Min( Min( Min( DS ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.9195402298850575, "obj2": 0.03571094231755472}, {"determining": "( ( PN * ( ( DDR / ( DDR * ( AMS + ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - ARS ) ) ) ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( AMS + MRS ) )", "choosing": "( ( MUM / RCSe ) - ( ( MUR - Min( RCSe ,Max( ( Max( DS,MUM ) * ( DS * ( RMSe / MUR ) ) ),( RCSe + RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 0.842911877394636, "obj2": 0.07172296895254329}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + Min( Min( Min( DS ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.007537639182092696}, {"determining": "( ( CRS / FirstVNF_CPU ) - Min( DDR ,Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( ( Max( ( MUR / MUR ),( ( RRSe * Min( MUC ,RMSe ) ) - ( ( Min( RMSe ,RCSe ) + MUM ) / ( MUC - Max( MLU,MUR ) ) ) ) ) / Max( ( MUM * DS ),( CS + MUM ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.9406130268199234, "obj2": 0.024546990873774398}, {"determining": "( ( ( ( AMS / ARS ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( DDR * MDR ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( ( MLU * MUR ),Min( MUM ,CS ) ) + ( Max( MUM,( ( DS - CS ) * RCSe ) ) / Max( ( Min( RCSe ,MUC ) - RCSe ),( Min( ( RCSe + MUC ) ,( Max( RCSe,MUM ) + MUM ) ) - MUR ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.26660572008838096}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9482758620689655, "obj2": 0.01828128271697566}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24497932868220526}, {"determining": "( ( ( ( Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) / DDR ) - ( FirstVNF_Mem * RRS ) ) * PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe + ( MLU * DS ) ) * Min( ( RMSe / MUR ) ,Min( DS ,DS ) ) )", "obj1": 0.8180076628352491, "obj2": 0.07918991785655563}, {"determining": "( Min( MRS ,FirstVNF_Mem ) - ( ( ARS * CRS ) / ( Min( ( ACS + FirstVNF_Mem ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( ( MUR * CS ) - RRSe ),( ( Min( Min( MUC ,MUR ) ,RMSe ) / Min( ( ( DS / MUC ) / RRSe ) ,( RCSe - DS ) ) ) * ( MUC - RRSe ) ) ) / MLU )", "obj1": 0.9099616858237548, "obj2": 0.0420109442984921}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003510006469269351}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( ( ( MDR * Min( ( ( FirstVNF_Mem + ACS ) * Max( ARS,MRS ) ) ,( RRS + Const ) ) ) - ( AMS + ACS ) ) * ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / DDR ) ) / DDR ) ) ) / ( FirstVNF_RAM - RRS ) ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / ( ( ( MUR * ( MUR / MUC ) ) + MUR ) - ( ( RRSe * ( ( CS - MUC ) / CS ) ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.8908045977011494, "obj2": 0.04873432743178363}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.6130268199233716, "obj2": 0.26416731944318134}, {"determining": "( ( DDR / RRS ) * ( MRS - Min( DDR ,( PN - CRS ) ) ) )", "choosing": "( ( RMSe / MLU ) * Min( Max( CS,( ( MLU - Min( MUC ,MUM ) ) / Min( ( Min( DS ,DS ) / ( ( MUM - MLU ) + ( MLU + MLU ) ) ) ,RRSe ) ) ) ,RCSe ) )", "obj1": 0.8984674329501916, "obj2": 0.04541680735925762}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( ( MRS + ACS ) * Max( ARS,MRS ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.0277258666715012}, {"determining": "( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,ARS ) ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( MUR - MLU ) ) * Max( Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,DS ),( CS / RMSe ) ) )", "obj1": 0.6283524904214559, "obj2": 0.24884824936832975}, {"determining": "( Max( MRS,( ( RRS / Const ) - ACS ) ) * ( ( ( RRS * Const ) * Max( Max( MDR,FirstVNF_RAM ),AMS ) ) + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) * ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( ( ( MLU * CS ) + DS ) + ( MUR - Max( DS,RCSe ) ) ) - ( MUR - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.25364511381513893}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 0.9061302681992337, "obj2": 0.042127879174424315}, {"determining": "( ( Min( MDR ,AMS ) + ( DDR - PN ) ) - Max( Max( ( AMS * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "Max( Min( MUC ,( MUC + RRSe ) ),( ( ( MUC / RMSe ) - ( MUC / DS ) ) + ( ( Max( ( MUC + CS ),( MUC / MUC ) ) * MUM ) - ( ( Max( Max( MLU,( RCSe / RMSe ) ),( ( MUM + MUR ) - RCSe ) ) - ( RCSe + MLU ) ) + CS ) ) ) )", "obj1": 0.9712643678160919, "obj2": 0.011960940871442864}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) )", "obj1": 0.8218390804597702, "obj2": 0.0776501159993537}, {"determining": "( Min( MRS ,MRS ) - ( ( ( FirstVNF_RAM_Server + ( PN / FirstVNF_CPU ) ) * CRS ) / ( Min( ACS ,( FirstVNF_CPU - Max( RRS,ARS ) ) ) / DDR ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * ( MUM + Max( Max( ( Min( RCSe ,MLU ) / MUR ),( MUR * DS ) ),Min( ( RMSe / MUM ) ,Min( ( Max( RMSe,CS ) * Max( MLU,RRSe ) ) ,MUM ) ) ) ) ) )", "obj1": 0.9233716475095786, "obj2": 0.03235485779764607}, {"determining": "( ( ( RRS - ( MRS / CRS ) ) / BR ) * ( FirstVNF_RAM + Max( Max( Const,RRS ),Min( ( Min( Max( Max( DDR,BR ),Min( PN ,MRS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( ( RRSe * RRSe ) / Min( MUR ,MUC ) ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + Max( RRSe,DS ) ) * ( Max( Min( CS ,CS ),( CS * CS ) ) - ( Min( MUR ,MUM ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( Min( MUM ,CS ) - Max( ( MLU / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( ( Max( ( BR + FirstVNF_Mem ),( ARS + MDR ) ) * ( FirstVNF_CPU_Server - Const ) ) - ( ( ARS * CRS ) / ( Min( Min( RRS ,AMS ) ,( MRS / ARS ) ) / DDR ) ) )", "choosing": "Max( ( ( MLU * MUM ) - MUM ),( MUR - Min( Max( Min( MUR ,RMSe ),Min( RCSe ,RMSe ) ) ,RCSe ) ) )", "obj1": 0.9291187739463601, "obj2": 0.02947880479686938}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * FirstVNF_RAM_Server ) / ( Min( ACS ,( FirstVNF_CPU / DDR ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( Max( AMS,FirstVNF_Mem_Server ) - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( MUM / CS ) ) - Max( ( MLU - MUR ),( ( RRSe * MUC ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.89272030651341, "obj2": 0.04730882927861678}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * DDR ) / ( Min( ( PN + FirstVNF_RAM_Server ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server * BR ) ) ) / DDR ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( MUC ,( Max( RMSe,RCSe ) / MLU ) ) ,( CS / CS ) ) ) / ( ( MUC / ( RCSe / RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( CS * MLU ) * ( MUC / MUM ) ) / ( MUR + RCSe ) ) )", "obj1": 0.9252873563218391, "obj2": 0.029794250069530768}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "Min( Min( ( ( ( RMSe - ( MUM * MUR ) ) / MUM ) * ( ( MUR + MUM ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.011083365744899572}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "Min( Min( ( Max( MLU,( ( DS - ( ( RCSe + CS ) - Min( MUC ,RRSe ) ) ) - RCSe ) ) * ( ( MUM + MUR ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.011083365744899572}, {"determining": "( Max( Const,Min( ACS ,( BR - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Const * ( ( Const - BR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUC - RCSe ) ,( ( Max( RCSe,CS ) + ( RCSe - RMSe ) ) + Max( ( MLU + CS ),Min( MLU ,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "( Max( Min( DDR ,ACS ),Min( ( FirstVNF_Mem_Server * ( Min( MRS ,RRS ) - Max( Max( ( MRS - BR ),Max( PN,FirstVNF_CPU ) ),( FirstVNF_CPU_Server / CRS ) ) ) ) ,ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( CS ,RCSe ) ,( ( Min( MUR ,CS ) + Max( RCSe,MUM ) ) + Max( ( RRSe + RRSe ),Min( CS ,MLU ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "( Max( MRS,ARS ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( Const,RRS ),Min( ( Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / Min( MUR ,MUC ) ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( Min( MUM ,CS ) - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - ( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) ) )", "choosing": "Max( Max( ( RMSe - MLU ),MLU ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0007993714282739525}, {"determining": "( ( ( ( ARS * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - ( ( MDR - ( ( MDR / Const ) + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) ) )", "choosing": "Max( MUC,Max( Min( MUM ,RCSe ),MUR ) )", "obj1": 0.9980842911877394, "obj2": 0.0007993714282739525}, {"determining": "( ( ACS / ( DDR + FirstVNF_RAM ) ) - Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( MUR * ( Max( MUR,RCSe ) / ( RRSe + CS ) ) ) ,DS ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUR,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / ( ( ( Max( MLU,MUM ) - ( DS - CS ) ) - Min( ( RRSe * ( Min( RMSe ,MUC ) * ( MLU - DS ) ) ) ,( MLU - MUM ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( DDR ,DDR ) - ( MDR - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( ( ( Max( RCSe,Max( RMSe,MUR ) ) * Min( RMSe ,MUC ) ) / RCSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( Max( ARS,ACS ) ,DDR ) - ( AMS - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( Max( ( ( MUM * MUC ) - Min( MLU ,CS ) ),( ( MLU * DS ) - MUM ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) * ( BR - ( FirstVNF_CPU * BR ) ) )", "choosing": "( ( ( MUM + RRSe ) + MLU ) - ( ( RRSe - DS ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) / ( FirstVNF_CPU_Server * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) / ( Min( ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( DDR + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - MDR ) ,BR ) * ( DDR * ( RRS / ( FirstVNF_RAM / PN ) ) ) ) ) - Max( ( MRS / FirstVNF_RAM ),Min( ( ( AMS + ( Const + Const ) ) * ( Const + MDR ) ) ,BR ) ) )", "choosing": "Min( ( ( RRSe + CS ) * Max( CS,( DS + ( DS - MUR ) ) ) ) ,( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,MDR ) - ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - MDR ) )", "choosing": "Max( Max( ( Max( CS,RRSe ) * Max( Max( Min( MUR ,RCSe ),RCSe ),CS ) ),MLU ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * CRS ),RRS ) / ( FirstVNF_CPU_Server + ( ARS + FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,( MUC * Max( MUC,RRSe ) ) ) + MUR ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Min( AMS ,( Min( DDR ,AMS ) - MDR ) ) )", "choosing": "Max( ( DS + DS ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR / MDR ) / FirstVNF_RAM_Server ) ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( ( ( MUR / ( ( DS / ( MUM - RRSe ) ) / ( CS + RRSe ) ) ) * MUC ) + DS ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - BR ) - ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( MUC - MUR ) * ( MUM / ( MUR + ( ( MUM - MUC ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,( FirstVNF_Mem - FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( Const + ( Min( FirstVNF_Mem ,MRS ) + ( ( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) ) - ( ( ARS + CRS ) * Const ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - BR ) * ( BR - ( AMS / ( FirstVNF_Mem - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) - Max( ( ( BR / FirstVNF_Mem_Server ) + AMS ),( Const + FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * RRSe ),Min( RMSe ,( MUR / Min( Max( RRSe,( CS - RCSe ) ) ,( MUC / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + DDR ) - Min( FirstVNF_CPU ,MRS ) ) / Max( Min( ( BR / ( FirstVNF_CPU * DDR ) ) ,MDR ),( ( ( Max( Const,ACS ) + ( ( PN / MDR ) - FirstVNF_RAM ) ) / FirstVNF_Mem ) - CRS ) ) )", "choosing": "( Max( ( MUC / Min( DS ,Min( Max( RMSe,RMSe ) ,( DS + Min( RCSe ,MLU ) ) ) ) ),Max( DS,( DS + RMSe ) ) ) + Min( Min( RCSe ,MUM ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - Const ) ),PN ) * FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe * ( Max( Min( ( DS / CS ) ,MUM ),MUM ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const - CRS ) ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) - Min( DDR ,MDR ) )", "choosing": "( ( Max( MUR,DS ) + Min( ( CS + RRSe ) ,DS ) ) / ( RCSe - ( ( MUM / MUR ) * ( MUR * Min( ( ( RMSe * DS ) / Min( DS ,RMSe ) ) ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) - ( Max( CRS,FirstVNF_RAM ) * ( ACS * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_RAM_Server ) * Max( ARS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / BR ) ) )", "choosing": "Max( ( ( MUR - RRSe ) + ( RMSe + RRSe ) ),( ( ( DS + MLU ) * ( CS - MLU ) ) * Max( ( ( DS / MUC ) / Max( ( ( ( RCSe + RRSe ) / RRSe ) + DS ),MUM ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Min( Const ,MDR ) ) * Max( ( FirstVNF_Mem - MDR ),Max( RRS,FirstVNF_RAM ) ) ) ,Max( MRS,DDR ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( DS,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( ( ( CS - MLU ) + ( RMSe * Min( MUM ,( RMSe * CS ) ) ) ),MUM ) / ( RMSe - Max( DS,( RRSe / ( ( RMSe * DS ) / ( MLU - RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR * Const ) - ( Const * FirstVNF_Mem_Server ) ) * ( DDR + FirstVNF_CPU ) ) ,Min( ( Const / ( ACS + DDR ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( MRS,( RRS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUC,( RCSe + ( Min( MUR ,RRSe ) / RCSe ) ) ) - DS ) / Max( ( Max( Max( ( CS - MLU ),Max( MLU,( Min( DS ,CS ) * Min( CS ,CS ) ) ) ),MUR ) * ( ( Min( DS ,Max( CS,MUC ) ) - RMSe ) * Max( ( MUC - Max( CS,MUM ) ),( RRSe - Max( DS,RRSe ) ) ) ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( PN / AMS ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ,( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * ( ACS / ACS ) ) )", "choosing": "( ( ( ( ( MUR + Min( RRSe ,MUM ) ) + MUR ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( ARS / Const ) ) - ( MDR * ( CRS * ARS ) ) )", "choosing": "( ( ( RCSe * Min( MLU ,( RMSe - MLU ) ) ) * ( MUM * MUC ) ) - ( ( RRSe - ( Max( RMSe,( RMSe - ( ( MLU + RRSe ) * ( RCSe - RRSe ) ) ) ) - RMSe ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) - ( MDR - ( FirstVNF_RAM * AMS ) ) )", "choosing": "( Max( ( MUR / ( ( RMSe - RMSe ) - ( Max( Max( RCSe,MUM ),MUR ) * RCSe ) ) ),MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - ( Const + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) * Max( Min( RRS ,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Min( ( FirstVNF_CPU / AMS ) ,Max( DDR,BR ) ) ,( Min( Const ,Min( BR ,ACS ) ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MLU,( RMSe / ( CS - RMSe ) ) ) ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + Min( ACS ,FirstVNF_Mem_Server ) ) - Min( RRS ,RRS ) )", "choosing": "Max( Max( ( RMSe - MLU ),MLU ),( ( MLU + ( ( Min( ( MUR - MUC ) ,( CS + ( DS + MUC ) ) ) / CS ) + ( MUR / Min( ( MLU - Min( CS ,DS ) ) ,Max( ( MUR * MLU ),( DS * MUR ) ) ) ) ) ) / ( ( RCSe * DS ) / ( Min( ( MLU / Min( ( MUR / RCSe ) ,( MUM * RCSe ) ) ) ,MUC ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( FirstVNF_RAM - Max( FirstVNF_Mem,( ACS - FirstVNF_CPU ) ) ) ) - FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Max( ( CRS + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ),( FirstVNF_Mem / Min( Max( ( DDR + FirstVNF_Mem ),ACS ) ,CRS ) ) ) ) ,Const ) )", "choosing": "( Min( CS ,( ( Max( ( RMSe / MLU ),( MUR / CS ) ) / ( DS - RCSe ) ) * MLU ) ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - CRS ) * ( FirstVNF_CPU + CRS ) )", "choosing": "( Min( MUM ,( ( ( MUR * RCSe ) + CS ) - Min( RMSe ,MUR ) ) ) - ( RCSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / ( Max( RRS,Const ) + ( Const + CRS ) ) ) + AMS ) / ( FirstVNF_CPU_Server / ( ( MDR * FirstVNF_Mem ) - Min( MRS ,RRS ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) - RRSe ) * ( Max( ( ( Min( RRSe ,MLU ) + CS ) * ( Min( ( ( MUC - RMSe ) + ( RRSe * MUR ) ) ,Max( RCSe,RCSe ) ) / MUC ) ),RMSe ) - ( RMSe * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) - Min( BR ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) - ( AMS - ( MRS * AMS ) ) )", "choosing": "( Min( Min( ( RMSe - MLU ) ,RCSe ) ,Max( DS,RCSe ) ) / ( RMSe * ( MUC * Max( ( MUC / Max( Min( DS ,MLU ),MUM ) ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MDR ,( ( FirstVNF_CPU + RRS ) / FirstVNF_Mem ) ) - Max( AMS,ACS ) ) * FirstVNF_RAM ) - ( ( ( Min( ( FirstVNF_RAM_Server + RRS ) ,( ( FirstVNF_CPU_Server - DDR ) + MRS ) ) / MRS ) / DDR ) + Const ) )", "choosing": "( Min( MUC ,Min( ( Max( ( MLU * MUM ),DS ) / ( Min( MUC ,MUC ) * DS ) ) ,Min( RCSe ,MUM ) ) ) - ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Max( ( FirstVNF_Mem + ( BR / DDR ) ),AMS ) )", "choosing": "Min( ( Max( RRSe,( ( Min( Min( ( DS + RMSe ) ,( DS + RRSe ) ) ,( DS * Min( MUR ,RMSe ) ) ) / ( ( CS - MUC ) * RMSe ) ) * CS ) ) + Max( MLU,CS ) ) ,( Max( MUM,( MLU / RRSe ) ) + Max( Min( RCSe ,RRSe ),( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_RAM ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "Max( ( Max( Max( RMSe,Max( MUR,MUR ) ),MUR ) - MUR ),Max( ( CS + Max( Min( MUM ,RMSe ),RRSe ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( Min( DDR ,( ( FirstVNF_CPU - ( MDR - CRS ) ) - FirstVNF_RAM_Server ) ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( ( ( Min( DS ,MUC ) / CS ) * ( ( ( MUR / RRSe ) * CS ) + ( Min( MUC ,RCSe ) * DS ) ) ) - MUM ) - RCSe ),MUC ) - ( ( MUR - RMSe ) - Max( MUM,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / FirstVNF_RAM_Server ) ,Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( MUC * RMSe ) ) + ( ( RCSe / MUM ) + Max( RMSe,RMSe ) ) ) / Min( ( ( MUM + Min( ( CS - MUR ) ,MUM ) ) * Min( ( ( RRSe * Max( ( MUC - RRSe ),Max( MUR,CS ) ) ) / CS ) ,RRSe ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,PN ) + ( Const + CRS ) ) - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( Min( ( MUC + RRSe ) ,MUC ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( DDR / CRS ) ) - ( ( ( RRS - PN ) + FirstVNF_RAM ) / ( FirstVNF_CPU - PN ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) * Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( DDR,BR ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ) ) * ( Min( PN ,FirstVNF_CPU ) + MRS ) )", "choosing": "( Min( MUC ,( MUC + RRSe ) ) / ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * ( MRS + Min( ( BR - FirstVNF_Mem_Server ) ,DDR ) ) ) / FirstVNF_Mem ) / Min( PN ,BR ) ) - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) )", "choosing": "Max( ( Min( RRSe ,RRSe ) + DS ),( RRSe * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( BR,DDR ),( ( PN + BR ) / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) * Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( DS,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( ( ( CS - MLU ) + ( RMSe * ( MUM - ( RMSe * CS ) ) ) ),MUM ) / ( RMSe - Max( DS,( RRSe / ( ( RMSe * DS ) / MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) / ( ACS * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) / Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * Max( Max( RRS,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Max( Max( BR,DDR ),( ( PN + BR ) / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) * Max( BR,FirstVNF_CPU_Server ) ) ) ) ) - Max( ( FirstVNF_RAM / MRS ),Min( ( ( AMS + ( Const + Const ) ) * ( Const + MDR ) ) ,BR ) ) )", "choosing": "Min( ( ( RRSe + MUR ) + Max( CS,( DS + RMSe ) ) ) ,( ( Max( MLU,RCSe ) + ( ( ( Max( ( MUR / CS ),DS ) / MUR ) * ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( DS,RMSe ) ) ) ) + MUR ) ) + Max( ( DS - MUR ),Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,FirstVNF_RAM_Server ) / ( ACS * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) / ( Min( FirstVNF_RAM ,MRS ) * ( DDR * ( RRS / ( PN / ( MDR - Min( DDR ,BR ) ) ) ) ) ) ) - Max( ( FirstVNF_RAM / MRS ),Min( ( ( AMS + ( Const + Const ) ) * ( Const + MDR ) ) ,Min( ( ( FirstVNF_Mem - Max( PN,Const ) ) * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( Max( MLU,RCSe ) + ( ( ( Max( ( MUR / CS ),DS ) / MUR ) * Min( RMSe ,RMSe ) ) + MUR ) ) + Max( ( DS - MUR ),Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * CRS ) / ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU / ( ACS - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) / FirstVNF_Mem_Server ) ) - ( ( Max( FirstVNF_RAM,PN ) + ACS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( ( RRSe + MUR ) + Max( MLU,CS ) ) ,( Max( MUM,( MLU / RRSe ) ) + Max( Min( RCSe ,RRSe ),( MUM - MLU ) ) ) ) * CS ) / MLU )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,Min( ARS ,DDR ) ) ) * ( MRS * MRS ) ) ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUM ,RCSe ) - ( MLU / ( DS * ( ( ( MUM * DS ) - ( MUR - ( RMSe / RMSe ) ) ) - ( MUR - Max( RRSe,DS ) ) ) ) ) ) / Max( Min( ( RCSe * MUR ) ,( DS - DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) - Min( Min( FirstVNF_CPU ,RRS ) ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( CS + ( Min( ( MUM + ( RCSe - MLU ) ) ,MUR ) * RMSe ) ) + ( Min( RMSe ,Min( DS ,RRSe ) ) * MUC ) ),( MUM * Max( RRSe,Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( FirstVNF_RAM_Server * Min( ( MDR + Min( RRS ,( CRS + ARS ) ) ) ,ARS ) ) - ( FirstVNF_RAM * ( Min( DDR ,DDR ) - ( MDR - ( ( ( AMS - Const ) + CRS ) / RRS ) ) ) ) )", "choosing": "Max( ( Max( Max( MUR,DS ),RCSe ) - MLU ),( ( Min( ( RRSe - DS ) ,( CS * MUR ) ) + MUR ) - MUR ) )", "obj1": 0.6685823754789272, "obj2": 0.19367809502077254}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( CS * MUR ) - RRSe ) - ( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.7394636015325671, "obj2": 0.1076341606392029}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( ( FirstVNF_RAM - ARS ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( DDR + AMS ) ) / ( FirstVNF_CPU_Server + Min( RRS ,Min( ( FirstVNF_Mem_Server / ARS ) ,MRS ) ) ) ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ( FirstVNF_RAM_Server + BR ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( Min( RRSe ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,( Max( DS,Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) ) + ( MUM - ( MUR + MUR ) ) ) ) + ( MLU + ( MUR + MLU ) ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6590038314176245, "obj2": 0.22848122749179894}, {"determining": "( Max( PN,( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,MDR ) + ( BR * ( AMS - FirstVNF_Mem_Server ) ) ) - ( Min( ACS ,( Max( DDR,ARS ) / FirstVNF_RAM ) ) / ( AMS / MDR ) ) ) ) - ( ARS + ARS ) )", "choosing": "( ( CS - RCSe ) - Max( RRSe,Max( Max( RCSe,MUC ),( ( DS * Min( DS ,( RMSe - ( MLU / MLU ) ) ) ) - RRSe ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.09479477959911128}, {"determining": "( ( BR / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( MDR - ( ( BR + ( Const / FirstVNF_Mem_Server ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,Max( DS,RCSe ) ) * Max( RRSe,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24433803546381383}, {"determining": "( ( PN * Min( PN ,Max( Max( Max( AMS,FirstVNF_Mem ),FirstVNF_Mem ),( AMS - ARS ) ) ) ) - ( Const + MRS ) )", "choosing": "( Max( Min( ( Max( ( MLU * MUM ),DS ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) * Min( ( Max( RCSe,MUM ) + Min( ( MUM + ( DS - MLU ) ) ,CS ) ) ,( MUR + RCSe ) ) )", "obj1": 0.8007662835249042, "obj2": 0.08653907317715022}, {"determining": "( Min( ( AMS * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) - Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "Min( Min( ( Max( MLU,( RCSe - MUM ) ) * ( ( MUR + MUM ) * ( Min( ( MUC + RRSe ) ,MUC ) / ( RMSe / DS ) ) ) ) ,( RCSe - DS ) ) ,( ( Max( RMSe,RRSe ) / ( ( MUC + ( RCSe + Min( MUC ,Min( RMSe ,MUC ) ) ) ) / RRSe ) ) + Max( ( MLU + CS ),Min( CS ,MLU ) ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06171647581961082}, {"determining": "( ( ( PN / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( ( ( AMS + FirstVNF_CPU ) * DDR ) - ( DDR - FirstVNF_Mem ) ) ) ) * Max( PN,AMS ) ) - ( ( ARS * ARS ) / Max( FirstVNF_RAM,BR ) ) )", "choosing": "( Max( ( MUR - RRSe ),RRSe ) / Min( Max( ( MUM / Max( ( MUC - RCSe ),( ( CS - ( RRSe - RCSe ) ) / ( CS + MUM ) ) ) ),CS ) ,RRSe ) )", "obj1": 0.8697318007662835, "obj2": 0.05876915130333881}, {"determining": "( FirstVNF_CPU_Server - ( MDR * ( ( DDR + ( MRS - RRS ) ) - ( MDR - ( MDR - ( AMS * BR ) ) ) ) ) )", "choosing": "Max( ( MLU * MUR ),Min( MUM ,Max( Min( CS ,( ( ( RCSe + ( RRSe - MLU ) ) / MUM ) * ( Max( ( DS / CS ),Max( RCSe,DS ) ) / ( MUR - Min( RCSe ,MLU ) ) ) ) ),DS ) ) )", "obj1": 0.8793103448275862, "obj2": 0.05301691831249107}, {"determining": "( ( PN - ( ( Min( ( Const + Max( MDR,MDR ) ) ,ACS ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) * Max( Min( ( Max( ( MLU * ( Min( MUM ,RRSe ) + Max( CS,RCSe ) ) ),DS ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) )", "obj1": 0.7911877394636015, "obj2": 0.09058619436394133}, {"determining": "( ( ( ( Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) / DDR ) - ( FirstVNF_Mem * RRS ) ) * PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe + ( MLU * DS ) ) * Min( ( RMSe / MUR ) ,Min( DS ,DS ) ) )", "obj1": 0.8180076628352491, "obj2": 0.07918991785655563}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,BR ) ) - ( ( FirstVNF_CPU + RRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU * ( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - ( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( ( ACS * ( Const + BR ) ),( ACS * Const ) ) ) ) * ( FirstVNF_RAM - MRS ) ) )", "choosing": "Max( Min( MLU ,( MUC + RRSe ) ),( ( ( MUC / DS ) - ( MUC / RMSe ) ) + ( ( ( Min( DS ,MUC ) / CS ) * ( ( MLU - CS ) + ( Min( ( RRSe / RCSe ) ,MUC ) * DS ) ) ) - MUM ) ) )", "obj1": 0.9636015325670498, "obj2": 0.015147343594167653}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ACS ) ) / DDR ) ) )", "choosing": "Min( Min( Min( DS ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.9195402298850575, "obj2": 0.03571094231755472}, {"determining": "( ( Const + Max( ( MRS - FirstVNF_CPU ),FirstVNF_RAM_Server ) ) - ( Min( CRS ,ARS ) - ( ( Min( ACS ,( Min( PN ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) / ARS ) ) * ACS ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe * DS ) / ( MUM * MUC ) ) - ( ( Min( MUR ,MUC ) + MLU ) - ( RMSe + ( MLU * MUC ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.007380911964598459}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24497932868220526}, {"determining": "( ( ( ( AMS / ARS ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( DDR * MDR ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( ( MLU * MUR ),Min( MUM ,CS ) ) + ( Max( MUM,( ( DS - CS ) * RCSe ) ) / Max( ( Min( RCSe ,MUC ) - RCSe ),( Min( ( RCSe + MUC ) ,( Max( RCSe,MUM ) + MUM ) ) - MUR ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.26660572008838096}, {"determining": "( Min( ARS ,BR ) - ( Const - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * ( ( MUC - MUC ) - MUR ) ) * RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.8448275862068966, "obj2": 0.06907213620261439}, {"determining": "( Min( MRS ,FirstVNF_Mem ) - ( ( ARS * CRS ) / ( Min( ( ACS + FirstVNF_Mem ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( ( MUR * CS ) - RRSe ),( ( Min( Min( MUC ,MUR ) ,RMSe ) / Min( ( ( DS / MUC ) / RRSe ) ,( RCSe - DS ) ) ) * ( MUC - RRSe ) ) ) / MLU )", "obj1": 0.9099616858237548, "obj2": 0.0420109442984921}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9482758620689655, "obj2": 0.01828128271697566}, {"determining": "( FirstVNF_CPU_Server - ( MDR * ( ( DDR + AMS ) - ( MDR - ( ( ( Const - CRS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( ( MLU - MUR ),Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) )", "obj1": 0.8333333333333334, "obj2": 0.07174270763123787}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( ( ( MDR * Min( ( ( FirstVNF_Mem + ACS ) * Max( ARS,MRS ) ) ,( RRS + Const ) ) ) - ( AMS + ACS ) ) * ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / DDR ) ) / DDR ) ) ) / ( FirstVNF_RAM - RRS ) ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / ( ( ( MUR * ( MUR / MUC ) ) + MUR ) - ( ( RRSe * ( ( CS - MUC ) / CS ) ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.8908045977011494, "obj2": 0.04873432743178363}, {"determining": "( ( ( ( ACS + Const ) / Min( DDR ,AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( ( ( ARS / CRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - ( ( ACS / RRS ) + MDR ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),MLU ) )", "obj1": 0.6091954022988506, "obj2": 0.26211943262807524}, {"determining": "( ( DDR / RRS ) * ( MRS - Min( DDR ,( PN - CRS ) ) ) )", "choosing": "( ( RMSe / MLU ) * Min( Max( CS,( ( MLU - Min( MUC ,MUM ) ) / Min( ( Min( DS ,DS ) / ( ( MUM - MLU ) + ( MLU + MLU ) ) ) ,RRSe ) ) ) ,RCSe ) )", "obj1": 0.8984674329501916, "obj2": 0.04541680735925762}, {"determining": "( ( PN * ( Min( Min( ACS ,( FirstVNF_CPU / ARS ) ) ,DDR ) - ( CRS * Max( BR,Min( ( RRS * MDR ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( Const + Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( DS + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( RMSe + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.8275862068965517, "obj2": 0.07572998944978063}, {"determining": "( ( FirstVNF_RAM * ( Min( FirstVNF_CPU_Server ,PN ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( RCSe / MLU ) - Max( ( RRSe * RRSe ),( ( MUR * CS ) / MUC ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003388263960737056}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( ( MRS + ACS ) * Max( ARS,MRS ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.0277258666715012}, {"determining": "( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,ARS ) ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( MUR - MLU ) ) * Max( Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,DS ),( CS / RMSe ) ) )", "obj1": 0.6283524904214559, "obj2": 0.24884824936832975}, {"determining": "( Max( MRS,( ( RRS / Const ) - ACS ) ) * ( ( ( RRS * Const ) * Max( Max( MDR,FirstVNF_RAM ),AMS ) ) + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) * ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( ( ( MLU * CS ) + DS ) + ( MUR - Max( DS,RCSe ) ) ) - ( MUR - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.25364511381513893}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 0.9712643678160919, "obj2": 0.011705247488276765}, {"determining": "( ( ( BR / ( Const * DDR ) ) / ( Min( Const ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_RAM ,DDR ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Const )", "choosing": "Max( DS,( RRSe + ( DS / Min( MUC ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( CRS / FirstVNF_CPU ) - Min( DDR ,Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( ( Max( ( MUR / MUR ),( ( RRSe * Min( MUC ,RMSe ) ) - ( ( Min( RMSe ,RCSe ) + MUM ) / ( MUC - Max( MLU,MUR ) ) ) ) ) / Max( ( MUM * DS ),( CS + MUM ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.9406130268199234, "obj2": 0.024546990873774398}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 0.9061302681992337, "obj2": 0.042127879174424315}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.842911877394636, "obj2": 0.07095664989428138}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) )", "obj1": 0.8218390804597702, "obj2": 0.0776501159993537}, {"determining": "( Min( MRS ,MRS ) - ( ( ( FirstVNF_RAM_Server + ( PN / FirstVNF_CPU ) ) * CRS ) / ( Min( ACS ,( FirstVNF_CPU - Max( RRS,ARS ) ) ) / DDR ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * ( MUM + Max( Max( ( Min( RCSe ,MLU ) / MUR ),( MUR * DS ) ),Min( ( RMSe / MUM ) ,Min( ( Max( RMSe,CS ) * Max( MLU,RRSe ) ) ,MUM ) ) ) ) ) )", "obj1": 0.9233716475095786, "obj2": 0.03235485779764607}, {"determining": "( Min( Min( Const ,FirstVNF_RAM ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( ( Max( MDR,MRS ) * ( Const - FirstVNF_RAM_Server ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( DS * ( RRSe / MUC ) ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( CS ,CS ) ) + Max( ( CS * MLU ),Min( MLU ,RRSe ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02294358845695616}, {"determining": "( ( Max( ( BR + FirstVNF_Mem ),( ARS + MDR ) ) * ( FirstVNF_CPU_Server - Const ) ) - ( ( ARS * CRS ) / ( Min( Min( RRS ,AMS ) ,( MRS / ARS ) ) / DDR ) ) )", "choosing": "Max( ( ( MLU * MUM ) - MUM ),( MUR - Min( Max( Min( MUR ,RMSe ),Min( RCSe ,RMSe ) ) ,RCSe ) ) )", "obj1": 0.9291187739463601, "obj2": 0.02947880479686938}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * FirstVNF_RAM_Server ) / ( Min( ACS ,( FirstVNF_CPU / DDR ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( Max( AMS,FirstVNF_Mem_Server ) - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( MUM / CS ) ) - Max( ( MLU - MUR ),( ( RRSe * MUC ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.89272030651341, "obj2": 0.04730882927861678}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( ( AMS / ( Max( RRS,Const ) + ( Const + CRS ) ) ) + AMS ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( Const,RRS ),Min( ( Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / Min( MUC ,MUC ) ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( Min( MUM ,CS ) - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * DDR ) / ( Min( ( PN + FirstVNF_RAM_Server ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server * BR ) ) ) / DDR ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( MUC ,( Max( RMSe,RCSe ) / MLU ) ) ,( CS / CS ) ) ) / ( ( MUC / ( RCSe / RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( CS * MLU ) * ( MUC / MUM ) ) / ( MUR + RCSe ) ) )", "obj1": 0.9252873563218391, "obj2": 0.029794250069530768}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "Min( Min( ( ( ( RMSe - ( MUM * MUR ) ) / MUM ) * ( ( MUR + MUM ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.011083365744899572}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( CRS ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - ( FirstVNF_RAM + ( RRS / PN ) ) )", "choosing": "Min( ( RMSe - Min( CS ,( ( DS * MUR ) / DS ) ) ) ,Max( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ),( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.011083365744899572}, {"determining": "( ( ( Const + FirstVNF_Mem_Server ) + ( Min( ARS ,CRS ) * Min( RRS ,MRS ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUM - ( DS * MUR ) ) - ( ( MUR - Min( RCSe ,( Min( Min( ( CS / CS ) ,( RMSe + MUC ) ) ,Min( ( MUM + MLU ) ,( RRSe / MUC ) ) ) / MUM ) ) ) - Min( MLU ,RCSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0022121057546380667}, {"determining": "( ( ( RRS - ( MRS / CRS ) ) / BR ) * ( FirstVNF_RAM + Max( Max( Const,RRS ),Min( ( Min( Max( Max( DDR,BR ),Min( PN ,MRS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( ( RRSe * RRSe ) / Min( MUR ,MUC ) ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + Max( RRSe,DS ) ) * ( Max( Min( CS ,CS ),( CS * CS ) ) - ( Min( MUR ,MUM ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( Min( MUM ,CS ) - Max( ( MLU / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - ( ( MDR - ( DDR + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) ) )", "choosing": "Max( Max( ( RMSe - MLU ),MLU ),DS )", "obj1": 0.9980842911877394, "obj2": 0.0007993714282739525}, {"determining": "( ( ( ( ARS * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - ( ( MDR - ( ( MDR / Const ) + FirstVNF_Mem_Server ) ) - Min( DDR ,RRS ) ) )", "choosing": "Max( MUC,Max( Min( MUM ,RCSe ),MUR ) )", "obj1": 0.9980842911877394, "obj2": 0.0007993714282739525}, {"determining": "( Max( Const,Min( ACS ,( BR - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Const * ( ( Const - BR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUC - RCSe ) ,( ( Max( RCSe,CS ) + ( RCSe - RMSe ) ) + Max( ( MLU + CS ),Min( MLU ,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "( Max( Min( DDR ,ACS ),Min( ( FirstVNF_Mem_Server * ( Min( MRS ,RRS ) - Max( Max( ( MRS - BR ),Max( PN,FirstVNF_CPU ) ),( FirstVNF_CPU_Server / CRS ) ) ) ) ,ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( RRS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( CS ,RCSe ) ,( ( Min( MUR ,CS ) + Max( RCSe,MUM ) ) + Max( ( RRSe + RRSe ),Min( CS ,MLU ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * ( FirstVNF_CPU / ( ( ARS - MDR ) + AMS ) ) ) ,Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) + Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( CS ,RRSe ) / Max( Min( ( RCSe * MUR ) ,( DS * DS ) ),( Max( RMSe,DS ) * Min( RRSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( DDR + FirstVNF_RAM ) ) - Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( MUR * ( Max( MUR,RCSe ) / ( RRSe + CS ) ) ) ,DS ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUR,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / ( ( ( Max( MLU,MUM ) - ( DS - CS ) ) - Min( ( RRSe * ( Min( RMSe ,MUC ) * ( MLU - DS ) ) ) ,( MLU - MUM ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( DDR ,DDR ) - ( MDR - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( ( ( Max( RCSe,Max( RMSe,MUR ) ) * Min( RMSe ,MUC ) ) / RCSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( Max( ARS,ACS ) ,DDR ) - ( AMS - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( Max( ( ( MUM * MUC ) - Min( MLU ,CS ) ),( ( MLU * DS ) - MUM ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) * ( BR - ( FirstVNF_CPU * BR ) ) )", "choosing": "( ( ( MUM + RRSe ) + MLU ) - ( ( RRSe - DS ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) / ( FirstVNF_CPU_Server * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) / ( Min( ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( DDR + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - MDR ) ,BR ) * ( DDR * ( RRS / ( FirstVNF_RAM / PN ) ) ) ) ) - Max( ( MRS / FirstVNF_RAM ),Min( ( ( AMS + ( Const + Const ) ) * ( Const + MDR ) ) ,BR ) ) )", "choosing": "Min( ( ( RRSe + CS ) * Max( CS,( DS + ( DS - MUR ) ) ) ) ,( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,MDR ) - ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - MDR ) )", "choosing": "Max( Max( ( Max( CS,RRSe ) * Max( Max( Min( MUR ,RCSe ),RCSe ),CS ) ),MLU ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * CRS ),RRS ) / ( FirstVNF_CPU_Server + ( ARS + FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,( MUC * Max( MUC,RRSe ) ) ) + MUR ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Min( AMS ,( Min( DDR ,AMS ) - MDR ) ) )", "choosing": "Max( ( DS + DS ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR / MDR ) / FirstVNF_RAM_Server ) ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( ( ( MUR / ( ( DS / ( MUM - RRSe ) ) / ( CS + RRSe ) ) ) * MUC ) + DS ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - BR ) - ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( MUC - MUR ) * ( MUM / ( MUR + ( ( MUM - MUC ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,( FirstVNF_Mem - FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( Const + ( Min( FirstVNF_Mem ,MRS ) + ( ( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) ) - ( ( ARS + CRS ) * Const ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - BR ) * ( BR - ( AMS / ( FirstVNF_Mem - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) - Max( ( ( BR / FirstVNF_Mem_Server ) + AMS ),( Const + FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * RRSe ),Min( RMSe ,( MUR / Min( Max( RRSe,( CS - RCSe ) ) ,( MUC / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + DDR ) - Min( FirstVNF_CPU ,MRS ) ) / Max( Min( ( BR / ( FirstVNF_CPU * DDR ) ) ,MDR ),( ( ( Max( Const,ACS ) + ( ( PN / MDR ) - FirstVNF_RAM ) ) / FirstVNF_Mem ) - CRS ) ) )", "choosing": "( Max( ( MUC / Min( DS ,Min( Max( RMSe,RMSe ) ,( DS + Min( RCSe ,MLU ) ) ) ) ),Max( DS,( DS + RMSe ) ) ) + Min( Min( RCSe ,MUM ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - Const ) ),PN ) * FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe * ( Max( Min( ( DS / CS ) ,MUM ),MUM ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const - CRS ) ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) - Min( DDR ,MDR ) )", "choosing": "( ( Max( MUR,DS ) + Min( ( CS + RRSe ) ,DS ) ) / ( RCSe - ( ( MUM / MUR ) * ( MUR * Min( ( ( RMSe * DS ) / Min( DS ,RMSe ) ) ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) - ( Max( CRS,FirstVNF_RAM ) * ( ACS * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_RAM_Server ) * Max( ARS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / BR ) ) )", "choosing": "Max( ( ( MUR - RRSe ) + ( RMSe + RRSe ) ),( ( ( DS + MLU ) * ( CS - MLU ) ) * Max( ( ( DS / MUC ) / Max( ( ( ( RCSe + RRSe ) / RRSe ) + DS ),MUM ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Min( Const ,MDR ) ) * Max( ( FirstVNF_Mem - MDR ),Max( RRS,FirstVNF_RAM ) ) ) ,Max( MRS,DDR ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( DS,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( ( ( CS - MLU ) + ( RMSe * Min( MUM ,( RMSe * CS ) ) ) ),MUM ) / ( RMSe - Max( DS,( RRSe / ( ( RMSe * DS ) / ( MLU - RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR * Const ) - ( Const * FirstVNF_Mem_Server ) ) * ( DDR + FirstVNF_CPU ) ) ,Min( ( Const / ( ACS + DDR ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( MRS,( RRS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUC,( RCSe + ( Min( MUR ,RRSe ) / RCSe ) ) ) - DS ) / Max( ( Max( Max( ( CS - MLU ),Max( MLU,( Min( DS ,CS ) * Min( CS ,CS ) ) ) ),MUR ) * ( ( Min( DS ,Max( CS,MUC ) ) - RMSe ) * Max( ( MUC - Max( CS,MUM ) ),( RRSe - Max( DS,RRSe ) ) ) ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( PN / AMS ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ,( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * ( ACS / ACS ) ) )", "choosing": "( ( ( ( ( MUR + Min( RRSe ,MUM ) ) + MUR ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( ARS / Const ) ) - ( MDR * ( CRS * ARS ) ) )", "choosing": "( ( ( RCSe * Min( MLU ,( RMSe - MLU ) ) ) * ( MUM * MUC ) ) - ( ( RRSe - ( Max( RMSe,( RMSe - ( ( MLU + RRSe ) * ( RCSe - RRSe ) ) ) ) - RMSe ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) - ( MDR - ( FirstVNF_RAM * AMS ) ) )", "choosing": "( Max( ( MUR / ( ( RMSe - RMSe ) - ( Max( Max( RCSe,MUM ),MUR ) * RCSe ) ) ),MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - ( Const + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) * Max( Min( RRS ,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Min( ( FirstVNF_CPU / AMS ) ,Max( DDR,BR ) ) ,( Min( Const ,Min( BR ,ACS ) ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MLU,( RMSe / ( CS - RMSe ) ) ) ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + Min( ACS ,FirstVNF_Mem_Server ) ) - Min( RRS ,RRS ) )", "choosing": "Max( Max( ( RMSe - MLU ),MLU ),( ( MLU + ( ( Min( ( MUR - MUC ) ,( CS + ( DS + MUC ) ) ) / CS ) + ( MUR / Min( ( MLU - Min( CS ,DS ) ) ,Max( ( MUR * MLU ),( DS * MUR ) ) ) ) ) ) / ( ( RCSe * DS ) / ( Min( ( MLU / Min( ( MUR / RCSe ) ,( MUM * RCSe ) ) ) ,MUC ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( FirstVNF_RAM - Max( FirstVNF_Mem,( ACS - FirstVNF_CPU ) ) ) ) - FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Max( ( CRS + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ),( FirstVNF_Mem / Min( Max( ( DDR + FirstVNF_Mem ),ACS ) ,CRS ) ) ) ) ,Const ) )", "choosing": "( Min( CS ,( ( Max( ( RMSe / MLU ),( MUR / CS ) ) / ( DS - RCSe ) ) * MLU ) ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - CRS ) * ( FirstVNF_CPU + CRS ) )", "choosing": "( Min( MUM ,( ( ( MUR * RCSe ) + CS ) - Min( RMSe ,MUR ) ) ) - ( RCSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / ( Max( RRS,Const ) + ( Const + CRS ) ) ) + AMS ) / ( FirstVNF_CPU_Server / ( ( MDR * FirstVNF_Mem ) - Min( MRS ,RRS ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) - RRSe ) * ( Max( ( ( Min( RRSe ,MLU ) + CS ) * ( Min( ( ( MUC - RMSe ) + ( RRSe * MUR ) ) ,Max( RCSe,RCSe ) ) / MUC ) ),RMSe ) - ( RMSe * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) - Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Max( ( Max( ARS,MDR ) * Max( ARS,ACS ) ),Min( ( FirstVNF_CPU_Server * DDR ) ,( ARS + CRS ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) / Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,Max( MLU,RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem_Server ) - Min( BR ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) - ( AMS - ( MRS * AMS ) ) )", "choosing": "( Min( Min( ( RMSe - MLU ) ,RCSe ) ,Max( DS,RCSe ) ) / ( RMSe * ( MUC * Max( ( MUC / Max( Min( DS ,MLU ),MUM ) ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MDR ,( ( FirstVNF_CPU + RRS ) / FirstVNF_Mem ) ) - Max( AMS,ACS ) ) * FirstVNF_RAM ) - ( ( ( Min( ( FirstVNF_RAM_Server + RRS ) ,( ( FirstVNF_CPU_Server - DDR ) + MRS ) ) / MRS ) / DDR ) + Const ) )", "choosing": "( Min( MUC ,Min( ( Max( ( MLU * MUM ),DS ) / ( Min( MUC ,MUC ) * DS ) ) ,Min( RCSe ,MUM ) ) ) - ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + Min( CRS ,MDR ) ) / ( AMS / DDR ) ) * ( RRS - FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,AMS ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Max( ( FirstVNF_Mem + ( BR / DDR ) ),AMS ) )", "choosing": "Min( ( Max( RRSe,( ( Min( Min( ( DS + RMSe ) ,( DS + RRSe ) ) ,( DS * Min( MUR ,RMSe ) ) ) / ( ( CS - MUC ) * RMSe ) ) * CS ) ) + Max( MLU,CS ) ) ,( Max( MUM,( MLU / RRSe ) ) + Max( Min( RCSe ,RRSe ),( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_RAM ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "Max( ( Max( Max( RMSe,Max( MUR,MUR ) ),MUR ) - MUR ),Max( ( CS + Max( Min( MUM ,RMSe ),RRSe ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( Min( DDR ,( ( FirstVNF_CPU - ( MDR - CRS ) ) - FirstVNF_RAM_Server ) ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( ( ( Min( DS ,MUC ) / CS ) * ( ( ( MUR / RRSe ) * CS ) + ( Min( MUC ,RCSe ) * DS ) ) ) - MUM ) - RCSe ),MUC ) - ( ( MUR - RMSe ) - Max( MUM,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / FirstVNF_RAM_Server ) ,Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( MUC * RMSe ) ) + ( ( RCSe / MUM ) + Max( RMSe,RMSe ) ) ) / Min( ( ( MUM + Min( ( CS - MUR ) ,MUM ) ) * Min( ( ( RRSe * Max( ( MUC - RRSe ),Max( MUR,CS ) ) ) / CS ) ,RRSe ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,PN ) + ( Const + CRS ) ) - Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( Min( ( MUC + RRSe ) ,MUC ),( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( DDR / CRS ) ) - ( ( ( RRS - PN ) + FirstVNF_RAM ) / ( FirstVNF_CPU - PN ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / FirstVNF_Mem ) ) / ( PN * BR ) ) - ( ARS * FirstVNF_Mem_Server ) ) ) - ( Const + ( PN * ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( ( MUM * MUC ) * ( RCSe * DS ) ) - ( ( RRSe - ( ( ( RMSe + Max( RCSe,RMSe ) ) * ( ( MUR * MUM ) / Max( ( MUR - CS ),MUR ) ) ) - RMSe ) ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,Min( ARS ,DDR ) ) ) * ( MRS * MRS ) ) ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUM ,RCSe ) - ( MLU / ( DS * ( ( ( MUM * DS ) - ( MUR - ( RMSe / RMSe ) ) ) - ( MUR - Max( RRSe,DS ) ) ) ) ) ) / Max( Min( ( RCSe * MUR ) ,( DS - DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( FirstVNF_RAM_Server * Min( ( MDR + Min( RRS ,( CRS + ARS ) ) ) ,ARS ) ) - ( FirstVNF_RAM * ( Min( DDR ,DDR ) - ( MDR - ( ( ( AMS - Const ) + CRS ) / RRS ) ) ) ) )", "choosing": "Max( ( Max( Max( MUR,DS ),RCSe ) - MLU ),( ( Min( ( RRSe - DS ) ,( CS * MUR ) ) + MUR ) - MUR ) )", "obj1": 0.6685823754789272, "obj2": 0.19367809502077254}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( ( FirstVNF_RAM - ARS ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( DDR + AMS ) ) / ( FirstVNF_CPU_Server + Min( RRS ,Min( ( FirstVNF_Mem_Server / ARS ) ,MRS ) ) ) ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ( FirstVNF_RAM_Server + BR ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( Min( RRSe ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,( Max( DS,Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) ) + ( MUM - ( MUR + MUR ) ) ) ) + ( MLU + ( MUR + MLU ) ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6590038314176245, "obj2": 0.22848122749179894}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( BR / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( MDR - ( ( BR + ( Const / FirstVNF_Mem_Server ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,Max( DS,RCSe ) ) * Max( RRSe,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24433803546381383}, {"determining": "( ( ( PN / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( ( ( AMS + FirstVNF_CPU ) * DDR ) - ( DDR - FirstVNF_Mem ) ) ) ) * Max( PN,AMS ) ) - ( ( ARS * ARS ) / Max( FirstVNF_RAM,BR ) ) )", "choosing": "( Max( ( MUR - RRSe ),RRSe ) / Min( Max( ( MUM / Max( ( MUC - RCSe ),( ( CS - ( RRSe - RCSe ) ) / ( CS + MUM ) ) ) ),CS ) ,RRSe ) )", "obj1": 0.8697318007662835, "obj2": 0.05876915130333881}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.10160699060446915}, {"determining": "( Min( ( AMS * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) - Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "Min( Min( ( Max( MLU,( RCSe - MUM ) ) * ( ( MUR + MUM ) * ( Min( ( MUC + RRSe ) ,MUC ) / ( RMSe / DS ) ) ) ) ,( RCSe - DS ) ) ,( ( Max( RMSe,RRSe ) / ( ( MUC + ( RCSe + Min( MUC ,Min( RMSe ,MUC ) ) ) ) / RRSe ) ) + Max( ( MLU + CS ),Min( CS ,MLU ) ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06171647581961082}, {"determining": "( FirstVNF_CPU_Server - ( MDR * ( ( DDR + ( MRS - RRS ) ) - ( MDR - ( MDR - ( AMS * BR ) ) ) ) ) )", "choosing": "Max( ( MLU * MUR ),Min( MUM ,Max( Min( CS ,( ( ( RCSe + ( RRSe - MLU ) ) / MUM ) * ( Max( ( DS / CS ),Max( RCSe,DS ) ) / ( MUR - Min( RCSe ,MLU ) ) ) ) ),DS ) ) )", "obj1": 0.8793103448275862, "obj2": 0.05301691831249107}, {"determining": "( ( PN - ( ( Min( ( Const + Max( MDR,MDR ) ) ,ACS ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) * Max( Min( ( Max( ( MLU * ( Min( MUM ,RRSe ) + Max( CS,RCSe ) ) ),DS ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) )", "obj1": 0.7911877394636015, "obj2": 0.09058619436394133}, {"determining": "( ( ( PN + ( Min( DDR ,FirstVNF_CPU_Server ) - ( Max( RRS,( DDR + DDR ) ) * ( RRS * ( FirstVNF_CPU + ( FirstVNF_CPU + PN ) ) ) ) ) ) * ( PN * AMS ) ) - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( ( MUR * ( MLU - Max( ( CS + MUC ),( MUC - MUR ) ) ) ) + MUR ) / MUR ) ) )", "obj1": 0.7662835249042146, "obj2": 0.0984690651236629}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ACS * MRS ) - ( ( ARS * CRS ) / ( ( Const - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) / DDR ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( MLU + RMSe ) ) ) + ( Max( Max( RCSe,DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MLU - MUM ) / CS ) - ( ( Min( RRSe ,CS ) / DS ) / MUM ) ) ) ) )", "obj1": 0.9195402298850575, "obj2": 0.03560003065834095}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( Max( PN,( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,MDR ) + ( BR * ( AMS - FirstVNF_Mem_Server ) ) ) - ( Min( ACS ,( Max( DDR,ARS ) / FirstVNF_RAM ) ) / ( AMS / MDR ) ) ) ) - ( ARS + ARS ) )", "choosing": "( ( CS - RCSe ) - Max( RRSe,Max( Max( RCSe,MUC ),( ( DS * Min( DS ,( RMSe - ( MLU / MLU ) ) ) ) - RRSe ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.09479477959911128}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24497932868220526}, {"determining": "( Min( MRS ,FirstVNF_Mem ) - ( ( ARS * CRS ) / ( Min( ( ACS + FirstVNF_Mem ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( ( MUR * CS ) - RRSe ),( ( Min( Min( MUC ,MUR ) ,RMSe ) / Min( ( ( DS / MUC ) / RRSe ) ,( RCSe - DS ) ) ) * ( MUC - RRSe ) ) ) / MLU )", "obj1": 0.9099616858237548, "obj2": 0.0420109442984921}, {"determining": "( ( PN * Min( PN ,Max( Max( Max( AMS,FirstVNF_Mem ),FirstVNF_Mem ),( AMS - ARS ) ) ) ) - ( Const + MRS ) )", "choosing": "( Max( Min( ( Max( ( MLU * MUM ),DS ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) * Min( ( Max( RCSe,MUM ) + Min( ( MUM + ( DS - MLU ) ) ,CS ) ) ,( MUR + RCSe ) ) )", "obj1": 0.8007662835249042, "obj2": 0.08653907317715022}, {"determining": "( FirstVNF_CPU_Server - ( MDR * ( ( DDR + AMS ) - ( MDR - ( ( ( Const - CRS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( ( MLU - MUR ),Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) )", "obj1": 0.8333333333333334, "obj2": 0.07174270763123787}, {"determining": "( ( ( MDR * Min( ( ( FirstVNF_Mem + ACS ) * Max( ARS,MRS ) ) ,( RRS + Const ) ) ) - ( AMS + ACS ) ) * ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / DDR ) ) / DDR ) ) ) / ( FirstVNF_RAM - RRS ) ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / ( ( ( MUR * ( MUR / MUC ) ) + MUR ) - ( ( RRSe * ( ( CS - MUC ) / CS ) ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.8908045977011494, "obj2": 0.04873432743178363}, {"determining": "( ( ( ( ACS + Const ) / Min( DDR ,AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( ( ( ARS / CRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - ( ( ACS / RRS ) + MDR ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),MLU ) )", "obj1": 0.6091954022988506, "obj2": 0.26211943262807524}, {"determining": "( ( DDR / RRS ) * ( MRS - Min( DDR ,( PN - CRS ) ) ) )", "choosing": "( ( RMSe / MLU ) * Min( Max( CS,( ( MLU - Min( MUC ,MUM ) ) / Min( ( Min( DS ,DS ) / ( ( MUM - MLU ) + ( MLU + MLU ) ) ) ,RRSe ) ) ) ,RCSe ) )", "obj1": 0.8984674329501916, "obj2": 0.04541680735925762}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( RCSe * RRSe ),( Max( MUC,MUC ) / ( DS - MUM ) ) ) - RRSe )", "obj1": 0.8122605363984674, "obj2": 0.0840440891573264}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( PN / ( Min( ( MDR / MRS ) ,( FirstVNF_CPU / ARS ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( Max( MRS,CRS ) - AMS ) )", "choosing": "( Max( ( RCSe - RRSe ),( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( MUM / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ) / Max( ( ( MUR * ( CS + ( RMSe + MUC ) ) ) - RRSe ),( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10705437249205116}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( ( MRS + ACS ) * Max( ARS,MRS ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.0277258666715012}, {"determining": "( ( PN * ( Min( Min( ACS ,( FirstVNF_CPU / ARS ) ) ,DDR ) - ( CRS * Max( BR,Min( ( RRS * MDR ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( Const + Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( DS + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( RMSe + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.8275862068965517, "obj2": 0.07572998944978063}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + RRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( Max( MUC,Max( MLU,( RMSe / ( CS - RMSe ) ) ) ) + ( MUC + MUM ) )", "obj1": 0.9597701149425287, "obj2": 0.01768420809658263}, {"determining": "( ( FirstVNF_RAM * ( Min( FirstVNF_CPU_Server ,PN ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( RCSe / MLU ) - Max( ( RRSe * RRSe ),( ( MUR * CS ) / MUC ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003388263960737056}, {"determining": "( ( ( ( Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) / DDR ) - ( FirstVNF_Mem * RRS ) ) * PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe + ( MLU * DS ) ) * Min( ( RMSe / MUR ) ,Min( DS ,DS ) ) )", "obj1": 0.8180076628352491, "obj2": 0.07918991785655563}, {"determining": "( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,ARS ) ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( MUR - MLU ) ) * Max( Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,DS ),( CS / RMSe ) ) )", "obj1": 0.6283524904214559, "obj2": 0.24884824936832975}, {"determining": "( ( PN * ( ( CRS + ACS ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - Min( Const ,MRS ) )", "choosing": "( Min( ( Max( ( MUM * ( DS - RMSe ) ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.8467432950191571, "obj2": 0.06845709810341478}, {"determining": "( Max( MRS,( ( RRS / Const ) - ACS ) ) * ( ( ( RRS * Const ) * Max( Max( MDR,FirstVNF_RAM ),AMS ) ) + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) * ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( ( ( MLU * CS ) + DS ) + ( MUR - Max( DS,RCSe ) ) ) - ( MUR - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.25364511381513893}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,BR ) ) - ( ( FirstVNF_CPU + RRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU * ( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - ( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( ( ACS * ( Const + BR ) ),( ACS * Const ) ) ) ) * ( FirstVNF_RAM - MRS ) ) )", "choosing": "Max( Min( MLU ,( MUC + RRSe ) ),( ( ( MUC / DS ) - ( MUC / RMSe ) ) + ( ( ( Min( DS ,MUC ) / CS ) * ( ( MLU - CS ) + ( Min( ( RRSe / RCSe ) ,MUC ) * DS ) ) ) - MUM ) ) )", "obj1": 0.9636015325670498, "obj2": 0.015147343594167653}, {"determining": "( ( ( ( AMS / ARS ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( DDR * MDR ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( ( MLU * MUR ),Min( MUM ,CS ) ) + ( Max( MUM,( ( DS - CS ) * RCSe ) ) / Max( ( Min( RCSe ,MUC ) - RCSe ),( Min( ( RCSe + MUC ) ,( Max( RCSe,MUM ) + MUM ) ) - MUR ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.26660572008838096}, {"determining": "( ( ( RRS * Min( FirstVNF_RAM_Server ,RRS ) ) * ( AMS * PN ) ) - ( ( FirstVNF_RAM * CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RCSe ,( ( CS / Max( ( MUC / ( RRSe - RMSe ) ),RRSe ) ) * RCSe ) ) * Min( RCSe ,MUR ) ) * Max( MLU,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09538539851668557}, {"determining": "( ( ( BR / ( Const * DDR ) ) / ( Min( Const ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_RAM ,DDR ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Const )", "choosing": "Max( DS,( RRSe + ( DS / Min( MUC ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( CRS / FirstVNF_CPU ) - Min( DDR ,Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( ( Max( ( MUR / MUR ),( ( RRSe * Min( MUC ,RMSe ) ) - ( ( Min( RMSe ,RCSe ) + MUM ) / ( MUC - Max( MLU,MUR ) ) ) ) ) / Max( ( MUM * DS ),( CS + MUM ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.9406130268199234, "obj2": 0.024546990873774398}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 0.9061302681992337, "obj2": 0.042127879174424315}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.842911877394636, "obj2": 0.07095664989428138}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( ( PN * ( ( Min( ACS ,( Const + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( Min( ( Max( ( MLU * MUM ),DS ) / ( CS * DS ) ) ,Min( ( RRSe * RRSe ) ,MLU ) ),Min( MUM ,MUM ) ) * Min( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) ,( DS + RCSe ) ) )", "obj1": 0.8045977011494253, "obj2": 0.08417265567009614}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9482758620689655, "obj2": 0.01828128271697566}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) )", "obj1": 0.8218390804597702, "obj2": 0.0776501159993537}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / Max( ARS,RRS ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031377048761481216}, {"determining": "( Min( Min( Const ,FirstVNF_RAM ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( ( Max( MDR,MRS ) * ( Const - FirstVNF_RAM_Server ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( DS * ( RRSe / MUC ) ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( CS ,CS ) ) + Max( ( CS * MLU ),Min( MLU ,RRSe ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02294358845695616}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / CRS ) ) / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( ( ( ( ( Max( RCSe,MUC ) / MUM ) / CS ) - ( CS + DS ) ) / CS ) * ( RRSe + ( Max( ( ( MLU * Max( MUR,RMSe ) ) * MUR ),RMSe ) / MLU ) ) )", "obj1": 0.9789272030651341, "obj2": 0.008268674597352936}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.603448275862069, "obj2": 0.2697155565183963}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / RRS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( ( ( RCSe * DS ) * MUM ) - ( ( RRSe - ( Max( ( RMSe - ( ( MLU + RRSe ) * ( RCSe - RRSe ) ) ),RMSe ) - RMSe ) ) / Max( RMSe,RMSe ) ) )", "obj1": 0.9693486590038314, "obj2": 0.01263226990020867}, {"determining": "( Max( ( PN / FirstVNF_RAM ),FirstVNF_Mem ) - ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,( Min( CS ,CS ) / ( MUM / MLU ) ) ) ) / CS ) - ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) - ( CS / CS ) ) ) / ( ( Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) + RRSe ) * Min( MLU ,RMSe ) ) ) / Min( Min( RCSe ,MUM ) ,MUR ) )", "obj1": 0.9272030651340997, "obj2": 0.02925872671857499}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * FirstVNF_RAM_Server ) / ( Min( ACS ,( FirstVNF_CPU / DDR ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( Max( AMS,FirstVNF_Mem_Server ) - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( MUM / CS ) ) - Max( ( MLU - MUR ),( ( RRSe * MUC ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.89272030651341, "obj2": 0.04730882927861678}, {"determining": "( ( ( RRS - ( MRS / CRS ) ) / BR ) * ( FirstVNF_RAM + Max( Max( Const,RRS ),Min( ( Min( Max( Max( DDR,BR ),Min( PN ,MRS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( ( RRSe * RRSe ) / Min( MUR ,MUC ) ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + Max( RRSe,DS ) ) * ( Max( Min( CS ,CS ),( CS * CS ) ) - ( Min( MUR ,MUM ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( Min( MUM ,CS ) - Max( ( MLU / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( Const + Max( ( MRS - FirstVNF_CPU ),FirstVNF_RAM_Server ) ) - ( Min( CRS ,ARS ) - ( ( Min( ACS ,( Min( PN ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) / ARS ) ) * ACS ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe * DS ) / ( MUM * MUC ) ) - ( ( Min( MUR ,MUC ) + MLU ) - ( RMSe + ( MLU * MUC ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.007380911964598459}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - ( Max( ( RMSe - ( ( MLU + RRSe ) * ( RCSe - RRSe ) ) ),RMSe ) - RMSe ) ) / Max( RMSe,RMSe ) ) )", "obj1": 0.9827586206896551, "obj2": 0.007380911964598459}, {"determining": "( ( ( Const + FirstVNF_Mem_Server ) + ( Min( ARS ,CRS ) * Min( RRS ,MRS ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUM - ( DS * MUR ) ) - ( ( MUR - Min( RCSe ,( Min( Min( ( CS / CS ) ,( RMSe + MUC ) ) ,Min( ( MUM + MLU ) ,( RRSe / MUC ) ) ) / MUM ) ) ) - Min( MLU ,RCSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0022121057546380667}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( CS * MUR ) - RRSe ) - ( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.7394636015325671, "obj2": 0.1076341606392029}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 0.9712643678160919, "obj2": 0.011705247488276765}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "Min( Min( ( ( ( RMSe - ( MUM * MUR ) ) / MUM ) * ( ( MUR + MUM ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.011083365744899572}, {"determining": "( ( ( AMS / ( Max( RRS,Const ) + ( Const + CRS ) ) ) + AMS ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( Const,RRS ),Min( ( Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / Min( MUC ,MUC ) ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( Min( MUM ,CS ) - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( Min( ARS ,BR ) - ( Const - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * ( ( MUC - MUC ) - MUR ) ) * RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.8448275862068966, "obj2": 0.06907213620261439}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * DDR ) / ( Min( ( PN + FirstVNF_RAM_Server ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server * BR ) ) ) / DDR ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( MUC ,( Max( RMSe,RCSe ) / MLU ) ) ,( CS / CS ) ) ) / ( ( MUC / ( RCSe / RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( CS * MLU ) * ( MUC / MUM ) ) / ( MUR + RCSe ) ) )", "obj1": 0.9252873563218391, "obj2": 0.029794250069530768}, {"determining": "( ( PN * ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - ( Min( MDR ,( ( FirstVNF_CPU + RRS ) / FirstVNF_Mem ) ) - Max( AMS,ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUC - MUR ) - Min( MUC ,Min( ( Max( Min( ( RRSe - DS ) ,( MLU - RMSe ) ),DS ) / ( CS * DS ) ) ,( CS * DS ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0005950023982061264}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( CRS ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - ( FirstVNF_RAM + ( RRS / PN ) ) )", "choosing": "Min( ( RMSe - Min( CS ,( ( DS * MUR ) / DS ) ) ) ,Max( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ),( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.011083365744899572}, {"determining": "( Max( Const,Min( ACS ,( BR - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Const * ( ( Const - BR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUC - RCSe ) ,( ( Max( RCSe,CS ) + ( RCSe - RMSe ) ) + Max( ( MLU + CS ),Min( MLU ,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "( ( ( MDR * Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,RRS ) ) / FirstVNF_Mem_Server ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( Max( RMSe,CS ),( MUM / DS ) ) / RMSe ) ) - ( Min( RCSe ,MLU ) - ( MUR - Min( RCSe ,Max( ( ( ( MUC * DS ) + MUC ) * Max( DS,( RMSe + MUC ) ) ),Min( RCSe ,RMSe ) ) ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) - Min( Min( FirstVNF_CPU ,RRS ) ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( CS + ( Min( ( MUM + ( RCSe - MLU ) ) ,MUR ) * RMSe ) ) + ( Min( RMSe ,Min( DS ,RRSe ) ) * MUC ) ),( MUM * Max( RRSe,Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * ( FirstVNF_CPU / ( ( ARS - MDR ) + AMS ) ) ) ,Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) + Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( CS ,RRSe ) / Max( Min( ( RCSe * MUR ) ,( DS * DS ) ),( Max( RMSe,DS ) * Min( RRSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( DDR + FirstVNF_RAM ) ) - Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( MUR * ( Max( MUR,RCSe ) / ( RRSe + CS ) ) ) ,DS ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUR,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / ( ( ( Max( MLU,MUM ) - ( DS - CS ) ) - Min( ( RRSe * ( Min( RMSe ,MUC ) * ( MLU - DS ) ) ) ,( MLU - MUM ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( DDR ,DDR ) - ( MDR - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( ( ( Max( RCSe,Max( RMSe,MUR ) ) * Min( RMSe ,MUC ) ) / RCSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( Max( ARS,ACS ) ,DDR ) - ( AMS - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( Max( ( ( MUM * MUC ) - Min( MLU ,CS ) ),( ( MLU * DS ) - MUM ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) * ( BR - ( FirstVNF_CPU * BR ) ) )", "choosing": "( ( ( MUM + RRSe ) + MLU ) - ( ( RRSe - DS ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) / ( FirstVNF_CPU_Server * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) / ( Min( ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( DDR + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - MDR ) ,BR ) * ( DDR * ( RRS / ( FirstVNF_RAM / PN ) ) ) ) ) - Max( ( MRS / FirstVNF_RAM ),Min( ( ( AMS + ( Const + Const ) ) * ( Const + MDR ) ) ,BR ) ) )", "choosing": "Min( ( ( RRSe + CS ) * Max( CS,( DS + ( DS - MUR ) ) ) ) ,( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,MDR ) - ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - MDR ) )", "choosing": "Max( Max( ( Max( CS,RRSe ) * Max( Max( Min( MUR ,RCSe ),RCSe ),CS ) ),MLU ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * CRS ),RRS ) / ( FirstVNF_CPU_Server + ( ARS + FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,( MUC * Max( MUC,RRSe ) ) ) + MUR ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Min( AMS ,( Min( DDR ,AMS ) - MDR ) ) )", "choosing": "Max( ( DS + DS ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR / MDR ) / FirstVNF_RAM_Server ) ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( ( ( MUR / ( ( DS / ( MUM - RRSe ) ) / ( CS + RRSe ) ) ) * MUC ) + DS ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - BR ) - ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( MUC - MUR ) * ( MUM / ( MUR + ( ( MUM - MUC ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,( FirstVNF_Mem - FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( Const + ( Min( FirstVNF_Mem ,MRS ) + ( ( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) ) - ( ( ARS + CRS ) * Const ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - BR ) * ( BR - ( AMS / ( FirstVNF_Mem - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) - Max( ( ( BR / FirstVNF_Mem_Server ) + AMS ),( Const + FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * RRSe ),Min( RMSe ,( MUR / Min( Max( RRSe,( CS - RCSe ) ) ,( MUC / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + DDR ) - Min( FirstVNF_CPU ,MRS ) ) / Max( Min( ( BR / ( FirstVNF_CPU * DDR ) ) ,MDR ),( ( ( Max( Const,ACS ) + ( ( PN / MDR ) - FirstVNF_RAM ) ) / FirstVNF_Mem ) - CRS ) ) )", "choosing": "( Max( ( MUC / Min( DS ,Min( Max( RMSe,RMSe ) ,( DS + Min( RCSe ,MLU ) ) ) ) ),Max( DS,( DS + RMSe ) ) ) + Min( Min( RCSe ,MUM ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - Const ) ),PN ) * FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe * ( Max( Min( ( DS / CS ) ,MUM ),MUM ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const - CRS ) ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) - Min( DDR ,MDR ) )", "choosing": "( ( Max( MUR,DS ) + Min( ( CS + RRSe ) ,DS ) ) / ( RCSe - ( ( MUM / MUR ) * ( MUR * Min( ( ( RMSe * DS ) / Min( DS ,RMSe ) ) ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) - ( Max( CRS,FirstVNF_RAM ) * ( ACS * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_RAM_Server ) * Max( ARS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / BR ) ) )", "choosing": "Max( ( ( MUR - RRSe ) + ( RMSe + RRSe ) ),( ( ( DS + MLU ) * ( CS - MLU ) ) * Max( ( ( DS / MUC ) / Max( ( ( ( RCSe + RRSe ) / RRSe ) + DS ),MUM ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Min( Const ,MDR ) ) * Max( ( FirstVNF_Mem - MDR ),Max( RRS,FirstVNF_RAM ) ) ) ,Max( MRS,DDR ) )", "choosing": "( ( ( Min( MUR ,MUC ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( DS,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( Max( ( ( CS - MLU ) + ( RMSe * Min( MUM ,( RMSe * CS ) ) ) ),MUM ) / ( RMSe - Max( DS,( RRSe / ( ( RMSe * DS ) / ( MLU - RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR * Const ) - ( Const * FirstVNF_Mem_Server ) ) * ( DDR + FirstVNF_CPU ) ) ,Min( ( Const / ( ACS + DDR ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( MRS,( RRS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUC,( RCSe + ( Min( MUR ,RRSe ) / RCSe ) ) ) - DS ) / Max( ( Max( Max( ( CS - MLU ),Max( MLU,( Min( DS ,CS ) * Min( CS ,CS ) ) ) ),MUR ) * ( ( Min( DS ,Max( CS,MUC ) ) - RMSe ) * Max( ( MUC - Max( CS,MUM ) ),( RRSe - Max( DS,RRSe ) ) ) ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( PN / AMS ),( FirstVNF_CPU / AMS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) ,( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * ( ACS / ACS ) ) )", "choosing": "( ( ( ( ( MUR + Min( RRSe ,MUM ) ) + MUR ) * ( RCSe * RMSe ) ) + ( ( RCSe / RCSe ) + Max( RMSe,RMSe ) ) ) / Max( Min( ( RRSe * MUR ) ,( DS * DS ) ),( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( ARS / Const ) ) - ( MDR * ( CRS * ARS ) ) )", "choosing": "( ( ( RCSe * Min( MLU ,( RMSe - MLU ) ) ) * ( MUM * MUC ) ) - ( ( RRSe - ( Max( RMSe,( RMSe - ( ( MLU + RRSe ) * ( RCSe - RRSe ) ) ) ) - RMSe ) ) * Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,FirstVNF_CPU_Server ) - ( MDR - ( FirstVNF_RAM * AMS ) ) )", "choosing": "( Max( ( MUR / ( ( RMSe - RMSe ) - ( Max( Max( RCSe,MUM ),MUR ) * RCSe ) ) ),MLU ) + ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - ( Const + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) * Max( Min( RRS ,FirstVNF_RAM ),( FirstVNF_Mem - MDR ) ) ) ,Min( Min( ( FirstVNF_CPU / AMS ) ,Max( DDR,BR ) ) ,( Min( Const ,Min( BR ,ACS ) ) / Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MLU,( RMSe / ( CS - RMSe ) ) ) ) + ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + Min( ACS ,FirstVNF_Mem_Server ) ) - Min( RRS ,RRS ) )", "choosing": "Max( Max( ( RMSe - MLU ),MLU ),( ( MLU + ( ( Min( ( MUR - MUC ) ,( CS + ( DS + MUC ) ) ) / CS ) + ( MUR / Min( ( MLU - Min( CS ,DS ) ) ,Max( ( MUR * MLU ),( DS * MUR ) ) ) ) ) ) / ( ( RCSe * DS ) / ( Min( ( MLU / Min( ( MUR / RCSe ) ,( MUM * RCSe ) ) ) ,MUC ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( Min( ( Max( AMS,Min( ACS ,FirstVNF_Mem ) ) - ( ( ( FirstVNF_CPU + MRS ) + FirstVNF_CPU_Server ) / MRS ) ) ,BR ) - Max( MDR,MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,DS ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / ( ( ( Max( ( RRSe * CS ),MUM ) - ( DS - CS ) ) - Min( ( RRSe * ( Min( RMSe ,MUC ) * ( MLU - DS ) ) ) ,( MLU - MUM ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / FirstVNF_Mem ) ) / ( PN * BR ) ) - ( ARS * FirstVNF_Mem_Server ) ) ) - ( Const + ( PN * ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( ( MUM * MUC ) * ( RCSe * DS ) ) - ( ( RRSe - ( ( ( RMSe + Max( RCSe,RMSe ) ) * ( ( MUR * MUM ) / Max( ( MUR - CS ),MUR ) ) ) - RMSe ) ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( FirstVNF_RAM_Server * Min( ( MDR + Min( RRS ,( CRS + ARS ) ) ) ,ARS ) ) - ( FirstVNF_RAM * ( Min( DDR ,DDR ) - ( MDR - ( ( ( AMS - Const ) + CRS ) / RRS ) ) ) ) )", "choosing": "Max( ( Max( Max( MUR,DS ),RCSe ) - MLU ),( ( Min( ( RRSe - DS ) ,( CS * MUR ) ) + MUR ) - MUR ) )", "obj1": 0.6685823754789272, "obj2": 0.19367809502077254}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( ( FirstVNF_RAM - ARS ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( DDR + AMS ) ) / ( FirstVNF_CPU_Server + Min( RRS ,Min( ( FirstVNF_Mem_Server / ARS ) ,MRS ) ) ) ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ( FirstVNF_RAM_Server + BR ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( Min( RRSe ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,( Max( DS,Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) ) + ( MUM - ( MUR + MUR ) ) ) ) + ( MLU + ( MUR + MLU ) ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6590038314176245, "obj2": 0.22848122749179894}, {"determining": "( ( ( ( Min( Min( MDR ,Min( FirstVNF_CPU_Server ,MRS ) ) ,( AMS - MDR ) ) - MRS ) / FirstVNF_RAM_Server ) * FirstVNF_RAM ) - ( DDR / RRS ) )", "choosing": "Min( ( ( RRSe + MUR ) + ( CS * ( DS + RMSe ) ) ) ,( ( Max( MLU,RCSe ) + ( ( ( Max( ( MUR / CS ),DS ) / MUR ) * Min( RMSe ,( ( RMSe - MUM ) * Min( CS ,MLU ) ) ) ) + MUR ) ) + Max( ( DS - MUR ),Max( CS,MLU ) ) ) )", "obj1": 0.7088122605363985, "obj2": 0.1252661368203005}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( BR / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( MDR - ( ( BR + ( Const / FirstVNF_Mem_Server ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,Max( DS,RCSe ) ) * Max( RRSe,CS ) )", "obj1": 0.6455938697318008, "obj2": 0.24433803546381383}, {"determining": "( ( RRS - MRS ) - ( ( ARS * CRS ) / ( ( ACS + Const ) / ( ARS + ( FirstVNF_CPU / ARS ) ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,( Max( CS,( ( MUC - MUM ) - ( RMSe * MLU ) ) ) * MUM ) ) - ( MUC * RMSe ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RMSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.054793439817137767}, {"determining": "( FirstVNF_CPU_Server - ( MDR * ( ( DDR + ( MRS - RRS ) ) - ( MDR - ( MDR - ( AMS * BR ) ) ) ) ) )", "choosing": "Max( ( MLU * MUR ),Min( MUM ,Max( Min( CS ,( ( ( RCSe + ( RRSe - MLU ) ) / MUM ) * ( Max( ( DS / CS ),Max( RCSe,DS ) ) / ( MUR - Min( RCSe ,MLU ) ) ) ) ),DS ) ) )", "obj1": 0.8793103448275862, "obj2": 0.05301691831249107}, {"determining": "( Min( ( AMS * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) - Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "Min( Min( ( Max( MLU,( RCSe - MUM ) ) * ( ( MUR + MUM ) * ( Min( ( MUC + RRSe ) ,MUC ) / ( RMSe / DS ) ) ) ) ,( RCSe - DS ) ) ,( ( Max( RMSe,RRSe ) / ( ( MUC + ( RCSe + Min( MUC ,Min( RMSe ,MUC ) ) ) ) / RRSe ) ) + Max( ( MLU + CS ),Min( CS ,MLU ) ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06171647581961082}, {"determining": "( ( PN - ( ( Min( ( Const + Max( MDR,MDR ) ) ,ACS ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) * Max( Min( ( Max( ( MLU * ( Min( MUM ,RRSe ) + Max( CS,RCSe ) ) ),DS ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) )", "obj1": 0.7911877394636015, "obj2": 0.09058619436394133}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( ( ( PN + ( Min( DDR ,FirstVNF_CPU_Server ) - ( Max( RRS,( DDR + DDR ) ) * ( RRS * ( FirstVNF_CPU + ( FirstVNF_CPU + PN ) ) ) ) ) ) * ( PN * AMS ) ) - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( ( MUR * ( MLU - Max( ( CS + MUC ),( MUC - MUR ) ) ) ) + MUR ) / MUR ) ) )", "obj1": 0.7662835249042146, "obj2": 0.0984690651236629}, {"determining": "( ( ( PN * ACS ) * FirstVNF_RAM ) - ( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / MLU ),Max( MUR,MUC ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / Min( MUM ,RMSe ) ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.1278763735059606}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( FirstVNF_CPU_Server - ( MDR * ( ( DDR + AMS ) - ( MDR - ( ( ( Const - CRS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( ( MLU - MUR ),Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) )", "obj1": 0.8333333333333334, "obj2": 0.07174270763123787}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( Max( PN,( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,MDR ) + ( BR * ( AMS - FirstVNF_Mem_Server ) ) ) - ( Min( ACS ,( Max( DDR,ARS ) / FirstVNF_RAM ) ) / ( AMS / MDR ) ) ) ) - ( ARS + ARS ) )", "choosing": "( ( CS - RCSe ) - Max( RRSe,Max( Max( RCSe,MUC ),( ( DS * Min( DS ,( RMSe - ( MLU / MLU ) ) ) ) - RRSe ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.09479477959911128}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24497932868220526}, {"determining": "( ( PN * Min( PN ,Max( Max( Max( AMS,FirstVNF_Mem ),FirstVNF_Mem ),( AMS - ARS ) ) ) ) - ( Const + MRS ) )", "choosing": "( Max( Min( ( Max( ( MLU * MUM ),DS ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) * Min( ( Max( RCSe,MUM ) + Min( ( MUM + ( DS - MLU ) ) ,CS ) ) ,( MUR + RCSe ) ) )", "obj1": 0.8007662835249042, "obj2": 0.08653907317715022}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( ( MDR * Min( ( ( FirstVNF_Mem + ACS ) * Max( ARS,MRS ) ) ,( RRS + Const ) ) ) - ( AMS + ACS ) ) * ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / DDR ) ) / DDR ) ) ) / ( FirstVNF_RAM - RRS ) ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / ( ( ( MUR * ( MUR / MUC ) ) + MUR ) - ( ( RRSe * ( ( CS - MUC ) / CS ) ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.8908045977011494, "obj2": 0.04873432743178363}, {"determining": "( ( ( ( ACS + Const ) / Min( DDR ,AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( ( ( ARS / CRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - ( ( ACS / RRS ) + MDR ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),MLU ) )", "obj1": 0.6091954022988506, "obj2": 0.26211943262807524}, {"determining": "( ( DDR / RRS ) * ( MRS - Min( DDR ,( PN - CRS ) ) ) )", "choosing": "( ( RMSe / MLU ) * Min( Max( CS,( ( MLU - Min( MUC ,MUM ) ) / Min( ( Min( DS ,DS ) / ( ( MUM - MLU ) + ( MLU + MLU ) ) ) ,RRSe ) ) ) ,RCSe ) )", "obj1": 0.8984674329501916, "obj2": 0.04541680735925762}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( RCSe * RRSe ),( Max( MUC,MUC ) / ( DS - MUM ) ) ) - RRSe )", "obj1": 0.8122605363984674, "obj2": 0.0840440891573264}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( ( ( ( FirstVNF_Mem / PN ) * DDR ) - ARS ) + MRS ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( Max( MUM,RCSe ) + Min( MUR ,RRSe ) ) + Max( Min( MLU ,RRSe ),( CS * ( MUR - DS ) ) ) ) )", "obj1": 0.8237547892720306, "obj2": 0.07469022345578966}, {"determining": "( ( ( ( Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) / DDR ) - ( FirstVNF_Mem * RRS ) ) * PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe + ( MLU * DS ) ) * Min( ( RMSe / MUR ) ,Min( DS ,DS ) ) )", "obj1": 0.8180076628352491, "obj2": 0.07918991785655563}, {"determining": "( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,ARS ) ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( MUR - MLU ) ) * Max( Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,DS ),( CS / RMSe ) ) )", "obj1": 0.6283524904214559, "obj2": 0.24884824936832975}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( DS + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( RMSe + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.9482758620689655, "obj2": 0.01706271077537527}, {"determining": "( ( PN * ( ( CRS + ACS ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - Min( Const ,MRS ) )", "choosing": "( Min( ( Max( ( MUM * ( DS - RMSe ) ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.8467432950191571, "obj2": 0.06845709810341478}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7432950191570882, "obj2": 0.10632516232713152}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( MUM * ( RRSe / ( MUM / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ) ) - Max( RMSe,RCSe ) )", "obj1": 0.9597701149425287, "obj2": 0.015400501631621492}, {"determining": "( Max( MRS,( ( RRS / Const ) - ACS ) ) * ( ( ( RRS * Const ) * Max( Max( MDR,FirstVNF_RAM ),AMS ) ) + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) * ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( ( ( MLU * CS ) + DS ) + ( MUR - Max( DS,RCSe ) ) ) - ( MUR - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.25364511381513893}, {"determining": "( ( ( ( AMS / ARS ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( DDR * MDR ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( ( MLU * MUR ),Min( MUM ,CS ) ) + ( Max( MUM,( ( DS - CS ) * RCSe ) ) / Max( ( Min( RCSe ,MUC ) - RCSe ),( Min( ( RCSe + MUC ) ,( Max( RCSe,MUM ) + MUM ) ) - MUR ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.26660572008838096}, {"determining": "( ( ( RRS * Min( FirstVNF_RAM_Server ,RRS ) ) * ( AMS * PN ) ) - ( ( FirstVNF_RAM * CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RCSe ,( ( CS / Max( ( MUC / ( RRSe - RMSe ) ),RRSe ) ) * RCSe ) ) * Min( RCSe ,MUR ) ) * Max( MLU,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09538539851668557}, {"determining": "( ( ( BR / ( Const * DDR ) ) / ( Min( Const ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_RAM ,DDR ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Const )", "choosing": "Max( DS,( RRSe + ( DS / Min( MUC ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 0.9061302681992337, "obj2": 0.042127879174424315}, {"determining": "( ( ACS * MRS ) - ( ( ARS * CRS ) / ( ( Const - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) / DDR ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( MLU + RMSe ) ) ) + ( Max( Max( RCSe,DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MLU - MUM ) / CS ) - ( ( Min( RRSe ,CS ) / DS ) / MUM ) ) ) ) )", "obj1": 0.9195402298850575, "obj2": 0.03560003065834095}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06925970495448557}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( ( PN * ( ( Min( ACS ,( Const + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( Min( ( Max( ( MLU * MUM ),DS ) / ( CS * DS ) ) ,Min( ( RRSe * RRSe ) ,MLU ) ),Min( MUM ,MUM ) ) * Min( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) ,( DS + RCSe ) ) )", "obj1": 0.8045977011494253, "obj2": 0.08417265567009614}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( ( MRS + ACS ) * Max( ARS,MRS ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - RCSe ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.0277258666715012}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / Max( ARS,RRS ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031377048761481216}, {"determining": "( Min( Min( Const ,FirstVNF_RAM ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( ( Max( MDR,MRS ) * ( Const - FirstVNF_RAM_Server ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( DS * ( RRSe / MUC ) ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( CS ,CS ) ) + Max( ( CS * MLU ),Min( MLU ,RRSe ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02294358845695616}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,BR ) ) - ( ( FirstVNF_CPU + RRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU * ( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - ( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( ( ACS * ( Const + BR ) ),( ACS * Const ) ) ) ) * ( FirstVNF_RAM - MRS ) ) )", "choosing": "Max( Min( MLU ,( MUC + RRSe ) ),( ( ( MUC / DS ) - ( MUC / RMSe ) ) + ( ( ( Min( DS ,MUC ) / CS ) * ( ( MLU - CS ) + ( Min( ( RRSe / RCSe ) ,MUC ) * DS ) ) ) - MUM ) ) )", "obj1": 0.9636015325670498, "obj2": 0.015147343594167653}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / DDR ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( ( MRS + ACS ) * Max( ARS,MRS ) ) ,Max( ACS,FirstVNF_Mem ) ) ) - MRS ) )", "choosing": "Min( Min( ( Max( MLU,( ( DS - ( ( RCSe + CS ) - Min( MUC ,RRSe ) ) ) - RCSe ) ) * ( ( MUM + MUR ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.9137931034482759, "obj2": 0.03907566846795993}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / CRS ) ) / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( ( ( ( ( Max( RCSe,MUC ) / MUM ) / CS ) - ( CS + DS ) ) / CS ) * ( RRSe + ( Max( ( ( MLU * Max( MUR,RMSe ) ) * MUR ),RMSe ) / MLU ) ) )", "obj1": 0.9789272030651341, "obj2": 0.008268674597352936}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.603448275862069, "obj2": 0.2697155565183963}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - ( Const + ( Min( FirstVNF_Mem ,MRS ) + ( ( FirstVNF_CPU + DDR ) / MDR ) ) ) )", "choosing": "( Max( ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ),MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 0.9693486590038314, "obj2": 0.012495471505567363}, {"determining": "( Max( ( PN / FirstVNF_RAM ),FirstVNF_Mem ) - ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,( Min( CS ,CS ) / ( MUM / MLU ) ) ) ) / CS ) - ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) - ( CS / CS ) ) ) / ( ( Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) + RRSe ) * Min( MLU ,RMSe ) ) ) / Min( Min( RCSe ,MUM ) ,MUR ) )", "obj1": 0.9272030651340997, "obj2": 0.02925872671857499}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * FirstVNF_RAM_Server ) / ( Min( ACS ,( FirstVNF_CPU / DDR ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( Max( AMS,FirstVNF_Mem_Server ) - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( MUM / CS ) ) - Max( ( MLU - MUR ),( ( RRSe * MUC ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.89272030651341, "obj2": 0.04730882927861678}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) )", "obj1": 0.8218390804597702, "obj2": 0.0776501159993537}, {"determining": "( Min( MRS ,FirstVNF_Mem ) - ( ( ARS * CRS ) / ( Min( ( ACS + FirstVNF_Mem ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( ( MUR * CS ) - RRSe ),( ( Min( Min( MUC ,MUR ) ,RMSe ) / Min( ( ( DS / MUC ) / RRSe ) ,( RCSe - DS ) ) ) * ( MUC - RRSe ) ) ) / MLU )", "obj1": 0.9099616858237548, "obj2": 0.0420109442984921}, {"determining": "( ( CRS / FirstVNF_CPU ) - Min( DDR ,Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( ( Max( ( MUR / MUR ),( ( RRSe * Min( MUC ,RMSe ) ) - ( ( Min( RMSe ,RCSe ) + MUM ) / ( MUC - Max( MLU,MUR ) ) ) ) ) / Max( ( MUM * DS ),( CS + MUM ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.9406130268199234, "obj2": 0.024546990873774398}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * MRS ) / ( Min( ACS ,( ( FirstVNF_CPU_Server * ARS ) / FirstVNF_CPU ) ) / DDR ) ) )", "choosing": "( ( Max( MUC,( RCSe + ( Max( ( RMSe / ( MLU + MUM ) ),( DS - MUC ) ) / RCSe ) ) ) - DS ) / Max( ( Max( Max( ( CS - MLU ),Max( MLU,( Min( DS ,CS ) * Min( CS ,CS ) ) ) ),MUR ) * ( Max( ( RMSe - Max( CS,MUM ) ),( RRSe - Max( DS,RRSe ) ) ) * ( Min( DS ,Max( CS,MUC ) ) - RMSe ) ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 0.9176245210727969, "obj2": 0.0381768309564265}, {"determining": "( ( ( AMS / ( Max( RRS,Const ) + ( Const + CRS ) ) ) + AMS ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( Const,RRS ),Min( ( Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / Min( MUC ,MUC ) ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( Min( MUM ,CS ) - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ( Min( Min( MDR ,MRS ) ,( FirstVNF_Mem / FirstVNF_Mem ) ) / DDR ) ,( FirstVNF_CPU / ACS ) ) / DDR ) ) )", "choosing": "Min( ( Max( ( ( CS + MLU ) + ( Max( MUC,Min( MUM ,MUR ) ) + ( Max( ( RRSe + MUC ),CS ) - RCSe ) ) ),MUR ) - RMSe ) ,( ( Max( MUM,RCSe ) + ( MUR * CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.9386973180076629, "obj2": 0.026871829108757368}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003388263960737056}, {"determining": "( ( Const + Max( ( MRS - FirstVNF_CPU ),FirstVNF_RAM_Server ) ) - ( Min( CRS ,ARS ) - ( ( Min( ACS ,( Min( PN ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) / ARS ) ) * ACS ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe * DS ) / ( MUM * MUC ) ) - ( ( Min( MUR ,MUC ) + MLU ) - ( RMSe + ( MLU * MUC ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.007380911964598459}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( FirstVNF_RAM * ( Min( FirstVNF_CPU_Server ,PN ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( RCSe / MLU ) - Max( ( RRSe * RRSe ),( ( MUR * CS ) / MUC ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003388263960737056}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - ( Max( ( RMSe - ( ( MLU + RRSe ) * ( RCSe - RRSe ) ) ),RMSe ) - RMSe ) ) / Max( RMSe,RMSe ) ) )", "obj1": 0.9827586206896551, "obj2": 0.007380911964598459}, {"determining": "( ( ( Const + FirstVNF_Mem_Server ) + ( Min( ARS ,CRS ) * Min( RRS ,MRS ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUM - ( DS * MUR ) ) - ( ( MUR - Min( RCSe ,( Min( Min( ( CS / CS ) ,( RMSe + MUC ) ) ,Min( ( MUM + MLU ) ,( RRSe / MUC ) ) ) / MUM ) ) ) - Min( MLU ,RCSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0022121057546380667}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( CS * MUR ) - RRSe ) - ( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.7394636015325671, "obj2": 0.1076341606392029}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "Min( Min( ( ( ( RMSe - ( MUM * MUR ) ) / MUM ) * ( ( MUR + MUM ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.011083365744899572}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 0.9712643678160919, "obj2": 0.011705247488276765}, {"determining": "( ( ( RRS - ( MRS / CRS ) ) / BR ) * ( FirstVNF_RAM + Max( Max( Const,RRS ),Min( ( Min( Max( Max( DDR,BR ),Min( PN ,MRS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( ( RRSe * RRSe ) / Min( MUR ,MUC ) ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + Max( RRSe,DS ) ) * ( Max( Min( CS ,CS ),( CS * CS ) ) - ( Min( MUR ,MUM ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( Min( MUM ,CS ) - Max( ( MLU / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * DDR ) / ( Min( ( PN + FirstVNF_RAM_Server ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server * BR ) ) ) / DDR ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( MUC ,( Max( RMSe,RCSe ) / MLU ) ) ,( CS / CS ) ) ) / ( ( MUC / ( RCSe / RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( CS * MLU ) * ( MUC / MUM ) ) / ( MUR + RCSe ) ) )", "obj1": 0.9252873563218391, "obj2": 0.029794250069530768}, {"determining": "( Min( ARS ,BR ) - ( Const - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * ( ( MUC - MUC ) - MUR ) ) * RCSe ) ) ) ,MLU ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.8448275862068966, "obj2": 0.06907213620261439}, {"determining": "( ( PN * ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - ( Min( MDR ,( ( FirstVNF_CPU + RRS ) / FirstVNF_Mem ) ) - Max( AMS,ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUC - MUR ) - Min( MUC ,Min( ( Max( Min( ( RRSe - DS ) ,( MLU - RMSe ) ),DS ) / ( CS * DS ) ) ,( CS * DS ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0005950023982061264}, {"determining": "( ( ( PN / ( Min( ( MDR / MRS ) ,( FirstVNF_CPU / ARS ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( Max( MRS,CRS ) - AMS ) )", "choosing": "( Max( ( RCSe - RRSe ),( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( MUM / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ) / Max( ( ( MUR * ( CS + ( RMSe + MUC ) ) ) - RRSe ),( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10705437249205116}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( CRS ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - ( FirstVNF_RAM + ( RRS / PN ) ) )", "choosing": "Min( ( RMSe - Min( CS ,( ( DS * MUR ) / DS ) ) ) ,Max( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ),( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.011083365744899572}, {"determining": "( Max( Const,Min( ACS ,( BR - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Const * ( ( Const - BR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUC - RCSe ) ,( ( Max( RCSe,CS ) + ( RCSe - RMSe ) ) + Max( ( MLU + CS ),Min( MLU ,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "( ( ( MDR * Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,RRS ) ) / FirstVNF_Mem_Server ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( Max( RMSe,CS ),( MUM / DS ) ) / RMSe ) ) - ( Min( RCSe ,MLU ) - ( MUR - Min( RCSe ,Max( ( ( ( MUC * DS ) + MUC ) * Max( DS,( RMSe + MUC ) ) ),Min( RCSe ,RMSe ) ) ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,Min( ARS ,DDR ) ) ) * ( MRS * MRS ) ) ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUM ,RCSe ) - ( MLU / ( DS * ( ( ( MUM * DS ) - ( MUR - ( RMSe / RMSe ) ) ) - ( MUR - Max( RRSe,DS ) ) ) ) ) ) / Max( Min( ( RCSe * MUR ) ,( DS - DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) - Min( Min( FirstVNF_CPU ,RRS ) ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( CS + ( Min( ( MUM + ( RCSe - MLU ) ) ,MUR ) * RMSe ) ) + ( Min( RMSe ,Min( DS ,RRSe ) ) * MUC ) ),( MUM * Max( RRSe,Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * ( FirstVNF_CPU / ( ( ARS - MDR ) + AMS ) ) ) ,Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) + Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( CS ,RRSe ) / Max( Min( ( RCSe * MUR ) ,( DS * DS ) ),( Max( RMSe,DS ) * Min( RRSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( DDR + FirstVNF_RAM ) ) - Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( MUR * ( Max( MUR,RCSe ) / ( RRSe + CS ) ) ) ,DS ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUR,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / ( ( ( Max( MLU,MUM ) - ( DS - CS ) ) - Min( ( RRSe * ( Min( RMSe ,MUC ) * ( MLU - DS ) ) ) ,( MLU - MUM ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( DDR ,DDR ) - ( MDR - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( ( ( Max( RCSe,Max( RMSe,MUR ) ) * Min( RMSe ,MUC ) ) / RCSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( Max( ARS,ACS ) ,DDR ) - ( AMS - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( Max( ( ( MUM * MUC ) - Min( MLU ,CS ) ),( ( MLU * DS ) - MUM ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) * ( BR - ( FirstVNF_CPU * BR ) ) )", "choosing": "( ( ( MUM + RRSe ) + MLU ) - ( ( RRSe - DS ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) / ( FirstVNF_CPU_Server * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) / ( Min( ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( DDR + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - MDR ) ,BR ) * ( DDR * ( RRS / ( FirstVNF_RAM / PN ) ) ) ) ) - Max( ( MRS / FirstVNF_RAM ),Min( ( ( AMS + ( Const + Const ) ) * ( Const + MDR ) ) ,BR ) ) )", "choosing": "Min( ( ( RRSe + CS ) * Max( CS,( DS + ( DS - MUR ) ) ) ) ,( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,MDR ) - ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - MDR ) )", "choosing": "Max( Max( ( Max( CS,RRSe ) * Max( Max( Min( MUR ,RCSe ),RCSe ),CS ) ),MLU ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * CRS ),RRS ) / ( FirstVNF_CPU_Server + ( ARS + FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,( MUC * Max( MUC,RRSe ) ) ) + MUR ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Min( AMS ,( Min( DDR ,AMS ) - MDR ) ) )", "choosing": "Max( ( DS + DS ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR / MDR ) / FirstVNF_RAM_Server ) ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( ( ( MUR / ( ( DS / ( MUM - RRSe ) ) / ( CS + RRSe ) ) ) * MUC ) + DS ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - BR ) - ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( MUC - MUR ) * ( MUM / ( MUR + ( ( MUM - MUC ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,( FirstVNF_Mem - FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( Const + ( Min( FirstVNF_Mem ,MRS ) + ( ( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) ) - ( ( ARS + CRS ) * Const ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - BR ) * ( BR - ( AMS / ( FirstVNF_Mem - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) - Max( ( ( BR / FirstVNF_Mem_Server ) + AMS ),( Const + FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * RRSe ),Min( RMSe ,( MUR / Min( Max( RRSe,( CS - RCSe ) ) ,( MUC / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + DDR ) - Min( FirstVNF_CPU ,MRS ) ) / Max( Min( ( BR / ( FirstVNF_CPU * DDR ) ) ,MDR ),( ( ( Max( Const,ACS ) + ( ( PN / MDR ) - FirstVNF_RAM ) ) / FirstVNF_Mem ) - CRS ) ) )", "choosing": "( Max( ( MUC / Min( DS ,Min( Max( RMSe,RMSe ) ,( DS + Min( RCSe ,MLU ) ) ) ) ),Max( DS,( DS + RMSe ) ) ) + Min( Min( RCSe ,MUM ) ,( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server / BR ) - ( Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - Const ) ),PN ) * FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,( RCSe / ( RMSe * ( Max( Min( ( DS / CS ) ,MUM ),MUM ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const - CRS ) ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) - Min( DDR ,MDR ) )", "choosing": "( ( Max( MUR,DS ) + Min( ( CS + RRSe ) ,DS ) ) / ( RCSe - ( ( MUM / MUR ) * ( MUR * Min( ( ( RMSe * DS ) / Min( DS ,RMSe ) ) ,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const - DDR ) * ( FirstVNF_CPU_Server + MDR ) ) - ( Max( CRS,FirstVNF_RAM ) * ( ACS * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_RAM_Server ) * Max( ARS,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / BR ) ) )", "choosing": "Max( ( ( MUR - RRSe ) + ( RMSe + RRSe ) ),( ( ( DS + MLU ) * ( CS - MLU ) ) * Max( ( ( DS / MUC ) / Max( ( ( ( RCSe + RRSe ) / RRSe ) + DS ),MUM ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "Min( ( Const - MRS ) ,( ( FirstVNF_RAM + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,Max( ( RCSe / DS ),Max( MUC,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( AMS,Min( ACS ,FirstVNF_Mem ) ) - ( ( ( FirstVNF_CPU + MRS ) + FirstVNF_CPU_Server ) / MRS ) ) ,BR ) - Max( MDR,MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,DS ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / ( ( ( Max( ( RRSe * CS ),MUM ) - ( DS - CS ) ) - Min( ( RRSe * ( Min( RMSe ,MUC ) * ( MLU - DS ) ) ) ,( MLU - MUM ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( FirstVNF_RAM_Server * Min( ( MDR + Min( RRS ,( CRS + ARS ) ) ) ,ARS ) ) - ( FirstVNF_RAM * ( Min( DDR ,DDR ) - ( MDR - ( ( ( AMS - Const ) + CRS ) / RRS ) ) ) ) )", "choosing": "Max( ( Max( Max( MUR,DS ),RCSe ) - MLU ),( ( Min( ( RRSe - DS ) ,( CS * MUR ) ) + MUR ) - MUR ) )", "obj1": 0.6685823754789272, "obj2": 0.19367809502077254}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( ( FirstVNF_RAM - ARS ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( DDR + AMS ) ) / ( FirstVNF_CPU_Server + Min( RRS ,Min( ( FirstVNF_Mem_Server / ARS ) ,MRS ) ) ) ) ) ) - Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ( FirstVNF_RAM_Server + BR ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( Min( RRSe ,MLU ) ,( MLU * DS ) ) ,( ( Max( MUM,( Max( DS,Min( ( RMSe * MUC ) ,Max( MUM,CS ) ) ) + ( MUM - ( MUR + MUR ) ) ) ) + ( MLU + ( MUR + MLU ) ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.6590038314176245, "obj2": 0.22848122749179894}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( DDR / RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7088122605363985, "obj2": 0.12421834240521992}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( FirstVNF_RAM_Server * CRS ) - ( MDR - ( ( ( AMS - Const ) * CRS ) / Min( Min( CRS ,BR ) ,( MDR / ( MRS * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Max( ( ( Min( ( ( ( RRSe - ( RMSe + MUM ) ) / ( CS * MUR ) ) - DS ) ,( CS * MUR ) ) + ( RMSe / Max( ( MUM / DS ),Max( RMSe,CS ) ) ) ) - MUR ),( MUM - MLU ) )", "obj1": 0.6436781609195402, "obj2": 0.23988571233558614}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( Min( ( AMS * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) - Max( Const,Min( ACS ,( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "Min( Min( ( Max( MLU,( RCSe - MUM ) ) * ( ( MUR + MUM ) * ( Min( ( MUC + RRSe ) ,MUC ) / ( RMSe / DS ) ) ) ) ,( RCSe - DS ) ) ,( ( Max( RMSe,RRSe ) / ( ( MUC + ( RCSe + Min( MUC ,Min( RMSe ,MUC ) ) ) ) / RRSe ) ) + Max( ( MLU + CS ),Min( CS ,MLU ) ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06171647581961082}, {"determining": "( ( RRS - MRS ) - ( ( ARS * CRS ) / ( ( ACS + Const ) / ( ARS + ( FirstVNF_CPU / ARS ) ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,( Max( CS,( ( MUC - MUM ) - ( RMSe * MLU ) ) ) * MUM ) ) - ( MUC * RMSe ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RMSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.054793439817137767}, {"determining": "( FirstVNF_CPU_Server - ( MDR * ( ( DDR + ( MRS - RRS ) ) - ( MDR - ( MDR - ( AMS * BR ) ) ) ) ) )", "choosing": "Max( ( MLU * MUR ),Min( MUM ,Max( Min( CS ,( ( ( RCSe + ( RRSe - MLU ) ) / MUM ) * ( Max( ( DS / CS ),Max( RCSe,DS ) ) / ( MUR - Min( RCSe ,MLU ) ) ) ) ),DS ) ) )", "obj1": 0.8793103448275862, "obj2": 0.05301691831249107}, {"determining": "( ( ( PN * ACS ) * FirstVNF_RAM ) - ( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / MLU ),Max( MUR,MUC ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / Min( MUM ,RMSe ) ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.1278763735059606}, {"determining": "( ( ( PN + ( Min( DDR ,FirstVNF_CPU_Server ) - ( Max( RRS,( DDR + DDR ) ) * ( RRS * ( FirstVNF_CPU + ( FirstVNF_CPU + PN ) ) ) ) ) ) * ( PN * AMS ) ) - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( ( MUR * ( MLU - Max( ( CS + MUC ),( MUC - MUR ) ) ) ) + MUR ) / MUR ) ) )", "obj1": 0.7662835249042146, "obj2": 0.0984690651236629}, {"determining": "( ( PN - ( ( Min( ( Const + Max( MDR,MDR ) ) ,ACS ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) * Max( Min( ( Max( ( MLU * ( Min( MUM ,RRSe ) + Max( CS,RCSe ) ) ),DS ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) )", "obj1": 0.7911877394636015, "obj2": 0.09058619436394133}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( ( ( ( FirstVNF_Mem / PN ) * DDR ) - ARS ) + MRS ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( Max( MUM,RCSe ) + Min( MUR ,RRSe ) ) + Max( Min( MLU ,RRSe ),( CS * ( MUR - DS ) ) ) ) )", "obj1": 0.8237547892720306, "obj2": 0.07469022345578966}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( PN * Min( PN ,Max( Max( Max( AMS,FirstVNF_Mem ),FirstVNF_Mem ),( AMS - ARS ) ) ) ) - ( Const + MRS ) )", "choosing": "( Max( Min( ( Max( ( MLU * MUM ),DS ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) * Min( ( Max( RCSe,MUM ) + Min( ( MUM + ( DS - MLU ) ) ,CS ) ) ,( MUR + RCSe ) ) )", "obj1": 0.8007662835249042, "obj2": 0.08653907317715022}, {"determining": "( ( ( MDR * Min( ( ( FirstVNF_Mem + ACS ) * Max( ARS,MRS ) ) ,( RRS + Const ) ) ) - ( AMS + ACS ) ) * ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / DDR ) ) / DDR ) ) ) / ( FirstVNF_RAM - RRS ) ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / ( ( ( MUR * ( MUR / MUC ) ) + MUR ) - ( ( RRSe * ( ( CS - MUC ) / CS ) ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.8908045977011494, "obj2": 0.04873432743178363}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( ( ( ACS + Const ) / Min( DDR ,AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( ( ( ARS / CRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - ( ( ACS / RRS ) + MDR ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),MLU ) )", "obj1": 0.6091954022988506, "obj2": 0.26211943262807524}, {"determining": "( ( ( ( FirstVNF_RAM_Server / AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - Max( Min( FirstVNF_RAM ,Max( ( CRS - DDR ),RRS ) ),( Min( ARS ,CRS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( MLU + Min( ( DS + Min( DS ,( ( RCSe * RRSe ) * RCSe ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUC + RRSe ) ) ) ) ) ) ,( MLU + MLU ) ) )", "obj1": 0.632183908045977, "obj2": 0.244183819194417}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( RCSe * RRSe ),( Max( MUC,MUC ) / ( DS - MUM ) ) ) - RRSe )", "obj1": 0.8122605363984674, "obj2": 0.0840440891573264}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( DDR / RRS ) * ( MRS - Min( DDR ,( PN - CRS ) ) ) )", "choosing": "( ( RMSe / MLU ) * Min( Max( CS,( ( MLU - Min( MUC ,MUM ) ) / Min( ( Min( DS ,DS ) / ( ( MUM - MLU ) + ( MLU + MLU ) ) ) ,RRSe ) ) ) ,RCSe ) )", "obj1": 0.8984674329501916, "obj2": 0.04541680735925762}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( MLU + RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MLU - MUM ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09416580839971138}, {"determining": "( ( ( ( Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) / DDR ) - ( FirstVNF_Mem * RRS ) ) * PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe + ( MLU * DS ) ) * Min( ( RMSe / MUR ) ,Min( DS ,DS ) ) )", "obj1": 0.8180076628352491, "obj2": 0.07918991785655563}, {"determining": "( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,ARS ) ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( MUR - MLU ) ) * Max( Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,DS ),( CS / RMSe ) ) )", "obj1": 0.6283524904214559, "obj2": 0.24884824936832975}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( DS + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( RMSe + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.9482758620689655, "obj2": 0.01706271077537527}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( MUM * ( RRSe / ( MUM / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ) ) - Max( RMSe,RCSe ) )", "obj1": 0.9597701149425287, "obj2": 0.015400501631621492}, {"determining": "( Max( ( PN / FirstVNF_RAM ),FirstVNF_Mem ) - ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,( Min( CS ,CS ) / ( MUM / MLU ) ) ) ) / CS ) - ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) - ( CS / CS ) ) ) / ( ( Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) + RRSe ) * Min( MLU ,RMSe ) ) ) / Min( Min( RCSe ,MUM ) ,MUR ) )", "obj1": 0.9272030651340997, "obj2": 0.02925872671857499}, {"determining": "( Max( MRS,( ( RRS / Const ) - ACS ) ) * ( ( ( RRS * Const ) * Max( Max( MDR,FirstVNF_RAM ),AMS ) ) + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) * ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( ( ( MLU * CS ) + DS ) + ( MUR - Max( DS,RCSe ) ) ) - ( MUR - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.25364511381513893}, {"determining": "( Min( Min( Const ,FirstVNF_RAM ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( ( Max( MDR,MRS ) * ( Const - FirstVNF_RAM_Server ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( DS * ( RRSe / MUC ) ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( CS ,CS ) ) + Max( ( CS * MLU ),Min( MLU ,RRSe ) ) ) )", "obj1": 0.9693486590038314, "obj2": 0.01163136178849157}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( ( ( AMS / ARS ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( DDR * MDR ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( ( MLU * MUR ),Min( MUM ,CS ) ) + ( Max( MUM,( ( DS - CS ) * RCSe ) ) / Max( ( Min( RCSe ,MUC ) - RCSe ),( Min( ( RCSe + MUC ) ,( Max( RCSe,MUM ) + MUM ) ) - MUR ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.26660572008838096}, {"determining": "( ( ( RRS * Min( FirstVNF_RAM_Server ,RRS ) ) * ( AMS * PN ) ) - ( ( FirstVNF_RAM * CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RCSe ,( ( CS / Max( ( MUC / ( RRSe - RMSe ) ),RRSe ) ) * RCSe ) ) * Min( RCSe ,MUR ) ) * Max( MLU,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09538539851668557}, {"determining": "( ( ( BR / ( Const * DDR ) ) / ( Min( Const ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_RAM ,DDR ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Const )", "choosing": "Max( DS,( RRSe + ( DS / Min( MUC ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( MLU,MUR ) * ( Min( ( Max( RCSe,MUM ) / MUR ) ,MUM ) * RRSe ) )", "obj1": 0.9061302681992337, "obj2": 0.042127879174424315}, {"determining": "( ( ACS * MRS ) - ( ( ARS * CRS ) / ( ( Const - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) / DDR ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( MLU + RMSe ) ) ) + ( Max( Max( RCSe,DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MLU - MUM ) / CS ) - ( ( Min( RRSe ,CS ) / DS ) / MUM ) ) ) ) )", "obj1": 0.9195402298850575, "obj2": 0.03560003065834095}, {"determining": "( Min( Min( Const ,FirstVNF_RAM ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( ( Max( MDR,MRS ) * ( Const - FirstVNF_RAM_Server ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( DS * ( RRSe / MUC ) ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( CS ,CS ) ) + Max( ( CS * MLU ),Min( MLU ,RRSe ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02294358845695616}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * ( AMS * Const ) ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,Max( MLU,CS ) ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / ( RCSe / DS ) ) )", "obj1": 0.7471264367816092, "obj2": 0.10431811036909899}, {"determining": "( ( PN * ( ( Min( ACS ,( Const + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( Min( ( Max( ( MLU * MUM ),DS ) / ( CS * DS ) ) ,Min( ( RRSe * RRSe ) ,MLU ) ),Min( MUM ,MUM ) ) * Min( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) ,( DS + RCSe ) ) )", "obj1": 0.8045977011494253, "obj2": 0.08417265567009614}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,BR ) ) - ( ( FirstVNF_CPU + RRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU * ( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - ( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( ( ACS * ( Const + BR ) ),( ACS * Const ) ) ) ) * ( FirstVNF_RAM - MRS ) ) )", "choosing": "Max( Min( MLU ,( MUC + RRSe ) ),( ( ( MUC / DS ) - ( MUC / RMSe ) ) + ( ( ( Min( DS ,MUC ) / CS ) * ( ( MLU - CS ) + ( Min( ( RRSe / RCSe ) ,MUC ) * DS ) ) ) - MUM ) ) )", "obj1": 0.9636015325670498, "obj2": 0.015147343594167653}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / Max( ARS,RRS ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031377048761481216}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / DDR ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( ( MRS + ACS ) * Max( ARS,MRS ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( Max( MLU,Min( MUM ,MUM ) ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) ) ) )", "obj1": 0.89272030651341, "obj2": 0.04660890238507885}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.8218390804597702, "obj2": 0.07736613454388273}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * MRS ) / ( Min( ACS ,( ( FirstVNF_CPU_Server * ARS ) / FirstVNF_CPU ) ) / DDR ) ) )", "choosing": "( ( Max( MUC,( RCSe + ( Max( ( RMSe / ( MLU + MUM ) ),( DS - MUC ) ) / RCSe ) ) ) - DS ) / Max( ( Max( Max( ( CS - MLU ),Max( MLU,( Min( DS ,CS ) * Min( CS ,CS ) ) ) ),MUR ) * ( Max( ( RMSe - Max( CS,MUM ) ),( RRSe - Max( DS,RRSe ) ) ) * ( Min( DS ,Max( CS,MUC ) ) - RMSe ) ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 0.9176245210727969, "obj2": 0.0381768309564265}, {"determining": "( ( ( RRS - ( MRS / CRS ) ) / BR ) * ( FirstVNF_RAM + Max( Max( Const,RRS ),Min( ( Min( Max( Max( DDR,BR ),Min( PN ,MRS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( ( RRSe * RRSe ) / Min( MUR ,MUC ) ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + Max( RRSe,DS ) ) * ( Max( Min( CS ,CS ),( CS * CS ) ) - ( Min( MUR ,MUM ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( Min( MUM ,CS ) - Max( ( MLU / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24497932868220526}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / DDR ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( ( MRS + ACS ) * Max( ARS,MRS ) ) ,Max( ACS,FirstVNF_Mem ) ) ) - MRS ) )", "choosing": "Min( Min( ( Max( MLU,( ( DS - ( ( RCSe + CS ) - Min( MUC ,RRSe ) ) ) - RCSe ) ) * ( ( MUM + MUR ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.9137931034482759, "obj2": 0.03907566846795993}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7432950191570882, "obj2": 0.10632516232713152}, {"determining": "( ( FirstVNF_RAM * ( Min( FirstVNF_CPU_Server ,PN ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( RCSe / MLU ) - Max( ( RRSe * RRSe ),( ( MUR * CS ) / MUC ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003388263960737056}, {"determining": "( ( Const + Max( ( MRS - FirstVNF_CPU ),FirstVNF_RAM_Server ) ) - ( Min( CRS ,ARS ) - ( ( Min( ACS ,( Min( PN ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) / ARS ) ) * ACS ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe * DS ) / ( MUM * MUC ) ) - ( ( Min( MUR ,MUC ) + MLU ) - ( RMSe + ( MLU * MUC ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.007380911964598459}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( Max( PN,( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,MDR ) + ( BR * ( AMS - FirstVNF_Mem_Server ) ) ) - ( Min( ACS ,( Max( DDR,ARS ) / FirstVNF_RAM ) ) / ( AMS / MDR ) ) ) ) - ( ARS + ARS ) )", "choosing": "( ( CS - RCSe ) - Max( RRSe,Max( Max( RCSe,MUC ),( ( DS * Min( DS ,( RMSe - ( MLU / MLU ) ) ) ) - RRSe ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.09479477959911128}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003388263960737056}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - ( Max( ( RMSe - ( ( MLU + RRSe ) * ( RCSe - RRSe ) ) ),RMSe ) - RMSe ) ) / Max( RMSe,RMSe ) ) )", "obj1": 0.9827586206896551, "obj2": 0.007380911964598459}, {"determining": "( ( ( Const + FirstVNF_Mem_Server ) + ( Min( ARS ,CRS ) * Min( RRS ,MRS ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUM - ( DS * MUR ) ) - ( ( MUR - Min( RCSe ,( Min( Min( ( CS / CS ) ,( RMSe + MUC ) ) ,Min( ( MUM + MLU ) ,( RRSe / MUC ) ) ) / MUM ) ) ) - Min( MLU ,RCSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0022121057546380667}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.603448275862069, "obj2": 0.2697155565183963}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "Min( Min( ( ( ( RMSe - ( MUM * MUR ) ) / MUM ) * ( ( MUR + MUM ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.011083365744899572}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / ACS ) ) / DDR ) ) )", "choosing": "Max( ( ( MUR - RRSe ) + ( RMSe + RRSe ) ),( ( ( DS + MLU ) * ( CS - MLU ) ) * Max( ( ( DS / MUC ) / Max( ( ( ( RCSe + RRSe ) / RRSe ) + DS ),MUM ) ),MUM ) ) )", "obj1": 0.9118773946360154, "obj2": 0.041419059540711026}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 0.9770114942528736, "obj2": 0.009284186649740308}, {"determining": "( ( ( AMS / ( Max( RRS,Const ) + ( Const + CRS ) ) ) + AMS ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( Const,RRS ),Min( ( Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / Min( MUC ,MUC ) ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( Min( MUM ,CS ) - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * DDR ) / ( Min( ( PN + FirstVNF_RAM_Server ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server * BR ) ) ) / DDR ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( MUC ,( Max( RMSe,RCSe ) / MLU ) ) ,( CS / CS ) ) ) / ( ( MUC / ( RCSe / RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( CS * MLU ) * ( MUC / MUM ) ) / ( MUR + RCSe ) ) )", "obj1": 0.9252873563218391, "obj2": 0.029794250069530768}, {"determining": "( Min( MRS ,FirstVNF_Mem ) - ( ( ARS * CRS ) / ( Min( ( ACS + FirstVNF_Mem ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( ( MUR * CS ) - RRSe ),( ( Min( Min( MUC ,MUR ) ,RMSe ) / Min( ( ( DS / MUC ) / RRSe ) ,( RCSe - DS ) ) ) * ( MUC - RRSe ) ) ) / MLU )", "obj1": 0.9099616858237548, "obj2": 0.0420109442984921}, {"determining": "( ( PN * ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - ( Min( MDR ,( ( FirstVNF_CPU + RRS ) / FirstVNF_Mem ) ) - Max( AMS,ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUC - MUR ) - Min( MUC ,Min( ( Max( Min( ( RRSe - DS ) ,( MLU - RMSe ) ),DS ) / ( CS * DS ) ) ,( CS * DS ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0005950023982061264}, {"determining": "( ( ( PN / ( Min( ( MDR / MRS ) ,( FirstVNF_CPU / ARS ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( Max( MRS,CRS ) - AMS ) )", "choosing": "( Max( ( RCSe - RRSe ),( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( MUM / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ) / Max( ( ( MUR * ( CS + ( RMSe + MUC ) ) ) - RRSe ),( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10705437249205116}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - ( RRS + FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( ARS * CRS ) / ( DDR / Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_RAM - PN ) + Min( DDR ,BR ) ) ) ) ,Max( FirstVNF_CPU,Min( FirstVNF_RAM ,( DDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RRSe ,( ( RRSe / Max( RRSe,RRSe ) ) * RCSe ) ) / CS ) * MUR ),( ( MUR * RCSe ) - RRSe ) ) / ( ( RRSe - RCSe ) - ( ( MUM + Min( RMSe ,( DS - Min( MUR ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10768261949220766}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * ( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( Max( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( DS + CS ) ),CS ) * ( ( MLU + MUC ) - ( MUM + MUR ) ) )", "obj1": 0.9789272030651341, "obj2": 0.008268674597352936}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( CS * MUR ) - RRSe ) - ( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.7394636015325671, "obj2": 0.1076341606392029}, {"determining": "( ( ( Min( DDR ,AMS ) / ( BR * Min( Max( ( ( FirstVNF_RAM_Server / PN ) - FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * AMS ) ) ) ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,ACS ) ) ) ) ) - ( MDR - ( ( BR + ( Const / FirstVNF_Mem_Server ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MLU + CS ),Max( ( Min( ( RMSe / RMSe ) ,Max( DS,RCSe ) ) * Max( RRSe,CS ) ),Min( MUM ,MUR ) ) )", "obj1": 0.603448275862069, "obj2": 0.2697155565183963}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ,( FirstVNF_CPU / ACS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02294358845695616}, {"determining": "( Max( Const,Min( ACS ,( BR - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Const * ( ( Const - BR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUC - RCSe ) ,( ( Max( RCSe,CS ) + ( RCSe - RMSe ) ) + Max( ( MLU + CS ),Min( MLU ,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / CRS ) ) / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( ( ( ( ( Max( RCSe,MUC ) / MUM ) / CS ) - ( CS + DS ) ) / CS ) * ( RRSe + ( Max( ( ( MLU * Max( MUR,RMSe ) ) * MUR ),RMSe ) / MLU ) ) )", "obj1": 0.9789272030651341, "obj2": 0.008268674597352936}, {"determining": "( ( ( MDR * Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,RRS ) ) / FirstVNF_Mem_Server ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( Max( RMSe,CS ),( MUM / DS ) ) / RMSe ) ) - ( Min( RCSe ,MLU ) - ( MUR - Min( RCSe ,Max( ( ( ( MUC * DS ) + MUC ) * Max( DS,( RMSe + MUC ) ) ),Min( RCSe ,RMSe ) ) ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( CRS ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - ( FirstVNF_RAM + ( RRS / PN ) ) )", "choosing": "Min( ( RMSe - Min( CS ,( ( DS * MUR ) / DS ) ) ) ,Max( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ),( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.011083365744899572}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / FirstVNF_Mem ) ) / ( PN * BR ) ) - ( ARS * FirstVNF_Mem_Server ) ) ) - ( Const + ( PN * ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( ( MUM * MUC ) * ( RCSe * DS ) ) - ( ( RRSe - ( ( ( RMSe + Max( RCSe,RMSe ) ) * ( ( MUR * MUM ) / Max( ( MUR - CS ),MUR ) ) ) - RMSe ) ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,Min( ARS ,DDR ) ) ) * ( MRS * MRS ) ) ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUM ,RCSe ) - ( MLU / ( DS * ( ( ( MUM * DS ) - ( MUR - ( RMSe / RMSe ) ) ) - ( MUR - Max( RRSe,DS ) ) ) ) ) ) / Max( Min( ( RCSe * MUR ) ,( DS - DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) - Min( Min( FirstVNF_CPU ,RRS ) ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( CS + ( Min( ( MUM + ( RCSe - MLU ) ) ,MUR ) * RMSe ) ) + ( Min( RMSe ,Min( DS ,RRSe ) ) * MUC ) ),( MUM * Max( RRSe,Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * ( FirstVNF_CPU / ( ( ARS - MDR ) + AMS ) ) ) ,Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) + Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( CS ,RRSe ) / Max( Min( ( RCSe * MUR ) ,( DS * DS ) ),( Max( RMSe,DS ) * Min( RRSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( DDR + FirstVNF_RAM ) ) - Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( MUR * ( Max( MUR,RCSe ) / ( RRSe + CS ) ) ) ,DS ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUR,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / ( ( ( Max( MLU,MUM ) - ( DS - CS ) ) - Min( ( RRSe * ( Min( RMSe ,MUC ) * ( MLU - DS ) ) ) ,( MLU - MUM ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( DDR ,DDR ) - ( MDR - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( ( ( Max( RCSe,Max( RMSe,MUR ) ) * Min( RMSe ,MUC ) ) / RCSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( Max( ARS,ACS ) ,DDR ) - ( AMS - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( Max( ( ( MUM * MUC ) - Min( MLU ,CS ) ),( ( MLU * DS ) - MUM ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) * ( BR - ( FirstVNF_CPU * BR ) ) )", "choosing": "( ( ( MUM + RRSe ) + MLU ) - ( ( RRSe - DS ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) / ( FirstVNF_CPU_Server * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) / ( Min( ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( DDR + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - MDR ) ,BR ) * ( DDR * ( RRS / ( FirstVNF_RAM / PN ) ) ) ) ) - Max( ( MRS / FirstVNF_RAM ),Min( ( ( AMS + ( Const + Const ) ) * ( Const + MDR ) ) ,BR ) ) )", "choosing": "Min( ( ( RRSe + CS ) * Max( CS,( DS + ( DS - MUR ) ) ) ) ,( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,MDR ) - ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - MDR ) )", "choosing": "Max( Max( ( Max( CS,RRSe ) * Max( Max( Min( MUR ,RCSe ),RCSe ),CS ) ),MLU ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * CRS ),RRS ) / ( FirstVNF_CPU_Server + ( ARS + FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,( MUC * Max( MUC,RRSe ) ) ) + MUR ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Min( AMS ,( Min( DDR ,AMS ) - MDR ) ) )", "choosing": "Max( ( DS + DS ),( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) - ( RRS - ( ( ARS * CRS ) / ( DDR / Min( Min( CRS ,BR ) ,( FirstVNF_CPU / Const ) ) ) ) ) ) - Max( CRS,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( ( MUM / DS ),Max( RMSe,CS ) ) / RMSe ) ) - ( ( MUR - Min( RCSe ,Max( ( ( ( RRSe * DS ) + MUC ) * Max( DS,( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR / MDR ) / FirstVNF_RAM_Server ) ,BR ) - ( MDR - MRS ) )", "choosing": "Max( ( ( ( MUR / ( ( DS / ( MUM - RRSe ) ) / ( CS + RRSe ) ) ) * MUC ) + DS ),Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - BR ) - ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( MUC - MUR ) * ( MUM / ( MUR + ( ( MUM - MUC ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,( FirstVNF_Mem - FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( Const + ( Min( FirstVNF_Mem ,MRS ) + ( ( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) ) - ( ( ARS + CRS ) * Const ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - BR ) * ( BR - ( AMS / ( FirstVNF_Mem - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) - Max( ( ( BR / FirstVNF_Mem_Server ) + AMS ),( Const + FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( RRSe * RRSe ),Min( RMSe ,( MUR / Min( Max( RRSe,( CS - RCSe ) ) ,( MUC / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * ( BR + FirstVNF_CPU_Server ) ) - ( Const + MRS ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUM - ( DS * MUR ) ) - ( ( MUR - Min( ( ( MLU + MLU ) + CS ) ,Max( Min( RCSe ,RMSe ),( ( Min( RRSe ,CS ) + MUC ) * ( DS * ( RMSe / MUR ) ) ) ) ) ) - Min( MLU ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - MRS ) ,( ( FirstVNF_RAM + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,Max( ( RCSe / DS ),Max( MUC,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( ARS * ( ( ( Const / Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ARS ),MDR ) ) - ARS ) / CRS ) ) - ( DDR / ( ( FirstVNF_Mem_Server - MDR ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * MLU ) + ( DS - DS ) )", "obj1": 0.6590038314176245, "obj2": 0.178491082402923}, {"determining": "( ( FirstVNF_RAM_Server * CRS ) - ( MDR - ( ( ( AMS - Const ) * CRS ) / Min( Min( CRS ,BR ) ,( MDR / ( MRS * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Max( ( ( Min( ( ( ( RRSe - ( RMSe + MUM ) ) / ( CS * MUR ) ) - DS ) ,( CS * MUR ) ) + ( RMSe / Max( ( MUM / DS ),Max( RMSe,CS ) ) ) ) - MUR ),( MUM - MLU ) )", "obj1": 0.6436781609195402, "obj2": 0.23988571233558614}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * Max( CRS,( FirstVNF_Mem_Server + ACS ) ) ) - ( DDR / RRS ) )", "choosing": "( ( Max( ( RCSe / DS ),Max( RMSe,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( MUC ,MUM ) ) ) / CS ) - ( MLU / MUM ) ) ) ) + ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.7088122605363985, "obj2": 0.12415267226142053}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( FirstVNF_CPU_Server - ( MDR * ( ( DDR + ( MRS - RRS ) ) - ( MDR - ( MDR - ( AMS * BR ) ) ) ) ) )", "choosing": "Max( ( MLU * MUR ),Min( MUM ,Max( Min( CS ,( ( ( RCSe + ( RRSe - MLU ) ) / MUM ) * ( Max( ( DS / CS ),Max( RCSe,DS ) ) / ( MUR - Min( RCSe ,MLU ) ) ) ) ),DS ) ) )", "obj1": 0.8793103448275862, "obj2": 0.05301691831249107}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( ( ( PN * ACS ) * FirstVNF_RAM ) - ( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / MLU ),Max( MUR,MUC ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / Min( MUM ,RMSe ) ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.1278763735059606}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * Max( MUC,RRSe ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06067385417819833}, {"determining": "( ( ( PN + ( Min( DDR ,FirstVNF_CPU_Server ) - ( Max( RRS,( DDR + DDR ) ) * ( RRS * ( FirstVNF_CPU + ( FirstVNF_CPU + PN ) ) ) ) ) ) * ( PN * AMS ) ) - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( ( MUR * ( MLU - Max( ( CS + MUC ),( MUC - MUR ) ) ) ) + MUR ) / MUR ) ) )", "obj1": 0.7662835249042146, "obj2": 0.0984690651236629}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( ( ( ( FirstVNF_Mem / PN ) * DDR ) - ARS ) + MRS ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( Max( MUM,RCSe ) + Min( MUR ,RRSe ) ) + Max( Min( MLU ,RRSe ),( CS * ( MUR - DS ) ) ) ) )", "obj1": 0.8237547892720306, "obj2": 0.07469022345578966}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( PN - ( ( Min( ( Const + Max( MDR,MDR ) ) ,ACS ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) * Max( Min( ( Max( ( MLU * ( Min( MUM ,RRSe ) + Max( CS,RCSe ) ) ),DS ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) )", "obj1": 0.7911877394636015, "obj2": 0.09058619436394133}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( ( ( PN / ( Min( DDR ,( ARS * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( Max( DS,MUR ) - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.054793439817137767}, {"determining": "( ( Min( ( MRS - ( ( FirstVNF_Mem_Server / ACS ) * FirstVNF_CPU ) ) ,ACS ) * ( ACS / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ARS - CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,Min( ( CS + MLU ) ,MUR ) ) ) * ( MUM / MUM ) ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( RRSe / ( RCSe * ( MLU - DS ) ) ) + CS ) ) ),Min( ( RCSe - RRSe ) ,RCSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06192611889944147}, {"determining": "( ( PN * ( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( DDR / RRS ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Min( ( RMSe / RMSe ) ,Max( ( RCSe / DS ),Max( MUC,MUR ) ) ) )", "obj1": 0.9061302681992337, "obj2": 0.04114604647291802}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( RMSe,RCSe ) - ( MUM / Min( ( Min( CS ,MUR ) / ( Min( ( ( RRSe - MLU ) - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) )", "obj1": 0.7969348659003831, "obj2": 0.08494484545803478}, {"determining": "( ( ( MDR * Min( ( ( FirstVNF_Mem + ACS ) * Max( ARS,MRS ) ) ,( RRS + Const ) ) ) - ( AMS + ACS ) ) * ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / DDR ) ) / DDR ) ) ) / ( FirstVNF_RAM - RRS ) ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / ( ( ( MUR * ( MUR / MUC ) ) + MUR ) - ( ( RRSe * ( ( CS - MUC ) / CS ) ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.8908045977011494, "obj2": 0.04873432743178363}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( DDR / RRS ) * ( MRS - Min( DDR ,( PN - CRS ) ) ) )", "choosing": "( ( RMSe / MLU ) * Min( Max( CS,( ( MLU - Min( MUC ,MUM ) ) / Min( ( Min( DS ,DS ) / ( ( MUM - MLU ) + ( MLU + MLU ) ) ) ,RRSe ) ) ) ,RCSe ) )", "obj1": 0.8984674329501916, "obj2": 0.04541680735925762}, {"determining": "( ( ( ( FirstVNF_RAM_Server / AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - Max( Min( FirstVNF_RAM ,Max( ( CRS - DDR ),RRS ) ),( Min( ARS ,CRS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( MLU + Min( ( DS + Min( DS ,( ( RCSe * RRSe ) * RCSe ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUC + RRSe ) ) ) ) ) ) ,( MLU + MLU ) ) )", "obj1": 0.632183908045977, "obj2": 0.244183819194417}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( RCSe * RRSe ),( Max( MUC,MUC ) / ( DS - MUM ) ) ) - RRSe )", "obj1": 0.8122605363984674, "obj2": 0.0840440891573264}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( Min( Min( Const ,FirstVNF_RAM ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( ( Max( MDR,MRS ) * ( Const - FirstVNF_RAM_Server ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( DS * ( RRSe / MUC ) ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( CS ,CS ) ) + Max( ( CS * MLU ),Min( MLU ,RRSe ) ) ) )", "obj1": 0.9693486590038314, "obj2": 0.01163136178849157}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( MLU + RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MLU - MUM ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09416580839971138}, {"determining": "( ( ( ( Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) / DDR ) - ( FirstVNF_Mem * RRS ) ) * PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe + ( MLU * DS ) ) * Min( ( RMSe / MUR ) ,Min( DS ,DS ) ) )", "obj1": 0.8180076628352491, "obj2": 0.07918991785655563}, {"determining": "( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,ARS ) ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( MUR - MLU ) ) * Max( Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,DS ),( CS / RMSe ) ) )", "obj1": 0.6283524904214559, "obj2": 0.24884824936832975}, {"determining": "( Max( MRS,( ( RRS / Const ) - ACS ) ) * ( ( ( RRS * Const ) * Max( Max( MDR,FirstVNF_RAM ),AMS ) ) + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) * ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( ( ( MLU * CS ) + DS ) + ( MUR - Max( DS,RCSe ) ) ) - ( MUR - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.25364511381513893}, {"determining": "( ( ( ( ACS + Const ) / Min( DDR ,AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( ( ( ARS / CRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - ( ( ACS / RRS ) + MDR ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),MLU ) )", "obj1": 0.6091954022988506, "obj2": 0.26211943262807524}, {"determining": "( ( ( RRS * Min( FirstVNF_RAM_Server ,RRS ) ) * ( AMS * PN ) ) - ( ( FirstVNF_RAM * CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RCSe ,( ( CS / Max( ( MUC / ( RRSe - RMSe ) ),RRSe ) ) * RCSe ) ) * Min( RCSe ,MUR ) ) * Max( MLU,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09538539851668557}, {"determining": "( ( ( BR / ( Const * DDR ) ) / ( Min( Const ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_RAM ,DDR ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Const )", "choosing": "Max( DS,( RRSe + ( DS / Min( MUC ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( PN * ( ( Min( ACS ,( Const + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( Min( ( Max( ( MLU * MUM ),DS ) / ( CS * DS ) ) ,Min( ( RRSe * RRSe ) ,MLU ) ),Min( MUM ,MUM ) ) * Min( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) ,( DS + RCSe ) ) )", "obj1": 0.8045977011494253, "obj2": 0.08417265567009614}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( DS + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( RMSe + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.9482758620689655, "obj2": 0.01704966707680742}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / DDR ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( ( MRS + ACS ) * Max( ARS,MRS ) ) ,Max( ACS,FirstVNF_Mem ) ) ) - MRS ) )", "choosing": "Min( Min( ( Max( MLU,( ( DS - ( ( RCSe + CS ) - Min( MUC ,RRSe ) ) ) - RCSe ) ) * ( ( MUM + MUR ) * CS ) ) ,( ( MUM / RRSe ) - Min( RMSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + ( ( MLU + RRSe ) * ( CS * MLU ) ) ) )", "obj1": 0.9137931034482759, "obj2": 0.03907566846795993}, {"determining": "( Min( Min( Const ,FirstVNF_RAM ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( ( Max( MDR,MRS ) * ( Const - FirstVNF_RAM_Server ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( DS * ( RRSe / MUC ) ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( CS ,CS ) ) + Max( ( CS * MLU ),Min( MLU ,RRSe ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02294358845695616}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * ( AMS * Const ) ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,Max( MLU,CS ) ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / ( RCSe / DS ) ) )", "obj1": 0.7471264367816092, "obj2": 0.10431811036909899}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Min( ( ( ( RMSe / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9291187739463601, "obj2": 0.026675589800175495}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,BR ) ) - ( ( FirstVNF_CPU + RRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU * ( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - ( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( ( ACS * ( Const + BR ) ),( ACS * Const ) ) ) ) * ( FirstVNF_RAM - MRS ) ) )", "choosing": "Max( Min( MLU ,( MUC + RRSe ) ),( ( ( MUC / DS ) - ( MUC / RMSe ) ) + ( ( ( Min( DS ,MUC ) / CS ) * ( ( MLU - CS ) + ( Min( ( RRSe / RCSe ) ,MUC ) * DS ) ) ) - MUM ) ) )", "obj1": 0.9636015325670498, "obj2": 0.015147343594167653}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / DDR ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( ( MRS + ACS ) * Max( ARS,MRS ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( Max( MLU,Min( MUM ,MUM ) ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) ) ) )", "obj1": 0.89272030651341, "obj2": 0.04660890238507885}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( ACS * MRS ) - ( ( ARS * CRS ) / ( ( Const - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) / DDR ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( MLU + RMSe ) ) ) + ( Max( Max( RCSe,DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MLU - MUM ) / CS ) - ( ( Min( RRSe ,CS ) / DS ) / MUM ) ) ) ) )", "obj1": 0.9195402298850575, "obj2": 0.03560003065834095}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( FirstVNF_Mem_Server + ( ( FirstVNF_Mem_Server / CRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( MLU - RRSe ),RRSe ) / Max( ( Min( RRSe ,MLU ) + CS ),( ( CS + CS ) * ( MUR / CS ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.009145813855988397}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.8218390804597702, "obj2": 0.07736613454388273}, {"determining": "( ( RRS - MRS ) - ( ( ARS * CRS ) / ( ( ACS + Const ) / ( ARS + ( FirstVNF_CPU / ARS ) ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,( Max( CS,( ( MUC - MUM ) - ( RMSe * MLU ) ) ) * MUM ) ) - ( MUC * RMSe ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RMSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.054793439817137767}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * MRS ) / ( Min( ACS ,( ( FirstVNF_CPU_Server * ARS ) / FirstVNF_CPU ) ) / DDR ) ) )", "choosing": "( ( Max( MUC,( RCSe + ( Max( ( RMSe / ( MLU + MUM ) ),( DS - MUC ) ) / RCSe ) ) ) - DS ) / Max( ( Max( Max( ( CS - MLU ),Max( MLU,( Min( DS ,CS ) * Min( CS ,CS ) ) ) ),MUR ) * ( Max( ( RMSe - Max( CS,MUM ) ),( RRSe - Max( DS,RRSe ) ) ) * ( Min( DS ,Max( CS,MUC ) ) - RMSe ) ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 0.9176245210727969, "obj2": 0.0381768309564265}, {"determining": "( ( ( AMS / ( Max( RRS,Const ) + ( Const + CRS ) ) ) + AMS ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( Const,RRS ),Min( ( Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / Min( MUC ,MUC ) ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( Min( MUM ,CS ) - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24497932868220526}, {"determining": "( ( FirstVNF_RAM - ( ARS - ( MDR * ( ( ARS / AMS ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU + Max( MDR,AMS ) ) ) ) ) ) ) / ( BR / ( ( RRS - CRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUR ,( MUC * ( MUM * ( ( CS - MUR ) / RCSe ) ) ) ) - RCSe ) - Max( MLU,MUM ) )", "obj1": 0.60727969348659, "obj2": 0.265158671096573}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( PN * ( ( Min( ACS ,( Const + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) / ( AMS - ( MRS - DDR ) ) ) - ( FirstVNF_Mem * ( Min( ( ACS + FirstVNF_Mem ) ,( ARS / FirstVNF_CPU ) ) / DDR ) ) ) ) - ( Const / MRS ) )", "choosing": "( Max( Min( ( Max( ( MLU * MUM ),DS ) / ( CS * DS ) ) ,Min( ( RRSe * RRSe ) ,MLU ) ),Min( MUM ,MUM ) ) * Min( ( ( Min( Min( MUC ,MUR ) ,RMSe ) / Min( ( ( ( MLU - MUR ) / MUM ) / RRSe ) ,( RCSe - DS ) ) ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) ,( DS + RCSe ) ) )", "obj1": 0.921455938697318, "obj2": 0.03230081516205744}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7432950191570882, "obj2": 0.10632516232713152}, {"determining": "( ( Const + Max( ( MRS - FirstVNF_CPU ),FirstVNF_RAM_Server ) ) - ( Min( CRS ,ARS ) - ( ( Min( ACS ,( Min( PN ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) / ARS ) ) * ACS ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe * DS ) / ( MUM * MUC ) ) - ( ( Min( MUR ,MUC ) + MLU ) - ( RMSe + ( MLU * MUC ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.007380911964598459}, {"determining": "( Max( PN,( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,MDR ) + ( BR * ( AMS - FirstVNF_Mem_Server ) ) ) - ( Min( ACS ,( Max( DDR,ARS ) / FirstVNF_RAM ) ) / ( AMS / MDR ) ) ) ) - ( ARS + ARS ) )", "choosing": "( ( CS - RCSe ) - Max( RRSe,Max( Max( RCSe,MUC ),( ( DS * Min( DS ,( RMSe - ( MLU / MLU ) ) ) ) - RRSe ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.09479477959911128}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - ( Max( ( RMSe - ( ( MLU + RRSe ) * ( RCSe - RRSe ) ) ),RMSe ) - RMSe ) ) / Max( RMSe,RMSe ) ) )", "obj1": 0.9827586206896551, "obj2": 0.007380911964598459}, {"determining": "( Max( ( PN / FirstVNF_RAM ),FirstVNF_Mem ) - ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,( Min( CS ,CS ) / ( MUM / MLU ) ) ) ) / CS ) - ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) - ( CS / CS ) ) ) / ( ( Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) + RRSe ) * Min( MLU ,RMSe ) ) ) / Min( Min( RCSe ,MUM ) ,MUR ) )", "obj1": 0.9272030651340997, "obj2": 0.02925872671857499}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.603448275862069, "obj2": 0.2697155565183963}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003388263960737056}, {"determining": "( ( FirstVNF_RAM * ( Min( FirstVNF_CPU_Server ,PN ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( RCSe / MLU ) - Max( ( RRSe * RRSe ),( ( MUR * CS ) / MUC ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003388263960737056}, {"determining": "( ( ( RRS - ( MRS / CRS ) ) / BR ) * ( FirstVNF_RAM + Max( Max( Const,RRS ),Min( ( Min( Max( Max( DDR,BR ),Min( PN ,MRS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( ( RRSe * RRSe ) / Min( MUR ,MUC ) ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + Max( RRSe,DS ) ) * ( Max( Min( CS ,CS ),( CS * CS ) ) - ( Min( MUR ,MUM ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( Min( MUM ,CS ) - Max( ( MLU / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / Max( ARS,RRS ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031377048761481216}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * DDR ) / ( Min( ( PN + FirstVNF_RAM_Server ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server * BR ) ) ) / DDR ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( MUC ,( Max( RMSe,RCSe ) / MLU ) ) ,( CS / CS ) ) ) / ( ( MUC / ( RCSe / RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( CS * MLU ) * ( MUC / MUM ) ) / ( MUR + RCSe ) ) )", "obj1": 0.9252873563218391, "obj2": 0.029794250069530768}, {"determining": "( ( Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) ) - Max( Max( AMS,FirstVNF_Mem ),FirstVNF_Mem ) )", "choosing": "( Max( ( MLU * MUR ),( CS / MUM ) ) + ( Max( MUM,Max( ( MLU * MUM ),DS ) ) / Max( ( CS - RCSe ),( MUR - MUR ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.26660572008838096}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( MUM * ( RRSe / ( MUM / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ) ) - Max( RMSe,RCSe ) )", "obj1": 0.9597701149425287, "obj2": 0.015400501631621492}, {"determining": "( ( PN * ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - ( Min( MDR ,( ( FirstVNF_CPU + RRS ) / FirstVNF_Mem ) ) - Max( AMS,ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUC - MUR ) - Min( MUC ,Min( ( Max( Min( ( RRSe - DS ) ,( MLU - RMSe ) ),DS ) / ( CS * DS ) ) ,( CS * DS ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0005950023982061264}, {"determining": "( ( ( PN / ( Min( ( MDR / MRS ) ,( FirstVNF_CPU / ARS ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( Max( MRS,CRS ) - AMS ) )", "choosing": "( Max( ( RCSe - RRSe ),( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( MUM / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ) / Max( ( ( MUR * ( CS + ( RMSe + MUC ) ) ) - RRSe ),( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10705437249205116}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * ( DDR + AMS ) ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - Min( MUM ,Max( Min( CS ,MLU ),DS ) ) ) / Max( RMSe,RMSe ) ) )", "obj1": 0.9923371647509579, "obj2": 0.00335990671736347}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - ( RRS + FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( ARS * CRS ) / ( DDR / Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_RAM - PN ) + Min( DDR ,BR ) ) ) ) ,Max( FirstVNF_CPU,Min( FirstVNF_RAM ,( DDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RRSe ,( ( RRSe / Max( RRSe,RRSe ) ) * RCSe ) ) / CS ) * MUR ),( ( MUR * RCSe ) - RRSe ) ) / ( ( RRSe - RCSe ) - ( ( MUM + Min( RMSe ,( DS - Min( MUR ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10768261949220766}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( MLU,Min( MUM ,RRSe ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) )", "obj1": 0.9770114942528736, "obj2": 0.008347582809778101}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( CS * MUR ) - RRSe ) - ( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.7394636015325671, "obj2": 0.1076341606392029}, {"determining": "( ( ( Min( DDR ,AMS ) / ( BR * Min( Max( ( ( FirstVNF_RAM_Server / PN ) - FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * AMS ) ) ) ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,ACS ) ) ) ) ) - ( MDR - ( ( BR + ( Const / FirstVNF_Mem_Server ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MLU + CS ),Max( ( Min( ( RMSe / RMSe ) ,Max( DS,RCSe ) ) * Max( RRSe,CS ) ),Min( MUM ,MUR ) ) )", "obj1": 0.603448275862069, "obj2": 0.2697155565183963}, {"determining": "( ( ( ( AMS / ARS ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( DDR * MDR ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( ( MLU * MUR ),Min( MUM ,CS ) ) + ( Max( MUM,( ( DS - CS ) * RCSe ) ) / Max( ( Min( RCSe ,MUC ) - RCSe ),( Min( ( RCSe + MUC ) ,( Max( RCSe,MUM ) + MUM ) ) - MUR ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.26660572008838096}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / CRS ) ) / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( ( ( ( ( Max( RCSe,MUC ) / MUM ) / CS ) - ( CS + DS ) ) / CS ) * ( RRSe + ( Max( ( ( MLU * Max( MUR,RMSe ) ) * MUR ),RMSe ) / MLU ) ) )", "obj1": 0.9789272030651341, "obj2": 0.008268674597352936}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ,( FirstVNF_CPU / ACS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02294358845695616}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Const + MRS ) )", "choosing": "( ( MUM - ( DS * MUR ) ) - ( ( MUR - Min( RCSe ,Max( ( ( Min( RRSe ,CS ) + MUC ) * ( DS * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) ) - Min( MLU ,RCSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0022121057546380667}, {"determining": "( Max( Const,Min( ACS ,( BR - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Const * ( ( Const - BR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUC - RCSe ) ,( ( Max( RCSe,CS ) + ( RCSe - RMSe ) ) + Max( ( MLU + CS ),Min( MLU ,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * ( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( Max( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( DS + CS ) ),CS ) * ( ( MLU + MUC ) - ( MUM + MUR ) ) )", "obj1": 0.9789272030651341, "obj2": 0.008268674597352936}, {"determining": "( ( ( MDR * Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,RRS ) ) / FirstVNF_Mem_Server ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( Max( RMSe,CS ),( MUM / DS ) ) / RMSe ) ) - ( Min( RCSe ,MLU ) - ( MUR - Min( RCSe ,Max( ( ( ( MUC * DS ) + MUC ) * Max( DS,( RMSe + MUC ) ) ),Min( RCSe ,RMSe ) ) ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "( ( ( Const + FirstVNF_Mem_Server ) + ( Min( ARS ,CRS ) * Min( RRS ,MRS ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUM - ( DS * MUR ) ) - ( ( MUR - Min( RCSe ,( Min( Min( ( CS / CS ) ,( RMSe + MUC ) ) ,Min( ( MUM + MLU ) ,( RRSe / MUC ) ) ) / MUM ) ) ) - Min( MLU ,RCSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0022121057546380667}, {"determining": "( Min( ( Max( AMS,Min( ACS ,FirstVNF_Mem ) ) - ( ( ( FirstVNF_CPU + MRS ) + FirstVNF_CPU_Server ) / MRS ) ) ,BR ) - Max( MDR,MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,DS ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / ( ( ( Max( ( RRSe * CS ),MUM ) - ( DS - CS ) ) - Min( ( RRSe * ( Min( RMSe ,MUC ) * ( MLU - DS ) ) ) ,( MLU - MUM ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / FirstVNF_Mem ) ) / ( PN * BR ) ) - ( ARS * FirstVNF_Mem_Server ) ) ) - ( Const + ( PN * ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( ( MUM * MUC ) * ( RCSe * DS ) ) - ( ( RRSe - ( ( ( RMSe + Max( RCSe,RMSe ) ) * ( ( MUR * MUM ) / Max( ( MUR - CS ),MUR ) ) ) - RMSe ) ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,Min( ARS ,DDR ) ) ) * ( MRS * MRS ) ) ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUM ,RCSe ) - ( MLU / ( DS * ( ( ( MUM * DS ) - ( MUR - ( RMSe / RMSe ) ) ) - ( MUR - Max( RRSe,DS ) ) ) ) ) ) / Max( Min( ( RCSe * MUR ) ,( DS - DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) - Min( Min( FirstVNF_CPU ,RRS ) ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( CS + ( Min( ( MUM + ( RCSe - MLU ) ) ,MUR ) * RMSe ) ) + ( Min( RMSe ,Min( DS ,RRSe ) ) * MUC ) ),( MUM * Max( RRSe,Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( Const,MDR ) ) * ( FirstVNF_CPU / ( ( ARS - MDR ) + AMS ) ) ) ,Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) + Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( CS ,RRSe ) / Max( Min( ( RCSe * MUR ) ,( DS * DS ) ),( Max( RMSe,DS ) * Min( RRSe ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( DDR + FirstVNF_RAM ) ) - Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( MUR * ( Max( MUR,RCSe ) / ( RRSe + CS ) ) ) ,DS ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUR,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / ( ( ( Max( MLU,MUM ) - ( DS - CS ) ) - Min( ( RRSe * ( Min( RMSe ,MUC ) * ( MLU - DS ) ) ) ,( MLU - MUM ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( DDR ,DDR ) - ( MDR - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( ( ( Max( RCSe,Max( RMSe,MUR ) ) * Min( RMSe ,MUC ) ) / RCSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MRS ) - ( MDR * ( Min( Max( ARS,ACS ) ,DDR ) - ( AMS - ( ( ( Const - AMS ) * CRS ) / RRS ) ) ) ) )", "choosing": "Max( MLU,( Max( ( ( MUM * MUC ) - Min( MLU ,CS ) ),( ( MLU * DS ) - MUM ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) * ( BR - ( FirstVNF_CPU * BR ) ) )", "choosing": "( ( ( MUM + RRSe ) + MLU ) - ( ( RRSe - DS ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,DDR ) / ( FirstVNF_CPU_Server * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) / ( Min( ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( DDR + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - MDR ) ,BR ) * ( DDR * ( RRS / ( FirstVNF_RAM / PN ) ) ) ) ) - Max( ( MRS / FirstVNF_RAM ),Min( ( ( AMS + ( Const + Const ) ) * ( Const + MDR ) ) ,BR ) ) )", "choosing": "Min( ( ( RRSe + CS ) * Max( CS,( DS + ( DS - MUR ) ) ) ) ,( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,MDR ) - ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - MDR ) )", "choosing": "Max( Max( ( Max( CS,RRSe ) * Max( Max( Min( MUR ,RCSe ),RCSe ),CS ) ),MLU ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * CRS ),RRS ) / ( FirstVNF_CPU_Server + ( ARS + FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,( MUC * Max( MUC,RRSe ) ) ) + MUR ) + Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * ( BR + FirstVNF_CPU_Server ) ) - ( Const + MRS ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUM - ( DS * MUR ) ) - ( ( MUR - Min( ( ( MLU + MLU ) + CS ) ,Max( Min( RCSe ,RMSe ),( ( Min( RRSe ,CS ) + MUC ) * ( DS * ( RMSe / MUR ) ) ) ) ) ) - Min( MLU ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( ARS * ( ( ( Const / Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ARS ),MDR ) ) - ARS ) / CRS ) ) - ( DDR / ( ( FirstVNF_Mem_Server - MDR ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * MLU ) + ( DS - DS ) )", "obj1": 0.6590038314176245, "obj2": 0.178491082402923}, {"determining": "( ( ( Min( DDR ,DDR ) / ( ACS * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) - ( Min( ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - MDR ) ,BR ) * ( DDR * ( RRS / ( PN / FirstVNF_RAM ) ) ) ) ) - Max( ( FirstVNF_RAM / ( ( Const - MRS ) / CRS ) ),Min( ( ( AMS + ( FirstVNF_Mem - DDR ) ) * ( Const + MDR ) ) ,BR ) ) )", "choosing": "Min( ( ( Min( ( ( RMSe - ( RRSe * MUR ) ) * DS ) ,( MUR + RRSe ) ) + CS ) + MUM ) ,( RMSe / MUC ) )", "obj1": 0.6513409961685823, "obj2": 0.213748908315404}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( FirstVNF_RAM_Server * CRS ) - ( MDR - ( ( ( AMS - Const ) * CRS ) / Min( Min( CRS ,BR ) ,( MDR / ( MRS * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Max( ( ( Min( ( ( ( RRSe - ( RMSe + MUM ) ) / ( CS * MUR ) ) - DS ) ,( CS * MUR ) ) + ( RMSe / Max( ( MUM / DS ),Max( RMSe,CS ) ) ) ) - MUR ),( MUM - MLU ) )", "obj1": 0.6436781609195402, "obj2": 0.23988571233558614}, {"determining": "( ( ( ARS / ( Min( ( AMS * FirstVNF_CPU ) ,Const ) / ( Const / FirstVNF_RAM ) ) ) * ( AMS * RRS ) ) - ( ( MRS + AMS ) + FirstVNF_Mem ) )", "choosing": "( ( MUC * CS ) * ( Min( Min( RRSe ,CS ) ,MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.7164750957854407, "obj2": 0.11813242538030118}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( FirstVNF_CPU - ( ACS - ( Const - ( MRS * FirstVNF_Mem ) ) ) ) - ( MRS - Min( ( ( AMS - FirstVNF_RAM ) - ARS ) ,ACS ) ) )", "choosing": "( ( MUM - ( DS * ( CS - MUR ) ) ) - ( ( Min( RCSe ,Max( ( ( Min( RRSe ,CS ) + MUC ) * ( RCSe * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) - MUR ) - Min( Min( Max( Max( DS,DS ),Max( RRSe,( MUM + ( MLU / MLU ) ) ) ) ,MLU ) ,RRSe ) ) )", "obj1": 0.9061302681992337, "obj2": 0.03810099920863667}, {"determining": "( ( ( PN * ACS ) * FirstVNF_RAM ) - ( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / MLU ),Max( MUR,MUC ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / Min( MUM ,RMSe ) ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.1278763735059606}, {"determining": "( ( ( PN + ( Min( DDR ,FirstVNF_CPU_Server ) - ( Max( RRS,( DDR + DDR ) ) * ( RRS * ( FirstVNF_CPU + ( FirstVNF_CPU + PN ) ) ) ) ) ) * ( PN * AMS ) ) - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( ( MUR * ( MLU - Max( ( CS + MUC ),( MUC - MUR ) ) ) ) + MUR ) / MUR ) ) )", "obj1": 0.7662835249042146, "obj2": 0.0984690651236629}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * Max( CRS,( FirstVNF_Mem_Server + ACS ) ) ) - ( DDR / RRS ) )", "choosing": "( ( Max( ( RCSe / DS ),Max( RMSe,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( MUC ,MUM ) ) ) / CS ) - ( MLU / MUM ) ) ) ) + ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.7088122605363985, "obj2": 0.12415267226142053}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( FirstVNF_CPU_Server - ( MDR * ( ( DDR + ( MRS - RRS ) ) - ( MDR - ( MDR - ( AMS * BR ) ) ) ) ) )", "choosing": "Max( ( MLU * MUR ),Min( MUM ,Max( Min( CS ,( ( ( RCSe + ( RRSe - MLU ) ) / MUM ) * ( Max( ( DS / CS ),Max( RCSe,DS ) ) / ( MUR - Min( RCSe ,MLU ) ) ) ) ),DS ) ) )", "obj1": 0.8793103448275862, "obj2": 0.05301691831249107}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( ( DDR / RRS ) * ( MRS - Min( DDR ,( PN - CRS ) ) ) )", "choosing": "( ( RMSe / MLU ) * Min( Max( CS,( ( MLU - Min( MUC ,MUM ) ) / Min( ( Min( DS ,DS ) / ( ( MUM - MLU ) + ( MLU + MLU ) ) ) ,RRSe ) ) ) ,RCSe ) )", "obj1": 0.8984674329501916, "obj2": 0.04541680735925762}, {"determining": "( ( Min( ( MRS - ( ( FirstVNF_Mem_Server / ACS ) * FirstVNF_CPU ) ) ,ACS ) * ( ACS / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ARS - CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,Min( ( CS + MLU ) ,MUR ) ) ) * ( MUM / MUM ) ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( RRSe / ( RCSe * ( MLU - DS ) ) ) + CS ) ) ),Min( ( RCSe - RRSe ) ,RCSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06192611889944147}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * Max( MUC,RRSe ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06067385417819833}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( PN * ( ( Min( ( FirstVNF_CPU / ARS ) ,MDR ) / DDR ) - ( ( FirstVNF_RAM * DDR ) * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( Max( MUM,RCSe ) + Min( CS ,MUR ) ) + Max( Min( ( ( MLU - DS ) / MUC ) ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.8295019157088123, "obj2": 0.07269090424136221}, {"determining": "( ( ACS * MRS ) - ( ( ARS * CRS ) / ( ( Const - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) / DDR ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( MLU + RMSe ) ) ) + ( Max( Max( RCSe,DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MLU - MUM ) / CS ) - ( ( Min( RRSe ,CS ) / DS ) / MUM ) ) ) ) )", "obj1": 0.9195402298850575, "obj2": 0.03560003065834095}, {"determining": "( ( ( MDR * Min( ( ( FirstVNF_Mem + ACS ) * Max( ARS,MRS ) ) ,( RRS + Const ) ) ) - ( AMS + ACS ) ) * ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / DDR ) ) / DDR ) ) ) / ( FirstVNF_RAM - RRS ) ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / ( ( ( MUR * ( MUR / MUC ) ) + MUR ) - ( ( RRSe * ( ( CS - MUC ) / CS ) ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.8908045977011494, "obj2": 0.04873432743178363}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( ( ( FirstVNF_RAM_Server / AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - Max( Min( FirstVNF_RAM ,Max( ( CRS - DDR ),RRS ) ),( Min( ARS ,CRS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( MLU + Min( ( DS + Min( DS ,( ( RCSe * RRSe ) * RCSe ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUC + RRSe ) ) ) ) ) ) ,( MLU + MLU ) ) )", "obj1": 0.632183908045977, "obj2": 0.244183819194417}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( RCSe * RRSe ),( Max( MUC,MUC ) / ( DS - MUM ) ) ) - RRSe )", "obj1": 0.8122605363984674, "obj2": 0.0840440891573264}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( Max( PN,( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( MRS * FirstVNF_Mem_Server ) / ARS ) )", "choosing": "( ( Max( MUC,( RCSe + ( Max( ( RMSe / ( MLU + MUM ) ),( DS - MUC ) ) / RCSe ) ) ) - DS ) / Max( ( Max( Max( ( MLU - CS ),Max( MLU,( Min( DS ,CS ) - Min( RRSe ,CS ) ) ) ),MUR ) * ( Max( ( RMSe - Max( CS,MUM ) ),( RRSe - Max( DS,RRSe ) ) ) * ( Min( DS ,Max( CS,MUC ) ) - RMSe ) ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 0.8697318007662835, "obj2": 0.054461537115459056}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( MLU + RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MLU - MUM ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09416580839971138}, {"determining": "( ( ( ( Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) / DDR ) - ( FirstVNF_Mem * RRS ) ) * PN ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe + ( MLU * DS ) ) * Min( ( RMSe / MUR ) ,Min( DS ,DS ) ) )", "obj1": 0.8180076628352491, "obj2": 0.07918991785655563}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU * ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),Min( Max( Min( ( ( MUC * ( RRSe / RMSe ) ) - RRSe ) ,( RRSe + Min( RCSe ,MUR ) ) ),RMSe ) ,( CS + CS ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,ARS ) ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( MUR - MLU ) ) * Max( Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,DS ),( CS / RMSe ) ) )", "obj1": 0.6283524904214559, "obj2": 0.24884824936832975}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( Max( RMSe,MUC ) * Min( MLU ,RRSe ) ) )", "obj1": 0.8582375478927203, "obj2": 0.05659187892653742}, {"determining": "( ( PN - ( ( Min( ( Const + Max( MDR,MDR ) ) ,ACS ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) * Max( Min( ( Max( ( MLU * ( Min( MUM ,RRSe ) + Max( CS,RCSe ) ) ),DS ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) )", "obj1": 0.7911877394636015, "obj2": 0.09058619436394133}, {"determining": "( Max( MRS,( ( RRS / Const ) - ACS ) ) * ( ( ( RRS * Const ) * Max( Max( MDR,FirstVNF_RAM ),AMS ) ) + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) * ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( ( ( MLU * CS ) + DS ) + ( MUR - Max( DS,RCSe ) ) ) - ( MUR - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.25364511381513893}, {"determining": "( ( ( ( ACS + Const ) / Min( DDR ,AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( ( ( ARS / CRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - ( ( ACS / RRS ) + MDR ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),MLU ) )", "obj1": 0.6091954022988506, "obj2": 0.26211943262807524}, {"determining": "( ( ( RRS * Min( FirstVNF_RAM_Server ,RRS ) ) * ( AMS * PN ) ) - ( ( FirstVNF_RAM * CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RCSe ,( ( CS / Max( ( MUC / ( RRSe - RMSe ) ),RRSe ) ) * RCSe ) ) * Min( RCSe ,MUR ) ) * Max( MLU,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09538539851668557}, {"determining": "( ( ( BR / ( Const * DDR ) ) / ( Min( Const ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_RAM ,DDR ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Const )", "choosing": "Max( DS,( RRSe + ( DS / Min( MUC ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( PN * ( ( Min( ACS ,( Const + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( Min( ( Max( ( MLU * MUM ),DS ) / ( CS * DS ) ) ,Min( ( RRSe * RRSe ) ,MLU ) ),Min( MUM ,MUM ) ) * Min( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) ,( DS + RCSe ) ) )", "obj1": 0.8045977011494253, "obj2": 0.08417265567009614}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( DS + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( RMSe + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.9482758620689655, "obj2": 0.01704966707680742}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( RMSe,RCSe ) - ( MUM / Min( ( Min( CS ,MUR ) / ( Min( ( ( RRSe - MLU ) - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) )", "obj1": 0.7969348659003831, "obj2": 0.08494484545803478}, {"determining": "( Min( Min( Const ,FirstVNF_RAM ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( ( Max( MDR,MRS ) * ( Const - FirstVNF_RAM_Server ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( DS * ( RRSe / MUC ) ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( CS ,CS ) ) + Max( ( CS * MLU ),Min( MLU ,RRSe ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02294358845695616}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * ( AMS * Const ) ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,Max( MLU,CS ) ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / ( RCSe / DS ) ) )", "obj1": 0.7471264367816092, "obj2": 0.10431811036909899}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Min( ( ( ( RMSe / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9291187739463601, "obj2": 0.026675589800175495}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( ( ( ( FirstVNF_Mem / PN ) * DDR ) - ARS ) + MRS ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( Max( MUM,RCSe ) + Min( MUR ,RRSe ) ) + Max( Min( MLU ,RRSe ),( CS * ( MUR - DS ) ) ) ) )", "obj1": 0.8237547892720306, "obj2": 0.07469022345578966}, {"determining": "( ( RRS + MRS ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU + Max( ( Max( Const,AMS ) / DDR ),RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Max( ( MUM - MLU ),( MLU * MUR ) )", "obj1": 0.9674329501915708, "obj2": 0.013362984029338543}, {"determining": "( ( PN * ( ( Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) / DDR ) - Min( ( CRS + FirstVNF_CPU_Server ) ,AMS ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,( RMSe + MUM ) ) * ( RMSe - RMSe ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( Max( Max( ( CRS * ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( AMS * ( ( FirstVNF_Mem_Server - Max( AMS,( BR - ARS ) ) ) * FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM - MRS ) ) - ( ACS * PN ) )", "choosing": "( ( RCSe + Min( MUM ,( Max( MUR,( DS * ( ( RRSe / MUM ) / RMSe ) ) ) + Min( Max( MUM,MUC ) ,MUC ) ) ) ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.014300928987263558}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / DDR ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( ( MRS + ACS ) * Max( ARS,MRS ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( Max( MLU,Min( MUM ,MUM ) ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) ) ) )", "obj1": 0.89272030651341, "obj2": 0.04660890238507885}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( FirstVNF_Mem_Server + ( ( FirstVNF_Mem_Server / CRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( MLU - RRSe ),RRSe ) / Max( ( Min( RRSe ,MLU ) + CS ),( ( CS + CS ) * ( MUR / CS ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.009145813855988397}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.8218390804597702, "obj2": 0.07736613454388273}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( MUR,Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.7950191570881227, "obj2": 0.0883110238164786}, {"determining": "( ( ( RRS - ( MRS / CRS ) ) / BR ) * ( FirstVNF_RAM + Max( Max( Const,RRS ),Min( ( Min( Max( Max( DDR,BR ),Min( PN ,MRS ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( ( RRSe * RRSe ) / Min( MUR ,MUC ) ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + Max( RRSe,DS ) ) * ( Max( Min( CS ,CS ),( CS * CS ) ) - ( Min( MUR ,MUM ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( Min( MUM ,CS ) - Max( ( MLU / MUM ),RRSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24497932868220526}, {"determining": "( ( FirstVNF_RAM - ( ARS - ( MDR * ( ( ARS / AMS ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU + Max( MDR,AMS ) ) ) ) ) ) ) / ( BR / ( ( RRS - CRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUR ,( MUC * ( MUM * ( ( CS - MUR ) / RCSe ) ) ) ) - RCSe ) - Max( MLU,MUM ) )", "obj1": 0.60727969348659, "obj2": 0.265158671096573}, {"determining": "( ( RRS - MRS ) - ( ( ARS * CRS ) / ( ( ACS + Const ) / ( ARS + ( FirstVNF_CPU / ARS ) ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,( Max( CS,( ( MUC - MUM ) - ( RMSe * MLU ) ) ) * MUM ) ) - ( MUC * RMSe ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RMSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.054793439817137767}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( PN * ( ( Min( ACS ,( Const + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) / ( AMS - ( MRS - DDR ) ) ) - ( FirstVNF_Mem * ( Min( ( ACS + FirstVNF_Mem ) ,( ARS / FirstVNF_CPU ) ) / DDR ) ) ) ) - ( Const / MRS ) )", "choosing": "( Max( Min( ( Max( ( MLU * MUM ),DS ) / ( CS * DS ) ) ,Min( ( RRSe * RRSe ) ,MLU ) ),Min( MUM ,MUM ) ) * Min( ( ( Min( Min( MUC ,MUR ) ,RMSe ) / Min( ( ( ( MLU - MUR ) / MUM ) / RRSe ) ,( RCSe - DS ) ) ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) ,( DS + RCSe ) ) )", "obj1": 0.921455938697318, "obj2": 0.03230081516205744}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7432950191570882, "obj2": 0.10632516232713152}, {"determining": "( ( Const + Max( ( MRS - FirstVNF_CPU ),FirstVNF_RAM_Server ) ) - ( Min( CRS ,ARS ) - ( ( Min( ACS ,( Min( PN ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) / ARS ) ) * ACS ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe * DS ) / ( MUM * MUC ) ) - ( ( Min( MUR ,MUC ) + MLU ) - ( RMSe + ( MLU * MUC ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.007380911964598459}, {"determining": "( Max( PN,( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,MDR ) + ( BR * ( AMS - FirstVNF_Mem_Server ) ) ) - ( Min( ACS ,( Max( DDR,ARS ) / FirstVNF_RAM ) ) / ( AMS / MDR ) ) ) ) - ( ARS + ARS ) )", "choosing": "( ( CS - RCSe ) - Max( RRSe,Max( Max( RCSe,MUC ),( ( DS * Min( DS ,( RMSe - ( MLU / MLU ) ) ) ) - RRSe ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.09479477959911128}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - ( Max( ( RMSe - ( ( MLU + RRSe ) * ( RCSe - RRSe ) ) ),RMSe ) - RMSe ) ) / Max( RMSe,RMSe ) ) )", "obj1": 0.9827586206896551, "obj2": 0.007380911964598459}, {"determining": "( Max( ( PN / FirstVNF_RAM ),FirstVNF_Mem ) - ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,( Min( CS ,CS ) / ( MUM / MLU ) ) ) ) / CS ) - ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) - ( CS / CS ) ) ) / ( ( Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) + RRSe ) * Min( MLU ,RMSe ) ) ) / Min( Min( RCSe ,MUM ) ,MUR ) )", "obj1": 0.9272030651340997, "obj2": 0.02925872671857499}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.603448275862069, "obj2": 0.2697155565183963}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( Min( Min( FirstVNF_RAM ,Const ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( DS * RRSe ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.9693486590038314, "obj2": 0.01163136178849157}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003388263960737056}, {"determining": "( ( PN * ( ( Min( ( FirstVNF_CPU / ARS ) ,Max( MDR,MRS ) ) / DDR ) - Max( ( ( DDR - Max( PN,( MDR - MRS ) ) ) * FirstVNF_Mem ),( FirstVNF_CPU / ACS ) ) ) ) - ( Max( MRS,RRS ) + Const ) )", "choosing": "( ( ( MUR * MUM ) - MUM ) * Min( ( ( ( RCSe / CS ) - Max( MUR,Min( RCSe ,MUM ) ) ) - ( Min( ( MUC + ( RMSe + ( MLU - MLU ) ) ) ,MUR ) + RCSe ) ) ,DS ) )", "obj1": 0.9904214559386973, "obj2": 0.003388263960737056}, {"determining": "( ( ( AMS / ( Max( RRS,Const ) + ( Const + CRS ) ) ) + AMS ) * ( ( ( RRS * Const ) * Max( FirstVNF_RAM_Server,AMS ) ) + Max( Max( Const,RRS ),Min( ( Min( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( BR,FirstVNF_CPU_Server ) ) ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / Min( MUC ,MUC ) ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) - ( Min( MUR ,MUM ) + ( Max( DS,RRSe ) / ( ( Min( CS ,RMSe ) / MUR ) - ( Min( MUM ,CS ) - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.25874425220498143}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / Max( ARS,RRS ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031377048761481216}, {"determining": "( ( PN * ( ( Min( ACS ,( PN + ( FirstVNF_CPU_Server / DDR ) ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( Min( ( ( ( CS + MUR ) / MUR ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.7931034482758621, "obj2": 0.08982857373846535}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * DDR ) / ( Min( ( PN + FirstVNF_RAM_Server ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server * BR ) ) ) / DDR ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( MUC ,( Max( RMSe,RCSe ) / MLU ) ) ,( CS / CS ) ) ) / ( ( MUC / ( RCSe / RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( CS * MLU ) * ( MUC / MUM ) ) / ( MUR + RCSe ) ) )", "obj1": 0.9252873563218391, "obj2": 0.029794250069530768}, {"determining": "( ( ( ( AMS / ARS ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( DDR * MDR ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( ( MLU * MUR ),Min( MUM ,CS ) ) + ( Max( MUM,( ( DS - CS ) * RCSe ) ) / Max( ( Min( RCSe ,MUC ) - RCSe ),( Min( ( RCSe + MUC ) ,( Max( RCSe,MUM ) + MUM ) ) - MUR ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.26660572008838096}, {"determining": "( ( PN * ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - ( Min( MDR ,( ( FirstVNF_CPU + RRS ) / FirstVNF_Mem ) ) - Max( AMS,ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUC - MUR ) - Min( MUC ,Min( ( Max( Min( ( RRSe - DS ) ,( MLU - RMSe ) ),DS ) / ( CS * DS ) ) ,( CS * DS ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0005950023982061264}, {"determining": "( ( ( FirstVNF_Mem_Server + MRS ) * PN ) - Max( Const,MRS ) )", "choosing": "( ( Min( MUM ,RCSe ) - Min( DS ,Min( ( MLU / MUM ) ,CS ) ) ) / Max( Min( ( RCSe * MUR ) ,( DS - DS ) ),Min( Max( RMSe,MLU ) ,Min( MLU ,RRSe ) ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0019966520882367753}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,PN ) + ( FirstVNF_CPU_Server / DDR ) ) / ( Const + ACS ) ) / ( FirstVNF_Mem_Server - MDR ) ) - Max( Max( FirstVNF_CPU_Server,RRS ),( ACS * Const ) ) )", "choosing": "Max( DS,Max( MLU,Min( ( ( ( Min( RMSe ,Min( RMSe ,DS ) ) / CS ) / ( Min( Min( MUR ,MUR ) ,( MUR - MUC ) ) / RRSe ) ) + RRSe ) ,MUR ) ) )", "obj1": 0.9923371647509579, "obj2": 0.003034521492588617}, {"determining": "( ( ( PN / ( Min( ( MDR / MRS ) ,( FirstVNF_CPU / ARS ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( Max( MRS,CRS ) - AMS ) )", "choosing": "( Max( ( RCSe - RRSe ),( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( MUM / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ) / Max( ( ( MUR * ( CS + ( RMSe + MUC ) ) ) - RRSe ),( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10705437249205116}, {"determining": "( Min( Min( Const ,FirstVNF_RAM ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( ( Max( MDR,MRS ) * ( Const - FirstVNF_RAM_Server ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( DS * ( RRSe / MUC ) ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( CS ,CS ) ) + Max( ( CS * MLU ),Min( MLU ,RRSe ) ) ) )", "obj1": 0.9693486590038314, "obj2": 0.01163136178849157}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - ( RRS + FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( ARS * CRS ) / ( DDR / Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_RAM - PN ) + Min( DDR ,BR ) ) ) ) ,Max( FirstVNF_CPU,Min( FirstVNF_RAM ,( DDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RRSe ,( ( RRSe / Max( RRSe,RRSe ) ) * RCSe ) ) / CS ) * MUR ),( ( MUR * RCSe ) - RRSe ) ) / ( ( RRSe - RCSe ) - ( ( MUM + Min( RMSe ,( DS - Min( MUR ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10768261949220766}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( MLU,Min( MUM ,RRSe ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) )", "obj1": 0.9770114942528736, "obj2": 0.008347582809778101}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( CS * MUR ) - RRSe ) - ( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.7394636015325671, "obj2": 0.1076341606392029}, {"determining": "( ( ( Min( DDR ,AMS ) / ( BR * Min( Max( ( ( FirstVNF_RAM_Server / PN ) - FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * AMS ) ) ) ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,ACS ) ) ) ) ) - ( MDR - ( ( BR + ( Const / FirstVNF_Mem_Server ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MLU + CS ),Max( ( Min( ( RMSe / RMSe ) ,Max( DS,RCSe ) ) * Max( RRSe,CS ) ),Min( MUM ,MUR ) ) )", "obj1": 0.603448275862069, "obj2": 0.2697155565183963}, {"determining": "( ( ( PN / ( Min( DDR ,( ARS * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( Max( DS,MUR ) - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.054793439817137767}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( Min( ( AMS - Min( CRS ,AMS ) ) ,( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( ( PN * AMS ) ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( Max( Max( ARS,RRS ),( ACS * Const ) ),FirstVNF_CPU_Server ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( Min( RCSe ,MLU ) * Min( CS ,Min( RMSe ,Min( CS ,RRSe ) ) ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) ) - Max( Max( AMS,FirstVNF_Mem ),FirstVNF_Mem ) )", "choosing": "( Max( ( MLU * MUR ),( CS / MUM ) ) + ( Max( MUM,Max( ( MLU * MUM ),DS ) ) / Max( ( CS - RCSe ),( MUR - MUR ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.26660572008838096}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * ( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( Max( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( DS + CS ) ),CS ) * ( ( MLU + MUC ) - ( MUM + MUR ) ) )", "obj1": 0.9789272030651341, "obj2": 0.008268674597352936}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ,( FirstVNF_CPU / ACS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02294358845695616}, {"determining": "( Max( Const,Min( ACS ,( BR - MDR ) ) ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + ( Const * ( ( Const - BR ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUC - RCSe ) ,( ( Max( RCSe,CS ) + ( RCSe - RMSe ) ) + Max( ( MLU + CS ),Min( MLU ,CS ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / CRS ) ) / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( ( ( ( ( Max( RCSe,MUC ) / MUM ) / CS ) - ( CS + DS ) ) / CS ) * ( RRSe + ( Max( ( ( MLU * Max( MUR,RMSe ) ) * MUR ),RMSe ) / MLU ) ) )", "obj1": 0.9789272030651341, "obj2": 0.008268674597352936}, {"determining": "( ( ( MDR * Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,RRS ) ) / FirstVNF_Mem_Server ) - ( ARS * ( Min( RRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR - RMSe ),( Max( Max( RMSe,CS ),( MUM / DS ) ) / RMSe ) ) - ( Min( RCSe ,MLU ) - ( MUR - Min( RCSe ,Max( ( ( ( MUC * DS ) + MUC ) * Max( DS,( RMSe + MUC ) ) ),Min( RCSe ,RMSe ) ) ) ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0015419852797961635}, {"determining": "Min( ( Const - MRS ) ,( ( FirstVNF_RAM + ARS ) / ( PN - FirstVNF_CPU ) ) )", "choosing": "Min( Min( MUC ,MUM ) ,Max( ( RCSe / DS ),Max( MUC,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( AMS,Min( ACS ,FirstVNF_Mem ) ) - ( ( ( FirstVNF_CPU + MRS ) + FirstVNF_CPU_Server ) / MRS ) ) ,BR ) - Max( MDR,MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,DS ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( MUC / MUM ) * ( CS * MLU ) ) / ( ( ( Max( ( RRSe * CS ),MUM ) - ( DS - CS ) ) - Min( ( RRSe * ( Min( RMSe ,MUC ) * ( MLU - DS ) ) ) ,( MLU - MUM ) ) ) / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / FirstVNF_Mem ) ) / ( PN * BR ) ) - ( ARS * FirstVNF_Mem_Server ) ) ) - ( Const + ( PN * ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( ( MUM * MUC ) * ( RCSe * DS ) ) - ( ( RRSe - ( ( ( RMSe + Max( RCSe,RMSe ) ) * ( ( MUR * MUM ) / Max( ( MUR - CS ),MUR ) ) ) - RMSe ) ) / Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const * FirstVNF_Mem_Server ) - Max( FirstVNF_Mem,Min( ARS ,DDR ) ) ) * ( MRS * MRS ) ) ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUM ,RCSe ) - ( MLU / ( DS * ( ( ( MUM * DS ) - ( MUR - ( RMSe / RMSe ) ) ) - ( MUR - Max( RRSe,DS ) ) ) ) ) ) / Max( Min( ( RCSe * MUR ) ,( DS - DS ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) - Min( Min( FirstVNF_CPU ,RRS ) ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( CS + ( Min( ( MUM + ( RCSe - MLU ) ) ,MUR ) * RMSe ) ) + ( Min( RMSe ,Min( DS ,RRSe ) ) * MUC ) ),( MUM * Max( RRSe,Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ( FirstVNF_Mem + ACS ) * Max( ARS,MRS ) ) / ( Min( ARS ,( ( DDR + ( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,BR ) ) ) - ( Const / FirstVNF_RAM ) ) ) / DDR ) ) )", "choosing": "( Max( ( RRSe - RCSe ),( ( Max( DS,DS ) + MUR ) / CS ) ) / Max( Max( RMSe,MUC ),Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( ARS * ( ( ( Const / Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ARS ),MDR ) ) - ARS ) / CRS ) ) - ( DDR / ( ( FirstVNF_Mem_Server - MDR ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * MLU ) + ( DS - DS ) )", "obj1": 0.6590038314176245, "obj2": 0.178491082402923}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( ( Min( DDR ,DDR ) / ( ACS * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) - ( Min( ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - MDR ) ,BR ) * ( DDR * ( RRS / ( PN / FirstVNF_RAM ) ) ) ) ) - Max( ( FirstVNF_RAM / ( ( Const - MRS ) / CRS ) ),Min( ( ( AMS + ( FirstVNF_Mem - DDR ) ) * ( Const + MDR ) ) ,BR ) ) )", "choosing": "Min( ( ( Min( ( ( RMSe - ( RRSe * MUR ) ) * DS ) ,( MUR + RRSe ) ) + CS ) + MUM ) ,( RMSe / MUC ) )", "obj1": 0.6513409961685823, "obj2": 0.213748908315404}, {"determining": "( ( FirstVNF_RAM_Server * CRS ) - ( MDR - ( ( ( AMS - Const ) * CRS ) / Min( Min( CRS ,BR ) ,( MDR / ( MRS * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Max( ( ( Min( ( ( ( RRSe - ( RMSe + MUM ) ) / ( CS * MUR ) ) - DS ) ,( CS * MUR ) ) + ( RMSe / Max( ( MUM / DS ),Max( RMSe,CS ) ) ) ) - MUR ),( MUM - MLU ) )", "obj1": 0.6436781609195402, "obj2": 0.23988571233558614}, {"determining": "( ( ( ( ( Const / FirstVNF_RAM ) - MRS ) / CRS ) * ARS ) - ( DDR / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RRSe,DS ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,MUM ) ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6551724137931034, "obj2": 0.19355484030227732}, {"determining": "( ( ( ARS / ( Min( ( AMS * FirstVNF_CPU ) ,Const ) / ( Const / FirstVNF_RAM ) ) ) * ( AMS * RRS ) ) - ( ( MRS + AMS ) + FirstVNF_Mem ) )", "choosing": "( ( MUC * CS ) * ( Min( Min( RRSe ,CS ) ,MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.7164750957854407, "obj2": 0.11813242538030118}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( ( PN + ( Min( DDR ,FirstVNF_CPU_Server ) - ( Max( RRS,( DDR + DDR ) ) * ( RRS * ( FirstVNF_CPU + ( FirstVNF_CPU + PN ) ) ) ) ) ) * ( PN * AMS ) ) - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( ( MUR * ( MLU - Max( ( CS + MUC ),( MUC - MUR ) ) ) ) + MUR ) / MUR ) ) )", "obj1": 0.7662835249042146, "obj2": 0.0984690651236629}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS - ( ( MDR + FirstVNF_CPU ) * Const ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( ( ( ( RCSe - RMSe ) - ( CS + MUR ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7068965517241379, "obj2": 0.1219817746300119}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / Min( ACS ,( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / ACS ) ) ) ) - ( CRS + Max( ACS,FirstVNF_CPU ) ) )", "choosing": "( ( MUM * Min( ( Min( CS ,( RRSe - RRSe ) ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUM ) ) / RRSe ) ) ,MLU ) ) - Max( RMSe,RCSe ) )", "obj1": 0.814176245210728, "obj2": 0.07885431561266426}, {"determining": "( FirstVNF_CPU_Server - ( MDR * ( ( DDR + ( MRS - RRS ) ) - ( MDR - ( MDR - ( AMS * BR ) ) ) ) ) )", "choosing": "Max( ( MLU * MUR ),Min( MUM ,Max( Min( CS ,( ( ( RCSe + ( RRSe - MLU ) ) / MUM ) * ( Max( ( DS / CS ),Max( RCSe,DS ) ) / ( MUR - Min( RCSe ,MLU ) ) ) ) ),DS ) ) )", "obj1": 0.8793103448275862, "obj2": 0.05301691831249107}, {"determining": "( ( ( FirstVNF_Mem / ( Min( DDR ,( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Min( ( RRS / FirstVNF_CPU ) ,ARS ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem / Const ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / FirstVNF_CPU ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RRSe / ( MLU * ( Min( MLU ,( RCSe * RMSe ) ) / MUR ) ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( ( PN * ( Min( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ,DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( MLU,Min( Min( ( MUM / RCSe ) ,( MLU - ( ( MUC - ( RCSe + DS ) ) / MLU ) ) ) ,MUR ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08367716071402338}, {"determining": "( ( Min( ( MRS - ( ( FirstVNF_Mem_Server / ACS ) * FirstVNF_CPU ) ) ,ACS ) * ( ACS / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ARS - CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,Min( ( CS + MLU ) ,MUR ) ) ) * ( MUM / MUM ) ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( RRSe / ( RCSe * ( MLU - DS ) ) ) + CS ) ) ),Min( ( RCSe - RRSe ) ,RCSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06192611889944147}, {"determining": "( ( ( PN / ( Min( DDR ,( AMS + ACS ) ) - ( Const / Min( ( Const + FirstVNF_CPU_Server ) ,PN ) ) ) ) * ( PN * AMS ) ) - ( BR + ARS ) )", "choosing": "( Max( CS,( RMSe * RCSe ) ) / ( Max( MUR,( ( MUM + MLU ) - Max( CS,( ( DS - ( MUR - MUR ) ) * Min( CS ,Max( CS,MUR ) ) ) ) ) ) * ( RMSe + MLU ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07273979488214789}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( DDR / RRS ) * ( MRS - Min( DDR ,( PN - CRS ) ) ) )", "choosing": "( ( RMSe / MLU ) * Min( Max( CS,( ( MLU - Min( MUC ,MUM ) ) / Min( ( Min( DS ,DS ) / ( ( MUM - MLU ) + ( MLU + MLU ) ) ) ,RRSe ) ) ) ,RCSe ) )", "obj1": 0.8984674329501916, "obj2": 0.04541680735925762}, {"determining": "( ( ( MDR * Min( ( ( FirstVNF_Mem + ACS ) * Max( ARS,MRS ) ) ,( RRS + Const ) ) ) - ( AMS + ACS ) ) * ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / DDR ) ) / DDR ) ) ) / ( FirstVNF_RAM - RRS ) ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / ( ( ( MUR * ( MUR / MUC ) ) + MUR ) - ( ( RRSe * ( ( CS - MUC ) / CS ) ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( DS + RCSe ) ) )", "obj1": 0.8908045977011494, "obj2": 0.04873432743178363}, {"determining": "( ( ( ( FirstVNF_RAM_Server / AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - Max( Min( FirstVNF_RAM ,Max( ( CRS - DDR ),RRS ) ),( Min( ARS ,CRS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( MLU + Min( ( DS + Min( DS ,( ( RCSe * RRSe ) * RCSe ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUC + RRSe ) ) ) ) ) ) ,( MLU + MLU ) ) )", "obj1": 0.632183908045977, "obj2": 0.244183819194417}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * Max( MUC,RRSe ) ) )", "obj1": 0.8524904214559387, "obj2": 0.06067385417819833}, {"determining": "( ( Max( PN,( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( MRS * FirstVNF_Mem_Server ) / ARS ) )", "choosing": "( ( Max( MUC,( RCSe + ( Max( ( RMSe / ( MLU + MUM ) ),( DS - MUC ) ) / RCSe ) ) ) - DS ) / Max( ( Max( Max( ( MLU - CS ),Max( MLU,( Min( DS ,CS ) - Min( RRSe ,CS ) ) ) ),MUR ) * ( Max( ( RMSe - Max( CS,MUM ) ),( RRSe - Max( DS,RRSe ) ) ) * ( Min( DS ,Max( CS,MUC ) ) - RMSe ) ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 0.8697318007662835, "obj2": 0.054461537115459056}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( DDR / RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6992337164750958, "obj2": 0.12831110994599124}, {"determining": "( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,ARS ) ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( MUR - MLU ) ) * Max( Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,DS ),( CS / RMSe ) ) )", "obj1": 0.6283524904214559, "obj2": 0.24884824936832975}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) * DDR ) ,Const ) ,MRS ) + MRS ) )", "choosing": "( ( MUM - ( DS * MUR ) ) - ( ( MUR - Min( RCSe ,( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) ) ) - MUR ) )", "obj1": 0.9042145593869731, "obj2": 0.03885107597826928}, {"determining": "( ( ( ( FirstVNF_RAM_Server / AMS ) / ( ACS * Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / ( DDR / FirstVNF_CPU ) ) ) ) / ( FirstVNF_RAM_Server + Min( RRS ,( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( ( FirstVNF_CPU + CRS ) * Max( ( Max( FirstVNF_CPU_Server,( ARS - MRS ) ) - ( ( FirstVNF_CPU + ACS ) * Const ) ),DDR ) ) )", "choosing": "Max( Min( ( MLU + Min( Max( RCSe,RRSe ) ,Max( ( ( ( MUC / RCSe ) / ( MUR + MUR ) ) / CS ),MUR ) ) ) ,( DS + RMSe ) ),( MUR * MUR ) )", "obj1": 0.6149425287356322, "obj2": 0.25842958121011594}, {"determining": "( Max( MRS,( ( RRS / Const ) - ACS ) ) * ( ( ( RRS * Const ) * Max( Max( MDR,FirstVNF_RAM ),AMS ) ) + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) * ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( ( ( MLU * CS ) + DS ) + ( MUR - Max( DS,RCSe ) ) ) - ( MUR - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.25364511381513893}, {"determining": "( ( ( ( ACS + Const ) / Min( DDR ,AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( ( ( ARS / CRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - ( ( ACS / RRS ) + MDR ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),MLU ) )", "obj1": 0.6091954022988506, "obj2": 0.26211943262807524}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * PN ) - ( ( Min( Const ,FirstVNF_RAM ) / MRS ) + MRS ) )", "choosing": "( ( ( RCSe * MUC ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,( MUM / MUC ) ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03613553823966046}, {"determining": "( ( ( PN * ACS ) * FirstVNF_RAM ) - ( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / MLU ),Max( MUR,MUC ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / Min( MUM ,RMSe ) ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.1278763735059606}, {"determining": "( ( ( RRS * Min( FirstVNF_RAM_Server ,RRS ) ) * ( AMS * PN ) ) - ( ( FirstVNF_RAM * CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RCSe ,( ( CS / Max( ( MUC / ( RRSe - RMSe ) ),RRSe ) ) * RCSe ) ) * Min( RCSe ,MUR ) ) * Max( MLU,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09538539851668557}, {"determining": "( ( ( BR / ( Const * DDR ) ) / ( Min( Const ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_RAM ,DDR ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Const )", "choosing": "Max( DS,( RRSe + ( DS / Min( MUC ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( FirstVNF_CPU - ( ( Min( MRS ,ARS ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( DS + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( RMSe + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.9482758620689655, "obj2": 0.017022162412219176}, {"determining": "( Min( Min( Const ,FirstVNF_RAM ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( ( Max( MDR,MRS ) * ( Const - FirstVNF_RAM_Server ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( DS * ( RRSe / MUC ) ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( CS ,CS ) ) + Max( ( CS * MLU ),Min( MLU ,RRSe ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02294358845695616}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( MLU + RMSe ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MLU - MUM ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09416580839971138}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * ( AMS * Const ) ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,Max( MLU,CS ) ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / ( RCSe / DS ) ) )", "obj1": 0.7471264367816092, "obj2": 0.10431811036909899}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( MLU + RMSe ) ) ) + ( Max( ( RCSe / DS ),( RRSe / CS ) ) + ( ( MUM * MUR ) / ( ( ( MLU - MUM ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.789272030651341, "obj2": 0.09216391804349841}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( RMSe,RCSe ) - ( MUM / Min( ( Min( CS ,MUR ) / ( Min( ( ( RRSe - MLU ) - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) )", "obj1": 0.7969348659003831, "obj2": 0.08494484545803478}, {"determining": "( ( PN * ( ( Min( ( FirstVNF_CPU / ARS ) ,Max( MDR,MRS ) ) / DDR ) - Max( ( ( DDR - Max( PN,( MDR - MRS ) ) ) * FirstVNF_Mem ),( FirstVNF_CPU / ACS ) ) ) ) - ( Max( MRS,RRS ) + Const ) )", "choosing": "( ( ( MUR * MUM ) - MUM ) * Min( ( ( ( RCSe / CS ) - Max( MUR,Min( RCSe ,MUM ) ) ) - ( Min( ( MUC + ( RMSe + ( MLU - MLU ) ) ) ,MUR ) + RCSe ) ) ,DS ) )", "obj1": 0.9195402298850575, "obj2": 0.03543588289950716}, {"determining": "( ( PN * ( ( Min( FirstVNF_CPU_Server ,( Min( ACS ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( Min( MLU ,RRSe ),RRSe ) * ( RRSe - RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004334454779699649}, {"determining": "( ( RRS + MRS ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU + Max( ( Max( Const,AMS ) / DDR ),RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Max( ( MUM - MLU ),( MLU * MUR ) )", "obj1": 0.9674329501915708, "obj2": 0.013362984029338543}, {"determining": "( Max( Max( ( CRS * ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( AMS * ( ( FirstVNF_Mem_Server - Max( AMS,( BR - ARS ) ) ) * FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM - MRS ) ) - ( ACS * PN ) )", "choosing": "( ( RCSe + Min( MUM ,( Max( MUR,( DS * ( ( RRSe / MUM ) / RMSe ) ) ) + Min( Max( MUM,MUC ) ,MUC ) ) ) ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.014300928987263558}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / DDR ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( ( MRS + ACS ) * Max( ARS,MRS ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( Max( MLU,Min( MUM ,MUM ) ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) ) ) )", "obj1": 0.89272030651341, "obj2": 0.04660890238507885}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU * ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),Min( Max( Min( ( ( MUC * ( RRSe / RMSe ) ) - RRSe ) ,( RRSe + Min( RCSe ,MUR ) ) ),RMSe ) ,( CS + CS ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( ( PN / ( ( DDR + ( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( AMS * PN ) ) - ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( Min( MUM ,RMSe ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM - MLU ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.8563218390804598, "obj2": 0.05884762206039854}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( Max( RMSe,MUC ) * Min( MLU ,RRSe ) ) )", "obj1": 0.8582375478927203, "obj2": 0.05659187892653742}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( MUR,Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.7950191570881227, "obj2": 0.0883110238164786}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24497932868220526}, {"determining": "( ( FirstVNF_RAM - ( ARS - ( MDR * ( ( ARS / AMS ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU + Max( MDR,AMS ) ) ) ) ) ) ) / ( BR / ( ( RRS - CRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUR ,( MUC * ( MUM * ( ( CS - MUR ) / RCSe ) ) ) ) - RCSe ) - Max( MLU,MUM ) )", "obj1": 0.60727969348659, "obj2": 0.265158671096573}, {"determining": "( ( ( PN / ( Min( DDR ,( ARS * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( Max( DS,MUR ) - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.054793439817137767}, {"determining": "( ( PN * ( ( Min( ACS ,( Const + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) / ( AMS - ( MRS - DDR ) ) ) - ( FirstVNF_Mem * ( Min( ( ACS + FirstVNF_Mem ) ,( ARS / FirstVNF_CPU ) ) / DDR ) ) ) ) - ( Const / MRS ) )", "choosing": "( Max( Min( ( Max( ( MLU * MUM ),DS ) / ( CS * DS ) ) ,Min( ( RRSe * RRSe ) ,MLU ) ),Min( MUM ,MUM ) ) * Min( ( ( Min( Min( MUC ,MUR ) ,RMSe ) / Min( ( ( ( MLU - MUR ) / MUM ) / RRSe ) ,( RCSe - DS ) ) ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) ,( DS + RCSe ) ) )", "obj1": 0.921455938697318, "obj2": 0.03230081516205744}, {"determining": "( Max( ( PN / FirstVNF_RAM ),FirstVNF_Mem ) - ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,( Min( CS ,CS ) / ( MUM / MLU ) ) ) ) / CS ) - ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) - ( CS / CS ) ) ) / ( ( Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) + RRSe ) * Min( MLU ,RMSe ) ) ) / Min( Min( RCSe ,MUM ) ,MUR ) )", "obj1": 0.9272030651340997, "obj2": 0.02925872671857499}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7432950191570882, "obj2": 0.10632516232713152}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( FirstVNF_CPU - ( ACS - ( Const - ( MRS * FirstVNF_Mem ) ) ) ) - ( MRS - Min( ( ( AMS - FirstVNF_RAM ) - ARS ) ,ACS ) ) )", "choosing": "( ( MUM - ( DS * ( CS - MUR ) ) ) - ( ( Min( RCSe ,Max( ( ( Min( RRSe ,CS ) + MUC ) * ( RCSe * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) - MUR ) - Min( Min( Max( Max( DS,DS ),Max( RRSe,( MUM + ( MLU / MLU ) ) ) ) ,MLU ) ,RRSe ) ) )", "obj1": 0.9061302681992337, "obj2": 0.03810099920863667}, {"determining": "( Max( PN,( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,MDR ) + ( BR * ( AMS - FirstVNF_Mem_Server ) ) ) - ( Min( ACS ,( Max( DDR,ARS ) / FirstVNF_RAM ) ) / ( AMS / MDR ) ) ) ) - ( ARS + ARS ) )", "choosing": "( ( CS - RCSe ) - Max( RRSe,Max( Max( RCSe,MUC ),( ( DS * Min( DS ,( RMSe - ( MLU / MLU ) ) ) ) - RRSe ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.09479477959911128}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( Const * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( PN / FirstVNF_RAM_Server ) ) ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,Min( RRSe ,MUR ) ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * MLU ),( ( CS + MUR ) / MUR ) ) )", "obj1": 0.9731800766283525, "obj2": 0.009885304200653896}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.603448275862069, "obj2": 0.2697155565183963}, {"determining": "( ( Const + Max( ( MRS - FirstVNF_CPU ),FirstVNF_RAM_Server ) ) - ( Min( CRS ,ARS ) - ( ( Min( ACS ,( Min( PN ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) / ARS ) ) * ACS ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe * DS ) / ( MUM * MUC ) ) - ( ( Min( MUR ,MUC ) + MLU ) - ( RMSe + ( MLU * MUC ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.007380911964598459}, {"determining": "( ( PN * ( ( Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) / DDR ) - Min( ( CRS + FirstVNF_CPU_Server ) ,AMS ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,( RMSe + MUM ) ) * ( RMSe - RMSe ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / Max( ARS,RRS ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031377048761481216}, {"determining": "( ( PN - ( ( Min( ( Const + Max( MDR,MDR ) ) ,ACS ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) * Max( Min( ( Max( ( MLU * ( Min( MUM ,RRSe ) + Max( CS,RCSe ) ) ),DS ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) )", "obj1": 0.7911877394636015, "obj2": 0.09058619436394133}, {"determining": "( ( PN * ( ( Min( ACS ,( PN + ( FirstVNF_CPU_Server / DDR ) ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( Min( ( ( ( CS + MUR ) / MUR ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.7931034482758621, "obj2": 0.08982857373846535}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * DDR ) / ( Min( ( PN + FirstVNF_RAM_Server ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server * BR ) ) ) / DDR ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( MUC ,( Max( RMSe,RCSe ) / MLU ) ) ,( CS / CS ) ) ) / ( ( MUC / ( RCSe / RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( CS * MLU ) * ( MUC / MUM ) ) / ( MUR + RCSe ) ) )", "obj1": 0.9252873563218391, "obj2": 0.029794250069530768}, {"determining": "( ( Max( ( AMS / FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( FirstVNF_RAM - BR ) ) ) - Max( Max( AMS,FirstVNF_Mem ),FirstVNF_Mem ) )", "choosing": "( Max( ( MLU * MUR ),( CS / MUM ) ) + ( Max( MUM,Max( ( MLU * MUM ),DS ) ) / Max( ( CS - RCSe ),( MUR - MUR ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.26660572008838096}, {"determining": "( Min( Min( Const ,FirstVNF_RAM ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( ( Max( MDR,MRS ) * ( Const - FirstVNF_RAM_Server ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( DS * ( RRSe / MUC ) ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( CS ,CS ) ) + Max( ( CS * MLU ),Min( MLU ,RRSe ) ) ) )", "obj1": 0.9693486590038314, "obj2": 0.01163136178849157}, {"determining": "( ( ( FirstVNF_Mem_Server + MRS ) * PN ) - Max( Const,MRS ) )", "choosing": "( ( Min( MUM ,RCSe ) - Min( DS ,Min( ( MLU / MUM ) ,CS ) ) ) / Max( Min( ( RCSe * MUR ) ,( DS - DS ) ),Min( Max( RMSe,MLU ) ,Min( MLU ,RRSe ) ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0019966520882367753}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( FirstVNF_Mem_Server + ( ( FirstVNF_Mem_Server / CRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( MLU - RRSe ),RRSe ) / Max( ( Min( RRSe ,MLU ) + CS ),( ( CS + CS ) * ( MUR / CS ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.009145813855988397}, {"determining": "( Max( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ),( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,Max( FirstVNF_Mem,FirstVNF_CPU ) ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / Min( Max( MUR,( Min( ( RMSe * MLU ) ,CS ) * DS ) ) ,MUM ) ) ) / ( Max( Max( MUC,RRSe ),MLU ) * Min( MLU ,RRSe ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013885514627326931}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,PN ) + ( FirstVNF_CPU_Server / DDR ) ) / ( Const + ACS ) ) / ( FirstVNF_Mem_Server - MDR ) ) - Max( Max( FirstVNF_CPU_Server,RRS ),( ACS * Const ) ) )", "choosing": "Max( DS,Max( MLU,Min( ( ( ( Min( RMSe ,Min( RMSe ,DS ) ) / CS ) / ( Min( Min( MUR ,MUR ) ,( MUR - MUC ) ) / RRSe ) ) + RRSe ) ,MUR ) ) )", "obj1": 0.9923371647509579, "obj2": 0.003034521492588617}, {"determining": "( ( ( PN / ( Min( ( MDR / MRS ) ,( FirstVNF_CPU / ARS ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( Max( MRS,CRS ) - AMS ) )", "choosing": "( Max( ( RCSe - RRSe ),( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( MUM / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ) / Max( ( ( MUR * ( CS + ( RMSe + MUC ) ) ) - RRSe ),( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10705437249205116}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - ( RRS + FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( ARS * CRS ) / ( DDR / Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_RAM - PN ) + Min( DDR ,BR ) ) ) ) ,Max( FirstVNF_CPU,Min( FirstVNF_RAM ,( DDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RRSe ,( ( RRSe / Max( RRSe,RRSe ) ) * RCSe ) ) / CS ) * MUR ),( ( MUR * RCSe ) - RRSe ) ) / ( ( RRSe - RCSe ) - ( ( MUM + Min( RMSe ,( DS - Min( MUR ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10768261949220766}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( RRSe - ( Max( ( RMSe - ( ( MLU + RRSe ) * ( RCSe - RRSe ) ) ),RMSe ) - RMSe ) ) / Max( RMSe,RMSe ) ) )", "obj1": 0.9827586206896551, "obj2": 0.007380911964598459}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( MLU,Min( MUM ,RRSe ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) )", "obj1": 0.9770114942528736, "obj2": 0.008347582809778101}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( CS * MUR ) - RRSe ) - ( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.7394636015325671, "obj2": 0.1076341606392029}, {"determining": "( Min( Min( FirstVNF_RAM ,Const ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( DS * RRSe ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.9693486590038314, "obj2": 0.01163136178849157}, {"determining": "( ( ( Min( DDR ,AMS ) / ( BR * Min( Max( ( ( FirstVNF_RAM_Server / PN ) - FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * AMS ) ) ) ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,ACS ) ) ) ) ) - ( MDR - ( ( BR + ( Const / FirstVNF_Mem_Server ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MLU + CS ),Max( ( Min( ( RMSe / RMSe ) ,Max( DS,RCSe ) ) * Max( RRSe,CS ) ),Min( MUM ,MUR ) ) )", "obj1": 0.603448275862069, "obj2": 0.2697155565183963}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003388263960737056}, {"determining": "( ( RRS - MRS ) - ( ( ARS * CRS ) / ( ( ACS + Const ) / ( ARS + ( FirstVNF_CPU / ARS ) ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,( Max( CS,( ( MUC - MUM ) - ( RMSe * MLU ) ) ) * MUM ) ) - ( MUC * RMSe ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RMSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.054793439817137767}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( Min( ( AMS - Min( CRS ,AMS ) ) ,( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( ( PN * AMS ) ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( Max( Max( ARS,RRS ),( ACS * Const ) ),FirstVNF_CPU_Server ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( Min( RCSe ,MLU ) * Min( CS ,Min( RMSe ,Min( CS ,RRSe ) ) ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( ( ( AMS / ARS ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( DDR * MDR ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( ( MLU * MUR ),Min( MUM ,CS ) ) + ( Max( MUM,( ( DS - CS ) * RCSe ) ) / Max( ( Min( RCSe ,MUC ) - RCSe ),( Min( ( RCSe + MUC ) ,( Max( RCSe,MUM ) + MUM ) ) - MUR ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.26660572008838096}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / CRS ) ) / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( ( ( ( ( Max( RCSe,MUC ) / MUM ) / CS ) - ( CS + DS ) ) / CS ) * ( RRSe + ( Max( ( ( MLU * Max( MUR,RMSe ) ) * MUR ),RMSe ) / MLU ) ) )", "obj1": 0.9789272030651341, "obj2": 0.008268674597352936}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ,( FirstVNF_CPU / ACS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02294358845695616}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003388263960737056}, {"determining": "( ( ( FirstVNF_RAM_Server / MDR ) * ( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( Max( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( DS + CS ) ),CS ) * ( ( MLU + MUC ) - ( MUM + MUR ) ) )", "obj1": 0.9789272030651341, "obj2": 0.008268674597352936}, {"determining": "( ( PN * ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - ( Min( ( DDR - FirstVNF_RAM ) ,( ( FirstVNF_CPU + RRS ) / FirstVNF_Mem ) ) - Max( MDR,ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUC - MUR ) - Min( MUC ,Min( ( Max( Min( ( RRSe - DS ) ,Min( MUR ,RRSe ) ),DS ) / ( CS / DS ) ) ,( CS * DS ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0005950023982061264}, {"determining": "( ( PN * ( ( Min( ( FirstVNF_CPU / ARS ) ,Max( MDR,MRS ) ) / DDR ) - Max( ( ( DDR - Max( PN,( MDR - MRS ) ) ) * FirstVNF_Mem ),( FirstVNF_CPU / ACS ) ) ) ) - ( Max( MRS,RRS ) + Const ) )", "choosing": "( ( ( MUR * MUM ) - MUM ) * Min( ( ( ( RCSe / CS ) - Max( MUR,Min( RCSe ,MUM ) ) ) - ( Min( ( MUC + ( RMSe + ( MLU - MLU ) ) ) ,MUR ) + RCSe ) ) ,DS ) )", "obj1": 0.9195402298850575, "obj2": 0.03543588289950716}], "18": [{"determining": "( ( PN * ( ( Min( ACS ,( ( ( BR * Const ) / DDR ) + PN ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,( RRS * ACS ) ) ) ) ) ) + MRS ) )", "choosing": "( Max( Min( ( ( ( CS / MUR ) / MUR ) / ( CS * MUC ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( ( ( MLU - RCSe ) + ( Max( RRSe,CS ) + RCSe ) ) + Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ( FirstVNF_Mem + ACS ) * Max( ARS,MRS ) ) / ( Min( ARS ,( ( DDR + ( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,BR ) ) ) - ( Const / FirstVNF_RAM ) ) ) / DDR ) ) )", "choosing": "( Max( ( RRSe - RCSe ),( ( Max( DS,DS ) + MUR ) / CS ) ) / Max( Max( RMSe,MUC ),Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( PN * ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - ( Min( ( DDR + FirstVNF_RAM ) ,( ( Max( PN,FirstVNF_CPU_Server ) + RRS ) / FirstVNF_Mem ) ) - Max( MDR,ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUR - MUC ) - Min( ( DS + RMSe ) ,Min( ( Max( Min( ( RRSe - DS ) ,Min( MUR ,RMSe ) ),DS ) / ( CS / DS ) ) ,( CS * DS ) ) ) )", "obj1": 0.685823754789272, "obj2": 0.16420160007809295}, {"determining": "( ( ( Min( DDR ,DDR ) / ( ACS * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) - ( Min( ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - MDR ) ,BR ) * ( DDR * ( RRS / ( PN / FirstVNF_RAM ) ) ) ) ) - Max( ( FirstVNF_RAM / ( ( Const - MRS ) / CRS ) ),Min( ( ( AMS + ( FirstVNF_Mem - DDR ) ) * ( Const + MDR ) ) ,BR ) ) )", "choosing": "Min( ( ( Min( ( ( RMSe - ( RRSe * MUR ) ) * DS ) ,( MUR + RRSe ) ) + CS ) + MUM ) ,( RMSe / MUC ) )", "obj1": 0.6513409961685823, "obj2": 0.213748908315404}, {"determining": "( ( ARS * ( ( ( Const / Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ARS ),MDR ) ) - ARS ) / CRS ) ) - ( DDR / ( ( FirstVNF_Mem_Server - MDR ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * MLU ) + ( DS - DS ) )", "obj1": 0.6590038314176245, "obj2": 0.178491082402923}, {"determining": "( ( FirstVNF_RAM_Server * CRS ) - ( MDR - ( ( ( AMS - Const ) * CRS ) / Min( Min( CRS ,BR ) ,( MDR / ( MRS * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Max( ( ( Min( ( ( ( RRSe - ( RMSe + MUM ) ) / ( CS * MUR ) ) - DS ) ,( CS * MUR ) ) + ( RMSe / Max( ( MUM / DS ),Max( RMSe,CS ) ) ) ) - MUR ),( MUM - MLU ) )", "obj1": 0.6436781609195402, "obj2": 0.23988571233558614}, {"determining": "( ( ( ( ( Const / FirstVNF_RAM ) - MRS ) / CRS ) * ARS ) - ( DDR / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RRSe,DS ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,MUM ) ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6551724137931034, "obj2": 0.19355484030227732}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( ( ARS / ( Min( ( AMS * FirstVNF_CPU ) ,Const ) / ( Const / FirstVNF_RAM ) ) ) * ( AMS * RRS ) ) - ( ( MRS + AMS ) + FirstVNF_Mem ) )", "choosing": "( ( MUC * CS ) * ( Min( Min( RRSe ,CS ) ,MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.7164750957854407, "obj2": 0.11813242538030118}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( ( ( FirstVNF_RAM_Server / AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ( AMS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - Max( ( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) ),( Min( ARS ,CRS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( MLU - DS ) ,( MLU + MLU ) ) )", "obj1": 0.5881226053639846, "obj2": 0.27976467197303656}, {"determining": "( ( ( PN + ( Min( DDR ,FirstVNF_CPU_Server ) - ( Max( RRS,( DDR + DDR ) ) * ( RRS * ( FirstVNF_CPU + ( FirstVNF_CPU + PN ) ) ) ) ) ) * ( PN * AMS ) ) - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( ( MUR * ( MLU - Max( ( CS + MUC ),( MUC - MUR ) ) ) ) + MUR ) / MUR ) ) )", "obj1": 0.7662835249042146, "obj2": 0.0984690651236629}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS - ( ( MDR + FirstVNF_CPU ) * Const ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( ( ( ( RCSe - RMSe ) - ( CS + MUR ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7068965517241379, "obj2": 0.1219817746300119}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( ( ( PN / ( Min( DDR ,( AMS + ACS ) ) - ( Const / Min( ( Const + FirstVNF_CPU_Server ) ,PN ) ) ) ) * ( PN * AMS ) ) - ( BR + ARS ) )", "choosing": "( Max( CS,( RMSe * RCSe ) ) / ( Max( MUR,( ( MUM + MLU ) - Max( CS,( ( DS - ( MUR - MUR ) ) * Min( CS ,Max( CS,MUR ) ) ) ) ) ) * ( RMSe + MLU ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07273979488214789}, {"determining": "( ( Min( ( MRS - ( ( FirstVNF_Mem_Server / ACS ) * FirstVNF_CPU ) ) ,ACS ) * ( ACS / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ARS - CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,Min( ( CS + MLU ) ,MUR ) ) ) * ( MUM / MUM ) ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( RRSe / ( RCSe * ( MLU - DS ) ) ) + CS ) ) ),Min( ( RCSe - RRSe ) ,RCSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06192611889944147}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( ( Min( DDR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,MRS ) ) / PN ) * ( PN * AMS ) ) - ( ( ARS * CRS ) * ARS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * Max( ( MUR / RCSe ),( MUR - ( ( DS / RMSe ) - RMSe ) ) ) ) )", "obj1": 0.8793103448275862, "obj2": 0.0484716414613445}, {"determining": "( ( ( ( FirstVNF_RAM_Server / AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - Max( Min( FirstVNF_RAM ,Max( ( CRS - DDR ),RRS ) ),( Min( ARS ,CRS ) - Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( MLU + Min( ( DS + Min( DS ,( ( RCSe * RRSe ) * RCSe ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUC + RRSe ) ) ) ) ) ) ,( MLU + MLU ) ) )", "obj1": 0.632183908045977, "obj2": 0.244183819194417}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( ARS - PN ) ) - ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,RRS ) ) ) / ( MRS + ( AMS * FirstVNF_Mem ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "Max( DS,Max( ( ( MLU + MUR ) + ( MUR + Max( DS,RRSe ) ) ),Max( ( ( MLU + ( MLU - ( ( RMSe / MUC ) * ( MUR + MLU ) ) ) ) + ( RMSe - CS ) ),MUM ) ) )", "obj1": 0.8486590038314177, "obj2": 0.05965784373145887}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / Min( ACS ,( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / ACS ) ) ) ) - ( CRS + Max( ACS,FirstVNF_CPU ) ) )", "choosing": "( ( MUM * Min( ( Min( CS ,( RRSe - RRSe ) ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUM ) ) / RRSe ) ) ,MLU ) ) - Max( RMSe,RCSe ) )", "obj1": 0.814176245210728, "obj2": 0.07885431561266426}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( DDR / RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6992337164750958, "obj2": 0.12831110994599124}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( DS + CS ) ),CS ) * ( ( MLU + MUC ) - ( MUM + MUR ) ) )", "obj1": 0.8122605363984674, "obj2": 0.0833235374187242}, {"determining": "( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,ARS ) ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( MUR - MLU ) ) * Max( Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,DS ),( CS / RMSe ) ) )", "obj1": 0.6283524904214559, "obj2": 0.24884824936832975}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / DS ) ),MLU ) )", "obj1": 0.8716475095785441, "obj2": 0.05323232519037305}, {"determining": "( ( ( ( FirstVNF_RAM_Server / AMS ) / ( ACS * Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / ( DDR / FirstVNF_CPU ) ) ) ) / ( FirstVNF_RAM_Server + Min( RRS ,( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( ( FirstVNF_CPU + CRS ) * Max( ( Max( FirstVNF_CPU_Server,( ARS - MRS ) ) - ( ( FirstVNF_CPU + ACS ) * Const ) ),DDR ) ) )", "choosing": "Max( Min( ( MLU + Min( Max( RCSe,RRSe ) ,Max( ( ( ( MUC / RCSe ) / ( MUR + MUR ) ) / CS ),MUR ) ) ) ,( DS + RMSe ) ),( MUR * MUR ) )", "obj1": 0.6149425287356322, "obj2": 0.25842958121011594}, {"determining": "( Max( MRS,( ( RRS / Const ) - ACS ) ) * ( ( ( RRS * Const ) * Max( Max( MDR,FirstVNF_RAM ),AMS ) ) + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) * ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( ( ( MLU * CS ) + DS ) + ( MUR - Max( DS,RCSe ) ) ) - ( MUR - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.25364511381513893}, {"determining": "( ( PN * ( Min( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ,DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( MLU,Min( Min( ( MUM / RCSe ) ,( MLU - ( ( MUC - ( RCSe + DS ) ) / MLU ) ) ) ,MUR ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08367716071402338}, {"determining": "( ( ( ( ACS + Const ) / Min( DDR ,AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( ( ( ARS / CRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - ( ( ACS / RRS ) + MDR ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),MLU ) )", "obj1": 0.6091954022988506, "obj2": 0.26211943262807524}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * PN ) - ( ( Min( Const ,FirstVNF_RAM ) / MRS ) + MRS ) )", "choosing": "( ( ( RCSe * MUC ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,( MUM / MUC ) ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03613553823966046}, {"determining": "( ( ( RRS * Min( FirstVNF_RAM_Server ,RRS ) ) * ( AMS * PN ) ) - ( ( FirstVNF_RAM * CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RCSe ,( ( CS / Max( ( MUC / ( RRSe - RMSe ) ),RRSe ) ) * RCSe ) ) * Min( RCSe ,MUR ) ) * Max( MLU,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09538539851668557}, {"determining": "( ( ( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / DDR ) ) / DDR ) ) ) / FirstVNF_RAM_Server ) * ( ( MDR * Min( ( ( MRS + ACS ) * Max( ARS,MRS ) ) ,( RRS + ARS ) ) ) - MRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( Max( MLU,Min( MUM ,MUM ) ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) ) ) )", "obj1": 0.89272030651341, "obj2": 0.04660890238507885}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,BR ) ) ) - ( ACS / CRS ) ) ) / DDR ) ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( MLU + MUC ) ,( Min( ( DS + ( Max( ( DS - MUC ),MUC ) - MLU ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUC + RRSe ) ) ) ) ) + MLU ) ) )", "obj1": 0.8850574712643678, "obj2": 0.04778926043701575}, {"determining": "( ( DDR / RRS ) * ( MRS - Min( DDR ,( PN - CRS ) ) ) )", "choosing": "( ( RMSe / MLU ) * Min( Max( CS,( ( MLU - Min( MUC ,MUM ) ) / Min( ( Min( DS ,DS ) / ( ( MUM - MLU ) + ( MLU + MLU ) ) ) ,RRSe ) ) ) ,RCSe ) )", "obj1": 0.8984674329501916, "obj2": 0.04541680735925762}, {"determining": "( Min( Min( Const ,FirstVNF_RAM ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( ( Max( MDR,MRS ) * ( Const - FirstVNF_RAM_Server ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( DS * ( RRSe / MUC ) ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( CS ,CS ) ) + Max( ( CS * MLU ),Min( MLU ,RRSe ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02294358845695616}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - Min( DDR ,RRS ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Max( MLU,MUR ) * ( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) * Max( MUC,RRSe ) ) )", "obj1": 0.9003831417624522, "obj2": 0.041228400260762035}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / ( ARS - RRS ) ) ,( FirstVNF_CPU / ( ( BR / FirstVNF_Mem_Server ) / BR ) ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Min( Min( Min( ( DS / MUR ) ,Min( Min( RRSe ,MUC ) ,MLU ) ) ,MUR ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09216833864964138}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * ( AMS * Const ) ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,Max( MLU,CS ) ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / ( RCSe / DS ) ) )", "obj1": 0.7471264367816092, "obj2": 0.10431811036909899}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( ( PN / ( ( DDR + ( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( AMS * PN ) ) - ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( Min( MUM ,RMSe ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM - MLU ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.8563218390804598, "obj2": 0.05884762206039854}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( MUR ,RMSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8275862068965517, "obj2": 0.06784178596448646}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( RMSe,RCSe ) - ( MUM / Min( ( Min( CS ,MUR ) / ( Min( ( ( RRSe - MLU ) - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) )", "obj1": 0.7969348659003831, "obj2": 0.08494484545803478}, {"determining": "( ( PN * ( ( Min( ( FirstVNF_CPU / ARS ) ,Max( MDR,MRS ) ) / DDR ) - Max( ( ( DDR - Max( PN,( MDR - MRS ) ) ) * FirstVNF_Mem ),( FirstVNF_CPU / ACS ) ) ) ) - ( Max( MRS,RRS ) + Const ) )", "choosing": "( ( ( MUR * MUM ) - MUM ) * Min( ( ( ( RCSe / CS ) - Max( MUR,Min( RCSe ,MUM ) ) ) - ( Min( ( MUC + ( RMSe + ( MLU - MLU ) ) ) ,MUR ) + RCSe ) ) ,DS ) )", "obj1": 0.9195402298850575, "obj2": 0.03543588289950716}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( RRS + MRS ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU + Max( ( Max( Const,AMS ) / DDR ),RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Max( ( MUM - MLU ),( MLU * MUR ) )", "obj1": 0.9674329501915708, "obj2": 0.013362984029338543}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( Max( Max( ( CRS * ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( AMS * ( ( FirstVNF_Mem_Server - Max( AMS,( BR - ARS ) ) ) * FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM - MRS ) ) - ( ACS * PN ) )", "choosing": "( ( RCSe + Min( MUM ,( Max( MUR,( DS * ( ( RRSe / MUM ) / RMSe ) ) ) + Min( Max( MUM,MUC ) ,MUC ) ) ) ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.014300928987263558}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( Max( PN,( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,MDR ) + ( BR * ( AMS - FirstVNF_Mem_Server ) ) ) - ( Min( ACS ,( Max( DDR,ARS ) / FirstVNF_RAM ) ) / ( AMS / MDR ) ) ) ) - ( ARS + ARS ) )", "choosing": "( ( CS - RCSe ) - Max( RRSe,Max( Max( RCSe,MUC ),( ( DS * Min( DS ,( RMSe - ( MLU / MLU ) ) ) ) - RRSe ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.09479477959911128}, {"determining": "( ( ( FirstVNF_Mem / ( Min( DDR ,( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Min( ( RRS / FirstVNF_CPU ) ,ARS ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem / Const ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / FirstVNF_CPU ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RRSe / ( MLU * ( Min( MLU ,( RCSe * RMSe ) ) / MUR ) ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}, {"determining": "( ( ( ( Min( MRS ,ARS ) / ARS ) - ( MDR - ( AMS - Min( ( FirstVNF_Mem / Max( ACS,Const ) ) ,FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) / ( DDR / ( ( Max( FirstVNF_RAM_Server,BR ) - AMS ) - ( RRS * MRS ) ) ) )", "choosing": "( Min( ( RCSe / MLU ) ,( MUC / RCSe ) ) - ( ( RMSe - ( ( ( ( DS / MUR ) * Max( DS,DS ) ) + ( Max( RRSe,( RCSe / MUR ) ) + Min( MUM ,MUC ) ) ) * CS ) ) + DS ) )", "obj1": 0.9482758620689655, "obj2": 0.017022162412219176}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( MLU + RMSe ) ) ) + ( Max( ( RCSe / DS ),( RRSe / CS ) ) + ( ( MUM * MUR ) / ( ( ( MLU - MUM ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.789272030651341, "obj2": 0.09216391804349841}, {"determining": "( ( PN * ( ( Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) / DDR ) - Min( ( CRS + FirstVNF_CPU_Server ) ,AMS ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,( RMSe + MUM ) ) * ( RMSe - RMSe ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU * ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),Min( Max( Min( ( ( MUC * ( RRSe / RMSe ) ) - RRSe ) ,( RRSe + Min( RCSe ,MUR ) ) ),RMSe ) ,( CS + CS ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( MUR,Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.7950191570881227, "obj2": 0.0883110238164786}, {"determining": "( ( ( BR / ( Const * DDR ) ) / ( Min( Const ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_RAM ,DDR ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Const )", "choosing": "Max( DS,( RRSe + ( DS / Min( MUC ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.24497932868220526}, {"determining": "( ( ( PN * ACS ) * FirstVNF_RAM ) - ( FirstVNF_Mem_Server / RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / MLU ),Max( MUR,MUC ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / Min( MUM ,RMSe ) ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.1278763735059606}, {"determining": "( ( FirstVNF_RAM - ( ARS - ( MDR * ( ( ARS / AMS ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU + Max( MDR,AMS ) ) ) ) ) ) ) / ( BR / ( ( RRS - CRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUR ,( MUC * ( MUM * ( ( CS - MUR ) / RCSe ) ) ) ) - RCSe ) - Max( MLU,MUM ) )", "obj1": 0.60727969348659, "obj2": 0.265158671096573}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) * DDR ) ,Const ) ,MRS ) + MRS ) )", "choosing": "( ( MUM - ( DS * MUR ) ) - ( ( MUR - Min( RCSe ,( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) ) ) - MUR ) )", "obj1": 0.9042145593869731, "obj2": 0.03885107597826928}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( ( PN * ( ( Min( ACS ,( Const + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) / ( AMS - ( MRS - DDR ) ) ) - ( FirstVNF_Mem * ( Min( ( ACS + FirstVNF_Mem ) ,( ARS / FirstVNF_CPU ) ) / DDR ) ) ) ) - ( Const / MRS ) )", "choosing": "( Max( Min( ( Max( ( MLU * MUM ),DS ) / ( CS * DS ) ) ,Min( ( RRSe * RRSe ) ,MLU ) ),Min( MUM ,MUM ) ) * Min( ( ( Min( Min( MUC ,MUR ) ,RMSe ) / Min( ( ( ( MLU - MUR ) / MUM ) / RRSe ) ,( RCSe - DS ) ) ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) ,( DS + RCSe ) ) )", "obj1": 0.921455938697318, "obj2": 0.03230081516205744}, {"determining": "( Max( ( PN / FirstVNF_RAM ),FirstVNF_Mem ) - ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,( Min( CS ,CS ) / ( MUM / MLU ) ) ) ) / CS ) - ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) - ( CS / CS ) ) ) / ( ( Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) + RRSe ) * Min( MLU ,RMSe ) ) ) / Min( Min( RCSe ,MUM ) ,MUR ) )", "obj1": 0.9272030651340997, "obj2": 0.02925872671857499}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7432950191570882, "obj2": 0.10632516232713152}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( FirstVNF_CPU - ( ACS - ( Const - ( MRS * FirstVNF_Mem ) ) ) ) - ( MRS - Min( ( ( AMS - FirstVNF_RAM ) - ARS ) ,ACS ) ) )", "choosing": "( ( MUM - ( DS * ( CS - MUR ) ) ) - ( ( Min( RCSe ,Max( ( ( Min( RRSe ,CS ) + MUC ) * ( RCSe * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) - MUR ) - Min( Min( Max( Max( DS,DS ),Max( RRSe,( MUM + ( MLU / MLU ) ) ) ) ,MLU ) ,RRSe ) ) )", "obj1": 0.9061302681992337, "obj2": 0.03810099920863667}, {"determining": "( ( RRS - MRS ) - ( ( ARS * CRS ) / ( ( ACS + Const ) / ( ARS + ( FirstVNF_CPU / ARS ) ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,( Max( CS,( ( MUC - MUM ) - ( RMSe * MLU ) ) ) * MUM ) ) - ( MUC * RMSe ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RMSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.054793439817137767}, {"determining": "( ( Max( PN,( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( MRS * FirstVNF_Mem_Server ) / ARS ) )", "choosing": "( ( Max( MUC,( RCSe + ( Max( ( RMSe / ( MLU + MUM ) ),( DS - MUC ) ) / RCSe ) ) ) - DS ) / Max( ( Max( Max( ( MLU - CS ),Max( MLU,( Min( DS ,CS ) - Min( RRSe ,CS ) ) ) ),MUR ) * ( Max( ( RMSe - Max( CS,MUM ) ),( RRSe - Max( DS,RRSe ) ) ) * ( Min( DS ,Max( CS,MUC ) ) - RMSe ) ) ),( Max( RMSe,MLU ) * Min( MLU ,RRSe ) ) ) )", "obj1": 0.8697318007662835, "obj2": 0.054461537115459056}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.603448275862069, "obj2": 0.2697155565183963}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / CRS ) ) / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + ( FirstVNF_Mem_Server * PN ) ) )", "choosing": "( ( ( ( ( Max( RCSe,MUC ) / MUM ) / CS ) - ( CS + DS ) ) / CS ) * ( RRSe + ( Max( ( ( MLU * Max( MUR,RMSe ) ) * MUR ),RMSe ) / MLU ) ) )", "obj1": 0.9846743295019157, "obj2": 0.004763226325240704}, {"determining": "( ( ( PN / ( Min( DDR ,( AMS + ACS ) ) - ( Const / Min( ( Const + FirstVNF_CPU_Server ) ,PN ) ) ) ) * ( PN * AMS ) ) - ( BR + ARS ) )", "choosing": "( Max( CS,( RMSe * RCSe ) ) / ( Max( MUR,( ( MUM + MLU ) - Max( CS,( ( DS - ( MUR - MUR ) ) * Min( CS ,Max( CS,MUR ) ) ) ) ) ) * ( RMSe + MLU ) ) )", "obj1": 0.8582375478927203, "obj2": 0.05616774957219342}, {"determining": "( ( PN * ( ( Min( FirstVNF_CPU_Server ,( Min( ACS ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( Min( MLU ,RRSe ),RRSe ) * ( RRSe - RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004334454779699649}, {"determining": "( ( Const + Max( ( MRS - FirstVNF_CPU ),FirstVNF_RAM_Server ) ) - ( Min( CRS ,ARS ) - ( ( Min( ACS ,( Min( PN ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) / ARS ) ) * ACS ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RCSe * DS ) / ( MUM * MUC ) ) - ( ( Min( MUR ,MUC ) + MLU ) - ( RMSe + ( MLU * MUC ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.007380911964598459}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / Max( ARS,RRS ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031377048761481216}, {"determining": "( ( PN - ( ( Min( ( Const + Max( MDR,MDR ) ) ,ACS ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) * Max( Min( ( Max( ( MLU * ( Min( MUM ,RRSe ) + Max( CS,RCSe ) ) ),DS ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) )", "obj1": 0.7911877394636015, "obj2": 0.09058619436394133}, {"determining": "( ( PN * ( ( Min( ACS ,( PN + ( FirstVNF_CPU_Server / DDR ) ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( Min( ( ( ( CS + MUR ) / MUR ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.7931034482758621, "obj2": 0.08982857373846535}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( Const * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( PN / FirstVNF_RAM_Server ) ) ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,Min( RRSe ,MUR ) ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * MLU ),( ( CS + MUR ) / MUR ) ) )", "obj1": 0.9731800766283525, "obj2": 0.009885304200653896}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * DDR ) / ( Min( ( PN + FirstVNF_RAM_Server ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server * BR ) ) ) / DDR ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( MUC ,( Max( RMSe,RCSe ) / MLU ) ) ,( CS / CS ) ) ) / ( ( MUC / ( RCSe / RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( CS * MLU ) * ( MUC / MUM ) ) / ( MUR + RCSe ) ) )", "obj1": 0.9252873563218391, "obj2": 0.029794250069530768}, {"determining": "( ( ( ( AMS / ARS ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( DDR * MDR ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( ( MLU * MUR ),Min( MUM ,CS ) ) + ( Max( MUM,( ( DS - CS ) * RCSe ) ) / Max( ( Min( RCSe ,MUC ) - RCSe ),( Min( ( RCSe + MUC ) ,( Max( RCSe,MUM ) + MUM ) ) - MUR ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.26660572008838096}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( FirstVNF_Mem_Server + ( ( FirstVNF_Mem_Server / CRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( MLU - RRSe ),RRSe ) / Max( ( Min( RRSe ,MLU ) + CS ),( ( CS + CS ) * ( MUR / CS ) ) ) )", "obj1": 0.9712643678160919, "obj2": 0.011300876977994133}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( DDR / RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.1278763735059606}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ( RRS - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ),RRS ) ) ,( FirstVNF_CPU / ( Min( Max( MDR,MRS ) ,( DDR + DDR ) ) / DDR ) ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( RRSe,( ( RCSe / CS ) - DS ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / ( FirstVNF_CPU / ARS ) ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( ( ( RCSe * DS ) / ( MUM * MUC ) ) - Min( RMSe ,MUC ) ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0018702749829372766}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( FirstVNF_Mem_Server + ( ( FirstVNF_Mem_Server / CRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( MLU - RRSe ),RRSe ) / Max( ( Min( RRSe ,MLU ) + CS ),( ( CS + CS ) * ( MUR / CS ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.009145813855988397}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,PN ) + ( FirstVNF_CPU_Server / DDR ) ) / ( Const + ACS ) ) / ( FirstVNF_Mem_Server - MDR ) ) - Max( Max( FirstVNF_CPU_Server,RRS ),( ACS * Const ) ) )", "choosing": "Max( DS,Max( MLU,Min( ( ( ( Min( RMSe ,Min( RMSe ,DS ) ) / CS ) / ( Min( Min( MUR ,MUR ) ,( MUR - MUC ) ) / RRSe ) ) + RRSe ) ,MUR ) ) )", "obj1": 0.9923371647509579, "obj2": 0.003034521492588617}, {"determining": "( ( ( PN / ( Min( ( MDR / MRS ) ,( FirstVNF_CPU / ARS ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( Max( MRS,CRS ) - AMS ) )", "choosing": "( Max( ( RCSe - RRSe ),( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( MUM / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ) / Max( ( ( MUR * ( CS + ( RMSe + MUC ) ) ) - RRSe ),( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10705437249205116}, {"determining": "( Max( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ),( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,Max( FirstVNF_Mem,FirstVNF_CPU ) ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / Min( Max( MUR,( Min( ( RMSe * MLU ) ,CS ) * DS ) ) ,MUM ) ) ) / ( Max( Max( MUC,RRSe ),MLU ) * Min( MLU ,RRSe ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013885514627326931}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - ( RRS + FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( ARS * CRS ) / ( DDR / Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_RAM - PN ) + Min( DDR ,BR ) ) ) ) ,Max( FirstVNF_CPU,Min( FirstVNF_RAM ,( DDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RRSe ,( ( RRSe / Max( RRSe,RRSe ) ) * RCSe ) ) / CS ) * MUR ),( ( MUR * RCSe ) - RRSe ) ) / ( ( RRSe - RCSe ) - ( ( MUM + Min( RMSe ,( DS - Min( MUR ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10768261949220766}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( MLU,Min( MUM ,RRSe ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) )", "obj1": 0.9770114942528736, "obj2": 0.008347582809778101}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( CS * MUR ) - RRSe ) - ( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.7394636015325671, "obj2": 0.1076341606392029}, {"determining": "( Min( Min( FirstVNF_RAM ,Const ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( DS * RRSe ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.9693486590038314, "obj2": 0.01163136178849157}, {"determining": "( ( ( Min( DDR ,AMS ) / ( BR * Min( Max( ( ( FirstVNF_RAM_Server / PN ) - FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * AMS ) ) ) ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,ACS ) ) ) ) ) - ( MDR - ( ( BR + ( Const / FirstVNF_Mem_Server ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MLU + CS ),Max( ( Min( ( RMSe / RMSe ) ,Max( DS,RCSe ) ) * Max( RRSe,CS ) ),Min( MUM ,MUR ) ) )", "obj1": 0.603448275862069, "obj2": 0.2697155565183963}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003388263960737056}, {"determining": "( ( ( PN / ( Min( DDR ,( ARS * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( Max( DS,MUR ) - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.054793439817137767}], "19": [{"determining": "( ( PN * ( ( Min( ACS ,( ( ( BR * Const ) / DDR ) + PN ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,( RRS * ACS ) ) ) ) ) ) + MRS ) )", "choosing": "( Max( Min( ( ( ( CS / MUR ) / MUR ) / ( CS * MUC ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( ( ( MLU - RCSe ) + ( Max( RRSe,CS ) + RCSe ) ) + Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( ( Min( ACS ,( ( ( BR * Const ) / DDR ) + PN ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,( RRS * ACS ) ) ) ) ) ) + MRS ) )", "choosing": "( Max( Min( ( ( ( CS / MUR ) / MUR ) / ( CS * MUC ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( ( ( MLU - RCSe ) + ( Max( RRSe,CS ) + RCSe ) ) + Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( PN * ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - ( Min( ( DDR + FirstVNF_RAM ) ,( ( Max( PN,FirstVNF_CPU_Server ) + RRS ) / FirstVNF_Mem ) ) - Max( MDR,ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUR - MUC ) - Min( ( DS + RMSe ) ,Min( ( Max( Min( ( RRSe - DS ) ,Min( MUR ,RMSe ) ),DS ) / ( CS / DS ) ) ,( CS * DS ) ) ) )", "obj1": 0.685823754789272, "obj2": 0.16420160007809295}, {"determining": "( ( PN * ( ( ( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU / PN ) ) / Max( FirstVNF_RAM_Server,ACS ) ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) )", "choosing": "Max( DS,( Max( ( ( RMSe - MUM ) + ( DS * RRSe ) ),MUR ) + MUR ) )", "obj1": 0.6302681992337165, "obj2": 0.22401089900036808}, {"determining": "( ( ARS * ( ( ( Const / Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ARS ),MDR ) ) - ARS ) / CRS ) ) - ( DDR / ( ( FirstVNF_Mem_Server - MDR ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * MLU ) + ( DS - DS ) )", "obj1": 0.6590038314176245, "obj2": 0.178491082402923}, {"determining": "( ( ( Min( DDR ,DDR ) / ( ACS * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) - ( Min( ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - MDR ) ,BR ) * ( DDR * ( RRS / ( PN / FirstVNF_RAM ) ) ) ) ) - Max( ( FirstVNF_RAM / ( ( Const - MRS ) / CRS ) ),Min( ( ( AMS + ( FirstVNF_Mem - DDR ) ) * ( Const + MDR ) ) ,BR ) ) )", "choosing": "Min( ( ( Min( ( ( RMSe - ( RRSe * MUR ) ) * DS ) ,( MUR + RRSe ) ) + CS ) + MUM ) ,( RMSe / MUC ) )", "obj1": 0.6513409961685823, "obj2": 0.213748908315404}, {"determining": "( ( ( ( ( Const / FirstVNF_RAM ) - MRS ) / CRS ) * ARS ) - ( DDR / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RRSe,DS ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,MUM ) ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6551724137931034, "obj2": 0.19355484030227732}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,ARS ) ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( MUR - MLU ) ) * Max( Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,DS ),( CS / RMSe ) ) )", "obj1": 0.6283524904214559, "obj2": 0.24884824936832975}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( Min( ( ( ( CS + MUR ) / MUR ) / ( CS * MUC ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * CS ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7183908045977011, "obj2": 0.11755398824210513}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,( MDR + Min( DDR ,BR ) ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,Min( RMSe ,RMSe ) ) / CS ) * MUR ) ) )", "obj1": 0.5881226053639846, "obj2": 0.279233185878392}, {"determining": "( ( ( PN / ( Min( DDR ,( AMS + ACS ) ) - ( Const / Min( ( Const + FirstVNF_CPU_Server ) ,PN ) ) ) ) * ( PN * AMS ) ) - ( BR + ARS ) )", "choosing": "( Max( CS,( RMSe * RCSe ) ) / ( Max( MUR,( ( MUM + MLU ) - Max( CS,( ( DS - ( MUR - MUR ) ) * Min( CS ,Max( CS,MUR ) ) ) ) ) ) * ( RMSe + MLU ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07273979488214789}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / DS ) ),MLU ) )", "obj1": 0.8716475095785441, "obj2": 0.05323232519037305}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS - ( ( MDR + FirstVNF_CPU ) * Const ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( ( ( ( RCSe - RMSe ) - ( CS + MUR ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7068965517241379, "obj2": 0.1219817746300119}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( ( Min( DDR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,MRS ) ) / PN ) * ( PN * AMS ) ) - ( ( ARS * CRS ) * ARS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * Max( ( MUR / RCSe ),( MUR - ( ( DS / RMSe ) - RMSe ) ) ) ) )", "obj1": 0.8793103448275862, "obj2": 0.0484716414613445}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / Min( ACS ,( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / ACS ) ) ) ) - ( CRS + Max( ACS,FirstVNF_CPU ) ) )", "choosing": "( ( MUM * Min( ( Min( CS ,( RRSe - RRSe ) ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUM ) ) / RRSe ) ) ,MLU ) ) - Max( RMSe,RCSe ) )", "obj1": 0.814176245210728, "obj2": 0.07885431561266426}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( Min( Min( Const ,FirstVNF_RAM ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( ( Max( MDR,MRS ) * ( Const - FirstVNF_RAM_Server ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( DS * ( RRSe / MUC ) ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( CS ,CS ) ) + Max( ( CS * MLU ),Min( MLU ,RRSe ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02294358845695616}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7586206896551724, "obj2": 0.09892077558141045}, {"determining": "( ( MRS * Max( RRS,( Const * BR ) ) ) - ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU * ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( ( ( Max( MLU,RCSe ) * ( RMSe * RMSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( ( ( RCSe / DS ) + Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Min( MUR ,CS ) ) / CS ) - ( MLU / Max( RMSe,MUM ) ) ) ) ) )", "obj1": 0.6973180076628352, "obj2": 0.1282697390501788}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( DS + CS ) ),CS ) * ( ( MLU + MUC ) - ( MUM + MUR ) ) )", "obj1": 0.8122605363984674, "obj2": 0.0833235374187242}, {"determining": "( ( ( ( FirstVNF_RAM_Server / AMS ) / ( ACS * Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / ( DDR / FirstVNF_CPU ) ) ) ) / ( FirstVNF_RAM_Server + Min( RRS ,( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( ( FirstVNF_CPU + CRS ) * Max( ( Max( FirstVNF_CPU_Server,( ARS - MRS ) ) - ( ( FirstVNF_CPU + ACS ) * Const ) ),DDR ) ) )", "choosing": "Max( Min( ( MLU + Min( Max( RCSe,RRSe ) ,Max( ( ( ( MUC / RCSe ) / ( MUR + MUR ) ) / CS ),MUR ) ) ) ,( DS + RMSe ) ),( MUR * MUR ) )", "obj1": 0.6149425287356322, "obj2": 0.25842958121011594}, {"determining": "( Max( MRS,( ( RRS / Const ) - ACS ) ) * ( ( ( RRS * Const ) * Max( Max( MDR,FirstVNF_RAM ),AMS ) ) + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) * ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( ( ( MLU * CS ) + DS ) + ( MUR - Max( DS,RCSe ) ) ) - ( MUR - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.25364511381513893}, {"determining": "( ( PN * ( Min( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ,DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( MLU,Min( Min( ( MUM / RCSe ) ,( MLU - ( ( MUC - ( RCSe + DS ) ) / MLU ) ) ) ,MUR ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08367716071402338}, {"determining": "( ( ( ( ACS + Const ) / Min( DDR ,AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( ( ( ARS / CRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - ( ( ACS / RRS ) + MDR ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),MLU ) )", "obj1": 0.6091954022988506, "obj2": 0.26211943262807524}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * PN ) - ( ( Min( Const ,FirstVNF_RAM ) / MRS ) + MRS ) )", "choosing": "( ( ( RCSe * MUC ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,( MUM / MUC ) ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03613553823966046}, {"determining": "( ( Min( ( MRS - ( ( FirstVNF_Mem_Server / ACS ) * FirstVNF_CPU ) ) ,ACS ) * ( ACS / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ARS - CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,Min( ( CS + MLU ) ,MUR ) ) ) * ( MUM / MUM ) ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( RRSe / ( RCSe * ( MLU - DS ) ) ) + CS ) ) ),Min( ( RCSe - RRSe ) ,RCSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06192611889944147}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Min( ACS ,( ( ACS + MDR ) * CRS ) ) / FirstVNF_RAM ) ) ) * ( ACS * PN ) ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( RRSe,Min( MUM ,( ( MUR / ( ( DS - DS ) - Min( ( RRSe + RCSe ) ,MUC ) ) ) / DS ) ) ) )", "obj1": 0.8908045977011494, "obj2": 0.0452254543363314}, {"determining": "( ( ( ( Min( MRS ,ARS ) / ARS ) - ( MDR - ( AMS - Min( ( FirstVNF_Mem / Max( ACS,Const ) ) ,FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) / ( DDR / ( ( Max( FirstVNF_RAM_Server,BR ) - AMS ) - ( RRS * MRS ) ) ) )", "choosing": "( Min( ( RCSe / MLU ) ,( MUC / RCSe ) ) - ( ( RMSe - ( ( ( ( DS / MUR ) * Max( DS,DS ) ) + ( Max( RRSe,( RCSe / MUR ) ) + Min( MUM ,MUC ) ) ) * CS ) ) + DS ) )", "obj1": 0.9482758620689655, "obj2": 0.017022162412219176}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.8831417624521073, "obj2": 0.047112784430687046}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( ( PN / ( ( PN * FirstVNF_CPU_Server ) - Min( DDR ,RRS ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) - ARS ) )", "choosing": "( Max( MLU,CS ) * ( Min( Max( RMSe,Max( Min( RMSe ,( MLU / RRSe ) ),RRSe ) ) ,CS ) * Max( MUC,RRSe ) ) )", "obj1": 0.8946360153256705, "obj2": 0.043589543420656025}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / ( ARS - RRS ) ) ,( FirstVNF_CPU / ( ( BR / FirstVNF_Mem_Server ) / BR ) ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Min( Min( Min( ( DS / MUR ) ,Min( Min( RRSe ,MUC ) ,MLU ) ) ,MUR ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09216833864964138}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * ( AMS * Const ) ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,Max( MLU,CS ) ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / ( RCSe / DS ) ) )", "obj1": 0.7471264367816092, "obj2": 0.10431811036909899}, {"determining": "( ( ( PN / ( Min( MDR ,ARS ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( Min( ACS ,Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,( DDR * ARS ) ) ) ) / DDR ) / ( ARS * CRS ) ) )", "choosing": "Min( Max( MUR,RCSe ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.7145593869731801, "obj2": 0.12057388607392726}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( ARS - PN ) ) - ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,RRS ) ) ) / ( MRS + ( AMS * FirstVNF_Mem ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "Max( DS,Max( ( ( MLU + MUR ) + ( MUR + Max( DS,RRSe ) ) ),Max( ( ( MLU + ( MLU - ( ( RMSe / MUC ) * ( MUR + MLU ) ) ) ) + ( RMSe - CS ) ),MUM ) ) )", "obj1": 0.8486590038314177, "obj2": 0.05965784373145887}, {"determining": "( ( PN * ( ( Min( ( FirstVNF_CPU / ARS ) ,Max( MDR,MRS ) ) / DDR ) - Max( ( ( DDR - Max( PN,( MDR - MRS ) ) ) * FirstVNF_Mem ),( FirstVNF_CPU / ACS ) ) ) ) - ( Max( MRS,RRS ) + Const ) )", "choosing": "( ( ( MUR * MUM ) - MUM ) * Min( ( ( ( RCSe / CS ) - Max( MUR,Min( RCSe ,MUM ) ) ) - ( Min( ( MUC + ( RMSe + ( MLU - MLU ) ) ) ,MUR ) + RCSe ) ) ,DS ) )", "obj1": 0.9195402298850575, "obj2": 0.03543588289950716}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( MUR ,RMSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8275862068965517, "obj2": 0.06784178596448646}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( RMSe,RCSe ) - ( MUM / Min( ( Min( CS ,MUR ) / ( Min( ( ( RRSe - MLU ) - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) )", "obj1": 0.7969348659003831, "obj2": 0.08494484545803478}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( DDR / RRS ) )", "choosing": "( Min( ( Max( ( MUM * DS ),( CS + MUM ) ) / Max( ( MUR - MUR ),( ( RRSe * MUC ) - MUR ) ) ) ,MLU ) * Min( ( RRSe * CS ) ,( Max( MLU,Min( MUM ,MUM ) ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) ) ) )", "obj1": 0.7030651340996169, "obj2": 0.12774482302618112}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( RRS + MRS ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU + Max( ( Max( Const,AMS ) / DDR ),RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Max( ( MUM - MLU ),( MLU * MUR ) )", "obj1": 0.9674329501915708, "obj2": 0.013362984029338543}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - Min( DDR ,RRS ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Max( MLU,MUR ) * ( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) * Max( MUC,RRSe ) ) )", "obj1": 0.9003831417624522, "obj2": 0.041228400260762035}, {"determining": "( ( ( PN + ( Min( DDR ,FirstVNF_CPU_Server ) - ( Max( RRS,( DDR + DDR ) ) * ( RRS * ( FirstVNF_CPU + ( FirstVNF_CPU + PN ) ) ) ) ) ) * ( PN * AMS ) ) - ( ( FirstVNF_RAM * Const ) * FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( ( MUR * ( MLU - Max( ( CS + MUC ),( MUC - MUR ) ) ) ) + MUR ) / MUR ) ) )", "obj1": 0.7662835249042146, "obj2": 0.0984690651236629}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / MLU ),Max( MUR,MUC ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / Min( MUM ,RMSe ) ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9808429118773946, "obj2": 0.007374214181222381}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( Max( Max( ( CRS * ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( AMS * ( ( FirstVNF_Mem_Server - Max( AMS,( BR - ARS ) ) ) * FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM - MRS ) ) - ( ACS * PN ) )", "choosing": "( ( RCSe + Min( MUM ,( Max( MUR,( DS * ( ( RRSe / MUM ) / RMSe ) ) ) + Min( Max( MUM,MUC ) ,MUC ) ) ) ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.014300928987263558}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( Max( PN,( ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,MDR ) + ( BR * ( AMS - FirstVNF_Mem_Server ) ) ) - ( Min( ACS ,( Max( DDR,ARS ) / FirstVNF_RAM ) ) / ( AMS / MDR ) ) ) ) - ( ARS + ARS ) )", "choosing": "( ( CS - RCSe ) - Max( RRSe,Max( Max( RCSe,MUC ),( ( DS * Min( DS ,( RMSe - ( MLU / MLU ) ) ) ) - RRSe ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.09479477959911128}, {"determining": "( ( ( FirstVNF_Mem / ( Min( DDR ,( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Min( ( RRS / FirstVNF_CPU ) ,ARS ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem / Const ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / FirstVNF_CPU ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RRSe / ( MLU * ( Min( MLU ,( RCSe * RMSe ) ) / MUR ) ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}, {"determining": "( ( ARS * Const ) - Max( ( ARS * CRS ),( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "Max( ( ( Min( ( ( ( RRSe - ( RMSe + MUM ) ) / ( MUR * CS ) ) - DS ) ,( CS * MUR ) ) + ( RMSe / Max( ( MUM / DS ),( RMSe * CS ) ) ) ) - MUR ),( MUM - MLU ) )", "obj1": 0.7701149425287356, "obj2": 0.09776604236134492}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( CRS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( MUR ,RMSe ),( ( CS + Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,( CS / CS ) ) ) * MUR ) ) )", "obj1": 0.8390804597701149, "obj2": 0.06459253847903337}, {"determining": "( ( ( RRS * Min( FirstVNF_RAM_Server ,RRS ) ) * ( AMS * PN ) ) - ( ( FirstVNF_RAM * CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RCSe ,( ( CS / Max( ( MUC / ( RRSe - RMSe ) ),RRSe ) ) * RCSe ) ) * Min( RCSe ,MUR ) ) * Max( MLU,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09538539851668557}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( MLU + RMSe ) ) ) + ( Max( ( RCSe / DS ),( RRSe / CS ) ) + ( ( MUM * MUR ) / ( ( ( MLU - MUM ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.789272030651341, "obj2": 0.09216391804349841}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( ( ( ( Max( RCSe,MUC ) / MUM ) / CS ) - ( CS + DS ) ) / CS ) * ( RRSe + ( Max( ( ( MLU * Max( MUR,RMSe ) ) * MUR ),RMSe ) / MLU ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - Min( DDR ,( ARS * Max( ( FirstVNF_RAM + ARS ),FirstVNF_CPU ) ) ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ARS - ( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( ( CS - ( Max( DS,MUR ) - ( RMSe * MUC ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( Min( MUR ,RMSe ) - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8639846743295019, "obj2": 0.053852748591532995}, {"determining": "( ( ( PN / ( Min( DDR ,( AMS + ACS ) ) - ( Const / Min( ( Const + FirstVNF_CPU_Server ) ,PN ) ) ) ) * ( PN * AMS ) ) - ( BR + ARS ) )", "choosing": "( Max( CS,( RMSe * RCSe ) ) / ( Max( MUR,( ( MUM + MLU ) - Max( CS,( ( DS - ( MUR - MUR ) ) * Min( CS ,Max( CS,MUR ) ) ) ) ) ) * ( RMSe + MLU ) ) )", "obj1": 0.8582375478927203, "obj2": 0.05616774957219342}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( MUR,Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.7950191570881227, "obj2": 0.0883110238164786}, {"determining": "( ( ( PN / ( ( DDR + ( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( AMS * PN ) ) - ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( Min( MUM ,RMSe ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM - MLU ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.8563218390804598, "obj2": 0.05884762206039854}, {"determining": "( ( ( ( AMS / ARS ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( DDR * MDR ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( ( MLU * MUR ),Min( MUM ,CS ) ) + ( Max( MUM,( ( DS - CS ) * RCSe ) ) / Max( ( Min( RCSe ,MUC ) - RCSe ),( Min( ( RCSe + MUC ) ,( Max( RCSe,MUM ) + MUM ) ) - MUR ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.26660572008838096}, {"determining": "( ( FirstVNF_RAM - ( ARS - ( MDR * ( ( ARS / AMS ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU + Max( MDR,AMS ) ) ) ) ) ) ) / ( BR / ( ( RRS - CRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUR ,( MUC * ( MUM * ( ( CS - MUR ) / RCSe ) ) ) ) - RCSe ) - Max( MLU,MUM ) )", "obj1": 0.60727969348659, "obj2": 0.265158671096573}, {"determining": "( ( ( BR / ( Const * DDR ) ) / ( Min( Const ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_RAM ,DDR ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Const )", "choosing": "Max( DS,( RRSe + ( DS / Min( MUC ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( Min( MRS ,MRS ) - ( ( Min( ACS ,( FirstVNF_CPU / Max( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),DDR ),RRS ) ) ) / DDR ) + ( ARS * CRS ) ) )", "choosing": "( ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) / ( ( ( ( MUM / Max( RCSe,MUC ) ) + CS ) - Min( Min( ( Max( RMSe,Max( RRSe,DS ) ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) )", "obj1": 0.921455938697318, "obj2": 0.031942864825938916}, {"determining": "( Max( ( PN / FirstVNF_RAM ),FirstVNF_Mem ) - ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,( Min( CS ,CS ) / ( MUM / MLU ) ) ) ) / CS ) - ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) - ( CS / CS ) ) ) / ( ( Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) + RRSe ) * Min( MLU ,RMSe ) ) ) / Min( Min( RCSe ,MUM ) ,MUR ) )", "obj1": 0.9272030651340997, "obj2": 0.02925872671857499}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( CS - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7432950191570882, "obj2": 0.10632516232713152}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( FirstVNF_CPU - ( ACS - ( Const - ( MRS * FirstVNF_Mem ) ) ) ) - ( MRS - Min( ( ( AMS - FirstVNF_RAM ) - ARS ) ,ACS ) ) )", "choosing": "( ( MUM - ( DS * ( CS - MUR ) ) ) - ( ( Min( RCSe ,Max( ( ( Min( RRSe ,CS ) + MUC ) * ( RCSe * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) - MUR ) - Min( Min( Max( Max( DS,DS ),Max( RRSe,( MUM + ( MLU / MLU ) ) ) ) ,MLU ) ,RRSe ) ) )", "obj1": 0.9061302681992337, "obj2": 0.03810099920863667}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,MDR ) ,( Min( FirstVNF_RAM_Server ,AMS ) / ARS ) ) / DDR ) - ( FirstVNF_CPU + PN ) ) ) - ( CRS + MRS ) )", "choosing": "( ( ( RCSe / ( ( MUM / MLU ) + ( RCSe + ( ( DS + DS ) * ( MUM / MUM ) ) ) ) ) * MUM ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.8524904214559387, "obj2": 0.05961251885984779}, {"determining": "( Max( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ),( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,Max( FirstVNF_Mem,FirstVNF_CPU ) ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / Min( Max( MUR,( Min( ( RMSe * MLU ) ,CS ) * DS ) ) ,MUM ) ) ) / ( Max( Max( MUC,RRSe ),MLU ) * Min( MLU ,RRSe ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013885514627326931}, {"determining": "( ( ( Min( FirstVNF_RAM ,ACS ) * ( ( Min( MRS ,ACS ) + FirstVNF_CPU_Server ) / Min( ( DDR + AMS ) ,( FirstVNF_CPU - ( MDR / ( FirstVNF_CPU_Server + DDR ) ) ) ) ) ) / Min( Min( DDR ,AMS ) ,( BR * Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) - ( ( AMS + ( RRS - PN ) ) + ( Min( MDR ,FirstVNF_RAM ) - Min( ACS ,( ( ACS + MDR ) * CRS ) ) ) ) )", "choosing": "Max( ( CS + Min( Max( CS,MUM ) ,RRSe ) ),( CS - ( MUC * ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.603448275862069, "obj2": 0.2697155565183963}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( MLU,Min( MUM ,RRSe ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) )", "obj1": 0.9770114942528736, "obj2": 0.008347582809778101}, {"determining": "( ( ( ARS / ( Min( ( AMS * FirstVNF_CPU ) ,Const ) / ( Const / FirstVNF_RAM ) ) ) * ( AMS * RRS ) ) - ( ( MRS + AMS ) + FirstVNF_Mem ) )", "choosing": "( ( MUC * CS ) * ( Min( Min( RRSe ,CS ) ,MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.7164750957854407, "obj2": 0.11813242538030118}, {"determining": "( Min( Min( FirstVNF_RAM ,Const ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( DS * RRSe ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.9693486590038314, "obj2": 0.01163136178849157}, {"determining": "( ( PN * ( ( Min( FirstVNF_CPU_Server ,( Min( ACS ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( Min( MLU ,RRSe ),RRSe ) * ( RRSe - RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004334454779699649}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003388263960737056}, {"determining": "( ( PN * ( ( Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) / DDR ) - Min( ( CRS + FirstVNF_CPU_Server ) ,AMS ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,( RMSe + MUM ) ) * ( RMSe - RMSe ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) * PN ) - ( Min( Min( ( Min( ACS ,( FirstVNF_CPU / ( RRS + MRS ) ) ) * DDR ) ,Const ) ,MRS ) + MRS ) )", "choosing": "( ( MUM - ( DS * MUR ) ) - ( ( RCSe - Min( RCSe ,( CS + Min( Max( MUM,( MUC + MUM ) ) ,RCSe ) ) ) ) - MUR ) )", "obj1": 0.9022988505747126, "obj2": 0.039752978136942334}, {"determining": "( ( PN - ( ( Min( ( Const + Max( MDR,MDR ) ) ,ACS ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) * Max( Min( ( Max( ( MLU * ( Min( MUM ,RRSe ) + Max( CS,RCSe ) ) ),DS ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) )", "obj1": 0.7911877394636015, "obj2": 0.09058619436394133}, {"determining": "( ( PN * ( ( Min( ACS ,( PN + ( FirstVNF_CPU_Server / DDR ) ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( Min( ( ( ( CS + MUR ) / MUR ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.7931034482758621, "obj2": 0.08982857373846535}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( FirstVNF_CPU / Max( ARS,RRS ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031377048761481216}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * DDR ) / ( Min( ( PN + FirstVNF_RAM_Server ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server * BR ) ) ) / DDR ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( MUC ,( Max( RMSe,RCSe ) / MLU ) ) ,( CS / CS ) ) ) / ( ( MUC / ( RCSe / RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( CS * MLU ) * ( MUC / MUM ) ) / ( MUR + RCSe ) ) )", "obj1": 0.9252873563218391, "obj2": 0.029794250069530768}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / FirstVNF_RAM ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Min( ( ( ( ( MUM / Max( MLU,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUR ) ) )", "obj1": 0.9712643678160919, "obj2": 0.01055941806285449}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ( RRS - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ),RRS ) ) ,( FirstVNF_CPU / ( Min( Max( MDR,MRS ) ,( DDR + DDR ) ) / DDR ) ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( RRSe,( ( RCSe / CS ) - DS ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU * ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),Min( Max( Min( ( ( MUC * ( RRSe / RMSe ) ) - RRSe ) ,( RRSe + Min( RCSe ,MUR ) ) ),RMSe ) ,( CS + CS ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( ( Min( ACS ,( FirstVNF_CPU / ARS ) ) * DDR ) ,Const ) ,MRS ) + MRS ) )", "choosing": "( ( MUM - ( DS * MUR ) ) - ( ( MUR - Min( RCSe ,( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) ) ) - MUR ) )", "obj1": 0.9042145593869731, "obj2": 0.03885107597826928}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / ( FirstVNF_CPU / ARS ) ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( ( ( RCSe * DS ) / ( MUM * MUC ) ) - Min( RMSe ,MUC ) ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0018702749829372766}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,PN ) + ( FirstVNF_CPU_Server / DDR ) ) / ( Const + ACS ) ) / ( FirstVNF_Mem_Server - MDR ) ) - Max( Max( FirstVNF_CPU_Server,RRS ),( ACS * Const ) ) )", "choosing": "Max( DS,Max( MLU,Min( ( ( ( Min( RMSe ,Min( RMSe ,DS ) ) / CS ) / ( Min( Min( MUR ,MUR ) ,( MUR - MUC ) ) / RRSe ) ) + RRSe ) ,MUR ) ) )", "obj1": 0.9923371647509579, "obj2": 0.003034521492588617}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( FirstVNF_Mem_Server + ( ( FirstVNF_Mem_Server / CRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( MLU - RRSe ),RRSe ) / Max( ( Min( RRSe ,MLU ) + CS ),( ( CS + CS ) * ( MUR / CS ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.009145813855988397}, {"determining": "( Min( Min( FirstVNF_RAM ,Const ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( Min( Max( MDR,( CRS / FirstVNF_RAM ) ) ,( FirstVNF_CPU / ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( RRSe * RRSe ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.9731800766283525, "obj2": 0.00984679406705675}, {"determining": "( ( Max( ( CRS + ( Const / ( FirstVNF_Mem / Min( FirstVNF_CPU ,PN ) ) ) ),FirstVNF_Mem ) * ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( Min( ACS ,Max( ( RRS / Const ),CRS ) ) ,( FirstVNF_RAM / AMS ) ) ) ) - ( FirstVNF_CPU - AMS ) )", "choosing": "( Max( MLU,( ( MUC / DS ) + MUM ) ) * ( MUR + ( CS * ( MUM / Max( ( DS + RCSe ),RRSe ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.004763226325240704}, {"determining": "( ( ( PN / ( Min( ( MDR / MRS ) ,( FirstVNF_CPU / ARS ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( Max( MRS,CRS ) - AMS ) )", "choosing": "( Max( ( RCSe - RRSe ),( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( MUM / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ) / Max( ( ( MUR * ( CS + ( RMSe + MUC ) ) ) - RRSe ),( ( Min( RRSe ,MLU ) + CS ) * MUC ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10705437249205116}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - ( RRS + FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( ARS * CRS ) / ( DDR / Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_RAM - PN ) + Min( DDR ,BR ) ) ) ) ,Max( FirstVNF_CPU,Min( FirstVNF_RAM ,( DDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RRSe ,( ( RRSe / Max( RRSe,RRSe ) ) * RCSe ) ) / CS ) * MUR ),( ( MUR * RCSe ) - RRSe ) ) / ( ( RRSe - RCSe ) - ( ( MUM + Min( RMSe ,( DS - Min( MUR ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10768261949220766}], "20": [{"determining": "( ( ( ( Min( ( Min( Const ,FirstVNF_Mem ) - ( ACS / FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,MRS ) ) / PN ) * ( PN * AMS ) ) - ( ( ARS * CRS ) * ARS ) )", "choosing": "( Max( MLU,MUR ) * ( MLU / ( RCSe * Max( MLU,( Min( DS ,Max( ( MUC * DS ),CS ) ) * ( MUC * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( ( Min( ACS ,( ( ( BR * Const ) / DDR ) + PN ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,( RRS * ACS ) ) ) ) ) ) + MRS ) )", "choosing": "( Max( Min( ( ( ( CS / MUR ) / MUR ) / ( CS * MUC ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( ( ( MLU - RCSe ) + ( Max( RRSe,CS ) + RCSe ) ) + Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( PN * ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - ( Min( ( DDR + FirstVNF_RAM ) ,( ( Max( PN,FirstVNF_CPU_Server ) + RRS ) / FirstVNF_Mem ) ) - Max( MDR,ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUR - MUC ) - Min( ( DS + RMSe ) ,Min( ( Max( Min( ( RRSe - DS ) ,Min( MUR ,RMSe ) ),DS ) / ( CS / DS ) ) ,( CS * DS ) ) ) )", "obj1": 0.685823754789272, "obj2": 0.16420160007809295}, {"determining": "( ( PN * ( ( ( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU / PN ) ) / Max( FirstVNF_RAM_Server,ACS ) ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) )", "choosing": "Max( DS,( Max( ( ( RMSe - MUM ) + ( DS * RRSe ) ),MUR ) + MUR ) )", "obj1": 0.6302681992337165, "obj2": 0.22401089900036808}, {"determining": "( ( ARS * ( ( ( Const / Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ARS ),MDR ) ) - ARS ) / CRS ) ) - ( DDR / ( ( FirstVNF_Mem_Server - MDR ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * MLU ) + ( DS - DS ) )", "obj1": 0.6590038314176245, "obj2": 0.178491082402923}, {"determining": "( ( ( Min( DDR ,DDR ) / ( ACS * ( ( ARS * AMS ) + ( FirstVNF_Mem / CRS ) ) ) ) - ( Min( ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - MDR ) ,BR ) * ( DDR * ( RRS / ( PN / FirstVNF_RAM ) ) ) ) ) - Max( ( FirstVNF_RAM / ( ( Const - MRS ) / CRS ) ),Min( ( ( AMS + ( FirstVNF_Mem - DDR ) ) * ( Const + MDR ) ) ,BR ) ) )", "choosing": "Min( ( ( Min( ( ( RMSe - ( RRSe * MUR ) ) * DS ) ,( MUR + RRSe ) ) + CS ) + MUM ) ,( RMSe / MUC ) )", "obj1": 0.6513409961685823, "obj2": 0.213748908315404}, {"determining": "( ( ( ( ( Const / FirstVNF_RAM ) - MRS ) / CRS ) * ARS ) - ( DDR / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RRSe,DS ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,MUM ) ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6551724137931034, "obj2": 0.19355484030227732}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( AMS / ( BR / Min( ( RRS / FirstVNF_RAM_Server ) ,( BR * Min( ( FirstVNF_Mem_Server + Const ) ,ARS ) ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( Max( RCSe,( MUR - MLU ) ) * Max( Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,DS ),( CS / RMSe ) ) )", "obj1": 0.6283524904214559, "obj2": 0.24884824936832975}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,( MDR + Min( DDR ,BR ) ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,Min( RMSe ,RMSe ) ) / CS ) * MUR ) ) )", "obj1": 0.5881226053639846, "obj2": 0.279233185878392}, {"determining": "( ( ( PN / ( Min( DDR ,( AMS + ACS ) ) - ( Const / Min( ( Const + FirstVNF_CPU_Server ) ,PN ) ) ) ) * ( PN * AMS ) ) - ( BR + ARS ) )", "choosing": "( Max( CS,( RMSe * RCSe ) ) / ( Max( MUR,( ( MUM + MLU ) - Max( CS,( ( DS - ( MUR - MUR ) ) * Min( CS ,Max( CS,MUR ) ) ) ) ) ) * ( RMSe + MLU ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07273979488214789}, {"determining": "( ( ( PN * AMS ) * ( MRS / ( Min( MDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU / PN ) + Const ) ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( MUM,Min( MUC ,RRSe ) ) / Max( DS,MUC ) )", "obj1": 0.7279693486590039, "obj2": 0.11391019854446555}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7586206896551724, "obj2": 0.09892077558141045}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS - ( ( MDR + FirstVNF_CPU ) * Const ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( ( ( ( RCSe - RMSe ) - ( CS + MUR ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7068965517241379, "obj2": 0.1219817746300119}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( MRS * Max( RRS,( Const * BR ) ) ) - ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU * ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( ( ( Max( MLU,RCSe ) * ( RMSe * RMSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( ( ( RCSe / DS ) + Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Min( MUR ,CS ) ) / CS ) - ( MLU / Max( RMSe,MUM ) ) ) ) ) )", "obj1": 0.6973180076628352, "obj2": 0.1282697390501788}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem * AMS ) ) - Max( ( ACS + RRS ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( DS + ( MUC + MUC ) ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7662835249042146, "obj2": 0.09574052146765016}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / Min( ACS ,( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / ACS ) ) ) ) - ( CRS + Max( ACS,FirstVNF_CPU ) ) )", "choosing": "( ( MUM * Min( ( Min( CS ,( RRSe - RRSe ) ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUM ) ) / RRSe ) ) ,MLU ) ) - Max( RMSe,RCSe ) )", "obj1": 0.814176245210728, "obj2": 0.07885431561266426}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.12659877421094784}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( DS + CS ) ),CS ) * ( ( MLU + MUC ) - ( MUM + MUR ) ) )", "obj1": 0.8122605363984674, "obj2": 0.0833235374187242}, {"determining": "( ( ( ( FirstVNF_RAM_Server / AMS ) / ( ACS * Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / ( DDR / FirstVNF_CPU ) ) ) ) / ( FirstVNF_RAM_Server + Min( RRS ,( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( ( FirstVNF_CPU + CRS ) * Max( ( Max( FirstVNF_CPU_Server,( ARS - MRS ) ) - ( ( FirstVNF_CPU + ACS ) * Const ) ),DDR ) ) )", "choosing": "Max( Min( ( MLU + Min( Max( RCSe,RRSe ) ,Max( ( ( ( MUC / RCSe ) / ( MUR + MUR ) ) / CS ),MUR ) ) ) ,( DS + RMSe ) ),( MUR * MUR ) )", "obj1": 0.6149425287356322, "obj2": 0.25842958121011594}, {"determining": "( Max( MRS,( ( RRS / Const ) - ACS ) ) * ( ( ( RRS * Const ) * Max( Max( MDR,FirstVNF_RAM ),AMS ) ) + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( Min( ( DS / ( Min( ( MLU / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,( CS - MUR ) ) + ( ( RCSe + MUR ) * ( RCSe + CS ) ) ) * ( ( Min( CS ,CS ) * ( CS * CS ) ) * ( Min( MUM ,MUR ) + ( Max( DS,RRSe ) / ( ( ( ( MLU * CS ) + DS ) + ( MUR - Max( DS,RCSe ) ) ) - ( MUR - ( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.25364511381513893}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( Min( ( ( ( CS + MUR ) / MUR ) / ( CS * MUC ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * CS ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7183908045977011, "obj2": 0.11755398824210513}, {"determining": "( ( PN * ( Min( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ,DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( MLU,Min( Min( ( MUM / RCSe ) ,( MLU - ( ( MUC - ( RCSe + DS ) ) / MLU ) ) ) ,MUR ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08367716071402338}, {"determining": "( ( ( ( ACS + Const ) / Min( DDR ,AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( ( ( ARS / CRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - ( ( ACS / RRS ) + MDR ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),MLU ) )", "obj1": 0.6091954022988506, "obj2": 0.26211943262807524}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( ( ( Min( DDR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,MRS ) ) / PN ) * ( PN * AMS ) ) - ( ( ARS * CRS ) * ARS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * Max( ( MUR / RCSe ),( MUR - ( ( DS / RMSe ) - RMSe ) ) ) ) )", "obj1": 0.8793103448275862, "obj2": 0.0484716414613445}, {"determining": "( ( Min( ( MRS - ( ( FirstVNF_Mem_Server / ACS ) * FirstVNF_CPU ) ) ,ACS ) * ( ACS / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ARS - CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,Min( ( CS + MLU ) ,MUR ) ) ) * ( MUM / MUM ) ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( RRSe / ( RCSe * ( MLU - DS ) ) ) + CS ) ) ),Min( ( RCSe - RRSe ) ,RCSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06192611889944147}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Min( ACS ,( ( ACS + MDR ) * CRS ) ) / FirstVNF_RAM ) ) ) * ( ACS * PN ) ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( RRSe,Min( MUM ,( ( MUR / ( ( DS - DS ) - Min( ( RRSe + RCSe ) ,MUC ) ) ) / DS ) ) ) )", "obj1": 0.8908045977011494, "obj2": 0.0452254543363314}, {"determining": "( ( ( ( Min( MRS ,ARS ) / ARS ) - ( MDR - ( AMS - Min( ( FirstVNF_Mem / Max( ACS,Const ) ) ,FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) / ( DDR / ( ( Max( FirstVNF_RAM_Server,BR ) - AMS ) - ( RRS * MRS ) ) ) )", "choosing": "( Min( ( RCSe / MLU ) ,( MUC / RCSe ) ) - ( ( RMSe - ( ( ( ( DS / MUR ) * Max( DS,DS ) ) + ( Max( RRSe,( RCSe / MUR ) ) + Min( MUM ,MUC ) ) ) * CS ) ) + DS ) )", "obj1": 0.9482758620689655, "obj2": 0.017022162412219176}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.8831417624521073, "obj2": 0.047112784430687046}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * ( AMS * Const ) ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,Max( MLU,CS ) ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / ( RCSe / DS ) ) )", "obj1": 0.7471264367816092, "obj2": 0.10431811036909899}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,MRS ) + MRS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / DS ) ),MLU ) )", "obj1": 0.9157088122605364, "obj2": 0.034798585899798874}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN + AMS ) ) - ( ( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / ( FirstVNF_CPU_Server / ARS ) ) )", "choosing": "Max( ( ( Min( ( ( ( MUR * MUR ) * RCSe ) - ( MUC - ( RRSe + RCSe ) ) ) ,( CS * MUR ) ) + ( RMSe / Max( Max( RMSe,CS ),( MUM / DS ) ) ) ) - MUR ),Min( ( CS / MUM ) ,RRSe ) )", "obj1": 0.7337164750957854, "obj2": 0.11154691076894967}, {"determining": "( ( ( PN / ( Min( MDR ,ARS ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( Min( ACS ,Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,( DDR * ARS ) ) ) ) / DDR ) / ( ARS * CRS ) ) )", "choosing": "Min( Max( MUR,RCSe ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.7145593869731801, "obj2": 0.12057388607392726}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( ARS - PN ) ) - ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,RRS ) ) ) / ( MRS + ( AMS * FirstVNF_Mem ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "Max( DS,Max( ( ( MLU + MUR ) + ( MUR + Max( DS,RRSe ) ) ),Max( ( ( MLU + ( MLU - ( ( RMSe / MUC ) * ( MUR + MLU ) ) ) ) + ( RMSe - CS ) ),MUM ) ) )", "obj1": 0.8486590038314177, "obj2": 0.05965784373145887}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / DS ) ),MLU ) )", "obj1": 0.8735632183908046, "obj2": 0.052255196425561805}, {"determining": "( ( ( PN / Min( Min( DDR ,( ( PN + FirstVNF_RAM ) * ( ( RRS + FirstVNF_CPU ) * Const ) ) ) ,( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) - DDR ) ) )", "choosing": "( Max( Min( MLU ,RRSe ),( RMSe * MLU ) ) / ( RRSe + ( ( ( RMSe / CS ) * ( ( Max( Max( CS,MUC ),DS ) + ( RCSe * ( RRSe + RCSe ) ) ) * RRSe ) ) - CS ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10540426450777751}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( RMSe,RCSe ) - ( MUM / Min( ( Min( CS ,MUR ) / ( Min( ( ( RRSe - MLU ) - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) )", "obj1": 0.7969348659003831, "obj2": 0.08494484545803478}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( RRS * Min( FirstVNF_RAM_Server ,RRS ) ) * ( AMS * PN ) ) - ( ( FirstVNF_RAM * CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RCSe ,( ( CS / Max( ( MUC / ( RRSe - RMSe ) ),RRSe ) ) * RCSe ) ) * Min( RCSe ,MUR ) ) * Max( MLU,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09538539851668557}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / ( ARS - RRS ) ) ,( FirstVNF_CPU / ( ( BR / FirstVNF_Mem_Server ) / BR ) ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Min( Min( Min( ( DS / MUR ) ,Min( Min( RRSe ,MUC ) ,MLU ) ) ,MUR ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09216833864964138}, {"determining": "( ( RRS + MRS ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU + Max( ( Max( Const,AMS ) / DDR ),RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Max( ( MUM - MLU ),( MLU * MUR ) )", "obj1": 0.9674329501915708, "obj2": 0.013362984029338543}, {"determining": "( Min( MRS ,MRS ) - ( ( Min( ACS ,( FirstVNF_CPU / Max( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),DDR ),RRS ) ) ) / DDR ) + ( ARS * CRS ) ) )", "choosing": "( ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) / ( ( ( ( MUM / Max( RCSe,MUC ) ) + CS ) - Min( Min( ( Max( RMSe,Max( RRSe,DS ) ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) )", "obj1": 0.921455938697318, "obj2": 0.031942864825938916}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,( ARS + Min( DDR ,BR ) ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RRSe - RCSe ),( Min( Max( RMSe,Max( Min( RMSe ,( MLU / RRSe ) ),RRSe ) ) ,CS ) * Max( MUC,RRSe ) ) ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,Min( RMSe ,RMSe ) ) / CS ) * MUR ) ) )", "obj1": 0.603448275862069, "obj2": 0.2674348621992376}, {"determining": "( Max( Max( ( CRS * ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( AMS * ( ( FirstVNF_Mem_Server - Max( AMS,( BR - ARS ) ) ) * FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM - MRS ) ) - ( ACS * PN ) )", "choosing": "( ( RCSe + Min( MUM ,( Max( MUR,( DS * ( ( RRSe / MUM ) / RMSe ) ) ) + Min( Max( MUM,MUC ) ,MUC ) ) ) ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.014300928987263558}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ( Min( Max( MDR,MRS ) ,( MRS / ARS ) ) / ( DDR / ACS ) ) ) ) / ( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ) / ( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( RMSe / ( MUR - MUR ) )", "obj1": 0.7758620689655172, "obj2": 0.09262266122104217}, {"determining": "( ( ( FirstVNF_Mem / ( Min( DDR ,( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Min( ( RRS / FirstVNF_CPU ) ,ARS ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem / Const ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / FirstVNF_CPU ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RRSe / ( MLU * ( Min( MLU ,( RCSe * RMSe ) ) / MUR ) ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( CRS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( MUR ,RMSe ),( ( CS + Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,( CS / CS ) ) ) * MUR ) ) )", "obj1": 0.8390804597701149, "obj2": 0.06459253847903337}, {"determining": "( ( PN * ( ( Min( ACS ,( FirstVNF_CPU / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( MLU + RMSe ) ) ) + ( Max( ( RCSe / DS ),( RRSe / CS ) ) + ( ( MUM * MUR ) / ( ( ( MLU - MUM ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.789272030651341, "obj2": 0.09216391804349841}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_CPU + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,MLU ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.9425287356321839, "obj2": 0.023270133159642437}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( MUR,Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.7950191570881227, "obj2": 0.0883110238164786}, {"determining": "( ( ( PN / ( ( DDR + ( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( AMS * PN ) ) - ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( Min( MUM ,RMSe ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM - MLU ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.8563218390804598, "obj2": 0.05884762206039854}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - ( RRS + FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( ARS * CRS ) / ( DDR / Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_RAM - PN ) + Min( DDR ,BR ) ) ) ) ,Max( FirstVNF_CPU,Min( FirstVNF_RAM ,( DDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RRSe ,( ( RRSe / Max( RRSe,RRSe ) ) * RCSe ) ) / CS ) * MUR ),( ( MUR * RCSe ) - RRSe ) ) / ( ( RRSe - RCSe ) - ( ( MUM + Min( RMSe ,( DS - Min( MUR ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10768261949220766}, {"determining": "( ( ( PN / ( Min( DDR ,( AMS + ACS ) ) - ( Const / Min( ( Const + FirstVNF_CPU_Server ) ,PN ) ) ) ) * ( PN * AMS ) ) - ( BR + ARS ) )", "choosing": "( Max( CS,( RMSe * RCSe ) ) / ( Max( MUR,( ( MUM + MLU ) - Max( CS,( ( DS - ( MUR - MUR ) ) * Min( CS ,Max( CS,MUR ) ) ) ) ) ) * ( RMSe + MLU ) ) )", "obj1": 0.8582375478927203, "obj2": 0.05616774957219342}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - Min( DDR ,RRS ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Max( MLU,MUR ) * ( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) * Max( MUC,RRSe ) ) )", "obj1": 0.9003831417624522, "obj2": 0.041228400260762035}, {"determining": "( ( FirstVNF_RAM - ( ARS - ( MDR * ( ( ARS / AMS ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU + Max( MDR,AMS ) ) ) ) ) ) ) / ( BR / ( ( RRS - CRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUR ,( MUC * ( MUM * ( ( CS - MUR ) / RCSe ) ) ) ) - RCSe ) - Max( MLU,MUM ) )", "obj1": 0.60727969348659, "obj2": 0.265158671096573}, {"determining": "( Min( Min( Const ,FirstVNF_RAM ) ,MRS ) - ( ( ARS * CRS ) / ( DDR / Min( ( ( Max( MDR,MRS ) * ( Const - FirstVNF_RAM_Server ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) ) ) )", "choosing": "Min( ( Max( MUM,( DS + ( DS * ( RRSe / MUC ) ) ) ) - MUR ) ,( ( Max( RCSe,MUM ) + Min( CS ,CS ) ) + Max( ( CS * MLU ),Min( MLU ,RRSe ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02294358845695616}, {"determining": "( ( ( BR / ( Const * DDR ) ) / ( Min( Const ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_RAM ,DDR ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Const )", "choosing": "Max( DS,( RRSe + ( DS / Min( MUC ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( PN * ( ( Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) / DDR ) - Min( ( CRS + FirstVNF_CPU_Server ) ,AMS ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,( RMSe + MUM ) ) * ( RMSe - RMSe ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU * ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),Min( Max( Min( ( ( MUC * ( RRSe / RMSe ) ) - RRSe ) ,( RRSe + Min( RCSe ,MUR ) ) ),RMSe ) ,( CS + CS ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( Max( ( PN / FirstVNF_RAM ),FirstVNF_Mem ) - ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,( Min( CS ,CS ) / ( MUM / MLU ) ) ) ) / CS ) - ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) - ( CS / CS ) ) ) / ( ( Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) + RRSe ) * Min( MLU ,RMSe ) ) ) / Min( Min( RCSe ,MUM ) ,MUR ) )", "obj1": 0.9272030651340997, "obj2": 0.02925872671857499}, {"determining": "( ( MRS - FirstVNF_Mem ) * ( Max( CRS,RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( DS / ( Min( ( Min( CS ,RMSe ) / RMSe ) ,RRSe ) / ( RRSe - RMSe ) ) ) ,Min( MLU ,DS ) ) + Min( CS ,MLU ) ) * ( ( ( CS * CS ) * ( CS * CS ) ) - ( Max( MUM,( MUR - MUC ) ) + ( MUR * MUM ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.2574358303779993}, {"determining": "( ( FirstVNF_CPU - ( ACS - ( Const - ( MRS * FirstVNF_Mem ) ) ) ) - ( MRS - Min( ( ( AMS - FirstVNF_RAM ) - ARS ) ,ACS ) ) )", "choosing": "( ( MUM - ( DS * ( CS - MUR ) ) ) - ( ( Min( RCSe ,Max( ( ( Min( RRSe ,CS ) + MUC ) * ( RCSe * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) - MUR ) - Min( Min( Max( Max( DS,DS ),Max( RRSe,( MUM + ( MLU / MLU ) ) ) ) ,MLU ) ,RRSe ) ) )", "obj1": 0.9061302681992337, "obj2": 0.03810099920863667}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / DS ) ),MLU ) )", "obj1": 0.8716475095785441, "obj2": 0.05323232519037305}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MDR ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_Mem / ( ( Min( Const ,ARS ) * FirstVNF_Mem ) * Max( MDR,PN ) ) ) / Max( Min( ( MDR / Min( DDR ,RRS ) ) ,FirstVNF_Mem ),( FirstVNF_Mem_Server / AMS ) ) ) + ARS ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) / Min( ( MUR + Min( Min( Max( ( Max( MUM,RMSe ) * ( DS * MUC ) ),( ( MUR + MLU ) - ( MUC * MLU ) ) ) ,MUR ) ,CS ) ) ,MUM ) )", "obj1": 0.6226053639846744, "obj2": 0.2569886029537191}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.896551724137931, "obj2": 0.0429759600964713}, {"determining": "( ( ( PN / ( Min( DDR ,( ARS * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( Max( DS,MUR ) - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( Min( MUR ,RMSe ) - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8620689655172413, "obj2": 0.05561488047594079}, {"determining": "( ( ( PN / ( ( PN * FirstVNF_CPU_Server ) - Min( DDR ,RRS ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) - ARS ) )", "choosing": "( Max( MLU,CS ) * ( Min( Max( RMSe,Max( Min( RMSe ,( MLU / RRSe ) ),RRSe ) ) ,CS ) * Max( MUC,RRSe ) ) )", "obj1": 0.8946360153256705, "obj2": 0.043589543420656025}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * PN ) - ( ( Min( Const ,FirstVNF_RAM ) / MRS ) + MRS ) )", "choosing": "( ( ( RCSe * MUC ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,( MUM / MUC ) ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03613553823966046}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,MDR ) ,( Min( FirstVNF_RAM_Server ,AMS ) / ARS ) ) / DDR ) - ( FirstVNF_CPU + PN ) ) ) - ( CRS + MRS ) )", "choosing": "( ( ( RCSe / ( ( MUM / MLU ) + ( RCSe + ( ( DS + DS ) * ( MUM / MUM ) ) ) ) ) * MUM ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.8524904214559387, "obj2": 0.05961251885984779}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * CRS ) ) / Min( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU / ( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) ) ) ) )", "choosing": "Min( ( Max( ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( DS / ( MUC / ( MUC + RRSe ) ) ) ),MUR ) - RMSe ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( ( MLU / DS ),( CS * MLU ) ) ) )", "obj1": 0.8659003831417624, "obj2": 0.05348983161431539}, {"determining": "( ( Min( PN ,( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ( FirstVNF_CPU + ( AMS / ( CRS * DDR ) ) ) * CRS ) / ( Min( ( Max( ARS,RRS ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,Const ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( RRSe - CS ) + DS ) - Max( MUR,( RRSe * MUM ) ) ) ,( MLU + RCSe ) ) ) ,RMSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8275862068965517, "obj2": 0.06784178596448646}, {"determining": "( Max( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ),( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,Max( FirstVNF_Mem,FirstVNF_CPU ) ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / Min( Max( MUR,( Min( ( RMSe * MLU ) ,CS ) * DS ) ) ,MUM ) ) ) / ( Max( Max( MUC,RRSe ),MLU ) * Min( MLU ,RRSe ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013885514627326931}, {"determining": "( ( ( PN / Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,( Max( ARS,RRS ) + ( Const * ACS ) ) ) ),( ( FirstVNF_RAM / FirstVNF_Mem ) / Max( AMS,Max( CRS,PN ) ) ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( Min( RMSe ,MLU ) * ( ( ( ( MUM / Max( RCSe,MUC ) ) / Max( MUR,Max( DS,Min( MUC ,RMSe ) ) ) ) - ( CS + ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) ) ) / CS ) )", "obj1": 0.9770114942528736, "obj2": 0.007948471796585454}, {"determining": "( ( ( ARS / ( Min( ( AMS * FirstVNF_CPU ) ,Const ) / ( Const / FirstVNF_RAM ) ) ) * ( AMS * RRS ) ) - ( ( MRS + AMS ) + FirstVNF_Mem ) )", "choosing": "( ( MUC * CS ) * ( Min( Min( RRSe ,CS ) ,MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.7164750957854407, "obj2": 0.11813242538030118}, {"determining": "( ( PN * ( ( Min( FirstVNF_CPU_Server ,( Min( ACS ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( Min( MLU ,RRSe ),RRSe ) * ( RRSe - RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004334454779699649}, {"determining": "( ( ( ( BR - BR ) * MRS ) - Min( PN ,AMS ) ) - ( ARS / ( ARS * CRS ) ) )", "choosing": "( ( ( ( ( ( RCSe / ( Max( MUR,MLU ) - CS ) ) / Max( DS,CS ) ) - ( ( ( RMSe + ( CS / MUM ) ) + RCSe ) / RMSe ) ) + Min( CS ,DS ) ) / MUR ) - Max( RMSe,RCSe ) )", "obj1": 0.9118773946360154, "obj2": 0.035947375929578806}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / MLU ),Max( MUR,MUC ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / Min( MUM ,RMSe ) ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.0067879034449303275}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ARS / CRS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,MUC ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,RMSe ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003375462200090104}, {"determining": "( ( Max( ( CRS + ( Const / ( FirstVNF_Mem / Min( FirstVNF_CPU ,PN ) ) ) ),FirstVNF_Mem ) * ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( Min( ACS ,Max( ( RRS / Const ),CRS ) ) ,( FirstVNF_RAM / AMS ) ) ) ) - ( FirstVNF_CPU - AMS ) )", "choosing": "( Max( MLU,( ( MUC / DS ) + MUM ) ) * ( MUR + ( CS * ( MUM / Max( ( DS + RCSe ),RRSe ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.004763226325240704}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / MLU ),Max( MUR,MUC ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / Min( MUM ,RMSe ) ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9808429118773946, "obj2": 0.007374214181222381}, {"determining": "( ( PN - ( ( Min( ( Const + Max( MDR,MDR ) ) ,ACS ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) * Max( Min( ( Max( ( MLU * ( Min( MUM ,RRSe ) + Max( CS,RCSe ) ) ),DS ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) )", "obj1": 0.7911877394636015, "obj2": 0.09058619436394133}, {"determining": "( ( ( ( AMS / ARS ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( DDR * MDR ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( ( MLU * MUR ),Min( MUM ,CS ) ) + ( Max( MUM,( ( DS - CS ) * RCSe ) ) / Max( ( Min( RCSe ,MUC ) - RCSe ),( Min( ( RCSe + MUC ) ,( Max( RCSe,MUM ) + MUM ) ) - MUR ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.26660572008838096}, {"determining": "( ( PN * ( ( Min( ACS ,( PN + ( FirstVNF_CPU_Server / DDR ) ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( Max( Min( ( ( ( CS + MUR ) / MUR ) / ( CS * DS ) ) ,Min( RCSe ,MLU ) ),Min( MUM ,MUM ) ) * Min( ( RMSe / RMSe ) ,( DS + RCSe ) ) )", "obj1": 0.7931034482758621, "obj2": 0.08982857373846535}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( ( ( ( Max( RCSe,MUC ) / MUM ) / CS ) - ( CS + DS ) ) / CS ) * ( RRSe + ( Max( ( ( MLU * Max( MUR,RMSe ) ) * MUR ),RMSe ) / MLU ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( CRS / ACS ) ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( MUR - DS ) ) + RMSe ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,CS ) ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031023298619688448}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - Min( DDR ,( ARS * Max( ( FirstVNF_RAM + ARS ),FirstVNF_CPU ) ) ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ARS - ( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( ( CS - ( Max( DS,MUR ) - ( RMSe * MUC ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( Min( MUR ,RMSe ) - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8639846743295019, "obj2": 0.053852748591532995}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( FirstVNF_Mem_Server + ( ( FirstVNF_Mem_Server / CRS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( MLU - RRSe ),RRSe ) / Max( ( Min( RRSe ,MLU ) + CS ),( ( CS + CS ) * ( MUR / CS ) ) ) )", "obj1": 0.975095785440613, "obj2": 0.009145813855988397}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / FirstVNF_RAM ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Min( ( ( ( ( MUM / Max( MLU,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUR ) ) )", "obj1": 0.9712643678160919, "obj2": 0.01055941806285449}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * DDR ) / ( Min( ( PN + FirstVNF_RAM_Server ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server * BR ) ) ) / DDR ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( MUC ,( Max( RMSe,RCSe ) / MLU ) ) ,( CS / CS ) ) ) / ( ( MUC / ( RCSe / RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( CS * MLU ) * ( MUC / MUM ) ) / ( MUR + RCSe ) ) )", "obj1": 0.9252873563218391, "obj2": 0.029794250069530768}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ( RRS - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ),RRS ) ) ,( FirstVNF_CPU / ( Min( Max( MDR,MRS ) ,( DDR + DDR ) ) / DDR ) ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( RRSe,( ( RCSe / CS ) - DS ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}], "21": [{"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( ( Min( Const ,FirstVNF_Mem ) - ( ACS / FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,MRS ) ) / PN ) * ( PN * AMS ) ) - ( ( ARS * CRS ) * ARS ) )", "choosing": "( Max( MLU,MUR ) * ( MLU / ( RCSe * Max( MLU,( Min( DS ,Max( ( MUC * DS ),CS ) ) * ( MUC * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( PN * ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - ( Min( ( DDR + FirstVNF_RAM ) ,( ( Max( PN,FirstVNF_CPU_Server ) + RRS ) / FirstVNF_Mem ) ) - Max( MDR,ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUR - MUC ) - Min( ( DS + RMSe ) ,Min( ( Max( Min( ( RRSe - DS ) ,Min( MUR ,RMSe ) ),DS ) / ( CS / DS ) ) ,( CS * DS ) ) ) )", "obj1": 0.685823754789272, "obj2": 0.16420160007809295}, {"determining": "( ( ARS * ( ( ( Const / Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ARS ),MDR ) ) - ARS ) / CRS ) ) - ( DDR / ( ( FirstVNF_Mem_Server - MDR ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * MLU ) + ( DS - DS ) )", "obj1": 0.6590038314176245, "obj2": 0.178491082402923}, {"determining": "( ( PN - ( ( Min( ( Min( ( Const / ACS ) ,( BR - ARS ) ) / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( ( MUR / MLU ) / RCSe )", "obj1": 0.6455938697318008, "obj2": 0.19745966277616656}, {"determining": "( ( PN * ( ( ( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU / PN ) ) / Max( FirstVNF_RAM_Server,ACS ) ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) )", "choosing": "Max( DS,( Max( ( ( RMSe - MUM ) + ( DS * RRSe ) ),MUR ) + MUR ) )", "obj1": 0.6302681992337165, "obj2": 0.22401089900036808}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Min( MUR ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6206896551724138, "obj2": 0.23382847809410925}, {"determining": "( ( ( ( FirstVNF_RAM_Server / AMS ) / ( ACS * Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / ( DDR / FirstVNF_CPU ) ) ) ) / ( FirstVNF_RAM_Server + Min( RRS ,( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( ( FirstVNF_CPU + CRS ) * Max( ( Max( FirstVNF_CPU_Server,( ARS - MRS ) ) - ( ( FirstVNF_CPU + ACS ) * Const ) ),DDR ) ) )", "choosing": "Max( Min( ( MLU + Min( Max( RCSe,RRSe ) ,Max( ( ( ( MUC / RCSe ) / ( MUR + MUR ) ) / CS ),MUR ) ) ) ,( DS + RMSe ) ),( MUR * MUR ) )", "obj1": 0.6149425287356322, "obj2": 0.25842958121011594}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( ( ( ( Const / FirstVNF_RAM ) - MRS ) / CRS ) * ARS ) - ( DDR / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RRSe,DS ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,MUM ) ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6551724137931034, "obj2": 0.19355484030227732}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,( MDR + Min( DDR ,BR ) ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,Min( RMSe ,RMSe ) ) / CS ) * MUR ) ) )", "obj1": 0.5881226053639846, "obj2": 0.279233185878392}, {"determining": "( ( ( PN / ( Max( DDR,( Min( FirstVNF_Mem ,MDR ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( ( RRSe - CS ) * ( MUM - MUM ) ) + DS ) - Min( MLU ,RRSe ) ) )", "obj1": 0.8065134099616859, "obj2": 0.07644134152844005}, {"determining": "( ( ( PN / ( Min( DDR ,( AMS + ACS ) ) - ( Const / Min( ( Const + FirstVNF_CPU_Server ) ,PN ) ) ) ) * ( PN * AMS ) ) - ( BR + ARS ) )", "choosing": "( Max( CS,( RMSe * RCSe ) ) / ( Max( MUR,( ( MUM + MLU ) - Max( CS,( ( DS - ( MUR - MUR ) ) * Min( CS ,Max( CS,MUR ) ) ) ) ) ) * ( RMSe + MLU ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07273979488214789}, {"determining": "( ( ( PN * AMS ) * ( MRS / ( Min( MDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU / PN ) + Const ) ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( MUM,Min( MUC ,RRSe ) ) / Max( DS,MUC ) )", "obj1": 0.7279693486590039, "obj2": 0.11391019854446555}, {"determining": "( ( PN * ( ( CRS + DDR ) - Min( ( ( ARS * CRS ) / ( Min( BR ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( ( ( DS - ( Min( MUC ,CS ) * CS ) ) / ( RCSe - ( RRSe + DS ) ) ),Min( ( ( MUM / RCSe ) / ( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.6264367816091954, "obj2": 0.22636108382545614}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7586206896551724, "obj2": 0.09892077558141045}, {"determining": "( ( PN * ( Min( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ,DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( MLU,Min( Min( ( MUM / RCSe ) ,( MLU - ( ( MUC - ( RCSe + DS ) ) / MLU ) ) ) ,MUR ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08367716071402338}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( MRS * Max( RRS,( Const * BR ) ) ) - ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU * ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( ( ( Max( MLU,RCSe ) * ( RMSe * RMSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( ( ( RCSe / DS ) + Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Min( MUR ,CS ) ) / CS ) - ( MLU / Max( RMSe,MUM ) ) ) ) ) )", "obj1": 0.6973180076628352, "obj2": 0.1282697390501788}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem * AMS ) ) - Max( ( ACS + RRS ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( DS + ( MUC + MUC ) ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7662835249042146, "obj2": 0.09574052146765016}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( ( CS - Max( MUR,RMSe ) ) / MUC ) / MLU ) ,RCSe ) - ( DS + ( Min( ( ( RMSe - ( MUR + CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) + RMSe ) ) )", "obj1": 0.8544061302681992, "obj2": 0.054432665305241774}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( Min( ( ( ( CS + MUR ) / MUR ) / ( CS * MUC ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * CS ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7183908045977011, "obj2": 0.11755398824210513}, {"determining": "( ( ( ( ACS + Const ) / Min( DDR ,AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( ( ( ARS / CRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - ( ( ACS / RRS ) + MDR ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),MLU ) )", "obj1": 0.6091954022988506, "obj2": 0.26211943262807524}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( FirstVNF_CPU - ( ACS - ( Const - ( MRS * FirstVNF_Mem ) ) ) ) - ( MRS - Min( ( ( AMS - FirstVNF_RAM ) - ARS ) ,ACS ) ) )", "choosing": "( ( MUM - ( DS * ( CS - MUR ) ) ) - ( ( Min( RCSe ,Max( ( ( Min( RRSe ,CS ) + MUC ) * ( RCSe * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) - MUR ) - Min( Min( Max( Max( DS,DS ),Max( RRSe,( MUM + ( MLU / MLU ) ) ) ) ,MLU ) ,RRSe ) ) )", "obj1": 0.9061302681992337, "obj2": 0.03810099920863667}, {"determining": "( ( Min( ( MRS - ( ( FirstVNF_Mem_Server / ACS ) * FirstVNF_CPU ) ) ,ACS ) * ( ACS / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ARS - CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,Min( ( CS + MLU ) ,MUR ) ) ) * ( MUM / MUM ) ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( RRSe / ( RCSe * ( MLU - DS ) ) ) + CS ) ) ),Min( ( RCSe - RRSe ) ,RCSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06192611889944147}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - Min( DDR ,RRS ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Max( MLU,MUR ) * ( Min( CS ,( ( RCSe / ( Min( CS ,MLU ) * MUM ) ) * RRSe ) ) * Max( MUC,RRSe ) ) )", "obj1": 0.9003831417624522, "obj2": 0.041228400260762035}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.12659877421094784}, {"determining": "( ( ( ( Min( MRS ,ARS ) / ARS ) - ( MDR - ( AMS - Min( ( FirstVNF_Mem / Max( ACS,Const ) ) ,FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) / ( DDR / ( ( Max( FirstVNF_RAM_Server,BR ) - AMS ) - ( RRS * MRS ) ) ) )", "choosing": "( Min( ( RCSe / MLU ) ,( MUC / RCSe ) ) - ( ( RMSe - ( ( ( ( DS / MUR ) * Max( DS,DS ) ) + ( Max( RRSe,( RCSe / MUR ) ) + Min( MUM ,MUC ) ) ) * CS ) ) + DS ) )", "obj1": 0.9482758620689655, "obj2": 0.017022162412219176}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU * ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),Min( Max( Min( ( ( MUC * ( RRSe / RMSe ) ) - RRSe ) ,( RRSe + Min( RCSe ,MUR ) ) ),RMSe ) ,( CS + CS ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * ( AMS * Const ) ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,Max( MLU,CS ) ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / ( RCSe / DS ) ) )", "obj1": 0.7471264367816092, "obj2": 0.10431811036909899}, {"determining": "( ( MRS * ( ( Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem * FirstVNF_CPU ) + ARS ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,( MUM * ( RMSe * RRSe ) ) )", "obj1": 0.7911877394636015, "obj2": 0.08903231789899962}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN + AMS ) ) - ( ( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / ( FirstVNF_CPU_Server / ARS ) ) )", "choosing": "Max( ( ( Min( ( ( ( MUR * MUR ) * RCSe ) - ( MUC - ( RRSe + RCSe ) ) ) ,( CS * MUR ) ) + ( RMSe / Max( Max( RMSe,CS ),( MUM / DS ) ) ) ) - MUR ),Min( ( CS / MUM ) ,RRSe ) )", "obj1": 0.7337164750957854, "obj2": 0.11154691076894967}, {"determining": "( ( ( PN / ( Min( MDR ,ARS ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( Min( ACS ,Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,( DDR * ARS ) ) ) ) / DDR ) / ( ARS * CRS ) ) )", "choosing": "Min( Max( MUR,RCSe ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.7145593869731801, "obj2": 0.12057388607392726}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( ARS - PN ) ) - ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,RRS ) ) ) / ( MRS + ( AMS * FirstVNF_Mem ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "Max( DS,Max( ( ( MLU + MUR ) + ( MUR + Max( DS,RRSe ) ) ),Max( ( ( MLU + ( MLU - ( ( RMSe / MUC ) * ( MUR + MLU ) ) ) ) + ( RMSe - CS ) ),MUM ) ) )", "obj1": 0.8486590038314177, "obj2": 0.05965784373145887}, {"determining": "( ( Min( PN ,( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ( FirstVNF_CPU + ( AMS / ( CRS * DDR ) ) ) * CRS ) / ( Min( ( Max( ARS,RRS ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,Const ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( RRSe - CS ) + DS ) - Max( MUR,( RRSe * MUM ) ) ) ,( MLU + RCSe ) ) ) ,RMSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8275862068965517, "obj2": 0.06784178596448646}, {"determining": "( ( ( PN / Min( Min( DDR ,( ( PN + FirstVNF_RAM ) * ( ( RRS + FirstVNF_CPU ) * Const ) ) ) ,( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) - DDR ) ) )", "choosing": "( Max( Min( MLU ,RRSe ),( RMSe * MLU ) ) / ( RRSe + ( ( ( RMSe / CS ) * ( ( Max( Max( CS,MUC ),DS ) + ( RCSe * ( RRSe + RCSe ) ) ) * RRSe ) ) - CS ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10540426450777751}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( RMSe,RCSe ) - ( MUM / Min( ( Min( CS ,MUR ) / ( Min( ( ( RRSe - MLU ) - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) )", "obj1": 0.7969348659003831, "obj2": 0.08494484545803478}, {"determining": "( ( ( ( Min( DDR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,MRS ) ) / PN ) * ( PN * AMS ) ) - ( ( ARS * CRS ) * ARS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * Max( ( MUR / RCSe ),( MUR - ( ( DS / RMSe ) - RMSe ) ) ) ) )", "obj1": 0.8793103448275862, "obj2": 0.0484716414613445}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( Min( Const ,AMS ) ,Const ),( ( CRS + ARS ) - Min( AMS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.7835249042145593, "obj2": 0.09119290914696992}, {"determining": "( ( ( RRS * Min( FirstVNF_RAM_Server ,RRS ) ) * ( AMS * PN ) ) - ( ( FirstVNF_RAM * CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RCSe ,( ( CS / Max( ( MUC / ( RRSe - RMSe ) ),RRSe ) ) * RCSe ) ) * Min( RCSe ,MUR ) ) * Max( MLU,MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.09538539851668557}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ARS / CRS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,MUC ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,RMSe ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003375462200090104}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,MDR ) ,( Min( FirstVNF_RAM_Server ,AMS ) / ARS ) ) / DDR ) - ( FirstVNF_CPU + PN ) ) ) - ( CRS + MRS ) )", "choosing": "( ( ( RCSe / ( ( MUM / MLU ) + ( RCSe + ( ( DS + DS ) * ( MUM / MUM ) ) ) ) ) * MUM ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.8524904214559387, "obj2": 0.05961251885984779}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( ( ( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( AMS + PN ) ) * PN ) - ( CRS + Max( Max( ( ACS - FirstVNF_CPU ),RRS ),Min( PN ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM * Min( ( Min( MUR ,CS ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,Max( RMSe,MUC ) ) ) - ( MUM + ( Min( ( RCSe / MUR ) ,RCSe ) + Min( Min( RMSe ,MUR ) ,DS ) ) ) )", "obj1": 0.9425287356321839, "obj2": 0.02310937653962019}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - Min( DDR ,( ARS * Max( ( FirstVNF_RAM + ARS ),FirstVNF_CPU ) ) ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ARS - ( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( ( CS - ( Max( DS,MUR ) - ( RMSe * MUC ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( Min( MUR ,RMSe ) - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8639846743295019, "obj2": 0.053852748591532995}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,( ARS + Min( DDR ,BR ) ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RRSe - RCSe ),( Min( Max( RMSe,Max( Min( RMSe ,( MLU / RRSe ) ),RRSe ) ) ,CS ) * Max( MUC,RRSe ) ) ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,Min( RMSe ,RMSe ) ) / CS ) * MUR ) ) )", "obj1": 0.603448275862069, "obj2": 0.2674348621992376}, {"determining": "( Max( Max( ( CRS * ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( AMS * ( ( FirstVNF_Mem_Server - Max( AMS,( BR - ARS ) ) ) * FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM - MRS ) ) - ( ACS * PN ) )", "choosing": "( ( RCSe + Min( MUM ,( Max( MUR,( DS * ( ( RRSe / MUM ) / RMSe ) ) ) + Min( Max( MUM,MUC ) ,MUC ) ) ) ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.014300928987263558}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) ) )", "obj1": 0.7049808429118773, "obj2": 0.12226511751889758}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.896551724137931, "obj2": 0.0429759600964713}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ( Min( Max( MDR,MRS ) ,( MRS / ARS ) ) / ( DDR / ACS ) ) ) ) / ( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ) / ( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( RMSe / ( MUR - MUR ) )", "obj1": 0.7758620689655172, "obj2": 0.09262266122104217}, {"determining": "( ( ( FirstVNF_Mem / ( Min( DDR ,( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Min( ( RRS / FirstVNF_CPU ) ,ARS ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem / Const ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / FirstVNF_CPU ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RRSe / ( MLU * ( Min( MLU ,( RCSe * RMSe ) ) / MUR ) ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,MRS ) + MRS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / DS ) ),MLU ) )", "obj1": 0.9157088122605364, "obj2": 0.034798585899798874}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( CRS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( MUR ,RMSe ),( ( CS + Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,( CS / CS ) ) ) * MUR ) ) )", "obj1": 0.8390804597701149, "obj2": 0.06459253847903337}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS - ( ( MDR + FirstVNF_CPU ) * Const ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( ( ( ( RCSe - RMSe ) - ( CS + MUR ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7068965517241379, "obj2": 0.1219817746300119}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( MUR,Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.7950191570881227, "obj2": 0.0883110238164786}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * ( DS + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( RMSe + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.8754789272030651, "obj2": 0.05173288327927888}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( ( PN / ( Min( DDR ,( ARS * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.8908045977011494, "obj2": 0.043186505542474406}, {"determining": "( ( RRS + MRS ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU + Max( ( Max( Const,AMS ) / DDR ),RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Max( ( MUM - MLU ),( MLU * MUR ) )", "obj1": 0.9674329501915708, "obj2": 0.013362984029338543}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - ( RRS + FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( ARS * CRS ) / ( DDR / Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_RAM - PN ) + Min( DDR ,BR ) ) ) ) ,Max( FirstVNF_CPU,Min( FirstVNF_RAM ,( DDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RRSe ,( ( RRSe / Max( RRSe,RRSe ) ) * RCSe ) ) / CS ) * MUR ),( ( MUR * RCSe ) - RRSe ) ) / ( ( RRSe - RCSe ) - ( ( MUM + Min( RMSe ,( DS - Min( MUR ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10768261949220766}, {"determining": "( ( FirstVNF_RAM - ( ARS - ( MDR * ( ( ARS / AMS ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU + Max( MDR,AMS ) ) ) ) ) ) ) / ( BR / ( ( RRS - CRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( MUR ,( MUC * ( MUM * ( ( CS - MUR ) / RCSe ) ) ) ) - RCSe ) - Max( MLU,MUM ) )", "obj1": 0.60727969348659, "obj2": 0.265158671096573}, {"determining": "( ( ( BR / ( Const * DDR ) ) / ( Min( Const ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_RAM ,DDR ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Const )", "choosing": "Max( DS,( RRSe + ( DS / Min( MUC ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( MLU + RMSe ) ) ) + ( Max( ( RRSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MLU - MUM ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02194202764925087}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * ( ARS + ( DDR - PN ) ) ) ) ) - ( PN - MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Max( ( ( ( RMSe + MUM ) + DS ) - Max( ( ( MUM * ( MLU / RCSe ) ) / Max( MUC,CS ) ),RMSe ) ),( MLU + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Const ,MRS ) + MRS ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - Min( RCSe ,MLU ) )", "obj1": 0.9195402298850575, "obj2": 0.032836964823913475}, {"determining": "( Max( ( PN / FirstVNF_RAM ),FirstVNF_Mem ) - ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,( Min( CS ,CS ) / ( MUM / MLU ) ) ) ) / CS ) - ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) - ( CS / CS ) ) ) / ( ( Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) + RRSe ) * Min( MLU ,RMSe ) ) ) / Min( Min( RCSe ,MUM ) ,MUR ) )", "obj1": 0.9272030651340997, "obj2": 0.02925872671857499}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / ( ARS - RRS ) ) ,( FirstVNF_CPU / ( ( BR / FirstVNF_Mem_Server ) / BR ) ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Min( Min( Min( ( DS / MUR ) ,Min( Min( RRSe ,MUC ) ,MLU ) ) ,MUR ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09216833864964138}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.8831417624521073, "obj2": 0.047112784430687046}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( FirstVNF_CPU / ARS ) ) )", "choosing": "( Min( ( ( ( ( MUM / Max( MLU,MUC ) ) / ( RRSe - RRSe ) ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUR ) ) )", "obj1": 0.975095785440613, "obj2": 0.008910734793228719}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_RAM * FirstVNF_Mem ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( Max( DS,MUR ) - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUC ) ) ) ,( ( RMSe - MUM ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04529493398871982}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / DS ) ),MLU ) )", "obj1": 0.8716475095785441, "obj2": 0.05323232519037305}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * PN ) - ( ( Min( Const ,FirstVNF_RAM ) / MRS ) + MRS ) )", "choosing": "( ( ( RCSe * MUC ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,( MUM / MUC ) ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03613553823966046}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * CRS ) ) / Min( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU / ( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) ) ) ) )", "choosing": "Min( ( Max( ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( DS / ( MUC / ( MUC + RRSe ) ) ) ),MUR ) - RMSe ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( ( MLU / DS ),( CS * MLU ) ) ) )", "obj1": 0.8659003831417624, "obj2": 0.05348983161431539}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Min( ACS ,( ( ACS + MDR ) * CRS ) ) / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) / DS ) ),MLU ) )", "obj1": 0.8869731800766284, "obj2": 0.04706928147447224}, {"determining": "( ( ( ARS / ( Min( ( AMS * FirstVNF_CPU ) ,Const ) / ( Const / FirstVNF_RAM ) ) ) * ( AMS * RRS ) ) - ( ( MRS + AMS ) + FirstVNF_Mem ) )", "choosing": "( ( MUC * CS ) * ( Min( Min( RRSe ,CS ) ,MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.7164750957854407, "obj2": 0.11813242538030118}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( ( RRS * BR ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( Min( MUM ,( ( CS / Max( RRSe,MUC ) ) * RCSe ) ) * Min( RCSe ,MUR ) ) * Max( MLU,MUR ) ) * Min( RCSe ,MLU ) )", "obj1": 0.9693486590038314, "obj2": 0.013300392180924877}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / FirstVNF_RAM ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Min( ( ( ( ( MUM / Max( MLU,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUR ) ) )", "obj1": 0.9712643678160919, "obj2": 0.01055941806285449}, {"determining": "( Max( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ),( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,Max( FirstVNF_Mem,FirstVNF_CPU ) ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / Min( Max( MUR,( Min( ( RMSe * MLU ) ,CS ) * DS ) ) ,MUM ) ) ) / ( Max( Max( MUC,RRSe ),MLU ) * Min( MLU ,RRSe ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013885514627326931}, {"determining": "( ( PN * ( ( Min( FirstVNF_CPU_Server ,( Min( ACS ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( Min( MLU ,RRSe ),RRSe ) * ( RRSe - RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004334454779699649}, {"determining": "( ( ( ( BR - BR ) * MRS ) - Min( PN ,AMS ) ) - ( ARS / ( ARS * CRS ) ) )", "choosing": "( ( ( ( ( ( RCSe / ( Max( MUR,MLU ) - CS ) ) / Max( DS,CS ) ) - ( ( ( RMSe + ( CS / MUM ) ) + RCSe ) / RMSe ) ) + Min( CS ,DS ) ) / MUR ) - Max( RMSe,RCSe ) )", "obj1": 0.9118773946360154, "obj2": 0.035947375929578806}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / MLU ),Max( MUR,MUC ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / Min( MUM ,RMSe ) ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.0067879034449303275}, {"determining": "( ( Max( ( CRS + ( Const / ( FirstVNF_Mem / Min( FirstVNF_CPU ,PN ) ) ) ),FirstVNF_Mem ) * ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( Min( ACS ,Max( ( RRS / Const ),CRS ) ) ,( FirstVNF_RAM / AMS ) ) ) ) - ( FirstVNF_CPU - AMS ) )", "choosing": "( Max( MLU,( ( MUC / DS ) + MUM ) ) * ( MUR + ( CS * ( MUM / Max( ( DS + RCSe ),RRSe ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.004763226325240704}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / MLU ),Max( MUR,MUC ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / Min( MUM ,RMSe ) ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9808429118773946, "obj2": 0.007374214181222381}, {"determining": "( ( PN * ( ( Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) / DDR ) - Min( ( CRS + FirstVNF_CPU_Server ) ,AMS ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,( RMSe + MUM ) ) * ( RMSe - RMSe ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( ( ( AMS / ARS ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server * RRS ) - ( DDR * MDR ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( ( MLU * MUR ),Min( MUM ,CS ) ) + ( Max( MUM,( ( DS - CS ) * RCSe ) ) / Max( ( Min( RCSe ,MUC ) - RCSe ),( Min( ( RCSe + MUC ) ,( Max( RCSe,MUM ) + MUM ) ) - MUR ) ) ) )", "obj1": 0.6053639846743295, "obj2": 0.26660572008838096}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( CRS / ACS ) ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( MUR - DS ) ) + RMSe ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,CS ) ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031023298619688448}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( Max( Max( MUC,RRSe ),MLU ) * Min( MLU ,RRSe ) ) )", "obj1": 0.9961685823754789, "obj2": 0.0013885514627326931}, {"determining": "( Min( MRS ,MRS ) - ( ( Min( ACS ,( FirstVNF_CPU / Max( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),DDR ),RRS ) ) ) / DDR ) + ( ARS * CRS ) ) )", "choosing": "( ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) / ( ( ( ( MUM / Max( RCSe,MUC ) ) + CS ) - Min( Min( ( Max( RMSe,Max( RRSe,DS ) ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) )", "obj1": 0.921455938697318, "obj2": 0.031942864825938916}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * DDR ) / ( Min( ( PN + FirstVNF_RAM_Server ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server * BR ) ) ) / DDR ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( MUC ,( Max( RMSe,RCSe ) / MLU ) ) ,( CS / CS ) ) ) / ( ( MUC / ( RCSe / RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( ( ( CS * MLU ) * ( MUC / MUM ) ) / ( MUR + RCSe ) ) )", "obj1": 0.9252873563218391, "obj2": 0.029794250069530768}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ( RRS - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ),RRS ) ) ,( FirstVNF_CPU / ( Min( Max( MDR,MRS ) ,( DDR + DDR ) ) / DDR ) ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( RRSe,( ( RCSe / CS ) - DS ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / DS ) ),MLU ) )", "obj1": 0.8735632183908046, "obj2": 0.052255196425561805}, {"determining": "( ( ( PN / Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( Max( ACS,FirstVNF_CPU ) - MRS ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + ( RRSe + Min( ( Max( MUM,MUR ) - Min( MUR ,MUM ) ) ,RRSe ) ) ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.9770114942528736, "obj2": 0.007948471796585454}], "22": [{"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * PN ) - ( ( Min( Const ,FirstVNF_RAM ) / MRS ) + MRS ) )", "choosing": "( ( ( RCSe * MUC ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,( MUM / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) * ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( PN * ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - ( Min( ( DDR + FirstVNF_RAM ) ,( ( Max( PN,FirstVNF_CPU_Server ) + RRS ) / FirstVNF_Mem ) ) - Max( MDR,ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUR - MUC ) - Min( ( DS + RMSe ) ,Min( ( Max( Min( ( RRSe - DS ) ,Min( MUR ,RMSe ) ),DS ) / ( CS / DS ) ) ,( CS * DS ) ) ) )", "obj1": 0.685823754789272, "obj2": 0.16420160007809295}, {"determining": "( ( ARS * ( ( ( Const / Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ARS ),MDR ) ) - ARS ) / CRS ) ) - ( DDR / ( ( FirstVNF_Mem_Server - MDR ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * MLU ) + ( DS - DS ) )", "obj1": 0.6590038314176245, "obj2": 0.178491082402923}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( ( BR - MRS ) / RRS ) ) / DDR ) - Min( ( ( PN * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( ( ( Min( ( ( ( RRSe - ( DS + MUM ) ) / ( CS * MUR ) ) - DS ) ,( CS * MUR ) ) * ( RMSe / Max( ( MUM / DS ),Max( RMSe,CS ) ) ) ) - MUR ),Min( Max( CS,MUM ) ,RRSe ) )", "obj1": 0.6168582375478927, "obj2": 0.2312524689205466}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / RMSe ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUC,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.6436781609195402, "obj2": 0.2090961026437765}, {"determining": "( ( ( ( FirstVNF_RAM_Server / AMS ) / ( ACS * Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / ( DDR / FirstVNF_CPU ) ) ) ) / ( FirstVNF_RAM_Server + Min( RRS ,( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( ( FirstVNF_CPU + CRS ) * Max( ( Max( FirstVNF_CPU_Server,( ARS - MRS ) ) - ( ( FirstVNF_CPU + ACS ) * Const ) ),DDR ) ) )", "choosing": "Max( Min( ( MLU + Min( Max( RCSe,RRSe ) ,Max( ( ( ( MUC / RCSe ) / ( MUR + MUR ) ) / CS ),MUR ) ) ) ,( DS + RMSe ) ),( MUR * MUR ) )", "obj1": 0.6149425287356322, "obj2": 0.25842958121011594}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( PN * ( ( ( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU / PN ) ) / Max( FirstVNF_RAM_Server,ACS ) ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) )", "choosing": "Max( DS,( Max( ( ( RMSe - MUM ) + ( DS * RRSe ) ),MUR ) + MUR ) )", "obj1": 0.6302681992337165, "obj2": 0.22401089900036808}, {"determining": "( ( ( ( ( Const / FirstVNF_RAM ) - MRS ) / CRS ) * ARS ) - ( DDR / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RRSe,DS ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,MUM ) ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6551724137931034, "obj2": 0.19355484030227732}, {"determining": "( ( PN - ( ( Min( ( Min( ( Const / ACS ) ,( BR - ARS ) ) / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( ( MUR / MLU ) / RCSe )", "obj1": 0.6455938697318008, "obj2": 0.19745966277616656}, {"determining": "( ( ( PN / ( Min( DDR ,( AMS + ACS ) ) - ( Const / Min( ( Const + FirstVNF_CPU_Server ) ,PN ) ) ) ) * ( PN * AMS ) ) - ( BR + ARS ) )", "choosing": "( Max( CS,( RMSe * RCSe ) ) / ( Max( MUR,( ( MUM + MLU ) - Max( CS,( ( DS - ( MUR - MUR ) ) * Min( CS ,Max( CS,MUR ) ) ) ) ) ) * ( RMSe + MLU ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07273979488214789}, {"determining": "( ( PN * ( ( CRS + DDR ) - Min( ( ( ARS * CRS ) / ( Min( BR ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( ( ( DS - ( Min( MUC ,CS ) * CS ) ) / ( RCSe - ( RRSe + DS ) ) ),Min( ( ( MUM / RCSe ) / ( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.6264367816091954, "obj2": 0.22636108382545614}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7586206896551724, "obj2": 0.09892077558141045}, {"determining": "( ( ( PN / ( Max( DDR,( Min( FirstVNF_Mem ,MDR ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( ( RRSe - CS ) * ( MUM - MUM ) ) + DS ) - Min( MLU ,RRSe ) ) )", "obj1": 0.8065134099616859, "obj2": 0.07644134152844005}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,( MDR + Min( DDR ,FirstVNF_CPU ) ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,Min( RMSe ,RMSe ) ) / CS ) * MUR ) ) )", "obj1": 0.6015325670498084, "obj2": 0.2635629159980842}, {"determining": "( ( Min( MRS ,( RRS + ( FirstVNF_RAM_Server + Min( ARS ,( RRS * FirstVNF_Mem_Server ) ) ) ) ) + BR ) - ( DDR - MRS ) )", "choosing": "( ( Max( ( MUR / ( MUR + RRSe ) ),( Min( ( RMSe + MUR ) ,( Min( ( RRSe * DS ) ,Max( MLU,RCSe ) ) + DS ) ) / CS ) ) - CS ) * Max( Min( ( MUM / DS ) ,MUM ),MLU ) )", "obj1": 0.896551724137931, "obj2": 0.03935142988702865}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( ARS - PN ) ) - ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,RRS ) ) ) / ( MRS + ( AMS * FirstVNF_Mem ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "Max( DS,Max( ( ( MLU + MUR ) + ( MUR + Max( DS,RRSe ) ) ),Max( ( ( MLU + ( MLU - ( ( RMSe / MUC ) * ( MUR + MLU ) ) ) ) + ( RMSe - CS ) ),MUM ) ) )", "obj1": 0.8486590038314177, "obj2": 0.05965784373145887}, {"determining": "( ( ( ( ACS + Const ) / Min( DDR ,AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( ( ( ARS / CRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - ( ( ACS / RRS ) + MDR ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),MLU ) )", "obj1": 0.6091954022988506, "obj2": 0.26211943262807524}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem * AMS ) ) - Max( ( ACS + RRS ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( DS + ( MUC + MUC ) ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7662835249042146, "obj2": 0.09574052146765016}, {"determining": "( ( FirstVNF_CPU - ( ACS - ( Const - ( MRS * FirstVNF_Mem ) ) ) ) - ( MRS - Min( ( ( AMS - FirstVNF_RAM ) - ARS ) ,ACS ) ) )", "choosing": "( ( MUM - ( DS * ( CS - MUR ) ) ) - ( ( Min( RCSe ,Max( ( ( Min( RRSe ,CS ) + MUC ) * ( RCSe * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) - MUR ) - Min( Min( Max( Max( DS,DS ),Max( RRSe,( MUM + ( MLU / MLU ) ) ) ) ,MLU ) ,RRSe ) ) )", "obj1": 0.9061302681992337, "obj2": 0.03810099920863667}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,( MDR + Min( DDR ,BR ) ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,Min( RMSe ,RMSe ) ) / CS ) * MUR ) ) )", "obj1": 0.5881226053639846, "obj2": 0.279233185878392}, {"determining": "( ( Min( ( MRS - ( ( FirstVNF_Mem_Server / ACS ) * FirstVNF_CPU ) ) ,ACS ) * ( ACS / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ARS - CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,Min( ( CS + MLU ) ,MUR ) ) ) * ( MUM / MUM ) ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( RRSe / ( RCSe * ( MLU - DS ) ) ) + CS ) ) ),Min( ( RCSe - RRSe ) ,RCSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06192611889944147}, {"determining": "( ( ( PN / ( Min( DDR ,( ARS * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.8908045977011494, "obj2": 0.043186505542474406}, {"determining": "( ( ( ( Min( MRS ,ARS ) / ARS ) - ( MDR - ( AMS - Min( ( FirstVNF_Mem / Max( ACS,Const ) ) ,FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) / ( DDR / ( ( Max( FirstVNF_RAM_Server,BR ) - AMS ) - ( RRS * MRS ) ) ) )", "choosing": "( Min( ( RCSe / MLU ) ,( MUC / RCSe ) ) - ( ( RMSe - ( ( ( ( DS / MUR ) * Max( DS,DS ) ) + ( Max( RRSe,( RCSe / MUR ) ) + Min( MUM ,MUC ) ) ) * CS ) ) + DS ) )", "obj1": 0.9482758620689655, "obj2": 0.017022162412219176}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU * ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),Min( Max( Min( ( ( MUC * ( RRSe / RMSe ) ) - RRSe ) ,( RRSe + Min( RCSe ,MUR ) ) ),RMSe ) ,( CS + CS ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * ( AMS * Const ) ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,Max( MLU,CS ) ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / ( RCSe / DS ) ) )", "obj1": 0.7471264367816092, "obj2": 0.10431811036909899}, {"determining": "( ( MRS * ( ( Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem * FirstVNF_CPU ) + ARS ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,( MUM * ( RMSe * RRSe ) ) )", "obj1": 0.7911877394636015, "obj2": 0.08903231789899962}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( ( PN / ( Min( MDR ,ARS ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( Min( ACS ,Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,( DDR * ARS ) ) ) ) / DDR ) / ( ARS * CRS ) ) )", "choosing": "Min( Max( MUR,RCSe ) ,( ( Max( MUM,RCSe ) + Min( MUR ,CS ) ) + Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.7145593869731801, "obj2": 0.12057388607392726}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( Min( PN ,( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ( FirstVNF_CPU + ( AMS / ( CRS * DDR ) ) ) * CRS ) / ( Min( ( Max( ARS,RRS ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,Const ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( RRSe - CS ) + DS ) - Max( MUR,( RRSe * MUM ) ) ) ,( MLU + RCSe ) ) ) ,RMSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8275862068965517, "obj2": 0.06784178596448646}, {"determining": "( ( ( PN / Min( Min( DDR ,( ( PN + FirstVNF_RAM ) * ( ( RRS + FirstVNF_CPU ) * Const ) ) ) ,( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) - DDR ) ) )", "choosing": "( Max( Min( MLU ,RRSe ),( RMSe * MLU ) ) / ( RRSe + ( ( ( RMSe / CS ) * ( ( Max( Max( CS,MUC ),DS ) + ( RCSe * ( RRSe + RCSe ) ) ) * RRSe ) ) - CS ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10540426450777751}, {"determining": "( ( ( PN / ( Min( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "Max( ( Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) - MUR ),Min( Max( CS,MUM ) ,RRSe ) )", "obj1": 0.8045977011494253, "obj2": 0.08073781723812373}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( RMSe,RCSe ) - ( MUM / Min( ( Min( CS ,MUR ) / ( Min( ( ( RRSe - MLU ) - RMSe ) ,Min( MUR ,MUR ) ) / RRSe ) ) ,RRSe ) ) )", "obj1": 0.7969348659003831, "obj2": 0.08494484545803478}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.1300120043462737}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( Min( ( PN + FirstVNF_RAM_Server ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server * BR ) ) ) / DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( MUR * CS ) - MUR ),( ( Min( RRSe ,Min( RMSe ,RMSe ) ) / CS ) * MUR ) ) )", "obj1": 0.5881226053639846, "obj2": 0.279233185878392}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( Min( Const ,AMS ) ,Const ),( ( CRS + ARS ) - Min( AMS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.7835249042145593, "obj2": 0.09119290914696992}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) - ( PN * AMS ) ) - Min( BR ,AMS ) )", "choosing": "( ( ( ( ( MUM / Max( MUC,RCSe ) ) / CS ) - ( ( Max( MUM,( MLU + CS ) ) - ( RMSe - ( ( MUR * CS ) * Min( MUR ,RCSe ) ) ) ) - ( RRSe / ( MUC / ( MUC + RRSe ) ) ) ) ) + RRSe ) / RMSe )", "obj1": 0.7701149425287356, "obj2": 0.09385392782869717}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ( Min( Max( MDR,MRS ) ,( MRS / ARS ) ) / ( DDR / ACS ) ) ) ) / ( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ) / ( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( RMSe / ( MUR - MUR ) )", "obj1": 0.7758620689655172, "obj2": 0.09262266122104217}, {"determining": "( ( PN * ( Min( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ,DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( MLU,Min( Min( ( MUM / RCSe ) ,( MLU - ( ( MUC - ( RCSe + DS ) ) / MLU ) ) ) ,MUR ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08367716071402338}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( ( CS - Max( MUR,RMSe ) ) / MUC ) / MLU ) ,RCSe ) - ( DS + ( Min( ( ( RMSe - ( MUR + CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) + RMSe ) ) )", "obj1": 0.8544061302681992, "obj2": 0.054432665305241774}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * ( ( FirstVNF_Mem * RRS ) * ACS ) ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.8524904214559387, "obj2": 0.055214168886500034}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( ( ( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( AMS + PN ) ) * PN ) - ( CRS + Max( Max( ( ACS - FirstVNF_CPU ),RRS ),Min( PN ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM * Min( ( Min( MUR ,CS ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,Max( RMSe,MUC ) ) ) - ( MUM + ( Min( ( RCSe / MUR ) ,RCSe ) + Min( Min( RMSe ,MUR ) ,DS ) ) ) )", "obj1": 0.9425287356321839, "obj2": 0.02310937653962019}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - Min( DDR ,( ARS * Max( ( FirstVNF_RAM + ARS ),FirstVNF_CPU ) ) ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ARS - ( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( ( CS - ( Max( DS,MUR ) - ( RMSe * MUC ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( Min( MUR ,RMSe ) - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8639846743295019, "obj2": 0.053852748591532995}, {"determining": "( Max( Max( ( CRS * ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( AMS * ( ( FirstVNF_Mem_Server - Max( AMS,( BR - ARS ) ) ) * FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM - MRS ) ) - ( ACS * PN ) )", "choosing": "( ( RCSe + Min( MUM ,( Max( MUR,( DS * ( ( RRSe / MUM ) / RMSe ) ) ) + Min( Max( MUM,MUC ) ,MUC ) ) ) ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.014300928987263558}, {"determining": "( ( MRS * Max( RRS,( Const * BR ) ) ) - ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU * ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( ( ( Max( MLU,RCSe ) * ( RMSe * RMSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( ( ( RCSe / DS ) + Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Min( MUR ,CS ) ) / CS ) - ( MLU / Max( RMSe,MUM ) ) ) ) ) )", "obj1": 0.6973180076628352, "obj2": 0.1282697390501788}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * FirstVNF_CPU ) ) - ( ( ARS * ( Const / CRS ) ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( ( ( FirstVNF_RAM_Server + RRS ) * FirstVNF_Mem_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "( Max( Min( ( ( ( CS + MUR ) / MUR ) / ( CS * MUC ) ) ,Min( RCSe ,MLU ) ),Min( MUR ,RCSe ) ) * ( ( ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * CS ) ) ) + RCSe ) ) + Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) ) / ( ( MUR * MUC ) + Min( RCSe ,MUM ) ) ) )", "obj1": 0.7203065134099617, "obj2": 0.11662163985801538}, {"determining": "( ( ( FirstVNF_Mem / ( Min( DDR ,( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Min( ( RRS / FirstVNF_CPU ) ,ARS ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem / Const ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / FirstVNF_CPU ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RRSe / ( MLU * ( Min( MLU ,( RCSe * RMSe ) ) / MUR ) ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,MRS ) + MRS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / DS ) ),MLU ) )", "obj1": 0.9157088122605364, "obj2": 0.034798585899798874}, {"determining": "( ( RRS + MRS ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU + Max( ( Max( Const,AMS ) / DDR ),RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Max( ( MUM - MLU ),( MLU * MUR ) )", "obj1": 0.9674329501915708, "obj2": 0.013362984029338543}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( CRS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( MUR ,RMSe ),( ( CS + Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,( CS / CS ) ) ) * MUR ) ) )", "obj1": 0.8390804597701149, "obj2": 0.06459253847903337}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS - ( ( MDR + FirstVNF_CPU ) * Const ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( ( ( ( RCSe - RMSe ) - ( CS + MUR ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7068965517241379, "obj2": 0.1219817746300119}, {"determining": "( ( ( PN * AMS ) * ( MRS / ( Min( MDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU / PN ) + Const ) ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( MUM,Min( MUC ,RRSe ) ) / Max( DS,MUC ) )", "obj1": 0.7279693486590039, "obj2": 0.11391019854446555}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( MUR,Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.7950191570881227, "obj2": 0.0883110238164786}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( Min( ( MUR - ( ( Max( CS,DS ) / MUM ) / CS ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RMSe ) + ( ( ( ( RCSe / RRSe ) - ( MUM * CS ) ) - Min( RRSe ,( CS + MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7260536398467433, "obj2": 0.11435693293869617}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * CRS ) ) / Min( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU / ( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) ) ) ) )", "choosing": "Min( ( Max( ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( DS / ( MUC / ( MUC + RRSe ) ) ) ),MUR ) - RMSe ) ,MUM )", "obj1": 0.8754789272030651, "obj2": 0.04902950558130889}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ARS / CRS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,MUC ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,RMSe ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003375462200090104}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - ( RRS + FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( ARS * CRS ) / ( DDR / Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_RAM - PN ) + Min( DDR ,BR ) ) ) ) ,Max( FirstVNF_CPU,Min( FirstVNF_RAM ,( DDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RRSe ,( ( RRSe / Max( RRSe,RRSe ) ) * RCSe ) ) / CS ) * MUR ),( ( MUR * RCSe ) - RRSe ) ) / ( ( RRSe - RCSe ) - ( ( MUM + Min( RMSe ,( DS - Min( MUR ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10768261949220766}, {"determining": "( ( ( ( Min( DDR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,MRS ) ) / PN ) * ( PN * AMS ) ) - ( ( ARS * CRS ) * ARS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * Max( ( MUR / RCSe ),( MUR - ( ( DS / RMSe ) - RMSe ) ) ) ) )", "obj1": 0.8793103448275862, "obj2": 0.0484716414613445}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( DDR / RRS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * Max( ( MUR / RCSe ),( MUR - ( ( DS / RMSe ) - RMSe ) ) ) ) )", "obj1": 0.7030651340996169, "obj2": 0.12536449165132005}, {"determining": "( ( ( BR / ( Const * DDR ) ) / ( Min( Const ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_RAM ,DDR ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Const )", "choosing": "Max( DS,( RRSe + ( DS / Min( MUC ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( MLU + RMSe ) ) ) + ( Max( ( RRSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MLU - MUM ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02194202764925087}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / DS ) ),MLU ) )", "obj1": 0.8735632183908046, "obj2": 0.052255196425561805}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.12659877421094784}, {"determining": "( ( PN * ( ( Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) / DDR ) - Min( ( CRS + FirstVNF_CPU_Server ) ,AMS ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,( RMSe + MUM ) ) * ( RMSe - RMSe ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Const ,MRS ) + MRS ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - Min( RCSe ,MLU ) )", "obj1": 0.9195402298850575, "obj2": 0.032836964823913475}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN + AMS ) ) - ( ( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / ( FirstVNF_CPU_Server / ARS ) ) )", "choosing": "Max( ( ( Min( ( ( ( MUR * MUR ) * RCSe ) - ( MUC - ( RRSe + RCSe ) ) ) ,( CS * MUR ) ) + ( RMSe / Max( Max( RMSe,CS ),( MUM / DS ) ) ) ) - MUR ),Min( ( CS / MUM ) ,RRSe ) )", "obj1": 0.7337164750957854, "obj2": 0.11154691076894967}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( FirstVNF_CPU / ARS ) ) )", "choosing": "( Min( ( ( ( ( MUM / Max( MLU,MUC ) ) / ( RRSe - RRSe ) ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUR ) ) )", "obj1": 0.975095785440613, "obj2": 0.008910734793228719}, {"determining": "( Max( ( PN / FirstVNF_RAM ),FirstVNF_Mem ) - ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,( Min( CS ,CS ) / ( MUM / MLU ) ) ) ) / CS ) - ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) - ( CS / CS ) ) ) / ( ( Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) + RRSe ) * Min( MLU ,RMSe ) ) ) / Min( Min( RCSe ,MUM ) ,MUR ) )", "obj1": 0.9272030651340997, "obj2": 0.02925872671857499}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / ( ARS - RRS ) ) ,( FirstVNF_CPU / ( ( BR / FirstVNF_Mem_Server ) / BR ) ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Min( Min( Min( ( DS / MUR ) ,Min( Min( RRSe ,MUC ) ,MLU ) ) ,MUR ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09216833864964138}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.8831417624521073, "obj2": 0.047112784430687046}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_RAM * FirstVNF_Mem ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( Max( DS,MUR ) - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUC ) ) ) ,( ( RMSe - MUM ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04529493398871982}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / DS ) ),MLU ) )", "obj1": 0.8716475095785441, "obj2": 0.05323232519037305}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * PN ) - ( ( Min( Const ,FirstVNF_RAM ) / MRS ) + MRS ) )", "choosing": "( ( ( RCSe * MUC ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,( MUM / MUC ) ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03613553823966046}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) ) )", "obj1": 0.7049808429118773, "obj2": 0.12226511751889758}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( Min( FirstVNF_RAM ,ARS ) * ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( ( ( ( MUM / Max( RCSe,RCSe ) ) + Min( Max( MUM,MUC ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,RMSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0022711548147186012}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * CRS ) ) / Min( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU / ( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) ) ) ) )", "choosing": "Min( ( Max( ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( DS / ( MUC / ( MUC + RRSe ) ) ) ),MUR ) - RMSe ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( ( MLU / DS ),( CS * MLU ) ) ) )", "obj1": 0.8659003831417624, "obj2": 0.05348983161431539}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Min( ACS ,( ( ACS + MDR ) * CRS ) ) / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) / DS ) ),MLU ) )", "obj1": 0.8869731800766284, "obj2": 0.04706928147447224}, {"determining": "( ( ( ARS / ( Min( ( AMS * FirstVNF_CPU ) ,Const ) / ( Const / FirstVNF_RAM ) ) ) * ( AMS * RRS ) ) - ( ( MRS + AMS ) + FirstVNF_Mem ) )", "choosing": "( ( MUC * CS ) * ( Min( Min( RRSe ,CS ) ,MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.7164750957854407, "obj2": 0.11813242538030118}, {"determining": "( ( ( PN / Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( Max( ACS,FirstVNF_CPU ) - MRS ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + ( RRSe + Min( ( Max( MUM,MUR ) - Min( MUR ,MUM ) ) ,RRSe ) ) ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.9770114942528736, "obj2": 0.007711276867644333}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( FirstVNF_CPU,( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( Min( MUM ,( ( Min( ( RRSe * MUM ) ,( MLU + RMSe ) ) / Max( RRSe,MUC ) ) * RCSe ) ) * Min( RCSe ,MUR ) ) * Max( MLU,MUR ) ) * Min( RCSe ,MLU ) )", "obj1": 0.9693486590038314, "obj2": 0.012495471505567363}, {"determining": "( ( PN * ( ( Min( FirstVNF_CPU_Server ,( Min( ACS ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( Min( MLU ,RRSe ),RRSe ) * ( RRSe - RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004334454779699649}, {"determining": "( ( ( ( BR - BR ) * MRS ) - Min( PN ,AMS ) ) - ( ARS / ( ARS * CRS ) ) )", "choosing": "( ( ( ( ( ( RCSe / ( Max( MUR,MLU ) - CS ) ) / Max( DS,CS ) ) - ( ( ( RMSe + ( CS / MUM ) ) + RCSe ) / RMSe ) ) + Min( CS ,DS ) ) / MUR ) - Max( RMSe,RCSe ) )", "obj1": 0.9118773946360154, "obj2": 0.035947375929578806}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / MLU ),Max( MUR,MUC ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / Min( MUM ,RMSe ) ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.0067879034449303275}, {"determining": "( ( Max( ( CRS + ( Const / ( FirstVNF_Mem / Min( FirstVNF_CPU ,PN ) ) ) ),FirstVNF_Mem ) * ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( Min( ACS ,Max( ( RRS / Const ),CRS ) ) ,( FirstVNF_RAM / AMS ) ) ) ) - ( FirstVNF_CPU - AMS ) )", "choosing": "( Max( MLU,( ( MUC / DS ) + MUM ) ) * ( MUR + ( CS * ( MUM / Max( ( DS + RCSe ),RRSe ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.004763226325240704}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * ( ARS + ( DDR - PN ) ) ) ) ) - ( PN - MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Max( ( ( ( RMSe + MUM ) + DS ) - Max( ( ( MUM * ( MLU / RCSe ) ) / Max( MUC,CS ) ),RMSe ) ),( MLU + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / MLU ),Max( MUR,MUC ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / Min( MUM ,RMSe ) ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9808429118773946, "obj2": 0.007374214181222381}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( CRS / ACS ) ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( MUR - DS ) ) + RMSe ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,CS ) ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031023298619688448}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( ARS * BR ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / FirstVNF_RAM ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) / Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( RMSe ,( ( ( ( MUM + Max( MLU,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ) - ( DS / MLU ) )", "obj1": 0.9712643678160919, "obj2": 0.01055941806285449}, {"determining": "( Min( MRS ,MRS ) - ( ( Min( ACS ,( FirstVNF_CPU / Max( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),DDR ),RRS ) ) ) / DDR ) + ( ARS * CRS ) ) )", "choosing": "( ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) / ( ( ( ( MUM / Max( RCSe,MUC ) ) + CS ) - Min( Min( ( Max( RMSe,Max( RRSe,DS ) ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) )", "obj1": 0.921455938697318, "obj2": 0.031942864825938916}], "23": [{"determining": "( ( Const * ( BR - FirstVNF_RAM ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU + Max( ( ( FirstVNF_CPU / ACS ) / ( FirstVNF_RAM * RRS ) ),RRS ) ) ,( MRS / Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_Mem_Server + ARS ) ) ) ) / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),Min( Max( FirstVNF_CPU_Server,DDR ) ,( FirstVNF_Mem_Server + MDR ) ) ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * Max( CS,Min( Max( DS,( Max( RCSe,MUM ) + MUR ) ) ,( Max( MLU,( MLU * RCSe ) ) + ( RRSe + MLU ) ) ) ) ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * PN ) - ( ( Min( Const ,FirstVNF_RAM ) / MRS ) + MRS ) )", "choosing": "( ( ( RCSe * MUC ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,( MUM / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( PN * ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - ( Min( ( DDR + FirstVNF_RAM ) ,( ( Max( PN,FirstVNF_CPU_Server ) + RRS ) / FirstVNF_Mem ) ) - Max( MDR,ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUR - MUC ) - Min( ( DS + RMSe ) ,Min( ( Max( Min( ( RRSe - DS ) ,Min( MUR ,RMSe ) ),DS ) / ( CS / DS ) ) ,( CS * DS ) ) ) )", "obj1": 0.685823754789272, "obj2": 0.16420160007809295}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( ( BR - MRS ) / RRS ) ) / DDR ) - Min( ( ( PN * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( ( ( Min( ( ( ( RRSe - ( DS + MUM ) ) / ( CS * MUR ) ) - DS ) ,( CS * MUR ) ) * ( RMSe / Max( ( MUM / DS ),Max( RMSe,CS ) ) ) ) - MUR ),Min( Max( CS,MUM ) ,RRSe ) )", "obj1": 0.6168582375478927, "obj2": 0.2312524689205466}, {"determining": "( ( ( ( FirstVNF_RAM_Server / AMS ) / ( ACS * Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / ( DDR / FirstVNF_CPU ) ) ) ) / ( FirstVNF_RAM_Server + Min( RRS ,( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( ( FirstVNF_CPU + CRS ) * Max( ( Max( FirstVNF_CPU_Server,( ARS - MRS ) ) - ( ( FirstVNF_CPU + ACS ) * Const ) ),DDR ) ) )", "choosing": "Max( Min( ( MLU + Min( Max( RCSe,RRSe ) ,Max( ( ( ( MUC / RCSe ) / ( MUR + MUR ) ) / CS ),MUR ) ) ) ,( DS + RMSe ) ),( MUR * MUR ) )", "obj1": 0.6149425287356322, "obj2": 0.25842958121011594}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( ARS * ( ( ( Const / Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ARS ),MDR ) ) - ARS ) / CRS ) ) - ( DDR / ( ( FirstVNF_Mem_Server - MDR ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * MLU ) + ( DS - DS ) )", "obj1": 0.6590038314176245, "obj2": 0.178491082402923}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.6704980842911877, "obj2": 0.17286820156056576}, {"determining": "( ( Min( ( ( BR * CRS ) - FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,( MDR + FirstVNF_Mem_Server ) ) ) * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / Min( ( ( ARS * CRS ) / ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,( ( MUM + Max( RCSe,MUC ) ) + ( Max( Min( ( Max( Min( RMSe ,RMSe ),MUC ) + MUC ) ,RRSe ),( ( MUC + MLU ) / MUR ) ) + RCSe ) ) )", "obj1": 0.6360153256704981, "obj2": 0.2024517424541955}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / Max( ARS,RRS ) ) ) ) ) - ( CRS + MRS ) )", "choosing": "( ( Max( MUR,( MUM * MUC ) ) / ( MLU * MLU ) ) / RMSe )", "obj1": 0.6513409961685823, "obj2": 0.19303324799488839}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.632183908045977, "obj2": 0.21680602397629156}, {"determining": "( ( PN - ( ( Min( ( Min( ( Const / ACS ) ,( BR - ARS ) ) / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( ( MUR / MLU ) / RCSe )", "obj1": 0.6455938697318008, "obj2": 0.19745966277616656}, {"determining": "( ( ( PN / ( Min( DDR ,( AMS + ACS ) ) - ( Const / Min( ( Const + FirstVNF_CPU_Server ) ,PN ) ) ) ) * ( PN * AMS ) ) - ( BR + ARS ) )", "choosing": "( Max( CS,( RMSe * RCSe ) ) / ( Max( MUR,( ( MUM + MLU ) - Max( CS,( ( DS - ( MUR - MUR ) ) * Min( CS ,Max( CS,MUR ) ) ) ) ) ) * ( RMSe + MLU ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07273979488214789}, {"determining": "( ( PN * ( ( CRS + DDR ) - Min( ( ( ARS * CRS ) / ( Min( BR ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( ( ( DS - ( Min( MUC ,CS ) * CS ) ) / ( RCSe - ( RRSe + DS ) ) ),Min( ( ( MUM / RCSe ) / ( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.6264367816091954, "obj2": 0.22636108382545614}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7586206896551724, "obj2": 0.09892077558141045}, {"determining": "( ( ( PN / ( Max( DDR,( Min( FirstVNF_Mem ,MDR ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( ( RRSe - CS ) * ( MUM - MUM ) ) + DS ) - Min( MLU ,RRSe ) ) )", "obj1": 0.8065134099616859, "obj2": 0.07644134152844005}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,( MDR + Min( DDR ,FirstVNF_CPU ) ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,Min( RMSe ,RMSe ) ) / CS ) * MUR ) ) )", "obj1": 0.6015325670498084, "obj2": 0.2635629159980842}, {"determining": "( ( Min( MRS ,( RRS + ( FirstVNF_RAM_Server + Min( ARS ,( RRS * FirstVNF_Mem_Server ) ) ) ) ) + BR ) - ( DDR - MRS ) )", "choosing": "( ( Max( ( MUR / ( MUR + RRSe ) ),( Min( ( RMSe + MUR ) ,( Min( ( RRSe * DS ) ,Max( MLU,RCSe ) ) + DS ) ) / CS ) ) - CS ) * Max( Min( ( MUM / DS ) ,MUM ),MLU ) )", "obj1": 0.896551724137931, "obj2": 0.03935142988702865}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( ARS - PN ) ) - ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,RRS ) ) ) / ( MRS + ( AMS * FirstVNF_Mem ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "Max( DS,Max( ( ( MLU + MUR ) + ( MUR + Max( DS,RRSe ) ) ),Max( ( ( MLU + ( MLU - ( ( RMSe / MUC ) * ( MUR + MLU ) ) ) ) + ( RMSe - CS ) ),MUM ) ) )", "obj1": 0.8486590038314177, "obj2": 0.05965784373145887}, {"determining": "( ( ( ( ACS + Const ) / Min( DDR ,AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( ( ( ARS / CRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - ( ( ACS / RRS ) + MDR ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),MLU ) )", "obj1": 0.6091954022988506, "obj2": 0.26211943262807524}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - MDR ) ) - ( ( ARS * CRS ) / ( Min( Max( CRS,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( RMSe + ( Max( CS,( Min( ( MUR / MUR ) ,RMSe ) + RRSe ) ) + MUC ) ) - ( MUC * ( Min( ( CS * MUM ) ,MUR ) * MUR ) ) ) )", "obj1": 0.8754789272030651, "obj2": 0.04789658697492075}, {"determining": "( ( PN * ( ( ( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU / PN ) ) / Max( FirstVNF_RAM_Server,ACS ) ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) )", "choosing": "Max( DS,( Max( ( ( RMSe - MUM ) + ( DS * RRSe ) ),MUR ) + MUR ) )", "obj1": 0.6302681992337165, "obj2": 0.22401089900036808}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem * AMS ) ) - Max( ( ACS + RRS ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( DS + ( MUC + MUC ) ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7662835249042146, "obj2": 0.09574052146765016}, {"determining": "( ( ( FirstVNF_Mem / ( Min( DDR ,( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Min( ( RRS / FirstVNF_CPU ) ,ARS ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem / Const ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / FirstVNF_CPU ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RRSe / ( MLU * ( Min( MLU ,( RCSe * RMSe ) ) / MUR ) ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}, {"determining": "( ( FirstVNF_CPU - ( ACS - ( Const - ( MRS * FirstVNF_Mem ) ) ) ) - ( MRS - Min( ( ( AMS - FirstVNF_RAM ) - ARS ) ,ACS ) ) )", "choosing": "( ( MUM - ( DS * ( CS - MUR ) ) ) - ( ( Min( RCSe ,Max( ( ( Min( RRSe ,CS ) + MUC ) * ( RCSe * ( RMSe / MUR ) ) ),Min( RCSe ,RMSe ) ) ) - MUR ) - Min( Min( Max( Max( DS,DS ),Max( RRSe,( MUM + ( MLU / MLU ) ) ) ) ,MLU ) ,RRSe ) ) )", "obj1": 0.9061302681992337, "obj2": 0.03810099920863667}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,( MDR + Min( DDR ,BR ) ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,Min( RMSe ,RMSe ) ) / CS ) * MUR ) ) )", "obj1": 0.5881226053639846, "obj2": 0.279233185878392}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,Max( DDR,ACS ) ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( RRSe,( RCSe - RRSe ) ) / Max( MLU,CS ) )", "obj1": 0.867816091954023, "obj2": 0.05043134920745744}, {"determining": "( ( ( PN / ( Min( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "Max( ( Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) - MUR ),Min( Max( CS,MUM ) ,RRSe ) )", "obj1": 0.8045977011494253, "obj2": 0.08073781723812373}, {"determining": "( ( Min( ( MRS - ( ( FirstVNF_Mem_Server / ACS ) * FirstVNF_CPU ) ) ,ACS ) * ( ACS / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ARS - CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,Min( ( CS + MLU ) ,MUR ) ) ) * ( MUM / MUM ) ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( RRSe / ( RCSe * ( MLU - DS ) ) ) + CS ) ) ),Min( ( RCSe - RRSe ) ,RCSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06192611889944147}, {"determining": "( ( ( PN / ( Min( DDR ,( ARS * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.8908045977011494, "obj2": 0.043186505542474406}, {"determining": "( ( ( ( Min( MRS ,ARS ) / ARS ) - ( MDR - ( AMS - Min( ( FirstVNF_Mem / Max( ACS,Const ) ) ,FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) / ( DDR / ( ( Max( FirstVNF_RAM_Server,BR ) - AMS ) - ( RRS * MRS ) ) ) )", "choosing": "( Min( ( RCSe / MLU ) ,( MUC / RCSe ) ) - ( ( RMSe - ( ( ( ( DS / MUR ) * Max( DS,DS ) ) + ( Max( RRSe,( RCSe / MUR ) ) + Min( MUM ,MUC ) ) ) * CS ) ) + DS ) )", "obj1": 0.9482758620689655, "obj2": 0.017022162412219176}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU * ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),Min( Max( Min( ( ( MUC * ( RRSe / RMSe ) ) - RRSe ) ,( RRSe + Min( RCSe ,MUR ) ) ),RMSe ) ,( CS + CS ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * ( AMS * Const ) ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,Max( MLU,CS ) ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / ( RCSe / DS ) ) )", "obj1": 0.7471264367816092, "obj2": 0.10431811036909899}, {"determining": "( ( MRS * ( ( Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem * FirstVNF_CPU ) + ARS ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,( MUM * ( RMSe * RRSe ) ) )", "obj1": 0.7911877394636015, "obj2": 0.08903231789899962}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN + AMS ) ) - ( ( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / ( FirstVNF_CPU_Server / ARS ) ) )", "choosing": "Max( ( ( Min( ( ( ( MUR * MUR ) * RCSe ) - ( MUC - ( RRSe + RCSe ) ) ) ,( CS * MUR ) ) + ( RMSe / Max( Max( RMSe,CS ),( MUM / DS ) ) ) ) - MUR ),Min( ( CS / MUM ) ,RRSe ) )", "obj1": 0.7337164750957854, "obj2": 0.11154691076894967}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,( Min( RCSe ,Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) ) / RCSe ) ) )", "obj1": 0.7126436781609196, "obj2": 0.11920997342834294}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * FirstVNF_CPU ) ) - ( ( ARS * ( Const / CRS ) ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( ( ( FirstVNF_RAM_Server + RRS ) * FirstVNF_Mem_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "( Max( Min( ( ( ( CS + MUR ) / MUR ) / ( CS * MUC ) ) ,Min( RCSe ,MLU ) ),Min( MUR ,RCSe ) ) * ( ( ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * CS ) ) ) + RCSe ) ) + Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) ) / ( ( MUR * MUC ) + Min( RCSe ,MUM ) ) ) )", "obj1": 0.7203065134099617, "obj2": 0.11662163985801538}, {"determining": "( ( Min( PN ,( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ( FirstVNF_CPU + ( AMS / ( CRS * DDR ) ) ) * CRS ) / ( Min( ( Max( ARS,RRS ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,Const ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( RRSe - CS ) + DS ) - Max( MUR,( RRSe * MUM ) ) ) ,( MLU + RCSe ) ) ) ,RMSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8275862068965517, "obj2": 0.06784178596448646}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ARS / CRS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + MRS ) )", "choosing": "( ( ( RCSe * ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / Min( MUM ,RMSe ) ) ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,MUC ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,RMSe ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0020339598857774784}, {"determining": "( ( ( PN / Min( Min( DDR ,( ( PN + FirstVNF_RAM ) * ( ( RRS + FirstVNF_CPU ) * Const ) ) ) ,( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) - DDR ) ) )", "choosing": "( Max( Min( MLU ,RRSe ),( RMSe * MLU ) ) / ( RRSe + ( ( ( RMSe / CS ) * ( ( Max( Max( CS,MUC ),DS ) + ( RCSe * ( RRSe + RCSe ) ) ) * RRSe ) ) - CS ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10540426450777751}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( Min( ( PN + FirstVNF_RAM_Server ) ,( FirstVNF_CPU + ( FirstVNF_CPU_Server * BR ) ) ) / DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( MUR * CS ) - MUR ),( ( Min( RRSe ,Min( RMSe ,RMSe ) ) / CS ) * MUR ) ) )", "obj1": 0.5881226053639846, "obj2": 0.279233185878392}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( Min( Const ,AMS ) ,Const ),( ( CRS + ARS ) - Min( AMS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.7835249042145593, "obj2": 0.09119290914696992}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) - ( PN * AMS ) ) - Min( BR ,AMS ) )", "choosing": "( ( ( ( ( MUM / Max( MUC,RCSe ) ) / CS ) - ( ( Max( MUM,( MLU + CS ) ) - ( RMSe - ( ( MUR * CS ) * Min( MUR ,RCSe ) ) ) ) - ( RRSe / ( MUC / ( MUC + RRSe ) ) ) ) ) + RRSe ) / RMSe )", "obj1": 0.7701149425287356, "obj2": 0.09385392782869717}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ( Min( Max( MDR,MRS ) ,( MRS / ARS ) ) / ( DDR / ACS ) ) ) ) / ( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ) / ( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( RMSe / ( MUR - MUR ) )", "obj1": 0.7758620689655172, "obj2": 0.09262266122104217}, {"determining": "( Max( ( PN / FirstVNF_RAM ),FirstVNF_Mem ) - ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,( Min( CS ,CS ) / ( MUM / MLU ) ) ) ) / CS ) - ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) - ( CS / CS ) ) ) / ( ( Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) + RRSe ) * Min( MLU ,RMSe ) ) ) / Min( Min( RCSe ,MUM ) ,MUR ) )", "obj1": 0.9272030651340997, "obj2": 0.02925872671857499}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( ( CS - Max( MUR,RMSe ) ) / MUC ) / MLU ) ,RCSe ) - ( DS + ( Min( ( ( RMSe - ( MUR + CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) + RMSe ) ) )", "obj1": 0.8544061302681992, "obj2": 0.054432665305241774}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * ( ( FirstVNF_Mem * RRS ) * ACS ) ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.8524904214559387, "obj2": 0.055214168886500034}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( MUR,Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.7950191570881227, "obj2": 0.0883110238164786}, {"determining": "( ( ( ( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( AMS + PN ) ) * PN ) - ( CRS + Max( Max( ( ACS - FirstVNF_CPU ),RRS ),Min( PN ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM * Min( ( Min( MUR ,CS ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,Max( RMSe,MUC ) ) ) - ( MUM + ( Min( ( RCSe / MUR ) ,RCSe ) + Min( Min( RMSe ,MUR ) ,DS ) ) ) )", "obj1": 0.9425287356321839, "obj2": 0.02310937653962019}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - Min( DDR ,( ARS * Max( ( FirstVNF_RAM + ARS ),FirstVNF_CPU ) ) ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ARS - ( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( ( CS - ( Max( DS,MUR ) - ( RMSe * MUC ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( Min( MUR ,RMSe ) - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8639846743295019, "obj2": 0.053852748591532995}, {"determining": "( ( ( ( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( Min( ARS ,CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Max( DS,Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),Min( Min( ( ( MUM + ( RMSe + MUM ) ) / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.7988505747126436, "obj2": 0.08322665485834711}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.8831417624521073, "obj2": 0.047112784430687046}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,MRS ) + MRS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / DS ) ),MLU ) )", "obj1": 0.9157088122605364, "obj2": 0.034798585899798874}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS - ( ( MDR + FirstVNF_CPU ) * Const ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( ( ( ( RCSe - RMSe ) - ( CS + MUR ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7068965517241379, "obj2": 0.1219817746300119}, {"determining": "( ( ( PN * AMS ) * ( MRS / ( Min( MDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU / PN ) + Const ) ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( MUM,Min( MUC ,RRSe ) ) / Max( DS,MUC ) )", "obj1": 0.7279693486590039, "obj2": 0.11391019854446555}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( Min( ( MUR - ( ( Max( CS,DS ) / MUM ) / CS ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RMSe ) + ( ( ( ( RCSe / RRSe ) - ( MUM * CS ) ) - Min( RRSe ,( CS + MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7260536398467433, "obj2": 0.11435693293869617}, {"determining": "( ( ( ARS / ( Min( ( AMS * FirstVNF_CPU ) ,Const ) / ( Const / FirstVNF_RAM ) ) ) * ( AMS * RRS ) ) - ( ( MRS + AMS ) + FirstVNF_Mem ) )", "choosing": "( ( MUC * CS ) * ( Min( Min( RRSe ,CS ) ,MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.7164750957854407, "obj2": 0.11813242538030118}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,MLU ) ) )", "obj1": 0.7969348659003831, "obj2": 0.0841534339891466}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ARS / CRS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,MUC ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,RMSe ) ) )", "obj1": 0.9904214559386973, "obj2": 0.003375462200090104}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - ( RRS + FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( ARS * CRS ) / ( DDR / Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_RAM - PN ) + Min( DDR ,BR ) ) ) ) ,Max( FirstVNF_CPU,Min( FirstVNF_RAM ,( DDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RRSe ,( ( RRSe / Max( RRSe,RRSe ) ) * RCSe ) ) / CS ) * MUR ),( ( MUR * RCSe ) - RRSe ) ) / ( ( RRSe - RCSe ) - ( ( MUM + Min( RMSe ,( DS - Min( MUR ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10768261949220766}, {"determining": "( ( MRS * Max( RRS,( Const * BR ) ) ) - ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU * ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( ( ( Max( MLU,RCSe ) * ( RMSe * RMSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( ( ( RCSe / DS ) + Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Min( MUR ,CS ) ) / CS ) - ( MLU / Max( RMSe,MUM ) ) ) ) ) )", "obj1": 0.6973180076628352, "obj2": 0.1282697390501788}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( DDR / RRS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * Max( ( MUR / RCSe ),( MUR - ( ( DS / RMSe ) - RMSe ) ) ) ) )", "obj1": 0.7030651340996169, "obj2": 0.12536449165132005}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.1300120043462737}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( MLU + RMSe ) ) ) + ( Max( ( RRSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MLU - MUM ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02194202764925087}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.12659877421094784}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * ( ARS + ( DDR - PN ) ) ) ) ) - ( PN - MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Max( ( ( ( RMSe + MUM ) + DS ) - Max( ( ( MUM * ( MLU / RCSe ) ) / Max( MUC,CS ) ),RMSe ) ),( MLU + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Const ,MRS ) + MRS ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - Min( RCSe ,MLU ) )", "obj1": 0.9195402298850575, "obj2": 0.032836964823913475}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / ( ARS - RRS ) ) ,( FirstVNF_CPU / ( ( BR / FirstVNF_Mem_Server ) / BR ) ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Min( Min( Min( ( DS / MUR ) ,Min( Min( RRSe ,MUC ) ,MLU ) ) ,MUR ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( Min( MLU ,RRSe ),( CS * MLU ) ) ) )", "obj1": 0.7816091954022989, "obj2": 0.09216833864964138}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( CRS / ACS ) ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( MUR - DS ) ) + RMSe ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,CS ) ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031023298619688448}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( CRS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( MUR ,RMSe ),( ( CS + Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,( CS / CS ) ) ) * MUR ) ) )", "obj1": 0.8390804597701149, "obj2": 0.06459253847903337}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_RAM * FirstVNF_Mem ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( Max( CS,( Max( DS,MUR ) - ( RMSe * MLU ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUC ) ) ) ,( ( RMSe - MUM ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04529493398871982}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( RRS + MRS ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU + Max( ( Max( Const,AMS ) / DDR ),RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Max( ( MUM - MLU ),( MLU * MUR ) )", "obj1": 0.9674329501915708, "obj2": 0.013362984029338543}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / ( RRS + ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ) * Min( FirstVNF_CPU_Server ,Const ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,( MDR + Min( DDR ,BR ) ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( MUC - RCSe ),RRSe ) / Max( ( RRSe - ( MUR * CS ) ),( ( Min( RRSe ,Min( RMSe ,( Min( MUM ,DS ) * MUC ) ) ) / CS ) * MUR ) ) )", "obj1": 0.5977011494252874, "obj2": 0.2742126709592589}, {"determining": "( ( ( PN / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / FirstVNF_RAM ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( CRS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( MUR ,RMSe ),( ( CS + Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ) ) * MUR ) ) )", "obj1": 0.9616858237547893, "obj2": 0.013773882275044657}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * PN ) - ( ( Min( Const ,FirstVNF_RAM ) / MRS ) + MRS ) )", "choosing": "( ( ( RCSe * MUC ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,( MUM / MUC ) ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03613553823966046}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * CRS ) ) / Min( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU / ( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) ) ) ) )", "choosing": "Min( ( Max( ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( DS / ( MUC / ( MUC + RRSe ) ) ) ),MUR ) - RMSe ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( ( MLU / DS ),( CS * MLU ) ) ) )", "obj1": 0.8659003831417624, "obj2": 0.05348983161431539}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) ) )", "obj1": 0.7049808429118773, "obj2": 0.12226511751889758}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Min( ACS ,( ( ACS + MDR ) * CRS ) ) / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) / DS ) ),MLU ) )", "obj1": 0.8869731800766284, "obj2": 0.04706928147447224}, {"determining": "( ( ( BR / ( Const * DDR ) ) / ( Min( Const ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_RAM ,DDR ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Const )", "choosing": "Max( DS,( RRSe + ( DS / Min( MUC ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( ( PN / Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( Max( ACS,FirstVNF_CPU ) - MRS ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + ( RRSe + Min( ( Max( MUM,MUR ) - Min( MUR ,MUM ) ) ,RRSe ) ) ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.9770114942528736, "obj2": 0.007711276867644333}, {"determining": "( ( PN * ( ( Min( FirstVNF_CPU_Server ,( Min( ACS ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( Min( MLU ,RRSe ),RRSe ) * ( RRSe - RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004334454779699649}, {"determining": "( ( ( ( BR - BR ) * MRS ) - Min( PN ,AMS ) ) - ( ARS / ( ARS * CRS ) ) )", "choosing": "( ( ( ( ( ( RCSe / ( Max( MUR,MLU ) - CS ) ) / Max( DS,CS ) ) - ( ( ( RMSe + ( CS / MUM ) ) + RCSe ) / RMSe ) ) + Min( CS ,DS ) ) / MUR ) - Max( RMSe,RCSe ) )", "obj1": 0.9118773946360154, "obj2": 0.035947375929578806}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / MLU ),Max( MUR,MUC ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / Min( MUM ,RMSe ) ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.0067879034449303275}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( ARS * BR ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / FirstVNF_RAM ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) / Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( RMSe ,( ( ( ( MUM + Max( MLU,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ) - ( DS / MLU ) )", "obj1": 0.9712643678160919, "obj2": 0.01055941806285449}, {"determining": "( ( Max( ( CRS + ( Const / ( FirstVNF_Mem / Min( FirstVNF_CPU ,PN ) ) ) ),FirstVNF_Mem ) * ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( Min( ACS ,Max( ( RRS / Const ),CRS ) ) ,( FirstVNF_RAM / AMS ) ) ) ) - ( FirstVNF_CPU - AMS ) )", "choosing": "( Max( MLU,( ( MUC / DS ) + MUM ) ) * ( MUR + ( CS * ( MUM / Max( ( DS + RCSe ),RRSe ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.004763226325240704}, {"determining": "( ( PN * ( ( Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) / DDR ) - Min( ( CRS + FirstVNF_CPU_Server ) ,AMS ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,( RMSe + MUM ) ) * ( RMSe - RMSe ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( FirstVNF_CPU / ARS ) ) )", "choosing": "( Min( ( ( ( ( MUM / Max( MLU,MUC ) ) / ( RRSe - RRSe ) ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUR ) ) )", "obj1": 0.975095785440613, "obj2": 0.008910734793228719}, {"determining": "( Min( MRS ,MRS ) - ( ( Min( ACS ,( FirstVNF_CPU / Max( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),DDR ),RRS ) ) ) / DDR ) + ( ARS * CRS ) ) )", "choosing": "( ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) / ( ( ( ( MUM / Max( RCSe,MUC ) ) + CS ) - Min( Min( ( Max( RMSe,Max( RRSe,DS ) ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) )", "obj1": 0.921455938697318, "obj2": 0.031942864825938916}, {"determining": "( Max( Max( ( CRS * ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( AMS * ( ( FirstVNF_Mem_Server - Max( AMS,( BR - ARS ) ) ) * FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM - MRS ) ) - ( ACS * PN ) )", "choosing": "( ( RCSe + Min( MUM ,( Max( MUR,( DS * ( ( RRSe / MUM ) / RMSe ) ) ) + Min( Max( MUM,MUC ) ,MUC ) ) ) ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.014300928987263558}], "24": [{"determining": "( ( MDR - ( ( ( CRS - Const ) * CRS ) / RRS ) ) - ( FirstVNF_RAM + RRS ) )", "choosing": "Max( ( MUC + DS ),( ( Max( Min( ( ( MUC * RRSe ) * RRSe ) ,Min( CS ,RMSe ) ),( RRSe / CS ) ) / CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * ( BR - FirstVNF_RAM ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU + Max( ( ( FirstVNF_CPU / ACS ) / ( FirstVNF_RAM * RRS ) ),RRS ) ) ,( MRS / Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_Mem_Server + ARS ) ) ) ) / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),Min( Max( FirstVNF_CPU_Server,DDR ) ,( FirstVNF_Mem_Server + MDR ) ) ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * Max( CS,Min( Max( DS,( Max( RCSe,MUM ) + MUR ) ) ,( Max( MLU,( MLU * RCSe ) ) + ( RRSe + MLU ) ) ) ) ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( PN * ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - ( Min( ( DDR + FirstVNF_RAM ) ,( ( Max( PN,FirstVNF_CPU_Server ) + RRS ) / FirstVNF_Mem ) ) - Max( MDR,ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUR - MUC ) - Min( ( DS + RMSe ) ,Min( ( Max( Min( ( RRSe - DS ) ,Min( MUR ,RMSe ) ),DS ) / ( CS / DS ) ) ,( CS * DS ) ) ) )", "obj1": 0.685823754789272, "obj2": 0.16420160007809295}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( ( BR - MRS ) / RRS ) ) / DDR ) - Min( ( ( PN * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( ( ( Min( ( ( ( RRSe - ( DS + MUM ) ) / ( CS * MUR ) ) - DS ) ,( CS * MUR ) ) * ( RMSe / Max( ( MUM / DS ),Max( RMSe,CS ) ) ) ) - MUR ),Min( Max( CS,MUM ) ,RRSe ) )", "obj1": 0.6168582375478927, "obj2": 0.2312524689205466}, {"determining": "( ( ( ( FirstVNF_RAM_Server / AMS ) / ( ACS * Const ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / ( DDR / FirstVNF_CPU ) ) ) ) / ( FirstVNF_RAM_Server + Min( RRS ,( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) - ( ( FirstVNF_CPU + CRS ) * Max( ( Max( FirstVNF_CPU_Server,( ARS - MRS ) ) - ( ( FirstVNF_CPU + ACS ) * Const ) ),DDR ) ) )", "choosing": "Max( Min( ( MLU + Min( Max( RCSe,RRSe ) ,Max( ( ( ( MUC / RCSe ) / ( MUR + MUR ) ) / CS ),MUR ) ) ) ,( DS + RMSe ) ),( MUR * MUR ) )", "obj1": 0.6149425287356322, "obj2": 0.25842958121011594}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( ARS * ( ( ( Const / Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ARS ),MDR ) ) - ARS ) / CRS ) ) - ( DDR / ( ( FirstVNF_Mem_Server - MDR ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * MLU ) + ( DS - DS ) )", "obj1": 0.6590038314176245, "obj2": 0.178491082402923}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.6704980842911877, "obj2": 0.17286820156056576}, {"determining": "( ( Min( ( ( BR * CRS ) - FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,( MDR + FirstVNF_Mem_Server ) ) ) * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / Min( ( ( ARS * CRS ) / ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,( ( MUM + Max( RCSe,MUC ) ) + ( Max( Min( ( Max( Min( RMSe ,RMSe ),MUC ) + MUC ) ,RRSe ),( ( MUC + MLU ) / MUR ) ) + RCSe ) ) )", "obj1": 0.6360153256704981, "obj2": 0.2024517424541955}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / Max( ARS,RRS ) ) ) ) ) - ( CRS + MRS ) )", "choosing": "( ( Max( MUR,( MUM * MUC ) ) / ( MLU * MLU ) ) / RMSe )", "obj1": 0.6513409961685823, "obj2": 0.19303324799488839}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.632183908045977, "obj2": 0.21680602397629156}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( Max( ARS,( MDR + Min( DDR ,FirstVNF_CPU ) ) ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ( RRS / Const ) ) ) / DDR ) ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( RMSe ,MUR ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),Max( RCSe,MUM ) ) )", "obj1": 0.5823754789272031, "obj2": 0.27787109164445795}, {"determining": "( ( PN - ( ( Min( ( Min( ( Const / ACS ) ,( BR - ARS ) ) / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( ( MUR / MLU ) / RCSe )", "obj1": 0.6455938697318008, "obj2": 0.19745966277616656}, {"determining": "( ( ( PN / ( Min( DDR ,( AMS + ACS ) ) - ( Const / Min( ( Const + FirstVNF_CPU_Server ) ,PN ) ) ) ) * ( PN * AMS ) ) - ( BR + ARS ) )", "choosing": "( Max( CS,( RMSe * RCSe ) ) / ( Max( MUR,( ( MUM + MLU ) - Max( CS,( ( DS - ( MUR - MUR ) ) * Min( CS ,Max( CS,MUR ) ) ) ) ) ) * ( RMSe + MLU ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07273979488214789}, {"determining": "( ( ( PN / ( Max( DDR,( Min( FirstVNF_Mem ,MDR ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( ( RRSe - CS ) * ( MUM - MUM ) ) + DS ) - Min( MLU ,RRSe ) ) )", "obj1": 0.8065134099616859, "obj2": 0.07644134152844005}, {"determining": "( ( PN * ( ( CRS + DDR ) - Min( ( ( ARS * CRS ) / ( Min( BR ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( ( ( DS - ( Min( MUC ,CS ) * CS ) ) / ( RCSe - ( RRSe + DS ) ) ),Min( ( ( MUM / RCSe ) / ( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.6264367816091954, "obj2": 0.22636108382545614}, {"determining": "( ( Min( MRS ,( RRS + ( FirstVNF_RAM_Server + Min( ARS ,( RRS * FirstVNF_Mem_Server ) ) ) ) ) + BR ) - ( DDR - MRS ) )", "choosing": "( ( Max( ( MUR / ( MUR + RRSe ) ),( Min( ( RMSe + MUR ) ,( Min( ( RRSe * DS ) ,Max( MLU,RCSe ) ) + DS ) ) / CS ) ) - CS ) * Max( Min( ( MUM / DS ) ,MUM ),MLU ) )", "obj1": 0.896551724137931, "obj2": 0.03935142988702865}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7586206896551724, "obj2": 0.09892077558141045}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,( MDR + Min( DDR ,FirstVNF_CPU ) ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( Min( RRSe ,Min( RMSe ,RMSe ) ) / CS ) * MUR ) ) )", "obj1": 0.6015325670498084, "obj2": 0.2635629159980842}, {"determining": "( ( ( ( ACS + Const ) / Min( DDR ,AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) * ( ( ( ARS / CRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - ( ( ACS / RRS ) + MDR ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),MLU ) )", "obj1": 0.6091954022988506, "obj2": 0.26211943262807524}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + FirstVNF_CPU ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RMSe ) * ( CS + CS ) ) ) ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04196039389157488}, {"determining": "( ( ( PN / ( Min( ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.08955337688312594}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - MDR ) ) - ( ( ARS * CRS ) / ( Min( Max( CRS,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( RMSe + ( Max( CS,( Min( ( MUR / MUR ) ,RMSe ) + RRSe ) ) + MUC ) ) - ( MUC * ( Min( ( CS * MUM ) ,MUR ) * MUR ) ) ) )", "obj1": 0.8754789272030651, "obj2": 0.04789658697492075}, {"determining": "( ( PN * ( ( ( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU / PN ) ) / Max( FirstVNF_RAM_Server,ACS ) ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) )", "choosing": "Max( DS,( Max( ( ( RMSe - MUM ) + ( DS * RRSe ) ),MUR ) + MUR ) )", "obj1": 0.6302681992337165, "obj2": 0.22401089900036808}, {"determining": "( ( Max( ( FirstVNF_CPU + Min( ARS ,FirstVNF_RAM_Server ) ),ARS ) / ( Min( FirstVNF_RAM ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( BR ,FirstVNF_RAM ) ) ) ) ) - ( BR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR + Max( ( MLU - ( CS - ( ( ( RMSe + MUM ) - RRSe ) - Min( MUR ,RCSe ) ) ) ),( RRSe - MUC ) ) ),Max( RMSe,DS ) )", "obj1": 0.5996168582375478, "obj2": 0.27138553132132043}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( ( ( FirstVNF_Mem / ( Min( DDR ,( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Min( ( RRS / FirstVNF_CPU ) ,ARS ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem / Const ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / FirstVNF_CPU ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RRSe / ( MLU * ( Min( MLU ,( RCSe * RMSe ) ) / MUR ) ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( MRS + Min( Max( Max( ( AMS * FirstVNF_Mem ),( MDR / Min( RRS ,MRS ) ) ),( FirstVNF_RAM - MRS ) ) ,MRS ) ) )", "choosing": "( ( ( RCSe * DS ) * ( MUC * ( ( MUM / Max( DS,Min( ( RRSe + MLU ) ,Max( RRSe,RCSe ) ) ) ) * CS ) ) ) - Min( RCSe ,MLU ) )", "obj1": 0.9042145593869731, "obj2": 0.03643009939436883}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( ARS - PN ) ) - ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,RRS ) ) ) / ( MRS + ( AMS * FirstVNF_Mem ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "Max( DS,Max( ( ( MLU + MUR ) + ( MUR + Max( DS,RRSe ) ) ),Max( ( ( MLU + ( MLU - ( ( RMSe / MUC ) * ( MUR + MLU ) ) ) ) + ( RMSe - CS ) ),MUM ) ) )", "obj1": 0.8486590038314177, "obj2": 0.05965784373145887}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU * ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),Min( Max( Min( ( ( MUC * ( RRSe / RMSe ) ) - RRSe ) ,( RRSe + Min( RCSe ,MUR ) ) ),RMSe ) ,( CS + CS ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( ( ( Max( ( ( DDR / ( CRS / ( MRS + FirstVNF_CPU_Server ) ) ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) - ( ( Min( BR ,FirstVNF_RAM_Server ) / ( Min( Min( Max( FirstVNF_Mem,DDR ) ,( FirstVNF_CPU / ARS ) ) ,MDR ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,( MLU + RRSe ) ) ) / RRSe ) - Min( Min( ( Max( MUR,RCSe ) / RMSe ) ,RCSe ) ,( CS / CS ) ) ) / Min( ( DS + RMSe ) ,( MUM - DS ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08058193544013893}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ( Min( Max( MDR,MRS ) ,( MRS / ARS ) ) / ( DDR / ACS ) ) ) ) / ( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ) / ( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( RMSe / ( MUR - MUR ) )", "obj1": 0.7758620689655172, "obj2": 0.09262266122104217}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem * AMS ) ) - Max( ( ACS + RRS ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( DS + ( MUC + MUC ) ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7662835249042146, "obj2": 0.09574052146765016}, {"determining": "( ( MRS * ( ( Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem * FirstVNF_CPU ) + ARS ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,( MUM * ( RMSe * RRSe ) ) )", "obj1": 0.7911877394636015, "obj2": 0.08903231789899962}, {"determining": "( ( ( ( Min( MRS ,ARS ) / ARS ) - ( MDR - ( AMS - Min( ( FirstVNF_Mem / Max( ACS,Const ) ) ,FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) / ( DDR / ( ( Max( FirstVNF_RAM_Server,BR ) - AMS ) - ( RRS * MRS ) ) ) )", "choosing": "( Min( ( RCSe / MLU ) ,( MUC / RCSe ) ) - ( ( RMSe - ( ( ( ( DS / MUR ) * Max( DS,DS ) ) + ( Max( RRSe,( RCSe / MUR ) ) + Min( MUM ,MUC ) ) ) * CS ) ) + DS ) )", "obj1": 0.9482758620689655, "obj2": 0.017022162412219176}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN + AMS ) ) - ( ( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / ( FirstVNF_CPU_Server / ARS ) ) )", "choosing": "Max( ( ( Min( ( ( ( MUR * MUR ) * RCSe ) - ( MUC - ( RRSe + RCSe ) ) ) ,( CS * MUR ) ) + ( RMSe / Max( Max( RMSe,CS ),( MUM / DS ) ) ) ) - MUR ),Min( ( CS / MUM ) ,RRSe ) )", "obj1": 0.7337164750957854, "obj2": 0.11154691076894967}, {"determining": "( ( Min( ( MRS - ( ( FirstVNF_Mem_Server / ACS ) * FirstVNF_CPU ) ) ,ACS ) * ( ACS / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ARS - CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,Min( ( CS + MLU ) ,MUR ) ) ) * ( MUM / MUM ) ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( RRSe / ( RCSe * ( MLU - DS ) ) ) + CS ) ) ),Min( ( RCSe - RRSe ) ,RCSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06192611889944147}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * FirstVNF_CPU ) ) - ( ( ARS * ( Const / CRS ) ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( ( ( FirstVNF_RAM_Server + RRS ) * FirstVNF_Mem_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "( Max( Min( ( ( ( CS + MUR ) / MUR ) / ( CS * MUC ) ) ,Min( RCSe ,MLU ) ),Min( MUR ,RCSe ) ) * ( ( ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * CS ) ) ) + RCSe ) ) + Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) ) / ( ( MUR * MUC ) + Min( RCSe ,MUM ) ) ) )", "obj1": 0.7203065134099617, "obj2": 0.11662163985801538}, {"determining": "( ( Min( PN ,( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ( FirstVNF_CPU + ( AMS / ( CRS * DDR ) ) ) * CRS ) / ( Min( ( Max( ARS,RRS ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,Const ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( RRSe - CS ) + DS ) - Max( MUR,( RRSe * MUM ) ) ) ,( MLU + RCSe ) ) ) ,RMSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8275862068965517, "obj2": 0.06784178596448646}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.1300120043462737}, {"determining": "( ( RRS + MRS ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU + Max( ( Max( Const,AMS ) / DDR ),RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Max( ( MUM - MLU ),( MLU * MUR ) )", "obj1": 0.9674329501915708, "obj2": 0.013362984029338543}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( ARS * BR ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / FirstVNF_RAM ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) / Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( RMSe ,( ( ( ( MUM + Max( MLU,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ) - ( DS / MLU ) )", "obj1": 0.9712643678160919, "obj2": 0.01055941806285449}, {"determining": "( ( ( ( ( ( Const / FirstVNF_RAM ) - Min( MDR ,( ( FirstVNF_CPU * FirstVNF_CPU ) + FirstVNF_Mem ) ) ) - ( Const / FirstVNF_RAM ) ) / PN ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - ( DS + ( ( Min( RCSe ,RRSe ) - MUM ) + MUR ) ) ) ,( ( RMSe + ( RRSe * ( ( ( ( CS + DS ) + ( MUM * DS ) ) * CS ) + RRSe ) ) ) - MUC ) )", "obj1": 0.7681992337164751, "obj2": 0.09362148847241761}, {"determining": "( Max( ( PN / FirstVNF_RAM ),FirstVNF_Mem ) - ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,( Min( CS ,CS ) / ( MUM / MLU ) ) ) ) / CS ) - ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) - ( CS / CS ) ) ) / ( ( Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) + RRSe ) * Min( MLU ,RMSe ) ) ) / Min( Min( RCSe ,MUM ) ,MUR ) )", "obj1": 0.9272030651340997, "obj2": 0.02925872671857499}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( ( CS - Max( MUR,RMSe ) ) / MUC ) / MLU ) ,RCSe ) - ( DS + ( Min( ( ( RMSe - ( MUR + CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) + RMSe ) ) )", "obj1": 0.8544061302681992, "obj2": 0.054432665305241774}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Min( ACS ,( ( ACS + MDR ) * CRS ) ) / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) / DS ) ),MLU ) )", "obj1": 0.8869731800766284, "obj2": 0.04706928147447224}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( MUR,Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.7950191570881227, "obj2": 0.0883110238164786}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - Min( DDR ,( ARS * Max( ( FirstVNF_RAM + ARS ),FirstVNF_CPU ) ) ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ARS - ( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( ( CS - ( Max( DS,MUR ) - ( RMSe * MUC ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( Min( MUR ,RMSe ) - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8639846743295019, "obj2": 0.053852748591532995}, {"determining": "( ( MRS * Max( RRS,( Const * BR ) ) ) - ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU * ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( ( ( Max( MLU,RCSe ) * ( RMSe * RMSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( ( ( RCSe / DS ) + Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Min( MUR ,CS ) ) / CS ) - ( MLU / Max( RMSe,MUM ) ) ) ) ) )", "obj1": 0.6973180076628352, "obj2": 0.1282697390501788}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.8831417624521073, "obj2": 0.047112784430687046}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( FirstVNF_Mem_Server - Min( ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ,( ( CRS + BR ) + ACS ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe / ( MUR * ( RCSe + CS ) ) ) - ( CS + DS ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.9942528735632183, "obj2": 0.0017438978776377775}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,MRS ) + MRS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( RCSe / DS ) ),MLU ) )", "obj1": 0.9157088122605364, "obj2": 0.034798585899798874}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + MRS ) ) ) / ACS ) - ( MDR - ( ( PN + FirstVNF_CPU ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server * Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( ( Max( MUC,RMSe ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( RMSe + ( ( ( RMSe - ( MUR / RMSe ) ) + ( ( MUC / MUM ) + Min( ( CS / CS ) ,MUM ) ) ) / CS ) ) ) )", "obj1": 0.8371647509578544, "obj2": 0.06224442568150566}, {"determining": "( ( ( PN / ( ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) * ( PN * AMS ) ) - Max( Min( Const ,CRS ),FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( Min( ( RMSe / MLU ) ,RMSe ) - Max( CS,( ( CS / DS ) + CS ) ) ) - RMSe ),( Max( MUR,RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.867816091954023, "obj2": 0.05043134920745744}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS - ( ( MDR + FirstVNF_CPU ) * Const ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( ( ( ( RCSe - RMSe ) - ( CS + MUR ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7068965517241379, "obj2": 0.1219817746300119}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.006492189062201773}, {"determining": "( ( ( PN / Min( Min( DDR ,( ( PN + FirstVNF_RAM ) * ( ( RRS + FirstVNF_CPU ) * Const ) ) ) ,( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) - DDR ) ) )", "choosing": "( Max( Min( MLU ,RRSe ),( RMSe * MLU ) ) / ( RRSe + ( ( ( RMSe / CS ) * ( ( Max( Max( CS,MUC ),DS ) + ( RCSe * ( RRSe + RCSe ) ) ) * RRSe ) ) - CS ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10540426450777751}, {"determining": "( ( ( PN * AMS ) * ( MRS / ( Min( MDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU / PN ) + Const ) ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( MUM,Min( MUC ,RRSe ) ) / Max( DS,MUC ) )", "obj1": 0.7279693486590039, "obj2": 0.11391019854446555}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( Min( ( MUR - ( ( Max( CS,DS ) / MUM ) / CS ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RMSe ) + ( ( ( ( RCSe / RRSe ) - ( MUM * CS ) ) - Min( RRSe ,( CS + MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7260536398467433, "obj2": 0.11435693293869617}, {"determining": "( ( ( ARS / ( Min( ( AMS * FirstVNF_CPU ) ,Const ) / ( Const / FirstVNF_RAM ) ) ) * ( AMS * RRS ) ) - ( ( MRS + AMS ) + FirstVNF_Mem ) )", "choosing": "( ( MUC * CS ) * ( Min( Min( RRSe ,CS ) ,MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.7164750957854407, "obj2": 0.11813242538030118}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,MLU ) ) )", "obj1": 0.7969348659003831, "obj2": 0.0841534339891466}, {"determining": "( ( ( PN / Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( Max( ACS,FirstVNF_CPU ) - MRS ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + ( RRSe + Min( ( Max( MUM,MUR ) - Min( MUR ,MUM ) ) ,RRSe ) ) ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.9770114942528736, "obj2": 0.007711276867644333}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * ( AMS * Const ) ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,Max( MLU,CS ) ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / ( RCSe / DS ) ) )", "obj1": 0.7471264367816092, "obj2": 0.10431811036909899}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( ( ( ( MDR * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( Min( ARS ,CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Max( DS,Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),Min( Min( ( ( MUM + ( RMSe + MUM ) ) / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.7988505747126436, "obj2": 0.08322665485834711}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - ( RRS + FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( ARS * CRS ) / ( DDR / Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_RAM - PN ) + Min( DDR ,BR ) ) ) ) ,Max( FirstVNF_CPU,Min( FirstVNF_RAM ,( DDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RRSe ,( ( RRSe / Max( RRSe,RRSe ) ) * RCSe ) ) / CS ) * MUR ),( ( MUR * RCSe ) - RRSe ) ) / ( ( RRSe - RCSe ) - ( ( MUM + Min( RMSe ,( DS - Min( MUR ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10768261949220766}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( ( DDR / FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * ( ( FirstVNF_Mem * RRS ) * ACS ) ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * Max( ( MDR - MDR ),BR ) ) ) ) )", "choosing": "( Min( ( MLU / RRSe ) ,RCSe ) - ( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( Min( DS ,Max( MUM,RMSe ) ) + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.8505747126436781, "obj2": 0.056174282244870005}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( DDR / RRS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * Max( ( MUR / RCSe ),( MUR - ( ( DS / RMSe ) - RMSe ) ) ) ) )", "obj1": 0.7030651340996169, "obj2": 0.12536449165132005}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_CPU + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,Min( Const ,MRS ) ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM * MUC ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.9444444444444444, "obj2": 0.021924492456042093}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.12659877421094784}, {"determining": "( ( PN * ( ( Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) / DDR ) - Min( ( CRS + FirstVNF_CPU_Server ) ,AMS ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,( RMSe + MUM ) ) * ( RMSe - RMSe ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Const ,MRS ) + MRS ) )", "choosing": "( ( ( RCSe * DS ) * ( MUM * MUC ) ) - Min( RCSe ,MLU ) )", "obj1": 0.9195402298850575, "obj2": 0.032836964823913475}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( FirstVNF_CPU / ARS ) ) )", "choosing": "( Min( ( ( ( ( MUM / Max( MLU,MUC ) ) / ( RRSe - RRSe ) ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUR ) ) )", "obj1": 0.975095785440613, "obj2": 0.008910734793228719}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( CRS / ACS ) ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( MUR - DS ) ) + RMSe ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,CS ) ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031023298619688448}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( ( ( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( AMS + PN ) ) * PN ) - ( CRS + Max( Max( ( ACS - FirstVNF_CPU ),RRS ),Min( PN ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM * Min( ( Min( MUR ,CS ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,Max( RMSe,MUC ) ) ) - ( MUM + ( Min( ( RCSe / MUR ) ,RCSe ) + Min( Min( RMSe ,MUR ) ,DS ) ) ) )", "obj1": 0.9425287356321839, "obj2": 0.02310937653962019}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / ( RRS + ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ) * Min( FirstVNF_CPU_Server ,Const ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,( MDR + Min( DDR ,BR ) ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( MUC - RCSe ),RRSe ) / Max( ( RRSe - ( MUR * CS ) ),( ( Min( RRSe ,Min( RMSe ,( Min( MUM ,DS ) * MUC ) ) ) / CS ) * MUR ) ) )", "obj1": 0.5977011494252874, "obj2": 0.2742126709592589}, {"determining": "( ( ( PN / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / FirstVNF_RAM ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( CRS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( MUR ,RMSe ),( ( CS + Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ) ) * MUR ) ) )", "obj1": 0.9616858237547893, "obj2": 0.013773882275044657}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * CRS ) ) / Min( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU / ( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) ) ) ) )", "choosing": "Min( ( Max( ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( DS / ( MUC / ( MUC + RRSe ) ) ) ),MUR ) - RMSe ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( ( MLU / DS ),( CS * MLU ) ) ) )", "obj1": 0.8659003831417624, "obj2": 0.05348983161431539}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) ) )", "obj1": 0.7049808429118773, "obj2": 0.12226511751889758}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * PN ) - ( ( Min( Const ,FirstVNF_RAM ) / MRS ) + MRS ) )", "choosing": "( ( ( RCSe * MUC ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,( MUM / MUC ) ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03613553823966046}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( PN * AMS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( ( ( ( ( MUM / Max( MLU,MUC ) ) / ( RRSe - RRSe ) ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,( Min( RCSe ,Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) ) / RCSe ) ) )", "obj1": 0.7126436781609196, "obj2": 0.11920997342834294}, {"determining": "( ( PN * ( ( Min( FirstVNF_CPU_Server ,( Min( ACS ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( Min( MLU ,RRSe ),RRSe ) * ( RRSe - RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004334454779699649}, {"determining": "( ( ( ( BR - BR ) * MRS ) - Min( PN ,AMS ) ) - ( ARS / ( ARS * CRS ) ) )", "choosing": "( ( ( ( ( ( RCSe / ( Max( MUR,MLU ) - CS ) ) / Max( DS,CS ) ) - ( ( ( RMSe + ( CS / MUM ) ) + RCSe ) / RMSe ) ) + Min( CS ,DS ) ) / MUR ) - Max( RMSe,RCSe ) )", "obj1": 0.9118773946360154, "obj2": 0.035947375929578806}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),Max( MRS,( Max( MRS,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * ARS ) ) ) / DDR ) ) )", "choosing": "( Max( ( ( ( MUM / Max( CS,MUC ) ) / CS ) - ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUC + RRSe ) ) ) ) ),RRSe ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7452107279693486, "obj2": 0.10482524669140245}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,( Min( RCSe ,Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) ) / RCSe ) ) )", "obj1": 0.7126436781609196, "obj2": 0.11920997342834294}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * ( ARS + ( DDR - PN ) ) ) ) ) - ( PN - MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Max( ( ( ( RMSe + MUM ) + DS ) - Max( ( ( MUM * ( MLU / RCSe ) ) / Max( MUC,CS ) ),RMSe ) ),( MLU + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( Max( ( CRS + ( Const / ( FirstVNF_Mem / Min( FirstVNF_CPU ,PN ) ) ) ),FirstVNF_Mem ) * ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( Min( ACS ,Max( ( RRS / Const ),CRS ) ) ,( FirstVNF_RAM / AMS ) ) ) ) - ( FirstVNF_CPU - AMS ) )", "choosing": "( Max( MLU,( ( MUC / DS ) + MUM ) ) * ( MUR + ( CS * ( MUM / Max( ( DS + RCSe ),RRSe ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.004763226325240704}, {"determining": "( Min( MRS ,MRS ) - ( ( Min( ACS ,( FirstVNF_CPU / Max( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),DDR ),RRS ) ) ) / DDR ) + ( ARS * CRS ) ) )", "choosing": "( ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) / ( ( ( ( MUM / Max( RCSe,MUC ) ) + CS ) - Min( Min( ( Max( RMSe,Max( RRSe,DS ) ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) )", "obj1": 0.921455938697318, "obj2": 0.031942864825938916}, {"determining": "( Max( Max( ( CRS * ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( AMS * ( ( FirstVNF_Mem_Server - Max( AMS,( BR - ARS ) ) ) * FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM - MRS ) ) - ( ACS * PN ) )", "choosing": "( ( RCSe + Min( MUM ,( Max( MUR,( DS * ( ( RRSe / MUM ) / RMSe ) ) ) + Min( Max( MUM,MUC ) ,MUC ) ) ) ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.014300928987263558}, {"determining": "( ( ( BR / ( Const * DDR ) ) / ( Min( Const ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_RAM ,DDR ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Const )", "choosing": "Max( DS,( RRSe + ( DS / Min( MUC ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.003227937497805178}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,Max( DDR,ACS ) ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( RRSe,( RCSe - RRSe ) ) / Max( MLU,CS ) )", "obj1": 0.867816091954023, "obj2": 0.05043134920745744}], "25": [{"determining": "( ( PN * ( ( ( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU / PN ) ) / Max( FirstVNF_RAM_Server,ACS ) ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) )", "choosing": "Max( DS,( Max( ( ( RMSe - MUM ) + ( DS * RRSe ) ),MUR ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( CRS - Const ) * CRS ) / RRS ) ) - ( FirstVNF_RAM + RRS ) )", "choosing": "Max( ( MUC + DS ),( ( Max( Min( ( ( MUC * RRSe ) * RRSe ) ,Min( CS ,RMSe ) ),( RRSe / CS ) ) / CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / ARS ) ,( FirstVNF_CPU / Max( FirstVNF_CPU,( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_CPU ) ) ) ) ) / DDR ) ) )", "choosing": "( Min( Max( MUC,MUM ) ,Min( MUR ,RMSe ) ) * Max( CS,Min( ( Min( RMSe ,( RMSe - MLU ) ) - MUM ) ,( ( ( ( MUR - RCSe ) / DS ) * CS ) / MUM ) ) ) )", "obj1": 0.5977011494252874, "obj2": 0.2380367854192079}, {"determining": "( ( PN * ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - ( Min( ( DDR + FirstVNF_RAM ) ,( ( Max( PN,FirstVNF_CPU_Server ) + RRS ) / FirstVNF_Mem ) ) - Max( MDR,ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUR - MUC ) - Min( ( DS + RMSe ) ,Min( ( Max( Min( ( RRSe - DS ) ,Min( MUR ,RMSe ) ),DS ) / ( CS / DS ) ) ,( CS * DS ) ) ) )", "obj1": 0.685823754789272, "obj2": 0.16420160007809295}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( ARS * ( ( ( Const / Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ARS ),MDR ) ) - ARS ) / CRS ) ) - ( DDR / ( ( FirstVNF_Mem_Server - MDR ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * MLU ) + ( DS - DS ) )", "obj1": 0.6590038314176245, "obj2": 0.178491082402923}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.6704980842911877, "obj2": 0.17286820156056576}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( ( BR - MRS ) / RRS ) ) / DDR ) - Min( ( ( PN * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( ( ( Min( ( ( ( RRSe - ( DS + MUM ) ) / ( CS * MUR ) ) - DS ) ,( CS * MUR ) ) * ( RMSe / Max( ( MUM / DS ),Max( RMSe,CS ) ) ) ) - MUR ),Min( Max( CS,MUM ) ,RRSe ) )", "obj1": 0.6168582375478927, "obj2": 0.2312524689205466}, {"determining": "( ( Min( ( ( BR * CRS ) - FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,( MDR + FirstVNF_Mem_Server ) ) ) * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / Min( ( ( ARS * CRS ) / ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,( ( MUM + Max( RCSe,MUC ) ) + ( Max( Min( ( Max( Min( RMSe ,RMSe ),MUC ) + MUC ) ,RRSe ),( ( MUC + MLU ) / MUR ) ) + RCSe ) ) )", "obj1": 0.6360153256704981, "obj2": 0.2024517424541955}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / Max( ARS,RRS ) ) ) ) ) - ( CRS + MRS ) )", "choosing": "( ( Max( MUR,( MUM * MUC ) ) / ( MLU * MLU ) ) / RMSe )", "obj1": 0.6513409961685823, "obj2": 0.19303324799488839}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.632183908045977, "obj2": 0.21680602397629156}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( Max( ARS,( MDR + Min( DDR ,FirstVNF_CPU ) ) ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ( RRS / Const ) ) ) / DDR ) ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( RMSe ,MUR ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),Max( RCSe,MUM ) ) )", "obj1": 0.5823754789272031, "obj2": 0.27787109164445795}, {"determining": "( ( PN - ( ( Min( ( Min( ( Const / ACS ) ,( BR - ARS ) ) / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( ( MUR / MLU ) / RCSe )", "obj1": 0.6455938697318008, "obj2": 0.19745966277616656}, {"determining": "( ( ( PN / ( Min( DDR ,( AMS + ACS ) ) - ( Const / Min( ( Const + FirstVNF_CPU_Server ) ,PN ) ) ) ) * ( PN * AMS ) ) - ( BR + ARS ) )", "choosing": "( Max( CS,( RMSe * RCSe ) ) / ( Max( MUR,( ( MUM + MLU ) - Max( CS,( ( DS - ( MUR - MUR ) ) * Min( CS ,Max( CS,MUR ) ) ) ) ) ) * ( RMSe + MLU ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07273979488214789}, {"determining": "( ( PN * ( ( Min( ( ( FirstVNF_CPU - ( PN * FirstVNF_Mem ) ) - BR ) ,( FirstVNF_CPU / ( ( BR - AMS ) * ( FirstVNF_CPU * MDR ) ) ) ) / DDR ) - Min( BR ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( RCSe - ( ( MLU + ( RMSe * Min( Min( RRSe ,MUC ) ,( MLU + MLU ) ) ) ) / ( RMSe + MLU ) ) ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RMSe ) * ( CS + ( CS / MUC ) ) ) ) )", "obj1": 0.7969348659003831, "obj2": 0.08316557009293775}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( MRS * ( RRS / Max( MRS,AMS ) ) ) - ( MDR / Const ) ) ) )", "choosing": "( Max( ( RCSe * MLU ),RRSe ) / ( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( ( RCSe * Min( MLU ,CS ) ) / RRSe ) + CS ) ) ) / Min( ( RCSe - RRSe ) ,CS ) ) )", "obj1": 0.7835249042145593, "obj2": 0.08669958274180666}, {"determining": "( ( ( PN / ( Max( DDR,( Min( FirstVNF_Mem ,MDR ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( ( RRSe - CS ) * ( MUM - MUM ) ) + DS ) - Min( MLU ,RRSe ) ) )", "obj1": 0.8065134099616859, "obj2": 0.07644134152844005}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7586206896551724, "obj2": 0.09892077558141045}, {"determining": "( ( PN * ( ( CRS + DDR ) - Min( ( ( ARS * CRS ) / ( Min( BR ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( ( ( DS - ( Min( MUC ,CS ) * CS ) ) / ( RCSe - ( RRSe + DS ) ) ),Min( ( ( MUM / RCSe ) / ( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.6264367816091954, "obj2": 0.22636108382545614}, {"determining": "( ( Min( MRS ,( RRS + ( FirstVNF_RAM_Server + Min( ARS ,( RRS * FirstVNF_Mem_Server ) ) ) ) ) + BR ) - ( DDR - MRS ) )", "choosing": "( ( Max( ( MUR / ( MUR + RRSe ) ),( Min( ( RMSe + MUR ) ,( Min( ( RRSe * DS ) ,Max( MLU,RCSe ) ) + DS ) ) / CS ) ) - CS ) * Max( Min( ( MUM / DS ) ,MUM ),MLU ) )", "obj1": 0.896551724137931, "obj2": 0.03935142988702865}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + FirstVNF_CPU ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RMSe ) * ( CS + CS ) ) ) ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04196039389157488}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - MDR ) ) - ( ( ARS * CRS ) / ( Min( Max( CRS,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( RMSe + ( Max( CS,( Min( ( MUR / MUR ) ,RMSe ) + RRSe ) ) + MUC ) ) - ( MUC * ( Min( ( CS * MUM ) ,MUR ) * MUR ) ) ) )", "obj1": 0.8754789272030651, "obj2": 0.04789658697492075}, {"determining": "( ( PN * ( ( ( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU / PN ) ) / Max( FirstVNF_RAM_Server,ACS ) ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) )", "choosing": "Max( DS,( Max( ( ( RMSe - MUM ) + ( DS * RRSe ) ),MUR ) + MUR ) )", "obj1": 0.6302681992337165, "obj2": 0.22401089900036808}, {"determining": "( ( ( Max( ( ( DDR / ( CRS / ( MRS + FirstVNF_CPU_Server ) ) ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) - ( ( Min( BR ,FirstVNF_RAM_Server ) / ( Min( Min( Max( FirstVNF_Mem,DDR ) ,( FirstVNF_CPU / ARS ) ) ,MDR ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,( MLU + RRSe ) ) ) / RRSe ) - Min( Min( ( Max( MUR,RCSe ) / RMSe ) ,RCSe ) ,( CS / CS ) ) ) / Min( ( DS + RMSe ) ,( MUM - DS ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08058193544013893}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( ( ( FirstVNF_Mem / ( Min( DDR ,( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Min( ( RRS / FirstVNF_CPU ) ,ARS ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem / Const ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / FirstVNF_CPU ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RRSe / ( MLU * ( Min( MLU ,( RCSe * RMSe ) ) / MUR ) ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( MRS + Min( Max( Max( ( AMS * FirstVNF_Mem ),( MDR / Min( RRS ,MRS ) ) ),( FirstVNF_RAM - MRS ) ) ,MRS ) ) )", "choosing": "( ( ( RCSe * DS ) * ( MUC * ( ( MUM / Max( DS,Min( ( RRSe + MLU ) ,Max( RRSe,RCSe ) ) ) ) * CS ) ) ) - Min( RCSe ,MLU ) )", "obj1": 0.9042145593869731, "obj2": 0.03643009939436883}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU * ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),Min( Max( Min( ( ( MUC * ( RRSe / RMSe ) ) - RRSe ) ,( RRSe + Min( RCSe ,MUR ) ) ),RMSe ) ,( CS + CS ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( ( ( PN / ( Min( ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) ) )", "obj1": 0.7796934865900383, "obj2": 0.08955337688312594}, {"determining": "( ( ( PN / ( Min( ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ),( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),Min( Min( ( CS / RCSe ) ,( MLU - DS ) ) ,MUR ) ) ) )", "obj1": 0.7739463601532567, "obj2": 0.09212862769787283}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * FirstVNF_Mem_Server ) - Min( DDR ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) / AMS ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ACS * Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * ( CRS + Const ) ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( ( ( ( ( MUC * DS ) / ( MUC - MUM ) ) / ( DS + MUM ) ) / RMSe ) / ( Min( MLU ,RCSe ) - RCSe ) ) - RMSe ),( Max( MUR,RMSe ) * Min( CS ,RRSe ) ) ) )", "obj1": 0.764367816091954, "obj2": 0.0937642920615673}, {"determining": "( ( PN * ( PN * AMS ) ) - ( ( ARS * BR ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / FirstVNF_RAM ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) / Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( RMSe ,( ( ( ( MUM + Max( MLU,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ) - ( DS / MLU ) )", "obj1": 0.9712643678160919, "obj2": 0.01055941806285449}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( ( CS - Max( MUR,RMSe ) ) / MUC ) / MLU ) ,RCSe ) - ( DS + ( Min( ( ( RMSe - ( MUR + CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) + RMSe ) ) )", "obj1": 0.8544061302681992, "obj2": 0.054432665305241774}, {"determining": "( ( ( ( Min( MRS ,ARS ) / ARS ) - ( MDR - ( AMS - Min( ( FirstVNF_Mem / Max( ACS,Const ) ) ,FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) / ( DDR / ( ( Max( FirstVNF_RAM_Server,BR ) - AMS ) - ( RRS * MRS ) ) ) )", "choosing": "( Min( ( RCSe / MLU ) ,( MUC / RCSe ) ) - ( ( RMSe - ( ( ( ( DS / MUR ) * Max( DS,DS ) ) + ( Max( RRSe,( RCSe / MUR ) ) + Min( MUM ,MUC ) ) ) * CS ) ) + DS ) )", "obj1": 0.9482758620689655, "obj2": 0.017022162412219176}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( Max( MUR,( MUM * MUC ) ) / ( MLU * MLU ) ) / RMSe )", "obj1": 0.9157088122605364, "obj2": 0.0327674683289582}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN + AMS ) ) - ( ( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / ( FirstVNF_CPU_Server / ARS ) ) )", "choosing": "Max( ( ( Min( ( ( ( MUR * MUR ) * RCSe ) - ( MUC - ( RRSe + RCSe ) ) ) ,( CS * MUR ) ) + ( RMSe / Max( Max( RMSe,CS ),( MUM / DS ) ) ) ) - MUR ),Min( ( CS / MUM ) ,RRSe ) )", "obj1": 0.7337164750957854, "obj2": 0.11154691076894967}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * FirstVNF_CPU ) ) - ( ( ARS * ( Const / CRS ) ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( ( ( FirstVNF_RAM_Server + RRS ) * FirstVNF_Mem_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "( Max( Min( ( ( ( CS + MUR ) / MUR ) / ( CS * MUC ) ) ,Min( RCSe ,MLU ) ),Min( MUR ,RCSe ) ) * ( ( ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * CS ) ) ) + RCSe ) ) + Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) ) / ( ( MUR * MUC ) + Min( RCSe ,MUM ) ) ) )", "obj1": 0.7203065134099617, "obj2": 0.11662163985801538}, {"determining": "( ( Min( PN ,( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ( FirstVNF_CPU + ( AMS / ( CRS * DDR ) ) ) * CRS ) / ( Min( ( Max( ARS,RRS ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,Const ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( RRSe - CS ) + DS ) - Max( MUR,( RRSe * MUM ) ) ) ,( MLU + RCSe ) ) ) ,RMSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8275862068965517, "obj2": 0.06784178596448646}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.1300120043462737}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( Min( MDR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.012558939334188233}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( ARS - PN ) ) - ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,RRS ) ) ) / ( MRS + ( AMS * FirstVNF_Mem ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "Max( DS,Max( ( ( MLU + MUR ) + ( MUR + Max( DS,RRSe ) ) ),Max( ( ( MLU + ( MLU - ( ( RMSe / MUC ) * ( MUR + MLU ) ) ) ) + ( RMSe - CS ) ),MUM ) ) )", "obj1": 0.8486590038314177, "obj2": 0.05965784373145887}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( ( DDR / FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * ( ( FirstVNF_Mem * RRS ) * ACS ) ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * Max( ( MDR - MDR ),BR ) ) ) ) )", "choosing": "( Min( ( MLU / RRSe ) ,RCSe ) - ( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( Min( DS ,Max( MUM,RMSe ) ) + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.8505747126436781, "obj2": 0.056174282244870005}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Min( ACS ,( ( ACS + MDR ) * CRS ) ) / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "( Min( ( MUC / MUM ) ,Min( MUR ,RMSe ) ) * Max( Min( MUM ,( ( MUR / ( CS - Min( ( RRSe + RCSe ) ,MUC ) ) ) / DS ) ),MLU ) )", "obj1": 0.8869731800766284, "obj2": 0.04706928147447224}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - Min( DDR ,( ARS * Max( ( FirstVNF_RAM + ARS ),FirstVNF_CPU ) ) ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ARS - ( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( ( CS - ( Max( DS,MUR ) - ( RMSe * MUC ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( Min( MUR ,RMSe ) - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8639846743295019, "obj2": 0.053852748591532995}, {"determining": "( ( MRS * Max( RRS,( Const * BR ) ) ) - ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU * ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( ( ( Max( MLU,RCSe ) * ( RMSe * RMSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( ( ( RCSe / DS ) + Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Min( MUR ,CS ) ) / CS ) - ( MLU / Max( RMSe,MUM ) ) ) ) ) )", "obj1": 0.6973180076628352, "obj2": 0.1282697390501788}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.8831417624521073, "obj2": 0.047112784430687046}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( FirstVNF_Mem_Server - Min( ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ,( ( CRS + BR ) + ACS ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe / ( MUR * ( RCSe + CS ) ) ) - ( CS + DS ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.9942528735632183, "obj2": 0.0017438978776377775}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + MRS ) ) ) / ACS ) - ( MDR - ( ( PN + FirstVNF_CPU ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server * Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( ( Max( MUC,RMSe ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( RMSe + ( ( ( RMSe - ( MUR / RMSe ) ) + ( ( MUC / MUM ) + Min( ( CS / CS ) ,MUM ) ) ) / CS ) ) ) )", "obj1": 0.8371647509578544, "obj2": 0.06224442568150566}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,Max( DDR,ACS ) ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( RRSe,( RCSe - RRSe ) ) / Max( MLU,CS ) )", "obj1": 0.867816091954023, "obj2": 0.05043134920745744}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS - ( ( MDR + FirstVNF_CPU ) * Const ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( ( ( ( RCSe - RMSe ) - ( CS + MUR ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7068965517241379, "obj2": 0.1219817746300119}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.006492189062201773}, {"determining": "( ( ( ( ( ( Const / FirstVNF_RAM ) - Min( MDR ,( ( FirstVNF_CPU * FirstVNF_CPU ) + FirstVNF_Mem ) ) ) - ( Const / FirstVNF_RAM ) ) / PN ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - ( DS + ( ( Min( RCSe ,RRSe ) - MUM ) + MUR ) ) ) ,( ( RMSe + ( RRSe * ( ( ( ( CS + DS ) + ( MUM * DS ) ) * CS ) + RRSe ) ) ) - MUC ) )", "obj1": 0.7681992337164751, "obj2": 0.09362148847241761}, {"determining": "( ( ( PN / Min( Min( DDR ,( ( PN + FirstVNF_RAM ) * ( ( RRS + FirstVNF_CPU ) * Const ) ) ) ,( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) - DDR ) ) )", "choosing": "( Max( Min( MLU ,RRSe ),( RMSe * MLU ) ) / ( RRSe + ( ( ( RMSe / CS ) * ( ( Max( Max( CS,MUC ),DS ) + ( RCSe * ( RRSe + RCSe ) ) ) * RRSe ) ) - CS ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10540426450777751}, {"determining": "( ( ( PN * AMS ) * ( MRS / ( Min( MDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU / PN ) + Const ) ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( MUM,Min( MUC ,RRSe ) ) / Max( DS,MUC ) )", "obj1": 0.7279693486590039, "obj2": 0.11391019854446555}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( Min( ( MUR - ( ( Max( CS,DS ) / MUM ) / CS ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RMSe ) + ( ( ( ( RCSe / RRSe ) - ( MUM * CS ) ) - Min( RRSe ,( CS + MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7260536398467433, "obj2": 0.11435693293869617}, {"determining": "( ( ( ARS / ( Min( ( AMS * FirstVNF_CPU ) ,Const ) / ( Const / FirstVNF_RAM ) ) ) * ( AMS * RRS ) ) - ( ( MRS + AMS ) + FirstVNF_Mem ) )", "choosing": "( ( MUC * CS ) * ( Min( Min( RRSe ,CS ) ,MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.7164750957854407, "obj2": 0.11813242538030118}, {"determining": "( Max( ( PN / FirstVNF_RAM ),FirstVNF_Mem ) - ( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,( Min( CS ,CS ) / ( MUM / MLU ) ) ) ) / CS ) - ( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) - ( CS / CS ) ) ) / ( ( Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) + RRSe ) * Min( MLU ,RMSe ) ) ) / Min( Min( RCSe ,MUM ) ,MUR ) )", "obj1": 0.9272030651340997, "obj2": 0.02925872671857499}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * ( AMS * Const ) ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,Max( MLU,CS ) ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / ( RCSe / DS ) ) )", "obj1": 0.7471264367816092, "obj2": 0.10431811036909899}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * ( ( FirstVNF_Mem * FirstVNF_CPU ) * ACS ) ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe / Max( ( MUM / DS ),Max( RMSe,CS ) ) ) - ( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.842911877394636, "obj2": 0.06029748638401152}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( ( PN / Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( Max( ACS,FirstVNF_CPU ) - MRS ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + ( RRSe + Min( ( Max( MUM,MUR ) - Min( MUR ,MUM ) ) ,RRSe ) ) ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.9770114942528736, "obj2": 0.007711276867644333}, {"determining": "( ( ( ( BR - BR ) * MRS ) - Min( PN ,AMS ) ) - ( ARS / ( ARS * CRS ) ) )", "choosing": "( ( ( ( ( ( RCSe / ( Max( MUR,MLU ) - CS ) ) / Max( DS,CS ) ) - ( ( ( RMSe + ( CS / MUM ) ) + RCSe ) / RMSe ) ) + Min( CS ,DS ) ) / MUR ) - Max( RMSe,RCSe ) )", "obj1": 0.9118773946360154, "obj2": 0.035947375929578806}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - ( RRS + FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( ARS * CRS ) / ( DDR / Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_RAM - PN ) + Min( DDR ,BR ) ) ) ) ,Max( FirstVNF_CPU,Min( FirstVNF_RAM ,( DDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RRSe ,( ( RRSe / Max( RRSe,RRSe ) ) * RCSe ) ) / CS ) * MUR ),( ( MUR * RCSe ) - RRSe ) ) / ( ( RRSe - RCSe ) - ( ( MUM + Min( RMSe ,( DS - Min( MUR ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10768261949220766}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( DDR / RRS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * Max( ( MUR / RCSe ),( MUR - ( ( DS / RMSe ) - RMSe ) ) ) ) )", "obj1": 0.7030651340996169, "obj2": 0.12536449165132005}, {"determining": "( Min( MRS ,MRS ) - ( ( Min( ACS ,( FirstVNF_CPU / Max( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),DDR ),RRS ) ) ) / DDR ) + ( ARS * CRS ) ) )", "choosing": "( ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) / ( ( ( ( MUM / Max( RCSe,MUC ) ) + CS ) - Min( Min( ( Max( RMSe,Max( RRSe,DS ) ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) )", "obj1": 0.921455938697318, "obj2": 0.031942864825938916}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_CPU + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,Min( Const ,MRS ) ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM * MUC ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.9444444444444444, "obj2": 0.021924492456042093}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.12659877421094784}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * ( ARS + ( DDR - PN ) ) ) ) ) - ( PN - MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Max( ( ( ( RMSe + MUM ) + DS ) - Max( ( ( MUM * ( MLU / RCSe ) ) / Max( MUC,CS ) ),RMSe ) ),( MLU + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( ( PN / Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( Max( ACS,FirstVNF_CPU ) - MRS ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / RMSe ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUC,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.975095785440613, "obj2": 0.008676844918981309}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( ( ( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( AMS + PN ) ) * PN ) - ( CRS + Max( Max( ( ACS - FirstVNF_CPU ),RRS ),Min( PN ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM * Min( ( Min( MUR ,CS ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,Max( RMSe,MUC ) ) ) - ( MUM + ( Min( ( RCSe / MUR ) ,RCSe ) + Min( Min( RMSe ,MUR ) ,DS ) ) ) )", "obj1": 0.9425287356321839, "obj2": 0.02310937653962019}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * CRS ) ) / Min( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU / ( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) ) ) ) )", "choosing": "Min( ( Max( ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( DS / ( MUC / ( MUC + RRSe ) ) ) ),MUR ) - RMSe ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( ( MLU / DS ),( CS * MLU ) ) ) )", "obj1": 0.8659003831417624, "obj2": 0.05348983161431539}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) ) )", "obj1": 0.7049808429118773, "obj2": 0.12226511751889758}, {"determining": "( ( Min( ( MRS - ( ( FirstVNF_Mem_Server / ACS ) * FirstVNF_CPU ) ) ,ACS ) * ( ACS / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ARS - CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,Min( ( CS + MLU ) ,MUR ) ) ) * ( MUM / MUM ) ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( RRSe / ( RCSe * ( MLU - DS ) ) ) + CS ) ) ),Min( ( RCSe - RRSe ) ,RCSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06192611889944147}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * PN ) - ( ( Min( Const ,FirstVNF_RAM ) / MRS ) + MRS ) )", "choosing": "( ( ( RCSe * MUC ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,( MUM / MUC ) ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03613553823966046}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,( Min( RCSe ,Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) ) / RCSe ) ) )", "obj1": 0.7126436781609196, "obj2": 0.11920997342834294}, {"determining": "( ( ( ( FirstVNF_Mem_Server * CRS ) - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( ( ( ( ARS / CRS ) + ( FirstVNF_RAM + FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server + Min( RRS ,Min( AMS ,ACS ) ) ) ) * Min( CRS ,ARS ) ) ) + MRS ) )", "choosing": "Max( ( RMSe / RRSe ),( RCSe / ( Max( MUR,MUM ) - MLU ) ) )", "obj1": 0.9904214559386973, "obj2": 0.004000586987205298}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),Max( MRS,( Max( MRS,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * ARS ) ) ) / DDR ) ) )", "choosing": "( Max( ( ( ( MUM / Max( CS,MUC ) ) / CS ) - ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUC + RRSe ) ) ) ) ),RRSe ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7452107279693486, "obj2": 0.10482524669140245}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( PN * AMS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( ( ( ( ( MUM / Max( MLU,MUC ) ) / ( RRSe - RRSe ) ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,( Min( RCSe ,Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) ) / RCSe ) ) )", "obj1": 0.7126436781609196, "obj2": 0.11920997342834294}, {"determining": "( ( PN * ( ( Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) / DDR ) - Min( ( CRS + FirstVNF_CPU_Server ) ,AMS ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,( RMSe + MUM ) ) * ( RMSe - RMSe ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.003227937497805178}, {"determining": "( ( Max( ( CRS + ( Const / ( FirstVNF_Mem / Min( FirstVNF_CPU ,PN ) ) ) ),FirstVNF_Mem ) * ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( Min( ACS ,Max( ( RRS / Const ),CRS ) ) ,( FirstVNF_RAM / AMS ) ) ) ) - ( FirstVNF_CPU - AMS ) )", "choosing": "( Max( MLU,( ( MUC / DS ) + MUM ) ) * ( MUR + ( CS * ( MUM / Max( ( DS + RCSe ),RRSe ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.004763226325240704}, {"determining": "( ( PN * ( ( Min( FirstVNF_CPU_Server ,( Min( ACS ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( Min( MLU ,RRSe ),RRSe ) * ( RRSe - RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004334454779699649}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * Max( RRS,( CRS * FirstVNF_RAM_Server ) ) ) - ( Min( FirstVNF_RAM ,MRS ) + MRS ) )", "choosing": "( ( ( ( MUR + RMSe ) + ( DS * RCSe ) ) * ( MUM * MUC ) ) - Min( MLU ,RCSe ) )", "obj1": 0.9252873563218391, "obj2": 0.030914098417979194}, {"determining": "( Max( Max( ( CRS * ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( AMS * ( ( FirstVNF_Mem_Server - Max( AMS,( BR - ARS ) ) ) * FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM - MRS ) ) - ( ACS * PN ) )", "choosing": "( ( RCSe + Min( MUM ,( Max( MUR,( DS * ( ( RRSe / MUM ) / RMSe ) ) ) + Min( Max( MUM,MUC ) ,MUC ) ) ) ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.014300928987263558}, {"determining": "( ( ( PN / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / FirstVNF_RAM ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( CRS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( MUR ,RMSe ),( ( CS + Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ) ) * MUR ) ) )", "obj1": 0.9616858237547893, "obj2": 0.013773882275044657}, {"determining": "( ( ( BR / ( Const * DDR ) ) / ( Min( Const ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_RAM ,DDR ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Const )", "choosing": "Max( DS,( RRSe + ( DS / Min( MUC ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( ( PN / ( ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) - Min( DDR ,FirstVNF_CPU_Server ) ) ) * ( PN * AMS ) ) - Max( Min( Const ,CRS ),FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( Min( ( RMSe / MLU ) ,RMSe ) - Max( CS,( ( CS / DS ) + CS ) ) ) - RMSe ),( Max( MUR,RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.867816091954023, "obj2": 0.05043134920745744}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( CRS / ACS ) ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( MUR - DS ) ) + RMSe ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,CS ) ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031023298619688448}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( FirstVNF_CPU + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + ( ( RMSe * DS ) - CS ) ) - Min( ( ( MLU + DS ) - MLU ) ,RRSe ) )", "obj1": 0.9425287356321839, "obj2": 0.02310937653962019}, {"determining": "( ( Const * ( BR - FirstVNF_RAM ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU + Max( ( ( FirstVNF_CPU / ACS ) / ( FirstVNF_RAM * RRS ) ),RRS ) ) ,( MRS / Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_Mem_Server + ARS ) ) ) ) / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),Min( Max( FirstVNF_CPU_Server,DDR ) ,( FirstVNF_Mem_Server + MDR ) ) ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * Max( CS,Min( Max( DS,( Max( RCSe,MUM ) + MUR ) ) ,( Max( MLU,( MLU * RCSe ) ) + ( RRSe + MLU ) ) ) ) ) ),( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( ( ( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU / PN ) ) / Max( FirstVNF_RAM_Server,ACS ) ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - PN )", "choosing": "Max( DS,Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "26": [{"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) * PN ) - Min( Max( FirstVNF_CPU_Server,( MRS - DDR ) ) ,( ( FirstVNF_RAM / Const ) + MDR ) ) )", "choosing": "( ( ( MUC * ( ( Max( MUC,RRSe ) * MUC ) * CS ) ) * ( RCSe * DS ) ) - Min( RCSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( ( ( Max( FirstVNF_RAM,DDR ) / ( FirstVNF_CPU / PN ) ) / Max( FirstVNF_RAM_Server,ACS ) ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( FirstVNF_Mem_Server / Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) )", "choosing": "Max( DS,( Max( ( ( RMSe - MUM ) + ( DS * RRSe ) ),MUR ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / ARS ) ,( FirstVNF_CPU / Max( FirstVNF_CPU,( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_CPU ) ) ) ) ) / DDR ) ) )", "choosing": "( Min( Max( MUC,MUM ) ,Min( MUR ,RMSe ) ) * Max( CS,Min( ( Min( RMSe ,( RMSe - MLU ) ) - MUM ) ,( ( ( ( MUR - RCSe ) / DS ) * CS ) / MUM ) ) ) )", "obj1": 0.5977011494252874, "obj2": 0.2380367854192079}, {"determining": "( ( PN * ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - ( Min( ( DDR + FirstVNF_RAM ) ,( ( Max( PN,FirstVNF_CPU_Server ) + RRS ) / FirstVNF_Mem ) ) - Max( MDR,ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUR - MUC ) - Min( ( DS + RMSe ) ,Min( ( Max( Min( ( RRSe - DS ) ,Min( MUR ,RMSe ) ),DS ) / ( CS / DS ) ) ,( CS * DS ) ) ) )", "obj1": 0.685823754789272, "obj2": 0.16420160007809295}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) )", "obj1": 0.6704980842911877, "obj2": 0.17286820156056576}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,FirstVNF_RAM_Server ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( ( MUM / ( RCSe - ( MLU + DS ) ) ),Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.6149425287356322, "obj2": 0.23087210070896647}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - Min( ACS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( CS - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6283524904214559, "obj2": 0.21658412525141638}, {"determining": "( ( ARS * ( ( ( Const / Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ARS ),MDR ) ) - ARS ) / CRS ) ) - ( DDR / ( ( FirstVNF_Mem_Server - MDR ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * MLU ) + ( DS - DS ) )", "obj1": 0.6590038314176245, "obj2": 0.178491082402923}, {"determining": "( ( PN * ( Min( ACS ,( FirstVNF_CPU / ACS ) ) - ( Min( ( BR / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ( PN / MDR ) ) ) / DDR ) ) ) - ( CRS + MRS ) )", "choosing": "( ( RCSe * Min( MUC ,( RCSe / ( DS - RMSe ) ) ) ) / RMSe )", "obj1": 0.6475095785440613, "obj2": 0.18732877777010346}, {"determining": "( ( Min( ( ( BR * CRS ) - FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,( MDR + FirstVNF_Mem_Server ) ) ) * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / Min( ( ( ARS * CRS ) / ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,( ( MUM + Max( RCSe,MUC ) ) + ( Max( Min( ( Max( Min( RMSe ,RMSe ),MUC ) + MUC ) ,RRSe ),( ( MUC + MLU ) / MUR ) ) + RCSe ) ) )", "obj1": 0.6360153256704981, "obj2": 0.2024517424541955}, {"determining": "( ( PN * ( ( CRS + DDR ) - Min( ( ( ARS * CRS ) / ( Min( BR ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( ( ( DS - ( Min( MUC ,CS ) * CS ) ) / ( RCSe - ( RRSe + DS ) ) ),Min( ( ( MUM / RCSe ) / ( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.6264367816091954, "obj2": 0.22636108382545614}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( Max( ARS,( MDR + Min( DDR ,FirstVNF_CPU ) ) ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ( RRS / Const ) ) ) / DDR ) ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( RMSe ,MUR ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),Max( RCSe,MUM ) ) )", "obj1": 0.5823754789272031, "obj2": 0.27787109164445795}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( MRS * ( RRS / Max( MRS,AMS ) ) ) - ( MDR / Const ) ) ) )", "choosing": "( Max( ( RCSe * MLU ),RRSe ) / ( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( ( RCSe * Min( MLU ,CS ) ) / RRSe ) + CS ) ) ) / Min( ( RCSe - RRSe ) ,CS ) ) )", "obj1": 0.7835249042145593, "obj2": 0.08669958274180666}, {"determining": "( ( ( PN / ( Min( DDR ,( AMS + ACS ) ) - ( Const / Min( ( Const + FirstVNF_CPU_Server ) ,PN ) ) ) ) * ( PN * AMS ) ) - ( BR + ARS ) )", "choosing": "( Max( CS,( RMSe * RCSe ) ) / ( Max( MUR,( ( MUM + MLU ) - Max( CS,( ( DS - ( MUR - MUR ) ) * Min( CS ,Max( CS,MUR ) ) ) ) ) ) * ( RMSe + MLU ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07273979488214789}, {"determining": "( ( PN * ( ( Min( ( ( FirstVNF_CPU - ( PN * FirstVNF_Mem ) ) - BR ) ,( FirstVNF_CPU / ( ( BR - AMS ) * ( FirstVNF_CPU * MDR ) ) ) ) / DDR ) - Min( BR ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( RCSe - ( ( MLU + ( RMSe * Min( Min( RRSe ,MUC ) ,( MLU + MLU ) ) ) ) / ( RMSe + MLU ) ) ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RMSe ) * ( CS + ( CS / MUC ) ) ) ) )", "obj1": 0.7969348659003831, "obj2": 0.08316557009293775}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - ( CS + DS ) ) ,( ( RMSe + ( RRSe * MUR ) ) - MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.08905872672637545}, {"determining": "( ( ( PN / ( Max( DDR,( Min( FirstVNF_Mem ,MDR ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( ( RRSe - CS ) * ( MUM - MUM ) ) + DS ) - Min( MLU ,RRSe ) ) )", "obj1": 0.8065134099616859, "obj2": 0.07644134152844005}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7586206896551724, "obj2": 0.09892077558141045}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + FirstVNF_CPU ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RMSe ) * ( CS + CS ) ) ) ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04196039389157488}, {"determining": "( ( Min( MRS ,( RRS + ( FirstVNF_RAM_Server + Min( ARS ,( RRS * FirstVNF_Mem_Server ) ) ) ) ) + BR ) - ( DDR - MRS ) )", "choosing": "( ( Max( ( MUR / ( MUR + RRSe ) ),( Min( ( RMSe + MUR ) ,( Min( ( RRSe * DS ) ,Max( MLU,RCSe ) ) + DS ) ) / CS ) ) - CS ) * Max( Min( ( MUM / DS ) ,MUM ),MLU ) )", "obj1": 0.896551724137931, "obj2": 0.03935142988702865}, {"determining": "( ( PN - ( ( Min( ( Min( ( Const / ACS ) ,( BR - ARS ) ) / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( ( MUR / MLU ) / RCSe )", "obj1": 0.6455938697318008, "obj2": 0.19745966277616656}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) + DDR ) / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) - ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( Min( Min( MLU ,( Max( DS,( RMSe - MLU ) ) * CS ) ) ,MLU ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.8812260536398467, "obj2": 0.04540224892122593}, {"determining": "( ( ( Max( ( ( DDR / ( CRS / ( MRS + FirstVNF_CPU_Server ) ) ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) - ( ( Min( BR ,FirstVNF_RAM_Server ) / ( Min( Min( Max( FirstVNF_Mem,DDR ) ,( FirstVNF_CPU / ARS ) ) ,MDR ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,( MLU + RRSe ) ) ) / RRSe ) - Min( Min( ( Max( MUR,RCSe ) / RMSe ) ,RCSe ) ,( CS / CS ) ) ) / Min( ( DS + RMSe ) ,( MUM - DS ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08058193544013893}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( ( ( FirstVNF_Mem / ( Min( DDR ,( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Min( ( RRS / FirstVNF_CPU ) ,ARS ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem / Const ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / FirstVNF_CPU ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RRSe / ( MLU * ( Min( MLU ,( RCSe * RMSe ) ) / MUR ) ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( MRS + Min( Max( Max( ( AMS * FirstVNF_Mem ),( MDR / Min( RRS ,MRS ) ) ),( FirstVNF_RAM - MRS ) ) ,MRS ) ) )", "choosing": "( ( ( RCSe * DS ) * ( MUC * ( ( MUM / Max( DS,Min( ( RRSe + MLU ) ,Max( RRSe,RCSe ) ) ) ) * CS ) ) ) - Min( RCSe ,MLU ) )", "obj1": 0.9042145593869731, "obj2": 0.03643009939436883}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU * ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),Min( Max( Min( ( ( MUC * ( RRSe / RMSe ) ) - RRSe ) ,( RRSe + Min( RCSe ,MUR ) ) ),RMSe ) ,( CS + CS ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * FirstVNF_Mem_Server ) - Min( DDR ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) / AMS ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ACS * Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * ( CRS + Const ) ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( ( ( ( ( MUC * DS ) / ( MUC - MUM ) ) / ( DS + MUM ) ) / RMSe ) / ( Min( MLU ,RCSe ) - RCSe ) ) - RMSe ),( Max( MUR,RMSe ) * Min( CS ,RRSe ) ) ) )", "obj1": 0.764367816091954, "obj2": 0.0937642920615673}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( Min( MDR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * ( ( ARS * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( ( ( RRSe - ( RMSe + MUM ) ) / ( CS * MUR ) ) - DS ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.9712643678160919, "obj2": 0.010320582829122012}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( FirstVNF_CPU + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( MDR + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + ( ( RMSe * RMSe ) - CS ) ) - Min( ( ( MLU + DS ) - MLU ) ,RRSe ) )", "obj1": 0.6436781609195402, "obj2": 0.20019617778282256}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( ( CS - Max( MUR,RMSe ) ) / MUC ) / MLU ) ,RCSe ) - ( DS + ( Min( ( ( RMSe - ( MUR + CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) + RMSe ) ) )", "obj1": 0.8544061302681992, "obj2": 0.054432665305241774}, {"determining": "( ( ( ( ( ( Const / FirstVNF_RAM ) - Min( MDR ,( ( FirstVNF_CPU * FirstVNF_CPU ) + FirstVNF_Mem ) ) ) - ( Const / FirstVNF_RAM ) ) / PN ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - ( DS + ( ( Min( RCSe ,RRSe ) - MUM ) + MUR ) ) ) ,( ( RMSe + ( RRSe * ( ( ( ( CS + DS ) + ( MUM * DS ) ) * CS ) + RRSe ) ) ) - MUC ) )", "obj1": 0.7681992337164751, "obj2": 0.09362148847241761}, {"determining": "( ( ( ( Min( MRS ,ARS ) / ARS ) - ( MDR - ( AMS - Min( ( FirstVNF_Mem / Max( ACS,Const ) ) ,FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) / ( DDR / ( ( Max( FirstVNF_RAM_Server,BR ) - AMS ) - ( RRS * MRS ) ) ) )", "choosing": "( Min( ( RCSe / MLU ) ,( MUC / RCSe ) ) - ( ( RMSe - ( ( ( ( DS / MUR ) * Max( DS,DS ) ) + ( Max( RRSe,( RCSe / MUR ) ) + Min( MUM ,MUC ) ) ) * CS ) ) + DS ) )", "obj1": 0.9482758620689655, "obj2": 0.017022162412219176}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( ( ACS + Const ) / ( FirstVNF_RAM / AMS ) ) / ( Min( FirstVNF_RAM ,ARS ) / ( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( FirstVNF_CPU_Server + Min( RRS ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) - ( CRS - Const ) )", "choosing": "Max( Min( MUM ,MUR ),Min( ( Min( ( DS + ( ( RRSe + MUC ) / ( Max( MUR,DS ) - ( MLU / MUR ) ) ) ) ,( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUR + RRSe ) ) ) ) ) + MLU ) ,( MLU + MLU ) ) )", "obj1": 0.5766283524904214, "obj2": 0.28374005165227156}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( Max( MUR,( MUM * MUC ) ) / ( MLU * MLU ) ) / RMSe )", "obj1": 0.9157088122605364, "obj2": 0.0327674683289582}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN + AMS ) ) - ( ( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / ( FirstVNF_CPU_Server / ARS ) ) )", "choosing": "Max( ( ( Min( ( ( ( MUR * MUR ) * RCSe ) - ( MUC - ( RRSe + RCSe ) ) ) ,( CS * MUR ) ) + ( RMSe / Max( Max( RMSe,CS ),( MUM / DS ) ) ) ) - MUR ),Min( ( CS / MUM ) ,RRSe ) )", "obj1": 0.7337164750957854, "obj2": 0.11154691076894967}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * FirstVNF_CPU ) ) - ( ( ARS * ( Const / CRS ) ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( ( ( FirstVNF_RAM_Server + RRS ) * FirstVNF_Mem_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "( Max( Min( ( ( ( CS + MUR ) / MUR ) / ( CS * MUC ) ) ,Min( RCSe ,MLU ) ),Min( MUR ,RCSe ) ) * ( ( ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * CS ) ) ) + RCSe ) ) + Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) ) / ( ( MUR * MUC ) + Min( RCSe ,MUM ) ) ) )", "obj1": 0.7203065134099617, "obj2": 0.11662163985801538}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( Min( MDR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.012558939334188233}, {"determining": "( ( Min( PN ,( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ( FirstVNF_CPU + ( AMS / ( CRS * DDR ) ) ) * CRS ) / ( Min( ( Max( ARS,RRS ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,Const ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( RRSe - CS ) + DS ) - Max( MUR,( RRSe * MUM ) ) ) ,( MLU + RCSe ) ) ) ,RMSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8275862068965517, "obj2": 0.06784178596448646}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.1300120043462737}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - MDR ) ) - ( ( ARS * CRS ) / ( Min( Max( CRS,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( RMSe + ( Max( CS,( Min( ( MUR / MUR ) ,RMSe ) + RRSe ) ) + MUC ) ) - ( MUC * ( Min( ( CS * MUM ) ,MUR ) * MUR ) ) ) )", "obj1": 0.8754789272030651, "obj2": 0.04789658697492075}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( ARS - PN ) ) - ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,RRS ) ) ) / ( MRS + ( AMS * FirstVNF_Mem ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "Max( DS,Max( ( ( MLU + MUR ) + ( MUR + Max( DS,RRSe ) ) ),Max( ( ( MLU + ( MLU - ( ( RMSe / MUC ) * ( MUR + MLU ) ) ) ) + ( RMSe - CS ) ),MUM ) ) )", "obj1": 0.8486590038314177, "obj2": 0.05965784373145887}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( ( MUM * ( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / ( MUM * Min( RRSe ,( MLU * RRSe ) ) ) ) ) * RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 0.9252873563218391, "obj2": 0.028726442108904775}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( ( DDR / FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * ( ( FirstVNF_Mem * RRS ) * ACS ) ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * Max( ( MDR - MDR ),BR ) ) ) ) )", "choosing": "( Min( ( MLU / RRSe ) ,RCSe ) - ( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( Min( DS ,Max( MUM,RMSe ) ) + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.8505747126436781, "obj2": 0.056174282244870005}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - Min( DDR ,( ARS * Max( ( FirstVNF_RAM + ARS ),FirstVNF_CPU ) ) ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ARS - ( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( ( CS - ( Max( DS,MUR ) - ( RMSe * MUC ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( Min( MUR ,RMSe ) - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8639846743295019, "obj2": 0.053852748591532995}, {"determining": "( ( MRS * Max( RRS,( Const * BR ) ) ) - ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU * ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( ( ( Max( MLU,RCSe ) * ( RMSe * RMSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( ( ( RCSe / DS ) + Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Min( MUR ,CS ) ) / CS ) - ( MLU / Max( RMSe,MUM ) ) ) ) ) )", "obj1": 0.6973180076628352, "obj2": 0.1282697390501788}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + MRS ) ) ) / ACS ) - ( MDR - ( ( PN + FirstVNF_CPU ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server * Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( ( Max( MUC,RMSe ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( RMSe + ( ( ( RMSe - ( MUR / RMSe ) ) + ( ( MUC / MUM ) + Min( ( CS / CS ) ,MUM ) ) ) / CS ) ) ) )", "obj1": 0.8371647509578544, "obj2": 0.06224442568150566}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.006492189062201773}, {"determining": "( ( ( PN / Min( Min( DDR ,( ( PN + FirstVNF_RAM ) * ( ( RRS + FirstVNF_CPU ) * Const ) ) ) ,( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) - DDR ) ) )", "choosing": "( Max( Min( MLU ,RRSe ),( RMSe * MLU ) ) / ( RRSe + ( ( ( RMSe / CS ) * ( ( Max( Max( CS,MUC ),DS ) + ( RCSe * ( RRSe + RCSe ) ) ) * RRSe ) ) - CS ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10540426450777751}, {"determining": "( ( ( PN * AMS ) * ( MRS / ( Min( MDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU / PN ) + Const ) ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( MUM,Min( MUC ,RRSe ) ) / Max( DS,MUC ) )", "obj1": 0.7279693486590039, "obj2": 0.11391019854446555}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( Min( ( MUR - ( ( Max( CS,DS ) / MUM ) / CS ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RMSe ) + ( ( ( ( RCSe / RRSe ) - ( MUM * CS ) ) - Min( RRSe ,( CS + MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7260536398467433, "obj2": 0.11435693293869617}, {"determining": "( ( ( ARS / ( Min( ( AMS * FirstVNF_CPU ) ,Const ) / ( Const / FirstVNF_RAM ) ) ) * ( AMS * RRS ) ) - ( ( MRS + AMS ) + FirstVNF_Mem ) )", "choosing": "( ( MUC * CS ) * ( Min( Min( RRSe ,CS ) ,MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.7164750957854407, "obj2": 0.11813242538030118}, {"determining": "( ( ( PN / ( Min( ( ( DDR / RRS ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),Min( Min( ( ( DS / RMSe ) - RMSe ) ,( MLU - DS ) ) ,MUR ) ) ) )", "obj1": 0.8735632183908046, "obj2": 0.04984383848018345}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * ( AMS * Const ) ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,Max( MLU,CS ) ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / ( RCSe / DS ) ) )", "obj1": 0.7471264367816092, "obj2": 0.10431811036909899}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * ( ( FirstVNF_Mem * FirstVNF_CPU ) * ACS ) ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe / Max( ( MUM / DS ),Max( RMSe,CS ) ) ) - ( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.842911877394636, "obj2": 0.06029748638401152}, {"determining": "( ( ( PN / Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( Max( ACS,FirstVNF_CPU ) - MRS ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + ( RRSe + Min( ( Max( MUM,MUR ) - Min( MUR ,MUM ) ) ,RRSe ) ) ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.9770114942528736, "obj2": 0.007711276867644333}, {"determining": "( ( ( ( BR - BR ) * MRS ) - Min( PN ,AMS ) ) - ( ARS / ( ARS * CRS ) ) )", "choosing": "( ( ( ( ( ( RCSe / ( Max( MUR,MLU ) - CS ) ) / Max( DS,CS ) ) - ( ( ( RMSe + ( CS / MUM ) ) + RCSe ) / RMSe ) ) + Min( CS ,DS ) ) / MUR ) - Max( RMSe,RCSe ) )", "obj1": 0.9118773946360154, "obj2": 0.035947375929578806}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - ( RRS + FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( ARS * CRS ) / ( DDR / Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_RAM - PN ) + Min( DDR ,BR ) ) ) ) ,Max( FirstVNF_CPU,Min( FirstVNF_RAM ,( DDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RRSe ,( ( RRSe / Max( RRSe,RRSe ) ) * RCSe ) ) / CS ) * MUR ),( ( MUR * RCSe ) - RRSe ) ) / ( ( RRSe - RCSe ) - ( ( MUM + Min( RMSe ,( DS - Min( MUR ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10768261949220766}, {"determining": "( ( FirstVNF_Mem_Server - RRS ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( Const / ARS ) ) / Max( Min( Max( MRS,( ( MDR + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( Max( ( RCSe / MUM ),RCSe ),( RCSe - RRSe ) ) / Max( DS,MLU ) )", "obj1": 0.867816091954023, "obj2": 0.05043134920745744}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( DDR / RRS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * Max( ( MUR / RCSe ),( MUR - ( ( DS / RMSe ) - RMSe ) ) ) ) )", "obj1": 0.7030651340996169, "obj2": 0.12536449165132005}, {"determining": "( Min( MRS ,MRS ) - ( ( Min( ACS ,( FirstVNF_CPU / Max( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),DDR ),RRS ) ) ) / DDR ) + ( ARS * CRS ) ) )", "choosing": "( ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) / ( ( ( ( MUM / Max( RCSe,MUC ) ) + CS ) - Min( Min( ( Max( RMSe,Max( RRSe,DS ) ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) )", "obj1": 0.921455938697318, "obj2": 0.031942864825938916}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_CPU + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,Min( Const ,MRS ) ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM * MUC ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.9444444444444444, "obj2": 0.021924492456042093}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.12659877421094784}, {"determining": "( ( PN * ( ( Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) / DDR ) - Min( ( CRS + FirstVNF_CPU_Server ) ,AMS ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,( RMSe + MUM ) ) * ( RMSe - RMSe ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.710727969348659, "obj2": 0.12122651839213491}, {"determining": "( ( ( PN / Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( Max( ACS,FirstVNF_CPU ) - MRS ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - Min( Min( ( Max( RMSe,RCSe ) / RMSe ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUC,MUR ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.975095785440613, "obj2": 0.008676844918981309}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( ( ( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( AMS + PN ) ) * PN ) - ( CRS + Max( Max( ( ACS - FirstVNF_CPU ),RRS ),Min( PN ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM * Min( ( Min( MUR ,CS ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,Max( RMSe,MUC ) ) ) - ( MUM + ( Min( ( RCSe / MUR ) ,RCSe ) + Min( Min( RMSe ,MUR ) ,DS ) ) ) )", "obj1": 0.9425287356321839, "obj2": 0.02310937653962019}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * CRS ) ) / Min( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU / ( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) ) ) ) )", "choosing": "Min( ( Max( ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( DS / ( MUC / ( MUC + RRSe ) ) ) ),MUR ) - RMSe ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( ( MLU / DS ),( CS * MLU ) ) ) )", "obj1": 0.8659003831417624, "obj2": 0.05348983161431539}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) ) )", "obj1": 0.7049808429118773, "obj2": 0.12226511751889758}, {"determining": "( ( Min( ( MRS - ( ( FirstVNF_Mem_Server / ACS ) * FirstVNF_CPU ) ) ,ACS ) * ( ACS / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ARS - CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,Min( ( CS + MLU ) ,MUR ) ) ) * ( MUM / MUM ) ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( RRSe / ( RCSe * ( MLU - DS ) ) ) + CS ) ) ),Min( ( RCSe - RRSe ) ,RCSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06192611889944147}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( CRS / ACS ) ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( MUR - DS ) ) + RMSe ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,CS ) ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031023298619688448}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * PN ) - ( ( Min( Const ,FirstVNF_RAM ) / MRS ) + MRS ) )", "choosing": "( ( ( RCSe * MUC ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,( MUM / MUC ) ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03613553823966046}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( Min( FirstVNF_RAM ,( Min( Min( AMS ,MRS ) ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / CRS ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "Max( DS,( RCSe + ( ( MLU - ( MUM * RCSe ) ) / DS ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0017438978776377775}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),Max( MRS,( Max( MRS,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * ARS ) ) ) / DDR ) ) )", "choosing": "( Max( ( ( ( MUM / Max( CS,MUC ) ) / CS ) - ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUC + RRSe ) ) ) ) ),RRSe ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7452107279693486, "obj2": 0.10482524669140245}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * ( ARS + ( DDR - PN ) ) ) ) ) - ( PN - MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Max( ( ( ( RMSe + MUM ) + DS ) - Max( ( ( MUM * ( MLU / RCSe ) ) / Max( MUC,CS ) ),RMSe ) ),( MLU + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS - ( ( MDR + FirstVNF_CPU ) * Const ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( ( ( ( RCSe - RMSe ) - ( CS + MUR ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7068965517241379, "obj2": 0.1219817746300119}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.003227937497805178}, {"determining": "( ( Max( ( CRS + ( Const / ( FirstVNF_Mem / Min( FirstVNF_CPU ,PN ) ) ) ),FirstVNF_Mem ) * ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( Min( ACS ,Max( ( RRS / Const ),CRS ) ) ,( FirstVNF_RAM / AMS ) ) ) ) - ( FirstVNF_CPU - AMS ) )", "choosing": "( Max( MLU,( ( MUC / DS ) + MUM ) ) * ( MUR + ( CS * ( MUM / Max( ( DS + RCSe ),RRSe ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.004763226325240704}, {"determining": "( ( PN * ( ( Min( FirstVNF_CPU_Server ,( Min( ACS ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( Min( MLU ,RRSe ),RRSe ) * ( RRSe - RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004334454779699649}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( PN * AMS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( ( ( ( ( MUM / Max( MLU,MUC ) ) / ( RRSe - RRSe ) ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,( Min( RCSe ,Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) ) / RCSe ) ) )", "obj1": 0.7126436781609196, "obj2": 0.11920997342834294}, {"determining": "( Max( Max( ( CRS * ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( AMS * ( ( FirstVNF_Mem_Server - Max( AMS,( BR - ARS ) ) ) * FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM - MRS ) ) - ( ACS * PN ) )", "choosing": "( ( RCSe + Min( MUM ,( Max( MUR,( DS * ( ( RRSe / MUM ) / RMSe ) ) ) + Min( Max( MUM,MUC ) ,MUC ) ) ) ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.014300928987263558}, {"determining": "( ( ( PN / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / FirstVNF_RAM ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( CRS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( MUR ,RMSe ),( ( CS + Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,MUC ) ,Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ) ) * MUR ) ) )", "obj1": 0.9616858237547893, "obj2": 0.013773882275044657}, {"determining": "( ( ( BR / ( Const * DDR ) ) / ( Min( Const ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_RAM ,DDR ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Const )", "choosing": "Max( DS,( RRSe + ( DS / Min( MUC ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( ( ( FirstVNF_Mem_Server * CRS ) - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( ( ( ( ARS / CRS ) + ( FirstVNF_RAM + FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server + Min( RRS ,Min( AMS ,ACS ) ) ) ) * Min( CRS ,ARS ) ) ) + MRS ) )", "choosing": "Max( ( RMSe / RRSe ),( RCSe / ( Max( MUR,MUM ) - MLU ) ) )", "obj1": 0.9904214559386973, "obj2": 0.004000586987205298}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( FirstVNF_Mem_Server - Min( ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ,( ( CRS + BR ) + ACS ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe / ( MUR * ( RCSe + CS ) ) ) - ( CS + DS ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.9942528735632183, "obj2": 0.0017438978776377775}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,( Min( RCSe ,Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) ) / RCSe ) ) )", "obj1": 0.7126436781609196, "obj2": 0.11920997342834294}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( FirstVNF_CPU + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + ( ( RMSe * DS ) - CS ) ) - Min( ( ( MLU + DS ) - MLU ) ,RRSe ) )", "obj1": 0.9425287356321839, "obj2": 0.02310937653962019}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,Max( DDR,ACS ) ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( RRSe,( RCSe - RRSe ) ) / Max( MLU,CS ) )", "obj1": 0.867816091954023, "obj2": 0.05043134920745744}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( Min( FirstVNF_RAM ,ARS ) * FirstVNF_Mem_Server ) ) + MRS ) )", "choosing": "Max( CS,( RCSe + CS ) )", "obj1": 0.9904214559386973, "obj2": 0.004000586987205298}, {"determining": "( ( MDR - ( ( ( CRS - Const ) * CRS ) / RRS ) ) - ( FirstVNF_RAM + RRS ) )", "choosing": "Max( ( MUC + DS ),( ( Max( Min( ( ( MUC * RRSe ) * RRSe ) ,Min( CS ,RMSe ) ),( RRSe / CS ) ) / CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}], "27": [{"determining": "( ( ( ( FirstVNF_CPU - AMS ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * ( CRS / ( MRS + FirstVNF_CPU_Server ) ) ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( Min( ( MUR - ( ( Max( CS,DS ) / MUM ) / CS ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - ( CS + MUR ) ) + ( ( ( ( RCSe / RRSe ) - ( MUM * CS ) ) - Min( RRSe ,( CS + MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) * PN ) - Min( Max( FirstVNF_CPU_Server,( MRS - DDR ) ) ,( ( FirstVNF_RAM / Const ) + MDR ) ) )", "choosing": "( ( ( MUC * ( ( Max( MUC,RRSe ) * MUC ) * CS ) ) * ( RCSe * DS ) ) - Min( RCSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / ARS ) ,( FirstVNF_CPU / Max( FirstVNF_CPU,( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_CPU ) ) ) ) ) / DDR ) ) )", "choosing": "( Min( Max( MUC,MUM ) ,Min( MUR ,RMSe ) ) * Max( CS,Min( ( Min( RMSe ,( RMSe - MLU ) ) - MUM ) ,( ( ( ( MUR - RCSe ) / DS ) * CS ) / MUM ) ) ) )", "obj1": 0.5977011494252874, "obj2": 0.2380367854192079}, {"determining": "( ( PN * ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - ( Min( ( DDR + FirstVNF_RAM ) ,( ( Max( PN,FirstVNF_CPU_Server ) + RRS ) / FirstVNF_Mem ) ) - Max( MDR,ACS ) ) ) ) - ( Const + MRS ) )", "choosing": "( ( MUR - MUC ) - Min( ( DS + RMSe ) ,Min( ( Max( Min( ( RRSe - DS ) ,Min( MUR ,RMSe ) ),DS ) / ( CS / DS ) ) ,( CS * DS ) ) ) )", "obj1": 0.685823754789272, "obj2": 0.16420160007809295}, {"determining": "( Const - Max( ( ARS / MRS ),ACS ) )", "choosing": "Max( ( ( Min( CS ,MUM ) + ( ( DS / ( MUM / RCSe ) ) / MUR ) ) + RRSe ),( RCSe + CS ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( ( ( FirstVNF_CPU - AMS ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) ) ) - ( CRS + Max( Max( ( AMS + ARS ),RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,Min( Const ,MRS ) ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( MUM * Min( ( ( RCSe * MUC ) / ( Min( MLU ,Min( CS ,CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM * MUC ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.6628352490421456, "obj2": 0.16903113731350491}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - Min( ACS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( CS - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6283524904214559, "obj2": 0.21658412525141638}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,FirstVNF_RAM_Server ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( ( MUM / ( RCSe - ( MLU + DS ) ) ),Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.6149425287356322, "obj2": 0.23087210070896647}, {"determining": "( ( ARS * ( ( ( Const / Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ARS ),MDR ) ) - ARS ) / CRS ) ) - ( DDR / ( ( FirstVNF_Mem_Server - MDR ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * MLU ) + ( DS - DS ) )", "obj1": 0.6590038314176245, "obj2": 0.178491082402923}, {"determining": "( ( PN * ( Min( ACS ,( FirstVNF_CPU / ACS ) ) - ( Min( ( BR / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ( PN / MDR ) ) ) / DDR ) ) ) - ( CRS + MRS ) )", "choosing": "( ( RCSe * Min( MUC ,( RCSe / ( DS - RMSe ) ) ) ) / RMSe )", "obj1": 0.6475095785440613, "obj2": 0.18732877777010346}, {"determining": "( ( Min( ( ( BR * CRS ) - FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,( MDR + FirstVNF_Mem_Server ) ) ) * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / Min( ( ( ARS * CRS ) / ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,( ( MUM + Max( RCSe,MUC ) ) + ( Max( Min( ( Max( Min( RMSe ,RMSe ),MUC ) + MUC ) ,RRSe ),( ( MUC + MLU ) / MUR ) ) + RCSe ) ) )", "obj1": 0.6360153256704981, "obj2": 0.2024517424541955}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_CPU / FirstVNF_CPU ) + Min( DDR ,FirstVNF_CPU ) ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Min( Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ,Min( MUR ,RMSe ) ) * Max( CS,Min( ( Min( RMSe ,( RMSe - MLU ) ) - MUM ) ,( MUM / MUM ) ) ) )", "obj1": 0.5727969348659003, "obj2": 0.2807601382240171}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( MRS * ( RRS / Max( MRS,AMS ) ) ) - ( MDR / Const ) ) ) )", "choosing": "( Max( ( RCSe * MLU ),RRSe ) / ( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( ( RCSe * Min( MLU ,CS ) ) / RRSe ) + CS ) ) ) / Min( ( RCSe - RRSe ) ,CS ) ) )", "obj1": 0.7835249042145593, "obj2": 0.08669958274180666}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( Max( ARS,( MDR + Min( DDR ,FirstVNF_CPU ) ) ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ( RRS / Const ) ) ) / DDR ) ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( RMSe ,MUR ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),Max( RCSe,MUM ) ) )", "obj1": 0.5823754789272031, "obj2": 0.27787109164445795}, {"determining": "( ( ( PN / ( Min( DDR ,( AMS + ACS ) ) - ( Const / Min( ( Const + FirstVNF_CPU_Server ) ,PN ) ) ) ) * ( PN * AMS ) ) - ( BR + ARS ) )", "choosing": "( Max( CS,( RMSe * RCSe ) ) / ( Max( MUR,( ( MUM + MLU ) - Max( CS,( ( DS - ( MUR - MUR ) ) * Min( CS ,Max( CS,MUR ) ) ) ) ) ) * ( RMSe + MLU ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07273979488214789}, {"determining": "( ( PN * ( ( Min( ( ( FirstVNF_CPU - ( PN * FirstVNF_Mem ) ) - BR ) ,( FirstVNF_CPU / ( ( BR - AMS ) * ( FirstVNF_CPU * MDR ) ) ) ) / DDR ) - Min( BR ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( RCSe - ( ( MLU + ( RMSe * Min( Min( RRSe ,MUC ) ,( MLU + MLU ) ) ) ) / ( RMSe + MLU ) ) ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RMSe ) * ( CS + ( CS / MUC ) ) ) ) )", "obj1": 0.7969348659003831, "obj2": 0.08316557009293775}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - ( CS + DS ) ) ,( ( RMSe + ( RRSe * MUR ) ) - MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.08905872672637545}, {"determining": "( ( ( PN / ( Max( DDR,( Min( FirstVNF_Mem ,MDR ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( ( RRSe - CS ) * ( MUM - MUM ) ) + DS ) - Min( MLU ,RRSe ) ) )", "obj1": 0.8065134099616859, "obj2": 0.07644134152844005}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7586206896551724, "obj2": 0.09892077558141045}, {"determining": "( ( Min( MRS ,( RRS + ( FirstVNF_RAM_Server + Min( ARS ,( RRS * FirstVNF_Mem_Server ) ) ) ) ) + BR ) - ( DDR - MRS ) )", "choosing": "( ( Max( ( MUR / ( MUR + RRSe ) ),( Min( ( RMSe + MUR ) ,( Min( ( RRSe * DS ) ,Max( MLU,RCSe ) ) + DS ) ) / CS ) ) - CS ) * Max( Min( ( MUM / DS ) ,MUM ),MLU ) )", "obj1": 0.896551724137931, "obj2": 0.03935142988702865}, {"determining": "( ( PN - ( ( Min( ( Min( ( Const / ACS ) ,( BR - ARS ) ) / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( ( MUR / MLU ) / RCSe )", "obj1": 0.6455938697318008, "obj2": 0.19745966277616656}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + FirstVNF_CPU ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RMSe ) * ( CS + CS ) ) ) ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04196039389157488}, {"determining": "( ( ( Max( ( ( DDR / ( CRS / ( MRS + FirstVNF_CPU_Server ) ) ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) - ( ( Min( BR ,FirstVNF_RAM_Server ) / ( Min( Min( Max( FirstVNF_Mem,DDR ) ,( FirstVNF_CPU / ARS ) ) ,MDR ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) )", "choosing": "( Min( ( ( ( ( MUM / Max( RCSe,( MLU + RRSe ) ) ) / RRSe ) - Min( Min( ( Max( MUR,RCSe ) / RMSe ) ,RCSe ) ,( CS / CS ) ) ) / Min( ( DS + RMSe ) ,( MUM - DS ) ) ) ,RMSe ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.8026819923371648, "obj2": 0.08058193544013893}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( ( PN * ( ( CRS + DDR ) - Min( ( ( ARS * CRS ) / ( Min( BR ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( ( ( DS - ( Min( MUC ,CS ) * CS ) ) / ( RCSe - ( RRSe + DS ) ) ),Min( ( ( MUM / RCSe ) / ( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.6264367816091954, "obj2": 0.22636108382545614}, {"determining": "( ( ( FirstVNF_Mem / ( Min( DDR ,( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Min( ( RRS / FirstVNF_CPU ) ,ARS ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem / Const ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / FirstVNF_CPU ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RRSe / ( MLU * ( Min( MLU ,( RCSe * RMSe ) ) / MUR ) ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}, {"determining": "( Min( RRS ,Const ) - ( CRS + MRS ) )", "choosing": "( MUC / ( ( CS - ( MUC + MUC ) ) + DS ) )", "obj1": 0.6245210727969349, "obj2": 0.22702490361489633}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( MRS + Min( Max( Max( ( AMS * FirstVNF_Mem ),( MDR / Min( RRS ,MRS ) ) ),( FirstVNF_RAM - MRS ) ) ,MRS ) ) )", "choosing": "( ( ( RCSe * DS ) * ( MUC * ( ( MUM / Max( DS,Min( ( RRSe + MLU ) ,Max( RRSe,RCSe ) ) ) ) * CS ) ) ) - Min( RCSe ,MLU ) )", "obj1": 0.9042145593869731, "obj2": 0.03643009939436883}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU * ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),Min( Max( Min( ( ( MUC * ( RRSe / RMSe ) ) - RRSe ) ,( RRSe + Min( RCSe ,MUR ) ) ),RMSe ) ,( CS + CS ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * FirstVNF_Mem_Server ) - Min( DDR ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) / AMS ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ACS * Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * ( CRS + Const ) ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( ( ( ( ( MUC * DS ) / ( MUC - MUM ) ) / ( DS + MUM ) ) / RMSe ) / ( Min( MLU ,RCSe ) - RCSe ) ) - RMSe ),( Max( MUR,RMSe ) * Min( CS ,RRSe ) ) ) )", "obj1": 0.764367816091954, "obj2": 0.0937642920615673}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( Min( MDR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * ( ( ARS * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( ( ( AMS / RRS ) - Min( ( Min( ACS ,DDR ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( ( Max( MLU,RCSe ) / ( CS * MUR ) ) - DS ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.9712643678160919, "obj2": 0.010173849454549388}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( FirstVNF_CPU + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + ( ( MUR - RMSe ) - CS ) ) - Min( ( ( MLU + DS ) - MLU ) ,RRSe ) )", "obj1": 0.6417624521072797, "obj2": 0.1980389603592063}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( ( CS - Max( MUR,RMSe ) ) / MUC ) / MLU ) ,RCSe ) - ( DS + ( Min( ( ( RMSe - ( MUR + CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) + RMSe ) ) )", "obj1": 0.8544061302681992, "obj2": 0.054432665305241774}, {"determining": "( ( ( ( ( ( Const / FirstVNF_RAM ) - Min( MDR ,( ( FirstVNF_CPU * FirstVNF_CPU ) + FirstVNF_Mem ) ) ) - ( Const / FirstVNF_RAM ) ) / PN ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - ( DS + ( ( Min( RCSe ,RRSe ) - MUM ) + MUR ) ) ) ,( ( RMSe + ( RRSe * ( ( ( ( CS + DS ) + ( MUM * DS ) ) * CS ) + RRSe ) ) ) - MUC ) )", "obj1": 0.7681992337164751, "obj2": 0.09362148847241761}, {"determining": "( ( ( ( Min( MRS ,ARS ) / ARS ) - ( MDR - ( AMS - Min( ( FirstVNF_Mem / Max( ACS,Const ) ) ,FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) / ( DDR / ( ( Max( FirstVNF_RAM_Server,BR ) - AMS ) - ( RRS * MRS ) ) ) )", "choosing": "( Min( ( RCSe / MLU ) ,( MUC / RCSe ) ) - ( ( RMSe - ( ( ( ( DS / MUR ) * Max( DS,DS ) ) + ( Max( RRSe,( RCSe / MUR ) ) + Min( MUM ,MUC ) ) ) * CS ) ) + DS ) )", "obj1": 0.9482758620689655, "obj2": 0.017022162412219176}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( Max( MUR,( MUM * MUC ) ) / ( MLU * MLU ) ) / RMSe )", "obj1": 0.9157088122605364, "obj2": 0.0327674683289582}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN + AMS ) ) - ( ( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / ( FirstVNF_CPU_Server / ARS ) ) )", "choosing": "Max( ( ( Min( ( ( ( MUR * MUR ) * RCSe ) - ( MUC - ( RRSe + RCSe ) ) ) ,( CS * MUR ) ) + ( RMSe / Max( Max( RMSe,CS ),( MUM / DS ) ) ) ) - MUR ),Min( ( CS / MUM ) ,RRSe ) )", "obj1": 0.7337164750957854, "obj2": 0.11154691076894967}, {"determining": "( ( Min( PN ,( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ( FirstVNF_CPU + ( AMS / ( CRS * DDR ) ) ) * CRS ) / ( Min( ( Max( ARS,RRS ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,Const ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( RRSe - CS ) + DS ) - Max( MUR,( RRSe * MUM ) ) ) ,( MLU + RCSe ) ) ) ,RMSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8275862068965517, "obj2": 0.06784178596448646}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.1300120043462737}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - MDR ) ) - ( ( ARS * CRS ) / ( Min( Max( CRS,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( RMSe + ( Max( CS,( Min( ( MUR / MUR ) ,RMSe ) + RRSe ) ) + MUC ) ) - ( MUC * ( Min( ( CS * MUM ) ,MUR ) * MUR ) ) ) )", "obj1": 0.8754789272030651, "obj2": 0.04789658697492075}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) + DDR ) / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) - ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( Min( Min( MLU ,( Max( DS,( RMSe - MLU ) ) * CS ) ) ,MLU ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.8812260536398467, "obj2": 0.04540224892122593}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( ARS - PN ) ) - ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,RRS ) ) ) / ( MRS + ( AMS * FirstVNF_Mem ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "Max( DS,Max( ( ( MLU + MUR ) + ( MUR + Max( DS,RRSe ) ) ),Max( ( ( MLU + ( MLU - ( ( RMSe / MUC ) * ( MUR + MLU ) ) ) ) + ( RMSe - CS ) ),MUM ) ) )", "obj1": 0.8486590038314177, "obj2": 0.05965784373145887}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( ( MUM * ( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / ( MUM * Min( RRSe ,( MLU * RRSe ) ) ) ) ) * RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 0.9252873563218391, "obj2": 0.028726442108904775}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( ( DDR / FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * ( ( FirstVNF_Mem * RRS ) * ACS ) ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * Max( ( MDR - MDR ),BR ) ) ) ) )", "choosing": "( Min( ( MLU / RRSe ) ,RCSe ) - ( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( Min( DS ,Max( MUM,RMSe ) ) + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.8505747126436781, "obj2": 0.056174282244870005}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - Min( DDR ,( ARS * Max( ( FirstVNF_RAM + ARS ),FirstVNF_CPU ) ) ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ARS - ( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( ( CS - ( Max( DS,MUR ) - ( RMSe * MUC ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( Min( MUR ,RMSe ) - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8639846743295019, "obj2": 0.053852748591532995}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) ) ) * ( ( ( MDR / ( Min( AMS ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( FirstVNF_Mem_Server / ( ACS - MDR ) ) ) )", "choosing": "( ( MUM * MUM ) / Min( ( ( MUC * MLU ) + DS ) ,MUR ) )", "obj1": 0.8831417624521073, "obj2": 0.04368958555007656}, {"determining": "( ( MRS * Max( RRS,( Const * BR ) ) ) - ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU * ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( ( ( Max( MLU,RCSe ) * ( RMSe * RMSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( ( ( RCSe / DS ) + Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Min( MUR ,CS ) ) / CS ) - ( MLU / Max( RMSe,MUM ) ) ) ) ) )", "obj1": 0.6973180076628352, "obj2": 0.1282697390501788}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + MRS ) ) ) / ACS ) - ( MDR - ( ( PN + FirstVNF_CPU ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server * Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( ( Max( MUC,RMSe ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( RMSe + ( ( ( RMSe - ( MUR / RMSe ) ) + ( ( MUC / MUM ) + Min( ( CS / CS ) ,MUM ) ) ) / CS ) ) ) )", "obj1": 0.8371647509578544, "obj2": 0.06224442568150566}, {"determining": "( ( ( PN / Min( Min( DDR ,( ( PN + FirstVNF_RAM ) * ( ( RRS + FirstVNF_CPU ) * Const ) ) ) ,( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) - DDR ) ) )", "choosing": "( Max( Min( MLU ,RRSe ),( RMSe * MLU ) ) / ( RRSe + ( ( ( RMSe / CS ) * ( ( Max( Max( CS,MUC ),DS ) + ( RCSe * ( RRSe + RCSe ) ) ) * RRSe ) ) - CS ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10540426450777751}, {"determining": "( ( ( PN * AMS ) * ( MRS / ( Min( MDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU / PN ) + Const ) ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( MUM,Min( MUC ,RRSe ) ) / Max( DS,MUC ) )", "obj1": 0.7279693486590039, "obj2": 0.11391019854446555}, {"determining": "( ( ( PN / ( Min( ( ( DDR / RRS ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),Min( Min( ( ( DS / RMSe ) - RMSe ) ,( MLU - DS ) ) ,MUR ) ) ) )", "obj1": 0.8735632183908046, "obj2": 0.04984383848018345}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * ( AMS * Const ) ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,Max( MLU,CS ) ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / ( RCSe / DS ) ) )", "obj1": 0.7471264367816092, "obj2": 0.10431811036909899}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * ( ( FirstVNF_Mem * FirstVNF_CPU ) * ACS ) ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe / Max( ( MUM / DS ),Max( RMSe,CS ) ) ) - ( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.842911877394636, "obj2": 0.06029748638401152}, {"determining": "( ( ( ( BR - BR ) * MRS ) - Min( PN ,AMS ) ) - ( ARS / ( ARS * CRS ) ) )", "choosing": "( ( ( ( ( ( RCSe / ( Max( MUR,MLU ) - CS ) ) / Max( DS,CS ) ) - ( ( ( RMSe + ( CS / MUM ) ) + RCSe ) / RMSe ) ) + Min( CS ,DS ) ) / MUR ) - Max( RMSe,RCSe ) )", "obj1": 0.9118773946360154, "obj2": 0.035947375929578806}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - ( RRS + FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( ARS * CRS ) / ( DDR / Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_RAM - PN ) + Min( DDR ,BR ) ) ) ) ,Max( FirstVNF_CPU,Min( FirstVNF_RAM ,( DDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RRSe ,( ( RRSe / Max( RRSe,RRSe ) ) * RCSe ) ) / CS ) * MUR ),( ( MUR * RCSe ) - RRSe ) ) / ( ( RRSe - RCSe ) - ( ( MUM + Min( RMSe ,( DS - Min( MUR ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10768261949220766}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,Max( DDR,ACS ) ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( RRSe,( RCSe - RRSe ) ) / Max( MLU,CS ) )", "obj1": 0.867816091954023, "obj2": 0.05043134920745744}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( DDR / RRS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * Max( ( MUR / RCSe ),( MUR - ( ( DS / RMSe ) - RMSe ) ) ) ) )", "obj1": 0.7030651340996169, "obj2": 0.12536449165132005}, {"determining": "( Min( MRS ,MRS ) - ( ( Min( ACS ,( FirstVNF_CPU / Max( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),DDR ),RRS ) ) ) / DDR ) + ( ARS * CRS ) ) )", "choosing": "( ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) / ( ( ( ( MUM / Max( RCSe,MUC ) ) + CS ) - Min( Min( ( Max( RMSe,Max( RRSe,DS ) ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) )", "obj1": 0.921455938697318, "obj2": 0.031942864825938916}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_CPU + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,Min( Const ,MRS ) ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM * MUC ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.9444444444444444, "obj2": 0.021924492456042093}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.12659877421094784}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * ( ARS + ( DDR - PN ) ) ) ) ) - ( PN - MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Max( ( ( ( RMSe + MUM ) + DS ) - Max( ( ( MUM * ( MLU / RCSe ) ) / Max( MUC,CS ) ),RMSe ) ),( MLU + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.710727969348659, "obj2": 0.12122651839213491}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( ( ( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( AMS + PN ) ) * PN ) - ( CRS + Max( Max( ( ACS - FirstVNF_CPU ),RRS ),Min( PN ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM * Min( ( Min( MUR ,CS ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,Max( RMSe,MUC ) ) ) - ( MUM + ( Min( ( RCSe / MUR ) ,RCSe ) + Min( Min( RMSe ,MUR ) ,DS ) ) ) )", "obj1": 0.9425287356321839, "obj2": 0.02310937653962019}, {"determining": "( ( ( PN / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / ACS ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - ( ( ( PN + Const ) * Max( FirstVNF_RAM_Server,PN ) ) * PN ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( CRS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RCSe / ( MUR - MUC ) ) / Max( Min( MUR ,RMSe ),( ( CS + ( MUC + MLU ) ) * MUR ) ) )", "obj1": 0.975095785440613, "obj2": 0.008581334482836621}, {"determining": "( ( ( ARS * CRS ) / ( Min( CRS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) - ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) ) ) * Max( Max( ( Max( PN,( FirstVNF_RAM - ( FirstVNF_RAM * MDR ) ) ) - ( FirstVNF_RAM * Min( ACS ,ACS ) ) ),MRS ),MRS ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) / ( ( MUM * Min( RRSe ,( MLU * Min( MUR ,MUM ) ) ) ) / Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) ) ),RRSe ) / Min( Min( MUR ,RMSe ) ,( Min( RCSe ,( ( RMSe - RCSe ) + MUR ) ) / RCSe ) ) )", "obj1": 0.7241379310344828, "obj2": 0.11566349307421754}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( Min( MDR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + MRS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( ( RCSe * DS ) - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.012558939334188233}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * CRS ) ) / Min( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU / ( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) ) ) ) )", "choosing": "Min( ( Max( ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( DS / ( MUC / ( MUC + RRSe ) ) ) ),MUR ) - RMSe ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( ( MLU / DS ),( CS * MLU ) ) ) )", "obj1": 0.8659003831417624, "obj2": 0.05348983161431539}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) ) )", "obj1": 0.7049808429118773, "obj2": 0.12226511751889758}, {"determining": "( ( Min( ( MRS - ( ( FirstVNF_Mem_Server / ACS ) * FirstVNF_CPU ) ) ,ACS ) * ( ACS / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ARS - CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,Min( ( CS + MLU ) ,MUR ) ) ) * ( MUM / MUM ) ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( RRSe / ( RCSe * ( MLU - DS ) ) ) + CS ) ) ),Min( ( RCSe - RRSe ) ,RCSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06192611889944147}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( CRS / ACS ) ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( MUR - DS ) ) + RMSe ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,CS ) ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031023298619688448}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * FirstVNF_CPU ) ) - ( ( ARS * ( Const / CRS ) ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( ( ( FirstVNF_RAM_Server + RRS ) * FirstVNF_Mem_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "( Max( Min( ( ( ( CS + MUR ) / MUR ) / ( CS * MUC ) ) ,Min( RCSe ,MLU ) ),Min( MUR ,RCSe ) ) * ( ( ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * CS ) ) ) + RCSe ) ) + Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) ) / ( ( MUR * MUC ) + Min( RCSe ,MUM ) ) ) )", "obj1": 0.7203065134099617, "obj2": 0.11662163985801538}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * PN ) - ( ( Min( Const ,FirstVNF_RAM ) / MRS ) + MRS ) )", "choosing": "( ( ( RCSe * MUC ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,( MUM / MUC ) ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03613553823966046}, {"determining": "( ( ( ARS / ( Min( ( AMS * FirstVNF_CPU ) ,Const ) / ( Const / FirstVNF_RAM ) ) ) * ( AMS * RRS ) ) - ( ( MRS + AMS ) + FirstVNF_Mem ) )", "choosing": "( ( MUC * CS ) * ( Min( Min( RRSe ,CS ) ,MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.7164750957854407, "obj2": 0.11813242538030118}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( FirstVNF_Mem_Server - Min( ( Min( MRS ,BR ) + FirstVNF_Mem_Server ) ,( ( CRS + BR ) + ACS ) ) ) ) + MRS ) )", "choosing": "( ( ( ( RCSe / ( MUR * ( RCSe + CS ) ) ) - ( CS + DS ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.9942528735632183, "obj2": 0.0017438978776377775}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.006492189062201773}, {"determining": "( ( PN * ( Max( DDR,RRS ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( DDR * FirstVNF_RAM ) )", "choosing": "( Max( ( RCSe - RRSe ),MUM ) / Min( ( ( Max( DS,( RMSe / ( MUM * Max( DS,MUR ) ) ) ) / ( ( Min( RMSe ,( MLU + MLU ) ) - RCSe ) / ( MUR + MUM ) ) ) / Min( RMSe ,Max( CS,MUC ) ) ) ,MUM ) )", "obj1": 0.9808429118773946, "obj2": 0.007422928539638776}, {"determining": "( ( ( PN / Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( Max( ACS,FirstVNF_CPU ) - MRS ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + ( RRSe + Min( ( Max( MUM,MUR ) - Min( MUR ,MUM ) ) ,RRSe ) ) ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.9770114942528736, "obj2": 0.007711276867644333}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),Max( MRS,( Max( MRS,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * ARS ) ) ) / DDR ) ) )", "choosing": "( Max( ( ( ( MUM / Max( CS,MUC ) ) / CS ) - ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUC + RRSe ) ) ) ) ),RRSe ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7452107279693486, "obj2": 0.10482524669140245}, {"determining": "( ( PN * ( ( Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) / DDR ) - Min( ( CRS + FirstVNF_CPU_Server ) ,AMS ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,( RMSe + MUM ) ) * ( RMSe - RMSe ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( FirstVNF_CPU_Server - ( MRS - ( ( MDR + FirstVNF_CPU ) * Const ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( ( ( ( RCSe - RMSe ) - ( CS + MUR ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7068965517241379, "obj2": 0.1219817746300119}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.003227937497805178}, {"determining": "( ( Max( ( CRS + ( Const / ( FirstVNF_Mem / Min( FirstVNF_CPU ,PN ) ) ) ),FirstVNF_Mem ) * ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( Min( ACS ,Max( ( RRS / Const ),CRS ) ) ,( FirstVNF_RAM / AMS ) ) ) ) - ( FirstVNF_CPU - AMS ) )", "choosing": "( Max( MLU,( ( MUC / DS ) + MUM ) ) * ( MUR + ( CS * ( MUM / Max( ( DS + RCSe ),RRSe ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.004763226325240704}, {"determining": "( ( PN * ( ( Min( FirstVNF_CPU_Server ,( Min( ACS ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( Min( MLU ,RRSe ),RRSe ) * ( RRSe - RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004334454779699649}, {"determining": "( Max( Max( ( CRS * ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( AMS * ( ( FirstVNF_Mem_Server - Max( AMS,( BR - ARS ) ) ) * FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM - MRS ) ) - ( ACS * PN ) )", "choosing": "( ( RCSe + Min( MUM ,( Max( MUR,( DS * ( ( RRSe / MUM ) / RMSe ) ) ) + Min( Max( MUM,MUC ) ,MUC ) ) ) ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.014300928987263558}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,( Min( RCSe ,Min( ( Min( DS ,RRSe ) - MLU ) ,RRSe ) ) / RCSe ) ) )", "obj1": 0.7126436781609196, "obj2": 0.11920997342834294}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( Min( ( MUR - ( ( Max( CS,DS ) / MUM ) / CS ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RMSe ) + ( ( ( ( RCSe / RRSe ) - ( MUM * CS ) ) - Min( RRSe ,( CS + MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7260536398467433, "obj2": 0.11435693293869617}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Min( Min( FirstVNF_Mem_Server ,Const ) ,DDR ) ) ,( Min( FirstVNF_Mem ,( ARS * CRS ) ) * ( Min( ( ARS / CRS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "Max( DS,( RCSe + ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - Min( RCSe ,DS ) ) ) - RMSe ),Min( RCSe ,( ( MUM * RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.9616858237547893, "obj2": 0.013512756088755188}, {"determining": "( ( ( BR / ( Const * DDR ) ) / ( Min( Const ,ACS ) * ( Min( ( DDR + AMS ) ,Min( FirstVNF_RAM ,DDR ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) - Const )", "choosing": "Max( DS,( RRSe + ( DS / Min( MUC ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.5957854406130269, "obj2": 0.27493160894498003}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( Min( MDR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.012558939334188233}, {"determining": "( ( ( ( FirstVNF_Mem_Server * CRS ) - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( ( ( ( ARS / CRS ) + ( FirstVNF_RAM + FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server + Min( RRS ,Min( AMS ,ACS ) ) ) ) * Min( CRS ,ARS ) ) ) + MRS ) )", "choosing": "Max( ( RMSe / RRSe ),( RCSe / ( Max( MUR,MUM ) - MLU ) ) )", "obj1": 0.9904214559386973, "obj2": 0.004000586987205298}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( Min( FirstVNF_RAM ,( Min( Min( AMS ,MRS ) ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / CRS ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "Max( DS,( RCSe + ( ( MLU - ( MUM * RCSe ) ) / DS ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0017438978776377775}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( PN * AMS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( ( ( ( ( MUM / Max( MLU,MUC ) ) / ( RRSe - RRSe ) ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) ,( Min( RCSe ,Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) ) / RCSe ) ) )", "obj1": 0.7126436781609196, "obj2": 0.11920997342834294}], "28": [{"determining": "( ( MRS * Max( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( Min( ACS ,( ( RRS / Const ) / CRS ) ) ,( FirstVNF_RAM / AMS ) ) ),( Const * BR ) ) ) - ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU * ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( ( ( Max( MLU,RCSe ) * ( RMSe * RMSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( ( ( RCSe / DS ) + Max( MUC,MUR ) ) + Max( CS,( MUM / Max( ( RMSe - MUM ),RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * ( CRS / ( MRS + FirstVNF_CPU_Server ) ) ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( Min( ( MUR - ( ( Max( CS,DS ) / MUM ) / CS ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - ( CS + MUR ) ) + ( ( ( ( RCSe / RRSe ) - ( MUM * CS ) ) - Min( RRSe ,( CS + MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_CPU / FirstVNF_CPU ) + FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Min( Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ,Min( MUR ,RMSe ) ) * Max( CS,Min( ( Min( RMSe ,( RMSe - MLU ) ) - ( CS / MUC ) ) ,( MUM / MUM ) ) ) )", "obj1": 0.5727969348659003, "obj2": 0.27175868086294713}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / ARS ) ,( FirstVNF_CPU / Max( FirstVNF_CPU,( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_CPU ) ) ) ) ) / DDR ) ) )", "choosing": "( Min( Max( MUC,MUM ) ,Min( MUR ,RMSe ) ) * Max( CS,Min( ( Min( RMSe ,( RMSe - MLU ) ) - MUM ) ,( ( ( ( MUR - RCSe ) / DS ) * CS ) / MUM ) ) ) )", "obj1": 0.5977011494252874, "obj2": 0.2380367854192079}, {"determining": "( ( Min( ( ( BR * CRS ) - FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,( MDR + FirstVNF_Mem_Server ) ) ) * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / Min( ( ( ARS * CRS ) / ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,( ( MUM + Max( RCSe,MUC ) ) + ( Max( Min( ( Max( Min( RMSe ,RMSe ),MUC ) + MUC ) ,RRSe ),( ( MUC + MLU ) / MUR ) ) + RCSe ) ) )", "obj1": 0.6360153256704981, "obj2": 0.2024517424541955}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,( ARS * ( CRS / ( MRS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( ARS * CRS ) / ( Min( ( Max( ARS,( MDR + Min( DDR ,FirstVNF_CPU ) ) ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ( RRS / Const ) ) ) / DDR ) ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),Max( RCSe,MUM ) ) )", "obj1": 0.685823754789272, "obj2": 0.1416118916902198}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - Min( ACS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( CS - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6283524904214559, "obj2": 0.21658412525141638}, {"determining": "( ( ARS * ( ( ( Const / Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ARS ),MDR ) ) - ARS ) / CRS ) ) - ( DDR / ( ( FirstVNF_Mem_Server - MDR ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * MLU ) + ( DS - DS ) )", "obj1": 0.6590038314176245, "obj2": 0.178491082402923}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( MUC * ( MUM - MUM ) ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.6781609195402298, "obj2": 0.1576326631308643}, {"determining": "( ( PN * ( Min( ACS ,( FirstVNF_CPU / ACS ) ) - ( Min( ( BR / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ( PN / MDR ) ) ) / DDR ) ) ) - ( CRS + MRS ) )", "choosing": "( ( RCSe * Min( MUC ,( RCSe / ( DS - RMSe ) ) ) ) / RMSe )", "obj1": 0.6475095785440613, "obj2": 0.18732877777010346}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( ( ( FirstVNF_CPU - AMS ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) ) ) - ( CRS + Max( Max( ( AMS + ARS ),RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,Min( Const ,MRS ) ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( MUM * Min( ( ( RCSe * MUC ) / ( Min( MLU ,Min( CS ,CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM * MUC ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.6628352490421456, "obj2": 0.16903113731350491}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( FirstVNF_CPU + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( Min( Min( MLU ,( Max( DS,( RMSe - DS ) ) / CS ) ) ,MLU ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.6417624521072797, "obj2": 0.19200788867608096}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( MRS * ( RRS / Max( MRS,AMS ) ) ) - ( MDR / Const ) ) ) )", "choosing": "( Max( ( RCSe * MLU ),RRSe ) / ( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( ( RCSe * Min( MLU ,CS ) ) / RRSe ) + CS ) ) ) / Min( ( RCSe - RRSe ) ,CS ) ) )", "obj1": 0.7835249042145593, "obj2": 0.08669958274180666}, {"determining": "( ( ( PN / ( Min( DDR ,( AMS + ACS ) ) - ( Const / Min( ( Const + FirstVNF_CPU_Server ) ,PN ) ) ) ) * ( PN * AMS ) ) - ( BR + ARS ) )", "choosing": "( Max( CS,( RMSe * RCSe ) ) / ( Max( MUR,( ( MUM + MLU ) - Max( CS,( ( DS - ( MUR - MUR ) ) * Min( CS ,Max( CS,MUR ) ) ) ) ) ) * ( RMSe + MLU ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07273979488214789}, {"determining": "( ( PN * ( ( Min( ( DDR + ( MDR + PN ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( FirstVNF_CPU + PN ) ) ) - ( Min( MDR ,ACS ) + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + ( ( MUR - RMSe ) - CS ) ) - Min( ( ( ( CS * MUR ) / MUM ) + MUC ) ,( ( CS - MUR ) - Min( MUM ,DS ) ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23312579772892986}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - ( CS + DS ) ) ,( ( RMSe + ( RRSe * MUR ) ) - MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.08905872672637545}, {"determining": "( ( Min( MRS ,( RRS + ( FirstVNF_RAM_Server + Min( ARS ,( RRS * FirstVNF_Mem_Server ) ) ) ) ) + BR ) - ( DDR - MRS ) )", "choosing": "( ( Max( ( MUR / ( MUR + RRSe ) ),( Min( ( RMSe + MUR ) ,( Min( ( RRSe * DS ) ,Max( MLU,RCSe ) ) + DS ) ) / CS ) ) - CS ) * Max( Min( ( MUM / DS ) ,MUM ),MLU ) )", "obj1": 0.896551724137931, "obj2": 0.03935142988702865}, {"determining": "( ( PN * ( ( Min( ( ( FirstVNF_CPU - ( PN * FirstVNF_Mem ) ) - BR ) ,( FirstVNF_CPU / ( ( BR - AMS ) * ( FirstVNF_CPU * MDR ) ) ) ) / DDR ) - Min( BR ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( RCSe - ( ( MLU + ( RMSe * Min( Min( RRSe ,MUC ) ,( MLU + MLU ) ) ) ) / ( RMSe + MLU ) ) ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RMSe ) * ( CS + ( CS / MUC ) ) ) ) )", "obj1": 0.7969348659003831, "obj2": 0.08316557009293775}, {"determining": "( ( ( PN / ( Max( DDR,( Min( FirstVNF_Mem ,MDR ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( ( RRSe - CS ) * ( MUM - MUM ) ) + DS ) - Min( MLU ,RRSe ) ) )", "obj1": 0.8065134099616859, "obj2": 0.07644134152844005}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( ( ( FirstVNF_CPU - AMS ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,Min( Const ,MRS ) ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "Max( DS,( RCSe + ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( MUR,RMSe ) * ( CS + CS ) ) ) ) ) )", "obj1": 0.6724137931034483, "obj2": 0.16318865707178473}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,FirstVNF_RAM_Server ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( ( MUM / ( RCSe - ( MLU + DS ) ) ),Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.6149425287356322, "obj2": 0.23087210070896647}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + FirstVNF_CPU ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RMSe ) * ( CS + CS ) ) ) ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04196039389157488}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( ( PN * ( ( CRS + DDR ) - Min( ( ( ARS * CRS ) / ( Min( BR ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( ( ( DS - ( Min( MUC ,CS ) * CS ) ) / ( RCSe - ( RRSe + DS ) ) ),Min( ( ( MUM / RCSe ) / ( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.6264367816091954, "obj2": 0.22636108382545614}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - MDR ) ) - ( ( ARS * CRS ) / ( Min( Max( CRS,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( RMSe + ( Max( CS,( Min( ( MUR / MUR ) ,RMSe ) + RRSe ) ) + MUC ) ) - ( MUC * ( Min( ( CS * MUM ) ,MUR ) * MUR ) ) ) )", "obj1": 0.8754789272030651, "obj2": 0.04789658697492075}, {"determining": "( ( ( FirstVNF_Mem / ( Min( DDR ,( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Min( ( RRS / FirstVNF_CPU ) ,ARS ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem / Const ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / FirstVNF_CPU ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RRSe / ( MLU * ( Min( MLU ,( RCSe * RMSe ) ) / MUR ) ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}, {"determining": "( Min( RRS ,Const ) - ( CRS + MRS ) )", "choosing": "( MUC / ( ( CS - ( MUC + MUC ) ) + DS ) )", "obj1": 0.6245210727969349, "obj2": 0.22702490361489633}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( MRS + Min( Max( Max( ( AMS * FirstVNF_Mem ),( MDR / Min( RRS ,MRS ) ) ),( FirstVNF_RAM - MRS ) ) ,MRS ) ) )", "choosing": "( ( ( RCSe * DS ) * ( MUC * ( ( MUM / Max( DS,Min( ( RRSe + MLU ) ,Max( RRSe,RCSe ) ) ) ) * CS ) ) ) - Min( RCSe ,MLU ) )", "obj1": 0.9042145593869731, "obj2": 0.03643009939436883}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU * ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),Min( Max( Min( ( ( MUC * ( RRSe / RMSe ) ) - RRSe ) ,( RRSe + Min( RCSe ,MUR ) ) ),RMSe ) ,( CS + CS ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( ( ( PN / ( Min( ( ( DDR / RRS ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( ( BR - CRS ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( MLU + RCSe ) ,( ( ( MLU - CS ) + DS ) - Max( MUR,( RMSe * RRSe ) ) ) ) ) ,MUC ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.867816091954023, "obj2": 0.0493220971445935}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( Min( MDR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * ( ( ARS * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( ( ( AMS / RRS ) - Min( ( Min( ACS ,DDR ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( ( Max( MLU,RCSe ) / ( CS * MUR ) ) - DS ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.9712643678160919, "obj2": 0.010173849454549388}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( ( CS - Max( MUR,RMSe ) ) / MUC ) / MLU ) ,RCSe ) - ( DS + ( Min( ( ( RMSe - ( MUR + CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) + RMSe ) ) )", "obj1": 0.8544061302681992, "obj2": 0.054432665305241774}, {"determining": "( ( ( ( ( ( Const / FirstVNF_RAM ) - Min( MDR ,( ( FirstVNF_CPU * FirstVNF_CPU ) + FirstVNF_Mem ) ) ) - ( Const / FirstVNF_RAM ) ) / PN ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - ( DS + ( ( Min( RCSe ,RRSe ) - MUM ) + MUR ) ) ) ,( ( RMSe + ( RRSe * ( ( ( ( CS + DS ) + ( MUM * DS ) ) * CS ) + RRSe ) ) ) - MUC ) )", "obj1": 0.7681992337164751, "obj2": 0.09362148847241761}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.7586206896551724, "obj2": 0.09892077558141045}, {"determining": "( ( ( ( Min( MRS ,ARS ) / ARS ) - ( MDR - ( AMS - Min( ( FirstVNF_Mem / Max( ACS,Const ) ) ,FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) / ( DDR / ( ( Max( FirstVNF_RAM_Server,BR ) - AMS ) - ( RRS * MRS ) ) ) )", "choosing": "( Min( ( RCSe / MLU ) ,( MUC / RCSe ) ) - ( ( RMSe - ( ( ( ( DS / MUR ) * Max( DS,DS ) ) + ( Max( RRSe,( RCSe / MUR ) ) + Min( MUM ,MUC ) ) ) * CS ) ) + DS ) )", "obj1": 0.9482758620689655, "obj2": 0.017022162412219176}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( Max( MUR,( MUM * MUC ) ) / ( MLU * MLU ) ) / RMSe )", "obj1": 0.9157088122605364, "obj2": 0.0327674683289582}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN + AMS ) ) - ( ( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / ( FirstVNF_CPU_Server / ARS ) ) )", "choosing": "Max( ( ( Min( ( ( ( MUR * MUR ) * RCSe ) - ( MUC - ( RRSe + RCSe ) ) ) ,( CS * MUR ) ) + ( RMSe / Max( Max( RMSe,CS ),( MUM / DS ) ) ) ) - MUR ),Min( ( CS / MUM ) ,RRSe ) )", "obj1": 0.7337164750957854, "obj2": 0.11154691076894967}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_RAM_Server / Const ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( ( Const / FirstVNF_RAM ),BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Min( FirstVNF_CPU ,BR ) ,Min( MRS ,MDR ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( Max( ( CS + MUC ),( RMSe - RCSe ) ) ,CS ) / MUR ) / ( RMSe + ( ( ( ( RRSe - MLU ) - ( MUR / RMSe ) ) + ( Min( MUC ,MUM ) + ( MUC / MUM ) ) ) / MLU ) ) )", "obj1": 0.8026819923371648, "obj2": 0.07893327483141081}, {"determining": "( ( Min( PN ,( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ( FirstVNF_CPU + ( AMS / ( CRS * DDR ) ) ) * CRS ) / ( Min( ( Max( ARS,RRS ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,Const ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( RRSe - CS ) + DS ) - Max( MUR,( RRSe * MUM ) ) ) ,( MLU + RCSe ) ) ) ,RMSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8275862068965517, "obj2": 0.06784178596448646}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.1300120043462737}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * AMS ) ) ,Min( ( MDR + ARS ) ,( Const / FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( MLU ,( CS * CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM / ( RCSe - ( RRSe + DS ) ) ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,( MUC + Min( MUM ,DS ) ) ) )", "obj1": 0.6762452107279694, "obj2": 0.16311337844407262}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) + DDR ) / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) - ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( Min( Min( MLU ,( Max( DS,( RMSe - MLU ) ) * CS ) ) ,MLU ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.8812260536398467, "obj2": 0.04540224892122593}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( ARS - PN ) ) - ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,RRS ) ) ) / ( MRS + ( AMS * FirstVNF_Mem ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "Max( DS,Max( ( ( MLU + MUR ) + ( MUR + Max( DS,RRSe ) ) ),Max( ( ( MLU + ( MLU - ( ( RMSe / MUC ) * ( MUR + MLU ) ) ) ) + ( RMSe - CS ) ),MUM ) ) )", "obj1": 0.8486590038314177, "obj2": 0.05965784373145887}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( ( MUM * ( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / ( MUM * Min( RRSe ,( MLU * RRSe ) ) ) ) ) * RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 0.9252873563218391, "obj2": 0.028726442108904775}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( ( DDR / FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * ( ( FirstVNF_Mem * RRS ) * ACS ) ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * Max( ( MDR - MDR ),BR ) ) ) ) )", "choosing": "( Min( ( MLU / RRSe ) ,RCSe ) - ( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( Min( DS ,Max( MUM,RMSe ) ) + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.8505747126436781, "obj2": 0.056174282244870005}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( MUM / Max( CS,MUC ) ) / CS ) - ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUC + RRSe ) ) ) ) ),RRSe ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7624521072796935, "obj2": 0.0977921421977629}, {"determining": "( ( ( ( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( AMS + PN ) ) * PN ) - ( CRS + Max( Max( ( ACS - FirstVNF_CPU ),RRS ),Min( PN ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM * Min( ( Min( MUR ,CS ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,Max( RMSe,MUC ) ) ) - ( MUM + ( Min( ( RCSe / MUR ) ,RCSe ) + Min( Min( RMSe ,MUR ) ,DS ) ) ) )", "obj1": 0.9425287356321839, "obj2": 0.02310937653962019}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - Min( DDR ,( ARS * Max( ( FirstVNF_RAM + ARS ),FirstVNF_CPU ) ) ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ARS - ( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( ( CS - ( Max( DS,MUR ) - ( RMSe * MUC ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( Min( MUR ,RMSe ) - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8639846743295019, "obj2": 0.053852748591532995}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) ) ) * ( ( ( MDR / ( Min( AMS ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( FirstVNF_Mem_Server / ( ACS - MDR ) ) ) )", "choosing": "( ( MUM * MUM ) / Min( ( ( MUC * MLU ) + DS ) ,MUR ) )", "obj1": 0.8831417624521073, "obj2": 0.04368958555007656}, {"determining": "( ( MRS * Max( RRS,( Const * BR ) ) ) - ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU * ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( ( ( Max( MLU,RCSe ) * ( RMSe * RMSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( ( ( RCSe / DS ) + Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Min( MUR ,CS ) ) / CS ) - ( MLU / Max( RMSe,MUM ) ) ) ) ) )", "obj1": 0.6973180076628352, "obj2": 0.1282697390501788}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + MRS ) ) ) / ACS ) - ( MDR - ( ( PN + FirstVNF_CPU ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server * Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( ( Max( MUC,RMSe ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( RMSe + ( ( ( RMSe - ( MUR / RMSe ) ) + ( ( MUC / MUM ) + Min( ( CS / CS ) ,MUM ) ) ) / CS ) ) ) )", "obj1": 0.8371647509578544, "obj2": 0.06224442568150566}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.7068965517241379, "obj2": 0.12044862329758743}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,Const ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),Min( Min( ( ( DS / RMSe ) - RMSe ) ,( MLU - DS ) ) ,MUR ) ) ) )", "obj1": 0.7988505747126436, "obj2": 0.08125616188709}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * FirstVNF_Mem_Server ) - Min( DDR ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) / AMS ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ACS * Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * ( CRS + Const ) ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( ( ( ( ( MUC * DS ) / ( MUC - MUM ) ) / ( DS + MUM ) ) / RMSe ) / ( Min( MLU ,RCSe ) - RCSe ) ) - RMSe ),( Max( MUR,RMSe ) * Min( CS ,RRSe ) ) ) )", "obj1": 0.764367816091954, "obj2": 0.0937642920615673}, {"determining": "( ( ( PN / Min( Min( DDR ,( ( PN + FirstVNF_RAM ) * ( ( RRS + FirstVNF_CPU ) * Const ) ) ) ,( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) - DDR ) ) )", "choosing": "( Max( Min( MLU ,RRSe ),( RMSe * MLU ) ) / ( RRSe + ( ( ( RMSe / CS ) * ( ( Max( Max( CS,MUC ),DS ) + ( RCSe * ( RRSe + RCSe ) ) ) * RRSe ) ) - CS ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10540426450777751}, {"determining": "( ( ( PN * AMS ) * ( MRS / ( Min( MDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU / PN ) + Const ) ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( MUM,Min( MUC ,RRSe ) ) / Max( DS,MUC ) )", "obj1": 0.7279693486590039, "obj2": 0.11391019854446555}, {"determining": "( ( ( ARS / ( Min( ( AMS * FirstVNF_CPU ) ,Const ) / ( Const / FirstVNF_RAM ) ) ) * ( AMS * RRS ) ) - ( ( MRS + AMS ) + FirstVNF_Mem ) )", "choosing": "( ( MUC * CS ) * ( Min( Min( RRSe ,CS ) ,MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.7164750957854407, "obj2": 0.11813242538030118}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * FirstVNF_CPU ) ) - ( ( ARS * ( Const / CRS ) ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( ( ( FirstVNF_RAM_Server + RRS ) * FirstVNF_Mem_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "( Max( Min( ( ( ( CS + MUR ) / MUR ) / ( CS * MUC ) ) ,Min( RCSe ,MLU ) ),Min( MUR ,RCSe ) ) * ( ( ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * CS ) ) ) + RCSe ) ) + Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) ) / ( ( MUR * MUC ) + Min( RCSe ,MUM ) ) ) )", "obj1": 0.7203065134099617, "obj2": 0.11662163985801538}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * ( AMS * Const ) ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,Max( MLU,CS ) ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / ( RCSe / DS ) ) )", "obj1": 0.7471264367816092, "obj2": 0.10431811036909899}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) ) )", "obj1": 0.7049808429118773, "obj2": 0.12226511751889758}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * ( ( FirstVNF_Mem * FirstVNF_CPU ) * ACS ) ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe / Max( ( MUM / DS ),Max( RMSe,CS ) ) ) - ( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.842911877394636, "obj2": 0.06029748638401152}, {"determining": "( ( ( ( BR - BR ) * MRS ) - Min( PN ,AMS ) ) - ( ARS / ( ARS * CRS ) ) )", "choosing": "( ( ( ( ( ( RCSe / ( Max( MUR,MLU ) - CS ) ) / Max( DS,CS ) ) - ( ( ( RMSe + ( CS / MUM ) ) + RCSe ) / RMSe ) ) + Min( CS ,DS ) ) / MUR ) - Max( RMSe,RCSe ) )", "obj1": 0.9118773946360154, "obj2": 0.035947375929578806}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - ( RRS + FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( ARS * CRS ) / ( DDR / Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_RAM - PN ) + Min( DDR ,BR ) ) ) ) ,Max( FirstVNF_CPU,Min( FirstVNF_RAM ,( DDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RRSe ,( ( RRSe / Max( RRSe,RRSe ) ) * RCSe ) ) / CS ) * MUR ),( ( MUR * RCSe ) - RRSe ) ) / ( ( RRSe - RCSe ) - ( ( MUM + Min( RMSe ,( DS - Min( MUR ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10768261949220766}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * CRS ) ) / Min( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU / ( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) ) ) ) )", "choosing": "Min( ( Max( ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( DS / ( MUC / ( MUC + RRSe ) ) ) ),MUR ) - RMSe ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( ( MLU / DS ),( CS * MLU ) ) ) )", "obj1": 0.8659003831417624, "obj2": 0.05348983161431539}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( DDR / RRS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * Max( ( MUR / RCSe ),( MUR - ( ( DS / RMSe ) - RMSe ) ) ) ) )", "obj1": 0.7030651340996169, "obj2": 0.12536449165132005}, {"determining": "( Min( MRS ,MRS ) - ( ( Min( ACS ,( FirstVNF_CPU / Max( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),DDR ),RRS ) ) ) / DDR ) + ( ARS * CRS ) ) )", "choosing": "( ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) / ( ( ( ( MUM / Max( RCSe,MUC ) ) + CS ) - Min( Min( ( Max( RMSe,Max( RRSe,DS ) ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) )", "obj1": 0.921455938697318, "obj2": 0.031942864825938916}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_CPU + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,Min( Const ,MRS ) ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM * MUC ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.9444444444444444, "obj2": 0.021924492456042093}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.12659877421094784}, {"determining": "( ( PN * ( ( Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) / DDR ) - Min( ( CRS + FirstVNF_CPU_Server ) ,AMS ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,( RMSe + MUM ) ) * ( RMSe - RMSe ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( ( PN / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / ACS ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - ( ( ( PN + Const ) * Max( FirstVNF_RAM_Server,PN ) ) * PN ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( CRS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RCSe / ( MUR - MUC ) ) / Max( Min( MUR ,RMSe ),( ( CS + ( MUC + MLU ) ) * MUR ) ) )", "obj1": 0.975095785440613, "obj2": 0.008581334482836621}, {"determining": "( ( ( ARS * CRS ) / ( Min( CRS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) - ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) ) ) * Max( Max( ( Max( PN,( FirstVNF_RAM - ( FirstVNF_RAM * MDR ) ) ) - ( FirstVNF_RAM * Min( ACS ,ACS ) ) ),MRS ),MRS ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) / ( ( MUM * Min( RRSe ,( MLU * Min( MUR ,MUM ) ) ) ) / Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) ) ),RRSe ) / Min( Min( MUR ,RMSe ) ,( Min( RCSe ,( ( RMSe - RCSe ) + MUR ) ) / RCSe ) ) )", "obj1": 0.7241379310344828, "obj2": 0.11566349307421754}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( Min( MDR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.012558939334188233}, {"determining": "( ( Min( ( MRS - ( ( FirstVNF_Mem_Server / ACS ) * FirstVNF_CPU ) ) ,ACS ) * ( ACS / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ARS - CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,Min( ( CS + MLU ) ,MUR ) ) ) * ( MUM / MUM ) ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( RRSe / ( RCSe * ( MLU - DS ) ) ) + CS ) ) ),Min( ( RCSe - RRSe ) ,RCSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06192611889944147}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( CRS / ACS ) ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( MUR - DS ) ) + RMSe ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,CS ) ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031023298619688448}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * PN ) - ( ( Min( Const ,FirstVNF_RAM ) / MRS ) + MRS ) )", "choosing": "( ( ( RCSe * MUC ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,( MUM / MUC ) ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03613553823966046}, {"determining": "( ( PN * ( Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( CRS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( CS + ( MUC + MLU ) ) * MUR ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0009087624896493239}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.006492189062201773}, {"determining": "( ( PN * ( Max( DDR,RRS ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( DDR * FirstVNF_RAM ) )", "choosing": "( Max( ( RCSe - RRSe ),MUM ) / Min( ( ( Max( DS,( RMSe / ( MUM * Max( DS,MUR ) ) ) ) / ( ( Min( RMSe ,( MLU + MLU ) ) - RCSe ) / ( MUR + MUM ) ) ) / Min( RMSe ,Max( CS,MUC ) ) ) ,MUM ) )", "obj1": 0.9808429118773946, "obj2": 0.007422928539638776}, {"determining": "( ( ( PN / Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( Max( ACS,FirstVNF_CPU ) - MRS ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + ( RRSe + Min( ( Max( MUM,MUR ) - Min( MUR ,MUM ) ) ,RRSe ) ) ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.9770114942528736, "obj2": 0.007711276867644333}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( Min( FirstVNF_RAM ,( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / CRS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( MLU ,Min( CS ,CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM * MUC ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.9904214559386973, "obj2": 0.0036717061891117612}, {"determining": "( ( PN * ( ( Min( FirstVNF_CPU_Server ,( Min( ACS ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( Min( MLU ,RRSe ),RRSe ) * ( RRSe - RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004334454779699649}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),Max( MRS,( Max( MRS,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * ARS ) ) ) / DDR ) ) )", "choosing": "( Max( ( ( ( MUM / Max( CS,MUC ) ) / CS ) - ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUC + RRSe ) ) ) ) ),RRSe ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7452107279693486, "obj2": 0.10482524669140245}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,( Min( RCSe ,Min( ( Min( DS ,RRSe ) - MLU ) ,RRSe ) ) / RCSe ) ) )", "obj1": 0.7126436781609196, "obj2": 0.11920997342834294}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * ( ARS + ( DDR - PN ) ) ) ) ) - ( PN - MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Max( ( ( ( RMSe + MUM ) + DS ) - Max( ( ( MUM * ( MLU / RCSe ) ) / Max( MUC,CS ) ),RMSe ) ),( MLU + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( Max( ( CRS + ( Const / ( FirstVNF_Mem / Min( FirstVNF_CPU ,PN ) ) ) ),FirstVNF_Mem ) * ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( Min( ACS ,Max( ( RRS / Const ),CRS ) ) ,( FirstVNF_RAM / AMS ) ) ) ) - ( FirstVNF_CPU - AMS ) )", "choosing": "( Max( MLU,( ( MUC / DS ) + MUM ) ) * ( MUR + ( CS * ( MUM / Max( ( DS + RCSe ),RRSe ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.004763226325240704}, {"determining": "( Max( Max( ( CRS * ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( AMS * ( ( FirstVNF_Mem_Server - Max( AMS,( BR - ARS ) ) ) * FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM - MRS ) ) - ( ACS * PN ) )", "choosing": "( ( RCSe + Min( MUM ,( Max( MUR,( DS * ( ( RRSe / MUM ) / RMSe ) ) ) + Min( Max( MUM,MUC ) ,MUC ) ) ) ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.014300928987263558}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( Min( ( MUR - ( ( Max( CS,DS ) / MUM ) / CS ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RMSe ) + ( ( ( ( RCSe / RRSe ) - ( MUM * CS ) ) - Min( RRSe ,( CS + MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7260536398467433, "obj2": 0.11435693293869617}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Min( Min( FirstVNF_Mem_Server ,Const ) ,DDR ) ) ,( Min( FirstVNF_Mem ,( ARS * CRS ) ) * ( Min( ( ARS / CRS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "Max( DS,( RCSe + ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - Min( RCSe ,DS ) ) ) - RMSe ),Min( RCSe ,( ( MUM * RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.9616858237547893, "obj2": 0.013512756088755188}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( Min( FirstVNF_RAM ,( Min( Min( AMS ,MRS ) ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / CRS ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "Max( DS,( RCSe + ( ( MLU - ( MUM * RCSe ) ) / DS ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0017438978776377775}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( PN * AMS ) - ( Max( ACS,ACS ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( ( ( ( ( MUM / Max( MLU,MUC ) ) / ( RRSe - RRSe ) ) - Min( Min( ( Max( RMSe,RCSe ) / MLU ) ,RCSe ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Min( DS ,MLU ) - RMSe ) ,RRSe ) ) * ( RRSe * DS ) ) ) ,( Min( RCSe ,Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) ) / RCSe ) ) )", "obj1": 0.7126436781609196, "obj2": 0.11920997342834294}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( Min( MDR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + MRS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( ( RCSe * DS ) - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.012558939334188233}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.003227937497805178}], "29": [{"determining": "( ( MRS * Max( RRS,( Const * BR ) ) ) - ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU * ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( ( MLU * RRSe ) + Max( RRSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * Max( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( Min( ACS ,( ( RRS / Const ) / CRS ) ) ,( FirstVNF_RAM / AMS ) ) ),( Const * BR ) ) ) - ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU * ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( ( ( Max( MLU,RCSe ) * ( RMSe * RMSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( ( ( RCSe / DS ) + Max( MUC,MUR ) ) + Max( CS,( MUM / Max( ( RMSe - MUM ),RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_CPU / FirstVNF_CPU ) + FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Min( Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ,Min( MUR ,RMSe ) ) * Max( CS,Min( ( Min( RMSe ,( RMSe - MLU ) ) - ( CS / MUC ) ) ,( MUM / MUM ) ) ) )", "obj1": 0.5727969348659003, "obj2": 0.27175868086294713}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / ARS ) ,( FirstVNF_CPU / Max( FirstVNF_CPU,( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_CPU ) ) ) ) ) / DDR ) ) )", "choosing": "( Min( Max( MUC,MUM ) ,Min( MUR ,RMSe ) ) * Max( CS,Min( ( Min( RMSe ,( RMSe - MLU ) ) - MUM ) ,( ( ( ( MUR - RCSe ) / DS ) * CS ) / MUM ) ) ) )", "obj1": 0.5977011494252874, "obj2": 0.2380367854192079}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,( ARS * ( CRS / ( MRS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( ARS * CRS ) / ( Min( ( Max( ARS,( MDR + Min( DDR ,FirstVNF_CPU ) ) ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ( RRS / Const ) ) ) / DDR ) ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),Max( RCSe,MUM ) ) )", "obj1": 0.685823754789272, "obj2": 0.1416118916902198}, {"determining": "( ( PN * ( ( Min( ( DDR + ( MDR + PN ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( ( AMS / RRS ) + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + ( ( MUR - RMSe ) - CS ) ) - Min( ( ( MLU + DS ) - ( Max( DS,( RMSe - DS ) ) / CS ) ) ,( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) )", "obj1": 0.6283524904214559, "obj2": 0.20308763094996912}, {"determining": "( ( ARS * ( ( ( Const / Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ARS ),MDR ) ) - ARS ) / CRS ) ) - ( DDR / ( ( FirstVNF_Mem_Server - MDR ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * MLU ) + ( DS - DS ) )", "obj1": 0.6590038314176245, "obj2": 0.178491082402923}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( MUC * ( MUM - MUM ) ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.6781609195402298, "obj2": 0.1576326631308643}, {"determining": "( ( PN * ( ( Min( ( DDR + ( PN + MDR ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) - ( CRS + Max( Max( Const,FirstVNF_Mem_Server ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,CS ) ),Min( ( MUR * RRSe ) ,( ( RRSe + CS ) + MLU ) ) ) )", "obj1": 0.6264367816091954, "obj2": 0.2262795411455576}, {"determining": "( ( PN * ( Min( ACS ,( FirstVNF_CPU / ACS ) ) - ( Min( ( BR / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ( PN / MDR ) ) ) / DDR ) ) ) - ( CRS + MRS ) )", "choosing": "( ( RCSe * Min( MUC ,( RCSe / ( DS - RMSe ) ) ) ) / RMSe )", "obj1": 0.6475095785440613, "obj2": 0.18732877777010346}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( ( ( FirstVNF_CPU - AMS ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) ) ) - ( CRS + Max( Max( ( AMS + ARS ),RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,Min( Const ,MRS ) ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( MUM * Min( ( ( RCSe * MUC ) / ( Min( MLU ,Min( CS ,CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM * MUC ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.6628352490421456, "obj2": 0.16903113731350491}, {"determining": "( ( PN * ( ( Min( ( DDR + ( MDR + PN ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( FirstVNF_CPU + PN ) ) ) - ( Min( MDR ,ACS ) + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + ( ( MUR - RMSe ) - CS ) ) - Min( ( ( ( CS * MUR ) / MUM ) + MUC ) ,( ( CS - MUR ) - Min( MUM ,DS ) ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23312579772892986}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - ( CS + DS ) ) ,( ( RMSe + ( RRSe * MUR ) ) - MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.08905872672637545}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( FirstVNF_CPU + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( Min( Min( MLU ,( Max( DS,( RMSe - DS ) ) / CS ) ) ,MLU ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.6417624521072797, "obj2": 0.19200788867608096}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.7586206896551724, "obj2": 0.0953521600028436}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( MRS * ( RRS / Max( MRS,AMS ) ) ) - ( MDR / Const ) ) ) )", "choosing": "( Max( ( RCSe * MLU ),RRSe ) / ( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( ( RCSe * Min( MLU ,CS ) ) / RRSe ) + CS ) ) ) / Min( ( RCSe - RRSe ) ,CS ) ) )", "obj1": 0.7835249042145593, "obj2": 0.08669958274180666}, {"determining": "( ( Min( MRS ,( RRS + ( FirstVNF_RAM_Server + Min( ARS ,( RRS * FirstVNF_Mem_Server ) ) ) ) ) + BR ) - ( DDR - MRS ) )", "choosing": "( ( Max( ( MUR / ( MUR + RRSe ) ),( Min( ( RMSe + MUR ) ,( Min( ( RRSe * DS ) ,Max( MLU,RCSe ) ) + DS ) ) / CS ) ) - CS ) * Max( Min( ( MUM / DS ) ,MUM ),MLU ) )", "obj1": 0.896551724137931, "obj2": 0.03935142988702865}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( ( ( FirstVNF_CPU - AMS ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,Min( Const ,MRS ) ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "Max( DS,( RCSe + ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( MUR,RMSe ) * ( CS + CS ) ) ) ) ) )", "obj1": 0.6724137931034483, "obj2": 0.16318865707178473}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( FirstVNF_CPU + ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( Max( ( Min( ( ( MLU + DS ) - ( Max( DS,( RMSe - DS ) ) / CS ) ) ,RRSe ) - RRSe ),( RRSe / CS ) ) / ( ( Min( Min( MLU ,( Max( DS,( RMSe - DS ) ) / CS ) ) ,MLU ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.6379310344827587, "obj2": 0.19733409619742764}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,FirstVNF_RAM_Server ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( ( MUM / ( RCSe - ( MLU + DS ) ) ),Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.6149425287356322, "obj2": 0.23087210070896647}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + FirstVNF_CPU ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RMSe ) * ( CS + CS ) ) ) ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04196039389157488}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - MDR ) ) - ( ( ARS * CRS ) / ( Min( Max( CRS,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( RMSe + ( Max( CS,( Min( ( MUR / MUR ) ,RMSe ) + RRSe ) ) + MUC ) ) - ( MUC * ( Min( ( CS * MUM ) ,MUR ) * MUR ) ) ) )", "obj1": 0.8754789272030651, "obj2": 0.04789658697492075}, {"determining": "( ( ( FirstVNF_Mem / ( Min( DDR ,( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Min( ( RRS / FirstVNF_CPU ) ,ARS ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem / Const ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / FirstVNF_CPU ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RRSe / ( MLU * ( Min( MLU ,( RCSe * RMSe ) ) / MUR ) ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}, {"determining": "( ( ( PN / ( Min( DDR ,( AMS + ACS ) ) - ( Const / Min( ( Const + FirstVNF_CPU_Server ) ,PN ) ) ) ) * ( PN * AMS ) ) - ( BR + ARS ) )", "choosing": "( Max( CS,( RMSe * RCSe ) ) / ( Max( MUR,( ( MUM + MLU ) - Max( CS,( ( DS - ( MUR - MUR ) ) * Min( CS ,Max( CS,MUR ) ) ) ) ) ) * ( RMSe + MLU ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07273979488214789}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / ( MUM * Min( RRSe ,( MLU * RRSe ) ) ) ) ),RRSe ) / Min( Min( MUR ,RMSe ) ,( Min( RCSe ,( ( RMSe - RCSe ) + MUR ) ) / RCSe ) ) )", "obj1": 0.7931034482758621, "obj2": 0.08574670585139489}, {"determining": "( Min( RRS ,Const ) - ( CRS + MRS ) )", "choosing": "( MUC / ( ( CS - ( MUC + MUC ) ) + DS ) )", "obj1": 0.6245210727969349, "obj2": 0.22702490361489633}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( MRS + Min( Max( Max( ( AMS * FirstVNF_Mem ),( MDR / Min( RRS ,MRS ) ) ),( FirstVNF_RAM - MRS ) ) ,MRS ) ) )", "choosing": "( ( ( RCSe * DS ) * ( MUC * ( ( MUM / Max( DS,Min( ( RRSe + MLU ) ,Max( RRSe,RCSe ) ) ) ) * CS ) ) ) - Min( RCSe ,MLU ) )", "obj1": 0.9042145593869731, "obj2": 0.03643009939436883}, {"determining": "( ( Min( ( ( BR * CRS ) - FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,( MDR + FirstVNF_Mem_Server ) ) ) * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / Min( ( ( ARS * CRS ) / ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,( ( MUM + Max( RCSe,MUC ) ) + ( Max( Min( ( Max( Min( RMSe ,RMSe ),MUC ) + MUC ) ,RRSe ),( ( MUC + MLU ) / MUR ) ) + RCSe ) ) )", "obj1": 0.6360153256704981, "obj2": 0.2024517424541955}, {"determining": "( ( ( PN / ( Max( DDR,( Min( FirstVNF_Mem ,MDR ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( ( RRSe - CS ) * ( MUM - MUM ) ) + DS ) - Min( MLU ,RRSe ) ) )", "obj1": 0.8065134099616859, "obj2": 0.07644134152844005}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU * ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),Min( Max( Min( ( ( MUC * ( RRSe / RMSe ) ) - RRSe ) ,( RRSe + Min( RCSe ,MUR ) ) ),RMSe ) ,( CS + CS ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( ( ( PN / ( Min( ( ( DDR / RRS ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( ( BR - CRS ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( MLU + RCSe ) ,( ( ( MLU - CS ) + DS ) - Max( MUR,( RMSe * RRSe ) ) ) ) ) ,MUC ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.867816091954023, "obj2": 0.0493220971445935}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( Min( MDR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * ( ( ARS * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( ( ( AMS / RRS ) - Min( ( Min( ACS ,DDR ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( ( Max( MLU,RCSe ) / ( CS * MUR ) ) - DS ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.9712643678160919, "obj2": 0.010173849454549388}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( ( CS - Max( MUR,RMSe ) ) / MUC ) / MLU ) ,RCSe ) - ( DS + ( Min( ( ( RMSe - ( MUR + CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) + RMSe ) ) )", "obj1": 0.8544061302681992, "obj2": 0.054432665305241774}, {"determining": "( ( ( ( ( ( Const / FirstVNF_RAM ) - Min( MDR ,( ( FirstVNF_CPU * FirstVNF_CPU ) + FirstVNF_Mem ) ) ) - ( Const / FirstVNF_RAM ) ) / PN ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - ( DS + ( ( Min( RCSe ,RRSe ) - MUM ) + MUR ) ) ) ,( ( RMSe + ( RRSe * ( ( ( ( CS + DS ) + ( MUM * DS ) ) * CS ) + RRSe ) ) ) - MUC ) )", "obj1": 0.7681992337164751, "obj2": 0.09362148847241761}, {"determining": "( ( ( ( Min( MRS ,ARS ) / ARS ) - ( MDR - ( AMS - Min( ( FirstVNF_Mem / Max( ACS,Const ) ) ,FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) / ( DDR / ( ( Max( FirstVNF_RAM_Server,BR ) - AMS ) - ( RRS * MRS ) ) ) )", "choosing": "( Min( ( RCSe / MLU ) ,( MUC / RCSe ) ) - ( ( RMSe - ( ( ( ( DS / MUR ) * Max( DS,DS ) ) + ( Max( RRSe,( RCSe / MUR ) ) + Min( MUM ,MUC ) ) ) * CS ) ) + DS ) )", "obj1": 0.9482758620689655, "obj2": 0.017022162412219176}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( Max( MUR,( MUM * MUC ) ) / ( MLU * MLU ) ) / RMSe )", "obj1": 0.9157088122605364, "obj2": 0.0327674683289582}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN + AMS ) ) - ( ( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / ( FirstVNF_CPU_Server / ARS ) ) )", "choosing": "Max( ( ( Min( ( ( ( MUR * MUR ) * RCSe ) - ( MUC - ( RRSe + RCSe ) ) ) ,( CS * MUR ) ) + ( RMSe / Max( Max( RMSe,CS ),( MUM / DS ) ) ) ) - MUR ),Min( ( CS / MUM ) ,RRSe ) )", "obj1": 0.7337164750957854, "obj2": 0.11154691076894967}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( RMSe + ( ( ( RMSe - RRSe ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) / CS ) ) )", "obj1": 0.814176245210728, "obj2": 0.07458987383635478}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_RAM_Server / Const ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( ( Const / FirstVNF_RAM ),BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Min( FirstVNF_CPU ,BR ) ,Min( MRS ,MDR ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( Max( ( CS + MUC ),( RMSe - RCSe ) ) ,CS ) / MUR ) / ( RMSe + ( ( ( ( RRSe - MLU ) - ( MUR / RMSe ) ) + ( Min( MUC ,MUM ) + ( MUC / MUM ) ) ) / MLU ) ) )", "obj1": 0.8026819923371648, "obj2": 0.07893327483141081}, {"determining": "( ( Min( PN ,( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ( FirstVNF_CPU + ( AMS / ( CRS * DDR ) ) ) * CRS ) / ( Min( ( Max( ARS,RRS ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,Const ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( RRSe - CS ) + DS ) - Max( MUR,( RRSe * MUM ) ) ) ,( MLU + RCSe ) ) ) ,RMSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8275862068965517, "obj2": 0.06784178596448646}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.1300120043462737}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * AMS ) ) ,Min( ( MDR + ARS ) ,( Const / FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( MLU ,( CS * CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM / ( RCSe - ( RRSe + DS ) ) ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,( MUC + Min( MUM ,DS ) ) ) )", "obj1": 0.6762452107279694, "obj2": 0.16311337844407262}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) + DDR ) / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) - ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( Min( Min( MLU ,( Max( DS,( RMSe - MLU ) ) * CS ) ) ,MLU ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.8812260536398467, "obj2": 0.04540224892122593}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( ARS - PN ) ) - ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,RRS ) ) ) / ( MRS + ( AMS * FirstVNF_Mem ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "Max( DS,Max( ( ( MLU + MUR ) + ( MUR + Max( DS,RRSe ) ) ),Max( ( ( MLU + ( MLU - ( ( RMSe / MUC ) * ( MUR + MLU ) ) ) ) + ( RMSe - CS ) ),MUM ) ) )", "obj1": 0.8486590038314177, "obj2": 0.05965784373145887}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( ( MUM * ( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / ( MUM * Min( RRSe ,( MLU * RRSe ) ) ) ) ) * RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 0.9252873563218391, "obj2": 0.028726442108904775}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( ( DDR / FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * ( ( FirstVNF_Mem * RRS ) * ACS ) ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * Max( ( MDR - MDR ),BR ) ) ) ) )", "choosing": "( Min( ( MLU / RRSe ) ,RCSe ) - ( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( Min( DS ,Max( MUM,RMSe ) ) + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.8505747126436781, "obj2": 0.056174282244870005}, {"determining": "( ( ( ( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( AMS + PN ) ) * PN ) - ( CRS + Max( Max( ( ACS - FirstVNF_CPU ),RRS ),Min( PN ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM * Min( ( Min( MUR ,CS ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,Max( RMSe,MUC ) ) ) - ( MUM + ( Min( ( RCSe / MUR ) ,RCSe ) + Min( Min( RMSe ,MUR ) ,DS ) ) ) )", "obj1": 0.9425287356321839, "obj2": 0.02310937653962019}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - Min( DDR ,( ARS * Max( ( FirstVNF_RAM + ARS ),FirstVNF_CPU ) ) ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ARS - ( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( ( CS - ( Max( DS,MUR ) - ( RMSe * MUC ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( Min( MUR ,RMSe ) - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8639846743295019, "obj2": 0.053852748591532995}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) ) ) * ( ( ( MDR / ( Min( AMS ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( FirstVNF_Mem_Server / ( ACS - MDR ) ) ) )", "choosing": "( ( MUM * MUM ) / Min( ( ( MUC * MLU ) + DS ) ,MUR ) )", "obj1": 0.8831417624521073, "obj2": 0.04368958555007656}, {"determining": "( ( MRS * Max( RRS,( Const * BR ) ) ) - ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU * ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( ( ( Max( MLU,RCSe ) * ( RMSe * RMSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( ( ( RCSe / DS ) + Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Min( MUR ,CS ) ) / CS ) - ( MLU / Max( RMSe,MUM ) ) ) ) ) )", "obj1": 0.6973180076628352, "obj2": 0.1282697390501788}, {"determining": "( ( PN * ( ( Min( ( ( FirstVNF_CPU - ( PN * FirstVNF_Mem ) ) - BR ) ,( FirstVNF_CPU / ( ( BR - AMS ) * ( FirstVNF_CPU * MDR ) ) ) ) / DDR ) - Min( BR ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( RCSe - ( ( MLU + ( RMSe * Min( Min( RRSe ,MUC ) ,( MLU + MLU ) ) ) ) / ( RMSe + MLU ) ) ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RMSe ) * ( CS + ( CS / MUC ) ) ) ) )", "obj1": 0.7969348659003831, "obj2": 0.08316557009293775}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + MRS ) ) ) / ACS ) - ( MDR - ( ( PN + FirstVNF_CPU ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server * Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( ( Max( MUC,RMSe ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( RMSe + ( ( ( RMSe - ( MUR / RMSe ) ) + ( ( MUC / MUM ) + Min( ( CS / CS ) ,MUM ) ) ) / CS ) ) ) )", "obj1": 0.8371647509578544, "obj2": 0.06224442568150566}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.7068965517241379, "obj2": 0.12044862329758743}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * FirstVNF_Mem_Server ) - Min( DDR ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) / AMS ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ACS * Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * ( CRS + Const ) ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( ( ( ( ( MUC * DS ) / ( MUC - MUM ) ) / ( DS + MUM ) ) / RMSe ) / ( Min( MLU ,RCSe ) - RCSe ) ) - RMSe ),( Max( MUR,RMSe ) * Min( CS ,RRSe ) ) ) )", "obj1": 0.764367816091954, "obj2": 0.0937642920615673}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.12659877421094784}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,Const ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),Min( Min( ( ( DS / RMSe ) - RMSe ) ,( MLU - DS ) ) ,MUR ) ) ) )", "obj1": 0.7988505747126436, "obj2": 0.08125616188709}, {"determining": "( ( ( PN / Min( Min( DDR ,( ( PN + FirstVNF_RAM ) * ( ( RRS + FirstVNF_CPU ) * Const ) ) ) ,( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) - DDR ) ) )", "choosing": "( Max( Min( MLU ,RRSe ),( RMSe * MLU ) ) / ( RRSe + ( ( ( RMSe / CS ) * ( ( Max( Max( CS,MUC ),DS ) + ( RCSe * ( RRSe + RCSe ) ) ) * RRSe ) ) - CS ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10540426450777751}, {"determining": "( ( ( PN * AMS ) * ( MRS / ( Min( MDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU / PN ) + Const ) ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( MUM,Min( MUC ,RRSe ) ) / Max( DS,MUC ) )", "obj1": 0.7279693486590039, "obj2": 0.11391019854446555}, {"determining": "( ( ( ARS / ( Min( ( AMS * FirstVNF_CPU ) ,Const ) / ( Const / FirstVNF_RAM ) ) ) * ( AMS * RRS ) ) - ( ( MRS + AMS ) + FirstVNF_Mem ) )", "choosing": "( ( MUC * CS ) * ( Min( Min( RRSe ,CS ) ,MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.7164750957854407, "obj2": 0.11813242538030118}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * ( AMS * Const ) ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,Max( MLU,CS ) ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / ( RCSe / DS ) ) )", "obj1": 0.7471264367816092, "obj2": 0.10431811036909899}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * ( ( FirstVNF_Mem * FirstVNF_CPU ) * ACS ) ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe / Max( ( MUM / DS ),Max( RMSe,CS ) ) ) - ( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.842911877394636, "obj2": 0.06029748638401152}, {"determining": "( ( ( ( BR - BR ) * MRS ) - Min( PN ,AMS ) ) - ( ARS / ( ARS * CRS ) ) )", "choosing": "( ( ( ( ( ( RCSe / ( Max( MUR,MLU ) - CS ) ) / Max( DS,CS ) ) - ( ( ( RMSe + ( CS / MUM ) ) + RCSe ) / RMSe ) ) + Min( CS ,DS ) ) / MUR ) - Max( RMSe,RCSe ) )", "obj1": 0.9118773946360154, "obj2": 0.035947375929578806}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - ( RRS + FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( ARS * CRS ) / ( DDR / Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_RAM - PN ) + Min( DDR ,BR ) ) ) ) ,Max( FirstVNF_CPU,Min( FirstVNF_RAM ,( DDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RRSe ,( ( RRSe / Max( RRSe,RRSe ) ) * RCSe ) ) / CS ) * MUR ),( ( MUR * RCSe ) - RRSe ) ) / ( ( RRSe - RCSe ) - ( ( MUM + Min( RMSe ,( DS - Min( MUR ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10768261949220766}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * CRS ) ) / Min( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU / ( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) ) ) ) )", "choosing": "Min( ( Max( ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( DS / ( MUC / ( MUC + RRSe ) ) ) ),MUR ) - RMSe ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( ( MLU / DS ),( CS * MLU ) ) ) )", "obj1": 0.8659003831417624, "obj2": 0.05348983161431539}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / Min( ( BR / BR ) ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( Min( Min( MLU ,( Max( DS,( RMSe - DS ) ) / CS ) ) ,MLU ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.7030651340996169, "obj2": 0.123990641835066}, {"determining": "( Min( MRS ,MRS ) - ( ( Min( ACS ,( FirstVNF_CPU / Max( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),DDR ),RRS ) ) ) / DDR ) + ( ARS * CRS ) ) )", "choosing": "( ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) / ( ( ( ( MUM / Max( RCSe,MUC ) ) + CS ) - Min( Min( ( Max( RMSe,Max( RRSe,DS ) ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) )", "obj1": 0.921455938697318, "obj2": 0.031942864825938916}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_CPU + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,Min( Const ,MRS ) ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM * MUC ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.9444444444444444, "obj2": 0.021924492456042093}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * ( ARS + ( DDR - PN ) ) ) ) ) - ( PN - MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Max( ( ( ( RMSe + MUM ) + DS ) - Max( ( ( MUM * ( MLU / RCSe ) ) / Max( MUC,CS ) ),RMSe ) ),( MLU + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( Min( FirstVNF_RAM ,( Min( Min( AMS ,MRS ) ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / CRS ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "Max( DS,( RCSe + ( ( MLU - ( MUM * RCSe ) ) / DS ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0017438978776377775}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( ( PN / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / ACS ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - ( ( ( PN + Const ) * Max( FirstVNF_RAM_Server,PN ) ) * PN ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( CRS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RCSe / ( MUR - MUC ) ) / Max( Min( MUR ,RMSe ),( ( CS + ( MUC + MLU ) ) * MUR ) ) )", "obj1": 0.975095785440613, "obj2": 0.008581334482836621}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * FirstVNF_CPU ) ) - ( ( ARS * ( Const / CRS ) ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( ( ( FirstVNF_RAM_Server + RRS ) * FirstVNF_Mem_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "( Max( Min( ( ( ( CS + MUR ) / MUR ) / ( CS * MUC ) ) ,Min( RCSe ,MLU ) ),Min( MUR ,RCSe ) ) * ( ( ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * CS ) ) ) + RCSe ) ) + Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) ) / ( ( MUR * MUC ) + Min( RCSe ,MUM ) ) ) )", "obj1": 0.7203065134099617, "obj2": 0.11662163985801538}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) ) )", "obj1": 0.7049808429118773, "obj2": 0.12226511751889758}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( Min( MDR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.012558939334188233}, {"determining": "( ( Min( ( MRS - ( ( FirstVNF_Mem_Server / ACS ) * FirstVNF_CPU ) ) ,ACS ) * ( ACS / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ARS - CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,Min( ( CS + MLU ) ,MUR ) ) ) * ( MUM / MUM ) ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( RRSe / ( RCSe * ( MLU - DS ) ) ) + CS ) ) ),Min( ( RCSe - RRSe ) ,RCSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06192611889944147}, {"determining": "( Min( MRS ,MRS ) - ( ( ARS * CRS ) / ( Min( ACS ,( CRS / ACS ) ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( MUR - DS ) ) + RMSe ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) / ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,CS ) ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031023298619688448}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * PN ) - ( ( Min( Const ,FirstVNF_RAM ) / MRS ) + MRS ) )", "choosing": "( ( ( RCSe * MUC ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,( MUM / MUC ) ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03613553823966046}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( Min( MDR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) / Max( Min( Max( MRS,( ( MRS + MRS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( ( RCSe * DS ) - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + RRSe ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0005950023982061264}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.006492189062201773}, {"determining": "( ( PN * ( Max( DDR,RRS ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( DDR * FirstVNF_RAM ) )", "choosing": "( Max( ( RCSe - RRSe ),MUM ) / Min( ( ( Max( DS,( RMSe / ( MUM * Max( DS,MUR ) ) ) ) / ( ( Min( RMSe ,( MLU + MLU ) ) - RCSe ) / ( MUR + MUM ) ) ) / Min( RMSe ,Max( CS,MUC ) ) ) ,MUM ) )", "obj1": 0.9808429118773946, "obj2": 0.007422928539638776}, {"determining": "( ( ( PN / Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( Max( ACS,FirstVNF_CPU ) - MRS ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / DDR ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + ( RRSe + Min( ( Max( MUM,MUR ) - Min( MUR ,MUM ) ) ,RRSe ) ) ) ) / CS ) * Min( RMSe ,MLU ) )", "obj1": 0.9770114942528736, "obj2": 0.007711276867644333}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( Min( FirstVNF_RAM ,( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / CRS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( MLU ,Min( CS ,CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM * MUC ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.9904214559386973, "obj2": 0.0036717061891117612}, {"determining": "( ( PN * ( ( Min( FirstVNF_CPU_Server ,( Min( ACS ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( Min( MLU ,RRSe ),RRSe ) * ( RRSe - RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004334454779699649}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),Max( MRS,( Max( MRS,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * ARS ) ) ) / DDR ) ) )", "choosing": "( Max( ( ( ( MUM / Max( CS,MUC ) ) / CS ) - ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUC + RRSe ) ) ) ) ),RRSe ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7452107279693486, "obj2": 0.10482524669140245}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,( Min( RCSe ,Min( ( Min( DS ,RRSe ) - MLU ) ,RRSe ) ) / RCSe ) ) )", "obj1": 0.7126436781609196, "obj2": 0.11920997342834294}, {"determining": "( ( PN * ( ( Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) / DDR ) - Min( ( CRS + FirstVNF_CPU_Server ) ,AMS ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,( RMSe + MUM ) ) * ( RMSe - RMSe ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( Max( ( CRS + ( Const / ( FirstVNF_Mem / Min( FirstVNF_CPU ,PN ) ) ) ),FirstVNF_Mem ) * ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( Min( ACS ,Max( ( RRS / Const ),CRS ) ) ,( FirstVNF_RAM / AMS ) ) ) ) - ( FirstVNF_CPU - AMS ) )", "choosing": "( Max( MLU,( ( MUC / DS ) + MUM ) ) * ( MUR + ( CS * ( MUM / Max( ( DS + RCSe ),RRSe ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.004763226325240704}, {"determining": "( Max( Max( ( CRS * ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( AMS * ( ( FirstVNF_Mem_Server - Max( AMS,( BR - ARS ) ) ) * FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM - MRS ) ) - ( ACS * PN ) )", "choosing": "( ( RCSe + Min( MUM ,( Max( MUR,( DS * ( ( RRSe / MUM ) / RMSe ) ) ) + Min( Max( MUM,MUC ) ,MUC ) ) ) ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.014300928987263558}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.003227937497805178}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( Min( ( MUR - ( ( Max( CS,DS ) / MUM ) / CS ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RMSe ) + ( ( ( ( RCSe / RRSe ) - ( MUM * CS ) ) - Min( RRSe ,( CS + MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7260536398467433, "obj2": 0.11435693293869617}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Min( Min( FirstVNF_Mem_Server ,Const ) ,DDR ) ) ,( Min( FirstVNF_Mem ,( ARS * CRS ) ) * ( Min( ( ARS / CRS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "Max( DS,( RCSe + ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - Min( RCSe ,DS ) ) ) - RMSe ),Min( RCSe ,( ( MUM * RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.9616858237547893, "obj2": 0.013512756088755188}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( ( ARS * CRS ) / ( Min( CRS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) - ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) ) ) * Max( Max( ( Max( PN,( FirstVNF_RAM - ( FirstVNF_RAM * MDR ) ) ) - ( FirstVNF_RAM * Min( ACS ,ACS ) ) ),MRS ),MRS ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) / ( ( MUM * Min( RRSe ,( MLU * Min( MUR ,MUM ) ) ) ) / Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) ) ),RRSe ) / Min( Min( MUR ,RMSe ) ,( Min( RCSe ,( ( RMSe - RCSe ) + MUR ) ) / RCSe ) ) )", "obj1": 0.7241379310344828, "obj2": 0.11566349307421754}], "30": [{"determining": "( ( MRS * Max( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM / AMS ) ) ),( Const * BR ) ) ) - ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU * ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( ( ( Max( MLU,RCSe ) * ( RMSe * RMSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( ( ( RCSe * DS ) - RRSe ) + Max( CS,( MUM / Max( ( RMSe - MUM ),RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * Max( RRS,( Const * BR ) ) ) - ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU * ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( ( MLU * RRSe ) + Max( RRSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_CPU / FirstVNF_CPU ) + FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Min( Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ,Min( MUR ,RMSe ) ) * Max( CS,Min( ( Min( RMSe ,( RMSe - MLU ) ) - ( CS / MUC ) ) ,( MUM / MUM ) ) ) )", "obj1": 0.5727969348659003, "obj2": 0.27175868086294713}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / ARS ) ,( FirstVNF_CPU / Max( FirstVNF_CPU,( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_CPU ) ) ) ) ) / DDR ) ) )", "choosing": "( Min( Max( MUC,MUM ) ,Min( MUR ,RMSe ) ) * Max( CS,Min( ( Min( RMSe ,( RMSe - MLU ) ) - MUM ) ,( ( ( ( MUR - RCSe ) / DS ) * CS ) / MUM ) ) ) )", "obj1": 0.5977011494252874, "obj2": 0.2380367854192079}, {"determining": "( ( PN * ( ( Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,FirstVNF_RAM_Server ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( ( MUM / ( RMSe / Max( Max( RMSe,CS ),( MUM / DS ) ) ) ),Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23254214224335312}, {"determining": "( ( PN * ( ( Min( ( DDR + ( MDR + PN ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( ( AMS / RRS ) + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( Min( Const ,FirstVNF_RAM ),FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) - Min( ( ( MLU + DS ) - ( Max( DS,( RMSe - DS ) ) / CS ) ) ,( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.20595810862602354}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,( ARS * ( CRS / ( MRS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( ARS * CRS ) / ( Min( ( Max( ARS,( MDR + Min( DDR ,FirstVNF_CPU ) ) ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ( RRS / Const ) ) ) / DDR ) ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),Max( RCSe,MUM ) ) )", "obj1": 0.685823754789272, "obj2": 0.1416118916902198}, {"determining": "( ( ARS * ( ( ( Const / Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ARS ),MDR ) ) - ARS ) / CRS ) ) - ( DDR / ( ( FirstVNF_Mem_Server - MDR ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * MLU ) + ( DS - DS ) )", "obj1": 0.6590038314176245, "obj2": 0.178491082402923}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( MUC * ( MUM - MUM ) ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.6781609195402298, "obj2": 0.1576326631308643}, {"determining": "( ( PN * ( Min( ACS ,( FirstVNF_CPU / ACS ) ) - ( Min( ( BR / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ( PN / MDR ) ) ) / DDR ) ) ) - ( CRS + MRS ) )", "choosing": "( ( RCSe * Min( MUC ,( RCSe / ( DS - RMSe ) ) ) ) / RMSe )", "obj1": 0.6475095785440613, "obj2": 0.18732877777010346}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( ( ( FirstVNF_CPU - AMS ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) ) ) - ( CRS + Max( Max( ( AMS + ARS ),RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,Min( Const ,MRS ) ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( MUM * Min( ( ( RCSe * MUC ) / ( Min( MLU ,Min( CS ,CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM * MUC ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.6628352490421456, "obj2": 0.16903113731350491}, {"determining": "( ( PN * ( ( Min( ( DDR + ( MDR + PN ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( ( AMS / RRS ) + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + ( ( MUR - RMSe ) - CS ) ) - Min( ( ( MLU + DS ) - ( Max( DS,( RMSe - DS ) ) / CS ) ) ,( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) )", "obj1": 0.6283524904214559, "obj2": 0.20308763094996912}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - ( CS + DS ) ) ,( ( RMSe + ( RRSe * MUR ) ) - MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.08905872672637545}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( FirstVNF_CPU + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( Min( Min( MLU ,( Max( DS,( RMSe - DS ) ) / CS ) ) ,MLU ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.6417624521072797, "obj2": 0.19200788867608096}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.7586206896551724, "obj2": 0.0953521600028436}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe * MLU ),RRSe ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( ( RCSe * ( MLU - DS ) ) / RRSe ) + CS ) ) ),Min( ( RCSe - RRSe ) ,CS ) ) )", "obj1": 0.7816091954022989, "obj2": 0.08608484547097868}, {"determining": "( ( Min( MRS ,( RRS + ( FirstVNF_RAM_Server + Min( ARS ,( RRS * FirstVNF_Mem_Server ) ) ) ) ) + BR ) - ( DDR - MRS ) )", "choosing": "( ( Max( ( MUR / ( MUR + RRSe ) ),( Min( ( RMSe + MUR ) ,( Min( ( RRSe * DS ) ,Max( MLU,RCSe ) ) + DS ) ) / CS ) ) - CS ) * Max( Min( ( MUM / DS ) ,MUM ),MLU ) )", "obj1": 0.896551724137931, "obj2": 0.03935142988702865}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( FirstVNF_CPU + ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( Max( ( Min( ( ( MLU + DS ) - ( Max( DS,( RMSe - DS ) ) / CS ) ) ,RRSe ) - RRSe ),( RRSe / CS ) ) / ( ( Min( Min( MLU ,( Max( DS,( RMSe - DS ) ) / CS ) ) ,MLU ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.6379310344827587, "obj2": 0.19733409619742764}, {"determining": "( ( ( PN / ( Max( DDR,( Min( FirstVNF_Mem ,MDR ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( ( RRSe - CS ) * ( MUM - MUM ) ) + DS ) - Min( MLU ,RRSe ) ) )", "obj1": 0.8065134099616859, "obj2": 0.07644134152844005}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + FirstVNF_CPU ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RMSe ) * ( CS + CS ) ) ) ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04196039389157488}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / ( MUM * Min( RRSe ,( MLU * RRSe ) ) ) ) ),RRSe ) / Min( Min( MUR ,RMSe ) ,( Min( RCSe ,( ( RMSe - RCSe ) + MUR ) ) / RCSe ) ) )", "obj1": 0.7931034482758621, "obj2": 0.08574670585139489}, {"determining": "( ( ( FirstVNF_Mem / ( Min( DDR ,( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Min( ( RRS / FirstVNF_CPU ) ,ARS ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem / Const ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / FirstVNF_CPU ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RRSe / ( MLU * ( Min( MLU ,( RCSe * RMSe ) ) / MUR ) ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( ( ( FirstVNF_CPU - AMS ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,Min( Const ,MRS ) ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( MUC / ( ( CS - ( MUC + MUC ) ) + DS ) )", "obj1": 0.6704980842911877, "obj2": 0.1652921533509536}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( MRS + Min( Max( Max( ( AMS * FirstVNF_Mem ),( MDR / Min( RRS ,MRS ) ) ),( FirstVNF_RAM - MRS ) ) ,MRS ) ) )", "choosing": "( ( ( RCSe * DS ) * ( MUC * ( ( MUM / Max( DS,Min( ( RRSe + MLU ) ,Max( RRSe,RCSe ) ) ) ) * CS ) ) ) - Min( RCSe ,MLU ) )", "obj1": 0.9042145593869731, "obj2": 0.03643009939436883}, {"determining": "( ( Min( ( ( BR * CRS ) - FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,( MDR + FirstVNF_Mem_Server ) ) ) * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / Min( ( ( ARS * CRS ) / ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,( ( MUM + Max( RCSe,MUC ) ) + ( Max( Min( ( Max( Min( RMSe ,RMSe ),MUC ) + MUC ) ,RRSe ),( ( MUC + MLU ) / MUR ) ) + RCSe ) ) )", "obj1": 0.6360153256704981, "obj2": 0.2024517424541955}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU * ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),Min( Max( Min( ( ( MUC * ( RRSe / RMSe ) ) - RRSe ) ,( RRSe + Min( RCSe ,MUR ) ) ),RMSe ) ,( CS + CS ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( ( ( PN / ( Min( ( ( DDR / RRS ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( ( BR - CRS ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( MLU + RCSe ) ,( ( ( MLU - CS ) + DS ) - Max( MUR,( RMSe * RRSe ) ) ) ) ) ,MUC ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.867816091954023, "obj2": 0.0493220971445935}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( ( ( ( ( Const / FirstVNF_RAM ) - Min( MDR ,( ( FirstVNF_CPU * FirstVNF_CPU ) + FirstVNF_Mem ) ) ) - ( Const / FirstVNF_RAM ) ) / PN ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - ( DS + ( ( Min( RCSe ,RRSe ) - MUM ) + MUR ) ) ) ,( ( RMSe + ( RRSe * ( ( ( ( CS + DS ) + ( MUM * DS ) ) * CS ) + RRSe ) ) ) - MUC ) )", "obj1": 0.7681992337164751, "obj2": 0.09362148847241761}, {"determining": "( ( ( ( Min( MRS ,ARS ) / ARS ) - ( MDR - ( AMS - Min( ( FirstVNF_Mem / Max( ACS,Const ) ) ,FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) / ( DDR / ( ( Max( FirstVNF_RAM_Server,BR ) - AMS ) - ( RRS * MRS ) ) ) )", "choosing": "( Min( ( RCSe / MLU ) ,( MUC / RCSe ) ) - ( ( RMSe - ( ( ( ( DS / MUR ) * Max( DS,DS ) ) + ( Max( RRSe,( RCSe / MUR ) ) + Min( MUM ,MUC ) ) ) * CS ) ) + DS ) )", "obj1": 0.9482758620689655, "obj2": 0.017022162412219176}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( ( CS - Max( MUR,RMSe ) ) / MUC ) / MLU ) ,RCSe ) - ( DS + ( Min( ( ( RMSe - ( MUR + CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) + RMSe ) ) )", "obj1": 0.8544061302681992, "obj2": 0.054432665305241774}, {"determining": "( ( ( PN / ( Min( DDR ,( AMS + ACS ) ) - ( Const / Min( ( Const + FirstVNF_CPU_Server ) ,PN ) ) ) ) * ( PN * AMS ) ) - ( BR + ARS ) )", "choosing": "( Max( CS,( RMSe * RCSe ) ) / ( Max( MUR,( ( MUM + MLU ) - Max( CS,( ( DS - ( MUR - MUR ) ) * Min( CS ,Max( CS,MUR ) ) ) ) ) ) * ( RMSe + MLU ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07273979488214789}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - MDR ) ) - ( ( ARS * CRS ) / ( Min( Max( CRS,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( RMSe + ( Max( CS,( Min( ( MUR / MUR ) ,RMSe ) + RRSe ) ) + MUC ) ) - ( MUC * ( Min( ( CS * MUM ) ,MUR ) * MUR ) ) ) )", "obj1": 0.8754789272030651, "obj2": 0.04789658697492075}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( Max( MUR,( MUM * MUC ) ) / ( MLU * MLU ) ) / RMSe )", "obj1": 0.9157088122605364, "obj2": 0.0327674683289582}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN + AMS ) ) - ( ( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / ( FirstVNF_CPU_Server / ARS ) ) )", "choosing": "Max( ( ( Min( ( ( ( MUR * MUR ) * RCSe ) - ( MUC - ( RRSe + RCSe ) ) ) ,( CS * MUR ) ) + ( RMSe / Max( Max( RMSe,CS ),( MUM / DS ) ) ) ) - MUR ),Min( ( CS / MUM ) ,RRSe ) )", "obj1": 0.7337164750957854, "obj2": 0.11154691076894967}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( MUC * ( MUM - MUM ) ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.814176245210728, "obj2": 0.07288549845900696}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_RAM_Server / Const ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( ( Const / FirstVNF_RAM ),BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Min( FirstVNF_CPU ,BR ) ,Min( MRS ,MDR ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( Max( ( CS + MUC ),( RMSe - RCSe ) ) ,CS ) / MUR ) / ( RMSe + ( ( ( ( RRSe - MLU ) - ( MUR / RMSe ) ) + ( Min( MUC ,MUM ) + ( MUC / MUM ) ) ) / MLU ) ) )", "obj1": 0.8026819923371648, "obj2": 0.07893327483141081}, {"determining": "( ( Min( PN ,( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ( FirstVNF_CPU + ( AMS / ( CRS * DDR ) ) ) * CRS ) / ( Min( ( Max( ARS,RRS ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,Const ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( RRSe - CS ) + DS ) - Max( MUR,( RRSe * MUM ) ) ) ,( MLU + RCSe ) ) ) ,RMSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8275862068965517, "obj2": 0.06784178596448646}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( Min( MDR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.012558939334188233}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( ARS - PN ) ) - ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,RRS ) ) ) / ( MRS + ( AMS * FirstVNF_Mem ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "Max( DS,Max( ( ( MLU + MUR ) + ( MUR + Max( DS,RRSe ) ) ),Max( ( ( MLU + ( MLU - ( ( RMSe / MUC ) * ( MUR + MLU ) ) ) ) + ( RMSe - CS ) ),MUM ) ) )", "obj1": 0.8486590038314177, "obj2": 0.05965784373145887}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.1300120043462737}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * AMS ) ) ,Min( ( MDR + ARS ) ,( Const / FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( MLU ,( CS * CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM / ( RCSe - ( RRSe + DS ) ) ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,( MUC + Min( MUM ,DS ) ) ) )", "obj1": 0.6762452107279694, "obj2": 0.16311337844407262}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( Min( MDR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * ( ( ARS * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( ( ( AMS / RRS ) - Min( ( Min( ACS ,DDR ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( ( Max( MLU,RCSe ) / ( CS * MUR ) ) - DS ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.9712643678160919, "obj2": 0.010173849454549388}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * ( ( FirstVNF_Mem * RRS ) * ACS ) ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.8505747126436781, "obj2": 0.055757759361775384}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,( Min( RCSe ,Min( ( Min( DS ,RRSe ) - MLU ) ,RRSe ) ) / RCSe ) ) )", "obj1": 0.7126436781609196, "obj2": 0.11920997342834294}, {"determining": "( ( ( ( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( AMS + PN ) ) * PN ) - ( CRS + Max( Max( ( ACS - FirstVNF_CPU ),RRS ),Min( PN ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM * Min( ( Min( MUR ,CS ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,Max( RMSe,MUC ) ) ) - ( MUM + ( Min( ( RCSe / MUR ) ,RCSe ) + Min( Min( RMSe ,MUR ) ,DS ) ) ) )", "obj1": 0.9425287356321839, "obj2": 0.02310937653962019}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - Min( DDR ,( ARS * Max( ( FirstVNF_RAM + ARS ),FirstVNF_CPU ) ) ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ARS - ( FirstVNF_CPU / ARS ) ) / ( ACS + Const ) ) ) )", "choosing": "Min( Min( ( ( MUC * RMSe ) - Min( RMSe ,( ( CS - ( Max( DS,MUR ) - ( RMSe * MUC ) ) ) * MUM ) ) ) ,( ( MUM / RRSe ) - Min( RCSe ,MUR ) ) ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( Min( MUR ,RMSe ) - MUM ),MUR ) ) ) * Max( ( RRSe + MLU ),( CS * ( Max( RCSe,MUM ) / MUR ) ) ) ) )", "obj1": 0.8639846743295019, "obj2": 0.053852748591532995}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) ) ) * ( ( ( MDR / ( Min( AMS ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( FirstVNF_Mem_Server / ( ACS - MDR ) ) ) )", "choosing": "( ( MUM * MUM ) / Min( ( ( MUC * MLU ) + DS ) ,MUR ) )", "obj1": 0.8831417624521073, "obj2": 0.04368958555007656}, {"determining": "( ( MRS * Max( RRS,( Const * BR ) ) ) - ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU * ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( ( ( Max( MLU,RCSe ) * ( RMSe * RMSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( ( ( RCSe / DS ) + Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( MUM / Min( MUR ,CS ) ) / CS ) - ( MLU / Max( RMSe,MUM ) ) ) ) ) )", "obj1": 0.6973180076628352, "obj2": 0.1282697390501788}, {"determining": "( ( PN * ( ( Min( ( ( FirstVNF_CPU - ( PN * FirstVNF_Mem ) ) - BR ) ,( FirstVNF_CPU / ( ( BR - AMS ) * ( FirstVNF_CPU * MDR ) ) ) ) / DDR ) - Min( BR ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( RCSe - ( ( MLU + ( RMSe * Min( Min( RRSe ,MUC ) ,( MLU + MLU ) ) ) ) / ( RMSe + MLU ) ) ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RMSe ) * ( CS + ( CS / MUC ) ) ) ) )", "obj1": 0.7969348659003831, "obj2": 0.08316557009293775}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + MRS ) ) ) / ACS ) - ( MDR - ( ( PN + FirstVNF_CPU ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server * Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( ( Max( MUC,RMSe ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( RMSe + ( ( ( RMSe - ( MUR / RMSe ) ) + ( ( MUC / MUM ) + Min( ( CS / CS ) ,MUM ) ) ) / CS ) ) ) )", "obj1": 0.8371647509578544, "obj2": 0.06224442568150566}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.7068965517241379, "obj2": 0.12044862329758743}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * FirstVNF_Mem_Server ) - Min( DDR ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) / AMS ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ACS * Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * ( CRS + Const ) ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( ( ( ( ( MUC * DS ) / ( MUC - MUM ) ) / ( DS + MUM ) ) / RMSe ) / ( Min( MLU ,RCSe ) - RCSe ) ) - RMSe ),( Max( MUR,RMSe ) * Min( CS ,RRSe ) ) ) )", "obj1": 0.764367816091954, "obj2": 0.0937642920615673}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.12659877421094784}, {"determining": "( ( ( PN * AMS ) * ( MRS / ( Min( MDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU / PN ) + Const ) ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( MUM,Min( MUC ,RRSe ) ) / Max( DS,MUC ) )", "obj1": 0.7279693486590039, "obj2": 0.11391019854446555}, {"determining": "( Min( MRS ,MRS ) - ( ( Min( ACS ,( FirstVNF_CPU / Max( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),DDR ),RRS ) ) ) / DDR ) + ( ARS * CRS ) ) )", "choosing": "( ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) / ( ( ( ( MUM / Max( RCSe,MUC ) ) + CS ) - Min( Min( ( Max( RMSe,Max( RRSe,DS ) ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) )", "obj1": 0.921455938697318, "obj2": 0.031942864825938916}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * ( AMS * Const ) ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,Max( MLU,CS ) ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / ( RCSe / DS ) ) )", "obj1": 0.7471264367816092, "obj2": 0.10431811036909899}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * ( ( FirstVNF_Mem * FirstVNF_CPU ) * ACS ) ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe / Max( ( MUM / DS ),Max( RMSe,CS ) ) ) - ( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.842911877394636, "obj2": 0.06029748638401152}, {"determining": "( ( ( ( BR - BR ) * MRS ) - Min( PN ,AMS ) ) - ( ARS / ( ARS * CRS ) ) )", "choosing": "( ( ( ( ( ( RCSe / ( Max( MUR,MLU ) - CS ) ) / Max( DS,CS ) ) - ( ( ( RMSe + ( CS / MUM ) ) + RCSe ) / RMSe ) ) + Min( CS ,DS ) ) / MUR ) - Max( RMSe,RCSe ) )", "obj1": 0.9118773946360154, "obj2": 0.035947375929578806}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * CRS ) ) / Min( Min( ( ( ACS / MRS ) + AMS ) ,Min( FirstVNF_CPU ,( ( DDR / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU / ( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) ) ) ) )", "choosing": "Min( ( Max( ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( DS / ( MUC / ( MUC + RRSe ) ) ) ),MUR ) - RMSe ) ,( ( RMSe + ( RRSe * MUR ) ) - Max( ( MLU / DS ),( CS * MLU ) ) ) )", "obj1": 0.8659003831417624, "obj2": 0.05348983161431539}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / Min( ( BR / BR ) ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( Min( Min( MLU ,( Max( DS,( RMSe - DS ) ) / CS ) ) ,MLU ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.7030651340996169, "obj2": 0.123990641835066}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.9291187739463601, "obj2": 0.025759881776229832}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( FirstVNF_CPU + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,Min( Const ,MRS ) ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( CS ,CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM * MUC ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.9444444444444444, "obj2": 0.021924492456042093}, {"determining": "( ( PN * ( ( Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) / DDR ) - Min( ( CRS + FirstVNF_CPU_Server ) ,AMS ) ) ) - ( Const + MRS ) )", "choosing": "( Max( MLU,( RMSe + MUM ) ) * ( RMSe - RMSe ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.006492189062201773}, {"determining": "( ( ( PN / Min( Min( DDR ,( ( PN + FirstVNF_RAM ) * ( ( RRS + FirstVNF_CPU ) * Const ) ) ) ,( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) - DDR ) ) )", "choosing": "( Max( Min( MLU ,RRSe ),( RMSe * MLU ) ) / ( RRSe + ( ( ( RMSe / CS ) * ( ( Max( Max( CS,MUC ),DS ) + ( RCSe * ( RRSe + RCSe ) ) ) * RRSe ) ) - CS ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10540426450777751}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( ( PN / ( Min( ( ( DDR / RRS ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( Min( ARS ,Max( Max( Max( ( Const / FirstVNF_RAM ),BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) ) ,RMSe ),( ( RRSe + CS ) * MUR ) ) )", "obj1": 0.8793103448275862, "obj2": 0.046259139632708904}, {"determining": "( ( ( ARS * CRS ) / ( Min( CRS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) - ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) ) ) * Max( Max( ( Max( PN,( FirstVNF_RAM - ( FirstVNF_RAM * MDR ) ) ) - ( FirstVNF_RAM * Min( ACS ,ACS ) ) ),MRS ),MRS ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) / ( ( MUM * Min( RRSe ,( MLU * Min( MUR ,MUM ) ) ) ) / Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) ) ),RRSe ) / Min( Min( MUR ,RMSe ) ,( Min( RCSe ,( ( RMSe - RCSe ) + MUR ) ) / RCSe ) ) )", "obj1": 0.7241379310344828, "obj2": 0.11566349307421754}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) ) )", "obj1": 0.7049808429118773, "obj2": 0.12226511751889758}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( ( ( FirstVNF_CPU - AMS ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,Min( Const ,MRS ) ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "Max( DS,( RCSe + ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( MUR,RMSe ) * ( CS + CS ) ) ) ) ) )", "obj1": 0.6724137931034483, "obj2": 0.16318865707178473}, {"determining": "( ( Min( ( MRS - ( ( FirstVNF_Mem_Server / ACS ) * FirstVNF_CPU ) ) ,ACS ) * ( ACS / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ARS - CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,Min( ( CS + MLU ) ,MUR ) ) ) * ( MUM / MUM ) ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( RRSe / ( RCSe * ( MLU - DS ) ) ) + CS ) ) ),Min( ( RCSe - RRSe ) ,RCSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06192611889944147}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ) )", "obj1": 0.9233716475095786, "obj2": 0.030139507123508942}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * FirstVNF_CPU ) ) - ( ( ARS * ( Const / CRS ) ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( ( ( FirstVNF_RAM_Server + RRS ) * FirstVNF_Mem_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "( Max( Min( ( ( ( CS + MUR ) / MUR ) / ( CS * MUC ) ) ,Min( RCSe ,MLU ) ),Min( MUR ,RCSe ) ) * ( ( ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * CS ) ) ) + RCSe ) ) + Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) ) / ( ( MUR * MUC ) + Min( RCSe ,MUM ) ) ) )", "obj1": 0.7203065134099617, "obj2": 0.11662163985801538}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * PN ) - ( ( Min( Const ,FirstVNF_RAM ) / MRS ) + MRS ) )", "choosing": "( ( ( RCSe * MUC ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,( MUM / MUC ) ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03613553823966046}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( Max( MUR,( MUM * MUC ) ) / ( MLU * MLU ) ) / RMSe )", "obj1": 0.9272030651340997, "obj2": 0.028725613985908158}, {"determining": "( ( ( ARS / ( Min( ( AMS * FirstVNF_CPU ) ,Const ) / ( Const / FirstVNF_RAM ) ) ) * ( AMS * RRS ) ) - ( ( MRS + AMS ) + FirstVNF_Mem ) )", "choosing": "( ( MUC * CS ) * ( Min( Min( RRSe ,CS ) ,MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.7164750957854407, "obj2": 0.11813242538030118}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) + DDR ) / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) - ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( Min( Min( MLU ,( Max( DS,( RMSe - MLU ) ) * CS ) ) ,MLU ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.8812260536398467, "obj2": 0.04540224892122593}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Const ) ,( Min( FirstVNF_RAM ,( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / CRS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( MLU ,Min( CS ,CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM * MUC ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.9904214559386973, "obj2": 0.0036717061891117612}, {"determining": "( ( PN * ( ( Min( FirstVNF_CPU_Server ,( Min( ACS ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( Min( MLU ,RRSe ),RRSe ) * ( RRSe - RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004334454779699649}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),Max( MRS,( Max( MRS,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * ARS ) ) ) / DDR ) ) )", "choosing": "( Max( ( ( ( MUM / Max( CS,MUC ) ) / CS ) - ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUC + RRSe ) ) ) ) ),RRSe ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7452107279693486, "obj2": 0.10482524669140245}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * ( ARS + ( DDR - PN ) ) ) ) ) - ( PN - MRS ) )", "choosing": "( Max( MLU,Min( MUM ,MUM ) ) * Max( ( ( ( RMSe + MUM ) + DS ) - Max( ( ( MUM * ( MLU / RCSe ) ) / Max( MUC,CS ) ),RMSe ) ),( MLU + RCSe ) ) )", "obj1": 0.9348659003831418, "obj2": 0.02418022407482676}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / MDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RRSe ) * ( CS + CS ) ) ) ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.7394636015325671, "obj2": 0.1074215672838786}, {"determining": "( ( Max( ( CRS + ( Const / ( FirstVNF_Mem / Min( FirstVNF_CPU ,PN ) ) ) ),FirstVNF_Mem ) * ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( Min( ACS ,Max( ( RRS / Const ),CRS ) ) ,( FirstVNF_RAM / AMS ) ) ) ) - ( FirstVNF_CPU - AMS ) )", "choosing": "( Max( MLU,( ( MUC / DS ) + MUM ) ) * ( MUR + ( CS * ( MUM / Max( ( DS + RCSe ),RRSe ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.004763226325240704}, {"determining": "( ( ( PN / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / ACS ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - ( ( ( PN + Const ) * Max( FirstVNF_RAM_Server,PN ) ) * PN ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( CRS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RCSe / ( MUR - MUC ) ) / Max( Min( MUR ,RMSe ),( ( CS + ( MUC + MLU ) ) * MUR ) ) )", "obj1": 0.975095785440613, "obj2": 0.008581334482836621}, {"determining": "( Max( Max( ( CRS * ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( AMS * ( ( FirstVNF_Mem_Server - Max( AMS,( BR - ARS ) ) ) * FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM - MRS ) ) - ( ACS * PN ) )", "choosing": "( ( RCSe + Min( MUM ,( Max( MUR,( DS * ( ( RRSe / MUM ) / RMSe ) ) ) + Min( Max( MUM,MUC ) ,MUC ) ) ) ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.014300928987263558}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Const ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( Max( Min( ( ( MUC * ( RRSe / RMSe ) ) - RRSe ) ,( RRSe + Min( RCSe ,MUR ) ) ),RMSe ) ,RMSe ) ,Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),Min( Min( ( ( DS / RMSe ) - RMSe ) ,( MLU - DS ) ) ,MUR ) ) ) )", "obj1": 0.7988505747126436, "obj2": 0.08125616188709}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( Min( ( MUR - ( ( Max( CS,DS ) / MUM ) / CS ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RMSe ) + ( ( ( ( RCSe / RRSe ) - ( MUM * CS ) ) - Min( RRSe ,( CS + MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7260536398467433, "obj2": 0.11435693293869617}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Min( Min( FirstVNF_Mem_Server ,Const ) ,DDR ) ) ,( Min( FirstVNF_Mem ,( ARS * CRS ) ) * ( Min( ( ARS / CRS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "Max( DS,( RCSe + ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - Min( RCSe ,DS ) ) ) - RMSe ),Min( RCSe ,( ( MUM * RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.9616858237547893, "obj2": 0.013512756088755188}, {"determining": "( ( ( PN / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / FirstVNF_RAM ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( CRS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - ( ( MLU + ( RMSe * Min( Min( RRSe ,MUC ) ,( MLU + MLU ) ) ) ) / ( RMSe + MLU ) ) ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RMSe ) * ( CS + ( CS / MUC ) ) ) ) )", "obj1": 0.9731800766283525, "obj2": 0.00975769111416397}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),Max( MRS,( Max( MRS,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * ARS ) ) ) / DDR ) ) )", "choosing": "( Max( ( ( ( MUM / Max( CS,MUC ) ) / CS ) - ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUC + RRSe ) ) ) ) ),RRSe ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7183908045977011, "obj2": 0.11754513169442417}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ,Const ) ,( Min( FirstVNF_RAM ,( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / CRS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "Max( DS,( RCSe + ( Max( ( RCSe - RRSe ),RRSe ) / Max( Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ),( Max( MUR,RMSe ) * ( CS + CS ) ) ) ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0017438978776377775}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( ( MUM * ( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / ( MUM * Min( RRSe ,( MLU * RRSe ) ) ) ) ) * RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 0.9252873563218391, "obj2": 0.028726442108904775}, {"determining": "( ( ( PN / ( ( Const / FirstVNF_RAM ) - ( RRS + FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( ARS * CRS ) / ( DDR / Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_RAM - PN ) + Min( DDR ,BR ) ) ) ) ,Max( FirstVNF_CPU,Min( FirstVNF_RAM ,( DDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RRSe ,( ( RRSe / Max( RRSe,RRSe ) ) * RCSe ) ) / CS ) * MUR ),( ( MUR * RCSe ) - RRSe ) ) / ( ( RRSe - RCSe ) - ( ( MUM + Min( RMSe ,( DS - Min( MUR ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.7375478927203065, "obj2": 0.10768261949220766}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,Const ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),Min( Min( ( ( DS / RMSe ) - RMSe ) ,( MLU - DS ) ) ,MUR ) ) ) )", "obj1": 0.7988505747126436, "obj2": 0.08125616188709}], "31": [{"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ( FirstVNF_Mem - FirstVNF_CPU ) ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( Max( MUR,( ( ( MUC * ( MUM - MUM ) ) + DS ) * MUC ) ) / ( MLU * MLU ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * Max( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM / AMS ) ) ),( Const * BR ) ) ) - ( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU * ARS ) ) / ACS ) ,( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( ( ( Max( MLU,RCSe ) * ( RMSe * RMSe ) ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( ( ( RCSe * DS ) - RRSe ) + Max( CS,( MUM / Max( ( RMSe - MUM ),RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( AMS - Const ) * CRS ) / RRS ) ) - ( ( PN / ARS ) * CRS ) )", "choosing": "Max( ( MUC + DS ),( MUM - CS ) )", "obj1": 0.5689655172413793, "obj2": 0.2908548007151882}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,( ( FirstVNF_CPU / FirstVNF_CPU ) + FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Min( Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ,Min( MUR ,RMSe ) ) * Max( CS,Min( ( Min( RMSe ,( RMSe - MLU ) ) - ( CS / MUC ) ) ,( MUM / MUM ) ) ) )", "obj1": 0.5727969348659003, "obj2": 0.27175868086294713}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / ARS ) ,( FirstVNF_CPU / Max( FirstVNF_CPU,( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + Min( DDR ,FirstVNF_CPU ) ) ) ) ) / DDR ) ) )", "choosing": "( Min( Max( MUC,MUM ) ,Min( MUR ,RMSe ) ) * Max( CS,Min( ( Min( RMSe ,( RMSe - MLU ) ) - MUM ) ,( ( ( ( MUR - RCSe ) / DS ) * CS ) / MUM ) ) ) )", "obj1": 0.5977011494252874, "obj2": 0.2380367854192079}, {"determining": "( ( PN * ( ( Min( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ( ( ARS * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ,FirstVNF_RAM_Server ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,Max( ( MUM / ( RMSe / Max( Max( RMSe,CS ),( MUM / DS ) ) ) ),Min( Min( ( MUM / RCSe ) ,( MLU - DS ) ) ,MUR ) ) )", "obj1": 0.6130268199233716, "obj2": 0.23254214224335312}, {"determining": "( ( PN * ( ( Min( ( DDR + ( MDR + PN ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( ( AMS / RRS ) + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( Min( Const ,FirstVNF_RAM ),FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) - Min( ( ( MLU + DS ) - ( Max( DS,( RMSe - DS ) ) / CS ) ) ,( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) )", "obj1": 0.6149425287356322, "obj2": 0.20595810862602354}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * Max( PN,( ARS * ( CRS / ( MRS + FirstVNF_CPU_Server ) ) ) ) ) - ( ( ARS * CRS ) / ( Min( ( Max( ARS,( MDR + Min( DDR ,FirstVNF_CPU ) ) ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ( RRS / Const ) ) ) / DDR ) ) )", "choosing": "( Min( Max( MUM,MUC ) ,Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) ) * Max( Min( MUM ,( RCSe / ( RRSe + ( MUR / MUR ) ) ) ),Max( RCSe,MUM ) ) )", "obj1": 0.685823754789272, "obj2": 0.1416118916902198}, {"determining": "( ( ARS * ( ( ( Const / Max( ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) / ARS ),MDR ) ) - ARS ) / CRS ) ) - ( DDR / ( ( FirstVNF_Mem_Server - MDR ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * MLU ) + ( DS - DS ) )", "obj1": 0.6590038314176245, "obj2": 0.178491082402923}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( MUC * ( MUM - MUM ) ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.6781609195402298, "obj2": 0.1576326631308643}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( ( ( FirstVNF_CPU - AMS ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) ) ) - ( CRS + Max( Max( ( AMS + ARS ),RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,Min( Const ,MRS ) ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( MUM * Min( ( ( RCSe * MUC ) / ( Min( MLU ,Min( CS ,CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM * MUC ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,RRSe ) )", "obj1": 0.6628352490421456, "obj2": 0.16903113731350491}, {"determining": "( ( PN * ( ( Min( ( DDR + ( MDR + PN ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( ( AMS / RRS ) + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + ( ( MUR - RMSe ) - CS ) ) - Min( ( ( MLU + DS ) - ( Max( DS,( RMSe - DS ) ) / CS ) ) ,( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) )", "obj1": 0.6283524904214559, "obj2": 0.20308763094996912}, {"determining": "( ( ( CRS / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( ARS + PN ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( Max( RCSe,MLU ) ,( ( Max( RCSe,MUM ) + ( MLU / Max( ( MUR - MUM ),MUM ) ) ) * Max( ( RRSe + MLU ),( CS * MLU ) ) ) )", "obj1": 0.7509578544061303, "obj2": 0.1011656060056186}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - ( CS + DS ) ) ,( ( RMSe + ( RRSe * MUR ) ) - MUR ) )", "obj1": 0.7739463601532567, "obj2": 0.08905872672637545}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( FirstVNF_CPU + PN ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( Min( Min( MLU ,( Max( DS,( RMSe - DS ) ) / CS ) ) ,MLU ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.6417624521072797, "obj2": 0.19200788867608096}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.7586206896551724, "obj2": 0.0953521600028436}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe * MLU ),RRSe ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( ( RCSe * ( MLU - DS ) ) / RRSe ) + CS ) ) ),Min( ( RCSe - RRSe ) ,CS ) ) )", "obj1": 0.7816091954022989, "obj2": 0.08608484547097868}, {"determining": "( ( Min( MRS ,( RRS + ( FirstVNF_RAM_Server + Min( ARS ,( RRS * FirstVNF_Mem_Server ) ) ) ) ) + BR ) - ( DDR - MRS ) )", "choosing": "( ( Max( ( MUR / ( MUR + RRSe ) ),( Min( ( RMSe + MUR ) ,( Min( ( RRSe * DS ) ,Max( MLU,RCSe ) ) + DS ) ) / CS ) ) - CS ) * Max( Min( ( MUM / DS ) ,MUM ),MLU ) )", "obj1": 0.896551724137931, "obj2": 0.03935142988702865}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / ( FirstVNF_CPU + ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ) ,Min( ( Const / ( ( ACS + FirstVNF_RAM ) + Max( ARS,RRS ) ) ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "( Max( ( Min( ( ( MLU + DS ) - ( Max( DS,( RMSe - DS ) ) / CS ) ) ,RRSe ) - RRSe ),( RRSe / CS ) ) / ( ( Min( Min( MLU ,( Max( DS,( RMSe - DS ) ) / CS ) ) ,MLU ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.6379310344827587, "obj2": 0.19733409619742764}, {"determining": "( ( ( PN / ( Min( ( ( DDR / RRS ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( Min( ARS ,Max( Max( Max( ( Const / FirstVNF_RAM ),BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( RRSe - CS ) + DS ) - Max( MUR,( RRSe * MUM ) ) ) ,( MLU + RCSe ) ) ) ,RMSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8639846743295019, "obj2": 0.050909424236787626}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * CRS ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( ( CS - Max( MUR,RMSe ) ) / MUC ) / MLU ) ,RCSe ) - ( DS + ( Min( ( ( RMSe - ( MUR + CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) + RMSe ) ) )", "obj1": 0.8544061302681992, "obj2": 0.054432665305241774}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,Max( Max( ( ACS - FirstVNF_CPU ),RRS ),Min( PN ,FirstVNF_RAM ) ) ) / MDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RRSe ) * ( CS + CS ) ) ) ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.9291187739463601, "obj2": 0.023600816382006617}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + FirstVNF_CPU ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RMSe ) * ( CS + CS ) ) ) ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04196039389157488}, {"determining": "( ( ( PN / ( ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / ( MUM * Min( RRSe ,( MLU * RRSe ) ) ) ) ),RRSe ) / Min( Min( MUR ,RMSe ) ,( Min( RCSe ,( ( RMSe - RCSe ) + MUR ) ) / RCSe ) ) )", "obj1": 0.7931034482758621, "obj2": 0.08574670585139489}, {"determining": "( ( PN * ( Min( ACS ,( FirstVNF_CPU / ACS ) ) - ( Min( ( BR / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ( PN / MDR ) ) ) / DDR ) ) ) - ( CRS + MRS ) )", "choosing": "( ( RCSe * Min( MUC ,( RCSe / ( DS - RMSe ) ) ) ) / RMSe )", "obj1": 0.6475095785440613, "obj2": 0.18732877777010346}, {"determining": "( ( PN * ( ( Min( ( ACS / Max( RRS,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( ( Max( MUR,( MUM * MUC ) ) / ( MLU * MLU ) ) / RMSe )", "obj1": 0.6475095785440613, "obj2": 0.18732877777010346}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( ( ( FirstVNF_CPU - AMS ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,Min( Const ,MRS ) ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( ( MDR + FirstVNF_RAM ) + DDR ) ) ) ) ) )", "choosing": "( MUC / ( ( CS - ( MUC + MUC ) ) + ( Min( Min( MLU ,( Max( DS,( RMSe - MLU ) ) * CS ) ) ,MLU ) + DS ) ) )", "obj1": 0.6704980842911877, "obj2": 0.16438873532265766}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( MRS + Min( Max( Max( ( AMS * FirstVNF_Mem ),( MDR / Min( RRS ,MRS ) ) ),( FirstVNF_RAM - MRS ) ) ,MRS ) ) )", "choosing": "( ( ( RCSe * DS ) * ( MUC * ( ( MUM / Max( DS,Min( ( RRSe + MLU ) ,Max( RRSe,RCSe ) ) ) ) * CS ) ) ) - Min( RCSe ,MLU ) )", "obj1": 0.9042145593869731, "obj2": 0.03643009939436883}, {"determining": "( ( Min( ( ( BR * CRS ) - FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,( MDR + FirstVNF_Mem_Server ) ) ) * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / Min( ( ( ARS * CRS ) / ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "Max( DS,( ( MUM + Max( RCSe,MUC ) ) + ( Max( Min( ( Max( Min( RMSe ,RMSe ),MUC ) + MUC ) ,RRSe ),( ( MUC + MLU ) / MUR ) ) + RCSe ) ) )", "obj1": 0.6360153256704981, "obj2": 0.2024517424541955}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU * ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),Min( Max( Min( ( ( MUC * ( RRSe / RMSe ) ) - RRSe ) ,( RRSe + Min( RCSe ,MUR ) ) ),RMSe ) ,( CS + CS ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06500265838973023}, {"determining": "( ( ( PN / ( Max( DDR,( Min( FirstVNF_Mem ,MDR ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( ( RRSe - CS ) * ( MUM - MUM ) ) + DS ) - Min( MLU ,RRSe ) ) )", "obj1": 0.8065134099616859, "obj2": 0.07644134152844005}, {"determining": "( ( ( ( ACS * MRS ) * FirstVNF_RAM ) + RRS ) - ( ( ( PN + FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( MUC / MUC ) + ( MLU / MUR ) ) ,MLU ) * Max( MLU,RCSe ) ) * Min( ( MUR * RRSe ) ,( RMSe + MLU ) ) ) + ( Max( Max( MUC,MUR ),( RMSe / DS ) ) + Max( Min( ( Min( MUR ,RRSe ) - RCSe ) ,Min( Min( MLU ,MUR ) ,DS ) ),( ( ( MUM / Max( RCSe,Min( RRSe ,RRSe ) ) ) / CS ) - Min( MLU ,MUM ) ) ) ) )", "obj1": 0.6877394636015326, "obj2": 0.1335860302900406}, {"determining": "( ( ( ( ( ( Const / FirstVNF_RAM ) - Min( MDR ,( ( FirstVNF_CPU * FirstVNF_CPU ) + FirstVNF_Mem ) ) ) - ( Const / FirstVNF_RAM ) ) / PN ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - ( DS + ( ( Min( RCSe ,RRSe ) - MUM ) + MUR ) ) ) ,( ( RMSe + ( RRSe * ( ( ( ( CS + DS ) + ( MUM * DS ) ) * CS ) + RRSe ) ) ) - MUC ) )", "obj1": 0.7681992337164751, "obj2": 0.09362148847241761}, {"determining": "( ( ( ( Min( MRS ,ARS ) / ARS ) - ( MDR - ( AMS - Min( ( FirstVNF_Mem / Max( ACS,Const ) ) ,FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) / ( DDR / ( ( Max( FirstVNF_RAM_Server,BR ) - AMS ) - ( RRS * MRS ) ) ) )", "choosing": "( Min( ( RCSe / MLU ) ,( MUC / RCSe ) ) - ( ( RMSe - ( ( ( ( DS / MUR ) * Max( DS,DS ) ) + ( Max( RRSe,( RCSe / MUR ) ) + Min( MUM ,MUC ) ) ) * CS ) ) + DS ) )", "obj1": 0.9482758620689655, "obj2": 0.017022162412219176}, {"determining": "( ( ( PN / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / FirstVNF_RAM ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) / ( FirstVNF_CPU / ARS ) ) ) )", "choosing": "( Max( ( RCSe - ( ( MLU + ( RMSe * Min( Min( RRSe ,MUC ) ,( MLU + MLU ) ) ) ) / ( RMSe + MLU ) ) ),RRSe ) / Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),( Max( MUR,RMSe ) * ( CS + ( CS / MUC ) ) ) ) )", "obj1": 0.9406130268199234, "obj2": 0.022215178589048385}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM_Server - MDR ) ) - ( ( ARS * CRS ) / ( Min( Max( CRS,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( RMSe + ( Max( CS,( Min( ( MUR / MUR ) ,RMSe ) + RRSe ) ) + MUC ) ) - ( MUC * ( Min( ( CS * MUM ) ,MUR ) * MUR ) ) ) )", "obj1": 0.8754789272030651, "obj2": 0.04789658697492075}, {"determining": "( ( ( PN / ( Min( ( ( DDR / RRS ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) - ( ARS / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( ( BR - CRS ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( MLU + RCSe ) ,( ( ( MLU - CS ) + DS ) - Max( MUR,( RMSe * RRSe ) ) ) ) ) ,MUC ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.867816091954023, "obj2": 0.0493220971445935}, {"determining": "( ( ( Min( DDR ,AMS ) / ( ACS + Const ) ) / ( Min( FirstVNF_RAM ,( ( ( AMS - Min( DDR ,AMS ) ) - ( ( FirstVNF_CPU + MRS ) * FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,( Min( MDR ,RRS ) + RRS ) ) * FirstVNF_RAM ) ) ) - Max( Max( ( AMS * FirstVNF_Mem ),Max( FirstVNF_CPU_Server,Max( Max( ARS,RRS ),( ACS * Const ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( ( ( ( ( MUM / Max( RCSe,MUC ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) )", "obj1": 0.9578544061302682, "obj2": 0.015529459832071251}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / DDR ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const + MRS ) )", "choosing": "( ( Max( MUR,( MUM * MUC ) ) / ( MLU * MLU ) ) / RMSe )", "obj1": 0.9157088122605364, "obj2": 0.0327674683289582}, {"determining": "( ( PN * ( ( Min( FirstVNF_Mem ,( ( MDR * ACS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( Max( ( RCSe / DS ),Max( MUC,MUR ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.9827586206896551, "obj2": 0.006492189062201773}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( ( MUC * ( MUM - MUM ) ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.814176245210728, "obj2": 0.07288549845900696}, {"determining": "( ( Min( PN ,( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ( FirstVNF_CPU + ( AMS / ( CRS * DDR ) ) ) * CRS ) / ( Min( ( Max( ARS,RRS ) / FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,Const ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( RRSe - CS ) + DS ) - Max( MUR,( RRSe * MUM ) ) ) ,( MLU + RCSe ) ) ) ,RMSe ),( ( CS + CS ) * MUR ) ) )", "obj1": 0.8275862068965517, "obj2": 0.06784178596448646}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( Min( MDR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.012558939334188233}, {"determining": "( ( ( PN / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / ACS ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - ( ( ( PN + Const ) * Max( FirstVNF_RAM_Server,PN ) ) * PN ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( CRS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RCSe / ( MUR - MUC ) ) / Max( Min( MUR ,RMSe ),( ( CS + ( MUC + MLU ) ) * MUR ) ) )", "obj1": 0.975095785440613, "obj2": 0.008581334482836621}, {"determining": "( ( ( ( ( FirstVNF_RAM / ( ARS - PN ) ) - ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,RRS ) ) ) / ( MRS + ( AMS * FirstVNF_Mem ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) )", "choosing": "Max( DS,Max( ( ( MLU + MUR ) + ( MUR + Max( DS,RRSe ) ) ),Max( ( ( MLU + ( MLU - ( ( RMSe / MUC ) * ( MUR + MLU ) ) ) ) + ( RMSe - CS ) ),MUM ) ) )", "obj1": 0.8486590038314177, "obj2": 0.05965784373145887}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( FirstVNF_CPU,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( MRS,( ( MRS + FirstVNF_CPU ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),( MUC * ( CS + CS ) ) ) ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.8237547892720306, "obj2": 0.06994291786526517}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,( FirstVNF_RAM - FirstVNF_CPU ) ) * AMS ) ) ,Min( ( MDR + ARS ) ,( Const / FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUM * Min( ( Min( CS ,MUR ) / ( Min( MLU ,( CS * CS ) ) / RRSe ) ) ,( ( RCSe * DS ) * ( MUM / ( RCSe - ( RRSe + DS ) ) ) ) ) ) - Min( ( Min( DS ,MLU ) - MLU ) ,( MUC + Min( MUM ,DS ) ) ) )", "obj1": 0.6762452107279694, "obj2": 0.16311337844407262}, {"determining": "( ( ( PN / ( Min( DDR ,( AMS + ACS ) ) - ( Const / Min( ( Const + FirstVNF_CPU_Server ) ,PN ) ) ) ) * ( PN * AMS ) ) - ( BR + ARS ) )", "choosing": "( Max( CS,( RMSe * RCSe ) ) / ( Max( MUR,( ( MUM + MLU ) - Max( CS,( ( DS - ( MUR - MUR ) ) * Min( CS ,Max( CS,MUR ) ) ) ) ) ) * ( RMSe + MLU ) ) )", "obj1": 0.8160919540229885, "obj2": 0.07273979488214789}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( Min( MDR ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * ( ( ARS * CRS ) / ( Min( ARS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / ( ACS + Const ) ) ) ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( ( ( AMS / RRS ) - Min( ( Min( ACS ,DDR ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( ( Max( MLU,RCSe ) / ( CS * MUR ) ) - DS ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.9712643678160919, "obj2": 0.010173849454549388}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * ( ( FirstVNF_Mem * RRS ) * ACS ) ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.8505747126436781, "obj2": 0.055757759361775384}, {"determining": "( Min( MRS ,MRS ) - ( ( Min( ACS ,( FirstVNF_CPU / Max( Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),DDR ),RRS ) ) ) / DDR ) + ( ARS * CRS ) ) )", "choosing": "( ( Min( MLU ,( MUR / Max( MUR,( MUM * MUC ) ) ) ) / Max( ( MUC + RCSe ),Max( RCSe,DS ) ) ) / ( ( ( ( MUM / Max( RCSe,MUC ) ) + CS ) - Min( Min( ( Max( RMSe,Max( RRSe,DS ) ) / MLU ) ,MUC ) ,( CS / CS ) ) ) / ( ( RRSe + Min( ( Max( MUM,MUR ) + RMSe ) ,RRSe ) ) * Min( MLU ,RCSe ) ) ) )", "obj1": 0.921455938697318, "obj2": 0.031942864825938916}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.7011494252873564, "obj2": 0.12659877421094784}, {"determining": "( ( ( ( Const - ( PN * ( PN - FirstVNF_CPU ) ) ) / CRS ) * FirstVNF_RAM ) - Max( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ),RRS ) )", "choosing": "( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * MUM ) ,( RMSe + MLU ) ) ) + ( ( ( ( MLU / MUC ) + ( Max( RMSe,( CS - DS ) ) + ( ( MLU * ( DS * MLU ) ) + RCSe ) ) ) - ( ( CS - MUC ) + CS ) ) + ( ( MUM * MUR ) / ( ( ( ( ( MUC - MUC ) * Max( CS,RCSe ) ) / Min( ( MUR - MLU ) ,CS ) ) / CS ) - ( MLU / MUM ) ) ) ) )", "obj1": 0.6934865900383141, "obj2": 0.1300120043462737}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,( Min( RCSe ,Min( ( Min( DS ,RRSe ) - MLU ) ,RRSe ) ) / RCSe ) ) )", "obj1": 0.7126436781609196, "obj2": 0.11920997342834294}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - Min( ( ( ( FirstVNF_RAM_Server - BR ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) ) ) * ( ( ( MDR / ( Min( AMS ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( FirstVNF_Mem_Server / ( ACS - MDR ) ) ) )", "choosing": "( ( MUM * MUM ) / Min( ( ( MUC * MLU ) + DS ) ,MUR ) )", "obj1": 0.8831417624521073, "obj2": 0.04368958555007656}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / Min( ( BR / BR ) ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( Min( Min( MLU ,( Max( DS,( RMSe - DS ) ) / CS ) ) ,MLU ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.6954022988505747, "obj2": 0.12780166128202278}, {"determining": "( ( PN * ( ( Min( ( ( FirstVNF_CPU - ( PN * FirstVNF_Mem ) ) - BR ) ,( FirstVNF_CPU / ( ( BR - AMS ) * ( FirstVNF_CPU * MDR ) ) ) ) / DDR ) - Min( BR ,( FirstVNF_CPU / ACS ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Max( ( RCSe - ( ( MLU + ( RMSe * Min( Min( RRSe ,MUC ) ,( MLU + MLU ) ) ) ) / ( RMSe + MLU ) ) ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RMSe ) * ( CS + ( CS / MUC ) ) ) ) )", "obj1": 0.7969348659003831, "obj2": 0.08316557009293775}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + MRS ) ) ) / ACS ) - ( MDR - ( ( PN + FirstVNF_CPU ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server * Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "( Min( ( RRSe / MLU ) ,RCSe ) - ( ( Max( MUC,RMSe ) * Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) + ( RMSe + ( ( ( RMSe - ( MUR / RMSe ) ) + ( ( MUC / MUM ) + Min( ( CS / CS ) ,MUM ) ) ) / CS ) ) ) )", "obj1": 0.8371647509578544, "obj2": 0.06224442568150566}, {"determining": "( ( ( ( Const - MRS ) / CRS ) * FirstVNF_RAM ) - ( ( ( ( RRS * Min( FirstVNF_CPU ,ACS ) ) * ACS ) * ( FirstVNF_CPU / ACS ) ) / RRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( MUM * CS ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.7068965517241379, "obj2": 0.12044862329758743}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,Const ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),Min( Min( ( ( DS / RMSe ) - RMSe ) ,( MLU - DS ) ) ,MUR ) ) ) )", "obj1": 0.7337164750957854, "obj2": 0.11060508799583367}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * FirstVNF_Mem_Server ) - Min( DDR ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) / AMS ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( ( ACS * Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * ( CRS + Const ) ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( ( ( ( ( MUC * DS ) / ( MUC - MUM ) ) / ( DS + MUM ) ) / RMSe ) / ( Min( MLU ,RCSe ) - RCSe ) ) - RMSe ),( Max( MUR,RMSe ) * Min( CS ,RRSe ) ) ) )", "obj1": 0.764367816091954, "obj2": 0.0937642920615673}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ,Const ) ,( Min( FirstVNF_RAM ,( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / CRS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "Max( DS,( RCSe + ( Max( ( RCSe - RRSe ),RRSe ) / Max( Max( ( ( MUR * CS ) - RRSe ),( ( CS + CS ) * MUR ) ),( Max( MUR,RMSe ) * ( CS + CS ) ) ) ) ) )", "obj1": 0.9942528735632183, "obj2": 0.0017438978776377775}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ) / DDR ) - Min( ( FirstVNF_Mem / ( PN * BR ) ) ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * ( MLU / RRSe ) ) ) ) ) * RCSe ) )", "obj1": 0.9272030651340997, "obj2": 0.026868767122527424}, {"determining": "( ( AMS / RRS ) - Min( Min( FirstVNF_CPU ,( BR + FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( RCSe + RCSe ) ) + Max( Max( ( ( Min( DS ,CS ) / ( MUM / ( ( MUR * CS ) / ( DS * MUC ) ) ) ) * RCSe ),Max( MLU,RCSe ) ),Min( ( RRSe * MUR ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6896551724137931, "obj2": 0.13279656961679073}, {"determining": "( ( FirstVNF_CPU - ( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) / ACS ) - ( MDR - ( ( ARS * ( ( FirstVNF_Mem * FirstVNF_CPU ) * ACS ) ) / RRS ) ) ) ) / ( FirstVNF_CPU_Server / ( Min( RRS ,MRS ) - ( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe / Max( ( MUM / DS ),Max( RMSe,CS ) ) ) - ( ( ( ( RMSe * RMSe ) * Max( MLU,RCSe ) ) * Min( ( RRSe * DS ) ,( RMSe + MLU ) ) ) + ( RMSe + Min( ( ( RMSe - ( MUR / CS ) ) + ( ( MUC / MUM ) + Min( MUC ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.842911877394636, "obj2": 0.06029748638401152}, {"determining": "( ( ( PN * FirstVNF_CPU_Server ) * Min( PN ,( Min( DDR ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server * ( AMS * Const ) ) ) ) - ( Const / FirstVNF_RAM ) ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MLU ,Max( MLU,CS ) ) * ( RMSe * MLU ) ) / ( ( RMSe / MUC ) / ( RCSe / DS ) ) )", "obj1": 0.7471264367816092, "obj2": 0.10431811036909899}, {"determining": "( ( ( ( BR - BR ) * MRS ) - Min( PN ,AMS ) ) - ( ARS / ( ARS * CRS ) ) )", "choosing": "( ( ( ( ( ( RCSe / ( Max( MUR,MLU ) - CS ) ) / Max( DS,CS ) ) - ( ( ( RMSe + ( CS / MUM ) ) + RCSe ) / RMSe ) ) + Min( CS ,DS ) ) / MUR ) - Max( RMSe,RCSe ) )", "obj1": 0.9118773946360154, "obj2": 0.035947375929578806}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / MDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RRSe ) * ( CS + CS ) ) ) ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.7298850574712644, "obj2": 0.11302380357906133}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( FirstVNF_Mem / FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_RAM_Server / Const ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( ( Const / FirstVNF_RAM ),BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Min( FirstVNF_CPU ,BR ) ,Min( MRS ,MDR ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( Max( ( CS + MUC ),( RMSe - RCSe ) ) ,CS ) / MUR ) / ( RMSe + ( ( ( ( RRSe - MLU ) - ( MUR / RMSe ) ) + ( Min( MUC ,MUM ) + ( MUC / MUM ) ) ) / MLU ) ) )", "obj1": 0.8026819923371648, "obj2": 0.07893327483141081}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN / AMS ) ) - ( ( Max( ( ( DDR / FirstVNF_RAM_Server ) * FirstVNF_Mem ),FirstVNF_Mem ) * CRS ) / Min( ( BR / BR ) ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( Min( Min( MLU ,( Max( DS,( RMSe - DS ) ) / CS ) ) ,MLU ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.7030651340996169, "obj2": 0.123990641835066}, {"determining": "( ( ( PN / Min( Min( DDR ,( ( PN + FirstVNF_RAM ) * ( ( RRS + FirstVNF_CPU ) * Const ) ) ) ,( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / ARS ) ) - DDR ) ) )", "choosing": "( Max( Min( MLU ,RRSe ),( RMSe * MLU ) ) / ( RRSe + ( ( ( RMSe / CS ) * ( ( Max( Max( CS,MUC ),DS ) + ( RCSe * ( RRSe + RCSe ) ) ) * RRSe ) ) - CS ) ) )", "obj1": 0.7413793103448276, "obj2": 0.10540426450777751}, {"determining": "( ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_CPU ) - ( MDR * ( BR * ARS ) ) ) ) / Min( FirstVNF_CPU ,( ( Const + ( ( ( FirstVNF_Mem / ( PN * BR ) ) + FirstVNF_RAM ) / CRS ) ) - Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( ( MUM / DS ) - ( ( MUM / Max( Max( ( MLU * MLU ),( RRSe / DS ) ),MUC ) ) / CS ) ) / CS ) * Min( ( MLU / RRSe ) ,MLU ) )", "obj1": 0.946360153256705, "obj2": 0.01888115045557953}, {"determining": "( ( ( PN / ( Min( ( ( DDR / RRS ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( Min( ARS ,Max( Max( Max( ( Const / FirstVNF_RAM ),BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) * CRS ) / ( Min( ACS ,Max( ( ( AMS - ACS ) - ( Max( ACS,FirstVNF_Mem ) * FirstVNF_RAM ) ),FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( Min( ( Max( MLU,Min( MUM ,MUM ) ) * Min( ( ( ( MLU - CS ) + DS ) - Max( MUR,MUM ) ) ,( MLU + RCSe ) ) ) ,RMSe ),( ( RRSe + CS ) * MUR ) ) )", "obj1": 0.8793103448275862, "obj2": 0.046259139632708904}, {"determining": "( ( ( ARS * CRS ) / ( Min( CRS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) - ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) ) ) * Max( Max( ( Max( PN,( FirstVNF_RAM - ( FirstVNF_RAM * MDR ) ) ) - ( FirstVNF_RAM * Min( ACS ,ACS ) ) ),MRS ),MRS ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) / ( ( MUM * Min( RRSe ,( MLU * Min( MUR ,MUM ) ) ) ) / Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) ) ),RRSe ) / Min( Min( MUR ,RMSe ) ,( Min( RCSe ,( ( RMSe - RCSe ) + MUR ) ) / RCSe ) ) )", "obj1": 0.7241379310344828, "obj2": 0.11566349307421754}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "Min( ( Max( MUM,MUR ) - RMSe ) ,( ( ( ( ( MUM / Max( RCSe,RCSe ) ) / CS ) - ( CS + DS ) ) / CS ) * Min( RCSe ,MLU ) ) )", "obj1": 0.7049808429118773, "obj2": 0.12226511751889758}, {"determining": "( ( Min( ( MRS - ( ( FirstVNF_Mem_Server / ACS ) * FirstVNF_CPU ) ) ,ACS ) * ( ACS / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ARS - CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,Min( FirstVNF_RAM_Server ,ARS ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server / ARS ) ) ) ) )", "choosing": "( ( Max( CS,Max( MUC,Min( ( CS + MLU ) ,MUR ) ) ) * ( MUM / MUM ) ) / Max( ( ( CS + CS ) * ( ( MUR * MUM ) + ( ( RRSe / ( RCSe * ( MLU - DS ) ) ) + CS ) ) ),Min( ( RCSe - RRSe ) ,RCSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.06192611889944147}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU * ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( MRS + ARS ) - Min( ARS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "Max( DS,( RCSe + ( Max( ( RCSe - ( ( MUC * ( RRSe / RMSe ) ) - RRSe ) ),RRSe ) / Max( ( ( MUM / ( RCSe - Min( RCSe ,DS ) ) ) - RMSe ),Min( RCSe ,( ( MUM * RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.9233716475095786, "obj2": 0.028884208263232406}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * FirstVNF_CPU ) ) - ( ( ARS * ( Const / CRS ) ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,( ( ( FirstVNF_RAM_Server + RRS ) * FirstVNF_Mem_Server ) - ( Const / FirstVNF_RAM ) ) ) ) / DDR ) ) )", "choosing": "( Max( Min( ( ( ( CS + MUR ) / MUR ) / ( CS * MUC ) ) ,Min( RCSe ,MLU ) ),Min( MUR ,RCSe ) ) * ( ( ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * CS ) ) ) + RCSe ) ) + Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) ) / ( ( MUR * MUC ) + Min( RCSe ,MUM ) ) ) )", "obj1": 0.7203065134099617, "obj2": 0.11662163985801538}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * PN ) - ( ( Min( Const ,FirstVNF_RAM ) / MRS ) + MRS ) )", "choosing": "( ( ( RCSe * MUC ) * ( MUM * MUC ) ) - ( ( ( ( CS + Min( Max( MUM,( MUC + DS ) ) ,RCSe ) ) + DS ) * MLU ) / Max( RMSe,( MUM / MUC ) ) ) )", "obj1": 0.9099616858237548, "obj2": 0.03613553823966046}, {"determining": "( ( ( ARS / ( Min( ( AMS * FirstVNF_CPU ) ,Const ) / ( Const / FirstVNF_RAM ) ) ) * ( AMS * RRS ) ) - ( ( MRS + AMS ) + FirstVNF_Mem ) )", "choosing": "( ( MUC * CS ) * ( Min( Min( RRSe ,CS ) ,MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.7164750957854407, "obj2": 0.11813242538030118}, {"determining": "( ( BR + ( FirstVNF_RAM - BR ) ) - ( ( PN / Min( Min( DDR ,FirstVNF_CPU_Server ) ,( Const / MDR ) ) ) * ( PN * AMS ) ) )", "choosing": "( Max( ( RRSe - RCSe ),RRSe ) / Max( ( ( Min( ( RCSe - Min( CS ,MUR ) ) ,( RCSe / MUC ) ) + MUR ) * MUR ),( ( MUR * CS ) - Max( ( RCSe / MUM ),CS ) ) ) )", "obj1": 0.735632183908046, "obj2": 0.10869775309291826}, {"determining": "( ( ( PN / FirstVNF_CPU ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / ( MUM * Min( RRSe ,( MLU * RRSe ) ) ) ) ),RRSe ) / Min( Min( Min( RCSe ,MLU ) ,RMSe ) ,( Min( RCSe ,( ( RMSe - RCSe ) + MUR ) ) / RCSe ) ) )", "obj1": 0.9444444444444444, "obj2": 0.02089727431355004}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ,Const ) ,( Min( FirstVNF_RAM ,( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / CRS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "( Max( Min( ( MUR - ( ( Max( CS,DS ) / MUM ) / CS ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RMSe ) + ( ( ( ( RCSe / RRSe ) - ( MUM * CS ) ) - Min( RRSe ,( CS + MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.9904214559386973, "obj2": 0.0036126571290312263}, {"determining": "( ( ( ( ( MDR + FirstVNF_RAM ) + DDR ) / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ACS ) / FirstVNF_RAM ) ,FirstVNF_Mem ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) - ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( Min( Min( MLU ,( Max( DS,( RMSe - MLU ) ) * CS ) ) ,MLU ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.8812260536398467, "obj2": 0.04540224892122593}, {"determining": "( ( PN * ( ( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - ( ( ( FirstVNF_CPU - AMS ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) ) ) - ( CRS + Max( Max( Const,RRS ),Min( ( ( AMS - ACS ) - ( Max( ACS,Min( Const ,MRS ) ) * FirstVNF_RAM ) ) ,Min( ( MDR + ARS ) ,( FirstVNF_Mem_Server / Const ) ) ) ) ) )", "choosing": "Max( DS,( RCSe + ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( MUR,RMSe ) * ( CS + CS ) ) ) ) ) )", "obj1": 0.6724137931034483, "obj2": 0.16318865707178473}, {"determining": "( ( ( PN / ( Min( DDR ,( FirstVNF_Mem_Server * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( ( ( MDR / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ARS ) ) ) - ( ( ARS * CRS ) / ( Min( ARS ,Max( Max( Max( DDR,BR ),Min( PN ,FirstVNF_CPU ) ),( Max( BR,FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem ) ) ) ) / DDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( ( ( ( ( MUC * DS ) / ( MUC - MUM ) ) / ( DS + MUM ) ) / RMSe ) / ( Min( MLU ,RCSe ) - RCSe ) ) - RMSe ),( Max( MUR,RMSe ) * Min( CS ,RRSe ) ) ) )", "obj1": 0.8045977011494253, "obj2": 0.07812135197957826}, {"determining": "( ( PN * ( ( Min( FirstVNF_CPU_Server ,( Min( ACS ,RRS ) / FirstVNF_RAM ) ) / ( FirstVNF_CPU / ARS ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Const / FirstVNF_RAM ) )", "choosing": "( Max( Min( MLU ,RRSe ),RRSe ) * ( RRSe - RRSe ) )", "obj1": 0.9865900383141762, "obj2": 0.004334454779699649}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Const ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),( RRSe / CS ) ) / ( ( Min( Min( MLU ,( Max( DS,( RMSe - DS ) ) / CS ) ) ,MLU ) + DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.7452107279693486, "obj2": 0.10463971507948149}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / MDR ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - ( RRSe + DS ) ) ) - RMSe ),( Max( ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RRSe ) * ( CS + CS ) ) ) ),RMSe ) * ( CS + CS ) ) ) )", "obj1": 0.7394636015325671, "obj2": 0.1074215672838786}, {"determining": "( ( Max( ( CRS + ( Const / ( FirstVNF_Mem / Min( FirstVNF_CPU ,PN ) ) ) ),FirstVNF_Mem ) * ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - Min( Min( ACS ,Max( ( RRS / Const ),CRS ) ) ,( FirstVNF_RAM / AMS ) ) ) ) - ( FirstVNF_CPU - AMS ) )", "choosing": "( Max( MLU,( ( MUC / DS ) + MUM ) ) * ( MUR + ( CS * ( MUM / Max( ( DS + RCSe ),RRSe ) ) ) ) )", "obj1": 0.9846743295019157, "obj2": 0.004763226325240704}, {"determining": "( ( ( FirstVNF_Mem / ( Min( DDR ,( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Min( ( RRS / FirstVNF_CPU ) ,ARS ) ) ) - ( Const / FirstVNF_RAM ) ) ) * ( FirstVNF_Mem / Const ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU / ARS ) ) / DDR ) / FirstVNF_CPU ) ) / Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( ( RRSe / ( MLU * ( Min( MLU ,( RCSe * RMSe ) ) / MUR ) ) ) / RMSe )", "obj1": 0.8256704980842912, "obj2": 0.06973104937125423}, {"determining": "( Max( Max( ( CRS * ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_Mem ) ),( AMS * ( ( FirstVNF_Mem_Server - Max( AMS,( BR - ARS ) ) ) * FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM - MRS ) ) - ( ACS * PN ) )", "choosing": "( ( RCSe + Min( MUM ,( Max( MUR,( DS * ( ( RRSe / MUM ) / RMSe ) ) ) + Min( Max( MUM,MUC ) ,MUC ) ) ) ) - Max( ( RRSe * RRSe ),( ( CS + MUR ) / MUC ) ) )", "obj1": 0.9597701149425287, "obj2": 0.014300928987263558}, {"determining": "( ( PN * ( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) - Min( ACS ,( FirstVNF_CPU / ACS ) ) ) ) - ( MRS + MRS ) )", "choosing": "( ( MUM * ( ( Min( CS ,MUR ) / ( Min( ( MUR - RMSe ) ,Min( MUR ,MUR ) ) / ( MUM * Min( RRSe ,( MLU * RRSe ) ) ) ) ) * RRSe ) ) - Max( RMSe,RCSe ) )", "obj1": 0.9252873563218391, "obj2": 0.028726442108904775}, {"determining": "( ( ( PN / ( Min( DDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( FirstVNF_CPU / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( ARS ,Const ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),RRSe ) / Min( Min( MUR ,RMSe ) ,Max( ( MUM / ( RCSe - ( RRSe + DS ) ) ),Min( Min( ( ( DS / RMSe ) - RMSe ) ,( MLU - DS ) ) ,MUR ) ) ) )", "obj1": 0.7988505747126436, "obj2": 0.08125616188709}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( ( Min( Max( MDR,MRS ) ,( FirstVNF_CPU / ARS ) ) / DDR ) ,Const ) ,( Min( FirstVNF_RAM ,( Min( DDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) * ( Min( ( ARS / CRS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Max( AMS,( BR - ARS ) ) ) ) ) ) + MRS ) )", "choosing": "Max( DS,( Max( MUR,( DS * ( ( RRSe / MUM ) / RMSe ) ) ) + Min( Max( MUM,MUC ) ,MUC ) ) )", "obj1": 0.9923371647509579, "obj2": 0.0028600635204548124}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( Const ,FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( Min( ( MUR - ( ( Max( CS,DS ) / MUM ) / CS ) ) ,Min( RCSe ,MLU ) ),Min( ( ( Min( ( Max( RRSe,CS ) - RMSe ) ,RCSe ) - RRSe ) * MUM ) ,MUM ) ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RMSe ) + ( ( ( ( RCSe / RRSe ) - ( MUM * CS ) ) - Min( RRSe ,( CS + MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7260536398467433, "obj2": 0.11435693293869617}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * PN ) - ( Min( Min( FirstVNF_RAM ,Min( Min( FirstVNF_Mem_Server ,Const ) ,DDR ) ) ,( Min( FirstVNF_Mem ,( ARS * CRS ) ) * ( Min( ( ARS / CRS ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + Min( RRS ,FirstVNF_RAM ) ) ) ) ) + MRS ) )", "choosing": "Max( DS,( RCSe + ( Max( ( RCSe - RRSe ),RRSe ) / Max( ( ( MUM / ( RCSe - Min( RCSe ,DS ) ) ) - RMSe ),Min( RCSe ,( ( MUM * RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.9616858237547893, "obj2": 0.013512756088755188}, {"determining": "( ( ( PN / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( ( Const / FirstVNF_RAM ) + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Min( ( FirstVNF_CPU / Max( ARS,RRS ) ) ,( Min( Max( FirstVNF_RAM,DDR ) ,( FirstVNF_CPU / ARS ) ) / ARS ) ) / Max( Min( Max( Min( FirstVNF_Mem_Server ,Const ),( ( CRS + ARS ) - Min( CRS ,FirstVNF_Mem ) ) ) ,( PN + MDR ) ),( FirstVNF_Mem_Server * ARS ) ) ) ) )", "choosing": "( Max( ( RCSe - ( ( MLU + ( RMSe * Min( Min( RRSe ,MUC ) ,( MLU + MLU ) ) ) ) / ( RMSe + MLU ) ) ),RRSe ) / Max( ( MUR - RMSe ),( Max( MUR,RMSe ) * ( CS + ( CS / MUC ) ) ) ) )", "obj1": 0.9731800766283525, "obj2": 0.00975769111416397}, {"determining": "( ( ( PN / ( Min( MDR ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_RAM ) ) ) * ( PN * AMS ) ) - ( ( ARS * CRS ) / ( Max( Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN + MDR ) ),Max( MRS,( Max( MRS,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * ARS ) ) ) / DDR ) ) )", "choosing": "( Max( ( ( ( MUM / Max( CS,MUC ) ) / CS ) - ( ( Max( MUM,( MLU + CS ) ) - ( Min( DS ,MUR ) + MUR ) ) - ( RRSe / ( MUC / ( MUC + RRSe ) ) ) ) ),RRSe ) * ( ( Min( Max( Min( MLU ,MUC ),MUC ) ,MLU ) + ( ( MLU - RCSe ) + ( ( Min( RRSe ,( CS + MUC ) ) - ( ( RCSe / RRSe ) - ( MUM * MUC ) ) ) + RCSe ) ) ) / Min( Max( MUR,( MLU - MUM ) ) ,DS ) ) )", "obj1": 0.7183908045977011, "obj2": 0.11754513169442417}, {"determining": "( ( ( PN * AMS ) * ( MRS / ( Min( MDR ,FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU / PN ) + Const ) ) ) ) - ( ( ARS * CRS ) / ( Min( ACS ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) / DDR ) ) )", "choosing": "( Max( MUM,Min( MUC ,RRSe ) ) / Max( DS,MUC ) )", "obj1": 0.7279693486590039, "obj2": 0.11391019854446555}]}