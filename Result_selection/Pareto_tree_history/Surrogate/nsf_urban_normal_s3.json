{"1": [{"determining": "Max( ( BR - AMS ),( FirstVNF_CPU_Server + CRS ) )", "choosing": "( ( RCSe * MUM ) + ( MUM * RMSe ) )", "obj1": 0.3346938775510204, "obj2": 0.6590364702896296}, {"determining": "Min( ( DDR - ARS ) ,( ACS + ( FirstVNF_CPU_Server - ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR - CS ) - ( MLU / ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,RRSe ) )", "obj1": 0.5938775510204082, "obj2": 0.39206415828148433}, {"determining": "( Min( ACS ,MDR ) / ( FirstVNF_CPU_Server / ( FirstVNF_Mem - RRS ) ) )", "choosing": "Min( ( MLU * ( MUM + ( RCSe / ( ( Max( Min( MUC ,DS ),MUR ) - MUM ) + MLU ) ) ) ) ,( MUC * RRSe ) )", "obj1": 0.9163265306122449, "obj2": 0.0918525508331584}, {"determining": "( Min( DDR ,( Min( Max( DDR,FirstVNF_CPU_Server ) ,( FirstVNF_RAM / Const ) ) * MDR ) ) / ( FirstVNF_Mem * FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + RMSe ) * Max( Max( MLU,( ( ( MUR * MLU ) * MUM ) / RMSe ) ),MUC ) )", "obj1": 0.3306122448979592, "obj2": 0.6751470585309194}, {"determining": "( ( Min( FirstVNF_Mem ,CRS ) * DDR ) - ( AMS - FirstVNF_CPU ) )", "choosing": "Min( ( RMSe * ( Max( ( MUR * MLU ),MUR ) + ( RMSe - MUM ) ) ) ,( RCSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,Max( AMS,( MRS / Max( ( ARS + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + ( PN * Min( ( AMS / ARS ) ,( FirstVNF_Mem_Server - RRS ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / RMSe ),Max( RCSe,MLU ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "Min( ( AMS / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "Max( ( DS - MLU ),Min( CS ,DS ) )", "obj1": 0.4448979591836735, "obj2": 0.5406150177557627}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) * ( CRS * MRS ) )", "choosing": "Max( ( DS + MUC ),( CS - MUC ) )", "obj1": 0.3979591836734694, "obj2": 0.5978008491290548}, {"determining": "( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUM + MLU ) / Min( MLU ,MUR ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "( Max( FirstVNF_CPU_Server,AMS ) - Min( AMS ,ACS ) )", "choosing": "( ( MUR - CS ) * Max( MUR,RCSe ) )", "obj1": 0.32448979591836735, "obj2": 0.6780586609594048}, {"determining": "( ( Const / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RRSe ,MLU ),( MLU * CS ) )", "obj1": 0.3693877551020408, "obj2": 0.6218162603270385}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( Min( ( Max( ( DDR + FirstVNF_CPU_Server ),RRS ) + ARS ) ,( BR * ACS ) ) / Min( PN ,ACS ) ) )", "choosing": "Max( ( CS * DS ),Min( ( MLU + ( ( CS * RRSe ) + RCSe ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - DDR ) )", "choosing": "( ( RMSe - DS ) / ( DS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) - ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Min( ( Min( ( ( DS + MLU ) - ( CS / MUC ) ) ,( ( CS * RRSe ) + ( MUR * MUR ) ) ) / MUM ) ,( DS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( ARS / MDR ),( FirstVNF_CPU_Server + CRS ) ),( ( RRS - ACS ) - ( ARS / FirstVNF_CPU ) ) )", "choosing": "( Min( RRSe ,Max( RMSe,CS ) ) + ( Max( MUM,RCSe ) + RMSe ) )", "obj1": 0.336734693877551, "obj2": 0.654787881252262}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.10204081632653061, "obj2": 0.892233646563153}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * DS ) * ( ( RCSe * Max( Min( Max( RCSe,( Max( MUM,MUM ) + MUR ) ) ,MUM ),Max( RRSe,( MLU * ( MUM + RCSe ) ) ) ) ) * ( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "( ( ( BR / CRS ) + Max( FirstVNF_Mem,CRS ) ) - ( ( ACS * MRS ) / ( FirstVNF_CPU_Server / Const ) ) )", "choosing": "( Max( Max( RRSe,MUC ),RCSe ) * ( ( MUM + MUR ) + RMSe ) )", "obj1": 0.3816326530612245, "obj2": 0.6200424044294783}, {"determining": "( ( Max( FirstVNF_RAM_Server,CRS ) - ( ARS - MRS ) ) * ( Min( AMS ,FirstVNF_RAM ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( DS / RCSe ) ) + Min( Max( RCSe,RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.3081632653061224, "obj2": 0.6847460463123091}, {"determining": "Min( Min( Const ,Max( RRS,Max( DDR,MRS ) ) ) ,( ( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( MUM - DS ) ),Min( ( ( RMSe - Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.605812773292718}, {"determining": "( ( Max( DDR,ARS ) - ( BR * AMS ) ) * ( FirstVNF_Mem / CRS ) )", "choosing": "( Max( ( MLU - CS ),( MUM - DS ) ) + ( ( Min( ( ( ( ( CS / RMSe ) - RRSe ) * Max( RRSe,RCSe ) ) * DS ) ,MLU ) * MLU ) * MUR ) )", "obj1": 0.1653061224489796, "obj2": 0.8421238237539921}, {"determining": "( ( Max( ARS,MRS ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( Max( CRS,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Min( Min( RRSe ,RRSe ) ,Max( MUR,CS ) ) ,( ( RMSe / MUR ) / Max( MLU,DS ) ) )", "obj1": 0.673469387755102, "obj2": 0.33316883288870697}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_RAM * ACS ) ) * ( ( FirstVNF_Mem + ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR + RCSe ),Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUM - Max( DS,CS ) ) ) / MUR ) ) )", "obj1": 0.6959183673469388, "obj2": 0.31072656104893676}, {"determining": "( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) )", "choosing": "( Max( Min( MLU ,MLU ),( RCSe + RCSe ) ) + ( Max( RRSe,DS ) / ( MUM - MUC ) ) )", "obj1": 0.8693877551020408, "obj2": 0.1479573419009412}, {"determining": "( ( BR - FirstVNF_Mem ) / ( Min( PN ,FirstVNF_RAM ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( Max( RCSe,( MUR * RMSe ) ) ,( ( CS * RCSe ) - ( RCSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + FirstVNF_RAM ) * ( ACS * MRS ) )", "choosing": "( Max( ( MUR * RRSe ),Max( MUR,MUC ) ) * ( DS + RRSe ) )", "obj1": 0.22653061224489796, "obj2": 0.7509165061698968}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) )", "choosing": "( Max( ( DS + ( RMSe / MUC ) ),( MLU / MUR ) ) + ( ( DS * CS ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * CRS ) - ( BR * ( ACS / Const ) ) )", "choosing": "( Min( ( RMSe + MUC ) ,Max( DS,DS ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MRS ,AMS ),Max( MRS,MDR ) )", "choosing": "( ( ( MLU + MUC ) + ( RRSe * CS ) ) / ( ( MLU - MUM ) + Min( MUC ,CS ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6991426287800024}, {"determining": "( ( ( Min( FirstVNF_Mem ,ACS ) - ( DDR * FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server / AMS ) + ( FirstVNF_RAM_Server + BR ) ) ) - Min( Max( ( ACS - MRS ),( RRS * MRS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - Max( Const,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( ( RRSe * RMSe ) / Min( DS ,CS ) ) ,( Max( MUC,RMSe ) + Min( CS ,RRSe ) ) ) ,( ( ( MUC - RCSe ) - ( RRSe - RCSe ) ) / ( ( MLU + DS ) + Max( MUM,MUC ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.6469579654834131}, {"determining": "Min( ( FirstVNF_CPU_Server * MRS ) ,( PN * ARS ) )", "choosing": "( ( ( Max( CS,MUM ) + Min( DS ,MUC ) ) * ( Min( MUC ,MLU ) + ( CS - MUR ) ) ) * ( ( Min( RRSe ,MLU ) / Min( RCSe ,MLU ) ) / ( Min( RCSe ,RMSe ) - ( MUC / RRSe ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7954630799142633}, {"determining": "( Max( Max( DDR,DDR ),FirstVNF_Mem ) - ( BR + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RCSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( Const + ACS ) ) ) )", "choosing": "( ( ( ( RRSe + DS ) + ( RCSe + MUM ) ) + ( Min( RCSe ,MUC ) / ( RRSe / CS ) ) ) + ( ( ( MUM * CS ) - Max( RMSe,MUM ) ) / ( Max( MUC,DS ) - ( RCSe - RCSe ) ) ) )", "obj1": 0.8448979591836735, "obj2": 0.19211472606195126}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) * ( DDR + FirstVNF_CPU_Server ) ) ,Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) ,Max( Min( ( ACS - ACS ) ,Min( FirstVNF_Mem ,RRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,ARS ) - Max( ARS,Const ) ) * Max( ( FirstVNF_Mem_Server * MRS ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) * Max( Min( Min( BR ,FirstVNF_RAM_Server ) ,( BR - FirstVNF_Mem ) ),( ( PN * FirstVNF_Mem_Server ) + ( ACS + CRS ) ) ) )", "choosing": "( Max( MUM,DS ) * ( ( MUM / MUM ) - RCSe ) )", "obj1": 0.2571428571428571, "obj2": 0.7508351436360865}, {"determining": "( ( ( ( CRS - RRS ) - ( AMS * ACS ) ) * Max( ( FirstVNF_Mem / BR ),( DDR - MDR ) ) ) - Max( ( Max( AMS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server + CRS ) ),Min( ( Const / BR ) ,( Const + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) + Max( RMSe,MUR ) ) + ( Min( MLU ,CS ) * ( MUM - MUC ) ) ) * ( ( ( CS + RRSe ) * ( MLU - MUC ) ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( ARS * AMS ) ) - Max( Min( ( PN * AMS ) ,Min( ( ARS / MRS ) ,( DDR + DDR ) ) ),Min( ( PN - BR ) ,Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR * ( ( RCSe - CS ) / Max( DS,( ( ( RRSe - MUM ) / Min( CS ,DS ) ) - DS ) ) ) ) ),( RCSe - ( MUR - MLU ) ) )", "obj1": 0.9122448979591836, "obj2": 0.09504996407024868}, {"determining": "( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ) * ( ( Min( MUM ,DS ) + ( MUR * RRSe ) ) * ( Max( CS,CS ) + ( RMSe / MUR ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.6203261845314427}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) - ( ( Max( MDR,FirstVNF_CPU_Server ) * Max( PN,PN ) ) - ( ( MDR / RRS ) * Max( Min( ( CRS - BR ) ,FirstVNF_RAM ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MUM,( ( ( MUR - MUR ) / DS ) + MUM ) ),( MLU - RRSe ) ) + ( ( MLU + RCSe ) / ( MLU - RMSe ) ) ) + ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( RRS * FirstVNF_Mem ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( DS / MUM ) ) * ( ( MUC - RMSe ) / ( MUC / RRSe ) ) ) * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.9571428571428572, "obj2": 0.04663263611104716}, {"determining": "( ( Min( ( CRS - ACS ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) / ( ( BR / MRS ) * ( FirstVNF_CPU_Server - MDR ) ) ) * ( ( ( BR - FirstVNF_CPU_Server ) / ( BR + PN ) ) * Max( CRS,AMS ) ) )", "choosing": "Min( ( RRSe - Min( ( MUR + RMSe ) ,CS ) ) ,( ( DS / RCSe ) * Max( MLU,( MUC - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,ARS ) ,Min( ( MRS / ( DDR - RRS ) ) ,ACS ) )", "choosing": "Max( ( ( ( MUC - MUC ) * DS ) - ( MLU * RRSe ) ),Max( RRSe,MLU ) )", "obj1": 0.2163265306122449, "obj2": 0.7806826677402376}, {"determining": "( Max( ACS,ARS ) * ( ( FirstVNF_Mem / ( AMS * ( Max( FirstVNF_RAM,CRS ) * ACS ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - Min( MLU ,Min( Max( MUC,( Max( ( RRSe - DS ),MUC ) * Max( MUC,RCSe ) ) ) ,Min( RMSe ,( DS - RCSe ) ) ) ) ) * ( Min( Min( DS ,RMSe ) ,Min( MUR ,MLU ) ) * ( ( MUC / MLU ) + ( RMSe + DS ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.6237292227112601}, {"determining": "( ( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( MUC + MLU ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.09592332498085666}, {"determining": "Min( Max( ( ( RRS * BR ) * Min( ACS ,AMS ) ),( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,( Max( Min( MDR ,FirstVNF_Mem ),Max( DDR,ARS ) ) * ( ( FirstVNF_Mem_Server - BR ) - ( ACS / DDR ) ) ) )", "choosing": "( ( MUR - CS ) / Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Max( ARS,( Min( MDR ,( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) ) ) / Max( FirstVNF_RAM,CRS ) )", "choosing": "( ( Min( ( RCSe - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.8061224489795918, "obj2": 0.1934200375120312}, {"determining": "( Max( DDR,( ( BR * DDR ) - PN ) ) / ( ( ( FirstVNF_RAM - AMS ) / BR ) * MDR ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( Min( ( ( ( ( Max( MLU,RRSe ) - Min( MLU ,MUC ) ) * Min( Max( MUM,RRSe ) ,CS ) ) - RRSe ) * MUC ) ,( RMSe + MUM ) ) / Max( Max( MLU,MUM ),( MLU + DS ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.7250194702455812}], "2": [{"determining": "Min( ( DDR - ARS ) ,( ACS + ( FirstVNF_CPU_Server - ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR - CS ) - ( MLU / ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,RRSe ) )", "obj1": 0.5938775510204082, "obj2": 0.39206415828148433}, {"determining": "( Min( ACS ,MDR ) / ( FirstVNF_CPU_Server / ( FirstVNF_Mem - RRS ) ) )", "choosing": "Min( ( MLU * ( MUM + ( RCSe / ( ( Max( Min( MUC ,DS ),MUR ) - MUM ) + MLU ) ) ) ) ,( MUC * RRSe ) )", "obj1": 0.9163265306122449, "obj2": 0.0918525508331584}, {"determining": "( ( Min( FirstVNF_Mem ,CRS ) * DDR ) - ( AMS - FirstVNF_CPU ) )", "choosing": "Min( ( RMSe * ( Max( ( MUR * MLU ),MUR ) + ( RMSe - MUM ) ) ) ,( RCSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,Max( AMS,( MRS / Max( ( ARS + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + ( PN * Min( ( AMS / ARS ) ,( FirstVNF_Mem_Server - RRS ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / RMSe ),Max( RCSe,MLU ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "Min( ( AMS / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "Max( ( DS - MLU ),Min( CS ,DS ) )", "obj1": 0.4448979591836735, "obj2": 0.5406150177557627}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) * ( CRS * MRS ) )", "choosing": "Max( ( DS + MUC ),( CS - MUC ) )", "obj1": 0.3979591836734694, "obj2": 0.5978008491290548}, {"determining": "( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUM + MLU ) / Min( MLU ,MUR ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "( ( Const / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RRSe ,MLU ),( MLU * CS ) )", "obj1": 0.3693877551020408, "obj2": 0.6218162603270385}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( Min( ( Max( ( DDR + FirstVNF_CPU_Server ),RRS ) + ARS ) ,( BR * ACS ) ) / Min( PN ,ACS ) ) )", "choosing": "Max( ( CS * DS ),Min( ( MLU + ( ( CS * RRSe ) + RCSe ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - DDR ) )", "choosing": "( ( RMSe - DS ) / ( DS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) - ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Min( ( Min( ( ( DS + MLU ) - ( CS / MUC ) ) ,( ( CS * RRSe ) + ( MUR * MUR ) ) ) / MUM ) ,( DS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.10204081632653061, "obj2": 0.892233646563153}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * DS ) * ( ( RCSe * Max( Min( Max( RCSe,( Max( MUM,MUM ) + MUR ) ) ,MUM ),Max( RRSe,( MLU * ( MUM + RCSe ) ) ) ) ) * ( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "( ( ( BR / CRS ) + Max( FirstVNF_Mem,CRS ) ) - ( ( ACS * MRS ) / ( FirstVNF_CPU_Server / Const ) ) )", "choosing": "( Max( Max( RRSe,MUC ),RCSe ) * ( ( MUM + MUR ) + RMSe ) )", "obj1": 0.3816326530612245, "obj2": 0.6200424044294783}, {"determining": "( ( Max( FirstVNF_RAM_Server,CRS ) - ( ARS - MRS ) ) * ( Min( AMS ,FirstVNF_RAM ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( DS / RCSe ) ) + Min( Max( RCSe,RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.3081632653061224, "obj2": 0.6847460463123091}, {"determining": "Min( Min( Const ,Max( RRS,Max( DDR,MRS ) ) ) ,( ( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( MUM - DS ) ),Min( ( ( RMSe - Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.605812773292718}, {"determining": "( ( Max( DDR,ARS ) - ( BR * AMS ) ) * ( FirstVNF_Mem / CRS ) )", "choosing": "( Max( ( MLU - CS ),( MUM - DS ) ) + ( ( Min( ( ( ( ( CS / RMSe ) - RRSe ) * Max( RRSe,RCSe ) ) * DS ) ,MLU ) * MLU ) * MUR ) )", "obj1": 0.1653061224489796, "obj2": 0.8421238237539921}, {"determining": "( ( Max( ARS,MRS ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( Max( CRS,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Min( Min( RRSe ,RRSe ) ,Max( MUR,CS ) ) ,( ( RMSe / MUR ) / Max( MLU,DS ) ) )", "obj1": 0.673469387755102, "obj2": 0.33316883288870697}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_RAM * ACS ) ) * ( ( FirstVNF_Mem + ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR + RCSe ),Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUM - Max( DS,CS ) ) ) / MUR ) ) )", "obj1": 0.6959183673469388, "obj2": 0.31072656104893676}, {"determining": "( ( BR - FirstVNF_Mem ) / ( Min( PN ,FirstVNF_RAM ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( Max( RCSe,( MUR * RMSe ) ) ,( ( CS * RCSe ) - ( RCSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + FirstVNF_RAM ) * ( ACS * MRS ) )", "choosing": "( Max( ( MUR * RRSe ),Max( MUR,MUC ) ) * ( DS + RRSe ) )", "obj1": 0.22653061224489796, "obj2": 0.7509165061698968}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) )", "choosing": "( Max( ( DS + ( RMSe / MUC ) ),( MLU / MUR ) ) + ( ( DS * CS ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * CRS ) - ( BR * ( ACS / Const ) ) )", "choosing": "( Min( ( RMSe + MUC ) ,Max( DS,DS ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MRS ,AMS ),Max( MRS,MDR ) )", "choosing": "( ( ( MLU + MUC ) + ( RRSe * CS ) ) / ( ( MLU - MUM ) + Min( MUC ,CS ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6991426287800024}, {"determining": "( ( ( Min( FirstVNF_Mem ,ACS ) - ( DDR * FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server / AMS ) + ( FirstVNF_RAM_Server + BR ) ) ) - Min( Max( ( ACS - MRS ),( RRS * MRS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - Max( Const,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( ( RRSe * RMSe ) / Min( DS ,CS ) ) ,( Max( MUC,RMSe ) + Min( CS ,RRSe ) ) ) ,( ( ( MUC - RCSe ) - ( RRSe - RCSe ) ) / ( ( MLU + DS ) + Max( MUM,MUC ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.6469579654834131}, {"determining": "( Max( Max( DDR,DDR ),FirstVNF_Mem ) - ( BR + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RCSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) * ( DDR + FirstVNF_CPU_Server ) ) ,Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) ,Max( Min( ( ACS - ACS ) ,Min( FirstVNF_Mem ,RRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - RRS ) - ( AMS * ACS ) ) * Max( ( FirstVNF_Mem / BR ),( DDR - MDR ) ) ) - Max( ( Max( AMS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server + CRS ) ),Min( ( Const / BR ) ,( Const + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) + Max( RMSe,MUR ) ) + ( Min( MLU ,CS ) * ( MUM - MUC ) ) ) * ( ( ( CS + RRSe ) * ( MLU - MUC ) ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( ARS * AMS ) ) - Max( Min( ( PN * AMS ) ,Min( ( ARS / MRS ) ,( DDR + DDR ) ) ),Min( ( PN - BR ) ,Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR * ( ( RCSe - CS ) / Max( DS,( ( ( RRSe - MUM ) / Min( CS ,DS ) ) - DS ) ) ) ) ),( RCSe - ( MUR - MLU ) ) )", "obj1": 0.9122448979591836, "obj2": 0.09504996407024868}, {"determining": "( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ) * ( ( Min( MUM ,DS ) + ( MUR * RRSe ) ) * ( Max( CS,CS ) + ( RMSe / MUR ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.6203261845314427}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) - ( ( Max( MDR,FirstVNF_CPU_Server ) * Max( PN,PN ) ) - ( ( MDR / RRS ) * Max( Min( ( CRS - BR ) ,FirstVNF_RAM ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MUM,( ( ( MUR - MUR ) / DS ) + MUM ) ),( MLU - RRSe ) ) + ( ( MLU + RCSe ) / ( MLU - RMSe ) ) ) + ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - ACS ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) / ( ( BR / MRS ) * ( FirstVNF_CPU_Server - MDR ) ) ) * ( ( ( BR - FirstVNF_CPU_Server ) / ( BR + PN ) ) * Max( CRS,AMS ) ) )", "choosing": "Min( ( RRSe - Min( ( MUR + RMSe ) ,CS ) ) ,( ( DS / RCSe ) * Max( MLU,( MUC - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,ARS ) ,Min( ( MRS / ( DDR - RRS ) ) ,ACS ) )", "choosing": "Max( ( ( ( MUC - MUC ) * DS ) - ( MLU * RRSe ) ),Max( RRSe,MLU ) )", "obj1": 0.2163265306122449, "obj2": 0.7806826677402376}, {"determining": "( Max( ACS,ARS ) * ( ( FirstVNF_Mem / ( AMS * ( Max( FirstVNF_RAM,CRS ) * ACS ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - Min( MLU ,Min( Max( MUC,( Max( ( RRSe - DS ),MUC ) * Max( MUC,RCSe ) ) ) ,Min( RMSe ,( DS - RCSe ) ) ) ) ) * ( Min( Min( DS ,RMSe ) ,Min( MUR ,MLU ) ) * ( ( MUC / MLU ) + ( RMSe + DS ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.6237292227112601}, {"determining": "( ( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( MUC + MLU ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.09592332498085666}, {"determining": "Min( Max( ( ( RRS * BR ) * Min( ACS ,AMS ) ),( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,( Max( Min( MDR ,FirstVNF_Mem ),Max( DDR,ARS ) ) * ( ( FirstVNF_Mem_Server - BR ) - ( ACS / DDR ) ) ) )", "choosing": "( ( MUR - CS ) / Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Max( ARS,( Min( MDR ,( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) ) ) / Max( FirstVNF_RAM,CRS ) )", "choosing": "( ( Min( ( RCSe - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.8061224489795918, "obj2": 0.1934200375120312}, {"determining": "( Max( DDR,( ( BR * DDR ) - PN ) ) / ( ( ( FirstVNF_RAM - AMS ) / BR ) * MDR ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( Min( ( ( ( ( Max( MLU,RRSe ) - Min( MLU ,MUC ) ) * Min( Max( MUM,RRSe ) ,CS ) ) - RRSe ) * MUC ) ,( RMSe + MUM ) ) / Max( Max( MLU,MUM ),( MLU + DS ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.7250194702455812}, {"determining": "( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) )", "choosing": "( Max( MLU,( RCSe / MUR ) ) + Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( AMS + FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MUM + RRSe ) + Max( DS,DS ) ) + MUM ) ,( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_Mem * ( MDR * RRS ) ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "( Max( DS,MLU ) / Min( ( Max( MLU,RCSe ) / MUC ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * CRS ) - ( BR * ( ACS / Const ) ) )", "choosing": "( Min( ( RMSe + MUC ) ,Max( DS,DS ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * DS ) * ( ( RCSe * Max( Min( Max( RCSe,( Max( MUM,MUM ) + MUR ) ) ,MUM ),Max( RRSe,( MLU * ( MUM + RCSe ) ) ) ) ) * ( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) * Min( ( ARS + ( FirstVNF_RAM_Server - Min( Max( ( FirstVNF_Mem - ( FirstVNF_CPU + AMS ) ),( FirstVNF_RAM_Server + ( PN / ACS ) ) ) ,AMS ) ) ) ,( DDR - ARS ) ) )", "choosing": "Max( ( MUR + DS ),Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) / ( Max( RMSe,Min( Max( Min( ( DS / MUC ) ,RRSe ),( MUR * ( RCSe * RRSe ) ) ) ,( ( ( ( RCSe / MUM ) + Max( DS,MUR ) ) - RMSe ) + MUR ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MRS - DDR ),( FirstVNF_CPU + ( BR * ( ARS * ACS ) ) ) ) ,( ( ACS - FirstVNF_RAM_Server ) + Max( ( BR / CRS ),Const ) ) )", "choosing": "( Max( ( Max( MUM,MUM ) / ( MLU - CS ) ),MUM ) * ( ( ( MUM / MUC ) - ( RRSe + MUM ) ) / ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( DDR + BR ) ,DDR ) ,BR ) - ( AMS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( MLU ,( MUC + ( RRSe + RMSe ) ) ) - RMSe ) * DS ) - RMSe ) * ( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MRS - DDR ),( FirstVNF_CPU + RRS ) ) ,( ( ACS - FirstVNF_RAM_Server ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + MUM ) / ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - ACS ),CRS ) / Const )", "choosing": "( ( ( ( CS - RRSe ) / ( Min( ( RRSe * RMSe ) ,RMSe ) * DS ) ) / ( ( MUM / RCSe ) * ( MUC / CS ) ) ) - ( ( Min( DS ,RMSe ) + ( MUC + MLU ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.6313872833073685}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe - ( DS - RMSe ) ) * ( MUC / MUR ) )", "obj1": 0.8959183673469387, "obj2": 0.11427416214413087}, {"determining": "Min( Min( AMS ,MDR ) ,( Min( MRS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) ) )", "choosing": "Max( ( CS * DS ),( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,CRS ) - Max( RRS,PN ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( CS - MUC ) / Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MRS - DDR ),( FirstVNF_CPU + FirstVNF_RAM ) ) ,( Max( Max( ( ( FirstVNF_Mem_Server + ARS ) * DDR ),Min( FirstVNF_CPU ,CRS ) ),FirstVNF_CPU ) - ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC - MUC ),( CS + MUM ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - Max( ( Max( DDR,RRS ) / ( ( RRS / BR ) * MDR ) ),FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) / Max( CRS,Max( FirstVNF_CPU,BR ) ) )", "choosing": "( ( ( MUR - MUM ) / ( ( Min( RRSe ,( CS + RMSe ) ) - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( RRSe / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.09887166117904468}, {"determining": "Min( ( ( DDR * FirstVNF_Mem_Server ) / BR ) ,( Max( ACS,FirstVNF_RAM_Server ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MUR - Max( ( MUC / CS ),( ( CS + MUC ) * DS ) ) ),( ( MUM - DS ) - RRSe ) ) + Min( DS ,( ( RCSe + MLU ) / RMSe ) ) ) * ( ( CS - MUC ) / ( MUR * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,ACS ) ,( ( ( FirstVNF_RAM * Max( CRS,CRS ) ) - Max( RRS,MRS ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( MUC,Min( MUC ,CS ) ) - RMSe ),( ( CS * Min( CS ,Min( RMSe ,( DS * ( MUM - Min( RMSe ,MUM ) ) ) ) ) ) / ( MUM - DS ) ) )", "obj1": 0.2612244897959184, "obj2": 0.7107391692616909}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( CRS * ( FirstVNF_RAM - ( Min( Max( BR,( ARS * MRS ) ) ,ARS ) - ( FirstVNF_RAM_Server - AMS ) ) ) ) )", "choosing": "Max( ( MUM + CS ),( DS * ( Min( RMSe ,( RMSe + RCSe ) ) + RRSe ) ) )", "obj1": 0.7428571428571429, "obj2": 0.2919076387693137}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( Max( Const,Min( AMS ,ACS ) ) / FirstVNF_CPU_Server ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( MUM - DS ) ),Min( ( ( RMSe - Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.23673469387755103, "obj2": 0.7484026229600794}, {"determining": "Min( Min( Const ,Max( RRS,Max( DDR,MRS ) ) ) ,( ( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( MUM - DS ) ),Min( ( ( RMSe - Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.23673469387755103, "obj2": 0.7484026229600794}, {"determining": "Min( ( BR * ACS ) ,( ( ACS - FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( ( ( ( ( DS - MLU ) * RCSe ) / Max( MUC,MUR ) ) / ( ( MUR * RMSe ) * Min( CS ,MLU ) ) ) - MUC ) / Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,( ( BR * ( ACS / Const ) ) / Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,DS ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.02343628421188313}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / ACS ) ),( DDR / PN ) )", "choosing": "( ( ( Max( CS,RCSe ) + Max( MUM,MLU ) ) * ( Max( DS,RMSe ) / Min( MUC ,MLU ) ) ) - ( ( Min( DS ,RMSe ) / ( DS - RRSe ) ) / ( ( MUM - RMSe ) * ( MUM / DS ) ) ) )", "obj1": 0.21428571428571427, "obj2": 0.7890650243452066}, {"determining": "( ( Max( ARS,BR ) - ( AMS * BR ) ) * ( ( ( Min( ( ( FirstVNF_CPU_Server - CRS ) - Max( MRS,( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,BR ) + FirstVNF_Mem ) + PN ) / Max( DDR,BR ) ) )", "choosing": "( ( ( MUR - ( MUM - DS ) ) * MUR ) + ( ( CS * ( Min( MUC ,MUR ) + RMSe ) ) / ( MLU - CS ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8560819361250306}, {"determining": "( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( AMS - FirstVNF_CPU_Server ) ),FirstVNF_Mem ) * Min( ACS ,Const ) )", "choosing": "Min( Min( CS ,( MUC * DS ) ) ,( Max( ( MUM + MLU ),RMSe ) + Max( ( RMSe * RCSe ),( RMSe / MLU ) ) ) )", "obj1": 0.4142857142857143, "obj2": 0.583401077590049}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Min( AMS ,FirstVNF_RAM ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( RCSe,RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.46530612244897956, "obj2": 0.5186632559911997}, {"determining": "Min( ( DDR - ( MRS / ( ARS * Min( ( ( ( FirstVNF_CPU_Server * ACS ) * FirstVNF_Mem ) * MRS ) ,( Min( DDR ,RRS ) + BR ) ) ) ) ) ,Min( CRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUR ,( CS + MUC ) ) - ( RCSe + ( Max( ( RCSe / DS ),RRSe ) * MUM ) ) ) - ( MLU / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,BR ) ,( ( ( FirstVNF_CPU + PN ) / Max( DDR,BR ) ) + Min( FirstVNF_Mem_Server ,( AMS * AMS ) ) ) )", "choosing": "Max( ( ( Max( MUC,( ( DS / MUM ) / Max( ( CS * Min( RMSe ,MLU ) ),Max( MUM,MUC ) ) ) ) - DS ) / ( MUC * RRSe ) ),MLU )", "obj1": 0.24489795918367346, "obj2": 0.7361286305257915}, {"determining": "Min( Min( ( FirstVNF_Mem_Server - ( CRS * CRS ) ) ,( MDR + FirstVNF_RAM ) ) ,Max( ( PN + FirstVNF_RAM_Server ),Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( CS,CS ) * ( RRSe + RCSe ) ) ,Min( ( MLU + RRSe ) ,Min( Min( Max( MUM,( MUC + MUR ) ) ,( Min( RCSe ,( ( RMSe - DS ) / RMSe ) ) + CS ) ) ,MLU ) ) )", "obj1": 0.22040816326530613, "obj2": 0.779378110778809}, {"determining": "Max( Min( MRS ,MDR ),Max( MRS,MDR ) )", "choosing": "( ( ( MLU + MUC ) + ( RRSe * ( MLU - MUM ) ) ) / ( ( MLU - MUM ) + Min( MUC ,CS ) ) )", "obj1": 0.2857142857142857, "obj2": 0.7001062074021767}, {"determining": "( Min( ( FirstVNF_CPU_Server * MRS ) ,( PN * ARS ) ) - ( ( Max( FirstVNF_CPU_Server,MDR ) + Max( PN,PN ) ) - ( ( RRS / ( ARS / FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( RRSe + RMSe ) ,( MLU - MUM ) ) + ( ( MLU - MUC ) / ( MLU + RCSe ) ) ) + ( ( Max( MUR,MUM ) + ( ( ( Max( CS,MUM ) + Min( DS ,MUC ) ) * ( Min( MUC ,MLU ) + ( CS - MUR ) ) ) * ( ( Min( RRSe ,MLU ) / Min( MLU ,RCSe ) ) / ( Min( RCSe ,RMSe ) - ( MUC / RRSe ) ) ) ) ) + ( ( Max( CS,( RMSe / MUC ) ) * RCSe ) * ( MUR * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MRS - DDR ),( FirstVNF_CPU + RRS ) ) ,( ( ACS - FirstVNF_RAM_Server ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC / MUM ) ,( DS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( ( FirstVNF_Mem_Server - PN ) + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - ( Max( MUR,MLU ) * ( MUM + ( ( MUC - ( ( RRSe + DS ) / ( MUM * CS ) ) ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - BR ) / ( Max( Const,MRS ) / FirstVNF_Mem_Server ) ) + Min( RRS ,( FirstVNF_RAM * PN ) ) )", "choosing": "Max( ( CS * DS ),( Max( Max( RRSe,( Max( MLU,( ( RCSe + MLU ) + RMSe ) ) + DS ) ),DS ) + CS ) )", "obj1": 0.9224489795918367, "obj2": 0.0838598463660866}, {"determining": "( ( ( ( PN * FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) / ( MRS - PN ) ) + Max( ACS,MRS ) )", "choosing": "( Max( Min( MLU ,MLU ),( RCSe + RCSe ) ) + ( Max( MUM,( ( ( CS * ( MLU * ( DS + CS ) ) ) * RRSe ) / RCSe ) ) / ( MUM - MUC ) ) )", "obj1": 0.8693877551020408, "obj2": 0.14648088919496544}, {"determining": "( ( FirstVNF_RAM / ( RRS - CRS ) ) / ( FirstVNF_CPU_Server / AMS ) )", "choosing": "( Min( CS ,MUR ) / Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ACS ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( ( Min( RRSe ,MUR ) - Min( RCSe ,DS ) ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.8224489795918367, "obj2": 0.17351011727907822}, {"determining": "Max( Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS / FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( MUR + DS ) / CS ) ) * Max( ( RCSe * ( RCSe / Max( RRSe,MUC ) ) ),MUM ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.6540808353836052}, {"determining": "( Min( ACS ,MDR ) / ( FirstVNF_CPU_Server / ( FirstVNF_Mem - RRS ) ) )", "choosing": "Min( ( MLU * ( MUM + ( RCSe / ( ( Max( Min( MUC ,DS ),MUR ) - MUM ) + MLU ) ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / ( ( ( DDR + MDR ) + ( BR * FirstVNF_CPU ) ) / Const ) ) )", "choosing": "( Max( MLU,( RCSe / MUR ) ) + ( ( CS * RMSe ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,Min( FirstVNF_Mem ,MRS ) ) ,( DDR + RRS ) )", "choosing": "( Min( RCSe ,Min( MLU ,RRSe ) ) - ( RMSe / MLU ) )", "obj1": 0.22448979591836735, "obj2": 0.7781956042132008}, {"determining": "( Min( Max( ( MRS - DDR ),( FirstVNF_CPU + RRS ) ) ,( ( ACS - FirstVNF_RAM_Server ) - Max( Const,FirstVNF_CPU ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + MUM ) / ( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( CS - MUC ) / Min( MLU ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ACS ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM_Server,CRS ) ) + Max( Max( FirstVNF_CPU_Server,Const ),Min( MDR ,ARS ) ) )", "choosing": "Min( ( ( MLU + MUM ) / ( CS / MLU ) ) ,( RCSe / ( MUM + ( RMSe / MLU ) ) ) )", "obj1": 0.18979591836734694, "obj2": 0.7904241914531991}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( DDR / Max( ARS,Min( Min( FirstVNF_CPU_Server ,Max( RRS,FirstVNF_CPU_Server ) ) ,CRS ) ) ) )", "choosing": "( Min( Max( ( MLU - ( RRSe / RRSe ) ),RCSe ) ,( RRSe / MLU ) ) * ( DS / RRSe ) )", "obj1": 0.1510204081632653, "obj2": 0.850110166413781}], "3": [{"determining": "Min( MDR ,( ( ACS - FirstVNF_RAM_Server ) - ( Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) / CRS ),( CRS / ACS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR - MUM ) / ( ( ( DS - ( MUR + ( MLU * RMSe ) ) ) + MLU ) / ( CS / MUC ) ) ) - ( ( ( MUM - RRSe ) / ( RCSe + DS ) ) / ( ( MLU / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ARS ) ,( ACS + ( FirstVNF_CPU_Server - ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR - CS ) - ( MLU / ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.10204081632653061, "obj2": 0.892233646563153}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,RRSe ) )", "obj1": 0.5938775510204082, "obj2": 0.39206415828148433}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Min( AMS ,FirstVNF_RAM ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( RCSe,RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.46530612244897956, "obj2": 0.5186632559911997}, {"determining": "( ( PN * ( ARS * AMS ) ) - Max( Min( ( PN * AMS ) ,Min( ( Max( Max( Const,DDR ),Min( MDR ,ARS ) ) / MRS ) ,( DDR + DDR ) ) ),Min( ( PN - BR ) ,Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR * ( ( RCSe - CS ) / Max( DS,( ( ( RRSe - MUM ) / Min( CS ,DS ) ) - DS ) ) ) ) ),( RCSe - ( Min( ( ( MLU + MUM ) / ( CS / DS ) ) ,( Min( RCSe ,DS ) - ( MUM * ( ( MUR * MUC ) * ( CS * RRSe ) ) ) ) ) - MLU ) ) )", "obj1": 0.7591836734693878, "obj2": 0.2464612747291639}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_RAM * ACS ) ) * ( ( FirstVNF_Mem + ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR + RCSe ),Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUM - Max( DS,CS ) ) ) / MUR ) ) )", "obj1": 0.6959183673469388, "obj2": 0.31072656104893676}, {"determining": "( ( ACS - Max( ARS,( Min( MDR ,( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) ) ) / Max( FirstVNF_RAM,CRS ) )", "choosing": "( ( Min( ( RCSe - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.6285714285714286, "obj2": 0.3259649591217298}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( CRS * ( FirstVNF_RAM - ( Min( Max( BR,( ARS * MRS ) ) ,ARS ) - ( FirstVNF_RAM_Server - AMS ) ) ) ) )", "choosing": "Max( ( MUM + CS ),( DS * ( Min( RMSe ,( RMSe + RCSe ) ) + RRSe ) ) )", "obj1": 0.7428571428571429, "obj2": 0.2919076387693137}, {"determining": "( ( ACS - Max( ARS,( Min( MDR ,( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) ) ) / Max( FirstVNF_RAM,CRS ) )", "choosing": "( ( Min( ( RCSe - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.8061224489795918, "obj2": 0.1934200375120312}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.023353425974393237}, {"determining": "( ( AMS - ACS ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( ( Min( RRSe ,MUR ) - Min( RCSe ,DS ) ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.8224489795918367, "obj2": 0.17351011727907822}, {"determining": "( ( Max( ARS,BR ) - ( AMS * BR ) ) * ( ( ( Min( ( ( FirstVNF_CPU_Server - CRS ) - Max( MRS,( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,BR ) + FirstVNF_Mem ) + PN ) / Max( DDR,BR ) ) )", "choosing": "( ( ( MUR - ( MUM - DS ) ) * MUR ) + ( ( CS * ( Min( MUC ,MUR ) + RMSe ) ) / ( MLU - CS ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8560819361250306}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_RAM * ACS ) ) * ( ( FirstVNF_Mem + ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR + RCSe ),Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUM - Max( DS,CS ) ) ) / MUR ) ) )", "obj1": 0.9428571428571428, "obj2": 0.05492833993275795}, {"determining": "Min( Max( ( MRS - DDR ),( Min( FirstVNF_Mem_Server ,MRS ) + RRS ) ) ,( ( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) / DS )", "obj1": 0.863265306122449, "obj2": 0.14836525592768451}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,MUC ) )", "obj1": 0.9959183673469387, "obj2": 0.001785346806189979}, {"determining": "( Max( BR,CRS ) + ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),( MUR - Max( ( MUR - MUR ),Max( ( MLU / DS ),MUR ) ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8830795609836484}, {"determining": "( ( FirstVNF_Mem * Max( ( PN - ( Const * ( ( FirstVNF_RAM_Server + ARS ) - ( ( FirstVNF_Mem / ACS ) / Const ) ) ) ),CRS ) ) * Min( DDR ,MRS ) )", "choosing": "Min( Min( ( ( ( ( RMSe * RMSe ) * Max( ( MUR * Min( MUR ,CS ) ),DS ) ) + ( RCSe + MUM ) ) * DS ) ,CS ) ,( RCSe - Min( ( Min( ( Min( ( MUR * RRSe ) ,MUC ) / CS ) ,MUC ) * RCSe ) ,Max( ( ( RMSe / ( CS - RMSe ) ) - ( MLU / Max( RRSe,( RCSe * MUM ) ) ) ),MLU ) ) ) )", "obj1": 0.4, "obj2": 0.5787581574559135}, {"determining": "( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUM + MLU ) / Min( MLU ,MUR ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "( ( Max( DDR,ARS ) - ( BR * AMS ) ) * ( FirstVNF_Mem / CRS ) )", "choosing": "( Max( ( MLU - CS ),( MUM - DS ) ) + ( ( Min( ( ( ( ( CS / RMSe ) - RRSe ) * Max( RRSe,RCSe ) ) * DS ) ,MLU ) * MLU ) * MUR ) )", "obj1": 0.1653061224489796, "obj2": 0.8421238237539921}, {"determining": "Max( Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS / FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( MUR + DS ) / CS ) ) * Max( ( RCSe * ( RCSe / Max( RRSe,MUC ) ) ),MUM ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.6540808353836052}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe - ( DS - RMSe ) ) * ( MUC / MUR ) )", "obj1": 0.8959183673469387, "obj2": 0.11427416214413087}, {"determining": "Min( ( AMS / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "Max( ( DS - MLU ),Min( CS ,DS ) )", "obj1": 0.4448979591836735, "obj2": 0.5406150177557627}, {"determining": "( Max( Min( ACS ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM_Server,CRS ) ) + Max( Max( FirstVNF_CPU_Server,Const ),Min( MDR ,ARS ) ) )", "choosing": "Min( ( ( MLU + MUM ) / ( CS / MLU ) ) ,( RCSe / ( MUM + ( RMSe / MLU ) ) ) )", "obj1": 0.18979591836734694, "obj2": 0.7904241914531991}, {"determining": "( ( FirstVNF_Mem_Server / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) )", "choosing": "Max( CS,( MUM - MUR ) )", "obj1": 0.8816326530612245, "obj2": 0.1372112730443194}, {"determining": "( Max( Min( MDR ,FirstVNF_Mem ),Max( DDR,ARS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.3, "obj2": 0.6795439703080353}, {"determining": "( ( ACS - Max( ARS,( Min( MDR ,( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) ) ) / Max( FirstVNF_RAM,CRS ) )", "choosing": "( ( Min( ( RCSe - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.6285714285714286, "obj2": 0.3259649591217298}, {"determining": "( ( ( ACS * ( Max( ARS,MRS ) - FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_RAM * ACS ) ) * ( ( FirstVNF_Mem + ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR + RCSe ),Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( Min( ( Max( MUM,RRSe ) - DS ) ,Max( MUC,( MLU + CS ) ) ) - ( DS * CS ) ) ) / MUR ) ) )", "obj1": 0.9285714285714286, "obj2": 0.07396651258372193}, {"determining": "( ( ( FirstVNF_Mem - ( Max( DDR,( FirstVNF_RAM_Server - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * Max( DDR,ARS ) ) ) * FirstVNF_Mem ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( MUR * MUC ) * ( CS * RRSe ) ) - RRSe ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( CS / ( RMSe + MLU ) ) )", "obj1": 0.32857142857142857, "obj2": 0.6430000604751975}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( DDR / Max( ARS,Min( Min( FirstVNF_CPU_Server ,Max( RRS,FirstVNF_CPU_Server ) ) ,CRS ) ) ) )", "choosing": "( Min( Max( ( MLU - ( RRSe / RRSe ) ),RCSe ) ,( RRSe / MLU ) ) * ( DS / RRSe ) )", "obj1": 0.1510204081632653, "obj2": 0.850110166413781}, {"determining": "( Max( ( CRS - ACS ),CRS ) / Const )", "choosing": "( ( ( ( CS - RRSe ) / ( Min( ( RRSe * RMSe ) ,RMSe ) * DS ) ) / ( ( MUM / RCSe ) * ( MUC / CS ) ) ) - ( ( Min( DS ,RMSe ) + ( MUC + MLU ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.6313872833073685}, {"determining": "( ( DDR + FirstVNF_RAM ) * ( ACS * MRS ) )", "choosing": "( Max( ( MUR * RRSe ),Max( MUR,MUC ) ) * ( DS + RRSe ) )", "obj1": 0.22653061224489796, "obj2": 0.7509165061698968}, {"determining": "Max( Min( MRS ,MDR ),Max( MRS,MDR ) )", "choosing": "( ( ( MLU + MUC ) + ( RRSe * ( MLU - MUM ) ) ) / ( ( MLU - MUM ) + Min( MUC ,CS ) ) )", "obj1": 0.2857142857142857, "obj2": 0.7001062074021767}, {"determining": "Max( Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS / FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( MUR + DS ) / CS ) ) * Max( ( RCSe * ( RCSe / Max( RRSe,MUC ) ) ),MUM ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3693877551020408, "obj2": 0.6137121701086016}, {"determining": "( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( ACS + FirstVNF_CPU ) ),FirstVNF_Mem ) * Min( ACS ,Const ) )", "choosing": "Min( Min( CS ,Max( ( ( Min( Min( ( MUM - MUR ) ,MUR ) ,( RMSe / ( MUR / RRSe ) ) ) + Max( RCSe,MUM ) ) + ( MUC - ( RMSe + CS ) ) ),RCSe ) ) ,( Max( ( MUM + MLU ),MUC ) + Max( ( RMSe * RCSe ),( RMSe / MLU ) ) ) )", "obj1": 0.43673469387755104, "obj2": 0.5498795330324101}, {"determining": "( ( ( RRS / DDR ) - ACS ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( ( MUC * MLU ) + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( ( Min( RRSe ,MUR ) - Min( RCSe ,DS ) ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.810204081632653, "obj2": 0.18990988186255292}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / ACS ) ),( DDR / PN ) )", "choosing": "( ( ( Max( CS,RCSe ) + Max( MUM,MLU ) ) * ( Max( DS,RMSe ) / Min( MUC ,MLU ) ) ) - ( ( Min( DS ,RMSe ) / ( DS - RRSe ) ) / ( ( MUM - RMSe ) * ( MUM / DS ) ) ) )", "obj1": 0.21428571428571427, "obj2": 0.7890650243452066}, {"determining": "Min( Min( Const ,Max( RRS,Max( DDR,MRS ) ) ) ,( ( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( MUM - DS ) ),Min( ( ( RMSe - Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.605812773292718}, {"determining": "Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,Max( AMS,( MRS / Max( ( ARS + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + ( PN * Min( ( AMS / ARS ) ,( FirstVNF_Mem_Server - RRS ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / RMSe ),Max( RCSe,MLU ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "( ( ( FirstVNF_Mem - Max( CRS,CRS ) ) * ( MRS + BR ) ) / Max( FirstVNF_Mem,CRS ) )", "choosing": "( Max( ( MUR + RCSe ),( RCSe - ( MUM * MLU ) ) ) + Min( Max( RCSe,RMSe ) ,( ( ( RRSe / RMSe ) * ( MUC / CS ) ) - RRSe ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6857339724830995}, {"determining": "Min( Min( RRS ,Min( FirstVNF_Mem ,MRS ) ) ,( DDR + RRS ) )", "choosing": "( Min( RCSe ,Min( MLU ,RRSe ) ) - ( RMSe / MLU ) )", "obj1": 0.22448979591836735, "obj2": 0.7781956042132008}, {"determining": "Min( Min( Const ,ACS ) ,( ( ( FirstVNF_RAM * Max( CRS,CRS ) ) - Max( RRS,MRS ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( MUC,Min( MUC ,CS ) ) - RMSe ),( ( CS * Min( CS ,Min( RMSe ,( DS * ( MUM - Min( RMSe ,MUM ) ) ) ) ) ) / ( MUM - DS ) ) )", "obj1": 0.2612244897959184, "obj2": 0.7107391692616909}, {"determining": "( ( ( MRS - BR ) / ( Max( Const,MRS ) / FirstVNF_Mem_Server ) ) + Min( RRS ,( FirstVNF_RAM * PN ) ) )", "choosing": "Max( ( CS * DS ),( Max( Max( RRSe,( Max( MLU,( ( RCSe + MLU ) + RMSe ) ) + DS ) ),DS ) + CS ) )", "obj1": 0.9224489795918367, "obj2": 0.0838598463660866}, {"determining": "( ( ( ( PN * FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) / ( MRS - PN ) ) + Max( ACS,MRS ) )", "choosing": "( Max( Min( MLU ,MLU ),( RCSe + RCSe ) ) + ( Max( MUM,( ( ( CS * ( MLU * ( DS + CS ) ) ) * RRSe ) / RCSe ) ) / ( MUM - MUC ) ) )", "obj1": 0.8693877551020408, "obj2": 0.14648088919496544}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) * ( CRS * MRS ) )", "choosing": "Max( ( DS + MUC ),( CS - MUC ) )", "obj1": 0.3979591836734694, "obj2": 0.5978008491290548}, {"determining": "( Max( DDR,( ( BR * DDR ) - PN ) ) / ( ( ( FirstVNF_RAM - AMS ) / BR ) * MDR ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( Min( ( ( ( ( Max( MLU,RRSe ) - Min( MLU ,MUC ) ) * Min( Max( MUM,RRSe ) ,CS ) ) - RRSe ) * MUC ) ,( RMSe + MUM ) ) / Max( Max( MLU,MUM ),( MLU + DS ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.7250194702455812}, {"determining": "( ( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) / MRS )", "choosing": "( ( ( Min( MUR ,MLU ) - ( RRSe - RRSe ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.9061224489795918, "obj2": 0.10039960991050177}, {"determining": "( Max( ACS,ARS ) * ( ( FirstVNF_Mem / ( AMS * ( Max( FirstVNF_RAM,CRS ) * ACS ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - Min( MLU ,Min( Max( MUC,( Max( ( RRSe - DS ),MUC ) * Max( MUC,RCSe ) ) ) ,Min( RMSe ,( DS - RCSe ) ) ) ) ) * ( Min( Min( DS ,RMSe ) ,Min( MUR ,MLU ) ) * ( ( MUC / MLU ) + ( RMSe + DS ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.6237292227112601}, {"determining": "Min( Min( Const ,BR ) ,( ( ( FirstVNF_CPU + PN ) / Max( DDR,BR ) ) + Min( FirstVNF_Mem_Server ,( AMS * AMS ) ) ) )", "choosing": "Max( ( ( Max( MUC,( ( DS / MUM ) / Max( ( CS * Min( RMSe ,MLU ) ),Max( MUM,MUC ) ) ) ) - DS ) / ( MUC * RRSe ) ),MLU )", "obj1": 0.24489795918367346, "obj2": 0.7361286305257915}, {"determining": "( Max( BR,Max( ( DDR / FirstVNF_CPU ),RRS ) ) * ( BR - AMS ) )", "choosing": "( Min( CS ,MLU ) + ( RRSe - ( ( MUR - RRSe ) - DS ) ) )", "obj1": 0.35306122448979593, "obj2": 0.6249348549321162}, {"determining": "Min( Min( Min( BR ,( Min( Min( ARS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( DDR - FirstVNF_CPU ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( ( MUC / CS ) / RRSe ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7297705964538184}, {"determining": "( ( FirstVNF_CPU * RRS ) * Min( ( DDR - ARS ) ,Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "Max( ( DS + MUM ),Max( MUR,CS ) )", "obj1": 0.39591836734693875, "obj2": 0.6040296220392412}, {"determining": "( Min( ACS ,MDR ) / ( FirstVNF_CPU_Server / ( FirstVNF_Mem - RRS ) ) )", "choosing": "Min( ( MLU * ( MUM + ( RCSe / ( ( Max( Min( MUC ,DS ),MUR ) - MUM ) + MLU ) ) ) ) ,( MUC * RRSe ) )", "obj1": 0.9163265306122449, "obj2": 0.0918525508331584}, {"determining": "Min( Min( Const ,BR ) ,( ( ( FirstVNF_CPU + PN ) / Max( DDR,BR ) ) / ( FirstVNF_CPU_Server / ( ( ( DDR + MDR ) + ( BR * FirstVNF_CPU ) ) / Const ) ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RCSe ) ),MLU )", "obj1": 0.24285714285714285, "obj2": 0.7478748488525382}, {"determining": "Min( Min( ARS ,ARS ) ,Min( ( MRS / ( DDR - RRS ) ) ,ACS ) )", "choosing": "Max( ( ( ( MUC - MUC ) * DS ) - ( MLU * RRSe ) ),Max( RRSe,MLU ) )", "obj1": 0.2163265306122449, "obj2": 0.7806826677402376}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( Max( Const,Min( AMS ,ACS ) ) / FirstVNF_CPU_Server ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( MUM - DS ) ),Min( ( ( RMSe - Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.23673469387755103, "obj2": 0.7484026229600794}, {"determining": "Min( Min( ( FirstVNF_Mem_Server - ( CRS * CRS ) ) ,( MDR + FirstVNF_RAM ) ) ,Max( ( PN + FirstVNF_RAM_Server ),Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( CS,CS ) * ( RRSe + RCSe ) ) ,Min( ( MLU + RRSe ) ,Min( Min( Max( MUM,( MUC + MUR ) ) ,( Min( RCSe ,( ( RMSe - DS ) / RMSe ) ) + CS ) ) ,MLU ) ) )", "obj1": 0.22040816326530613, "obj2": 0.779378110778809}, {"determining": "( ( PN * ( ARS * AMS ) ) - Max( Min( ( PN * AMS ) ,Min( ( ARS / MRS ) ,( DDR + DDR ) ) ),Min( ( PN - BR ) ,Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR * ( ( RCSe - CS ) / Max( DS,( ( ( RRSe - MUM ) / Min( CS ,DS ) ) - DS ) ) ) ) ),( RCSe - ( MUR - MLU ) ) )", "obj1": 0.9122448979591836, "obj2": 0.09504996407024868}, {"determining": "Min( Min( Const ,Max( RRS,Max( DDR,MRS ) ) ) ,( ( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( MUM - DS ) ),Min( ( ( RMSe - Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.23673469387755103, "obj2": 0.7484026229600794}, {"determining": "( ( ( FirstVNF_Mem - Max( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( RCSe - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.09751195175843817}, {"determining": "( ( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( MUC + MLU ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.09592332498085666}, {"determining": "( ( Min( FirstVNF_Mem ,CRS ) * DDR ) - ( AMS - FirstVNF_CPU ) )", "choosing": "Min( ( RMSe * ( Max( ( MUR * MLU ),MUR ) + ( RMSe - MUM ) ) ) ,( RCSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( Min( ( Max( ( DDR + FirstVNF_CPU_Server ),RRS ) + ARS ) ,( BR * ACS ) ) / Min( PN ,ACS ) ) )", "choosing": "Max( ( CS * DS ),Min( ( MLU + ( ( CS * RRSe ) + RCSe ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - DDR ) )", "choosing": "( ( RMSe - DS ) / ( DS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) - ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Min( ( Min( ( ( DS + MLU ) - ( CS / MUC ) ) ,( ( CS * RRSe ) + ( MUR * MUR ) ) ) / MUM ) ,( DS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * DS ) * ( ( RCSe * Max( Min( Max( RCSe,( Max( MUM,MUM ) + MUR ) ) ,MUM ),Max( RRSe,( MLU * ( MUM + RCSe ) ) ) ) ) * ( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) / ( Min( PN ,FirstVNF_RAM ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( Max( RCSe,( MUR * RMSe ) ) ,( ( CS * RCSe ) - ( RCSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) )", "choosing": "( Max( ( DS + ( RMSe / MUC ) ),( MLU / MUR ) ) + ( ( DS * CS ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * CRS ) - ( BR * ( ACS / Const ) ) )", "choosing": "( Min( ( RMSe + MUC ) ,Max( DS,DS ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( DDR,DDR ),FirstVNF_Mem ) - ( BR + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RCSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) * ( DDR + FirstVNF_CPU_Server ) ) ,Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) ,Max( Min( ( ACS - ACS ) ,Min( FirstVNF_Mem ,RRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - RRS ) - ( AMS * ACS ) ) * Max( ( FirstVNF_Mem / BR ),( DDR - MDR ) ) ) - Max( ( Max( AMS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server + CRS ) ),Min( ( Const / BR ) ,( Const + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) + Max( RMSe,MUR ) ) + ( Min( MLU ,CS ) * ( MUM - MUC ) ) ) * ( ( ( CS + RRSe ) * ( MLU - MUC ) ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) - ( ( Max( MDR,FirstVNF_CPU_Server ) * Max( PN,PN ) ) - ( ( MDR / RRS ) * Max( Min( ( CRS - BR ) ,FirstVNF_RAM ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MUM,( ( ( MUR - MUR ) / DS ) + MUM ) ),( MLU - RRSe ) ) + ( ( MLU + RCSe ) / ( MLU - RMSe ) ) ) + ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - ACS ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) / ( ( BR / MRS ) * ( FirstVNF_CPU_Server - MDR ) ) ) * ( ( ( BR - FirstVNF_CPU_Server ) / ( BR + PN ) ) * Max( CRS,AMS ) ) )", "choosing": "Min( ( RRSe - Min( ( MUR + RMSe ) ,CS ) ) ,( ( DS / RCSe ) * Max( MLU,( MUC - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * BR ) * Min( ACS ,AMS ) ),( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,( Max( Min( MDR ,FirstVNF_Mem ),Max( DDR,ARS ) ) * ( ( FirstVNF_Mem_Server - BR ) - ( ACS / DDR ) ) ) )", "choosing": "( ( MUR - CS ) / Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) )", "choosing": "( Max( MLU,( RCSe / MUR ) ) + Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( AMS + FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MUM + RRSe ) + Max( DS,DS ) ) + MUM ) ,( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_Mem * ( MDR * RRS ) ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "( Max( DS,MLU ) / Min( ( Max( MLU,RCSe ) / MUC ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * CRS ) - ( BR * ( ACS / Const ) ) )", "choosing": "( Min( ( RMSe + MUC ) ,Max( DS,DS ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * DS ) * ( ( RCSe * Max( Min( Max( RCSe,( Max( MUM,MUM ) + MUR ) ) ,MUM ),Max( RRSe,( MLU * ( MUM + RCSe ) ) ) ) ) * ( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) * Min( ( ARS + ( FirstVNF_RAM_Server - Min( Max( ( FirstVNF_Mem - ( FirstVNF_CPU + AMS ) ),( FirstVNF_RAM_Server + ( PN / ACS ) ) ) ,AMS ) ) ) ,( DDR - ARS ) ) )", "choosing": "Max( ( MUR + DS ),Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) / ( Max( RMSe,Min( Max( Min( ( DS / MUC ) ,RRSe ),( MUR * ( RCSe * RRSe ) ) ) ,( ( ( ( RCSe / MUM ) + Max( DS,MUR ) ) - RMSe ) + MUR ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MRS - DDR ),( FirstVNF_CPU + ( BR * ( ARS * ACS ) ) ) ) ,( ( ACS - FirstVNF_RAM_Server ) + Max( ( BR / CRS ),Const ) ) )", "choosing": "( Max( ( Max( MUM,MUM ) / ( MLU - CS ) ),MUM ) * ( ( ( MUM / MUC ) - ( RRSe + MUM ) ) / ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( DDR + BR ) ,DDR ) ,BR ) - ( AMS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( MLU ,( MUC + ( RRSe + RMSe ) ) ) - RMSe ) * DS ) - RMSe ) * ( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MRS - DDR ),( FirstVNF_CPU + RRS ) ) ,( ( ACS - FirstVNF_RAM_Server ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + MUM ) / ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( AMS ,MDR ) ,( Min( MRS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) ) )", "choosing": "Max( ( CS * DS ),( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,CRS ) - Max( RRS,PN ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( CS - MUC ) / Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MRS - DDR ),( FirstVNF_CPU + FirstVNF_RAM ) ) ,( Max( Max( ( ( FirstVNF_Mem_Server + ARS ) * DDR ),Min( FirstVNF_CPU ,CRS ) ),FirstVNF_CPU ) - ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC - MUC ),( CS + MUM ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR * FirstVNF_Mem_Server ) / BR ) ,( Max( ACS,FirstVNF_RAM_Server ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MUR - Max( ( MUC / CS ),( ( CS + MUC ) * DS ) ) ),( ( MUM - DS ) - RRSe ) ) + Min( DS ,( ( RCSe + MLU ) / RMSe ) ) ) * ( ( CS - MUC ) / ( MUR * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * ACS ) ,( ( ACS - FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( ( ( ( ( DS - MLU ) * RCSe ) / Max( MUC,MUR ) ) / ( ( MUR * RMSe ) * Min( CS ,MLU ) ) ) - MUC ) / Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ( MRS / ( ARS * Min( ( ( ( FirstVNF_CPU_Server * ACS ) * FirstVNF_Mem ) * MRS ) ,( Min( DDR ,RRS ) + BR ) ) ) ) ) ,Min( CRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUR ,( CS + MUC ) ) - ( RCSe + ( Max( ( RCSe / DS ),RRSe ) * MUM ) ) ) - ( MLU / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server * MRS ) ,( PN * ARS ) ) - ( ( Max( FirstVNF_CPU_Server,MDR ) + Max( PN,PN ) ) - ( ( RRS / ( ARS / FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( RRSe + RMSe ) ,( MLU - MUM ) ) + ( ( MLU - MUC ) / ( MLU + RCSe ) ) ) + ( ( Max( MUR,MUM ) + ( ( ( Max( CS,MUM ) + Min( DS ,MUC ) ) * ( Min( MUC ,MLU ) + ( CS - MUR ) ) ) * ( ( Min( RRSe ,MLU ) / Min( MLU ,RCSe ) ) / ( Min( RCSe ,RMSe ) - ( MUC / RRSe ) ) ) ) ) + ( ( Max( CS,( RMSe / MUC ) ) * RCSe ) * ( MUR * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MRS - DDR ),( FirstVNF_CPU + RRS ) ) ,( ( ACS - FirstVNF_RAM_Server ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC / MUM ) ,( DS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( ( FirstVNF_Mem_Server - PN ) + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - ( Max( MUR,MLU ) * ( MUM + ( ( MUC - ( ( RRSe + DS ) / ( MUM * CS ) ) ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( RRS - CRS ) ) / ( FirstVNF_CPU_Server / AMS ) )", "choosing": "( Min( CS ,MUR ) / Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,MDR ) / ( FirstVNF_CPU_Server / ( FirstVNF_Mem - RRS ) ) )", "choosing": "Min( ( MLU * ( MUM + ( RCSe / ( ( Max( Min( MUC ,DS ),MUR ) - MUM ) + MLU ) ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / ( ( ( DDR + MDR ) + ( BR * FirstVNF_CPU ) ) / Const ) ) )", "choosing": "( Max( MLU,( RCSe / MUR ) ) + ( ( CS * RMSe ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( MRS - DDR ),( FirstVNF_CPU + RRS ) ) ,( ( ACS - FirstVNF_RAM_Server ) - Max( Const,FirstVNF_CPU ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + MUM ) / ( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( CS - MUC ) / Min( MLU ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( ( ACS - FirstVNF_RAM_Server ) - Max( Const,FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) )", "choosing": "( ( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( CS - MUC ) / ( MUR * MUC ) ) ) + ( ( CS * DS ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Min( MRS ,FirstVNF_RAM ) - ( Min( ( Max( ( DDR + FirstVNF_CPU_Server ),RRS ) + ARS ) ,( BR * ACS ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( ( Max( Min( MUM ,( RRSe + MLU ) ),MUM ) - Max( ( ( RMSe - MLU ) + Max( DS,( ( RMSe - CS ) - MUC ) ) ),( RCSe - RRSe ) ) ) * DS ) / ( MUR * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MDR ,( ( ACS - FirstVNF_RAM_Server ) - ( Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) / CRS ),( CRS / ACS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR - MUM ) / ( ( ( DS - ( MUR + ( MLU * RMSe ) ) ) + MLU ) / ( CS / MUC ) ) ) - ( ( ( MUM - RRSe ) / ( RCSe + DS ) ) / ( ( MLU / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.10204081632653061, "obj2": 0.892233646563153}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,RRSe ) )", "obj1": 0.5938775510204082, "obj2": 0.39206415828148433}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Min( AMS ,FirstVNF_RAM ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( RCSe,RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.46530612244897956, "obj2": 0.5186632559911997}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_RAM * ACS ) ) * ( ( FirstVNF_Mem + ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR + RCSe ),Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUM - Max( DS,CS ) ) ) / MUR ) ) )", "obj1": 0.6959183673469388, "obj2": 0.31072656104893676}, {"determining": "( ( PN * ( ARS * AMS ) ) - Max( Min( ( PN * AMS ) ,Min( ( Max( Max( Const,DDR ),Min( MDR ,ARS ) ) / MRS ) ,( DDR + DDR ) ) ),Min( ( PN - BR ) ,Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR * ( ( RCSe - CS ) / Max( DS,( ( ( RRSe - MUM ) / Min( CS ,DS ) ) - DS ) ) ) ) ),( RCSe - ( Min( ( ( MLU + MUM ) / ( CS / DS ) ) ,( Min( RCSe ,DS ) - ( MUM * ( ( MUR * MUC ) * ( CS * RRSe ) ) ) ) ) - MLU ) ) )", "obj1": 0.7591836734693878, "obj2": 0.2464612747291639}, {"determining": "( ( ACS - Max( ARS,( Min( MDR ,( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) ) ) / Max( FirstVNF_RAM,CRS ) )", "choosing": "( ( Min( ( RCSe - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.6285714285714286, "obj2": 0.3259649591217298}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + ( ( BR - FirstVNF_Mem ) / ( ( DDR / ( RRS * ARS ) ) / RRS ) ) ) ) + ( FirstVNF_RAM * ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( MLU ,( Min( MUC ,MUC ) + MUM ) ) + Min( MUC ,( ( RCSe * MUM ) - Min( DS ,CS ) ) ) ),Max( ( MUM / RCSe ),( MUC - CS ) ) )", "obj1": 0.8816326530612245, "obj2": 0.0825907327718255}, {"determining": "( ( ACS - Max( ARS,( Min( MDR ,( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) ) ) / Max( FirstVNF_RAM,CRS ) )", "choosing": "( ( Min( ( RCSe - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.8061224489795918, "obj2": 0.1934200375120312}, {"determining": "( ( AMS - ACS ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( ( Min( RRSe ,MUR ) - Min( RCSe ,DS ) ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.8224489795918367, "obj2": 0.17351011727907822}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( CRS * ( FirstVNF_RAM - ( Min( Max( BR,( ARS * MRS ) ) ,ARS ) - ( FirstVNF_RAM_Server - AMS ) ) ) ) )", "choosing": "Max( ( MUM + CS ),( DS * ( Min( RMSe ,( RMSe + RCSe ) ) + RRSe ) ) )", "obj1": 0.7428571428571429, "obj2": 0.2919076387693137}, {"determining": "( ( ( MRS - BR ) / ( ( MDR / ( FirstVNF_Mem + RRS ) ) / FirstVNF_Mem_Server ) ) + Min( RRS ,( FirstVNF_RAM * PN ) ) )", "choosing": "( Max( CS,DS ) + Max( DS,( ( RMSe + MUR ) / MUR ) ) )", "obj1": 0.8795918367346939, "obj2": 0.13480515795916823}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "Min( Min( Const ,BR ) ,Min( DDR ,( ( ( ( Max( ( ACS / FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) + FirstVNF_CPU ) - RRS ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) / Max( DDR,BR ) ) ) )", "choosing": "Max( Min( ( Min( Min( Max( MUR,( ( MUC / DS ) * ( MUC / MUM ) ) ) ,( RMSe / MLU ) ) ,( RRSe - CS ) ) * RMSe ) ,( CS * RRSe ) ),MLU )", "obj1": 0.21020408163265306, "obj2": 0.7774735881511659}, {"determining": "Min( Max( Max( MRS,( CRS / MRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,PN ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),( ( MUM + ( Min( ( MUC * MUM ) ,( MLU - MUR ) ) - MUR ) ) + MUR ) ) / Max( ( MUC - RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.023353425974393237}, {"determining": "Min( Max( ( MRS - DDR ),( Min( FirstVNF_Mem_Server ,MRS ) + RRS ) ) ,( ( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) / DS )", "obj1": 0.863265306122449, "obj2": 0.14836525592768451}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,MUC ) )", "obj1": 0.9959183673469387, "obj2": 0.001785346806189979}, {"determining": "( ( FirstVNF_Mem * Max( ( PN - ( Const * ( ( FirstVNF_RAM_Server + ARS ) - ( ( FirstVNF_Mem / ACS ) / Const ) ) ) ),CRS ) ) * Min( DDR ,MRS ) )", "choosing": "Min( Min( ( ( ( ( RMSe * RMSe ) * Max( ( MUR * Min( MUR ,CS ) ),DS ) ) + ( RCSe + MUM ) ) * DS ) ,CS ) ,( RCSe - Min( ( Min( ( Min( ( MUR * RRSe ) ,MUC ) / CS ) ,MUC ) * RCSe ) ,Max( ( ( RMSe / ( CS - RMSe ) ) - ( MLU / Max( RRSe,( RCSe * MUM ) ) ) ),MLU ) ) ) )", "obj1": 0.4, "obj2": 0.5787581574559135}, {"determining": "( Max( Min( ACS ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM_Server,CRS ) ) + Max( Max( FirstVNF_CPU_Server,Const ),Min( MDR ,ARS ) ) )", "choosing": "Min( ( ( MLU + MUM ) / ( CS / MLU ) ) ,( RCSe / ( MUM + ( RMSe / MLU ) ) ) )", "obj1": 0.18979591836734694, "obj2": 0.7904241914531991}, {"determining": "( ( ( ACS * ( Max( ARS,MRS ) - FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_RAM * ACS ) ) * ( ( FirstVNF_Mem + ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR + RCSe ),Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( Min( ( Max( MUM,RRSe ) - DS ) ,Max( MUC,( MLU + CS ) ) ) - ( DS * CS ) ) ) / MUR ) ) )", "obj1": 0.9285714285714286, "obj2": 0.07396651258372193}, {"determining": "( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUM + MLU ) / Min( MLU ,MUR ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "( ( Max( DDR,ARS ) - ( BR * AMS ) ) * ( FirstVNF_Mem / CRS ) )", "choosing": "( Max( ( MLU - CS ),( MUM - DS ) ) + ( ( Min( ( ( ( ( CS / RMSe ) - RRSe ) * Max( RRSe,RCSe ) ) * DS ) ,MLU ) * MLU ) * MUR ) )", "obj1": 0.1653061224489796, "obj2": 0.8421238237539921}, {"determining": "Max( Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS / FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( MUR + DS ) / CS ) ) * Max( ( RCSe * ( RCSe / Max( RRSe,MUC ) ) ),MUM ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.6540808353836052}, {"determining": "( ( Min( ( CRS - ACS ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( BR / MRS ) * ( FirstVNF_CPU_Server - AMS ) ) ) * ( ( ( BR - FirstVNF_CPU_Server ) / ( BR + PN ) ) * ( ( ACS * CRS ) / ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUM / MUM ) ,( Min( Min( MUM ,MUR ) ,( CS - MUR ) ) + MLU ) )", "obj1": 0.7448979591836735, "obj2": 0.26685085719073703}, {"determining": "Min( ( AMS / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "Max( ( DS - MLU ),Min( CS ,DS ) )", "obj1": 0.4448979591836735, "obj2": 0.5406150177557627}, {"determining": "( Max( Min( MDR ,FirstVNF_Mem ),Max( DDR,ARS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.3, "obj2": 0.6795439703080353}, {"determining": "( ( DDR + FirstVNF_RAM ) * ( ACS * MRS ) )", "choosing": "( Max( ( MUR * RRSe ),Max( MUR,MUC ) ) * ( DS + RRSe ) )", "obj1": 0.22653061224489796, "obj2": 0.7509165061698968}, {"determining": "( ( ACS - Max( ARS,( Min( MDR ,( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) ) ) / Max( FirstVNF_RAM,CRS ) )", "choosing": "( ( Min( ( RCSe - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.6285714285714286, "obj2": 0.3259649591217298}, {"determining": "( ( ( FirstVNF_Mem - ( Max( DDR,( FirstVNF_RAM_Server - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * Max( DDR,ARS ) ) ) * FirstVNF_Mem ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( MUR * MUC ) * ( CS * RRSe ) ) - RRSe ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( CS / ( RMSe + MLU ) ) )", "obj1": 0.32857142857142857, "obj2": 0.6430000604751975}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_RAM * ACS ) ) * ( ( FirstVNF_Mem + ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR + RCSe ),Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUM - Max( DS,CS ) ) ) / MUR ) ) )", "obj1": 0.9428571428571428, "obj2": 0.05492833993275795}, {"determining": "( Max( ARS,ACS ) * Min( ( FirstVNF_Mem / ( MRS * AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( DS ,RMSe ) ,Min( MUR ,MLU ) ) * ( ( MUC / MLU ) + ( RMSe * DS ) ) ) * ( ( Max( MUR,MLU ) / Min( MUR ,MUM ) ) + Max( ( MLU * DS ),( MUC + RRSe ) ) ) )", "obj1": 0.39591836734693875, "obj2": 0.5966982387393701}, {"determining": "( Max( ( CRS - ACS ),CRS ) / Const )", "choosing": "( ( ( ( CS - RRSe ) / ( Min( ( RRSe * RMSe ) ,RMSe ) * DS ) ) / ( ( MUM / RCSe ) * ( MUC / CS ) ) ) - ( ( Min( DS ,RMSe ) + ( MUC + MLU ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.6313872833073685}, {"determining": "( ( Max( ARS,BR ) - ( AMS * BR ) ) * ( ( ( Min( ( ( FirstVNF_CPU_Server - CRS ) - Max( MRS,( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,BR ) + FirstVNF_Mem ) + PN ) / Max( DDR,BR ) ) )", "choosing": "( ( ( MUR - ( MUM - DS ) ) * MUR ) + ( ( CS * ( Min( MUC ,MUR ) + RMSe ) ) / ( MLU - CS ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8560819361250306}, {"determining": "Min( Min( Const ,Max( RRS,Max( DDR,MRS ) ) ) ,( ( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( MUM - DS ) ),Min( ( ( RMSe - Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.605812773292718}, {"determining": "( Max( BR,CRS ) + ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),( MUR - Max( ( MUR - MUR ),Max( ( MLU / DS ),MUR ) ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8830795609836484}, {"determining": "Max( Min( MRS ,MDR ),Max( MRS,MDR ) )", "choosing": "( ( ( MLU + MUC ) + ( RRSe * ( MLU - MUM ) ) ) / ( ( MLU - MUM ) + Min( MUC ,CS ) ) )", "obj1": 0.2857142857142857, "obj2": 0.7001062074021767}, {"determining": "( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( ACS + FirstVNF_CPU ) ),FirstVNF_Mem ) * Min( ACS ,Const ) )", "choosing": "Min( Min( CS ,Max( ( ( Min( Min( ( MUM - MUR ) ,MUR ) ,( RMSe / ( MUR / RRSe ) ) ) + Max( RCSe,MUM ) ) + ( MUC - ( RMSe + CS ) ) ),RCSe ) ) ,( Max( ( MUM + MLU ),MUC ) + Max( ( RMSe * RCSe ),( RMSe / MLU ) ) ) )", "obj1": 0.43673469387755104, "obj2": 0.5498795330324101}, {"determining": "( ( ( RRS / DDR ) - ACS ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( ( MUC * MLU ) + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( ( Min( RRSe ,MUR ) - Min( RCSe ,DS ) ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.810204081632653, "obj2": 0.18990988186255292}, {"determining": "Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,Max( AMS,( MRS / Max( ( ARS + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + ( PN * Min( ( AMS / ARS ) ,( FirstVNF_Mem_Server - RRS ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / RMSe ),Max( RCSe,MLU ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "( ( ( FirstVNF_Mem - Max( CRS,CRS ) ) * ( MRS + BR ) ) / Max( FirstVNF_Mem,CRS ) )", "choosing": "( Max( ( MUR + RCSe ),( RCSe - ( MUM * MLU ) ) ) + Min( Max( RCSe,RMSe ) ,( ( ( RRSe / RMSe ) * ( MUC / CS ) ) - RRSe ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6857339724830995}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( Min( ( FirstVNF_CPU - PN ) ,( ( MDR - ( BR / AMS ) ) / ( ( FirstVNF_Mem + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( CS * Max( RCSe,RCSe ) ) + Max( RRSe,RCSe ) )", "obj1": 0.9408163265306122, "obj2": 0.05496978229961795}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.023353425974393237}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8713856235356}, {"determining": "Min( Min( Const ,ACS ) ,( ( ( FirstVNF_RAM * Max( CRS,CRS ) ) - Max( RRS,MRS ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( MUC,Min( MUC ,CS ) ) - RMSe ),( ( CS * Min( CS ,Min( RMSe ,( DS * ( MUM - Min( RMSe ,MUM ) ) ) ) ) ) / ( MUM - DS ) ) )", "obj1": 0.2612244897959184, "obj2": 0.7107391692616909}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( DDR / Max( ARS,Min( Min( FirstVNF_CPU_Server ,Max( RRS,FirstVNF_CPU_Server ) ) ,CRS ) ) ) )", "choosing": "( Min( Max( ( MLU - ( RRSe / RRSe ) ),RCSe ) ,( RRSe / MLU ) ) * ( DS / RRSe ) )", "obj1": 0.1510204081632653, "obj2": 0.850110166413781}, {"determining": "( ( ( ( PN * FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) / ( MRS - PN ) ) + Max( ACS,MRS ) )", "choosing": "( Max( Min( MLU ,MLU ),( RCSe + RCSe ) ) + ( Max( MUM,( ( ( CS * ( MLU * ( DS + CS ) ) ) * RRSe ) / RCSe ) ) / ( MUM - MUC ) ) )", "obj1": 0.8693877551020408, "obj2": 0.14648088919496544}, {"determining": "( Max( DDR,( ( BR * DDR ) - PN ) ) / ( ( ( FirstVNF_RAM - AMS ) / BR ) * MDR ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( Min( ( ( ( ( Max( MLU,RRSe ) - Min( MLU ,MUC ) ) * Min( Max( MUM,RRSe ) ,CS ) ) - RRSe ) * MUC ) ,( RMSe + MUM ) ) / Max( Max( MLU,MUM ),( MLU + DS ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.7250194702455812}, {"determining": "( Max( ACS,ARS ) * ( ( FirstVNF_Mem / ( AMS * ( Max( FirstVNF_RAM,CRS ) * ACS ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - Min( MLU ,Min( Max( MUC,( Max( ( RRSe - DS ),MUC ) * Max( MUC,RCSe ) ) ) ,Min( RMSe ,( DS - RCSe ) ) ) ) ) * ( Min( Min( DS ,RMSe ) ,Min( MUR ,MLU ) ) * ( ( MUC / MLU ) + ( RMSe + DS ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.6237292227112601}, {"determining": "Min( Min( Const ,BR ) ,( ( ( FirstVNF_CPU + PN ) / Max( DDR,BR ) ) + Min( FirstVNF_Mem_Server ,( AMS * AMS ) ) ) )", "choosing": "Max( ( ( Max( MUC,( ( DS / MUM ) / Max( ( CS * Min( RMSe ,MLU ) ),Max( MUM,MUC ) ) ) ) - DS ) / ( MUC * RRSe ) ),MLU )", "obj1": 0.24489795918367346, "obj2": 0.7361286305257915}, {"determining": "( Max( BR,Max( ( DDR / FirstVNF_CPU ),RRS ) ) * ( BR - AMS ) )", "choosing": "( Min( CS ,MLU ) + ( RRSe - ( ( MUR - RRSe ) - DS ) ) )", "obj1": 0.35306122448979593, "obj2": 0.6249348549321162}, {"determining": "Min( Min( Min( BR ,( Min( Min( ARS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( DDR - FirstVNF_CPU ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( ( MUC / CS ) / RRSe ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7297705964538184}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) * ( DDR + FirstVNF_CPU_Server ) ) ,Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) ,Max( Min( ( ACS - ACS ) ,Min( FirstVNF_Mem ,RRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8545217368523863}, {"determining": "( Max( ARS,ACS ) * Min( ( FirstVNF_Mem / ( MRS * ( AMS / CRS ) ) ) ,( ARS * ( ( FirstVNF_Mem_Server + CRS ) - Min( Const ,CRS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RMSe ) ,Min( MUR ,DS ) ) * ( ( MUC / MLU ) + ( RMSe * DS ) ) ) * ( Min( RCSe ,( MUC * Min( Min( RMSe ,MUR ) ,( DS / ( Max( MUM,DS ) / MUM ) ) ) ) ) * RCSe ) )", "obj1": 0.37142857142857144, "obj2": 0.613500202546379}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8713856235356}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( Min( ( FirstVNF_CPU - PN ) ,( ( ( FirstVNF_Mem + ( ( FirstVNF_CPU - ACS ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem,ACS ) ) * Min( BR ,( FirstVNF_RAM * ACS ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RCSe + MUR ),Max( MUM,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUM - Max( ( ( CS / RCSe ) * DS ),CS ) ) ) / MUR ) ) )", "obj1": 0.9285714285714286, "obj2": 0.07396651258372193}, {"determining": "Min( Min( Const ,BR ) ,( ( ( FirstVNF_CPU + PN ) / Max( DDR,BR ) ) / ( FirstVNF_CPU_Server / ( ( ( DDR + MDR ) + ( BR * FirstVNF_CPU ) ) / Const ) ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RCSe ) ),MLU )", "obj1": 0.24285714285714285, "obj2": 0.7478748488525382}, {"determining": "Max( Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS / FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( MUR + DS ) / CS ) ) * Max( ( RCSe * ( RCSe / Max( RRSe,MUC ) ) ),MUM ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3693877551020408, "obj2": 0.6137121701086016}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( Max( Const,Min( AMS ,ACS ) ) / FirstVNF_CPU_Server ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( MUM - DS ) ),Min( ( ( RMSe - Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.23673469387755103, "obj2": 0.7484026229600794}, {"determining": "Min( Min( Const ,Max( RRS,Max( DDR,MRS ) ) ) ,( ( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( MUM - DS ) ),Min( ( ( RMSe - Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.23673469387755103, "obj2": 0.7484026229600794}, {"determining": "Min( ( DDR - ARS ) ,( ACS + ( FirstVNF_CPU_Server - ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR - CS ) - ( MLU / ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,CRS ) * DDR ) - ( AMS - FirstVNF_CPU ) )", "choosing": "Min( ( RMSe * ( Max( ( MUR * MLU ),MUR ) + ( RMSe - MUM ) ) ) ,( RCSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( Min( ( Max( ( DDR + FirstVNF_CPU_Server ),RRS ) + ARS ) ,( BR * ACS ) ) / Min( PN ,ACS ) ) )", "choosing": "Max( ( CS * DS ),Min( ( MLU + ( ( CS * RRSe ) + RCSe ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - DDR ) )", "choosing": "( ( RMSe - DS ) / ( DS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) - ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Min( ( Min( ( ( DS + MLU ) - ( CS / MUC ) ) ,( ( CS * RRSe ) + ( MUR * MUR ) ) ) / MUM ) ,( DS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * DS ) * ( ( RCSe * Max( Min( Max( RCSe,( Max( MUM,MUM ) + MUR ) ) ,MUM ),Max( RRSe,( MLU * ( MUM + RCSe ) ) ) ) ) * ( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) / ( Min( PN ,FirstVNF_RAM ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( Max( RCSe,( MUR * RMSe ) ) ,( ( CS * RCSe ) - ( RCSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) )", "choosing": "( Max( ( DS + ( RMSe / MUC ) ),( MLU / MUR ) ) + ( ( DS * CS ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * CRS ) - ( BR * ( ACS / Const ) ) )", "choosing": "( Min( ( RMSe + MUC ) ,Max( DS,DS ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( DDR,DDR ),FirstVNF_Mem ) - ( BR + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RCSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) * ( DDR + FirstVNF_CPU_Server ) ) ,Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) ,Max( Min( ( ACS - ACS ) ,Min( FirstVNF_Mem ,RRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - RRS ) - ( AMS * ACS ) ) * Max( ( FirstVNF_Mem / BR ),( DDR - MDR ) ) ) - Max( ( Max( AMS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server + CRS ) ),Min( ( Const / BR ) ,( Const + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) + Max( RMSe,MUR ) ) + ( Min( MLU ,CS ) * ( MUM - MUC ) ) ) * ( ( ( CS + RRSe ) * ( MLU - MUC ) ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) - ( ( Max( MDR,FirstVNF_CPU_Server ) * Max( PN,PN ) ) - ( ( MDR / RRS ) * Max( Min( ( CRS - BR ) ,FirstVNF_RAM ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MUM,( ( ( MUR - MUR ) / DS ) + MUM ) ),( MLU - RRSe ) ) + ( ( MLU + RCSe ) / ( MLU - RMSe ) ) ) + ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - ACS ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) / ( ( BR / MRS ) * ( FirstVNF_CPU_Server - MDR ) ) ) * ( ( ( BR - FirstVNF_CPU_Server ) / ( BR + PN ) ) * Max( CRS,AMS ) ) )", "choosing": "Min( ( RRSe - Min( ( MUR + RMSe ) ,CS ) ) ,( ( DS / RCSe ) * Max( MLU,( MUC - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * BR ) * Min( ACS ,AMS ) ),( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,( Max( Min( MDR ,FirstVNF_Mem ),Max( DDR,ARS ) ) * ( ( FirstVNF_Mem_Server - BR ) - ( ACS / DDR ) ) ) )", "choosing": "( ( MUR - CS ) / Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) )", "choosing": "( Max( MLU,( RCSe / MUR ) ) + Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( AMS + FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MUM + RRSe ) + Max( DS,DS ) ) + MUM ) ,( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_Mem * ( MDR * RRS ) ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "( Max( DS,MLU ) / Min( ( Max( MLU,RCSe ) / MUC ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * CRS ) - ( BR * ( ACS / Const ) ) )", "choosing": "( Min( ( RMSe + MUC ) ,Max( DS,DS ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * DS ) * ( ( RCSe * Max( Min( Max( RCSe,( Max( MUM,MUM ) + MUR ) ) ,MUM ),Max( RRSe,( MLU * ( MUM + RCSe ) ) ) ) ) * ( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) * Min( ( ARS + ( FirstVNF_RAM_Server - Min( Max( ( FirstVNF_Mem - ( FirstVNF_CPU + AMS ) ),( FirstVNF_RAM_Server + ( PN / ACS ) ) ) ,AMS ) ) ) ,( DDR - ARS ) ) )", "choosing": "Max( ( MUR + DS ),Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) / ( Max( RMSe,Min( Max( Min( ( DS / MUC ) ,RRSe ),( MUR * ( RCSe * RRSe ) ) ) ,( ( ( ( RCSe / MUM ) + Max( DS,MUR ) ) - RMSe ) + MUR ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MRS - DDR ),( FirstVNF_CPU + ( BR * ( ARS * ACS ) ) ) ) ,( ( ACS - FirstVNF_RAM_Server ) + Max( ( BR / CRS ),Const ) ) )", "choosing": "( Max( ( Max( MUM,MUM ) / ( MLU - CS ) ),MUM ) * ( ( ( MUM / MUC ) - ( RRSe + MUM ) ) / ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( DDR + BR ) ,DDR ) ,BR ) - ( AMS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( MLU ,( MUC + ( RRSe + RMSe ) ) ) - RMSe ) * DS ) - RMSe ) * ( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MRS - DDR ),( FirstVNF_CPU + RRS ) ) ,( ( ACS - FirstVNF_RAM_Server ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe + MUM ) / ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( AMS ,MDR ) ,( Min( MRS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) ) )", "choosing": "Max( ( CS * DS ),( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,CRS ) - Max( RRS,PN ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( CS - MUC ) / Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MRS - DDR ),( FirstVNF_CPU + FirstVNF_RAM ) ) ,( Max( Max( ( ( FirstVNF_Mem_Server + ARS ) * DDR ),Min( FirstVNF_CPU ,CRS ) ),FirstVNF_CPU ) - ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC - MUC ),( CS + MUM ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR * FirstVNF_Mem_Server ) / BR ) ,( Max( ACS,FirstVNF_RAM_Server ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MUR - Max( ( MUC / CS ),( ( CS + MUC ) * DS ) ) ),( ( MUM - DS ) - RRSe ) ) + Min( DS ,( ( RCSe + MLU ) / RMSe ) ) ) * ( ( CS - MUC ) / ( MUR * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * ACS ) ,( ( ACS - FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( ( ( ( ( DS - MLU ) * RCSe ) / Max( MUC,MUR ) ) / ( ( MUR * RMSe ) * Min( CS ,MLU ) ) ) - MUC ) / Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ( MRS / ( ARS * Min( ( ( ( FirstVNF_CPU_Server * ACS ) * FirstVNF_Mem ) * MRS ) ,( Min( DDR ,RRS ) + BR ) ) ) ) ) ,Min( CRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUR ,( CS + MUC ) ) - ( RCSe + ( Max( ( RCSe / DS ),RRSe ) * MUM ) ) ) - ( MLU / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server * MRS ) ,( PN * ARS ) ) - ( ( Max( FirstVNF_CPU_Server,MDR ) + Max( PN,PN ) ) - ( ( RRS / ( ARS / FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( RRSe + RMSe ) ,( MLU - MUM ) ) + ( ( MLU - MUC ) / ( MLU + RCSe ) ) ) + ( ( Max( MUR,MUM ) + ( ( ( Max( CS,MUM ) + Min( DS ,MUC ) ) * ( Min( MUC ,MLU ) + ( CS - MUR ) ) ) * ( ( Min( RRSe ,MLU ) / Min( MLU ,RCSe ) ) / ( Min( RCSe ,RMSe ) - ( MUC / RRSe ) ) ) ) ) + ( ( Max( CS,( RMSe / MUC ) ) * RCSe ) * ( MUR * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MRS - DDR ),( FirstVNF_CPU + RRS ) ) ,( ( ACS - FirstVNF_RAM_Server ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC / MUM ) ,( DS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( ( FirstVNF_Mem_Server - PN ) + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - ( Max( MUR,MLU ) * ( MUM + ( ( MUC - ( ( RRSe + DS ) / ( MUM * CS ) ) ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( RRS - CRS ) ) / ( FirstVNF_CPU_Server / AMS ) )", "choosing": "( Min( CS ,MUR ) / Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,MDR ) / ( FirstVNF_CPU_Server / ( FirstVNF_Mem - RRS ) ) )", "choosing": "Min( ( MLU * ( MUM + ( RCSe / ( ( Max( Min( MUC ,DS ),MUR ) - MUM ) + MLU ) ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / ( ( ( DDR + MDR ) + ( BR * FirstVNF_CPU ) ) / Const ) ) )", "choosing": "( Max( MLU,( RCSe / MUR ) ) + ( ( CS * RMSe ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( MRS - DDR ),( FirstVNF_CPU + RRS ) ) ,( ( ACS - FirstVNF_RAM_Server ) - Max( Const,FirstVNF_CPU ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + MUM ) / ( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( CS - MUC ) / Min( MLU ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( ( ACS - FirstVNF_RAM_Server ) - Max( Const,FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) )", "choosing": "( ( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( CS - MUC ) / ( MUR * MUC ) ) ) + ( ( CS * DS ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( ARS ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR - MUM ) / ( ( MUC - DS ) / Max( CS,MUC ) ) ) - ( ( ( CS - RRSe ) / ( RCSe + DS ) ) / Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( Min( ( Max( ( DDR + FirstVNF_CPU_Server ),RRS ) + ARS ) ,( BR * ACS ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( ( Max( Min( MUM ,( RRSe + MLU ) ),MUM ) - Max( ( ( RMSe - MLU ) + Max( DS,( ( RMSe - CS ) - MUC ) ) ),( RCSe - RRSe ) ) ) * DS ) / ( MUR * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( BR + FirstVNF_CPU_Server ) ) + Min( RRS ,Min( Const ,Min( Min( MDR ,( FirstVNF_RAM_Server * ( MRS - Const ) ) ) ,Max( CRS,MRS ) ) ) ) )", "choosing": "Max( ( ( CS / MLU ) + Min( ( Min( Max( ( ( MLU + CS ) / ( CS * RCSe ) ),MLU ) ,CS ) - ( ( MLU + RCSe ) + MUR ) ) ,MUC ) ),Max( Min( Min( RMSe ,( RCSe * Min( MUC ,DS ) ) ) ,CS ),( RMSe - MUC ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8981254465932332}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "Min( PN ,( Max( ACS,Const ) - Max( MRS,FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * DS ) * Min( ( Max( MUM,RRSe ) - DS ) ,Max( MUC,( MLU + CS ) ) ) )", "obj1": 0.4775510204081633, "obj2": 0.5079539940418616}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_RAM * ACS ) ) * ( ( FirstVNF_Mem + ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR + RCSe ),Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUM - Max( DS,CS ) ) ) / MUR ) ) )", "obj1": 0.6959183673469388, "obj2": 0.31072656104893676}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / ( ( ( DDR + FirstVNF_RAM_Server ) + ( ( Max( Const,MRS ) + ( ( FirstVNF_CPU - ACS ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) / Const ) ) )", "choosing": "( Max( ( MLU * DS ),CS ) + ( ( ( DS - Min( CS ,DS ) ) * RMSe ) + RCSe ) )", "obj1": 0.7081632653061225, "obj2": 0.24873492690444374}, {"determining": "Min( Min( Const ,Max( RRS,Max( DDR,MRS ) ) ) ,( ( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( MUM - DS ) ),Min( ( ( RMSe - Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.7653061224489796, "obj2": 0.20660030732014642}, {"determining": "( ( PN * ( ARS * AMS ) ) - Max( Min( ( PN * AMS ) ,Min( ( Max( Max( Const,DDR ),Min( MDR ,ARS ) ) / MRS ) ,( DDR + DDR ) ) ),Min( ( PN - BR ) ,Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR * ( ( RCSe - CS ) / Max( DS,( ( ( RRSe - MUM ) / Min( CS ,DS ) ) - DS ) ) ) ) ),( RCSe - ( Min( ( ( MLU + MUM ) / ( CS / DS ) ) ,( Min( RCSe ,DS ) - ( MUM * ( ( MUR * MUC ) * ( CS * RRSe ) ) ) ) ) - MLU ) ) )", "obj1": 0.7591836734693878, "obj2": 0.2464612747291639}, {"determining": "Min( FirstVNF_RAM ,Max( Max( RRS,DDR ),Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( ( MUR + RRSe ) * MUR ) ) * ( ( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / RCSe ) - MUC ) / Min( MLU ,MLU ) ) )", "obj1": 0.8061224489795918, "obj2": 0.179175893171482}, {"determining": "( ( AMS - ACS ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( ( Min( RRSe ,MUR ) - Min( RCSe ,DS ) ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.8224489795918367, "obj2": 0.17351011727907822}, {"determining": "( ( ACS - Max( ARS,( Min( MDR ,( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) ) ) / Max( FirstVNF_RAM,CRS ) )", "choosing": "( ( Min( ( RCSe - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.6285714285714286, "obj2": 0.3259649591217298}, {"determining": "( ( CRS * ( FirstVNF_RAM + ( ( BR - FirstVNF_Mem ) / ( Min( FirstVNF_RAM ,PN ) / ( MDR + FirstVNF_RAM ) ) ) ) ) + ( FirstVNF_RAM * ( ( ACS / ( FirstVNF_RAM_Server + MRS ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( Min( CS ,( RCSe / ( ( MUR - ( RCSe - Min( RRSe ,CS ) ) ) + ( RMSe / MUM ) ) ) ) / MUM ) - ( MUM / MUC ) )", "obj1": 0.8755102040816326, "obj2": 0.08800716648775651}, {"determining": "( ( ACS - Max( ARS,( Min( MDR ,( DDR + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) ) ) / Max( FirstVNF_RAM,CRS ) )", "choosing": "( ( Min( ( RCSe - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.6285714285714286, "obj2": 0.3259649591217298}, {"determining": "Min( Max( ( MRS - DDR ),( Min( FirstVNF_Mem_Server ,MRS ) + RRS ) ) ,( ( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) / DS )", "obj1": 0.863265306122449, "obj2": 0.14836525592768451}, {"determining": "( ( ( ( PN * FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) / ( MRS - PN ) ) + Max( ACS,MRS ) )", "choosing": "( Max( Min( MLU ,MLU ),( RCSe + RCSe ) ) + ( Max( MUM,( ( ( CS * ( MLU * ( DS + CS ) ) ) * RRSe ) / RCSe ) ) / ( MUM - MUC ) ) )", "obj1": 0.8693877551020408, "obj2": 0.14648088919496544}, {"determining": "( ( FirstVNF_Mem * Max( ( PN - ( Const * ( ( FirstVNF_RAM_Server + ARS ) - ( ( FirstVNF_Mem / ACS ) / Const ) ) ) ),CRS ) ) * Min( DDR ,MRS ) )", "choosing": "Min( Min( ( ( ( ( RMSe * RMSe ) * Max( ( MUR * Min( MUR ,CS ) ),DS ) ) + ( RCSe + MUM ) ) * DS ) ,CS ) ,( RCSe - Min( ( Min( ( Min( ( MUR * RRSe ) ,MUC ) / CS ) ,MUC ) * RCSe ) ,Max( ( ( RMSe / ( CS - RMSe ) ) - ( MLU / Max( RRSe,( RCSe * MUM ) ) ) ),MLU ) ) ) )", "obj1": 0.4, "obj2": 0.5787581574559135}, {"determining": "( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUM + MLU ) / Min( MLU ,MUR ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "( ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ) - FirstVNF_CPU_Server ) + ( CRS * FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUM + CS ),Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) )", "obj1": 0.9816326530612245, "obj2": 0.02212174678214533}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.023353425974393237}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "( ( DDR + FirstVNF_RAM ) * ( ACS * MRS ) )", "choosing": "( Max( ( MUR * RRSe ),Max( MUR,MUC ) ) * ( DS + RRSe ) )", "obj1": 0.22653061224489796, "obj2": 0.7509165061698968}, {"determining": "Min( Max( ( MRS - DDR ),( Min( FirstVNF_Mem_Server ,MRS ) + RRS ) ) ,( ( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( ACS ,( MDR * MDR ) ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * ( CS / RRSe ) ) / Min( MUC ,MUM ) )", "obj1": 0.9244897959183673, "obj2": 0.0819172198178351}, {"determining": "Min( Min( Const ,BR ) ,Min( DDR ,( ( ( ( Max( ( ACS / FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) + FirstVNF_CPU ) - RRS ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) / Max( DDR,BR ) ) ) )", "choosing": "Max( Min( ( Min( Min( Max( MUR,( ( MUC / DS ) * ( MUC / MUM ) ) ) ,( RMSe / MLU ) ) ,( RRSe - CS ) ) * RMSe ) ,( CS * RRSe ) ),MLU )", "obj1": 0.21020408163265306, "obj2": 0.7774735881511659}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + ( ( BR - FirstVNF_Mem ) / ( ( DDR / ( RRS * ARS ) ) / RRS ) ) ) ) + ( FirstVNF_RAM * ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( MLU ,( Min( MUC ,MUC ) + MUM ) ) + Min( MUC ,( ( RCSe * MUM ) - Min( DS ,CS ) ) ) ),Max( ( MUM / RCSe ),( MUC - CS ) ) )", "obj1": 0.8816326530612245, "obj2": 0.0825907327718255}, {"determining": "( Max( Min( ACS ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM_Server,CRS ) ) + Max( Max( FirstVNF_CPU_Server,Const ),Min( MDR ,ARS ) ) )", "choosing": "Min( ( ( MLU + MUM ) / ( CS / MLU ) ) ,( RCSe / ( MUM + ( RMSe / MLU ) ) ) )", "obj1": 0.18979591836734694, "obj2": 0.7904241914531991}, {"determining": "( ( Max( BR,ARS ) - ( BR * AMS ) ) * ( Min( ( Max( Const,FirstVNF_Mem ) * ARS ) ,RRS ) / Max( DDR,BR ) ) )", "choosing": "( Max( ( ( MUM - DS ) - MUR ),MUR ) + Max( ( ( RCSe / RRSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8239598051837363}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Min( AMS ,FirstVNF_RAM ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( RCSe,RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.46530612244897956, "obj2": 0.5186632559911997}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_RAM * ACS ) ) * ( ( FirstVNF_Mem + ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR + RCSe ),Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUM - Max( DS,CS ) ) ) / MUR ) ) )", "obj1": 0.9428571428571428, "obj2": 0.05492833993275795}, {"determining": "( Max( ARS,ACS ) * Min( ( FirstVNF_Mem / ( MRS * AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( DS ,RMSe ) ,Min( MUR ,MLU ) ) * ( ( MUC / MLU ) + ( RMSe * DS ) ) ) * ( ( Max( MUR,MLU ) / Min( MUR ,MUM ) ) + Max( ( MLU * DS ),( MUC + RRSe ) ) ) )", "obj1": 0.39591836734693875, "obj2": 0.5966982387393701}, {"determining": "( Max( ( CRS - ACS ),CRS ) / Const )", "choosing": "( ( ( ( CS - RRSe ) / ( Min( ( RRSe * RMSe ) ,RMSe ) * DS ) ) / ( ( MUM / RCSe ) * ( MUC / CS ) ) ) - ( ( Min( DS ,RMSe ) + ( MUC + MLU ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.6313872833073685}, {"determining": "( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( ACS + FirstVNF_CPU ) ),FirstVNF_Mem ) * Min( ACS ,Const ) )", "choosing": "Min( Min( CS ,Max( ( ( Min( Min( ( MUM - MUR ) ,MUR ) ,( RMSe / ( MUR / RRSe ) ) ) + Max( RCSe,MUM ) ) + ( MUC - ( RMSe + CS ) ) ),RCSe ) ) ,( Max( ( MUM + MLU ),MUC ) + Max( ( RMSe * RCSe ),( RMSe / MLU ) ) ) )", "obj1": 0.43673469387755104, "obj2": 0.5498795330324101}, {"determining": "( ( Max( ARS,BR ) - ( AMS * BR ) ) * ( ( ( Min( ( ( FirstVNF_CPU_Server - CRS ) - Max( MRS,( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,BR ) + FirstVNF_Mem ) + PN ) / Max( DDR,BR ) ) )", "choosing": "( ( ( MUR - ( MUM - DS ) ) * MUR ) + ( ( CS * ( Min( MUC ,MUR ) + RMSe ) ) / ( MLU - CS ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8560819361250306}, {"determining": "Min( Min( Const ,Max( RRS,Max( DDR,MRS ) ) ) ,( ( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( MUM - DS ) ),Min( ( ( RMSe - Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.605812773292718}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) * ( DDR + FirstVNF_CPU_Server ) ) ,Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) ,Max( Min( ( ACS - ACS ) ,Min( FirstVNF_Mem ,RRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8467671438517204}, {"determining": "( ( Min( ( PN / MRS ) ,FirstVNF_RAM ) / MDR ) * ( FirstVNF_RAM_Server - Min( FirstVNF_Mem_Server ,ACS ) ) )", "choosing": "Max( Min( Min( MUR ,( MLU * Min( MLU ,Min( ( ( MUR - CS ) * ( MUC - DS ) ) ,MUM ) ) ) ) ,( MUR * ( ( RCSe - CS ) / Max( DS,( ( ( RRSe - MUM ) / Min( CS ,DS ) ) - DS ) ) ) ) ),( RCSe - ( Min( ( ( ( Max( MUR,RMSe ) * ( MLU + RMSe ) ) + MUM ) / ( CS / DS ) ) ,( Min( RCSe ,RRSe ) - ( MUM * ( Max( MUR,MUC ) * ( CS * MLU ) ) ) ) ) - MLU ) ) )", "obj1": 0.45102040816326533, "obj2": 0.5295924914149067}, {"determining": "( ( Min( Max( ( MRS - DDR ),( Min( FirstVNF_Mem_Server ,MRS ) + RRS ) ) ,( ( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) ) - Max( Const,FirstVNF_CPU ) ) ) + Const ) * ( FirstVNF_CPU * RRS ) )", "choosing": "( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) )", "obj1": 0.3163265306122449, "obj2": 0.670031992074091}, {"determining": "( ( ( FirstVNF_Mem - ( Max( DDR,( FirstVNF_RAM_Server - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * Max( DDR,ARS ) ) ) * FirstVNF_Mem ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( MUR * MUC ) * ( CS * RRSe ) ) - RRSe ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( CS / ( RMSe + MLU ) ) )", "obj1": 0.32857142857142857, "obj2": 0.6430000604751975}, {"determining": "( ( ( FirstVNF_Mem - Max( CRS,CRS ) ) * ( MRS + BR ) ) / Max( FirstVNF_Mem,CRS ) )", "choosing": "( Max( ( MUR + RCSe ),( RCSe - ( MUM * MLU ) ) ) + Min( Max( RCSe,RMSe ) ,( ( ( RRSe / RMSe ) * ( MUC / CS ) ) - RRSe ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6857339724830995}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,MUC ) )", "obj1": 0.9938775510204082, "obj2": 0.0027813185285845143}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( DDR + AMS ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.4448979591836735, "obj2": 0.5361716832884712}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,ACS ) + FirstVNF_RAM ) ,( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_Mem * Max( ( PN - MRS ),BR ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( Min( CS ,( MUC * DS ) ) * RRSe ) ),Min( ( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - ( DS + DS ) ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7852404451875611}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8713856235356}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_RAM * ACS ) ) * ( ( FirstVNF_Mem + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR - RMSe ) + Max( RMSe,MUR ) ) + ( Min( MLU ,CS ) * ( MUM - MUC ) ) ) * ( ( ( CS + RRSe ) * ( MLU - MUC ) ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) )", "obj1": 0.9346938775510204, "obj2": 0.05772165607707941}, {"determining": "Max( Min( MRS ,MDR ),Max( MRS,MDR ) )", "choosing": "( ( ( MLU + MUC ) + ( RRSe * ( MLU - MUM ) ) ) / ( ( MLU - MUM ) + Min( MUC ,CS ) ) )", "obj1": 0.2857142857142857, "obj2": 0.7001062074021767}, {"determining": "Max( Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS / FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( MUR + DS ) / CS ) ) * Max( ( RCSe * ( RCSe / Max( RRSe,MUC ) ) ),MUM ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.6540808353836052}, {"determining": "Min( Min( Const ,ACS ) ,( ( ( FirstVNF_RAM * Max( CRS,CRS ) ) - Max( RRS,MRS ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( MUC,Min( MUC ,CS ) ) - RMSe ),( ( CS * Min( CS ,Min( RMSe ,( DS * ( MUM - Min( RMSe ,MUM ) ) ) ) ) ) / ( MUM - DS ) ) )", "obj1": 0.2612244897959184, "obj2": 0.7107391692616909}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "Min( Min( Min( BR ,( Min( Min( ARS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( DDR - FirstVNF_CPU ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( ( MUC / CS ) / RRSe ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7297705964538184}, {"determining": "Min( Min( Const ,BR ) ,( ( ( FirstVNF_CPU + PN ) / Max( DDR,BR ) ) + Min( FirstVNF_Mem_Server ,( AMS * AMS ) ) ) )", "choosing": "Max( ( ( Max( MUC,( ( DS / MUM ) / Max( ( CS * Min( RMSe ,MLU ) ),Max( MUM,MUC ) ) ) ) - DS ) / ( MUC * RRSe ) ),MLU )", "obj1": 0.24489795918367346, "obj2": 0.7361286305257915}, {"determining": "( Max( BR,Max( ( DDR / FirstVNF_CPU ),RRS ) ) * ( BR - AMS ) )", "choosing": "( Min( CS ,MLU ) + ( RRSe - ( ( MUR - RRSe ) - DS ) ) )", "obj1": 0.35306122448979593, "obj2": 0.6249348549321162}, {"determining": "( Min( ACS ,MDR ) / ( FirstVNF_CPU_Server / ( FirstVNF_Mem - RRS ) ) )", "choosing": "Min( ( MLU * ( MUM + ( RCSe / ( ( Max( Min( MUC ,DS ),MUR ) - MUM ) + MLU ) ) ) ) ,( MUC * RRSe ) )", "obj1": 0.3040816326530612, "obj2": 0.6755879170854832}, {"determining": "( Max( BR,CRS ) + ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),( MUR - Max( ( MUR - MUR ),Max( ( MLU / DS ),MUR ) ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8829750838690663}, {"determining": "Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,Max( AMS,( MRS / Max( ( ARS + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + ( PN * Min( ( AMS / ARS ) ,( FirstVNF_Mem_Server - RRS ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / RMSe ),Max( RCSe,MLU ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) * ( DDR + FirstVNF_CPU_Server ) ) ,Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) ,Max( Min( ( ACS - ACS ) ,Min( FirstVNF_Mem ,RRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8545217368523863}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ( FirstVNF_CPU - ACS ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8933849609035494}, {"determining": "( Max( Min( MDR ,FirstVNF_Mem ),Max( DDR,ARS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.3, "obj2": 0.6795439703080353}, {"determining": "( Max( ARS,ACS ) * Min( ( FirstVNF_Mem / ( MRS * ( AMS / CRS ) ) ) ,( ARS * ( ( FirstVNF_Mem_Server + CRS ) - Min( Const ,CRS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RMSe ) ,Min( MUR ,DS ) ) * ( ( MUC / MLU ) + ( RMSe * DS ) ) ) * ( Min( RCSe ,( MUC * Min( Min( RMSe ,MUR ) ,( DS / ( Max( MUM,DS ) / MUM ) ) ) ) ) * RCSe ) )", "obj1": 0.37142857142857144, "obj2": 0.613500202546379}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8713856235356}, {"determining": "( ( ( FirstVNF_CPU_Server / Max( ARS,( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * FirstVNF_CPU ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MLU,MUC ),( RRSe + MUC ) ) + Min( Min( ( ( Max( Max( ( MUC / RMSe ),MUM ),DS ) - Max( RCSe,Max( MUC,( MUR / MUM ) ) ) ) / DS ) ,MUM ) ,Max( RCSe,RMSe ) ) )", "obj1": 0.32653061224489793, "obj2": 0.6501222383687636}, {"determining": "( Max( ACS,ARS ) * ( ( FirstVNF_Mem / ( AMS * ( Max( FirstVNF_RAM,CRS ) * ACS ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - Min( MLU ,Min( Max( MUC,( Max( ( RRSe - DS ),MUC ) * Max( MUC,RCSe ) ) ) ,Min( RMSe ,( DS - RCSe ) ) ) ) ) * ( Min( Min( DS ,RMSe ) ,Min( MUR ,MLU ) ) * ( ( MUC / MLU ) + ( RMSe + DS ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.6237292227112601}, {"determining": "Min( Min( Const ,BR ) ,( ( ( FirstVNF_CPU + PN ) / Max( DDR,BR ) ) / ( FirstVNF_CPU_Server / ( ( ( DDR + MDR ) + ( BR * FirstVNF_CPU ) ) / Const ) ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RCSe ) ),MLU )", "obj1": 0.24285714285714285, "obj2": 0.7478748488525382}, {"determining": "( ( ( ACS * ( Max( ARS,MRS ) - FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_RAM * ACS ) ) * ( ( FirstVNF_Mem + ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR + RCSe ),Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( Min( ( Max( MUM,RRSe ) - DS ) ,Max( MUC,( MLU + CS ) ) ) - ( DS * CS ) ) ) / MUR ) ) )", "obj1": 0.9285714285714286, "obj2": 0.07396651258372193}, {"determining": "( Min( Const ,BR ) + ( ( ( ACS * FirstVNF_CPU_Server ) - Min( BR ,( ( FirstVNF_CPU_Server / Max( ( MDR + DDR ),AMS ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( DS - MUM ) - ( CS * RRSe ) ),( MLU + Max( ( Min( MUR ,( MUC + RCSe ) ) * ( ( CS / RMSe ) * RCSe ) ),( Max( MLU,RRSe ) + Min( Min( MUC ,CS ) ,( ( ( MUR + MUC ) * Min( RCSe ,MUM ) ) / Max( DS,MUM ) ) ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.7039189304396578}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( DDR / Max( ARS,Min( Min( FirstVNF_CPU_Server ,Max( RRS,FirstVNF_CPU_Server ) ) ,CRS ) ) ) )", "choosing": "( Min( Max( ( MLU - ( RRSe / RRSe ) ),RCSe ) ,( RRSe / MLU ) ) * ( DS / RRSe ) )", "obj1": 0.1510204081632653, "obj2": 0.850110166413781}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.10204081632653061, "obj2": 0.892233646563153}, {"determining": "Max( Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( DDR + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS / FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( DS + MUR ) / CS ) ) * Max( ( RCSe * ( RCSe / Max( MUM,CS ) ) ),MUM ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3673469387755102, "obj2": 0.6184450150557986}, {"determining": "( Max( BR,CRS ) + ( FirstVNF_RAM / ( FirstVNF_RAM_Server * AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),( MUR - Max( ( MUR - MUR ),Max( ( MLU / DS ),MUR ) ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8829750838690663}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( Min( ( FirstVNF_CPU - PN ) ,( ( ( FirstVNF_Mem + ( ( FirstVNF_CPU - ACS ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem,ACS ) ) * Min( BR ,( FirstVNF_RAM * ACS ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RCSe + MUR ),Max( MUM,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUM - Max( ( ( CS / RCSe ) * DS ),CS ) ) ) / MUR ) ) )", "obj1": 0.9285714285714286, "obj2": 0.07396651258372193}, {"determining": "Min( Max( Max( MRS,( CRS / MRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,PN ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),( ( MUM + ( Min( ( MUC * MUM ) ,( MLU - MUR ) ) - MUR ) ) + MUR ) ) / Max( ( MUC - RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.023353425974393237}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( Min( ( FirstVNF_CPU - PN ) ,( ( MDR - ( BR / AMS ) ) / ( ( FirstVNF_Mem + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( CS * Max( RCSe,RCSe ) ) + Max( RRSe,RCSe ) )", "obj1": 0.9408163265306122, "obj2": 0.05496978229961795}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( Max( Const,Min( AMS ,ACS ) ) / FirstVNF_CPU_Server ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( MUM - DS ) ),Min( ( ( RMSe - Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.23673469387755103, "obj2": 0.7484026229600794}, {"determining": "Max( Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS / FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( MUR + DS ) / CS ) ) * Max( ( RCSe * ( RCSe / Max( RRSe,MUC ) ) ),MUM ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3693877551020408, "obj2": 0.6137121701086016}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,MUC ) )", "obj1": 0.9959183673469387, "obj2": 0.001785346806189979}, {"determining": "Min( Min( Const ,Max( RRS,Max( DDR,MRS ) ) ) ,( ( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( MUM - DS ) ),Min( ( ( RMSe - Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.23673469387755103, "obj2": 0.7484026229600794}, {"determining": "Min( MDR ,( ( ACS - FirstVNF_RAM_Server ) - ( Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) / CRS ),( CRS / ACS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR - MUM ) / ( ( ( DS - ( MUR + ( MLU * RMSe ) ) ) + MLU ) / ( CS / MUC ) ) ) - ( ( ( MUM - RRSe ) / ( RCSe + DS ) ) / ( ( MLU / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ARS ) ,( ACS + ( FirstVNF_CPU_Server - ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR - CS ) - ( MLU / ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,CRS ) * DDR ) - ( AMS - FirstVNF_CPU ) )", "choosing": "Min( ( RMSe * ( Max( ( MUR * MLU ),MUR ) + ( RMSe - MUM ) ) ) ,( RCSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( Min( ( Max( ( DDR + FirstVNF_CPU_Server ),RRS ) + ARS ) ,( BR * ACS ) ) / Min( PN ,ACS ) ) )", "choosing": "Max( ( CS * DS ),Min( ( MLU + ( ( CS * RRSe ) + RCSe ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - DDR ) )", "choosing": "( ( RMSe - DS ) / ( DS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) - ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Min( ( Min( ( ( DS + MLU ) - ( CS / MUC ) ) ,( ( CS * RRSe ) + ( MUR * MUR ) ) ) / MUM ) ,( DS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * DS ) * ( ( RCSe * Max( Min( Max( RCSe,( Max( MUM,MUM ) + MUR ) ) ,MUM ),Max( RRSe,( MLU * ( MUM + RCSe ) ) ) ) ) * ( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) / ( Min( PN ,FirstVNF_RAM ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( Max( RCSe,( MUR * RMSe ) ) ,( ( CS * RCSe ) - ( RCSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) )", "choosing": "( Max( ( DS + ( RMSe / MUC ) ),( MLU / MUR ) ) + ( ( DS * CS ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * CRS ) - ( BR * ( ACS / Const ) ) )", "choosing": "( Min( ( RMSe + MUC ) ,Max( DS,DS ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( DDR,DDR ),FirstVNF_Mem ) - ( BR + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RCSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) * ( DDR + FirstVNF_CPU_Server ) ) ,Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) ,Max( Min( ( ACS - ACS ) ,Min( FirstVNF_Mem ,RRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - RRS ) - ( AMS * ACS ) ) * Max( ( FirstVNF_Mem / BR ),( DDR - MDR ) ) ) - Max( ( Max( AMS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server + CRS ) ),Min( ( Const / BR ) ,( Const + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) + Max( RMSe,MUR ) ) + ( Min( MLU ,CS ) * ( MUM - MUC ) ) ) * ( ( ( CS + RRSe ) * ( MLU - MUC ) ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) - ( ( Max( MDR,FirstVNF_CPU_Server ) * Max( PN,PN ) ) - ( ( MDR / RRS ) * Max( Min( ( CRS - BR ) ,FirstVNF_RAM ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MUM,( ( ( MUR - MUR ) / DS ) + MUM ) ),( MLU - RRSe ) ) + ( ( MLU + RCSe ) / ( MLU - RMSe ) ) ) + ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - ACS ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) / ( ( BR / MRS ) * ( FirstVNF_CPU_Server - MDR ) ) ) * ( ( ( BR - FirstVNF_CPU_Server ) / ( BR + PN ) ) * Max( CRS,AMS ) ) )", "choosing": "Min( ( RRSe - Min( ( MUR + RMSe ) ,CS ) ) ,( ( DS / RCSe ) * Max( MLU,( MUC - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * BR ) * Min( ACS ,AMS ) ),( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,( Max( Min( MDR ,FirstVNF_Mem ),Max( DDR,ARS ) ) * ( ( FirstVNF_Mem_Server - BR ) - ( ACS / DDR ) ) ) )", "choosing": "( ( MUR - CS ) / Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) )", "choosing": "( Max( MLU,( RCSe / MUR ) ) + Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( AMS + FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MUM + RRSe ) + Max( DS,DS ) ) + MUM ) ,( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_Mem * ( MDR * RRS ) ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "( Max( DS,MLU ) / Min( ( Max( MLU,RCSe ) / MUC ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * CRS ) - ( BR * ( ACS / Const ) ) )", "choosing": "( Min( ( RMSe + MUC ) ,Max( DS,DS ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * DS ) * ( ( RCSe * Max( Min( Max( RCSe,( Max( MUM,MUM ) + MUR ) ) ,MUM ),Max( RRSe,( MLU * ( MUM + RCSe ) ) ) ) ) * ( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) * Min( ( ARS + ( FirstVNF_RAM_Server - Min( Max( ( FirstVNF_Mem - ( FirstVNF_CPU + AMS ) ),( FirstVNF_RAM_Server + ( PN / ACS ) ) ) ,AMS ) ) ) ,( DDR - ARS ) ) )", "choosing": "Max( ( MUR + DS ),Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) / ( Max( RMSe,Min( Max( Min( ( DS / MUC ) ,RRSe ),( MUR * ( RCSe * RRSe ) ) ) ,( ( ( ( RCSe / MUM ) + Max( DS,MUR ) ) - RMSe ) + MUR ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MRS - DDR ),( FirstVNF_CPU + ( BR * ( ARS * ACS ) ) ) ) ,( ( ACS - FirstVNF_RAM_Server ) + Max( ( BR / CRS ),Const ) ) )", "choosing": "( Max( ( Max( MUM,MUM ) / ( MLU - CS ) ),MUM ) * ( ( ( MUM / MUC ) - ( RRSe + MUM ) ) / ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( DDR + BR ) ,DDR ) ,BR ) - ( AMS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( MLU ,( MUC + ( RRSe + RMSe ) ) ) - RMSe ) * DS ) - RMSe ) * ( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( BR * Min( Max( MRS,RRS ) ,( Const + Const ) ) ) - ( BR * CRS ) )", "choosing": "( ( ( RCSe / ( ( MLU + Min( RMSe ,( RCSe - RRSe ) ) ) + ( ( ( MLU - DS ) + ( MLU - RMSe ) ) * Max( CS,DS ) ) ) ) * MLU ) / Min( MUM ,( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ARS ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR - MUM ) / ( ( MUC - DS ) / Max( CS,MUC ) ) ) - ( ( ( CS - RRSe ) / ( RCSe + DS ) ) / Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( BR + FirstVNF_CPU_Server ) ) + Min( RRS ,Min( Const ,Min( Min( MDR ,( FirstVNF_RAM_Server * ( MRS - Const ) ) ) ,Max( CRS,MRS ) ) ) ) )", "choosing": "Max( ( ( CS / MLU ) + Min( ( Min( Max( ( ( MLU + CS ) / ( CS * RCSe ) ),MLU ) ,CS ) - ( ( MLU + RCSe ) + MUR ) ) ,MUC ) ),Max( Min( Min( RMSe ,( RCSe * Min( MUC ,DS ) ) ) ,CS ),( RMSe - MUC ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8981254465932332}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / ( ( ( DDR + FirstVNF_RAM_Server ) + ( ( Max( Const,MRS ) + ( ( FirstVNF_CPU - ACS ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) / Const ) ) )", "choosing": "( Max( ( MLU * DS ),CS ) + ( ( ( DS - Min( CS ,DS ) ) * RMSe ) + RCSe ) )", "obj1": 0.7081632653061225, "obj2": 0.24873492690444374}, {"determining": "Min( PN ,( Max( ACS,Const ) - Max( MRS,FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * DS ) * Min( ( Max( MUM,RRSe ) - DS ) ,Max( MUC,( MLU + CS ) ) ) )", "obj1": 0.4775510204081633, "obj2": 0.5079539940418616}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.30532402512547024}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7571428571428571, "obj2": 0.18478565132744648}, {"determining": "Min( Max( ( MRS - DDR ),( Min( FirstVNF_Mem_Server ,MRS ) + RRS ) ) ,( ( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) / DS )", "obj1": 0.863265306122449, "obj2": 0.14836525592768451}, {"determining": "( ( FirstVNF_RAM * ( BR + ( ( BR - FirstVNF_Mem ) / ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,FirstVNF_Mem ) / ( MDR + FirstVNF_RAM ) ) ) ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( ( DS + MLU ) - ( CS / MUC ) ) ,( RCSe / ( ( MLU + Min( RMSe ,( RCSe - RRSe ) ) ) + ( ( ( MLU - DS ) + ( MLU / RMSe ) ) * ( CS * MUM ) ) ) ) ) / MUM ) ,( DS + MUM ) )", "obj1": 0.926530612244898, "obj2": 0.04555300953920619}, {"determining": "Min( Max( ( MRS - DDR ),( Min( FirstVNF_Mem_Server ,MRS ) + RRS ) ) ,( ( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( ACS ,( MDR * MDR ) ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * ( CS / RRSe ) ) / Min( MUC ,MUM ) )", "obj1": 0.9244897959183673, "obj2": 0.0819172198178351}, {"determining": "( ( AMS - ACS ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( ( Min( RRSe ,MUR ) - Min( RCSe ,DS ) ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.8224489795918367, "obj2": 0.17351011727907822}, {"determining": "( ( ( ( CRS - RRS ) - ( MRS * ACS ) ) * Max( ( ( Const + ( MRS * ACS ) ) - MDR ),( FirstVNF_Mem - BR ) ) ) - Max( ( Max( AMS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server + CRS ) ),Min( ( Const / BR ) ,( Const + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU + MUC ) + ( RRSe * ( Max( MUC,Max( ( MUM - MUC ),RMSe ) ) - MUM ) ) ) + ( Min( MLU ,CS ) * ( MUM - MUC ) ) ) * ( ( ( CS * RRSe ) * ( MLU - MUC ) ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) )", "obj1": 0.8693877551020408, "obj2": 0.13331890673967028}, {"determining": "( ( CRS * ( FirstVNF_RAM + ( ( BR - FirstVNF_Mem ) / ( Min( FirstVNF_RAM ,PN ) / ( MDR + FirstVNF_RAM ) ) ) ) ) + ( FirstVNF_RAM * ( ( ACS / ( FirstVNF_RAM_Server + MRS ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( Min( CS ,( RCSe / ( ( MUR - ( RCSe - Min( RRSe ,CS ) ) ) + ( RMSe / MUM ) ) ) ) / MUM ) - ( MUM / MUC ) )", "obj1": 0.8755102040816326, "obj2": 0.08800716648775651}, {"determining": "Min( FirstVNF_RAM ,Max( Max( RRS,DDR ),Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( ( MUR + RRSe ) * MUR ) ) * ( ( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / RCSe ) - MUC ) / Min( MLU ,MLU ) ) )", "obj1": 0.8061224489795918, "obj2": 0.179175893171482}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "( Min( FirstVNF_Mem ,MRS ) - ( BR / ( ( ( FirstVNF_CPU + MDR ) - ( Max( DDR,MRS ) - RRS ) ) * MRS ) ) )", "choosing": "( ( CS * DS ) / Min( MUR ,MUM ) )", "obj1": 0.9795918367346939, "obj2": 0.021027818213093703}, {"determining": "Min( Min( Const ,BR ) ,Min( DDR ,( ( ( ( Max( ( ACS / FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) + FirstVNF_CPU ) - RRS ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) / Max( DDR,BR ) ) ) )", "choosing": "Max( Min( ( Min( Min( Max( MUR,( ( MUC / DS ) * ( MUC / MUM ) ) ) ,( RMSe / MLU ) ) ,( RRSe - CS ) ) * RMSe ) ,( CS * RRSe ) ),MLU )", "obj1": 0.21020408163265306, "obj2": 0.7774735881511659}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + ( ( BR - FirstVNF_Mem ) / ( ( DDR / ( RRS * ARS ) ) / RRS ) ) ) ) + ( FirstVNF_RAM * ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( MLU ,( Min( MUC ,MUC ) + MUM ) ) + Min( MUC ,( ( RCSe * MUM ) - Min( DS ,CS ) ) ) ),Max( ( MUM / RCSe ),( MUC - CS ) ) )", "obj1": 0.8816326530612245, "obj2": 0.0825907327718255}, {"determining": "( Max( Min( ACS ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM_Server,CRS ) ) + Max( Max( FirstVNF_CPU_Server,Const ),Min( MDR ,ARS ) ) )", "choosing": "Min( ( ( MLU + MUM ) / ( CS / MLU ) ) ,( RCSe / ( MUM + ( RMSe / MLU ) ) ) )", "obj1": 0.18979591836734694, "obj2": 0.7904241914531991}, {"determining": "( ( Max( BR,ARS ) - ( BR * AMS ) ) * ( Min( ( Max( Const,FirstVNF_Mem ) * ARS ) ,RRS ) / Max( DDR,BR ) ) )", "choosing": "( Max( ( ( MUM - DS ) - MUR ),MUR ) + Max( ( ( RCSe / RRSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8239598051837363}, {"determining": "( ( DDR + FirstVNF_RAM ) * ( ACS * MRS ) )", "choosing": "( Max( ( MUR * RRSe ),Max( MUR,MUC ) ) * ( DS + RRSe ) )", "obj1": 0.22653061224489796, "obj2": 0.7509165061698968}, {"determining": "Min( Min( Const ,Max( RRS,Max( DDR,MRS ) ) ) ,( ( ( FirstVNF_RAM * ACS ) - Min( FirstVNF_CPU ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( MUM - DS ) ),Min( ( ( RMSe - Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.605812773292718}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( RCSe - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.024373605193506436}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Min( FirstVNF_CPU_Server ,MRS ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( MUC,Max( ( ( ( CS + MUM ) * MUR ) - Min( Max( ( MUR * MUM ),Min( RMSe ,RMSe ) ) ,Min( ( MUR / MUC ) ,MUR ) ) ),( MUC - RRSe ) ) ) ,Min( MUC ,MUM ) ) )", "obj1": 0.46530612244897956, "obj2": 0.51381871554563}, {"determining": "( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUM + MLU ) / Min( MLU ,MUR ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "( ( ( FirstVNF_Mem - ( Max( DDR,Const ) - ( FirstVNF_Mem_Server / BR ) ) ) * FirstVNF_Mem ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( ( DS * DS ) / Min( ( RMSe / Max( ( MUC / MLU ),RRSe ) ) ,MUM ) )", "obj1": 0.39387755102040817, "obj2": 0.5831906055687394}, {"determining": "( ( Min( ( PN / MRS ) ,FirstVNF_RAM ) / MDR ) * ( FirstVNF_RAM_Server - Min( FirstVNF_Mem_Server ,ACS ) ) )", "choosing": "Max( Min( Min( MUR ,( MLU * Min( MLU ,Min( ( ( MUR - CS ) * ( MUC - DS ) ) ,MUM ) ) ) ) ,( MUR * ( ( RCSe - CS ) / Max( DS,( ( ( RRSe - MUM ) / Min( CS ,DS ) ) - DS ) ) ) ) ),( RCSe - ( Min( ( ( ( Max( MUR,RMSe ) * ( MLU + RMSe ) ) + MUM ) / ( CS / DS ) ) ,( Min( RCSe ,RRSe ) - ( MUM * ( Max( MUR,MUC ) * ( CS * MLU ) ) ) ) ) - MLU ) ) )", "obj1": 0.45102040816326533, "obj2": 0.5295924914149067}, {"determining": "( Max( ( CRS - ACS ),CRS ) / Const )", "choosing": "( ( ( ( CS - RRSe ) / ( Min( ( RRSe * RMSe ) ,RMSe ) * DS ) ) / ( ( MUM / RCSe ) * ( MUC / CS ) ) ) - ( ( Min( DS ,RMSe ) + ( MUC + MLU ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.6313872833073685}, {"determining": "( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( ACS + FirstVNF_CPU ) ),FirstVNF_Mem ) * Min( ACS ,Const ) )", "choosing": "Min( Min( CS ,Max( ( ( Min( Min( ( MUM - MUR ) ,MUR ) ,( RMSe / ( MUR / RRSe ) ) ) + Max( RCSe,MUM ) ) + ( MUC - ( RMSe + CS ) ) ),RCSe ) ) ,( Max( ( MUM + MLU ),MUC ) + Max( ( RMSe * RCSe ),( RMSe / MLU ) ) ) )", "obj1": 0.43673469387755104, "obj2": 0.5498795330324101}, {"determining": "( ( Max( ARS,BR ) - ( AMS * BR ) ) * ( ( ( Min( ( ( FirstVNF_CPU_Server - CRS ) - Max( MRS,( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,BR ) + FirstVNF_Mem ) + PN ) / Max( DDR,BR ) ) )", "choosing": "( ( ( MUR - ( MUM - DS ) ) * MUR ) + ( ( CS * ( Min( MUC ,MUR ) + RMSe ) ) / ( MLU - CS ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8560819361250306}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) * ( DDR + FirstVNF_CPU_Server ) ) ,Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) ,Max( Min( ( ACS - ACS ) ,Min( FirstVNF_Mem ,RRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8467671438517204}, {"determining": "( Min( FirstVNF_Mem ,ARS ) + ( ( Const + ( FirstVNF_CPU - MDR ) ) + ( RRS * FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( ( Max( DS,MLU ) + Min( Max( ( ( CS + MUC ) / ( RMSe / MLU ) ),MLU ) ,MUC ) ) / MLU ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( ( CS - MUC ),Min( Min( RMSe ,( Max( ( CS - RCSe ),( MUC + ( RCSe / DS ) ) ) * ( Max( ( RRSe + RRSe ),RMSe ) + DS ) ) ) ,CS ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8814666939755978}, {"determining": "( ( Min( Max( ( MRS - DDR ),( Min( FirstVNF_Mem_Server ,MRS ) + RRS ) ) ,( ( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) ) - Max( Const,FirstVNF_CPU ) ) ) + Const ) * ( FirstVNF_CPU * RRS ) )", "choosing": "( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) )", "obj1": 0.3163265306122449, "obj2": 0.670031992074091}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,MUC ) )", "obj1": 0.9938775510204082, "obj2": 0.0027813185285845143}, {"determining": "( ( ( FirstVNF_Mem - ( Max( DDR,( FirstVNF_RAM_Server - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * Max( DDR,ARS ) ) ) * FirstVNF_Mem ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( MUR * MUC ) * ( CS * RRSe ) ) - RRSe ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( CS / ( RMSe + MLU ) ) )", "obj1": 0.32857142857142857, "obj2": 0.6430000604751975}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( DDR + AMS ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.4448979591836735, "obj2": 0.5361716832884712}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,ACS ) + FirstVNF_RAM ) ,( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_Mem * Max( ( PN - MRS ),BR ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( Min( CS ,( MUC * DS ) ) * RRSe ) ),Min( ( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - ( DS + DS ) ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7852404451875611}, {"determining": "( ( AMS - Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( ( Min( RRSe ,MUR ) - Min( RCSe ,DS ) ) ,( Max( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ),MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.41020408163265304, "obj2": 0.5704068520892015}, {"determining": "( ( Min( ( CRS - ACS ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) / ( ( BR / MRS ) * ( FirstVNF_CPU_Server - MDR ) ) ) * ( ( ( BR * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU ) ) * Max( CRS,AMS ) ) )", "choosing": "Min( ( ( DS / RCSe ) * Max( Max( Min( MUM ,( MUR / ( Max( MUR,MUM ) - ( MLU - MLU ) ) ) ),RMSe ),( MUC - MUC ) ) ) ,( RRSe - Min( ( MUR + RMSe ) ,CS ) ) )", "obj1": 0.2857142857142857, "obj2": 0.692662538075371}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8763071582772949}, {"determining": "Max( Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS / FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( MUR + DS ) / CS ) ) * Max( ( RCSe * ( RCSe / Max( RRSe,MUC ) ) ),MUM ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.6540808353836052}, {"determining": "Min( Min( Const ,ACS ) ,( ( ( FirstVNF_RAM * Max( CRS,CRS ) ) - Max( RRS,MRS ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( MUC,Min( MUC ,CS ) ) - RMSe ),( ( CS * Min( CS ,Min( RMSe ,( DS * ( MUM - Min( RMSe ,MUM ) ) ) ) ) ) / ( MUM - DS ) ) )", "obj1": 0.2612244897959184, "obj2": 0.7107391692616909}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.02187378103641845}, {"determining": "( Min( Const ,BR ) + ( ( ( ACS * FirstVNF_CPU_Server ) - Min( BR ,( ( FirstVNF_CPU_Server / Max( ( MDR + DDR ),AMS ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( DS - MUM ) - ( CS * RRSe ) ),( MLU + Max( ( Min( MUR ,( MUC + RCSe ) ) * ( ( CS / RMSe ) * RCSe ) ),( Max( MLU,RRSe ) + Min( Min( MUC ,CS ) ,( ( ( MUR + MUC ) * Min( RCSe ,MUM ) ) / Max( DS,MUM ) ) ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.7039189304396578}, {"determining": "( ( ( FirstVNF_Mem - Max( CRS,CRS ) ) * ( MRS + BR ) ) / Max( FirstVNF_Mem,CRS ) )", "choosing": "( Max( ( MUR + RCSe ),( RCSe - ( MUM * MLU ) ) ) + Min( Max( RCSe,RMSe ) ,( ( ( RRSe / RMSe ) * ( MUC / CS ) ) - RRSe ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6857339724830995}, {"determining": "Min( Min( Min( BR ,( Min( Min( ARS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( DDR - FirstVNF_CPU ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( ( MUC / CS ) / RRSe ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7297705964538184}, {"determining": "Min( Min( Const ,BR ) ,( ( ( FirstVNF_CPU + PN ) / Max( DDR,BR ) ) + Min( FirstVNF_Mem_Server ,( AMS * AMS ) ) ) )", "choosing": "Max( ( ( Max( MUC,( ( DS / MUM ) / Max( ( CS * Min( RMSe ,MLU ) ),Max( MUM,MUC ) ) ) ) - DS ) / ( MUC * RRSe ) ),MLU )", "obj1": 0.24489795918367346, "obj2": 0.7361286305257915}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ( FirstVNF_CPU - ACS ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8933849609035494}, {"determining": "( Max( BR,Max( ( DDR / FirstVNF_CPU ),RRS ) ) * ( BR - AMS ) )", "choosing": "( Min( CS ,MLU ) + ( RRSe - ( ( MUR - RRSe ) - DS ) ) )", "obj1": 0.35306122448979593, "obj2": 0.6249348549321162}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( DDR * PN ) ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.3020408163265306, "obj2": 0.6733857849869023}, {"determining": "Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,Max( AMS,( MRS / Max( ( ARS + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + ( PN * Min( ( AMS / ARS ) ,( FirstVNF_Mem_Server - RRS ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / RMSe ),Max( RCSe,MLU ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) * ( DDR + FirstVNF_CPU_Server ) ) ,Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) ,Max( Min( ( ACS - ACS ) ,Min( FirstVNF_Mem ,RRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8545217368523863}, {"determining": "( ( FirstVNF_Mem * Max( ( PN - ( Const * ( ( FirstVNF_RAM_Server + ARS ) - ( ( FirstVNF_Mem / ACS ) / Const ) ) ) ),CRS ) ) * Min( DDR ,MRS ) )", "choosing": "Min( Min( ( ( ( ( RMSe * RMSe ) * Max( ( MUR * Min( MUR ,CS ) ),DS ) ) + ( RCSe + MUM ) ) * DS ) ,CS ) ,( RCSe - Min( ( Min( ( Min( ( MUR * RRSe ) ,MUC ) / CS ) ,MUC ) * RCSe ) ,Max( ( ( RMSe / ( CS - RMSe ) ) - ( MLU / Max( RRSe,( RCSe * MUM ) ) ) ),MLU ) ) ) )", "obj1": 0.4, "obj2": 0.5787581574559135}, {"determining": "( Max( Min( MDR ,FirstVNF_Mem ),Max( DDR,ARS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.3, "obj2": 0.6795439703080353}, {"determining": "Min( Min( Const ,BR ) ,( ( ( FirstVNF_CPU + PN ) / Max( DDR,BR ) ) / ( FirstVNF_CPU_Server / ( ( ( DDR + MDR ) + ( BR * FirstVNF_CPU ) ) / Const ) ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RCSe ) ),MLU )", "obj1": 0.24285714285714285, "obj2": 0.7478748488525382}, {"determining": "Min( FirstVNF_RAM ,( ( ACS - ( FirstVNF_CPU - PN ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / RCSe ) - MUC ) / Min( MLU ,MLU ) ) )", "obj1": 0.810204081632653, "obj2": 0.17675750702708082}, {"determining": "( Max( ACS,ARS ) * ( ( FirstVNF_Mem / ( AMS * ( Max( FirstVNF_RAM,CRS ) * ACS ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - Min( MLU ,Min( Max( MUC,( Max( ( RRSe - DS ),MUC ) * Max( MUC,RCSe ) ) ) ,Min( RMSe ,( DS - RCSe ) ) ) ) ) * ( Min( Min( DS ,RMSe ) ,Min( MUR ,MLU ) ) * ( ( MUC / MLU ) + ( RMSe + DS ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.6237292227112601}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( DDR / Max( ARS,Min( Min( FirstVNF_CPU_Server ,Max( RRS,FirstVNF_CPU_Server ) ) ,CRS ) ) ) )", "choosing": "( Min( Max( ( MLU - ( RRSe / RRSe ) ),RCSe ) ,( RRSe / MLU ) ) * ( DS / RRSe ) )", "obj1": 0.1510204081632653, "obj2": 0.850110166413781}, {"determining": "( Max( ARS,( CRS - ( ( BR / ACS ) / ( DDR / MRS ) ) ) ) * Min( ( FirstVNF_Mem / ( MRS * AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( ( ( ( RMSe * RMSe ) - RRSe ) + ( Min( MUR ,RRSe ) * RCSe ) ) + RCSe ) + RMSe ) ,Min( Max( ( RCSe + ( MUR - RRSe ) ),Min( MUR ,CS ) ) ,MLU ) ) * ( ( MUC / MLU ) + ( RMSe * DS ) ) ) * ( ( Max( MUR,MLU ) / Min( MUR ,MUM ) ) + Max( ( MLU * RMSe ),( MUC + RRSe ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.6127111612180688}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / BR ) )", "choosing": "( Min( ( ( ( CS + RRSe ) * ( MLU - MUC ) ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) / Max( MUR,CS ) )", "obj1": 0.23469387755102042, "obj2": 0.748343038096867}, {"determining": "( ( AMS * PN ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "( ( DS / RRSe ) + Max( DS,MUC ) )", "obj1": 0.40816326530612246, "obj2": 0.5746715009189686}, {"determining": "Max( Max( Max( FirstVNF_CPU,DDR ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS * FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( MUR + DS ) / ( RCSe / RMSe ) ) ) * Max( MUM,( RCSe * ( RCSe / Max( RRSe,MUC ) ) ) ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MUC - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3673469387755102, "obj2": 0.6183038685547505}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8713856235356}, {"determining": "( ( ( FirstVNF_CPU_Server / Max( ARS,( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * FirstVNF_CPU ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MLU,MUC ),( RRSe + MUC ) ) + Min( Min( ( ( Max( Max( ( MUC / RMSe ),MUM ),DS ) - Max( RCSe,Max( MUC,( MUR / MUM ) ) ) ) / DS ) ,MUM ) ,Max( RCSe,RMSe ) ) )", "obj1": 0.32653061224489793, "obj2": 0.6501222383687636}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8713856235356}, {"determining": "Max( Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS / FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( MUR + DS ) / CS ) ) * Max( ( RCSe * ( RCSe / Max( RRSe,MUC ) ) ),MUM ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3693877551020408, "obj2": 0.6137121701086016}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,MUC ) )", "obj1": 0.9959183673469387, "obj2": 0.001785346806189979}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( Min( FirstVNF_Mem ,MRS ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),DS )", "obj1": 0.09795918367346938, "obj2": 0.8933849609035494}, {"determining": "( Max( Min( ( PN * AMS ) ,Min( ( Max( Max( Const,DDR ),Min( MDR ,ARS ) ) / MRS ) ,( DDR + DDR ) ) ),Min( ( PN - BR ) ,Min( MRS ,FirstVNF_CPU ) ) ) * Min( Const ,BR ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( RCSe,RMSe ) ,Min( ( CS / ( CS * RRSe ) ) ,MUM ) ) )", "obj1": 0.32653061224489793, "obj2": 0.6501222383687636}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.023353425974393237}, {"determining": "( Max( ARS,ACS ) * Min( ( FirstVNF_Mem / ( MRS * ( AMS / CRS ) ) ) ,( ARS * ( ( FirstVNF_Mem_Server + CRS ) - Min( Const ,CRS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RMSe ) ,Min( MUR ,DS ) ) * ( ( MUC / MLU ) + ( RMSe * DS ) ) ) * ( Min( RCSe ,( MUC * Min( Min( RMSe ,MUR ) ,( DS / ( Max( MUM,DS ) / MUM ) ) ) ) ) * RCSe ) )", "obj1": 0.37142857142857144, "obj2": 0.613500202546379}, {"determining": "Min( Max( Max( MRS,( CRS / MRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,PN ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),( ( MUM + ( Min( ( MUC * MUM ) ,( MLU - MUR ) ) - MUR ) ) + MUR ) ) / Max( ( MUC - RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.023353425974393237}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( Min( ( Max( ( DDR + FirstVNF_CPU_Server ),RRS ) + ARS ) ,( BR * ACS ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( ( Max( Min( MUM ,( RRSe + MLU ) ),MUM ) - Max( ( ( RMSe - MLU ) + Max( DS,( ( RMSe - CS ) - MUC ) ) ),( RCSe - RRSe ) ) ) * DS ) / ( MUR * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MDR ,( ( ACS - FirstVNF_RAM_Server ) - ( Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) / CRS ),( CRS / ACS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR - MUM ) / ( ( ( DS - ( MUR + ( MLU * RMSe ) ) ) + MLU ) / ( CS / MUC ) ) ) - ( ( ( MUM - RRSe ) / ( RCSe + DS ) ) / ( ( MLU / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ARS ) ,( ACS + ( FirstVNF_CPU_Server - ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR - CS ) - ( MLU / ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,CRS ) * DDR ) - ( AMS - FirstVNF_CPU ) )", "choosing": "Min( ( RMSe * ( Max( ( MUR * MLU ),MUR ) + ( RMSe - MUM ) ) ) ,( RCSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( Min( ( Max( ( DDR + FirstVNF_CPU_Server ),RRS ) + ARS ) ,( BR * ACS ) ) / Min( PN ,ACS ) ) )", "choosing": "Max( ( CS * DS ),Min( ( MLU + ( ( CS * RRSe ) + RCSe ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - DDR ) )", "choosing": "( ( RMSe - DS ) / ( DS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) - ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Min( ( Min( ( ( DS + MLU ) - ( CS / MUC ) ) ,( ( CS * RRSe ) + ( MUR * MUR ) ) ) / MUM ) ,( DS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * DS ) * ( ( RCSe * Max( Min( Max( RCSe,( Max( MUM,MUM ) + MUR ) ) ,MUM ),Max( RRSe,( MLU * ( MUM + RCSe ) ) ) ) ) * ( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) / ( Min( PN ,FirstVNF_RAM ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( Max( RCSe,( MUR * RMSe ) ) ,( ( CS * RCSe ) - ( RCSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) )", "choosing": "( Max( ( DS + ( RMSe / MUC ) ),( MLU / MUR ) ) + ( ( DS * CS ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * CRS ) - ( BR * ( ACS / Const ) ) )", "choosing": "( Min( ( RMSe + MUC ) ,Max( DS,DS ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( DDR,DDR ),FirstVNF_Mem ) - ( BR + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RCSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) * ( DDR + FirstVNF_CPU_Server ) ) ,Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) ,Max( Min( ( ACS - ACS ) ,Min( FirstVNF_Mem ,RRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - RRS ) - ( AMS * ACS ) ) * Max( ( FirstVNF_Mem / BR ),( DDR - MDR ) ) ) - Max( ( Max( AMS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server + CRS ) ),Min( ( Const / BR ) ,( Const + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) + Max( RMSe,MUR ) ) + ( Min( MLU ,CS ) * ( MUM - MUC ) ) ) * ( ( ( CS + RRSe ) * ( MLU - MUC ) ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) - ( ( Max( MDR,FirstVNF_CPU_Server ) * Max( PN,PN ) ) - ( ( MDR / RRS ) * Max( Min( ( CRS - BR ) ,FirstVNF_RAM ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MUM,( ( ( MUR - MUR ) / DS ) + MUM ) ),( MLU - RRSe ) ) + ( ( MLU + RCSe ) / ( MLU - RMSe ) ) ) + ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - ACS ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) / ( ( BR / MRS ) * ( FirstVNF_CPU_Server - MDR ) ) ) * ( ( ( BR - FirstVNF_CPU_Server ) / ( BR + PN ) ) * Max( CRS,AMS ) ) )", "choosing": "Min( ( RRSe - Min( ( MUR + RMSe ) ,CS ) ) ,( ( DS / RCSe ) * Max( MLU,( MUC - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * BR ) * Min( ACS ,AMS ) ),( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,( Max( Min( MDR ,FirstVNF_Mem ),Max( DDR,ARS ) ) * ( ( FirstVNF_Mem_Server - BR ) - ( ACS / DDR ) ) ) )", "choosing": "( ( MUR - CS ) / Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) )", "choosing": "( Max( MLU,( RCSe / MUR ) ) + Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( AMS + FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MUM + RRSe ) + Max( DS,DS ) ) + MUM ) ,( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_Mem * ( MDR * RRS ) ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "( Max( DS,MLU ) / Min( ( Max( MLU,RCSe ) / MUC ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * CRS ) - ( BR * ( ACS / Const ) ) )", "choosing": "( Min( ( RMSe + MUC ) ,Max( DS,DS ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * DS ) * ( ( RCSe * Max( Min( Max( RCSe,( Max( MUM,MUM ) + MUR ) ) ,MUM ),Max( RRSe,( MLU * ( MUM + RCSe ) ) ) ) ) * ( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) * Min( ( ARS + ( FirstVNF_RAM_Server - Min( Max( ( FirstVNF_Mem - ( FirstVNF_CPU + AMS ) ),( FirstVNF_RAM_Server + ( PN / ACS ) ) ) ,AMS ) ) ) ,( DDR - ARS ) ) )", "choosing": "Max( ( MUR + DS ),Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) / ( Max( RMSe,Min( Max( Min( ( DS / MUC ) ,RRSe ),( MUR * ( RCSe * RRSe ) ) ) ,( ( ( ( RCSe / MUM ) + Max( DS,MUR ) ) - RMSe ) + MUR ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MRS - DDR ),( FirstVNF_CPU + ( BR * ( ARS * ACS ) ) ) ) ,( ( ACS - FirstVNF_RAM_Server ) + Max( ( BR / CRS ),Const ) ) )", "choosing": "( Max( ( Max( MUM,MUM ) / ( MLU - CS ) ),MUM ) * ( ( ( MUM / MUC ) - ( RRSe + MUM ) ) / ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( DDR + BR ) ,DDR ) ,BR ) - ( AMS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( MLU ,( MUC + ( RRSe + RMSe ) ) ) - RMSe ) * DS ) - RMSe ) * ( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "Min( ( ARS - ( FirstVNF_RAM * ACS ) ) ,( MRS - DDR ) )", "choosing": "( ( RMSe - DS ) / ( DS / Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( Max( MRS,RRS ) ,( Const + Const ) ) ) - ( BR * CRS ) )", "choosing": "( ( ( RCSe / ( ( MLU + Min( RMSe ,( RCSe - RRSe ) ) ) + ( ( ( MLU - DS ) + ( MLU - RMSe ) ) * Max( CS,DS ) ) ) ) * MLU ) / Min( MUM ,( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( BR + FirstVNF_CPU_Server ) ) + Min( RRS ,Min( Const ,Min( Min( MDR ,( FirstVNF_RAM_Server * ( MRS - Const ) ) ) ,Max( CRS,MRS ) ) ) ) )", "choosing": "Max( ( ( CS / MLU ) + Min( ( Min( Max( ( ( MLU + CS ) / ( CS * RCSe ) ),MLU ) ,CS ) - ( ( MLU + RCSe ) + MUR ) ) ,MUC ) ),Max( Min( Min( RMSe ,( RCSe * Min( MUC ,DS ) ) ) ,CS ),( RMSe - MUC ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8981254465932332}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / ( ( ( DDR + FirstVNF_RAM_Server ) + ( ( Max( Const,MRS ) + ( ( FirstVNF_CPU - ACS ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) / Const ) ) )", "choosing": "( Max( ( MLU * DS ),CS ) + ( ( ( DS - Min( CS ,DS ) ) * RMSe ) + RCSe ) )", "obj1": 0.7081632653061225, "obj2": 0.24873492690444374}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( AMS - ( Max( FirstVNF_Mem_Server,RRS ) / FirstVNF_Mem_Server ) ) + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + MUC ) - ( CS + ( ( CS / MUC ) + CS ) ) ) + Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) )", "obj1": 0.5224489795918368, "obj2": 0.4560594530976299}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.30532402512547024}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7571428571428571, "obj2": 0.18478565132744648}, {"determining": "Min( AMS ,( ( ( ( ( DDR - ( FirstVNF_CPU_Server + ( PN - BR ) ) ) - PN ) * ARS ) - ( FirstVNF_CPU + PN ) ) - Max( FirstVNF_CPU,Const ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( ( ( ( ( MLU + ( MUM + RMSe ) ) + DS ) - ( ( CS + RCSe ) + DS ) ) / Min( MUM ,MUR ) ) / MUC ) / Min( MLU ,MLU ) ) )", "obj1": 0.8612244897959184, "obj2": 0.11979230494467584}, {"determining": "Min( Max( Min( ( MRS * CRS ) ,CRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( MLU,DS ) ,( MUM * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / Max( MLU,RCSe ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.040093828381892835}, {"determining": "Min( PN ,( Max( ACS,Const ) - Max( MRS,FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * DS ) * Min( ( Max( MUM,RRSe ) - DS ) ,Max( MUC,( MLU + CS ) ) ) )", "obj1": 0.4775510204081633, "obj2": 0.5079539940418616}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + ( ( BR - FirstVNF_Mem ) / ( ( DDR / ( RRS * ARS ) ) / RRS ) ) ) ) + ( FirstVNF_RAM * ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( MLU ,( Min( MUC ,MUC ) + MUM ) ) + Min( MUC ,( ( RCSe * MUM ) - Min( DS ,CS ) ) ) ),Max( ( MUM / RCSe ),( MUC - CS ) ) )", "obj1": 0.8816326530612245, "obj2": 0.0825907327718255}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "( ( CRS * ( FirstVNF_RAM + ( ( BR - FirstVNF_Mem ) / ( Min( FirstVNF_RAM ,PN ) / ( MDR + FirstVNF_RAM ) ) ) ) ) + ( FirstVNF_RAM * ( ( ACS / ( FirstVNF_RAM_Server + MRS ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( Min( CS ,( RCSe / ( ( MUR - ( RCSe - Min( RRSe ,CS ) ) ) + ( RMSe / MUM ) ) ) ) / MUM ) - ( MUM / MUC ) )", "obj1": 0.8755102040816326, "obj2": 0.08800716648775651}, {"determining": "Min( Max( ( ( ( ( CRS / FirstVNF_RAM ) - RRS ) + MRS ) - Min( FirstVNF_RAM ,BR ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,( Max( ( DDR / ( DDR / FirstVNF_Mem_Server ) ),PN ) - MDR ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( Max( RCSe,DS ) + ( Min( ( RMSe + MUC ) ,Min( DS ,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / Max( CS,MUM ) ) ) ) ) / ( Max( DS,( MUM + Max( MUM,MUR ) ) ) / Max( ( MUC + Min( Min( MUR ,MUM ) ,CS ) ),( MUC - MUM ) ) ) )", "obj1": 0.9591836734693877, "obj2": 0.019382486026179487}, {"determining": "Min( Min( Const ,BR ) ,Min( DDR ,( ( ( ( Max( ( ACS / FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) + FirstVNF_CPU ) - RRS ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) / Max( DDR,BR ) ) ) )", "choosing": "Max( Min( ( Min( Min( Max( MUR,( ( MUC / DS ) * ( MUC / MUM ) ) ) ,( RMSe / MLU ) ) ,( RRSe - CS ) ) * RMSe ) ,( CS * RRSe ) ),MLU )", "obj1": 0.21020408163265306, "obj2": 0.7774735881511659}, {"determining": "( Max( Min( ACS ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM_Server,CRS ) ) + Max( Max( FirstVNF_CPU_Server,Const ),Min( MDR ,ARS ) ) )", "choosing": "Min( ( ( MLU + MUM ) / ( CS / MLU ) ) ,( RCSe / ( MUM + ( RMSe / MLU ) ) ) )", "obj1": 0.18979591836734694, "obj2": 0.7904241914531991}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,MUC ) )", "obj1": 0.9938775510204082, "obj2": 0.0027813185285845143}, {"determining": "( ( DDR + FirstVNF_RAM ) * ( ACS * MRS ) )", "choosing": "( Max( ( MUR * RRSe ),Max( MUR,MUC ) ) * ( DS + RRSe ) )", "obj1": 0.22653061224489796, "obj2": 0.7509165061698968}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( RCSe - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.024373605193506436}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.37755102040816324, "obj2": 0.5932174265326878}, {"determining": "( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUM + MLU ) / Min( MLU ,MUR ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Min( FirstVNF_CPU_Server ,MRS ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( MUC,Max( ( ( ( CS + MUM ) * MUR ) - Min( Max( ( MUR * MUM ),Min( RMSe ,RMSe ) ) ,Min( ( MUR / MUC ) ,MUR ) ) ),( MUC - RRSe ) ) ) ,Min( MUC ,MUM ) ) )", "obj1": 0.46530612244897956, "obj2": 0.51381871554563}, {"determining": "( Max( ( CRS - ACS ),CRS ) / Const )", "choosing": "( ( ( ( CS - RRSe ) / ( Min( ( RRSe * RMSe ) ,RMSe ) * DS ) ) / ( ( MUM / RCSe ) * ( MUC / CS ) ) ) - ( ( Min( DS ,RMSe ) + ( MUC + MLU ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.6313872833073685}, {"determining": "( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( ACS + FirstVNF_CPU ) ),FirstVNF_Mem ) * Min( ACS ,Const ) )", "choosing": "Min( Min( CS ,Max( ( ( Min( Min( ( MUM - MUR ) ,MUR ) ,( RMSe / ( MUR / RRSe ) ) ) + Max( RCSe,MUM ) ) + ( MUC - ( RMSe + CS ) ) ),RCSe ) ) ,( Max( ( MUM + MLU ),MUC ) + Max( ( RMSe * RCSe ),( RMSe / MLU ) ) ) )", "obj1": 0.43673469387755104, "obj2": 0.5498795330324101}, {"determining": "( ( ( FirstVNF_Mem - ( Max( DDR,Const ) - ( FirstVNF_Mem_Server / BR ) ) ) * FirstVNF_Mem ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( ( DS * DS ) / Min( ( RMSe / Max( ( MUC / MLU ),RRSe ) ) ,MUM ) )", "obj1": 0.39387755102040817, "obj2": 0.5831906055687394}, {"determining": "( ( Min( Max( ( MRS - DDR ),( Min( FirstVNF_Mem_Server ,MRS ) + RRS ) ) ,( ( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) ) - Max( Const,FirstVNF_CPU ) ) ) + Const ) * ( FirstVNF_CPU * RRS ) )", "choosing": "( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) )", "obj1": 0.3163265306122449, "obj2": 0.670031992074091}, {"determining": "( ( ( FirstVNF_Mem - ( Max( DDR,( FirstVNF_RAM_Server - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * Max( DDR,ARS ) ) ) * FirstVNF_Mem ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( MUR * MUC ) * ( CS * RRSe ) ) - RRSe ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( CS / ( RMSe + MLU ) ) )", "obj1": 0.32857142857142857, "obj2": 0.6430000604751975}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) * ( DDR + FirstVNF_CPU_Server ) ) ,Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) ,Max( Min( ( ACS - ACS ) ,Min( FirstVNF_Mem ,RRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8467671438517204}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( DDR + AMS ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.4448979591836735, "obj2": 0.5361716832884712}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ( Max( ARS,BR ) - ( AMS * BR ) ) * ( ( ( Min( ( ( FirstVNF_CPU_Server - CRS ) - Max( MRS,( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,BR ) + FirstVNF_Mem ) + PN ) / Max( DDR,BR ) ) )", "choosing": "( ( ( MUR - ( MUM - DS ) ) * MUR ) + ( ( CS * ( Min( MUC ,MUR ) + RMSe ) ) / ( MLU - CS ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8560819361250306}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( BR ,( ( Max( MDR,Max( AMS,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( ( CS - ( ( RMSe - ( ( DS + MLU ) / RRSe ) ) + ( MLU + Max( MLU,( RCSe + RRSe ) ) ) ) ) ,( CS - Min( RMSe ,CS ) ) ) ),Max( ( CS - MUC ),Min( Min( RMSe ,( MUM * ( ( MUR - CS ) / Min( RRSe ,RRSe ) ) ) ) ,CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8680115716002985}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,ACS ) + FirstVNF_RAM ) ,( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_Mem * Max( ( PN - MRS ),BR ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( Min( CS ,( MUC * DS ) ) * RRSe ) ),Min( ( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - ( DS + DS ) ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7852404451875611}, {"determining": "( ( AMS - Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( ( Min( RRSe ,MUR ) - Min( RCSe ,DS ) ) ,( Max( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ),MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.41020408163265304, "obj2": 0.5704068520892015}, {"determining": "( ( Max( BR,ARS ) - ( BR * AMS ) ) * ( Min( ( Max( Const,FirstVNF_Mem ) * ARS ) ,RRS ) / Max( DDR,BR ) ) )", "choosing": "( Max( ( ( MUM - DS ) - MUR ),MUR ) + Max( ( ( RCSe / RRSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8239598051837363}, {"determining": "( ( Min( ( CRS - ACS ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) / ( ( BR / MRS ) * ( FirstVNF_CPU_Server - MDR ) ) ) * ( ( ( BR * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU ) ) * Max( CRS,AMS ) ) )", "choosing": "Min( ( ( DS / RCSe ) * Max( Max( Min( MUM ,( MUR / ( Max( MUR,MUM ) - ( MLU - MLU ) ) ) ),RMSe ),( MUC - MUC ) ) ) ,( RRSe - Min( ( MUR + RMSe ) ,CS ) ) )", "obj1": 0.2857142857142857, "obj2": 0.692662538075371}, {"determining": "Max( Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS / FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( MUR + DS ) / CS ) ) * Max( ( RCSe * ( RCSe / Max( RRSe,MUC ) ) ),MUM ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.6540808353836052}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Min( AMS ,( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ) ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) )", "obj1": 0.45510204081632655, "obj2": 0.5295035463476079}, {"determining": "Min( Min( Const ,ACS ) ,( ( ( FirstVNF_RAM * Max( CRS,CRS ) ) - Max( RRS,MRS ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( MUC,Min( MUC ,CS ) ) - RMSe ),( ( CS * Min( CS ,Min( RMSe ,( DS * ( MUM - Min( RMSe ,MUM ) ) ) ) ) ) / ( MUM - DS ) ) )", "obj1": 0.2612244897959184, "obj2": 0.7107391692616909}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM + ACS ) + ACS ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - Max( CS,RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,CS ) )", "obj1": 0.16122448979591836, "obj2": 0.8254481062142297}, {"determining": "( Min( Const ,BR ) + ( ( ( ACS * FirstVNF_CPU_Server ) - Min( BR ,( ( FirstVNF_CPU_Server / Max( ( MDR + DDR ),AMS ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( DS - MUM ) - ( CS * RRSe ) ),( MLU + Max( ( Min( MUR ,( MUC + RCSe ) ) * ( ( CS / RMSe ) * RCSe ) ),( Max( MLU,RRSe ) + Min( Min( MUC ,CS ) ,( ( ( MUR + MUC ) * Min( RCSe ,MUM ) ) / Max( DS,MUM ) ) ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.7039189304396578}, {"determining": "( ( ( FirstVNF_Mem - Max( CRS,CRS ) ) * ( MRS + BR ) ) / Max( FirstVNF_Mem,CRS ) )", "choosing": "( Max( ( MUR + RCSe ),( RCSe - ( MUM * MLU ) ) ) + Min( Max( RCSe,RMSe ) ,( ( ( RRSe / RMSe ) * ( MUC / CS ) ) - RRSe ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6857339724830995}, {"determining": "( Max( ARS,( CRS - ( ( BR / ACS ) / ( DDR / MRS ) ) ) ) * Min( ( FirstVNF_Mem / ( MRS * AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( ( ( ( RMSe * RMSe ) - RRSe ) + ( Min( MUR ,RRSe ) * RCSe ) ) + RCSe ) + RMSe ) ,Min( Max( ( RCSe + ( MUR - RRSe ) ),Min( MUR ,CS ) ) ,MLU ) ) * ( ( MUC / MLU ) + ( RMSe * DS ) ) ) * ( ( Max( MUR,MLU ) / Min( MUR ,MUM ) ) + Max( ( MLU * RMSe ),( MUC + RRSe ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.6127111612180688}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ( FirstVNF_CPU - ACS ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8933849609035494}, {"determining": "( Max( BR,Max( ( DDR / FirstVNF_CPU ),RRS ) ) * ( BR - AMS ) )", "choosing": "( Min( CS ,MLU ) + ( RRSe - ( ( MUR - RRSe ) - DS ) ) )", "obj1": 0.35306122448979593, "obj2": 0.6249348549321162}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( DDR * PN ) ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.3020408163265306, "obj2": 0.6733857849869023}, {"determining": "Min( Min( Min( BR ,( Min( Min( ARS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( DDR - FirstVNF_CPU ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( ( MUC / CS ) / RRSe ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7297705964538184}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / BR ) )", "choosing": "( ( MUR - CS ) - ( MLU / MUC ) )", "obj1": 0.24489795918367346, "obj2": 0.7346752308683824}, {"determining": "Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,Max( AMS,( MRS / Max( ( ARS + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + ( PN * Min( ( AMS / ARS ) ,( FirstVNF_Mem_Server - RRS ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / RMSe ),Max( RCSe,MLU ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) * ( DDR + FirstVNF_CPU_Server ) ) ,Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) ,Max( Min( ( ACS - ACS ) ,Min( FirstVNF_Mem ,RRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8545217368523863}, {"determining": "( ( ( MRS + BR ) * ( FirstVNF_Mem - Max( CRS,CRS ) ) ) / Max( FirstVNF_Mem,Min( RRS ,( ( Const * Max( DDR,BR ) ) + ( FirstVNF_RAM * CRS ) ) ) ) )", "choosing": "Max( Min( Min( ( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ,DS ) ,( ( MLU * ( RRSe * CS ) ) / RMSe ) ),( Max( MUC,MUR ) * Max( DS,MUR ) ) )", "obj1": 0.23877551020408164, "obj2": 0.742621691537095}, {"determining": "( ( FirstVNF_Mem * Max( ( PN - ( Const * ( ( FirstVNF_RAM_Server + ARS ) - ( ( FirstVNF_Mem / ACS ) / Const ) ) ) ),CRS ) ) * Min( DDR ,MRS ) )", "choosing": "Min( Min( ( ( ( ( RMSe * RMSe ) * Max( ( MUR * Min( MUR ,CS ) ),DS ) ) + ( RCSe + MUM ) ) * DS ) ,CS ) ,( RCSe - Min( ( Min( ( Min( ( MUR * RRSe ) ,MUC ) / CS ) ,MUC ) * RCSe ) ,Max( ( ( RMSe / ( CS - RMSe ) ) - ( MLU / Max( RRSe,( RCSe * MUM ) ) ) ),MLU ) ) ) )", "obj1": 0.4, "obj2": 0.5787581574559135}, {"determining": "( Max( Min( MDR ,FirstVNF_Mem ),Max( DDR,ARS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.3, "obj2": 0.6795439703080353}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8799923091842144}, {"determining": "( Max( ACS,ARS ) * ( ( FirstVNF_Mem / ( AMS * ( Max( FirstVNF_RAM,CRS ) * ACS ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - Min( MLU ,Min( Max( MUC,( Max( ( RRSe - DS ),MUC ) * Max( MUC,RCSe ) ) ) ,Min( RMSe ,( DS - RCSe ) ) ) ) ) * ( Min( Min( DS ,RMSe ) ,Min( MUR ,MLU ) ) * ( ( MUC / MLU ) + ( RMSe + DS ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.6237292227112601}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / BR ) )", "choosing": "( Min( ( ( ( CS + RRSe ) * ( MLU - MUC ) ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) / Max( MUR,CS ) )", "obj1": 0.23469387755102042, "obj2": 0.748343038096867}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( DDR / Max( ARS,Min( Min( FirstVNF_CPU_Server ,Max( RRS,FirstVNF_CPU_Server ) ) ,CRS ) ) ) )", "choosing": "( Min( Max( ( MLU - ( RRSe / RRSe ) ),RCSe ) ,( RRSe / MLU ) ) * ( DS / RRSe ) )", "obj1": 0.1510204081632653, "obj2": 0.850110166413781}, {"determining": "( Min( FirstVNF_Mem ,ARS ) + ( ( Const + ( FirstVNF_CPU - MDR ) ) + ( RRS * FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( ( Max( DS,MLU ) + Min( Max( ( ( CS + MUC ) / ( RMSe / MLU ) ),MLU ) ,MUC ) ) / MLU ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( ( CS - MUC ),Min( Min( RMSe ,( Max( ( CS - RCSe ),( MUC + ( RCSe / DS ) ) ) * ( Max( ( RRSe + RRSe ),RMSe ) + DS ) ) ) ,CS ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8814666939755978}, {"determining": "( ( AMS * PN ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "( ( DS / RRSe ) + Max( DS,MUC ) )", "obj1": 0.40816326530612246, "obj2": 0.5746715009189686}, {"determining": "Max( Max( Max( FirstVNF_CPU,DDR ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS * FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( MUR + DS ) / ( RCSe / RMSe ) ) ) * Max( MUM,( RCSe * ( RCSe / Max( RRSe,MUC ) ) ) ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MUC - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3673469387755102, "obj2": 0.6183038685547505}, {"determining": "( ( Min( ( PN / MRS ) ,FirstVNF_RAM ) / MDR ) * ( FirstVNF_RAM_Server - Min( FirstVNF_Mem_Server ,ACS ) ) )", "choosing": "Max( Min( Min( MUR ,( MLU * Min( MLU ,Min( ( ( MUR - CS ) * ( MUC - DS ) ) ,MUM ) ) ) ) ,( MUR * ( ( RCSe - CS ) / Max( DS,( ( ( RRSe - MUM ) / Min( CS ,DS ) ) - DS ) ) ) ) ),( RCSe - ( Min( ( ( ( Max( MUR,RMSe ) * ( MLU + RMSe ) ) + MUM ) / ( CS / DS ) ) ,( Min( RCSe ,RRSe ) - ( MUM * ( Max( MUR,MUC ) * ( CS * MLU ) ) ) ) ) - MLU ) ) )", "obj1": 0.45102040816326533, "obj2": 0.5295924914149067}, {"determining": "( ( ( FirstVNF_CPU_Server / Max( ARS,( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * FirstVNF_CPU ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MLU,MUC ),( RRSe + MUC ) ) + Min( Min( ( ( Max( Max( ( MUC / RMSe ),MUM ),DS ) - Max( RCSe,Max( MUC,( MUR / MUM ) ) ) ) / DS ) ,MUM ) ,Max( RCSe,RMSe ) ) )", "obj1": 0.32653061224489793, "obj2": 0.6501222383687636}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.02187378103641845}, {"determining": "Max( Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS / FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( MUR + DS ) / CS ) ) * Max( ( RCSe * ( RCSe / Max( RRSe,MUC ) ) ),MUM ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3693877551020408, "obj2": 0.6137121701086016}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,MUC ) )", "obj1": 0.9959183673469387, "obj2": 0.001785346806189979}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( Min( FirstVNF_Mem ,MRS ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),DS )", "obj1": 0.09795918367346938, "obj2": 0.8933849609035494}, {"determining": "( Max( Min( ( PN * AMS ) ,Min( ( Max( Max( Const,DDR ),Min( MDR ,ARS ) ) / MRS ) ,( DDR + DDR ) ) ),Min( ( PN - BR ) ,Min( MRS ,FirstVNF_CPU ) ) ) * Min( Const ,BR ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( RCSe,RMSe ) ,Min( ( CS / ( CS * RRSe ) ) ,MUM ) ) )", "obj1": 0.32653061224489793, "obj2": 0.6501222383687636}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,CRS ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,Min( ( Min( PN ,FirstVNF_CPU ) * ( DDR + FirstVNF_CPU_Server ) ) ,Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( ( RRSe - MLU ) + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9510204081632653, "obj2": 0.024023923230058055}, {"determining": "( Max( ARS,ACS ) * Min( ( FirstVNF_Mem / ( MRS * ( AMS / CRS ) ) ) ,( ARS * ( ( FirstVNF_Mem_Server + CRS ) - Min( Const ,CRS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RMSe ) ,Min( MUR ,DS ) ) * ( ( MUC / MLU ) + ( RMSe * DS ) ) ) * ( Min( RCSe ,( MUC * Min( Min( RMSe ,MUR ) ,( DS / ( Max( MUM,DS ) / MUM ) ) ) ) ) * RCSe ) )", "obj1": 0.37142857142857144, "obj2": 0.613500202546379}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.023353425974393237}, {"determining": "Min( Max( Max( MRS,( CRS / MRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,PN ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),( ( MUM + ( Min( ( MUC * MUM ) ,( MLU - MUR ) ) - MUR ) ) + MUR ) ) / Max( ( MUC - RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.023353425974393237}, {"determining": "Min( ARS ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR - MUM ) / ( ( MUC - DS ) / Max( CS,MUC ) ) ) - ( ( ( CS - RRSe ) / ( RCSe + DS ) ) / Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( Min( ( Max( ( DDR + FirstVNF_CPU_Server ),RRS ) + ARS ) ,( BR * ACS ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( ( Max( Min( MUM ,( RRSe + MLU ) ),MUM ) - Max( ( ( RMSe - MLU ) + Max( DS,( ( RMSe - CS ) - MUC ) ) ),( RCSe - RRSe ) ) ) * DS ) / ( MUR * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MDR ,( ( ACS - FirstVNF_RAM_Server ) - ( Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) / CRS ),( CRS / ACS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR - MUM ) / ( ( ( DS - ( MUR + ( MLU * RMSe ) ) ) + MLU ) / ( CS / MUC ) ) ) - ( ( ( MUM - RRSe ) / ( RCSe + DS ) ) / ( ( MLU / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ARS ) ,( ACS + ( FirstVNF_CPU_Server - ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR - CS ) - ( MLU / ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,CRS ) * DDR ) - ( AMS - FirstVNF_CPU ) )", "choosing": "Min( ( RMSe * ( Max( ( MUR * MLU ),MUR ) + ( RMSe - MUM ) ) ) ,( RCSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( Min( ( Max( ( DDR + FirstVNF_CPU_Server ),RRS ) + ARS ) ,( BR * ACS ) ) / Min( PN ,ACS ) ) )", "choosing": "Max( ( CS * DS ),Min( ( MLU + ( ( CS * RRSe ) + RCSe ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - DDR ) )", "choosing": "( ( RMSe - DS ) / ( DS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) - ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Min( ( Min( ( ( DS + MLU ) - ( CS / MUC ) ) ,( ( CS * RRSe ) + ( MUR * MUR ) ) ) / MUM ) ,( DS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * DS ) * ( ( RCSe * Max( Min( Max( RCSe,( Max( MUM,MUM ) + MUR ) ) ,MUM ),Max( RRSe,( MLU * ( MUM + RCSe ) ) ) ) ) * ( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) / ( Min( PN ,FirstVNF_RAM ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( Max( RCSe,( MUR * RMSe ) ) ,( ( CS * RCSe ) - ( RCSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) )", "choosing": "( Max( ( DS + ( RMSe / MUC ) ),( MLU / MUR ) ) + ( ( DS * CS ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * CRS ) - ( BR * ( ACS / Const ) ) )", "choosing": "( Min( ( RMSe + MUC ) ,Max( DS,DS ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( DDR,DDR ),FirstVNF_Mem ) - ( BR + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RCSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) * ( DDR + FirstVNF_CPU_Server ) ) ,Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) ,Max( Min( ( ACS - ACS ) ,Min( FirstVNF_Mem ,RRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - RRS ) - ( AMS * ACS ) ) * Max( ( FirstVNF_Mem / BR ),( DDR - MDR ) ) ) - Max( ( Max( AMS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server + CRS ) ),Min( ( Const / BR ) ,( Const + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) + Max( RMSe,MUR ) ) + ( Min( MLU ,CS ) * ( MUM - MUC ) ) ) * ( ( ( CS + RRSe ) * ( MLU - MUC ) ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) - ( ( Max( MDR,FirstVNF_CPU_Server ) * Max( PN,PN ) ) - ( ( MDR / RRS ) * Max( Min( ( CRS - BR ) ,FirstVNF_RAM ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MUM,( ( ( MUR - MUR ) / DS ) + MUM ) ),( MLU - RRSe ) ) + ( ( MLU + RCSe ) / ( MLU - RMSe ) ) ) + ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - ACS ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) / ( ( BR / MRS ) * ( FirstVNF_CPU_Server - MDR ) ) ) * ( ( ( BR - FirstVNF_CPU_Server ) / ( BR + PN ) ) * Max( CRS,AMS ) ) )", "choosing": "Min( ( RRSe - Min( ( MUR + RMSe ) ,CS ) ) ,( ( DS / RCSe ) * Max( MLU,( MUC - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * BR ) * Min( ACS ,AMS ) ),( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,( Max( Min( MDR ,FirstVNF_Mem ),Max( DDR,ARS ) ) * ( ( FirstVNF_Mem_Server - BR ) - ( ACS / DDR ) ) ) )", "choosing": "( ( MUR - CS ) / Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) )", "choosing": "( Max( MLU,( RCSe / MUR ) ) + Max( CS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( AMS + FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MUM + RRSe ) + Max( DS,DS ) ) + MUM ) ,( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_Mem * ( MDR * RRS ) ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "( Max( DS,MLU ) / Min( ( Max( MLU,RCSe ) / MUC ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * CRS ) - ( BR * ( ACS / Const ) ) )", "choosing": "( Min( ( RMSe + MUC ) ,Max( DS,DS ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * DS ) * ( ( RCSe * Max( Min( Max( RCSe,( Max( MUM,MUM ) + MUR ) ) ,MUM ),Max( RRSe,( MLU * ( MUM + RCSe ) ) ) ) ) * ( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) * Min( ( ARS + ( FirstVNF_RAM_Server - Min( Max( ( FirstVNF_Mem - ( FirstVNF_CPU + AMS ) ),( FirstVNF_RAM_Server + ( PN / ACS ) ) ) ,AMS ) ) ) ,( DDR - ARS ) ) )", "choosing": "Max( ( MUR + DS ),Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) / ( Max( RMSe,Min( Max( Min( ( DS / MUC ) ,RRSe ),( MUR * ( RCSe * RRSe ) ) ) ,( ( ( ( RCSe / MUM ) + Max( DS,MUR ) ) - RMSe ) + MUR ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( CRS - FirstVNF_CPU ) * ( ( DDR + ( ( FirstVNF_Mem_Server * ( PN + BR ) ) * CRS ) ) + ( RRS + MRS ) ) )", "choosing": "( ( ( MUR - ( Min( RRSe ,CS ) - MUM ) ) + ( ( MLU + ( MLU / DS ) ) / MUM ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - ( FirstVNF_RAM * ACS ) ) ,( MRS - DDR ) )", "choosing": "( ( RMSe - DS ) / ( DS / Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( BR + FirstVNF_CPU_Server ) ) + Min( RRS ,Min( Const ,Min( Min( MDR ,( FirstVNF_RAM_Server * ( MRS - Const ) ) ) ,Max( CRS,MRS ) ) ) ) )", "choosing": "Max( ( ( CS / MLU ) + Min( ( Min( Max( ( ( MLU + CS ) / ( CS * RCSe ) ),MLU ) ,CS ) - ( ( MLU + RCSe ) + MUR ) ) ,MUC ) ),Max( Min( Min( RMSe ,( RCSe * Min( MUC ,DS ) ) ) ,CS ),( RMSe - MUC ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8981254465932332}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.30532402512547024}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + ( Const - FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,MLU ) / Max( Min( MUM ,DS ),MUM ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7571428571428571, "obj2": 0.18478565132744648}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( ( AMS + FirstVNF_CPU ) ,( PN + ACS ) ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( MUR * MUR ) + MUC ) ) + Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.5469387755102041, "obj2": 0.4339796124865251}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / ( ( ( DDR + FirstVNF_RAM_Server ) + ( ( Max( Const,MRS ) + ( ( FirstVNF_CPU - ACS ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) / Const ) ) )", "choosing": "( Max( ( MLU * DS ),CS ) + ( ( ( DS - Min( CS ,DS ) ) * RMSe ) + RCSe ) )", "obj1": 0.7081632653061225, "obj2": 0.24873492690444374}, {"determining": "Min( AMS ,( ( ( ( ( DDR - ( FirstVNF_CPU_Server + ( PN - BR ) ) ) - PN ) * ARS ) - ( FirstVNF_CPU + PN ) ) - Max( FirstVNF_CPU,Const ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( ( ( ( ( MLU + ( MUM + RMSe ) ) + DS ) - ( ( CS + RCSe ) + DS ) ) / Min( MUM ,MUR ) ) / MUC ) / Min( MLU ,MLU ) ) )", "obj1": 0.8612244897959184, "obj2": 0.11979230494467584}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( AMS - ( Max( FirstVNF_Mem_Server,RRS ) / FirstVNF_Mem_Server ) ) + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + MUC ) - ( CS + ( ( CS / MUC ) + CS ) ) ) + Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) )", "obj1": 0.5224489795918368, "obj2": 0.4560594530976299}, {"determining": "Min( PN ,( Max( ACS,Const ) - Max( MRS,FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * DS ) * Min( ( Max( MUM,RRSe ) - DS ) ,Max( MUC,( MLU + CS ) ) ) )", "obj1": 0.4775510204081633, "obj2": 0.5079539940418616}, {"determining": "Min( Max( Min( ( MRS * CRS ) ,CRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( MLU,DS ) ,( MUM * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / Max( MLU,RCSe ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.040093828381892835}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7857142857142857, "obj2": 0.15257407585705876}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + ( ( BR - FirstVNF_Mem ) / ( ( DDR / ( RRS * ARS ) ) / RRS ) ) ) ) + ( FirstVNF_RAM * ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( MLU ,( Min( MUC ,MUC ) + MUM ) ) + Min( MUC ,( ( RCSe * MUM ) - Min( DS ,CS ) ) ) ),Max( ( MUM / RCSe ),( MUC - CS ) ) )", "obj1": 0.8816326530612245, "obj2": 0.0825907327718255}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "( ( CRS * ( FirstVNF_RAM + ( ( BR - FirstVNF_Mem ) / ( Min( FirstVNF_RAM ,PN ) / ( MDR + FirstVNF_RAM ) ) ) ) ) + ( FirstVNF_RAM * ( ( ACS / ( FirstVNF_RAM_Server + MRS ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( Min( CS ,( RCSe / ( ( MUR - ( RCSe - Min( RRSe ,CS ) ) ) + ( RMSe / MUM ) ) ) ) / MUM ) - ( MUM / MUC ) )", "obj1": 0.8755102040816326, "obj2": 0.08800716648775651}, {"determining": "( Max( Min( ACS ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM_Server,CRS ) ) + Max( Max( FirstVNF_CPU_Server,Const ),Min( MDR ,ARS ) ) )", "choosing": "Min( ( ( MLU + MUM ) / ( CS / MLU ) ) ,( RCSe / ( MUM + ( RMSe / MLU ) ) ) )", "obj1": 0.18979591836734694, "obj2": 0.7904241914531991}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * MLU ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.02995662067019194}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.37755102040816324, "obj2": 0.5932174265326878}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_CPU / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ACS - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( DS / ( Min( ( ( MLU * Max( MUM,MUR ) ) / MLU ) ,( RCSe - ( RRSe / MLU ) ) ) / RCSe ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUM + MLU ) / Min( MLU ,MUR ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "( Max( ( CRS - MRS ),FirstVNF_CPU ) * ( Const / BR ) )", "choosing": "( Min( ( ( ( MUM - DS ) - MUR ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) / ( RCSe + ( ( ( ( ( DS + MUR ) - ( Max( DS,MLU ) - ( RCSe / MUR ) ) ) / CS ) / ( RRSe + RCSe ) ) - Max( DS,( RMSe - MUM ) ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.7593079729529636}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Min( FirstVNF_CPU_Server ,MRS ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( MUC,Max( ( ( ( CS + MUM ) * MUR ) - Min( Max( ( MUR * MUM ),Min( RMSe ,RMSe ) ) ,Min( ( MUR / MUC ) ,MUR ) ) ),( MUC - RRSe ) ) ) ,Min( MUC ,MUM ) ) )", "obj1": 0.46530612244897956, "obj2": 0.51381871554563}, {"determining": "( ( ( FirstVNF_Mem - ( Max( DDR,Const ) - ( FirstVNF_Mem_Server / BR ) ) ) * FirstVNF_Mem ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( ( DS * DS ) / Min( ( RMSe / Max( ( MUC / MLU ),RRSe ) ) ,MUM ) )", "obj1": 0.39387755102040817, "obj2": 0.5831906055687394}, {"determining": "Min( Min( Const ,BR ) ,Min( DDR ,( ( ( ( Max( ( ACS / FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) + FirstVNF_CPU ) - RRS ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) / Max( DDR,BR ) ) ) )", "choosing": "Max( Min( ( Min( Min( Max( MUR,( ( MUC / DS ) * ( MUC / MUM ) ) ) ,( RMSe / MLU ) ) ,( RRSe - CS ) ) * RMSe ) ,( CS * RRSe ) ),MLU )", "obj1": 0.21020408163265306, "obj2": 0.7774735881511659}, {"determining": "( ( Min( Max( ( MRS - DDR ),( Min( FirstVNF_Mem_Server ,MRS ) + RRS ) ) ,( ( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) ) - Max( Const,FirstVNF_CPU ) ) ) + Const ) * ( FirstVNF_CPU * RRS ) )", "choosing": "( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) )", "obj1": 0.3163265306122449, "obj2": 0.670031992074091}, {"determining": "( ( AMS * ( FirstVNF_CPU_Server / ( FirstVNF_RAM / BR ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( Max( Max( DS,MUR ),( ( MUM - RRSe ) / CS ) ) + Max( ( Max( RRSe,RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8394065596601764}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( DDR + AMS ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.4448979591836735, "obj2": 0.5361716832884712}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( RRS - PN ) ,( Min( ( PN * ACS ) ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( Max( DS,MUC ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ( Max( ARS,BR ) - ( AMS * BR ) ) * ( ( ( Min( ( ( FirstVNF_CPU_Server - CRS ) - Max( MRS,( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,BR ) + FirstVNF_Mem ) + PN ) / Max( DDR,BR ) ) )", "choosing": "( ( ( MUR - ( MUM - DS ) ) * MUR ) + ( ( CS * ( Min( MUC ,MUR ) + RMSe ) ) / ( MLU - CS ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8560819361250306}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( BR ,( ( Max( MDR,Max( AMS,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( ( CS - ( ( RMSe - ( ( DS + MLU ) / RRSe ) ) + ( MLU + Max( MLU,( RCSe + RRSe ) ) ) ) ) ,( CS - Min( RMSe ,CS ) ) ) ),Max( ( CS - MUC ),Min( Min( RMSe ,( MUM * ( ( MUR - CS ) / Min( RRSe ,RRSe ) ) ) ) ,CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8680115716002985}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,ACS ) + FirstVNF_RAM ) ,( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_Mem * Max( ( PN - MRS ),BR ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( Min( CS ,( MUC * DS ) ) * RRSe ) ),Min( ( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - ( DS + DS ) ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7852404451875611}, {"determining": "( ( AMS - Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( ( Min( RRSe ,MUR ) - Min( RCSe ,DS ) ) ,( Max( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ),MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.41020408163265304, "obj2": 0.5704068520892015}, {"determining": "( ( Max( BR,ARS ) - ( BR * AMS ) ) * ( Min( ( Max( Const,FirstVNF_Mem ) * ARS ) ,RRS ) / Max( DDR,BR ) ) )", "choosing": "( Max( ( ( MUM - DS ) - MUR ),MUR ) + Max( ( ( RCSe / RRSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8239598051837363}, {"determining": "( ( Min( ( CRS - ACS ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) / ( ( BR / MRS ) * ( FirstVNF_CPU_Server - MDR ) ) ) * ( ( ( BR * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU ) ) * Max( CRS,AMS ) ) )", "choosing": "Min( ( ( DS / RCSe ) * Max( Max( Min( MUM ,( MUR / ( Max( MUR,MUM ) - ( MLU - MLU ) ) ) ),RMSe ),( MUC - MUC ) ) ) ,( RRSe - Min( ( MUR + RMSe ) ,CS ) ) )", "obj1": 0.2857142857142857, "obj2": 0.692662538075371}, {"determining": "Max( Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS / FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( MUR + DS ) / CS ) ) * Max( ( RCSe * ( RCSe / Max( RRSe,MUC ) ) ),MUM ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.6540808353836052}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Min( ( PN / MRS ) ,FirstVNF_RAM ) / MDR ) )", "choosing": "( Max( Max( MUC,MUC ),Min( MUR ,( MLU * Min( MLU ,Min( ( ( MUR - CS ) * ( MUC - DS ) ) ,MUM ) ) ) ) ) + Min( Max( RCSe,RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.4530612244897959, "obj2": 0.5238897186463722}, {"determining": "Min( Min( Const ,ACS ) ,( ( ( FirstVNF_RAM * Max( CRS,CRS ) ) - Max( RRS,MRS ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( MUC,Min( MUC ,CS ) ) - RMSe ),( ( CS * Min( CS ,Min( RMSe ,( DS * ( MUM - Min( RMSe ,MUM ) ) ) ) ) ) / ( MUM - DS ) ) )", "obj1": 0.2612244897959184, "obj2": 0.7107391692616909}, {"determining": "( Max( ( CRS - ACS ),CRS ) / Const )", "choosing": "( ( ( ( CS - RRSe ) / ( Min( ( RRSe * RMSe ) ,RMSe ) * DS ) ) / ( ( MUM / RCSe ) * ( MUC / CS ) ) ) - ( ( Min( DS ,RMSe ) + ( MUC + MLU ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.6313872833073685}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( ( DDR + FirstVNF_RAM ) * ( ACS * MRS ) )", "choosing": "( Max( ( MUR * RRSe ),Max( MUR,MUC ) ) * ( DS + RRSe ) )", "obj1": 0.22653061224489796, "obj2": 0.7509165061698968}, {"determining": "( Min( Const ,BR ) + ( ( ( ACS * FirstVNF_CPU_Server ) - Min( BR ,( ( FirstVNF_CPU_Server / Max( ( MDR + DDR ),AMS ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( DS - MUM ) - ( CS * RRSe ) ),( MLU + Max( ( Min( MUR ,( MUC + RCSe ) ) * ( ( CS / RMSe ) * RCSe ) ),( Max( MLU,RRSe ) + Min( Min( MUC ,CS ) ,( ( ( MUR + MUC ) * Min( RCSe ,MUM ) ) / Max( DS,MUM ) ) ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.7039189304396578}, {"determining": "( ( ( FirstVNF_Mem - Max( CRS,CRS ) ) * ( MRS + BR ) ) / Max( FirstVNF_Mem,CRS ) )", "choosing": "( Max( ( MUR + RCSe ),( RCSe - ( MUM * MLU ) ) ) + Min( Max( RCSe,RMSe ) ,( ( ( RRSe / RMSe ) * ( MUC / CS ) ) - RRSe ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6857339724830995}, {"determining": "( Max( ARS,( CRS - ( ( BR / ACS ) / ( DDR / MRS ) ) ) ) * Min( ( FirstVNF_Mem / ( MRS * AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( ( ( ( RMSe * RMSe ) - RRSe ) + ( Min( MUR ,RRSe ) * RCSe ) ) + RCSe ) + RMSe ) ,Min( Max( ( RCSe + ( MUR - RRSe ) ),Min( MUR ,CS ) ) ,MLU ) ) * ( ( MUC / MLU ) + ( RMSe * DS ) ) ) * ( ( Max( MUR,MLU ) / Min( MUR ,MUM ) ) + Max( ( MLU * RMSe ),( MUC + RRSe ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.6127111612180688}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ( FirstVNF_CPU - ACS ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8933849609035494}, {"determining": "( Max( BR,Max( ( DDR / FirstVNF_CPU ),RRS ) ) * ( BR - AMS ) )", "choosing": "( Min( CS ,MLU ) + ( RRSe - ( ( MUR - RRSe ) - DS ) ) )", "obj1": 0.35306122448979593, "obj2": 0.6249348549321162}, {"determining": "( Max( ARS,( CRS - ( ( BR / ACS ) / ( DDR / MRS ) ) ) ) * Min( ( FirstVNF_Mem / ( MRS * AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( ( ( ( RMSe * RMSe ) - RRSe ) + ( Min( MUR ,RRSe ) * RCSe ) ) + RCSe ) + RMSe ) ,Min( Max( ( RCSe + ( MUR - RRSe ) ),Min( MUR ,CS ) ) ,MLU ) ) * ( ( MUC / MLU ) + ( RMSe * DS ) ) ) * ( ( Max( MUR,MLU ) / Min( MUR ,MUM ) ) + Max( ( MLU * RMSe ),( MUC + RRSe ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.642110681046989}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( DDR * PN ) ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.3020408163265306, "obj2": 0.6733857849869023}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM + ACS ) + ACS ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - Max( CS,RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,CS ) )", "obj1": 0.16122448979591836, "obj2": 0.8254481062142297}, {"determining": "Min( Min( Min( BR ,( Min( Min( ARS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( DDR - FirstVNF_CPU ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( ( MUC / CS ) / RRSe ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7297705964538184}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / BR ) )", "choosing": "( ( MUR - CS ) - ( MLU / MUC ) )", "obj1": 0.24489795918367346, "obj2": 0.7346752308683824}, {"determining": "Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,Max( AMS,( MRS / Max( ( ARS + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + ( PN * Min( ( AMS / ARS ) ,( FirstVNF_Mem_Server - RRS ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / RMSe ),Max( RCSe,MLU ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( ACS + FirstVNF_CPU ) ),FirstVNF_Mem ) * Min( ACS ,Const ) )", "choosing": "Min( Min( CS ,Max( ( ( Min( Min( ( MUM - MUR ) ,MUR ) ,( RMSe / ( MUR / RRSe ) ) ) + Max( RCSe,MUM ) ) + ( MUC - ( RMSe + CS ) ) ),RCSe ) ) ,( Max( ( MUM + MLU ),MUC ) + Max( ( RMSe * RCSe ),( RMSe / MLU ) ) ) )", "obj1": 0.43673469387755104, "obj2": 0.5498795330324101}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,MUC ) )", "obj1": 0.9938775510204082, "obj2": 0.0027813185285845143}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) * ( DDR + FirstVNF_CPU_Server ) ) ,Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) ,Max( Min( ( ACS - ACS ) ,Min( FirstVNF_Mem ,RRS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8545217368523863}, {"determining": "( ( ( MRS + BR ) * ( FirstVNF_Mem - Max( CRS,CRS ) ) ) / Max( FirstVNF_Mem,Min( RRS ,( ( Const * Max( DDR,BR ) ) + ( FirstVNF_RAM * CRS ) ) ) ) )", "choosing": "Max( Min( Min( ( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ,DS ) ,( ( MLU * ( RRSe * CS ) ) / RMSe ) ),( Max( MUC,MUR ) * Max( DS,MUR ) ) )", "obj1": 0.23877551020408164, "obj2": 0.742621691537095}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( DDR / Max( ARS,Min( Min( FirstVNF_CPU_Server ,Max( RRS,FirstVNF_CPU_Server ) ) ,CRS ) ) ) )", "choosing": "( Min( Max( ( MLU - ( RRSe / RRSe ) ),RCSe ) ,( RRSe / MLU ) ) * ( DS / RRSe ) )", "obj1": 0.1510204081632653, "obj2": 0.850110166413781}, {"determining": "( ( FirstVNF_Mem * Max( ( PN - ( Const * ( ( FirstVNF_RAM_Server + ARS ) - ( ( FirstVNF_Mem / ACS ) / Const ) ) ) ),CRS ) ) * Min( DDR ,MRS ) )", "choosing": "Min( Min( ( ( ( ( RMSe * RMSe ) * Max( ( MUR * Min( MUR ,CS ) ),DS ) ) + ( RCSe + MUM ) ) * DS ) ,CS ) ,( RCSe - Min( ( Min( ( Min( ( MUR * RRSe ) ,MUC ) / CS ) ,MUC ) * RCSe ) ,Max( ( ( RMSe / ( CS - RMSe ) ) - ( MLU / Max( RRSe,( RCSe * MUM ) ) ) ),MLU ) ) ) )", "obj1": 0.4, "obj2": 0.5787581574559135}, {"determining": "( Max( Min( MDR ,FirstVNF_Mem ),Max( DDR,ARS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.3, "obj2": 0.6795439703080353}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8799923091842144}, {"determining": "( ( ( FirstVNF_Mem - ( Max( DDR,( FirstVNF_RAM_Server - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * Max( DDR,ARS ) ) ) * FirstVNF_Mem ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( MUR * MUC ) * ( CS * RRSe ) ) - RRSe ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( CS / ( RMSe + MLU ) ) )", "obj1": 0.32857142857142857, "obj2": 0.6430000604751975}, {"determining": "Max( ( ( ( FirstVNF_Mem + Const ) * ( FirstVNF_CPU * RRS ) ) / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ),Max( DDR,Max( ARS,Min( Min( ( FirstVNF_RAM - PN ) ,( FirstVNF_RAM - RRS ) ) ,CRS ) ) ) )", "choosing": "( Min( RRSe ,CS ) * Max( Max( ( MLU - ( ( ( Max( DS,RMSe ) * RRSe ) / Max( MUR,CS ) ) / RRSe ) ),MLU ),( RRSe / MLU ) ) )", "obj1": 0.4346938775510204, "obj2": 0.5509114561614138}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / BR ) )", "choosing": "( Min( ( ( ( CS + RRSe ) * ( MLU - MUC ) ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) / Max( MUR,CS ) )", "obj1": 0.23469387755102042, "obj2": 0.748343038096867}, {"determining": "( ( Min( ( PN / MRS ) ,FirstVNF_RAM ) / MDR ) * ( FirstVNF_RAM_Server - Min( FirstVNF_Mem_Server ,ACS ) ) )", "choosing": "Max( Min( Min( MUR ,( MLU * Min( MLU ,Min( ( ( MUR - CS ) * ( MUC - DS ) ) ,MUM ) ) ) ) ,( MUR * ( ( RCSe - CS ) / Max( DS,( ( ( RRSe - MUM ) / Min( CS ,DS ) ) - DS ) ) ) ) ),( RCSe - ( Min( ( ( ( Max( MUR,RMSe ) * ( MLU + RMSe ) ) + MUM ) / ( CS / DS ) ) ,( Min( RCSe ,RRSe ) - ( MUM * ( Max( MUR,MUC ) * ( CS * MLU ) ) ) ) ) - MLU ) ) )", "obj1": 0.45102040816326533, "obj2": 0.5295924914149067}, {"determining": "( ( AMS * PN ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "( ( DS / RRSe ) + Max( DS,MUC ) )", "obj1": 0.40816326530612246, "obj2": 0.5746715009189686}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,CRS ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.963265306122449, "obj2": 0.017395517500148536}, {"determining": "( Max( ACS,ARS ) * ( ( FirstVNF_Mem / ( AMS * ( Max( FirstVNF_RAM,CRS ) * ACS ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - Min( MLU ,Min( Max( MUC,( Max( ( RRSe - DS ),MUC ) * Max( MUC,RCSe ) ) ) ,Min( RMSe ,( DS - RCSe ) ) ) ) ) * ( Min( Min( DS ,RMSe ) ,Min( MUR ,MLU ) ) * ( ( MUC / MLU ) + ( RMSe + DS ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.6237292227112601}, {"determining": "( ( Const / FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( Min( BR ,( Min( PN ,ARS ) - ACS ) ) / ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( RMSe * Min( Min( ( MUC - DS ) ,Min( RCSe ,RRSe ) ) ,RCSe ) ) ) ,DS ),( CS - RCSe ) ) )", "obj1": 0.1, "obj2": 0.8817032954300777}, {"determining": "( ( ( FirstVNF_CPU_Server / Max( ARS,( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * FirstVNF_CPU ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MLU,MUC ),( RRSe + MUC ) ) + Min( Min( ( ( Max( Max( ( MUC / RMSe ),MUM ),DS ) - Max( RCSe,Max( MUC,( MUR / MUM ) ) ) ) / DS ) ,MUM ) ,Max( RCSe,RMSe ) ) )", "obj1": 0.32653061224489793, "obj2": 0.6501222383687636}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( DDR + AMS ) / ( RRS + MRS ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.3653061224489796, "obj2": 0.6208656395648854}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.963265306122449, "obj2": 0.017395517500148536}, {"determining": "Max( Max( Max( FirstVNF_CPU,DDR ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS * FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( MUR + DS ) / ( RCSe / RMSe ) ) ) * Max( MUM,( RCSe * ( RCSe / Max( RRSe,MUC ) ) ) ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MUC - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3673469387755102, "obj2": 0.6183038685547505}, {"determining": "Min( Max( ( ( ( ( CRS / FirstVNF_RAM ) - RRS ) + MRS ) - Min( FirstVNF_RAM ,BR ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,( Max( ( DDR / ( DDR / FirstVNF_Mem_Server ) ),PN ) - MDR ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( Max( RCSe,DS ) + ( Min( ( RMSe + MUC ) ,Min( DS ,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / Max( CS,MUM ) ) ) ) ) / ( Max( DS,( MUM + Max( MUM,MUR ) ) ) / Max( ( MUC + Min( Min( MUR ,MUM ) ,CS ) ),( MUC - MUM ) ) ) )", "obj1": 0.9591836734693877, "obj2": 0.019382486026179487}, {"determining": "Max( Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS / FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( MUR + DS ) / CS ) ) * Max( ( RCSe * ( RCSe / Max( RRSe,MUC ) ) ),MUM ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3693877551020408, "obj2": 0.6137121701086016}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,MUC ) )", "obj1": 0.9959183673469387, "obj2": 0.001785346806189979}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.024373605193506436}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( Min( FirstVNF_Mem ,MRS ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),DS )", "obj1": 0.09795918367346938, "obj2": 0.8933849609035494}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,CRS ),( ( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) ) - Max( Const,FirstVNF_CPU ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9571428571428572, "obj2": 0.021027083038023198}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,CRS ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,Min( ( Min( PN ,FirstVNF_CPU ) * ( DDR + FirstVNF_CPU_Server ) ) ,Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( ( RRSe - MLU ) + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9510204081632653, "obj2": 0.024023923230058055}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( RCSe - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.024373605193506436}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( ( FirstVNF_Mem + ( FirstVNF_CPU / ( AMS * Const ) ) ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) / Max( DDR,FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( RCSe - RCSe ) ,( MUR * MUR ) ) - Min( Min( DS ,Min( Min( ( Max( DS,RCSe ) - RRSe ) ,MUR ) ,( MUM * RRSe ) ) ) ,( MUC - RRSe ) ) ) - ( MLU * Max( MUC,Min( MUC ,( Min( RCSe ,( Min( MUR ,MUM ) * ( CS - MUR ) ) ) * Min( MUM ,RRSe ) ) ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.021938267801514085}, {"determining": "( Max( Min( ( PN * AMS ) ,Min( ( Max( Max( Const,DDR ),Min( MDR ,ARS ) ) / MRS ) ,( DDR + DDR ) ) ),Min( ( PN - BR ) ,Min( MRS ,FirstVNF_CPU ) ) ) * Min( Const ,BR ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( RCSe,RMSe ) ,Min( ( CS / ( CS * RRSe ) ) ,MUM ) ) )", "obj1": 0.32653061224489793, "obj2": 0.6501222383687636}, {"determining": "( Min( FirstVNF_Mem ,ARS ) + ( ( Const + ( FirstVNF_CPU - MDR ) ) + ( RRS * FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( ( Max( DS,MLU ) + Min( Max( ( ( CS + MUC ) / ( RMSe / MLU ) ),MLU ) ,MUC ) ) / MLU ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( ( CS - MUC ),Min( Min( RMSe ,( Max( ( CS - RCSe ),( MUC + ( RCSe / DS ) ) ) * ( Max( ( RRSe + RRSe ),RMSe ) + DS ) ) ) ,CS ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8814666939755978}, {"determining": "( Max( ARS,ACS ) * Min( ( FirstVNF_Mem / ( MRS * ( AMS / CRS ) ) ) ,( ARS * ( ( FirstVNF_Mem_Server + CRS ) - Min( Const ,CRS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RMSe ) ,Min( MUR ,DS ) ) * ( ( MUC / MLU ) + ( RMSe * DS ) ) ) * ( Min( RCSe ,( MUC * Min( Min( RMSe ,MUR ) ,( DS / ( Max( MUM,DS ) / MUM ) ) ) ) ) * RCSe ) )", "obj1": 0.37142857142857144, "obj2": 0.613500202546379}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.02187378103641845}, {"determining": "( ( BR * Min( Max( MRS,RRS ) ,( Const + Const ) ) ) - ( BR * CRS ) )", "choosing": "( ( ( RCSe / ( ( MLU + Min( RMSe ,( RCSe - RRSe ) ) ) + ( ( ( MLU - DS ) + ( MLU - RMSe ) ) * Max( CS,DS ) ) ) ) * MLU ) / Min( MUM ,( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ARS ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR - MUM ) / ( ( MUC - DS ) / Max( CS,MUC ) ) ) - ( ( ( CS - RRSe ) / ( RCSe + DS ) ) / Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( Min( ( Max( ( DDR + FirstVNF_CPU_Server ),RRS ) + ARS ) ,( BR * ACS ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( ( Max( Min( MUM ,( RRSe + MLU ) ),MUM ) - Max( ( ( RMSe - MLU ) + Max( DS,( ( RMSe - CS ) - MUC ) ) ),( RCSe - RRSe ) ) ) * DS ) / ( MUR * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MDR ,( ( ACS - FirstVNF_RAM_Server ) - ( Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) / CRS ),( CRS / ACS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR - MUM ) / ( ( ( DS - ( MUR + ( MLU * RMSe ) ) ) + MLU ) / ( CS / MUC ) ) ) - ( ( ( MUM - RRSe ) / ( RCSe + DS ) ) / ( ( MLU / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ARS ) ,( ACS + ( FirstVNF_CPU_Server - ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR - CS ) - ( MLU / ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,CRS ) * DDR ) - ( AMS - FirstVNF_CPU ) )", "choosing": "Min( ( RMSe * ( Max( ( MUR * MLU ),MUR ) + ( RMSe - MUM ) ) ) ,( RCSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( Min( ( Max( ( DDR + FirstVNF_CPU_Server ),RRS ) + ARS ) ,( BR * ACS ) ) / Min( PN ,ACS ) ) )", "choosing": "Max( ( CS * DS ),Min( ( MLU + ( ( CS * RRSe ) + RCSe ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - DDR ) )", "choosing": "( ( RMSe - DS ) / ( DS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - ( AMS + FirstVNF_CPU ) ) - ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "Min( ( Min( ( ( DS + MLU ) - ( CS / MUC ) ) ,( ( CS * RRSe ) + ( MUR * MUR ) ) ) / MUM ) ,( DS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( AMS ,FirstVNF_CPU ) + DDR ) ,( Max( ACS,Const ) - ( MRS / FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * DS ) * ( ( RCSe * Max( Min( Max( RCSe,( Max( MUM,MUM ) + MUR ) ) ,MUM ),Max( RRSe,( MLU * ( MUM + RCSe ) ) ) ) ) * ( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) / ( Min( PN ,FirstVNF_RAM ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( Max( RCSe,( MUR * RMSe ) ) ,( ( CS * RCSe ) - ( RCSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) )", "choosing": "( Max( ( DS + ( RMSe / MUC ) ),( MLU / MUR ) ) + ( ( DS * CS ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( CRS - FirstVNF_CPU ) * ( ( DDR + AMS ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( ( MUR - ( RCSe - Min( RRSe ,CS ) ) ) + ( RMSe / MUM ) ) + Min( Max( ( MUR * CS ),RMSe ) ,( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( DDR + ( ( FirstVNF_Mem_Server * ( PN + BR ) ) * CRS ) ) + ( RRS + MRS ) ) )", "choosing": "( ( ( MUR - ( Min( RRSe ,CS ) - MUM ) ) + ( ( MLU + ( MLU / DS ) ) / MUM ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( BR + FirstVNF_CPU_Server ) ) + Min( RRS ,Min( Const ,Min( Min( MDR ,( FirstVNF_RAM_Server * ( MRS - Const ) ) ) ,Max( CRS,MRS ) ) ) ) )", "choosing": "Max( ( ( CS / MLU ) + Min( ( Min( Max( ( ( MLU + CS ) / ( CS * RCSe ) ),MLU ) ,CS ) - ( ( MLU + RCSe ) + MUR ) ) ,MUC ) ),Max( Min( Min( RMSe ,( RCSe * Min( MUC ,DS ) ) ) ,CS ),( RMSe - MUC ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8981254465932332}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.30532402512547024}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + ( Const - FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,MLU ) / Max( Min( MUM ,DS ),MUM ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / ( ( ( DDR + FirstVNF_RAM_Server ) + ( ( Max( Const,MRS ) + ( ( FirstVNF_CPU - ACS ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) / Const ) ) )", "choosing": "( Max( ( MLU * DS ),CS ) + ( ( ( DS - Min( CS ,DS ) ) * RMSe ) + RCSe ) )", "obj1": 0.7081632653061225, "obj2": 0.24873492690444374}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + Const ) ) * ( ( ( RRS / ( MRS - BR ) ) + BR ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUR / ( MUC + MUM ) ) ) / MUR ) ) + Max( DS,Max( RCSe,RCSe ) ) )", "obj1": 0.7571428571428571, "obj2": 0.16897798081755447}, {"determining": "Min( AMS ,( ( ( ( ( DDR - ( FirstVNF_CPU_Server + ( PN - BR ) ) ) - PN ) * ARS ) - ( FirstVNF_CPU + PN ) ) - Max( FirstVNF_CPU,Const ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( ( ( ( ( MLU + ( MUM + RMSe ) ) + DS ) - ( ( CS + RCSe ) + DS ) ) / Min( MUM ,MUR ) ) / MUC ) / Min( MLU ,MLU ) ) )", "obj1": 0.8612244897959184, "obj2": 0.11979230494467584}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( AMS - FirstVNF_CPU ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( Max( ( MUR * MLU ),MUR ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.563265306122449, "obj2": 0.41049291315695674}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( ( DS + MLU ) - ( CS / MUC ) ) ,( ( CS * RRSe ) + ( MUR * MUR ) ) ) / MUM ) ,( DS + MUM ) )", "obj1": 0.7959183673469388, "obj2": 0.14168448138097578}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( ( AMS + FirstVNF_CPU ) ,( PN + ACS ) ) ) )", "choosing": "Max( ( CS * DS ),Min( ( MLU + ( ( CS * RRSe ) + RCSe ) ) ,RMSe ) )", "obj1": 0.4857142857142857, "obj2": 0.49074008079480436}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( AMS - ( Max( FirstVNF_Mem_Server,RRS ) / FirstVNF_Mem_Server ) ) + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + MUC ) - ( CS + ( ( CS / MUC ) + CS ) ) ) + Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) )", "obj1": 0.5224489795918368, "obj2": 0.4560594530976299}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( BR * MDR ) - ( FirstVNF_Mem_Server + ( Max( BR,Max( ( DDR * FirstVNF_CPU ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ,Min( Max( DDR,DDR ) ,( ( CRS * FirstVNF_Mem ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MLU * RMSe ) - MLU ) / ( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - RRSe ) ) ) - ( RMSe / DS ) )", "obj1": 0.9040816326530612, "obj2": 0.044576292118664075}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + ( ( BR - FirstVNF_Mem ) / ( ( DDR / ( RRS * ARS ) ) / RRS ) ) ) ) + ( FirstVNF_RAM * ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( MLU ,( Min( MUC ,MUC ) + MUM ) ) + Min( MUC ,( ( RCSe * MUM ) - Min( DS ,CS ) ) ) ),Max( ( MUM / RCSe ),( MUC - CS ) ) )", "obj1": 0.8816326530612245, "obj2": 0.0825907327718255}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( ( AMS + FirstVNF_CPU ) ,( PN + ACS ) ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( MUR * MUR ) + MUC ) ) + Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.5469387755102041, "obj2": 0.4339796124865251}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "( ( CRS * ( FirstVNF_RAM + ( ( BR - FirstVNF_Mem ) / ( Min( FirstVNF_RAM ,PN ) / ( MDR + FirstVNF_RAM ) ) ) ) ) + ( FirstVNF_RAM * ( ( ACS / ( FirstVNF_RAM_Server + MRS ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( Min( CS ,( RCSe / ( ( MUR - ( RCSe - Min( RRSe ,CS ) ) ) + ( RMSe / MUM ) ) ) ) / MUM ) - ( MUM / MUC ) )", "obj1": 0.8755102040816326, "obj2": 0.08800716648775651}, {"determining": "( Max( Min( ACS ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM_Server,CRS ) ) + Max( Max( FirstVNF_CPU_Server,Const ),Min( MDR ,ARS ) ) )", "choosing": "Min( ( ( MLU + MUM ) / ( CS / MLU ) ) ,( RCSe / ( MUM + ( RMSe / MLU ) ) ) )", "obj1": 0.18979591836734694, "obj2": 0.7904241914531991}, {"determining": "Min( Max( Min( ( MRS * CRS ) ,CRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( MLU,DS ) ,( MUM * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / Max( MLU,RCSe ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.040093828381892835}, {"determining": "( ( Max( ARS,BR ) - ( AMS * BR ) ) * ( ( ( Min( ( ( FirstVNF_CPU_Server - CRS ) - Max( MRS,( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,BR ) + FirstVNF_Mem ) + PN ) / Max( DDR,BR ) ) )", "choosing": "( ( ( MUR - ( MUM - DS ) ) * MUR ) + ( ( CS * ( Min( MUC ,MUR ) + RMSe ) ) / ( MLU - CS ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8560819361250306}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.4448979591836735, "obj2": 0.5180893359231586}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_CPU / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ACS - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( DS / ( Min( ( ( MLU * Max( MUM,MUR ) ) / MLU ) ,( RCSe - ( RRSe / MLU ) ) ) / RCSe ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( ( AMS + FirstVNF_CPU ) ,( PN + ACS ) ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( MUR * MUR ) + MUC ) ) + Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.5346938775510204, "obj2": 0.44667768736717994}, {"determining": "( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUM + MLU ) / Min( MLU ,MUR ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Min( FirstVNF_CPU_Server ,MRS ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( MUC,Max( ( ( ( CS + MUM ) * MUR ) - Min( Max( ( MUR * MUM ),Min( RMSe ,RMSe ) ) ,Min( ( MUR / MUC ) ,MUR ) ) ),( MUC - RRSe ) ) ) ,Min( MUC ,MUM ) ) )", "obj1": 0.46938775510204084, "obj2": 0.503135857340767}, {"determining": "( Max( ( CRS - MRS ),FirstVNF_CPU ) * ( Const / BR ) )", "choosing": "( Min( ( ( ( MUM - DS ) - MUR ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) / ( RCSe + ( ( ( ( ( DS + MUR ) - ( Max( DS,MLU ) - ( RCSe / MUR ) ) ) / CS ) / ( RRSe + RCSe ) ) - Max( DS,( RMSe - MUM ) ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.7593079729529636}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( DDR + AMS ) / Const ) )", "choosing": "( Max( Max( MUC,MUC ),( ( DS * MLU ) / Min( ( RMSe / MUC ) ,MUM ) ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.4387755102040816, "obj2": 0.5354327701677937}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Min( FirstVNF_CPU_Server ,MRS ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( MUC,Max( ( ( ( CS + MUM ) * MUR ) - Min( Max( ( MUR * MUM ),Min( RMSe ,RMSe ) ) ,Min( ( MUR / MUC ) ,MUR ) ) ),( MUC - RRSe ) ) ) ,Min( MUC ,MUM ) ) )", "obj1": 0.46530612244897956, "obj2": 0.51381871554563}, {"determining": "( ( Max( BR,ARS ) - ( BR * AMS ) ) * ( Min( ( Max( Const,FirstVNF_Mem ) * ARS ) ,RRS ) / Max( DDR,BR ) ) )", "choosing": "( Max( ( ( MUM - DS ) - MUR ),MUR ) + Max( ( ( RCSe / RRSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.37755102040816324, "obj2": 0.5932174265326878}, {"determining": "Min( Min( Const ,BR ) ,Min( DDR ,( ( ( ( Max( ( ACS / FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) + FirstVNF_CPU ) - RRS ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) / Max( DDR,BR ) ) ) )", "choosing": "Max( Min( ( Min( Min( Max( MUR,( ( MUC / DS ) * ( MUC / MUM ) ) ) ,( RMSe / MLU ) ) ,( RRSe - CS ) ) * RMSe ) ,( CS * RRSe ) ),MLU )", "obj1": 0.21020408163265306, "obj2": 0.7774735881511659}, {"determining": "( ( Min( Max( ( MRS - DDR ),( Min( FirstVNF_Mem_Server ,MRS ) + RRS ) ) ,( ( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) ) - Max( Const,FirstVNF_CPU ) ) ) + Const ) * ( FirstVNF_CPU * RRS ) )", "choosing": "( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) )", "obj1": 0.3163265306122449, "obj2": 0.670031992074091}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * MLU ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.02995662067019194}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( BR ,( ( Max( MDR,Max( AMS,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( ( CS - ( ( RMSe - ( ( DS + MLU ) / RRSe ) ) + ( MLU + Max( MLU,( RCSe + RRSe ) ) ) ) ) ,( CS - Min( RMSe ,CS ) ) ) ),Max( ( CS - MUC ),Min( Min( RMSe ,( MUM * ( ( MUR - CS ) / Min( RRSe ,RRSe ) ) ) ) ,CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8680115716002985}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,ACS ) + FirstVNF_RAM ) ,( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_Mem * Max( ( PN - MRS ),BR ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( Min( CS ,( MUC * DS ) ) * RRSe ) ),Min( ( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - ( DS + DS ) ) ) ,MLU ) ) + DS ) ,Max( ( RCSe * MLU ),RRSe ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7852404451875611}, {"determining": "( ( AMS - Max( Max( ( Const * Const ),FirstVNF_RAM ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( ( Min( RRSe ,MUR ) - Min( RCSe ,DS ) ) ,( Max( ( Min( Max( DS,MLU ) ,( MUR * MUR ) ) * RMSe ),MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.41020408163265304, "obj2": 0.5704068520892015}, {"determining": "( ( Max( BR,ARS ) - ( BR * AMS ) ) * ( Min( ( Max( Const,FirstVNF_Mem ) * ARS ) ,RRS ) / Max( DDR,BR ) ) )", "choosing": "( Max( ( ( MUM - DS ) - MUR ),MUR ) + Max( ( ( RCSe / RRSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8239598051837363}, {"determining": "Max( Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS / FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( MUR + DS ) / CS ) ) * Max( ( RCSe * ( RCSe / Max( RRSe,MUC ) ) ),MUM ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.6540808353836052}, {"determining": "Min( Min( Const ,ACS ) ,( ( ( FirstVNF_RAM * Max( CRS,CRS ) ) - Max( RRS,MRS ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( MUC,Min( MUC ,CS ) ) - RMSe ),( ( CS * Min( CS ,Min( RMSe ,( DS * ( MUM - Min( RMSe ,MUM ) ) ) ) ) ) / ( MUM - DS ) ) )", "obj1": 0.2612244897959184, "obj2": 0.7107391692616909}, {"determining": "Min( Max( Min( ( PN - ( Max( AMS,PN ) / Max( ( DDR / MDR ),FirstVNF_Mem_Server ) ) ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server + Min( ( AMS / DDR ) ,PN ) ) + Min( Const ,( FirstVNF_CPU / CRS ) ) ) + CRS ) * FirstVNF_CPU_Server ) ,Min( BR ,( ( PN / Min( DDR ,Max( ( PN / DDR ),( MRS + FirstVNF_CPU ) ) ) ) / ( CRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RMSe,MUM ) + ( DS - ( MLU - RRSe ) ) )", "obj1": 0.9612244897959183, "obj2": 0.017141212660118595}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( ( DDR + FirstVNF_RAM ) * ( ACS * MRS ) )", "choosing": "( Max( ( MUR * RRSe ),Max( MUR,MUC ) ) * ( DS + RRSe ) )", "obj1": 0.22653061224489796, "obj2": 0.7509165061698968}, {"determining": "( ( AMS * ( FirstVNF_CPU_Server / ( FirstVNF_RAM / BR ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( Max( Max( DS,MUR ),( ( MUM - RRSe ) / CS ) ) + Max( ( Max( RRSe,RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8394065596601764}, {"determining": "( Max( ARS,( CRS - ( ( BR / ACS ) / ( DDR / MRS ) ) ) ) * Min( ( FirstVNF_Mem / ( MRS * AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( ( ( ( RMSe * RMSe ) - RRSe ) + ( Min( MUR ,RRSe ) * RCSe ) ) + RCSe ) + RMSe ) ,Min( Max( ( RCSe + ( MUR - RRSe ) ),Min( MUR ,CS ) ) ,MLU ) ) * ( ( MUC / MLU ) + ( RMSe * DS ) ) ) * ( ( Max( MUR,MLU ) / Min( MUR ,MUM ) ) + Max( ( MLU * RMSe ),( MUC + RRSe ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.6127111612180688}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( RRS - PN ) ,( Min( ( PN * ACS ) ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( Max( DS,MUC ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) )", "choosing": "( ( ( MUR - ( MUM - DS ) ) * MUR ) + Min( ( MLU - CS ) ,( MUM / Max( Min( RMSe ,RRSe ),CS ) ) ) )", "obj1": 0.38571428571428573, "obj2": 0.5864420912350172}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ( FirstVNF_CPU - ACS ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8933849609035494}, {"determining": "( Max( ARS,( CRS - ( ( BR / ACS ) / ( DDR / MRS ) ) ) ) * Min( ( FirstVNF_Mem / ( MRS * AMS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( ( ( ( RMSe * RMSe ) - RRSe ) + ( Min( MUR ,RRSe ) * RCSe ) ) + RCSe ) + RMSe ) ,Min( Max( ( RCSe + ( MUR - RRSe ) ),Min( MUR ,CS ) ) ,MLU ) ) * ( ( MUC / MLU ) + ( RMSe * DS ) ) ) * ( ( Max( MUR,MLU ) / Min( MUR ,MUM ) ) + Max( ( MLU * RMSe ),( MUC + RRSe ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.642110681046989}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( DDR * PN ) ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.3020408163265306, "obj2": 0.6733857849869023}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM + ACS ) + ACS ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - Max( CS,RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,CS ) )", "obj1": 0.16122448979591836, "obj2": 0.8254481062142297}, {"determining": "Min( Min( Min( BR ,( Min( Min( ARS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( DDR - FirstVNF_CPU ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( ( MUC / CS ) / RRSe ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7297705964538184}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / BR ) )", "choosing": "( ( MUR - CS ) - ( MLU / MUC ) )", "obj1": 0.24489795918367346, "obj2": 0.7346752308683824}, {"determining": "Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,Max( AMS,( MRS / Max( ( ARS + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + ( PN * Min( ( AMS / ARS ) ,( FirstVNF_Mem_Server - RRS ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / RMSe ),Max( RCSe,MLU ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,MUC ) )", "obj1": 0.9938775510204082, "obj2": 0.0027813185285845143}, {"determining": "( ( ( MRS + BR ) * ( FirstVNF_Mem - Max( CRS,CRS ) ) ) / Max( FirstVNF_Mem,Min( RRS ,( ( Const * Max( DDR,BR ) ) + ( FirstVNF_RAM * CRS ) ) ) ) )", "choosing": "Max( Min( Min( ( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ,DS ) ,( ( MLU * ( RRSe * CS ) ) / RMSe ) ),( Max( MUC,MUR ) * Max( DS,MUR ) ) )", "obj1": 0.23877551020408164, "obj2": 0.742621691537095}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7857142857142857, "obj2": 0.15257407585705876}, {"determining": "( Min( Const ,BR ) + ( ( ( ACS * FirstVNF_CPU_Server ) - Min( BR ,( ( FirstVNF_CPU_Server / Max( ( MDR + DDR ),AMS ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( DS - MUM ) - ( CS * RRSe ) ),( MLU + Max( ( Min( MUR ,( MUC + RCSe ) ) * ( ( CS / RMSe ) * RCSe ) ),( Max( MLU,RRSe ) + Min( Min( MUC ,CS ) ,( ( ( MUR + MUC ) * Min( RCSe ,MUM ) ) / Max( DS,MUM ) ) ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.7039189304396578}, {"determining": "( ( ( FirstVNF_Mem - Max( CRS,CRS ) ) * ( MRS + BR ) ) / Max( FirstVNF_Mem,CRS ) )", "choosing": "( Max( ( MUR + RCSe ),( RCSe - ( MUM * MLU ) ) ) + Min( Max( RCSe,RMSe ) ,( ( ( RRSe / RMSe ) * ( MUC / CS ) ) - RRSe ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6857339724830995}, {"determining": "( ( FirstVNF_Mem * Max( ( PN - ( Const * ( ( FirstVNF_RAM_Server + ARS ) - ( ( FirstVNF_Mem / ACS ) / Const ) ) ) ),CRS ) ) * Min( DDR ,MRS ) )", "choosing": "Min( Min( ( ( ( ( RMSe * RMSe ) * Max( ( MUR * Min( MUR ,CS ) ),DS ) ) + ( RCSe + MUM ) ) * DS ) ,CS ) ,( RCSe - Min( ( Min( ( Min( ( MUR * RRSe ) ,MUC ) / CS ) ,MUC ) * RCSe ) ,Max( ( ( RMSe / ( CS - RMSe ) ) - ( MLU / Max( RRSe,( RCSe * MUM ) ) ) ),MLU ) ) ) )", "obj1": 0.4, "obj2": 0.5787581574559135}, {"determining": "( Max( Min( MDR ,FirstVNF_Mem ),Max( DDR,ARS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.3, "obj2": 0.6795439703080353}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8799923091842144}, {"determining": "( ( ( FirstVNF_Mem - ( Max( DDR,( FirstVNF_RAM_Server - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * Max( DDR,ARS ) ) ) * FirstVNF_Mem ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( MUR * MUC ) * ( CS * RRSe ) ) - RRSe ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( CS / ( RMSe + MLU ) ) )", "obj1": 0.32857142857142857, "obj2": 0.6430000604751975}, {"determining": "( ( ( FirstVNF_Mem - ( Max( DDR,Const ) - ( FirstVNF_Mem_Server / BR ) ) ) * FirstVNF_Mem ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( ( DS * DS ) / Min( ( RMSe / Max( ( MUC / MLU ),RRSe ) ) ,MUM ) )", "obj1": 0.39387755102040817, "obj2": 0.5831906055687394}, {"determining": "( Max( ( CRS - ACS ),CRS ) / Const )", "choosing": "( ( ( ( CS - RRSe ) / ( Min( ( RRSe * RMSe ) ,RMSe ) * DS ) ) / ( ( MUM / RCSe ) * ( MUC / CS ) ) ) - ( ( Min( DS ,RMSe ) + ( MUC + MLU ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.6313872833073685}, {"determining": "Max( ( ( ( FirstVNF_Mem + Const ) * ( FirstVNF_CPU * RRS ) ) / ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ),Max( DDR,Max( ARS,Min( Min( ( FirstVNF_RAM - PN ) ,( FirstVNF_RAM - RRS ) ) ,CRS ) ) ) )", "choosing": "( Min( RRSe ,CS ) * Max( Max( ( MLU - ( ( ( Max( DS,RMSe ) * RRSe ) / Max( MUR,CS ) ) / RRSe ) ),MLU ),( RRSe / MLU ) ) )", "obj1": 0.4346938775510204, "obj2": 0.5509114561614138}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / BR ) )", "choosing": "( Min( ( ( ( CS + RRSe ) * ( MLU - MUC ) ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) / Max( MUR,CS ) )", "obj1": 0.23469387755102042, "obj2": 0.748343038096867}, {"determining": "( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( ACS + FirstVNF_CPU ) ),FirstVNF_Mem ) * Min( ACS ,Const ) )", "choosing": "Min( Min( CS ,Max( ( ( Min( Min( ( MUM - MUR ) ,MUR ) ,( RMSe / ( MUR / RRSe ) ) ) + Max( RCSe,MUM ) ) + ( MUC - ( RMSe + CS ) ) ),RCSe ) ) ,( Max( ( MUM + MLU ),MUC ) + Max( ( RMSe * RCSe ),( RMSe / MLU ) ) ) )", "obj1": 0.43673469387755104, "obj2": 0.5498795330324101}, {"determining": "( ( AMS * PN ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "( ( DS / RRSe ) + Max( DS,MUC ) )", "obj1": 0.40816326530612246, "obj2": 0.5746715009189686}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "Min( Min( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ) ,( ( PN - CRS ) - Const ) ) ,Min( Max( Const,MDR ) ,Max( DDR,DDR ) ) )", "choosing": "( ( ( Max( MUR,( ( MUR / ( ( MUR / CS ) * ( MUM / RMSe ) ) ) + Max( DS,MUM ) ) ) / ( MLU - ( ( RRSe * ( Max( DS,RRSe ) + DS ) ) * ( Max( MUC,MUR ) * ( MUC + MUC ) ) ) ) ) / MUR ) - ( ( ( ( DS * RMSe ) - Max( Max( RMSe,MUM ),RCSe ) ) + DS ) / MUM ) )", "obj1": 0.9469387755102041, "obj2": 0.023986538127100273}, {"determining": "( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) ) * ( Const / BR ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUC ) )", "obj1": 0.2836734693877551, "obj2": 0.6953771689786736}, {"determining": "( Max( BR,Max( ( DDR / FirstVNF_CPU ),RRS ) ) * ( BR - AMS ) )", "choosing": "( Min( CS ,MLU ) + ( RRSe - ( ( MUR - RRSe ) - DS ) ) )", "obj1": 0.35306122448979593, "obj2": 0.6249348549321162}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) - ( Max( DDR,Const ) - Max( DDR,ARS ) ) ) * FirstVNF_Mem ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( MUR * MUC ) * ( CS * RRSe ) ) - RRSe ) ) / ( MUM * ( ( MUR + DS ) / CS ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.630679525310529}, {"determining": "( Max( ACS,ARS ) * ( ( FirstVNF_Mem / ( AMS * ( Max( FirstVNF_RAM,CRS ) * ACS ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - Min( MLU ,Min( Max( MUC,( Max( ( RRSe - DS ),MUC ) * Max( MUC,RCSe ) ) ) ,Min( RMSe ,( DS - RCSe ) ) ) ) ) * ( Min( Min( DS ,RMSe ) ,Min( MUR ,MLU ) ) * ( ( MUC / MLU ) + ( RMSe + DS ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.6237292227112601}, {"determining": "( ( Const / FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( Min( BR ,( Min( PN ,ARS ) - ACS ) ) / ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( RMSe * Min( Min( ( MUC - DS ) ,Min( RCSe ,RRSe ) ) ,RCSe ) ) ) ,DS ),( CS - RCSe ) ) )", "obj1": 0.1, "obj2": 0.8817032954300777}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( DDR + AMS ) / ( RRS + MRS ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.3653061224489796, "obj2": 0.6208656395648854}, {"determining": "( ( ( FirstVNF_CPU_Server / Max( ARS,( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * FirstVNF_CPU ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MLU,MUC ),( RRSe + MUC ) ) + Min( Min( ( ( Max( Max( ( MUC / RMSe ),MUM ),DS ) - Max( RCSe,Max( MUC,( MUR / MUM ) ) ) ) / DS ) ,MUM ) ,Max( RCSe,RMSe ) ) )", "obj1": 0.32653061224489793, "obj2": 0.6501222383687636}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) / ( DDR * PN ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * MLU ),MUR ) + ( MUM - ( MUR / ( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.02995662067019194}, {"determining": "( ( ( FirstVNF_Mem - ( Max( DDR,Const ) - Max( DDR,ARS ) ) ) * FirstVNF_Mem ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( MUR * MUC ) * ( CS * RRSe ) ) - RRSe ) ) / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6921576976213979}, {"determining": "( ( ( PN + CRS ) + ( BR / CRS ) ) * ( ( AMS * FirstVNF_RAM ) / ( MRS + RRS ) ) )", "choosing": "( MUM + Min( CS ,RRSe ) )", "obj1": 0.3673469387755102, "obj2": 0.6143231657597272}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( ( FirstVNF_Mem + ( FirstVNF_CPU / ( AMS * Const ) ) ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) / Max( DDR,FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( RCSe - RCSe ) ,( MUR * MUR ) ) - Min( Min( DS ,Min( Min( ( Max( DS,RCSe ) - RRSe ) ,MUR ) ,( MUM * RRSe ) ) ) ,( MUC - RRSe ) ) ) - ( MLU * Max( MUC,Min( MUC ,( Min( RCSe ,( Min( MUR ,MUM ) * ( CS - MUR ) ) ) * Min( MUM ,RRSe ) ) ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.021938267801514085}, {"determining": "( ( Min( ( CRS - ACS ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) / ( ( BR / MRS ) * ( FirstVNF_CPU_Server - MDR ) ) ) * ( ( ( BR * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU ) ) * Max( CRS,AMS ) ) )", "choosing": "Min( ( ( DS / RCSe ) * Max( Max( Min( MUM ,( MUR / ( Max( MUR,MUM ) - ( MLU - MLU ) ) ) ),RMSe ),( MUC - MUC ) ) ) ,( RRSe - Min( ( MUR + RMSe ) ,CS ) ) )", "obj1": 0.2857142857142857, "obj2": 0.692662538075371}, {"determining": "Min( Max( ( ( ( ( CRS / FirstVNF_RAM ) - RRS ) + MRS ) - Min( FirstVNF_RAM ,BR ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,( Max( ( DDR / ( DDR / FirstVNF_Mem_Server ) ),PN ) - MDR ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( Max( RCSe,DS ) + ( Min( ( RMSe + MUC ) ,Min( DS ,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / Max( CS,MUM ) ) ) ) ) / ( Max( DS,( MUM + Max( MUM,MUR ) ) ) / Max( ( MUC + Min( Min( MUR ,MUM ) ,CS ) ),( MUC - MUM ) ) ) )", "obj1": 0.9591836734693877, "obj2": 0.019382486026179487}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + Max( ( FirstVNF_CPU - ( ACS - MRS ) ),FirstVNF_Mem ) ) ) ) ) + ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) / ( MUM * ( RMSe * RMSe ) ) ) ,CS ),( MUC - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8933849609035494}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,CRS ),( ( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) ) - Max( Const,FirstVNF_CPU ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9571428571428572, "obj2": 0.021027083038023198}, {"determining": "( Max( Min( ( PN * AMS ) ,Min( ( Max( Max( Const,DDR ),Min( MDR ,ARS ) ) / MRS ) ,( DDR + DDR ) ) ),Min( ( PN - BR ) ,Min( MRS ,FirstVNF_CPU ) ) ) * Min( Const ,BR ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( RCSe,RMSe ) ,Min( ( CS / ( CS * RRSe ) ) ,MUM ) ) )", "obj1": 0.32653061224489793, "obj2": 0.6501222383687636}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( DDR,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * MLU ),MUR ) + ( MUM - ( MUR / ( MLU + Min( MUM ,MUR ) ) ) ) ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0012650504169780304}, {"determining": "( Min( FirstVNF_Mem ,ARS ) + ( ( Const + ( FirstVNF_CPU - MDR ) ) + ( RRS * FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( ( Max( DS,MLU ) + Min( Max( ( ( CS + MUC ) / ( RMSe / MLU ) ),MLU ) ,MUC ) ) / MLU ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( ( CS - MUC ),Min( Min( RMSe ,( Max( ( CS - RCSe ),( MUC + ( RCSe / DS ) ) ) * ( Max( ( RRSe + RRSe ),RMSe ) + DS ) ) ) ,CS ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8814666939755978}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,MUC ) )", "obj1": 0.9959183673469387, "obj2": 0.001785346806189979}, {"determining": "( Max( ARS,ACS ) * Min( ( FirstVNF_Mem / ( MRS * ( AMS / CRS ) ) ) ,( ARS * ( ( FirstVNF_Mem_Server + CRS ) - Min( Const ,CRS ) ) ) ) )", "choosing": "( ( Min( Min( DS ,RMSe ) ,Min( MUR ,DS ) ) * ( ( MUC / MLU ) + ( RMSe * DS ) ) ) * ( Min( RCSe ,( MUC * Min( Min( RMSe ,MUR ) ,( DS / ( Max( MUM,DS ) / MUM ) ) ) ) ) * RCSe ) )", "obj1": 0.37142857142857144, "obj2": 0.613500202546379}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.02187378103641845}, {"determining": "Max( Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ),Min( ( DDR * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,( ( AMS * ( RRS / FirstVNF_RAM_Server ) ) - MRS ) ) )", "choosing": "( ( ( Max( Max( MUC,MUR ),MUM ) * ( ( MUM * ( ( MUR + DS ) / CS ) ) * Max( ( RCSe * ( RCSe / Max( RRSe,MUC ) ) ),MUM ) ) ) / Max( ( MUR * CS ),RMSe ) ) - Max( Max( ( MUM - RMSe ),( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3693877551020408, "obj2": 0.6137121701086016}, {"determining": "Min( ( ARS - ( FirstVNF_RAM * ACS ) ) ,( MRS - DDR ) )", "choosing": "( ( RMSe - DS ) / ( DS / Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( Max( MRS,RRS ) ,( Const + Const ) ) ) - ( BR * CRS ) )", "choosing": "( ( ( RCSe / ( ( MLU + Min( RMSe ,( RCSe - RRSe ) ) ) + ( ( ( MLU - DS ) + ( MLU - RMSe ) ) * Max( CS,DS ) ) ) ) * MLU ) / Min( MUM ,( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ARS ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR - MUM ) / ( ( MUC - DS ) / Max( CS,MUC ) ) ) - ( ( ( CS - RRSe ) / ( RCSe + DS ) ) / Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( Min( ( Max( ( DDR + FirstVNF_CPU_Server ),RRS ) + ARS ) ,( BR * ACS ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( ( Max( Min( MUM ,( RRSe + MLU ) ),MUM ) - Max( ( ( RMSe - MLU ) + Max( DS,( ( RMSe - CS ) - MUC ) ) ),( RCSe - RRSe ) ) ) * DS ) / ( MUR * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MDR ,( ( ACS - FirstVNF_RAM_Server ) - ( Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) / CRS ),( CRS / ACS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR - MUM ) / ( ( ( DS - ( MUR + ( MLU * RMSe ) ) ) + MLU ) / ( CS / MUC ) ) ) - ( ( ( MUM - RRSe ) / ( RCSe + DS ) ) / ( ( MLU / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ARS ) ,( ACS + ( FirstVNF_CPU_Server - ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR - CS ) - ( MLU / ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( PN - ( Min( ( ( CRS * ( BR - ( FirstVNF_RAM_Server + BR ) ) ) + DDR ) ,FirstVNF_CPU_Server ) * ( Min( Max( DDR,ARS ) ,Const ) / FirstVNF_Mem ) ) ) / ( DDR * PN ) )", "choosing": "Min( Max( ( Max( ( CS / MUM ),DS ) - ( MUC + Min( ( ( DS / ( MUM * MUR ) ) + ( RCSe + ( MUC - MUC ) ) ) ,RCSe ) ) ),RCSe ) ,( MUC + ( CS - Min( DS ,( MUR + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( DDR + AMS ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( ( MUR - ( RCSe - Min( RRSe ,CS ) ) ) + ( RMSe / MUM ) ) + Min( Max( ( MUR * CS ),RMSe ) ,( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( BR + FirstVNF_CPU_Server ) ) + Min( RRS ,Min( Const ,Min( Min( MDR ,( FirstVNF_RAM_Server * ( MRS - Const ) ) ) ,Max( CRS,MRS ) ) ) ) )", "choosing": "Max( ( ( CS / MLU ) + Min( ( Min( Max( ( ( MLU + CS ) / ( CS * RCSe ) ),MLU ) ,CS ) - ( ( MLU + RCSe ) + MUR ) ) ,MUC ) ),Max( Min( Min( RMSe ,( RCSe * Min( MUC ,DS ) ) ) ,CS ),( RMSe - MUC ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8981254465932332}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.30532402512547024}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( AMS - Max( ( ( DDR - Min( MDR ,DDR ) ) * FirstVNF_Mem ),Max( FirstVNF_Mem_Server,ACS ) ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RRSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - MUM ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6396053273337301}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( AMS - FirstVNF_CPU ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( Max( ( MUR * MLU ),MUR ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.563265306122449, "obj2": 0.41049291315695674}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - Min( Const ,RRS ) ) ,( ( ( FirstVNF_CPU_Server + DDR ) - BR ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( RRSe - ( Min( RRSe ,MUC ) - RMSe ) ) ) - MLU ),( Min( RCSe ,( ( DS + MUR ) * ( RRSe * MUM ) ) ) * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.7142857142857143, "obj2": 0.20690242937450085}, {"determining": "Min( AMS ,( ( ( ( ( DDR - ( FirstVNF_CPU_Server + ( PN - BR ) ) ) - PN ) * ARS ) - ( FirstVNF_CPU + PN ) ) - Max( FirstVNF_CPU,Const ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( ( ( ( ( MLU + ( MUM + RMSe ) ) + DS ) - ( ( CS + RCSe ) + DS ) ) / Min( MUM ,MUR ) ) / MUC ) / Min( MLU ,MLU ) ) )", "obj1": 0.8612244897959184, "obj2": 0.11979230494467584}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / ( ( ( DDR + FirstVNF_RAM_Server ) + ( ( Max( Const,MRS ) + ( ( FirstVNF_CPU - ACS ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) / Const ) ) )", "choosing": "( Max( ( MLU * DS ),CS ) + ( ( ( DS - Min( CS ,DS ) ) * RMSe ) + RCSe ) )", "obj1": 0.7081632653061225, "obj2": 0.24873492690444374}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( AMS - ( Max( FirstVNF_Mem_Server,RRS ) / FirstVNF_Mem_Server ) ) + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + MUC ) - ( CS + ( ( CS / MUC ) + CS ) ) ) + Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) )", "obj1": 0.5224489795918368, "obj2": 0.4560594530976299}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( ( AMS + FirstVNF_CPU ) ,( PN + ACS ) ) ) )", "choosing": "Max( ( CS * DS ),Min( ( MLU + ( ( CS * RRSe ) + RCSe ) ) ,RMSe ) )", "obj1": 0.4857142857142857, "obj2": 0.49074008079480436}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + ( Const - FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,MLU ) / Max( Min( MUM ,DS ),MUM ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.37755102040816324, "obj2": 0.5932174265326878}, {"determining": "( ( ( ACS * ACS ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( DDR + ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( DDR * PN ) ) ) ) * ( BR + MRS ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( ( RCSe * RMSe ) ,( Min( ( ( Min( RRSe ,MUC ) * ( MUR - MLU ) ) / CS ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) ) ) )", "obj1": 0.8142857142857143, "obj2": 0.12973745575669174}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + Const ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,MLU ) / Min( ( Max( MLU,RCSe ) / MUC ) ,MUM ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( DS / RCSe ) * Max( Max( Min( MUM ,( MUR / ( Max( MUR,MUM ) - ( MLU - MLU ) ) ) ),RMSe ),( MUC - MUC ) ) ) ,( RRSe - Min( ( MUR + RMSe ) ,CS ) ) )", "obj1": 0.7489795918367347, "obj2": 0.17231934526640247}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( BR * MDR ) - ( FirstVNF_Mem_Server + ( Max( BR,Max( ( DDR * FirstVNF_CPU ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ,Min( Max( DDR,DDR ) ,( ( CRS * FirstVNF_Mem ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MLU * RMSe ) - MLU ) / ( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - RRSe ) ) ) - ( RMSe / DS ) )", "obj1": 0.9040816326530612, "obj2": 0.044576292118664075}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + ( ( BR - FirstVNF_Mem ) / ( ( DDR / ( RRS * ARS ) ) / RRS ) ) ) ) + ( FirstVNF_RAM * ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( MLU ,( Min( MUC ,MUC ) + MUM ) ) + Min( MUC ,( ( RCSe * MUM ) - Min( DS ,CS ) ) ) ),Max( ( MUM / RCSe ),( MUC - CS ) ) )", "obj1": 0.8816326530612245, "obj2": 0.0825907327718255}, {"determining": "( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) ) * ( Const / BR ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUC ) )", "obj1": 0.2836734693877551, "obj2": 0.6953771689786736}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( ( AMS + FirstVNF_CPU ) ,( PN + ACS ) ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( MUR * MUR ) + MUC ) ) + Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.5469387755102041, "obj2": 0.4339796124865251}, {"determining": "( Max( Min( ACS ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM_Server,CRS ) ) + Max( Max( FirstVNF_CPU_Server,Const ),Min( MDR ,ARS ) ) )", "choosing": "Min( ( ( MLU + MUM ) / ( CS / MLU ) ) ,( RCSe / ( MUM + ( RMSe / MLU ) ) ) )", "obj1": 0.18979591836734694, "obj2": 0.7904241914531991}, {"determining": "( ( CRS * ( FirstVNF_RAM + ( ( BR - FirstVNF_Mem ) / ( Min( FirstVNF_RAM ,PN ) / ( MDR + FirstVNF_RAM ) ) ) ) ) + ( FirstVNF_RAM * ( ( ACS / ( FirstVNF_RAM_Server + MRS ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( Min( CS ,( RCSe / ( ( MUR - ( RCSe - Min( RRSe ,CS ) ) ) + ( RMSe / MUM ) ) ) ) / MUM ) - ( MUM / MUC ) )", "obj1": 0.8755102040816326, "obj2": 0.08800716648775651}, {"determining": "( ( ( MRS + BR ) * ( FirstVNF_Mem - Max( CRS,CRS ) ) ) / Max( FirstVNF_Mem,Min( RRS ,( ( Const * ARS ) + ( RRS * CRS ) ) ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ,DS ) ,( ( MLU * ( RRSe * CS ) ) / RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7668085800527091}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + Const ) ) * ( ( ( RRS / ( MRS - BR ) ) + BR ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUR / ( MUC + MUM ) ) ) / MUR ) ) + Max( DS,Max( RCSe,RCSe ) ) )", "obj1": 0.7571428571428571, "obj2": 0.16897798081755447}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.4448979591836735, "obj2": 0.5180893359231586}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( ( DS + MLU ) - ( CS / MUC ) ) ,( ( CS * RRSe ) + ( MUR * MUR ) ) ) / MUM ) ,( DS + MUM ) )", "obj1": 0.7959183673469388, "obj2": 0.14168448138097578}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( Max( ( ( Min( FirstVNF_CPU_Server ,PN ) + PN ) - PN ),BR ) + ACS ) ) ) )", "choosing": "( ( ( DS + Max( ( ( MUM + MUR ) * MUR ),RCSe ) ) * MUR ) + ( DS + DS ) )", "obj1": 0.5285714285714286, "obj2": 0.4416621671754919}, {"determining": "Min( Max( Min( ( MRS * CRS ) ,CRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( MLU,DS ) ,( MUM * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / Max( MLU,RCSe ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.040093828381892835}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( BR ,( ( Max( MDR,Max( AMS,FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( ( CS - ( ( RMSe - ( ( DS + MLU ) / RRSe ) ) + ( MLU + Max( MLU,( RCSe + RRSe ) ) ) ) ) ,( CS - Min( RMSe ,CS ) ) ) ),Max( ( CS - MUC ),Min( Min( RMSe ,( MUM * ( ( MUR - CS ) / Min( RRSe ,RRSe ) ) ) ) ,CS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8680115716002985}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Min( FirstVNF_CPU_Server ,MRS ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( MUC,Max( ( ( ( CS + MUM ) * MUR ) - Min( Max( ( MUR * MUM ),Min( RMSe ,RMSe ) ) ,Min( ( MUR / MUC ) ,MUR ) ) ),( MUC - RRSe ) ) ) ,Min( MUC ,MUM ) ) )", "obj1": 0.46530612244897956, "obj2": 0.51381871554563}, {"determining": "( Max( ( CRS - MRS ),FirstVNF_CPU ) * ( Const / BR ) )", "choosing": "( Min( ( ( ( MUM - DS ) - MUR ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) / ( RCSe + ( ( ( ( ( DS + MUR ) - ( Max( DS,MLU ) - ( RCSe / MUR ) ) ) / CS ) / ( RRSe + RCSe ) ) - Max( DS,( RMSe - MUM ) ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.7593079729529636}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + Min( RRS ,( DDR + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUR * ( ( MLU + MUC ) / ( RRSe + CS ) ) )", "obj1": 0.4061224489795918, "obj2": 0.5661436542797085}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.42653061224489797, "obj2": 0.5428318592174833}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * MLU ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.02995662067019194}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "( ( Max( BR,ARS ) - ( BR * AMS ) ) * ( Min( ( Max( Const,FirstVNF_Mem ) * ARS ) ,RRS ) / Max( DDR,BR ) ) )", "choosing": "( Max( ( ( MUM - DS ) - MUR ),MUR ) + Max( ( ( RCSe / RRSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8239598051837363}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( RRS - PN ) ,( Min( ( PN * ACS ) ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( Max( DS,MUC ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( DDR + AMS ) / Const ) )", "choosing": "( Max( Max( MUC,MUC ),( ( DS * MLU ) / Min( ( RMSe / MUC ) ,MUM ) ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.4387755102040816, "obj2": 0.5354327701677937}, {"determining": "Min( Min( Const ,ACS ) ,( ( ( FirstVNF_RAM * Max( CRS,CRS ) ) - Max( RRS,MRS ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( MUC,Min( MUC ,CS ) ) - RMSe ),( ( CS * Min( CS ,Min( RMSe ,( DS * ( MUM - Min( RMSe ,MUM ) ) ) ) ) ) / ( MUM - DS ) ) )", "obj1": 0.2612244897959184, "obj2": 0.7107391692616909}, {"determining": "Min( Max( Min( ( PN - ( Max( AMS,PN ) / Max( ( DDR / MDR ),FirstVNF_Mem_Server ) ) ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server + Min( ( AMS / DDR ) ,PN ) ) + Min( Const ,( FirstVNF_CPU / CRS ) ) ) + CRS ) * FirstVNF_CPU_Server ) ,Min( BR ,( ( PN / Min( DDR ,Max( ( PN / DDR ),( MRS + FirstVNF_CPU ) ) ) ) / ( CRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RMSe,MUM ) + ( DS - ( MLU - RRSe ) ) )", "obj1": 0.9612244897959183, "obj2": 0.017141212660118595}, {"determining": "( ( FirstVNF_Mem * Max( ( PN - ( Const * ( ( FirstVNF_RAM_Server + ARS ) - ( ( FirstVNF_Mem / ACS ) / Const ) ) ) ),CRS ) ) * Min( DDR ,MRS ) )", "choosing": "Min( Min( ( ( ( ( RMSe * RMSe ) * Max( ( MUR * Min( MUR ,CS ) ),DS ) ) + ( RCSe + MUM ) ) * DS ) ,CS ) ,( RCSe - Min( ( Min( ( Min( ( MUR * RRSe ) ,MUC ) / CS ) ,MUC ) * RCSe ) ,Max( ( ( RMSe / ( CS - RMSe ) ) - ( MLU / Max( RRSe,( RCSe * MUM ) ) ) ),MLU ) ) ) )", "obj1": 0.4, "obj2": 0.5787581574559135}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( ( DDR + FirstVNF_RAM ) * ( ACS * MRS ) )", "choosing": "( Max( ( MUR * RRSe ),Max( MUR,MUC ) ) * ( DS + RRSe ) )", "obj1": 0.22653061224489796, "obj2": 0.7509165061698968}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.4714285714285714, "obj2": 0.4949013502843802}, {"determining": "( ( AMS * ( FirstVNF_CPU_Server / ( FirstVNF_RAM / BR ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( Max( Max( DS,MUR ),( ( MUM - RRSe ) / CS ) ) + Max( ( Max( RRSe,RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8394065596601764}, {"determining": "( ( ( MRS + BR ) * ( FirstVNF_Mem - Max( CRS,CRS ) ) ) / Max( FirstVNF_Mem,Min( RRS ,( ( Const * Max( DDR,BR ) ) + ( FirstVNF_RAM * CRS ) ) ) ) )", "choosing": "Max( Min( Min( ( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ,DS ) ,( ( MLU * ( RRSe * CS ) ) / RMSe ) ),( Max( MUC,MUR ) * Max( DS,MUR ) ) )", "obj1": 0.23877551020408164, "obj2": 0.742621691537095}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) )", "choosing": "( ( ( MUR - ( MUM - DS ) ) * MUR ) + Min( ( MLU - CS ) ,( MUM / Max( Min( RMSe ,RRSe ),CS ) ) ) )", "obj1": 0.38571428571428573, "obj2": 0.5864420912350172}, {"determining": "( ( FirstVNF_RAM_Server - ( PN - ( AMS + BR ) ) ) * ( Const / ( DDR + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( DS * MLU ) / Min( ( RMSe / MUC ) ,MUM ) ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( Min( ( ( ( MUM - DS ) - MUR ) * ( ( MLU - CS ) - ( Max( MUM,MLU ) - CS ) ) ) ,MUM ) ,MUM ) ) )", "obj1": 0.4142857142857143, "obj2": 0.5554831475166735}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ( FirstVNF_CPU - ACS ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8933849609035494}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM + ACS ) + ACS ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - Max( CS,RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,CS ) )", "obj1": 0.16122448979591836, "obj2": 0.8254481062142297}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_CPU / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ACS - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( DS / ( Min( ( ( MLU * Max( MUM,MUR ) ) / MLU ) ,( RCSe - ( RRSe / MLU ) ) ) / RCSe ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Min( FirstVNF_CPU_Server ,MRS ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( MUC,Max( ( ( ( CS + MUM ) * MUR ) - Min( Max( ( MUR * MUM ),Min( RMSe ,RMSe ) ) ,Min( ( MUR / MUC ) ,MUR ) ) ),( MUC - RRSe ) ) ) ,Min( MUC ,MUM ) ) )", "obj1": 0.46938775510204084, "obj2": 0.503135857340767}, {"determining": "( ( FirstVNF_CPU_Server / ( ( Min( BR ,AMS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) / PN ) ) ) * Min( PN ,BR ) ) ) * ( FirstVNF_CPU - FirstVNF_CPU ) )", "choosing": "Max( ( ( MUM - DS ) / ( Min( CS ,( MUC * DS ) ) * RRSe ) ),Min( ( DS + ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - ( RMSe + DS ) ) ) ,MLU ) ) ) ,( ( RRSe / ( DS / MUC ) ) - ( MUM * Max( ( Min( ( CS / MUM ) ,MUC ) / ( Max( DS,RCSe ) - RMSe ) ),( RRSe * CS ) ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7308844164389094}, {"determining": "Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,Max( AMS,( MRS / Max( ( ARS + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + ( PN * Min( ( AMS / ARS ) ,( FirstVNF_Mem_Server - RRS ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / RMSe ),Max( RCSe,MLU ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUM + MLU ) / Min( MLU ,MUR ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "( Max( Const,( FirstVNF_CPU_Server / ( FirstVNF_RAM * MRS ) ) ) * Min( CRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUM - ( RCSe + MUM ) ) - MUR ) + MUR ) + Max( ( ( RCSe / RRSe ) - CS ),( ( MUC + DS ) / DS ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8456225286194586}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,MUC ) )", "obj1": 0.9938775510204082, "obj2": 0.0027813185285845143}, {"determining": "( ( ( ACS * Max( CRS,( ( FirstVNF_CPU_Server - ARS ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( Min( MRS ,Const ) / Max( ( FirstVNF_CPU / CRS ),Const ) ) + ACS ) ) ,( Max( ( FirstVNF_CPU_Server + DDR ),BR ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( Min( MUM ,( ( CS * DS ) * RRSe ) ) / MLU ) ,Max( ( ( CS - ( RRSe + MLU ) ) - MUM ),RMSe ) ) )", "obj1": 0.7857142857142857, "obj2": 0.14903970842639896}, {"determining": "( Min( Const ,BR ) + ( ( ( ACS * FirstVNF_CPU_Server ) - Min( BR ,( ( FirstVNF_CPU_Server / Max( ( MDR + DDR ),AMS ) ) / ACS ) ) ) / DDR ) )", "choosing": "Max( ( ( DS - MUM ) - ( CS * RRSe ) ),( MLU + Max( ( Min( MUR ,( MUC + RCSe ) ) * ( ( CS / RMSe ) * RCSe ) ),( Max( MLU,RRSe ) + Min( Min( MUC ,CS ) ,( ( ( MUR + MUC ) * Min( RCSe ,MUM ) ) / Max( DS,MUM ) ) ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.7039189304396578}, {"determining": "( ( ( FirstVNF_Mem - ( Max( DDR,Const ) - ( FirstVNF_Mem_Server / BR ) ) ) * FirstVNF_Mem ) / Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( ( DS * DS ) / Min( ( RMSe / Max( ( MUC / MLU ),RRSe ) ) ,MUM ) )", "obj1": 0.39387755102040817, "obj2": 0.5831906055687394}, {"determining": "Min( Min( Min( BR ,( Min( Min( ARS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( DDR - FirstVNF_CPU ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( ( MUC / CS ) / RRSe ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7297705964538184}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Max( ( Max( DDR,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) * FirstVNF_Mem ),ARS ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR - FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ) )", "choosing": "( DS / Max( RMSe,( RMSe / MUC ) ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8799923091842144}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / BR ) )", "choosing": "( Min( ( ( ( CS + RRSe ) * ( MLU - MUC ) ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) / Max( MUR,CS ) )", "obj1": 0.23469387755102042, "obj2": 0.748343038096867}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "Min( Min( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ) ,( ( PN - CRS ) - Const ) ) ,Min( Max( Const,MDR ) ,Max( DDR,DDR ) ) )", "choosing": "( ( ( Max( MUR,( ( MUR / ( ( MUR / CS ) * ( MUM / RMSe ) ) ) + Max( DS,MUM ) ) ) / ( MLU - ( ( RRSe * ( Max( DS,RRSe ) + DS ) ) * ( Max( MUC,MUR ) * ( MUC + MUC ) ) ) ) ) / MUR ) - ( ( ( ( DS * RMSe ) - Max( Max( RMSe,MUM ),RCSe ) ) + DS ) / MUM ) )", "obj1": 0.9469387755102041, "obj2": 0.023986538127100273}, {"determining": "( ( Const / FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( Min( BR ,( Min( PN ,ARS ) - ACS ) ) / ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( RMSe * Min( Min( ( MUC - DS ) ,Min( RCSe ,RRSe ) ) ,RCSe ) ) ) ,DS ),( CS - RCSe ) ) )", "obj1": 0.1, "obj2": 0.8817032954300777}, {"determining": "( ( Max( BR,ARS ) - ( BR * AMS ) ) * ( Min( ( Max( Const,FirstVNF_Mem ) * ARS ) ,RRS ) / Max( DDR,BR ) ) )", "choosing": "( Max( ( ( MUM - DS ) - MUR ),MUR ) + Max( ( ( RCSe / RRSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( ( MUM - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9122448979591836, "obj2": 0.04058467421779018}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem + Const ) * ( Const / BR ) ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * MLU ),MUR ) + ( MUM - MUR ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.02995662067019194}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( Min( AMS ,Min( AMS ,FirstVNF_CPU_Server ) ) + DDR ) / Const ) )", "choosing": "( Max( Max( MUC,MUC ),( ( DS * MLU ) / Min( ( RMSe / MUC ) ,MUM ) ) ) + Min( Max( ( ( CS / MUC ) + DS ),RRSe ) ,Max( Max( ( MLU / ( ( MUC * ( RMSe + MUC ) ) + MUC ) ),RCSe ),( MUM + RRSe ) ) ) )", "obj1": 0.4387755102040816, "obj2": 0.5354327701677937}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( ( FirstVNF_Mem + ( FirstVNF_CPU / ( AMS * Const ) ) ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) / Max( DDR,FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( RCSe - RCSe ) ,( MUR * MUR ) ) - Min( Min( DS ,Min( Min( ( Max( DS,RCSe ) - RRSe ) ,MUR ) ,( MUM * RRSe ) ) ) ,( MUC - RRSe ) ) ) - ( MLU * Max( MUC,Min( MUC ,( Min( RCSe ,( Min( MUR ,MUM ) * ( CS - MUR ) ) ) * Min( MUM ,RRSe ) ) ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.021938267801514085}, {"determining": "Min( Max( ( ( ( ( CRS / FirstVNF_RAM ) - RRS ) + MRS ) - Min( FirstVNF_RAM ,BR ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,( Max( ( DDR / ( DDR / FirstVNF_Mem_Server ) ),PN ) - MDR ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( Max( RCSe,DS ) + ( Min( ( RMSe + MUC ) ,Min( DS ,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / Max( CS,MUM ) ) ) ) ) / ( Max( DS,( MUM + Max( MUM,MUR ) ) ) / Max( ( MUC + Min( Min( MUR ,MUM ) ,CS ) ),( MUC - MUM ) ) ) )", "obj1": 0.9591836734693877, "obj2": 0.019382486026179487}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + Max( ( FirstVNF_CPU - ( ACS - MRS ) ),FirstVNF_Mem ) ) ) ) ) + ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) / ( MUM * ( RMSe * RMSe ) ) ) ,CS ),( MUC - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8933849609035494}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8801457984827996}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,MUC ) )", "obj1": 0.9959183673469387, "obj2": 0.001785346806189979}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.02187378103641845}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,CRS ),( ( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) ) - Max( Const,FirstVNF_CPU ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9571428571428572, "obj2": 0.021027083038023198}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( DDR,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * MLU ),MUR ) + ( MUM - ( MUR / ( MLU + Min( MUM ,MUR ) ) ) ) ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0012650504169780304}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,CRS ),( ( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) ) - Max( Const,FirstVNF_CPU ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,CRS ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUM ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9571428571428572, "obj2": 0.021027083038023198}, {"determining": "( ( ( ( RRS + MDR ) * ( Max( Max( Min( ( RRS + FirstVNF_CPU_Server ) ,( FirstVNF_RAM / DDR ) ),( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / FirstVNF_Mem ) ) - PN ) / ( Min( Min( Min( MDR ,ARS ) ,( RRS + PN ) ) ,Max( ACS,ACS ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( Min( ( RCSe + MUM ) ,RRSe ) / MLU ) * MLU ) - ( ( DS / MUC ) / MUM ) ) ,Min( DS ,DS ) )", "obj1": 0.9979591836734694, "obj2": 0.0012650504169780304}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( DDR + ( ( FirstVNF_Mem_Server * ( PN + BR ) ) * CRS ) ) + ( RRS + MRS ) ) )", "choosing": "( ( ( MUR - ( Min( RRSe ,CS ) - MUM ) ) + ( ( MLU + ( MLU / DS ) ) / MUM ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - ( FirstVNF_RAM * ACS ) ) ,( MRS - DDR ) )", "choosing": "( ( RMSe - DS ) / ( DS / Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( Max( MRS,RRS ) ,( Const + Const ) ) ) - ( BR * CRS ) )", "choosing": "( ( ( RCSe / ( ( MLU + Min( RMSe ,( RCSe - RRSe ) ) ) + ( ( ( MLU - DS ) + ( MLU - RMSe ) ) * Max( CS,DS ) ) ) ) * MLU ) / Min( MUM ,( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ARS ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR - MUM ) / ( ( MUC - DS ) / Max( CS,MUC ) ) ) - ( ( ( CS - RRSe ) / ( RCSe + DS ) ) / Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( Min( ( Max( ( DDR + FirstVNF_CPU_Server ),RRS ) + ARS ) ,( BR * ACS ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( ( Max( Min( MUM ,( RRSe + MLU ) ),MUM ) - Max( ( ( RMSe - MLU ) + Max( DS,( ( RMSe - CS ) - MUC ) ) ),( RCSe - RRSe ) ) ) * DS ) / ( MUR * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MDR ,( ( ACS - FirstVNF_RAM_Server ) - ( Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) / CRS ),( CRS / ACS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR - MUM ) / ( ( ( DS - ( MUR + ( MLU * RMSe ) ) ) + MLU ) / ( CS / MUC ) ) ) - ( ( ( MUM - RRSe ) / ( RCSe + DS ) ) / ( ( MLU / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ARS ) ,( ACS + ( FirstVNF_CPU_Server - ( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR - CS ) - ( MLU / ( RMSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( DDR + AMS ) / ( RRS + MRS ) ) )", "choosing": "( ( ( MUR - ( RCSe - Min( RRSe ,CS ) ) ) + ( RMSe / MUM ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,PN ) ,( ( Min( BR ,( ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) * ( CRS * MRS ) ) / Max( Const,AMS ) ) / Min( MDR ,( ( FirstVNF_CPU - MRS ) - Max( MDR,FirstVNF_Mem ) ) ) ) ) - ( FirstVNF_RAM * ACS ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( Min( MUC ,RRSe ) - RMSe ),( ( MUM - DS ) / ( CS * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - ACS ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) / ( ( BR / MRS ) * ( FirstVNF_CPU_Server - MDR ) ) ) * ( ( ( BR * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU ) ) * Max( CRS,AMS ) ) )", "choosing": "( ( ( MUR - MUM ) / ( ( ( DS - ( MUR + ( MLU * RMSe ) ) ) + MLU ) / ( CS / MUC ) ) ) - ( ( ( MUM - RRSe ) / ( RCSe + DS ) ) / ( ( MLU / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - ACS ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) / ( ( BR / MRS ) * ( FirstVNF_CPU_Server - MDR ) ) ) * ( ( ( BR * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU ) ) * Max( CRS,AMS ) ) )", "choosing": "Min( ( ( DS / RCSe ) * Max( Max( Min( MUM ,( MUR / ( Max( MUR,MUM ) - ( MLU - MLU ) ) ) ),RMSe ),( MUC - MUC ) ) ) ,( RRSe - Min( ( MUR + RMSe ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,PN ) ,( ( Min( BR ,( ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) * ( CRS * MRS ) ) / Max( Const,AMS ) ) / Min( MDR ,( ( FirstVNF_CPU - MRS ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) ) ) - ( FirstVNF_RAM * ACS ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( Min( MUC ,Min( MUM ,( MUR / ( Max( MUR,MUM ) - ( MLU - MLU ) ) ) ) ) - RMSe ),( ( MUM - DS ) / ( CS * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS - FirstVNF_RAM_Server ) - ( Max( ( Max( FirstVNF_Mem,( BR + Min( BR ,Const ) ) ) / CRS ),( CRS / ACS ) ) * FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_CPU_Server * BR ) / Min( MDR ,FirstVNF_CPU ) ) * Max( CRS,AMS ) ) )", "choosing": "Min( ( ( DS / RCSe ) * Max( Max( RMSe,Min( MUM ,( MUR / ( ( MUR / MUM ) - ( MLU - MLU ) ) ) ) ),( ( CS / MUC ) - MUC ) ) ) ,( RRSe - ( ( RMSe + MUC ) - ( MUC - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,BR ) + ( ( RRS * MDR ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( ( ( RMSe * Min( Max( ( MLU * RCSe ),( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) + DS ) ,Max( ( ( ( DS + Min( MUM ,( MLU - DS ) ) ) - ( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + ( MLU * RRSe ) ) ) ) * MUC ),RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( CRS - FirstVNF_CPU ) * ( ( DDR + AMS ) / ( RRS + MRS ) ) )", "choosing": "( ( ( MUR - ( RCSe - Min( RRSe ,CS ) ) ) + ( RMSe / MUM ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( Min( ( ( CRS * ( BR - ( FirstVNF_RAM_Server + BR ) ) ) + DDR ) ,FirstVNF_CPU_Server ) * ( Min( Max( DDR,ARS ) ,Const ) / FirstVNF_Mem ) ) ) / ( DDR * PN ) )", "choosing": "Min( Max( ( Max( ( CS / MUM ),DS ) - ( MUC + Min( ( ( DS / ( MUM * MUR ) ) + ( RCSe + ( MUC - MUC ) ) ) ,RCSe ) ) ),RCSe ) ,( MUC + ( CS - Min( DS ,( MUR + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( BR + FirstVNF_CPU_Server ) ) + Min( RRS ,Min( Const ,Min( Min( MDR ,( FirstVNF_RAM_Server * ( MRS - Const ) ) ) ,Max( CRS,MRS ) ) ) ) )", "choosing": "Max( ( ( CS / MLU ) + Min( ( Min( Max( ( ( MLU + CS ) / ( CS * RCSe ) ),MLU ) ,CS ) - ( ( MLU + RCSe ) + MUR ) ) ,MUC ) ),Max( Min( Min( RMSe ,( RCSe * Min( MUC ,DS ) ) ) ,CS ),( RMSe - MUC ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8981254465932332}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.30532402512547024}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( AMS - Max( ( ( DDR - Min( MDR ,DDR ) ) * FirstVNF_Mem ),Max( FirstVNF_Mem_Server,ACS ) ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RRSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - MUM ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6396053273337301}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - Min( Const ,RRS ) ) ,( ( ( FirstVNF_CPU_Server + DDR ) - BR ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( RRSe - ( Min( RRSe ,MUC ) - RMSe ) ) ) - MLU ),( Min( RCSe ,( ( DS + MUR ) * ( RRSe * MUM ) ) ) * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.7142857142857143, "obj2": 0.20690242937450085}, {"determining": "Min( AMS ,( ( ( ( ( DDR - ( FirstVNF_CPU_Server + ( PN - BR ) ) ) - PN ) * ARS ) - ( FirstVNF_CPU + PN ) ) - Max( FirstVNF_CPU,Const ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( ( ( ( ( MLU + ( MUM + RMSe ) ) + DS ) - ( ( CS + RCSe ) + DS ) ) / Min( MUM ,MUR ) ) / MUC ) / Min( MLU ,MLU ) ) )", "obj1": 0.8612244897959184, "obj2": 0.11979230494467584}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.37755102040816324, "obj2": 0.5932174265326878}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / ( ( ( DDR + FirstVNF_RAM_Server ) + ( ( Max( Const,MRS ) + ( ( FirstVNF_CPU - ACS ) / FirstVNF_Mem ) ) - FirstVNF_CPU ) ) / Const ) ) )", "choosing": "( Max( ( MLU * DS ),CS ) + ( ( ( DS - Min( CS ,DS ) ) * RMSe ) + RCSe ) )", "obj1": 0.7081632653061225, "obj2": 0.24873492690444374}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( AMS - FirstVNF_CPU ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( Max( ( MUR * MLU ),MUR ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.563265306122449, "obj2": 0.41049291315695674}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + ( Const - FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,MLU ) / Max( Min( MUM ,DS ),MUM ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "( ( ( ACS * ACS ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( DDR + ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( DDR * PN ) ) ) ) * ( BR + MRS ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( ( RCSe * RMSe ) ,( Min( ( ( Min( RRSe ,MUC ) * ( MUR - MLU ) ) / CS ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) ) ) )", "obj1": 0.8142857142857143, "obj2": 0.12973745575669174}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) + ( Const + DDR ) )", "choosing": "( Min( ( ( MUM * RRSe ) / MUC ) ,MUM ) / ( ( MUM - Max( ( MUR + MUC ),( Max( MUM,MLU ) / ( ( Max( MUR,RMSe ) * Min( MUM ,DS ) ) + ( Max( DS,CS ) - MUC ) ) ) ) ) + ( MUR + MUR ) ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( AMS - ( Max( FirstVNF_Mem_Server,RRS ) / FirstVNF_Mem_Server ) ) + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + MUC ) - ( CS + ( ( CS / MUC ) + CS ) ) ) + Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) )", "obj1": 0.5224489795918368, "obj2": 0.4560594530976299}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( DS / RCSe ) * Max( Max( Min( MUM ,( MUR / ( Max( MUR,MUM ) - ( MLU - MLU ) ) ) ),RMSe ),( MUC - MUC ) ) ) ,( RRSe - Min( ( MUR + RMSe ) ,CS ) ) )", "obj1": 0.7489795918367347, "obj2": 0.17231934526640247}, {"determining": "( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) ) * ( Const / BR ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUC ) )", "obj1": 0.2836734693877551, "obj2": 0.6953771689786736}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + ( ( BR - FirstVNF_Mem ) / ( ( DDR / ( RRS * ARS ) ) / RRS ) ) ) ) + ( FirstVNF_RAM * ( ARS + FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( MLU ,( Min( MUC ,MUC ) + MUM ) ) + Min( MUC ,( ( RCSe * MUM ) - Min( DS ,CS ) ) ) ),Max( ( MUM / RCSe ),( MUC - CS ) ) )", "obj1": 0.8816326530612245, "obj2": 0.0825907327718255}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),( ACS - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) / Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) ) ,Max( ( CRS + DDR ),Const ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( RCSe - MLU ) ) - Min( ( MUR / MUC ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * ( MUR - ( RRSe + ( ( RMSe / MUC ) / ( ( MUR + RMSe ) * ( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.9, "obj2": 0.04742435034615194}, {"determining": "( ( CRS * ( FirstVNF_RAM + ( ( BR - FirstVNF_Mem ) / ( Min( FirstVNF_RAM ,PN ) / ( MDR + FirstVNF_RAM ) ) ) ) ) + ( FirstVNF_RAM * ( ( ACS / ( FirstVNF_RAM_Server + MRS ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( Min( CS ,( RCSe / ( ( MUR - ( RCSe - Min( RRSe ,CS ) ) ) + ( RMSe / MUM ) ) ) ) / MUM ) - ( MUM / MUC ) )", "obj1": 0.8755102040816326, "obj2": 0.08800716648775651}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( AMS - ( Max( FirstVNF_Mem_Server,RRS ) / FirstVNF_Mem_Server ) ) + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + MUC ) - ( CS + ( ( CS / MUC ) + CS ) ) ) + Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) )", "obj1": 0.4775510204081633, "obj2": 0.48337363117441823}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + Const ) ) * ( ( ( RRS / ( MRS - BR ) ) + BR ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUR / ( MUC + MUM ) ) ) / MUR ) ) + Max( DS,Max( RCSe,RCSe ) ) )", "obj1": 0.7571428571428571, "obj2": 0.16897798081755447}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( ( AMS + FirstVNF_CPU ) ,( PN + ACS ) ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( MUR * MUR ) + MUC ) ) + Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.5469387755102041, "obj2": 0.4339796124865251}, {"determining": "( ( ( MRS + BR ) * ( FirstVNF_Mem - Max( CRS,CRS ) ) ) / Max( FirstVNF_Mem,Min( RRS ,( ( Const * ARS ) + ( RRS * CRS ) ) ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ,DS ) ,( ( MLU * ( RRSe * CS ) ) / RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7668085800527091}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.4448979591836735, "obj2": 0.5180893359231586}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( ( DS + MLU ) - ( CS / MUC ) ) ,( ( CS * RRSe ) + ( MUR * MUR ) ) ) / MUM ) ,( DS + MUM ) )", "obj1": 0.7959183673469388, "obj2": 0.14168448138097578}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( AMS - FirstVNF_CPU ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( Max( ( MUR * MLU ),MUR ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.5551020408163265, "obj2": 0.4173847601307007}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( FirstVNF_CPU_Server / BR ) / BR ) ) )", "choosing": "( Max( ( Min( Min( RRSe ,MUR ) ,( ( MUR / ( MUC + RRSe ) ) / Max( DS,( CS + RRSe ) ) ) ) - CS ),( MUM / DS ) ) + CS )", "obj1": 0.12653061224489795, "obj2": 0.8589673024473602}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Min( FirstVNF_CPU_Server ,MRS ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( MUC,Max( ( ( ( CS + MUM ) * MUR ) - Min( Max( ( MUR * MUM ),Min( RMSe ,RMSe ) ) ,Min( ( MUR / MUC ) ,MUR ) ) ),( MUC - RRSe ) ) ) ,Min( MUC ,MUM ) ) )", "obj1": 0.46530612244897956, "obj2": 0.51381871554563}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.9346938775510204, "obj2": 0.03205220282591535}, {"determining": "( Max( DDR,BR ) * ( ( RRS + MDR ) * ( Max( Max( DDR,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( ( MUM - DS ) - MUR ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) / Max( ( MUM - ( MUR / ( MLU + Min( MUM ,MUR ) ) ) ),CS ) )", "obj1": 0.19387755102040816, "obj2": 0.785839948698466}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + Min( RRS ,( DDR + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUR * ( ( MLU + MUC ) / ( RRSe + CS ) ) )", "obj1": 0.4061224489795918, "obj2": 0.5661436542797085}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( Max( ( ( Min( FirstVNF_CPU_Server ,PN ) + PN ) - PN ),BR ) + ACS ) ) ) )", "choosing": "( ( ( DS + Max( ( ( MUM + MUR ) * MUR ),RCSe ) ) * MUR ) + ( DS + DS ) )", "obj1": 0.5285714285714286, "obj2": 0.4416621671754919}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.42653061224489797, "obj2": 0.5428318592174833}, {"determining": "( Max( Const,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) * ( ARS + Min( ( PN + ( FirstVNF_CPU_Server - CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RMSe - Min( MUC ,RRSe ) ),( MUC - RMSe ) )", "obj1": 0.38571428571428573, "obj2": 0.578842040318999}, {"determining": "( Max( ( CRS - MRS ),FirstVNF_CPU ) * ( Const / BR ) )", "choosing": "( Min( ( ( ( MUM - DS ) - MUR ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) / ( RCSe + ( ( ( ( ( DS + MUR ) - ( Max( DS,MLU ) - ( RCSe / MUR ) ) ) / CS ) / ( RRSe + RCSe ) ) - Max( DS,( RMSe - MUM ) ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.7593079729529636}, {"determining": "( Max( Min( ACS ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM_Server,CRS ) ) + Max( Max( FirstVNF_CPU_Server,Const ),Min( MDR ,ARS ) ) )", "choosing": "Min( ( ( MLU + MUM ) / ( CS / MLU ) ) ,( RCSe / ( MUM + ( RMSe / MLU ) ) ) )", "obj1": 0.18979591836734694, "obj2": 0.7904241914531991}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( AMS - ( Max( FirstVNF_Mem_Server,RRS ) / FirstVNF_Mem_Server ) ) + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + MUC ) - ( CS + ( ( CS / MUC ) + CS ) ) ) + Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) )", "obj1": 0.4775510204081633, "obj2": 0.48337363117441823}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( FirstVNF_Mem * Max( ( PN - ( Const * ( ( FirstVNF_RAM_Server + ARS ) - ( ( FirstVNF_Mem / ACS ) / Const ) ) ) ),CRS ) ) * Min( DDR ,MRS ) )", "choosing": "Min( Min( ( ( ( ( RMSe * RMSe ) * Max( ( MUR * Min( MUR ,CS ) ),DS ) ) + ( RCSe + MUM ) ) * DS ) ,CS ) ,( RCSe - Min( ( Min( ( Min( ( MUR * RRSe ) ,MUC ) / CS ) ,MUC ) * RCSe ) ,Max( ( ( RMSe / ( CS - RMSe ) ) - ( MLU / Max( RRSe,( RCSe * MUM ) ) ) ),MLU ) ) ) )", "obj1": 0.4, "obj2": 0.5787581574559135}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM + ACS ) + ACS ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - Max( CS,RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,CS ) )", "obj1": 0.16122448979591836, "obj2": 0.8254481062142297}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ARS / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8845312571319146}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "Min( Max( Min( ( MRS * CRS ) ,CRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( MLU,DS ) ,( MUM * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / Max( MLU,RCSe ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.040093828381892835}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / ( Min( MDR ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8168286216329899}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( RRS - PN ) ,( Min( ( PN * ACS ) ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( Max( DS,MUC ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( DDR + AMS ) / Const ) )", "choosing": "( Max( Max( MUC,MUC ),( ( DS * MLU ) / Min( ( RMSe / MUC ) ,MUM ) ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.4387755102040816, "obj2": 0.5354327701677937}, {"determining": "Min( Min( Const ,ACS ) ,( ( ( FirstVNF_RAM * Max( CRS,CRS ) ) - Max( RRS,MRS ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( MUC,Min( MUC ,CS ) ) - RMSe ),( ( CS * Min( CS ,Min( RMSe ,( DS * ( MUM - Min( RMSe ,MUM ) ) ) ) ) ) / ( MUM - DS ) ) )", "obj1": 0.2612244897959184, "obj2": 0.7107391692616909}, {"determining": "Min( Max( Min( ( PN - ( Max( AMS,PN ) / Max( ( DDR / MDR ),FirstVNF_Mem_Server ) ) ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server + Min( ( AMS / DDR ) ,PN ) ) + Min( Const ,( FirstVNF_CPU / CRS ) ) ) + CRS ) * FirstVNF_CPU_Server ) ,Min( BR ,( ( PN / Min( DDR ,Max( ( PN / DDR ),( MRS + FirstVNF_CPU ) ) ) ) / ( CRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RMSe,MUM ) + ( DS - ( MLU - RRSe ) ) )", "obj1": 0.9612244897959183, "obj2": 0.017141212660118595}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( ( AMS * ( FirstVNF_CPU_Server / ( FirstVNF_RAM / BR ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( Max( Max( DS,MUR ),( ( MUM - RRSe ) / CS ) ) + Max( ( Max( RRSe,RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8394065596601764}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.4714285714285714, "obj2": 0.4949013502843802}, {"determining": "( ( FirstVNF_RAM_Server - ( PN - ( AMS + BR ) ) ) * ( Const / ( DDR + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( DS * MLU ) / Min( ( RMSe / MUC ) ,MUM ) ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( Min( ( ( ( MUM - DS ) - MUR ) * ( ( MLU - CS ) - ( Max( MUM,MLU ) - CS ) ) ) ,MUM ) ,MUM ) ) )", "obj1": 0.4142857142857143, "obj2": 0.5554831475166735}, {"determining": "( ( ( MRS + BR ) * ( FirstVNF_Mem - Max( CRS,CRS ) ) ) / Max( FirstVNF_Mem,Min( RRS ,( ( Const * Max( DDR,BR ) ) + ( FirstVNF_RAM * CRS ) ) ) ) )", "choosing": "Max( Min( Min( ( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ,DS ) ,( ( MLU * ( RRSe * CS ) ) / RMSe ) ),( Max( MUC,MUR ) * Max( DS,MUR ) ) )", "obj1": 0.23877551020408164, "obj2": 0.742621691537095}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Min( FirstVNF_CPU_Server ,MRS ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( MUC,Max( ( ( ( CS + MUM ) * MUR ) - Min( Max( ( MUR * MUM ),Min( RMSe ,RMSe ) ) ,Min( ( MUR / MUC ) ,MUR ) ) ),( MUC - RRSe ) ) ) ,Min( MUC ,MUM ) ) )", "obj1": 0.46938775510204084, "obj2": 0.503135857340767}, {"determining": "( ( FirstVNF_CPU_Server / ( ( Min( BR ,AMS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) / PN ) ) ) * Min( PN ,BR ) ) ) * ( FirstVNF_CPU - FirstVNF_CPU ) )", "choosing": "Max( ( ( MUM - DS ) / ( Min( CS ,( MUC * DS ) ) * RRSe ) ),Min( ( DS + ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - ( RMSe + DS ) ) ) ,MLU ) ) ) ,( ( RRSe / ( DS / MUC ) ) - ( MUM * Max( ( Min( ( CS / MUM ) ,MUC ) / ( Max( DS,RCSe ) - RMSe ) ),( RRSe * CS ) ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7308844164389094}, {"determining": "( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUM + MLU ) / Min( MLU ,MUR ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "( Max( Const,( FirstVNF_CPU_Server / ( FirstVNF_RAM * MRS ) ) ) * Min( CRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUM - ( RCSe + MUM ) ) - MUR ) + MUR ) + Max( ( ( RCSe / RRSe ) - CS ),( ( MUC + DS ) / DS ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8456225286194586}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_CPU / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ACS - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( DS / ( Min( ( ( MLU * Max( MUM,MUR ) ) / MLU ) ,( RCSe - ( RRSe / MLU ) ) ) / RCSe ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,Max( AMS,( MRS / Max( ( ARS + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + ( PN * Min( ( AMS / ARS ) ,( FirstVNF_Mem_Server - RRS ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / RMSe ),Max( RCSe,MLU ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "( ( ( ACS * Max( CRS,( ( FirstVNF_CPU_Server - ARS ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( Min( MRS ,Const ) / Max( ( FirstVNF_CPU / CRS ),Const ) ) + ACS ) ) ,( Max( ( FirstVNF_CPU_Server + DDR ),BR ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( Min( MUM ,( ( CS * DS ) * RRSe ) ) / MLU ) ,Max( ( ( CS - ( RRSe + MLU ) ) - MUM ),RMSe ) ) )", "obj1": 0.7857142857142857, "obj2": 0.14903970842639896}, {"determining": "( ( FirstVNF_Mem * FirstVNF_Mem ) * ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( DS,( Min( ( MUR * ( ( ( RCSe * MUR ) / RCSe ) + ( Max( CS,DS ) / MUR ) ) ) ,( RMSe - RMSe ) ) * RMSe ) ) / Min( MUR ,CS ) )", "obj1": 0.27346938775510204, "obj2": 0.6996506569663841}, {"determining": "Min( Min( Min( BR ,( Min( Min( ARS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( DDR - FirstVNF_CPU ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( ( MUC / CS ) / RRSe ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7297705964538184}, {"determining": "( ( PN - ( Const / PN ) ) / ( Max( PN,CRS ) / Const ) )", "choosing": "Max( ( ( MLU / ( Min( MUC ,MUC ) + MUM ) ) + Min( MUC ,( ( RCSe * MUM ) - Max( CS,DS ) ) ) ),( MUC * ( MUM + CS ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0044484040353523395}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8799923091842144}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) )", "choosing": "( Max( Max( MUC,MUC ),( ( MUR * MUR ) + MUC ) ) + Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) - MUC ) ) )", "obj1": 0.5244897959183673, "obj2": 0.4490531893406886}, {"determining": "Min( Min( Min( BR ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7461940789289293}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Max( ( Max( DDR,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) * FirstVNF_Mem ),ARS ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR - FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ) )", "choosing": "( DS / Max( RMSe,( RMSe / MUC ) ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( BR * MDR ) - ( FirstVNF_Mem_Server + ( Max( BR,Max( ( DDR * FirstVNF_CPU ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ,Min( Max( DDR,DDR ) ,( ( CRS * FirstVNF_Mem ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MLU * RMSe ) - MLU ) / ( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - RRSe ) ) ) - ( RMSe / DS ) )", "obj1": 0.9040816326530612, "obj2": 0.044576292118664075}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUC ) ) * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7512852708525964}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "( ( Max( BR,ARS ) - ( BR * AMS ) ) * ( Min( ( Max( Const,FirstVNF_Mem ) * ARS ) ,RRS ) / Max( DDR,BR ) ) )", "choosing": "( Max( ( ( MUM - DS ) - MUR ),MUR ) + Max( ( ( RCSe / RRSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "( ( DDR + FirstVNF_RAM ) * ( ACS * MRS ) )", "choosing": "( Max( ( MUR * RRSe ),Max( MUR,MUC ) ) * ( DS + RRSe ) )", "obj1": 0.22653061224489796, "obj2": 0.7509165061698968}, {"determining": "Min( Min( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ) ,( ( PN - CRS ) - Const ) ) ,Min( Max( Const,MDR ) ,Max( DDR,DDR ) ) )", "choosing": "( ( ( Max( MUR,( ( MUR / ( ( MUR / CS ) * ( MUM / RMSe ) ) ) + Max( DS,MUM ) ) ) / ( MLU - ( ( RRSe * ( Max( DS,RRSe ) + DS ) ) * ( Max( MUC,MUR ) * ( MUC + MUC ) ) ) ) ) / MUR ) - ( ( ( ( DS * RMSe ) - Max( Max( RMSe,MUM ),RCSe ) ) + DS ) / MUM ) )", "obj1": 0.9469387755102041, "obj2": 0.023986538127100273}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( Min( AMS ,Min( AMS ,FirstVNF_CPU_Server ) ) + DDR ) / Const ) )", "choosing": "( Max( Max( MUC,MUC ),( ( DS * MLU ) / Min( ( RMSe / MUC ) ,MUM ) ) ) + Min( Max( ( ( CS / MUC ) + DS ),RRSe ) ,Max( Max( ( MLU / ( ( MUC * ( RMSe + MUC ) ) + MUC ) ),RCSe ),( MUM + RRSe ) ) ) )", "obj1": 0.4387755102040816, "obj2": 0.5354327701677937}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( ( FirstVNF_Mem + ( FirstVNF_CPU / ( AMS * Const ) ) ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) / Max( DDR,FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( RCSe - RCSe ) ,( MUR * MUR ) ) - Min( Min( DS ,Min( Min( ( Max( DS,RCSe ) - RRSe ) ,MUR ) ,( MUM * RRSe ) ) ) ,( MUC - RRSe ) ) ) - ( MLU * Max( MUC,Min( MUC ,( Min( RCSe ,( Min( MUR ,MUM ) * ( CS - MUR ) ) ) * Min( MUM ,RRSe ) ) ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.021938267801514085}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( CS ,( RCSe / Min( Min( MUC ,CS ) ,MUM ) ) ) / MUR ) - ( MUC / MUM ) )", "obj1": 0.9448979591836735, "obj2": 0.02854180898678828}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * MLU ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.02995662067019194}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( ( MUM - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9122448979591836, "obj2": 0.04058467421779018}, {"determining": "( ( Const / FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( Min( BR ,( Min( PN ,ARS ) - ACS ) ) / ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( RMSe * Min( Min( ( MUC - DS ) ,Min( RCSe ,RRSe ) ) ,RCSe ) ) ) ,DS ),( CS - RCSe ) ) )", "obj1": 0.1, "obj2": 0.8817032954300777}, {"determining": "Min( Max( ( ( ( ( CRS / FirstVNF_RAM ) - RRS ) + MRS ) - Min( FirstVNF_RAM ,BR ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,( Max( ( DDR / ( DDR / FirstVNF_Mem_Server ) ),PN ) - MDR ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( Max( RCSe,DS ) + ( Min( ( RMSe + MUC ) ,Min( DS ,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / Max( CS,MUM ) ) ) ) ) / ( Max( DS,( MUM + Max( MUM,MUR ) ) ) / Max( ( MUC + Min( Min( MUR ,MUM ) ,CS ) ),( MUC - MUM ) ) ) )", "obj1": 0.9591836734693877, "obj2": 0.019382486026179487}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,MUC ) )", "obj1": 0.9938775510204082, "obj2": 0.0027813185285845143}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,Max( Max( ( ARS * FirstVNF_RAM_Server ),( ARS / MDR ) ),( ( ( ( FirstVNF_RAM_Server / MRS ) + ( MDR / MRS ) ) / DDR ) + AMS ) ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( ( MUM - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9122448979591836, "obj2": 0.04058467421779018}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8801457984827996}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,MUC ) )", "obj1": 0.9959183673469387, "obj2": 0.001785346806189979}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.02187378103641845}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) / ( Min( PN ,FirstVNF_CPU ) / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( ( DS + MUC ) * MLU ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.02995662067019194}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,CRS ),( ( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) ) - Max( Const,FirstVNF_CPU ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9571428571428572, "obj2": 0.021027083038023198}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( DDR,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * MLU ),MUR ) + ( MUM - ( MUR / ( MLU + Min( MUM ,MUR ) ) ) ) ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0012650504169780304}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,AMS ),( ( ACS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,PN ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( CS - Min( DS ,CS ) ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( ( DS * MUM ) / ( ( RCSe * MUM ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / ( Min( ( MUR / MLU ) ,MUC ) * ( CS + RMSe ) ) ) )", "obj1": 0.9571428571428572, "obj2": 0.021027083038023198}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( DDR,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * MLU ),MUR ) + ( MUM - ( MUR / ( MLU + Min( MUM ,MUR ) ) ) ) ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0012650504169780304}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( DDR + AMS ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( ( MUR - ( RCSe - Min( RRSe ,CS ) ) ) + ( RMSe / MUM ) ) + Min( Max( ( MUR * CS ),RMSe ) ,( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( DDR + ( ( FirstVNF_Mem_Server * ( PN + BR ) ) * CRS ) ) + ( RRS + MRS ) ) )", "choosing": "( ( ( MUR - ( Min( RRSe ,CS ) - MUM ) ) + ( ( MLU + ( MLU / DS ) ) / MUM ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - ( FirstVNF_RAM * ACS ) ) ,( MRS - DDR ) )", "choosing": "( ( RMSe - DS ) / ( DS / Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( Max( MRS,RRS ) ,( Const + Const ) ) ) - ( BR * CRS ) )", "choosing": "( ( ( RCSe / ( ( MLU + Min( RMSe ,( RCSe - RRSe ) ) ) + ( ( ( MLU - DS ) + ( MLU - RMSe ) ) * Max( CS,DS ) ) ) ) * MLU ) / Min( MUM ,( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ARS ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR - MUM ) / ( ( MUC - DS ) / Max( CS,MUC ) ) ) - ( ( ( CS - RRSe ) / ( RCSe + DS ) ) / Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM ) - ( Min( ( Max( ( DDR + FirstVNF_CPU_Server ),RRS ) + ARS ) ,( BR * ACS ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( ( Max( Min( MUM ,( RRSe + MLU ) ),MUM ) - Max( ( ( RMSe - MLU ) + Max( DS,( ( RMSe - CS ) - MUC ) ) ),( RCSe - RRSe ) ) ) * DS ) / ( MUR * MUM ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( CS ,( RCSe / DS ) ) / MUR ) - ( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( DDR + AMS ) / ( RRS + MRS ) ) )", "choosing": "( ( ( MUR - ( RCSe - Min( RRSe ,CS ) ) ) + ( RMSe / MUM ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( BR + FirstVNF_CPU_Server ) ) + Min( RRS ,Min( Const ,Min( Min( MDR ,( FirstVNF_RAM_Server * ( MRS - Const ) ) ) ,Max( CRS,MRS ) ) ) ) )", "choosing": "Max( ( ( CS / MLU ) + Min( ( Min( Max( ( ( MLU + CS ) / ( CS * RCSe ) ),MLU ) ,CS ) - ( ( MLU + RCSe ) + MUR ) ) ,MUC ) ),Max( Min( Min( RMSe ,( RCSe * Min( MUC ,DS ) ) ) ,CS ),( RMSe - MUC ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8981254465932332}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.30532402512547024}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * Min( BR ,FirstVNF_CPU_Server ) ),ARS ) ) / Max( CRS,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - ( ( MUR * DS ) - ( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUC * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5306122448979592, "obj2": 0.37219404487375884}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( AMS - Max( ( ( DDR - Min( MDR ,DDR ) ) * FirstVNF_Mem ),Max( FirstVNF_Mem_Server,ACS ) ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RRSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - MUM ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6396053273337301}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + ( Const - FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,MLU ) / Max( Min( MUM ,DS ),MUM ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.37755102040816324, "obj2": 0.5932174265326878}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - ( ( MDR / FirstVNF_RAM_Server ) + ACS ) ) + ( ( FirstVNF_RAM / Min( PN ,FirstVNF_Mem ) ) * CRS ) )", "choosing": "( ( ( MUM / MUR ) * RMSe ) / ( ( ( Min( RRSe ,( CS * RMSe ) ) * ( ( MUR - Min( Max( RMSe,MLU ) ,Max( MUC,MLU ) ) ) + DS ) ) + ( MUM + MUC ) ) + RMSe ) )", "obj1": 0.6714285714285714, "obj2": 0.2381269419807639}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( Max( ( ( Min( FirstVNF_CPU_Server ,PN ) + PN ) - PN ),BR ) + ACS ) ) ) )", "choosing": "( ( ( DS + Max( ( ( MUM + MUR ) * MUR ),RCSe ) ) * MUR ) + ( DS + DS ) )", "obj1": 0.5285714285714286, "obj2": 0.4416621671754919}, {"determining": "Min( AMS ,( ( ( ( ( DDR - ( FirstVNF_CPU_Server + ( PN - BR ) ) ) - PN ) * ARS ) - ( FirstVNF_CPU + PN ) ) - Max( FirstVNF_CPU,Const ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( ( ( ( ( MLU + ( MUM + RMSe ) ) + DS ) - ( ( CS + RCSe ) + DS ) ) / Min( MUM ,MUR ) ) / MUC ) / Min( MLU ,MLU ) ) )", "obj1": 0.8612244897959184, "obj2": 0.11979230494467584}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) / ( MRS / Const ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.5163265306122449, "obj2": 0.4718026847495687}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * ( ( FirstVNF_Mem + Const ) * ( Const / BR ) ) ) )", "choosing": "( ( Max( ( ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) - MLU ),( Max( ( ( RCSe / RRSe ) - CS ),( MUM / DS ) ) * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.7224489795918367, "obj2": 0.19784561765034173}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7428571428571429, "obj2": 0.1664925546105228}, {"determining": "( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) ) * ( Const / BR ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUC ) )", "obj1": 0.2836734693877551, "obj2": 0.6953771689786736}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),( ACS - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) / Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) ) ,Max( ( CRS + DDR ),Const ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( RCSe - MLU ) ) - Min( ( MUR / MUC ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * ( MUR - ( RRSe + ( ( RMSe / MUC ) / ( ( MUR + RMSe ) * ( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.9, "obj2": 0.04742435034615194}, {"determining": "( ( ( Min( AMS ,FirstVNF_CPU ) / CRS ) - ( ( Max( ARS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) / ( RRS - ( ( Max( MDR,FirstVNF_Mem ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) + Const ) ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( ( CS * RCSe ) - MUC ) ,( RMSe + ( Max( ( MUM * MUR ),MUR ) + ( MUM - ( MUR / ( ( ( MLU + CS ) / ( MUM - CS ) ) + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7510204081632653, "obj2": 0.16179770633327145}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) + ( Const + DDR ) )", "choosing": "( Min( ( ( MUM * RRSe ) / MUC ) ,MUM ) / ( ( MUM - Max( ( MUR + MUC ),( Max( MUM,MLU ) / ( ( Max( MUR,RMSe ) * Min( MUM ,DS ) ) + ( Max( DS,CS ) - MUC ) ) ) ) ) + ( MUR + MUR ) ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( AMS - ( Max( FirstVNF_Mem_Server,RRS ) / FirstVNF_Mem_Server ) ) + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + MUC ) - ( CS + ( ( CS / MUC ) + CS ) ) ) + Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) )", "obj1": 0.4775510204081633, "obj2": 0.48337363117441823}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.4448979591836735, "obj2": 0.5180893359231586}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( ( DS + MLU ) - ( CS / MUC ) ) ,( ( CS * RRSe ) + ( MUR * MUR ) ) ) / MUM ) ,( DS + MUM ) )", "obj1": 0.7959183673469388, "obj2": 0.14168448138097578}, {"determining": "( ( ( ACS * ACS ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( DDR + ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( DDR * PN ) ) ) ) * ( BR + MRS ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( ( RCSe * RMSe ) ,( Min( ( ( Min( RRSe ,MUC ) * ( MUR - MLU ) ) / CS ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) ) ) )", "obj1": 0.8142857142857143, "obj2": 0.12973745575669174}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / ( ( MLU + Min( RMSe ,( RCSe - RRSe ) ) ) + ( ( ( MLU - DS ) + ( MLU - RMSe ) ) * Max( CS,DS ) ) ) ) * MLU ) / Min( MUM ,( RMSe / MUR ) ) )", "obj1": 0.8285714285714286, "obj2": 0.1275042004103305}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ( AMS - ( ACS * FirstVNF_Mem_Server ) ) + Min( CRS ,MRS ) )", "choosing": "( Max( DS,MUM ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUR - DS ) ) / MUR ) ) )", "obj1": 0.8530612244897959, "obj2": 0.12401229005242755}, {"determining": "( ( ( MRS + BR ) * ( FirstVNF_Mem - Max( CRS,CRS ) ) ) / Max( FirstVNF_Mem,Min( RRS ,( ( Const * ARS ) + ( RRS * CRS ) ) ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ,DS ) ,( ( MLU * ( RRSe * CS ) ) / RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7668085800527091}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( FirstVNF_CPU_Server / BR ) / BR ) ) )", "choosing": "( Max( ( Min( Min( RRSe ,MUR ) ,( ( MUR / ( MUC + RRSe ) ) / Max( DS,( CS + RRSe ) ) ) ) - CS ),( MUM / DS ) ) + CS )", "obj1": 0.12653061224489795, "obj2": 0.8589673024473602}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Min( FirstVNF_CPU_Server ,MRS ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( MUC,Max( ( ( ( CS + MUM ) * MUR ) - Min( Max( ( MUR * MUM ),Min( RMSe ,RMSe ) ) ,Min( ( MUR / MUC ) ,MUR ) ) ),( MUC - RRSe ) ) ) ,Min( MUC ,MUM ) ) )", "obj1": 0.46530612244897956, "obj2": 0.51381871554563}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.9346938775510204, "obj2": 0.03205220282591535}, {"determining": "( Max( Min( ACS ,FirstVNF_CPU_Server ),Max( FirstVNF_RAM_Server,CRS ) ) + Max( Max( FirstVNF_CPU_Server,Const ),Min( MDR ,ARS ) ) )", "choosing": "Min( ( ( MLU + MUM ) / ( CS / MLU ) ) ,( RCSe / ( MUM + ( RMSe / MLU ) ) ) )", "obj1": 0.18979591836734694, "obj2": 0.7904241914531991}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + Min( RRS ,( DDR + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUR * ( ( MLU + MUC ) / ( RRSe + CS ) ) )", "obj1": 0.4061224489795918, "obj2": 0.5661436542797085}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.42653061224489797, "obj2": 0.5428318592174833}, {"determining": "( Max( Const,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) * ( ARS + Min( ( PN + ( FirstVNF_CPU_Server - CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RMSe - Min( MUC ,RRSe ) ),( MUC - RMSe ) )", "obj1": 0.38571428571428573, "obj2": 0.578842040318999}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( RRS - PN ) ,( Min( ( PN * ACS ) ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( Max( DS,MUC ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "( Max( ( CRS - MRS ),FirstVNF_CPU ) * ( Const / BR ) )", "choosing": "( Min( ( ( ( MUM - DS ) - MUR ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) / ( RCSe + ( ( ( ( ( DS + MUR ) - ( Max( DS,MLU ) - ( RCSe / MUR ) ) ) / CS ) / ( RRSe + RCSe ) ) - Max( DS,( RMSe - MUM ) ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.7593079729529636}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( FirstVNF_Mem * Max( ( PN - ( Const * ( ( FirstVNF_RAM_Server + ARS ) - ( ( FirstVNF_Mem / ACS ) / Const ) ) ) ),CRS ) ) * Min( DDR ,MRS ) )", "choosing": "Min( Min( ( ( ( ( RMSe * RMSe ) * Max( ( MUR * Min( MUR ,CS ) ),DS ) ) + ( RCSe + MUM ) ) * DS ) ,CS ) ,( RCSe - Min( ( Min( ( Min( ( MUR * RRSe ) ,MUC ) / CS ) ,MUC ) * RCSe ) ,Max( ( ( RMSe / ( CS - RMSe ) ) - ( MLU / Max( RRSe,( RCSe * MUM ) ) ) ),MLU ) ) ) )", "obj1": 0.4, "obj2": 0.5787581574559135}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM + ACS ) + ACS ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - Max( CS,RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,CS ) )", "obj1": 0.16122448979591836, "obj2": 0.8254481062142297}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( AMS - ( Max( FirstVNF_Mem_Server,RRS ) / FirstVNF_Mem_Server ) ) + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + MUC ) - ( CS + ( ( CS / MUC ) + CS ) ) ) + Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) )", "obj1": 0.5224489795918368, "obj2": 0.4560594530976299}, {"determining": "Min( Max( Min( ( MRS * CRS ) ,CRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( MLU,DS ) ,( MUM * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / Max( MLU,RCSe ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.040093828381892835}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / ( Min( MDR ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8168286216329899}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( DDR + AMS ) / Const ) )", "choosing": "( Max( Max( MUC,MUC ),( ( DS * MLU ) / Min( ( RMSe / MUC ) ,MUM ) ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.4387755102040816, "obj2": 0.5354327701677937}, {"determining": "Min( Min( Const ,ACS ) ,( ( ( FirstVNF_RAM * Max( CRS,CRS ) ) - Max( RRS,MRS ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( MUC,Min( MUC ,CS ) ) - RMSe ),( ( CS * Min( CS ,Min( RMSe ,( DS * ( MUM - Min( RMSe ,MUM ) ) ) ) ) ) / ( MUM - DS ) ) )", "obj1": 0.2612244897959184, "obj2": 0.7107391692616909}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( ( AMS * ( FirstVNF_CPU_Server / ( FirstVNF_RAM / BR ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( Max( Max( DS,MUR ),( ( MUM - RRSe ) / CS ) ) + Max( ( Max( RRSe,RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8394065596601764}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.4714285714285714, "obj2": 0.4949013502843802}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8879560768570286}, {"determining": "( ( Max( Const,ARS ) - ( AMS * BR ) ) * Max( FirstVNF_Mem,( RRS * Min( CRS ,ACS ) ) ) )", "choosing": "( Min( Max( ( Max( MUR,( ( MUR - ( RRSe + MUM ) ) * RMSe ) ) - RMSe ),MUR ) ,( ( Max( ( MUR + MLU ),MLU ) - DS ) / MUR ) ) - ( DS - ( ( ( ( CS - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2, "obj2": 0.7828626874506319}, {"determining": "( ( FirstVNF_RAM_Server - ( PN - ( AMS + BR ) ) ) * ( Const / ( DDR + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( DS * MLU ) / Min( ( RMSe / MUC ) ,MUM ) ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( Min( ( ( ( MUM - DS ) - MUR ) * ( ( MLU - CS ) - ( Max( MUM,MLU ) - CS ) ) ) ,MUM ) ,MUM ) ) )", "obj1": 0.4142857142857143, "obj2": 0.5554831475166735}, {"determining": "( ( ( MRS + BR ) * ( FirstVNF_Mem - Max( CRS,CRS ) ) ) / Max( FirstVNF_Mem,Min( RRS ,( ( Const * Max( DDR,BR ) ) + ( FirstVNF_RAM * CRS ) ) ) ) )", "choosing": "Max( Min( Min( ( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ,DS ) ,( ( MLU * ( RRSe * CS ) ) / RMSe ) ),( Max( MUC,MUR ) * Max( DS,MUR ) ) )", "obj1": 0.23877551020408164, "obj2": 0.742621691537095}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) + Max( ( Min( ( MUM * ( ( DS / MUC ) + DS ) ) ,RMSe ) / CS ),( RRSe - MUC ) ) )", "obj1": 0.9755102040816327, "obj2": 0.011576939848839837}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Min( FirstVNF_CPU_Server ,MRS ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( RRSe + MUC ) ) + Min( Max( MUC,Max( ( ( ( CS + MUM ) * MUR ) - Min( Max( ( MUR * MUM ),Min( RMSe ,RMSe ) ) ,Min( ( MUR / MUC ) ,MUR ) ) ),( MUC - RRSe ) ) ) ,Min( MUC ,MUM ) ) )", "obj1": 0.46938775510204084, "obj2": 0.503135857340767}, {"determining": "( ( FirstVNF_CPU_Server / ( ( Min( BR ,AMS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) / PN ) ) ) * Min( PN ,BR ) ) ) * ( FirstVNF_CPU - FirstVNF_CPU ) )", "choosing": "Max( ( ( MUM - DS ) / ( Min( CS ,( MUC * DS ) ) * RRSe ) ),Min( ( DS + ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - ( RMSe + DS ) ) ) ,MLU ) ) ) ,( ( RRSe / ( DS / MUC ) ) - ( MUM * Max( ( Min( ( CS / MUM ) ,MUC ) / ( Max( DS,RCSe ) - RMSe ) ),( RRSe * CS ) ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7308844164389094}, {"determining": "( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUM + MLU ) / Min( MLU ,MUR ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "( Max( Const,( FirstVNF_CPU_Server / ( FirstVNF_RAM * MRS ) ) ) * Min( CRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUM - ( RCSe + MUM ) ) - MUR ) + MUR ) + Max( ( ( RCSe / RRSe ) - CS ),( ( MUC + DS ) / DS ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8456225286194586}, {"determining": "Min( Max( Min( ( PN - ( Max( AMS,PN ) / Max( ( DDR / MDR ),FirstVNF_Mem_Server ) ) ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server + Min( ( AMS / DDR ) ,PN ) ) + Min( Const ,( FirstVNF_CPU / CRS ) ) ) + CRS ) * FirstVNF_CPU_Server ) ,Min( BR ,( ( PN / Min( DDR ,Max( ( PN / DDR ),( MRS + FirstVNF_CPU ) ) ) ) / ( CRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RMSe,MUM ) + ( DS - ( MLU - RRSe ) ) )", "obj1": 0.9612244897959183, "obj2": 0.017141212660118595}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,Max( AMS,( MRS / Max( ( ARS + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + ( PN * Min( ( AMS / ARS ) ,( FirstVNF_Mem_Server - RRS ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / RMSe ),Max( RCSe,MLU ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "( ( ( ACS * Max( CRS,( ( FirstVNF_CPU_Server - ARS ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( Min( MRS ,Const ) / Max( ( FirstVNF_CPU / CRS ),Const ) ) + ACS ) ) ,( Max( ( FirstVNF_CPU_Server + DDR ),BR ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( Min( MUM ,( ( CS * DS ) * RRSe ) ) / MLU ) ,Max( ( ( CS - ( RRSe + MLU ) ) - MUM ),RMSe ) ) )", "obj1": 0.7857142857142857, "obj2": 0.14903970842639896}, {"determining": "Min( Min( Min( BR ,( Min( Min( ARS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( DDR - FirstVNF_CPU ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( ( MUC / CS ) / RRSe ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7297705964538184}, {"determining": "( ( PN - ( Const / PN ) ) / ( Max( PN,CRS ) / Const ) )", "choosing": "Max( ( ( MLU / ( Min( MUC ,MUC ) + MUM ) ) + Min( MUC ,( ( RCSe * MUM ) - Max( CS,DS ) ) ) ),( MUC * ( MUM + CS ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0044484040353523395}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) )", "choosing": "( Max( Max( MUC,MUC ),( ( MUR * MUR ) + MUC ) ) + Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) - MUC ) ) )", "obj1": 0.5244897959183673, "obj2": 0.4490531893406886}, {"determining": "Min( Min( Min( BR ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7461940789289293}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - Min( Const ,RRS ) ) ,( ( ( FirstVNF_CPU_Server + DDR ) - BR ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( RRSe - ( Min( RRSe ,MUC ) - RMSe ) ) ) - MLU ),( Min( RCSe ,( ( DS + MUR ) * ( RRSe * MUM ) ) ) * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.7142857142857143, "obj2": 0.20690242937450085}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( BR * MDR ) - ( FirstVNF_Mem_Server + ( Max( BR,Max( ( DDR * FirstVNF_CPU ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ,Min( Max( DDR,DDR ) ,( ( CRS * FirstVNF_Mem ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MLU * RMSe ) - MLU ) / ( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - RRSe ) ) ) - ( RMSe / DS ) )", "obj1": 0.9040816326530612, "obj2": 0.044576292118664075}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUC ) ) * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7512852708525964}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( AMS - ( Max( FirstVNF_Mem_Server,RRS ) / FirstVNF_Mem_Server ) ) + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + MUC ) - ( CS + ( ( CS / MUC ) + CS ) ) ) + Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) )", "obj1": 0.4775510204081633, "obj2": 0.48337363117441823}, {"determining": "( Min( MDR ,CRS ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * AMS ) ) )", "choosing": "( ( MUM / ( RCSe + Max( Max( MUM,RMSe ),Max( MUM,DS ) ) ) ) / Min( CS ,MUR ) )", "obj1": 0.19387755102040816, "obj2": 0.7830444955490073}, {"determining": "( ( Max( BR,ARS ) - ( BR * AMS ) ) * ( Min( ( Max( Const,FirstVNF_Mem ) * ARS ) ,RRS ) / Max( DDR,BR ) ) )", "choosing": "( Max( ( ( MUM - DS ) - MUR ),MUR ) + Max( ( ( RCSe / RRSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "( ( DDR + FirstVNF_RAM ) * ( ACS * MRS ) )", "choosing": "( Max( ( MUR * RRSe ),Max( MUR,MUC ) ) * ( DS + RRSe ) )", "obj1": 0.22653061224489796, "obj2": 0.7509165061698968}, {"determining": "Min( Min( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ) ,( ( PN - CRS ) - Const ) ) ,Min( Max( Const,MDR ) ,Max( DDR,DDR ) ) )", "choosing": "( ( ( Max( MUR,( ( MUR / ( ( MUR / CS ) * ( MUM / RMSe ) ) ) + Max( DS,MUM ) ) ) / ( MLU - ( ( RRSe * ( Max( DS,RRSe ) + DS ) ) * ( Max( MUC,MUR ) * ( MUC + MUC ) ) ) ) ) / MUR ) - ( ( ( ( DS * RMSe ) - Max( Max( RMSe,MUM ),RCSe ) ) + DS ) / MUM ) )", "obj1": 0.9469387755102041, "obj2": 0.023986538127100273}, {"determining": "Min( Max( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ),( ( FirstVNF_Mem + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),RRS ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( MUM ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9122448979591836, "obj2": 0.040290928779356}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ARS / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8845312571319146}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Max( Max( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ),ARS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - ( ( Max( DDR,( DDR - ARS ) ) - RRS ) * MDR ) ) ) + Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ) )", "choosing": "( DS / Max( MLU,MLU ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( Min( AMS ,Min( AMS ,FirstVNF_CPU_Server ) ) + DDR ) / Const ) )", "choosing": "( Max( Max( MUC,MUC ),( ( DS * MLU ) / Min( ( RMSe / MUC ) ,MUM ) ) ) + Min( Max( ( ( CS / MUC ) + DS ),RRSe ) ,Max( Max( ( MLU / ( ( MUC * ( RMSe + MUC ) ) + MUC ) ),RCSe ),( MUM + RRSe ) ) ) )", "obj1": 0.4387755102040816, "obj2": 0.5354327701677937}, {"determining": "( ( FirstVNF_Mem * FirstVNF_Mem ) * ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( DS,( Min( ( MUR * ( ( ( RCSe * MUR ) / RCSe ) + ( Max( CS,DS ) / MUR ) ) ) ,( RMSe - RMSe ) ) * RMSe ) ) / Min( MUR ,CS ) )", "obj1": 0.27346938775510204, "obj2": 0.6996506569663841}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( ( FirstVNF_Mem + ( FirstVNF_CPU / ( AMS * Const ) ) ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) / Max( DDR,FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( RCSe - RCSe ) ,( MUR * MUR ) ) - Min( Min( DS ,Min( Min( ( Max( DS,RCSe ) - RRSe ) ,MUR ) ,( MUM * RRSe ) ) ) ,( MUC - RRSe ) ) ) - ( MLU * Max( MUC,Min( MUC ,( Min( RCSe ,( Min( MUR ,MUM ) * ( CS - MUR ) ) ) * Min( MUM ,RRSe ) ) ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.021938267801514085}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( CS ,( RCSe / Min( Min( MUC ,CS ) ,MUM ) ) ) / MUR ) - ( MUC / MUM ) )", "obj1": 0.9448979591836735, "obj2": 0.02854180898678828}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) ,( Max( ( PN - MRS ),BR ) + ACS ) ) ) )", "choosing": "( ( ( MUR - ( MUM - DS ) ) * MUR ) + Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.6980833738057962}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_CPU / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ACS - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( DS / ( Min( ( ( MLU * Max( MUM,MUR ) ) / MLU ) ,( RCSe - ( RRSe / MLU ) ) ) / RCSe ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "( Max( FirstVNF_CPU,RRS ) * ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( MUR ,MUM ),DS ) / Min( MUR ,CS ) )", "obj1": 0.27755102040816326, "obj2": 0.6992420432410594}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * MLU ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.02995662067019194}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8801457984827996}, {"determining": "( ( Const / FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( Min( BR ,( Min( PN ,ARS ) - ACS ) ) / ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( RMSe * Min( Min( ( MUC - DS ) ,Min( RCSe ,RRSe ) ) ,RCSe ) ) ) ,DS ),( CS - RCSe ) ) )", "obj1": 0.1, "obj2": 0.8817032954300777}, {"determining": "Min( Max( ( ( ( ( CRS / FirstVNF_RAM ) - RRS ) + MRS ) - Min( FirstVNF_RAM ,BR ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,( Max( ( DDR / ( DDR / FirstVNF_Mem_Server ) ),PN ) - MDR ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( Max( RCSe,DS ) + ( Min( ( RMSe + MUC ) ,Min( DS ,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / Max( CS,MUM ) ) ) ) ) / ( Max( DS,( MUM + Max( MUM,MUR ) ) ) / Max( ( MUC + Min( Min( MUR ,MUM ) ,CS ) ),( MUC - MUM ) ) ) )", "obj1": 0.9591836734693877, "obj2": 0.019382486026179487}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,MUC ) )", "obj1": 0.9938775510204082, "obj2": 0.0027813185285845143}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,AMS ),( ( ACS + Min( BR ,( FirstVNF_CPU_Server + DDR ) ) ) + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,PN ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( CS - Min( DS ,CS ) ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( ( DS * MUM ) / ( ( RCSe * MUM ) * ( CS * ( MLU - MLU ) ) ) ) ),Min( DS ,RMSe ) ) / ( Min( ( MUR / MLU ) ,MUC ) * ( CS + RMSe ) ) ) )", "obj1": 0.9571428571428572, "obj2": 0.020887231075823038}, {"determining": "( ( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) ) * ( FirstVNF_CPU_Server + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUR / RRSe ) + Max( DS,MUC ) ) + Max( ( Min( ( MUM * ( ( DS / MUC ) + DS ) ) ,RMSe ) / CS ),( RRSe - MUC ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0010672775876140164}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,MUC ) )", "obj1": 0.9959183673469387, "obj2": 0.001785346806189979}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.02187378103641845}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) / ( Min( PN ,FirstVNF_CPU ) / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( ( DS + MUC ) * MLU ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.02995662067019194}, {"determining": "( ( PN - ( Min( ( ( CRS * ( BR - ( FirstVNF_RAM_Server + BR ) ) ) + DDR ) ,FirstVNF_CPU_Server ) * ( Min( Max( DDR,ARS ) ,Const ) / FirstVNF_Mem ) ) ) / ( DDR * PN ) )", "choosing": "Min( Max( ( Max( ( CS / MUM ),DS ) - ( MUC + Min( ( ( DS / ( MUM * MUR ) ) + ( RCSe + ( MUC - MUC ) ) ) ,RCSe ) ) ),RCSe ) ,( MUC + ( CS - Min( DS ,( MUR + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( DDR + AMS ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( ( ( MUR - ( RCSe - Min( RRSe ,CS ) ) ) + ( RMSe / MUM ) ) + Min( Max( ( MUR * CS ),RMSe ) ,( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Max( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ),DDR ) ) )", "choosing": "( ( Min( CS ,( RCSe / DS ) ) / MUR ) - ( MUC / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( CS ,( RCSe / DS ) ) / MUR ) - ( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( BR + FirstVNF_CPU_Server ) ) + Min( RRS ,Min( Const ,Min( Min( MDR ,( FirstVNF_RAM_Server * ( MRS - Const ) ) ) ,Max( CRS,MRS ) ) ) ) )", "choosing": "Max( ( ( CS / MLU ) + Min( ( Min( Max( ( ( MLU + CS ) / ( CS * RCSe ) ),MLU ) ,CS ) - ( ( MLU + RCSe ) + MUR ) ) ,MUC ) ),Max( Min( Min( RMSe ,( RCSe * Min( MUC ,DS ) ) ) ,CS ),( RMSe - MUC ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8981254465932332}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * Min( BR ,FirstVNF_CPU_Server ) ),ARS ) ) / Max( CRS,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - ( ( MUR * DS ) - ( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUC * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5306122448979592, "obj2": 0.37219404487375884}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.30532402512547024}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( ( MUM - CS ) / Min( RCSe ,( RMSe + ( RRSe + Max( RRSe,MUM ) ) ) ) ) / Min( ( RMSe + ( RRSe - MUC ) ) ,Max( DS,DS ) ) ),( ( MUR * ( ( CS - MUR ) / CS ) ) * MUR ) ) ,( ( CS * RCSe ) - ( MUM * RCSe ) ) )", "obj1": 0.6428571428571429, "obj2": 0.2798221605503667}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( AMS - Max( ( ( DDR - Min( MDR ,DDR ) ) * FirstVNF_Mem ),Max( FirstVNF_Mem_Server,ACS ) ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RRSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - MUM ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6396053273337301}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.37755102040816324, "obj2": 0.5932174265326878}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,MUR ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.44285714285714284, "obj2": 0.4837218763889074}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( Max( ( ( Min( FirstVNF_CPU_Server ,PN ) + PN ) - PN ),BR ) + ACS ) ) ) )", "choosing": "( ( ( DS + Max( ( ( MUM + MUR ) * MUR ),RCSe ) ) * MUR ) + ( DS + DS ) )", "obj1": 0.5285714285714286, "obj2": 0.4416621671754919}, {"determining": "Min( AMS ,( ( ( ( ( DDR - ( FirstVNF_CPU_Server + ( PN - BR ) ) ) - PN ) * ARS ) - ( FirstVNF_CPU + PN ) ) - Max( FirstVNF_CPU,Const ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( ( ( ( ( MLU + ( MUM + RMSe ) ) + DS ) - ( ( CS + RCSe ) + DS ) ) / Min( MUM ,MUR ) ) / MUC ) / Min( MLU ,MLU ) ) )", "obj1": 0.8612244897959184, "obj2": 0.11979230494467584}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * ( ( FirstVNF_Mem + Const ) * ( Const / BR ) ) ) )", "choosing": "( ( Max( ( ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) - MLU ),( Max( ( ( RCSe / RRSe ) - CS ),( MUM / DS ) ) * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.7224489795918367, "obj2": 0.19784561765034173}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( DDR + AMS ) / Const ) )", "choosing": "( Max( Max( MUC,MUC ),( ( DS * MLU ) / Min( ( RMSe / MUC ) ,MUM ) ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.4387755102040816, "obj2": 0.5354327701677937}, {"determining": "( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) ) * ( Const / BR ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUC ) )", "obj1": 0.2836734693877551, "obj2": 0.6953771689786736}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),( ACS - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) / Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) ) ,Max( ( CRS + DDR ),Const ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( RCSe - MLU ) ) - Min( ( MUR / MUC ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * ( MUR - ( RRSe + ( ( RMSe / MUC ) / ( ( MUR + RMSe ) * ( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.9, "obj2": 0.04742435034615194}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) / ( MRS / Const ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.5020408163265306, "obj2": 0.4678885213463412}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + ( Const - FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,MLU ) / Max( Min( MUM ,DS ),MUM ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + ( RRS * Const ) ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( ( MUC / MUR ) * Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) ) / MUR ) ) )", "obj1": 0.7755102040816326, "obj2": 0.15920048842504086}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( AMS - ( Max( FirstVNF_Mem_Server,RRS ) / FirstVNF_Mem_Server ) ) + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + MUC ) - ( CS + ( ( CS / MUC ) + CS ) ) ) + Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) )", "obj1": 0.5224489795918368, "obj2": 0.4560594530976299}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / ( ( MLU + Min( RMSe ,( RCSe - RRSe ) ) ) + ( ( ( MLU - DS ) + ( MLU - RMSe ) ) * Max( CS,DS ) ) ) ) * MLU ) / Min( MUM ,( RMSe / MUR ) ) )", "obj1": 0.8285714285714286, "obj2": 0.1275042004103305}, {"determining": "( ( AMS - ( ACS * FirstVNF_Mem_Server ) ) + Min( CRS ,MRS ) )", "choosing": "( Max( DS,MUM ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUR - DS ) ) / MUR ) ) )", "obj1": 0.8530612244897959, "obj2": 0.12401229005242755}, {"determining": "( ( ( MRS + BR ) * ( FirstVNF_Mem - Max( CRS,CRS ) ) ) / Max( FirstVNF_Mem,Min( RRS ,( ( Const * ARS ) + ( RRS * CRS ) ) ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ,DS ) ,( ( MLU * ( RRSe * CS ) ) / RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7668085800527091}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( ( ( Const * FirstVNF_RAM ) - FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( RRSe,MUM ) ) ) + RCSe ),( RRSe + MUC ) ) + Max( ( Min( ( MUM * ( ( DS / MUC ) + DS ) ) ,RMSe ) / CS ),( RRSe - MUC ) ) )", "obj1": 0.49387755102040815, "obj2": 0.47924861203519736}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7489795918367347, "obj2": 0.16108160475962438}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( FirstVNF_CPU_Server / BR ) / BR ) ) )", "choosing": "( Max( ( Min( Min( RRSe ,MUR ) ,( ( MUR / ( MUC + RRSe ) ) / Max( DS,( CS + RRSe ) ) ) ) - CS ),( MUM / DS ) ) + CS )", "obj1": 0.12653061224489795, "obj2": 0.8589673024473602}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - ( ( MDR / FirstVNF_RAM_Server ) + ACS ) ) + ( ( FirstVNF_RAM / Min( PN ,FirstVNF_Mem ) ) * CRS ) )", "choosing": "( ( ( MUM / MUR ) * RMSe ) / ( ( ( Min( RRSe ,( CS * RMSe ) ) * ( ( MUR - Min( Max( RMSe,MLU ) ,Max( MUC,MLU ) ) ) + DS ) ) + ( MUM + MUC ) ) + RMSe ) )", "obj1": 0.6714285714285714, "obj2": 0.2381269419807639}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.9346938775510204, "obj2": 0.03205220282591535}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( AMS - ( Max( FirstVNF_Mem_Server,RRS ) / FirstVNF_Mem_Server ) ) + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + MUC ) - ( CS + ( ( CS / MUC ) + CS ) ) ) + Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) )", "obj1": 0.4775510204081633, "obj2": 0.48337363117441823}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / ( Min( MDR ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7892501269595825}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / PN ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) ) )", "obj1": 0.7428571428571429, "obj2": 0.1664925546105228}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.42653061224489797, "obj2": 0.5428318592174833}, {"determining": "( Max( Const,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) * ( ARS + Min( ( PN + ( FirstVNF_CPU_Server - CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RMSe - Min( MUC ,RRSe ) ),( MUC - RMSe ) )", "obj1": 0.38571428571428573, "obj2": 0.578842040318999}, {"determining": "( Max( ( CRS - MRS ),FirstVNF_CPU ) * ( Const / BR ) )", "choosing": "( Min( ( ( ( MUM - DS ) - MUR ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) / ( RCSe + ( ( ( ( ( DS + MUR ) - ( Max( DS,MLU ) - ( RCSe / MUR ) ) ) / CS ) / ( RRSe + RCSe ) ) - Max( DS,( RMSe - MUM ) ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.7593079729529636}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + Min( RRS ,( DDR + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUR * ( ( MLU + MUC ) / ( RRSe + CS ) ) )", "obj1": 0.4061224489795918, "obj2": 0.5661436542797085}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( ( DS + MLU ) - ( CS / MUC ) ) ,( ( CS * RRSe ) + ( MUR * MUR ) ) ) / MUM ) ,( DS + MUM ) )", "obj1": 0.7959183673469388, "obj2": 0.14168448138097578}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "Min( Max( Min( ( MRS * CRS ) ,CRS ),( ( FirstVNF_Mem + FirstVNF_Mem ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( ( ( Min( Max( MLU,DS ) ,( MUM * MUR ) ) * RMSe ) - ( Max( Min( CS ,CS ),MUR ) * ( ( RMSe - MUR ) / MUR ) ) ),RMSe ),( MUC + DS ) ) + ( ( RCSe * DS ) + ( MUM / Max( MLU,RCSe ) ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.040093828381892835}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / ( Min( MDR ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8168286216329899}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( PN / PN ) ,( ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) * Min( BR ,( ( MDR * ( FirstVNF_RAM_Server / DDR ) ) + DDR ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( DS / Max( MUR,( MUR * Max( ( Max( MUC,RMSe ) / RRSe ),( RCSe - RRSe ) ) ) ) )", "obj1": 0.8081632653061225, "obj2": 0.13676146011623266}, {"determining": "Min( Min( Const ,ACS ) ,( ( ( FirstVNF_RAM * Max( CRS,CRS ) ) - Max( RRS,MRS ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( MUC,Min( MUC ,CS ) ) - RMSe ),( ( CS * Min( CS ,Min( RMSe ,( DS * ( MUM - Min( RMSe ,MUM ) ) ) ) ) ) / ( MUM - DS ) ) )", "obj1": 0.2612244897959184, "obj2": 0.7107391692616909}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM + ACS ) + ACS ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - Max( CS,RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,CS ) )", "obj1": 0.16122448979591836, "obj2": 0.8254481062142297}, {"determining": "( ( Max( Const,ARS ) - ( AMS * BR ) ) * Max( FirstVNF_Mem,( RRS * Min( CRS ,ACS ) ) ) )", "choosing": "( Min( Max( ( Max( MUR,( ( MUR - ( RRSe + MUM ) ) * RMSe ) ) - RMSe ),MUR ) ,( ( Max( ( MUR + MLU ),MLU ) - DS ) / MUR ) ) - ( DS - ( ( ( ( CS - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2, "obj2": 0.7828626874506319}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7428571428571429, "obj2": 0.1664925546105228}, {"determining": "( ( ( MRS + BR ) * ( FirstVNF_Mem - Max( CRS,CRS ) ) ) / Max( FirstVNF_Mem,Min( RRS ,( ( Const * Max( DDR,BR ) ) + ( FirstVNF_RAM * CRS ) ) ) ) )", "choosing": "Max( Min( Min( ( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ,DS ) ,( ( MLU * ( RRSe * CS ) ) / RMSe ) ),( Max( MUC,MUR ) * Max( DS,MUR ) ) )", "obj1": 0.23877551020408164, "obj2": 0.742621691537095}, {"determining": "( ( FirstVNF_CPU_Server / ( ( Min( BR ,AMS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) / PN ) ) ) * Min( PN ,BR ) ) ) * ( FirstVNF_CPU - FirstVNF_CPU ) )", "choosing": "Max( ( ( MUM - DS ) / ( Min( CS ,( MUC * DS ) ) * RRSe ) ),Min( ( DS + ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - ( RMSe + DS ) ) ) ,MLU ) ) ) ,( ( RRSe / ( DS / MUC ) ) - ( MUM * Max( ( Min( ( CS / MUM ) ,MUC ) / ( Max( DS,RCSe ) - RMSe ) ),( RRSe * CS ) ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7308844164389094}, {"determining": "( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUM + MLU ) / Min( MLU ,MUR ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "( Max( Const,( FirstVNF_CPU_Server / ( FirstVNF_RAM * MRS ) ) ) * Min( CRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUM - ( RCSe + MUM ) ) - MUR ) + MUR ) + Max( ( ( RCSe / RRSe ) - CS ),( ( MUC + DS ) / DS ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8456225286194586}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) + ( Const + DDR ) )", "choosing": "( Min( ( ( MUM * RRSe ) / MUC ) ,MUM ) / ( ( MUM - Max( ( MUR + MUC ),( Max( MUM,MLU ) / ( ( Max( MUR,RMSe ) * Min( MUM ,DS ) ) + ( Max( DS,CS ) - MUC ) ) ) ) ) + ( MUR + MUR ) ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,Max( AMS,( MRS / Max( ( ARS + FirstVNF_RAM_Server ),( FirstVNF_CPU_Server + ( PN * Min( ( AMS / ARS ) ,( FirstVNF_Mem_Server - RRS ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / RMSe ),Max( RCSe,MLU ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "( ( ( ACS * Max( CRS,( ( FirstVNF_CPU_Server - ARS ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( Min( MRS ,Const ) / Max( ( FirstVNF_CPU / CRS ),Const ) ) + ACS ) ) ,( Max( ( FirstVNF_CPU_Server + DDR ),BR ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( Min( MUM ,( ( CS * DS ) * RRSe ) ) / MLU ) ,Max( ( ( CS - ( RRSe + MLU ) ) - MUM ),RMSe ) ) )", "obj1": 0.7857142857142857, "obj2": 0.14903970842639896}, {"determining": "Min( Min( Min( BR ,( Min( Min( ARS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( DDR - FirstVNF_CPU ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( ( MUC / CS ) / RRSe ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7297705964538184}, {"determining": "( ( PN - ( Const / PN ) ) / ( Max( PN,CRS ) / Const ) )", "choosing": "Max( ( ( MLU / ( Min( MUC ,MUC ) + MUM ) ) + Min( MUC ,( ( RCSe * MUM ) - Max( CS,DS ) ) ) ),( MUC * ( MUM + CS ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0044484040353523395}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "Min( Max( Min( ( PN - ( Max( AMS,PN ) / Max( ( DDR / MDR ),FirstVNF_Mem_Server ) ) ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server + Min( ( AMS / DDR ) ,PN ) ) + Min( Const ,( FirstVNF_CPU / CRS ) ) ) + CRS ) * FirstVNF_CPU_Server ) ,Min( BR ,( ( PN / Min( DDR ,Max( ( PN / DDR ),( MRS + FirstVNF_CPU ) ) ) ) / ( CRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RMSe,MUM ) + ( DS - ( MLU - RRSe ) ) )", "obj1": 0.9612244897959183, "obj2": 0.017141212660118595}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) )", "choosing": "( Max( Max( MUC,MUC ),( ( MUR * MUR ) + MUC ) ) + Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) - MUC ) ) )", "obj1": 0.5244897959183673, "obj2": 0.4490531893406886}, {"determining": "( Min( MDR ,CRS ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * AMS ) ) )", "choosing": "( ( MUM / ( RCSe + Max( Max( MUM,RMSe ),Max( MUM,DS ) ) ) ) / Min( CS ,MUR ) )", "obj1": 0.19387755102040816, "obj2": 0.7830444955490073}, {"determining": "Min( Min( Min( BR ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7461940789289293}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( DDR * PN ) ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.15918367346938775, "obj2": 0.838221209230279}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8879560768570286}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - Min( Const ,RRS ) ) ,( ( ( FirstVNF_CPU_Server + DDR ) - BR ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( RRSe - ( Min( RRSe ,MUC ) - RMSe ) ) ) - MLU ),( Min( RCSe ,( ( DS + MUR ) * ( RRSe * MUM ) ) ) * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.7142857142857143, "obj2": 0.20690242937450085}, {"determining": "( ( PN - ( Min( ( ( CRS * ( BR - ( FirstVNF_RAM_Server + BR ) ) ) + DDR ) ,FirstVNF_CPU_Server ) * ( Min( Max( DDR,ARS ) ,Const ) / FirstVNF_Mem ) ) ) / ( DDR * PN ) )", "choosing": "Min( Max( ( Max( ( CS / MUM ),DS ) - ( MUC + Min( ( ( DS / ( MUM * MUR ) ) + ( RCSe + ( MUC - MUC ) ) ) ,RCSe ) ) ),RCSe ) ,( MUC + ( CS - Min( DS ,( MUR + RCSe ) ) ) ) )", "obj1": 0.9734693877551021, "obj2": 0.012640372567352568}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( MUR * ( ( Min( Max( MUR,( ( MUC / DS ) * ( MUC / MUM ) ) ) ,( RMSe / MLU ) ) / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.4020408163265306, "obj2": 0.5779302201319569}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUC ) ) * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7512852708525964}, {"determining": "( ( Const / ARS ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( MUR - ( RRSe + CS ) ) / Max( MUC,MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.08979591836734693, "obj2": 0.8962575255581103}, {"determining": "( ( ( ACS * ACS ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( DDR + ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( DDR * PN ) ) ) ) * ( BR + MRS ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( ( RCSe * RMSe ) ,( Min( ( ( Min( RRSe ,MUC ) * ( MUR - MLU ) ) / CS ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) ) ) )", "obj1": 0.8142857142857143, "obj2": 0.12973745575669174}, {"determining": "( ( FirstVNF_Mem * Max( ( PN - ( Const * ( ( FirstVNF_RAM_Server + ARS ) - ( ( FirstVNF_Mem / ACS ) / Const ) ) ) ),CRS ) ) * Min( DDR ,MRS ) )", "choosing": "Min( Min( ( ( ( ( RMSe * RMSe ) * Max( ( MUR * Min( MUR ,CS ) ),DS ) ) + ( RCSe + MUM ) ) * DS ) ,CS ) ,( RCSe - Min( ( Min( ( Min( ( MUR * RRSe ) ,MUC ) / CS ) ,MUC ) * RCSe ) ,Max( ( ( RMSe / ( CS - RMSe ) ) - ( MLU / Max( RRSe,( RCSe * MUM ) ) ) ),MLU ) ) ) )", "obj1": 0.4, "obj2": 0.5787581574559135}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( AMS - ( Max( FirstVNF_Mem_Server,RRS ) / FirstVNF_Mem_Server ) ) + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + MUC ) - ( CS + ( ( CS / MUC ) + CS ) ) ) + Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) )", "obj1": 0.4775510204081633, "obj2": 0.48337363117441823}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - ( PN / FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( DDR * PN ) ) + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( Max( MUC,MUR ) * ( RCSe * MUC ) ) ) / ( MUC / ( ( DS - ( RRSe / MUC ) ) - ( Min( RMSe ,MUC ) - RMSe ) ) ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.1278090215406991}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( BR * MDR ) - ( FirstVNF_Mem_Server + ( Max( BR,Max( ( DDR * FirstVNF_CPU ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ,Min( Max( DDR,DDR ) ,( ( CRS * FirstVNF_Mem ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MLU * RMSe ) - MLU ) / ( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - RRSe ) ) ) - ( RMSe / DS ) )", "obj1": 0.9040816326530612, "obj2": 0.044576292118664075}, {"determining": "( ( DDR + FirstVNF_RAM ) * ( ACS * MRS ) )", "choosing": "( Max( ( MUR * RRSe ),Max( MUR,MUC ) ) * ( DS + RRSe ) )", "obj1": 0.22653061224489796, "obj2": 0.7509165061698968}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU * RRS ) ) + BR ) / Const ) )", "choosing": "( Max( Max( MUC,MUC ),( ( DS * MUM ) / Min( ( RMSe / MUC ) ,MUM ) ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( Min( ( ( ( MUM - DS ) - MUR ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) ,MUM ) ) )", "obj1": 0.4142857142857143, "obj2": 0.5554831475166735}, {"determining": "Min( Min( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ) ,( ( PN - CRS ) - Const ) ) ,Min( Max( Const,MDR ) ,Max( DDR,DDR ) ) )", "choosing": "( ( ( Max( MUR,( ( MUR / ( ( MUR / CS ) * ( MUM / RMSe ) ) ) + Max( DS,MUM ) ) ) / ( MLU - ( ( RRSe * ( Max( DS,RRSe ) + DS ) ) * ( Max( MUC,MUR ) * ( MUC + MUC ) ) ) ) ) / MUR ) - ( ( ( ( DS * RMSe ) - Max( Max( RMSe,MUM ),RCSe ) ) + DS ) / MUM ) )", "obj1": 0.9469387755102041, "obj2": 0.023986538127100273}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ARS / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8845312571319146}, {"determining": "( ( Const - ( ( PN * Const ) + RRS ) ) * ( Max( BR,DDR ) / Min( ( ( Const - ( Const / AMS ) ) * ARS ) ,RRS ) ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( ( MUC + ( Max( DS,( MLU - Min( MLU ,( CS - MUC ) ) ) ) * Max( CS,MUM ) ) ) / ( DS - MLU ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "( ( AMS * ( FirstVNF_CPU_Server / ( FirstVNF_RAM / BR ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( Max( Max( DS,MUR ),( ( MUM - RRSe ) / CS ) ) + Max( ( Max( RRSe,RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8394065596601764}, {"determining": "( ( FirstVNF_Mem * FirstVNF_Mem ) * ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( DS,( Min( ( MUR * ( ( ( RCSe * MUR ) / RCSe ) + ( Max( CS,DS ) / MUR ) ) ) ,( RMSe - RMSe ) ) * RMSe ) ) / Min( MUR ,CS ) )", "obj1": 0.27346938775510204, "obj2": 0.6996506569663841}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_CPU / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ACS - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( DS / ( Min( ( ( MLU * Max( MUM,MUR ) ) / MLU ) ,( RCSe - ( RRSe / MLU ) ) ) / RCSe ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "Min( Max( ( DDR + AMS ),( ( FirstVNF_Mem + ( Max( BR,Max( ( MRS + FirstVNF_Mem_Server ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM * MRS ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( MUR + ( MUC * Min( RCSe ,MUC ) ) ) - Min( Min( MUR ,MUR ) ,( CS - ( ( MLU / ( Min( RRSe ,CS ) * ( MLU * ( MUC - RCSe ) ) ) ) - RCSe ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.04126006699067148}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( RRS - PN ) ,( Min( ( PN * ACS ) ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( Max( DS,MUC ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( DDR + DDR ) / Max( DDR,Min( Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ,DDR ) ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( DS * DS ) / Min( ( RMSe / MUC ) ,MUM ) ) ) + Min( Max( ( ( CS / MUC ) + DS ),RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.4387755102040816, "obj2": 0.5354327701677937}, {"determining": "( ( FirstVNF_RAM_Server - ( PN - ( AMS + BR ) ) ) * ( Const / ( DDR + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( DS * MLU ) / Min( ( RMSe / MUC ) ,MUM ) ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( Min( ( ( ( MUM - DS ) - MUR ) * ( ( MLU - CS ) - ( Max( MUM,MLU ) - CS ) ) ) ,MUM ) ,MUM ) ) )", "obj1": 0.4142857142857143, "obj2": 0.5554831475166735}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( ( FirstVNF_Mem + ( FirstVNF_CPU / ( AMS * Const ) ) ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) / Max( DDR,FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( RCSe - RCSe ) ,( MUR * MUR ) ) - Min( Min( DS ,Min( Min( ( Max( DS,RCSe ) - RRSe ) ,MUR ) ,( MUM * RRSe ) ) ) ,( MUC - RRSe ) ) ) - ( MLU * Max( MUC,Min( MUC ,( Min( RCSe ,( Min( MUR ,MUM ) * ( CS - MUR ) ) ) * Min( MUM ,RRSe ) ) ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.021938267801514085}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( CS ,( RCSe / Min( Min( MUC ,CS ) ,MUM ) ) ) / MUR ) - ( MUC / MUM ) )", "obj1": 0.9448979591836735, "obj2": 0.02854180898678828}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) ,( Max( ( PN - MRS ),BR ) + ACS ) ) ) )", "choosing": "( ( ( MUR - ( MUM - DS ) ) * MUR ) + Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.6980833738057962}, {"determining": "( Max( FirstVNF_CPU,RRS ) * ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( MUR ,MUM ),DS ) / Min( MUR ,CS ) )", "obj1": 0.27755102040816326, "obj2": 0.6992420432410594}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * MLU ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.02995662067019194}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8801457984827996}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "( ( Const / FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( Min( BR ,( Min( PN ,ARS ) - ACS ) ) / ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( RMSe * Min( Min( ( MUC - DS ) ,Min( RCSe ,RRSe ) ) ,RCSe ) ) ) ,DS ),( CS - RCSe ) ) )", "obj1": 0.1, "obj2": 0.8817032954300777}, {"determining": "Min( Max( ( ( ( ( CRS / FirstVNF_RAM ) - RRS ) + MRS ) - Min( FirstVNF_RAM ,BR ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,( Max( ( DDR / ( DDR / FirstVNF_Mem_Server ) ),PN ) - MDR ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( Max( RCSe,DS ) + ( Min( ( RMSe + MUC ) ,Min( DS ,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / Max( CS,MUM ) ) ) ) ) / ( Max( DS,( MUM + Max( MUM,MUR ) ) ) / Max( ( MUC + Min( Min( MUR ,MUM ) ,CS ) ),( MUC - MUM ) ) ) )", "obj1": 0.9591836734693877, "obj2": 0.019382486026179487}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Max( Max( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ),ARS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - ( ( Max( DDR,( DDR - ARS ) ) - RRS ) * MDR ) ) ) + Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ) )", "choosing": "( DS / Max( MLU,MLU ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}], "14": [{"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Max( ( AMS - Max( ( ( ( MDR - BR ) - Max( BR,AMS ) ) * FirstVNF_Mem ),ARS ) ),DDR ) ) )", "choosing": "( ( Min( CS ,( RCSe * CS ) ) / MUR ) - ( MUC / ( MUC - ( CS * ( MLU / ( MLU - Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Max( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ),DDR ) ) )", "choosing": "( ( Min( CS ,( RCSe / DS ) ) / MUR ) - ( MUC / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8958148423992437}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * Min( BR ,FirstVNF_CPU_Server ) ),ARS ) ) / Max( CRS,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - ( ( MUR * DS ) - ( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUC * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5306122448979592, "obj2": 0.37219404487375884}, {"determining": "( ( AMS - Max( ( ( DDR - Min( MDR ,DDR ) ) * FirstVNF_Mem ),Max( FirstVNF_Mem_Server,ACS ) ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RRSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - MUM ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6396053273337301}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.30532402512547024}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( AMS - Max( ( Max( Min( MDR ,FirstVNF_CPU ),DDR ) * ( PN / FirstVNF_Mem ) ),Const ) ) / ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( ( MLU + ( ( RCSe * DS ) * RCSe ) ) / MUC ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - RRSe ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( RMSe / MUM ) * MUM ) ) - MUR ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.679292893601322}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( AMS - Max( Min( Min( ARS ,FirstVNF_Mem ) ,Min( BR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( RMSe + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - ( RMSe * Min( MLU ,MUM ) ) ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5904940164180497}, {"determining": "( ( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) ) * ( Const / BR ) )", "choosing": "( Min( ( ( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - DS ) - MUR ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) / Max( MUR,CS ) )", "obj1": 0.5224489795918368, "obj2": 0.4282918925864325}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,( ( CS * RCSe ) - ( MUM - RCSe ) ) )", "obj1": 0.6346938775510204, "obj2": 0.28397960378299636}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - RRS ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( CS * MUR ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4306122448979592, "obj2": 0.49772733909853323}, {"determining": "Min( AMS ,( ( ( ( ( DDR - ( FirstVNF_CPU_Server + ( PN - BR ) ) ) - PN ) * ARS ) - ( FirstVNF_CPU + PN ) ) - Max( FirstVNF_CPU,Const ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( ( ( ( ( MLU + ( MUM + RMSe ) ) + DS ) - ( ( CS + RCSe ) + DS ) ) / Min( MUM ,MUR ) ) / MUC ) / Min( MLU ,MLU ) ) )", "obj1": 0.8612244897959184, "obj2": 0.11979230494467584}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * ( ( FirstVNF_Mem + Const ) * ( Const / BR ) ) ) )", "choosing": "( ( Max( ( ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) - MLU ),( Max( ( ( RCSe / RRSe ) - CS ),( MUM / DS ) ) * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.7224489795918367, "obj2": 0.19784561765034173}, {"determining": "( Max( Const,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) * ( ARS + Min( ( PN + ( FirstVNF_CPU_Server - CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RMSe - Min( MUC ,RRSe ) ),( MUC - RMSe ) )", "obj1": 0.38571428571428573, "obj2": 0.578842040318999}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.42653061224489797, "obj2": 0.5428318592174833}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) + ( Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) * Max( ( ARS / FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( MUR * ( ( RMSe - CS ) + Max( ( CS * ( Max( RMSe,( MUR + ( DS / CS ) ) ) - MLU ) ),( DS / MUM ) ) ) )", "obj1": 0.636734693877551, "obj2": 0.27030808835089826}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,MUR ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.44285714285714284, "obj2": 0.4837218763889074}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),( ACS - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) / Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) ) ,Max( ( CRS + DDR ),Const ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( RCSe - MLU ) ) - Min( ( MUR / MUC ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * ( MUR - ( RRSe + ( ( RMSe / MUC ) / ( ( MUR + RMSe ) * ( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.9, "obj2": 0.04742435034615194}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + ( Const - FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,MLU ) / Max( Min( MUM ,DS ),MUM ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) / ( MRS / Const ) )", "choosing": "( Max( ( MUR * RRSe ),Max( MUR,MUC ) ) * ( DS + RRSe ) )", "obj1": 0.5163265306122449, "obj2": 0.45337885186295}, {"determining": "( ( Min( ( FirstVNF_CPU - ( ( RRS + ( ACS + MRS ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) - FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + Max( PN,MDR ) ) ) * ( ( FirstVNF_CPU + RRS ) * FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) + ( ( CRS * FirstVNF_Mem_Server ) - AMS ) )", "choosing": "Max( ( RMSe * RMSe ),Min( Min( ( RMSe * Min( Max( ( Min( CS ,CS ) - RRSe ),MUC ) ,MLU ) ) ,( RRSe * CS ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / DS ) ) + MUM ) ) * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + ( RRS * Const ) ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( ( MUC / MUR ) * Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) ) / MUR ) ) )", "obj1": 0.7755102040816326, "obj2": 0.15920048842504086}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / ( ( MLU + Min( RMSe ,( RCSe - RRSe ) ) ) + ( ( ( MLU - DS ) + ( MLU - RMSe ) ) * Max( CS,DS ) ) ) ) * MLU ) / Min( MUM ,( RMSe / MUR ) ) )", "obj1": 0.8285714285714286, "obj2": 0.1275042004103305}, {"determining": "( ( AMS - ( ACS * FirstVNF_Mem_Server ) ) + Min( CRS ,MRS ) )", "choosing": "( Max( DS,MUM ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUR - DS ) ) / MUR ) ) )", "obj1": 0.8530612244897959, "obj2": 0.12401229005242755}, {"determining": "( ( ( MRS + BR ) * ( FirstVNF_Mem - Max( CRS,CRS ) ) ) / Max( FirstVNF_Mem,Min( RRS ,( ( Const * ARS ) + ( RRS * CRS ) ) ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ,DS ) ,( ( MLU * ( RRSe * CS ) ) / RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7668085800527091}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( ( ( Const * FirstVNF_RAM ) - FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( RRSe,MUM ) ) ) + RCSe ),( RRSe + MUC ) ) + Max( ( Min( ( MUM * ( ( DS / MUC ) + DS ) ) ,RMSe ) / CS ),( RRSe - MUC ) ) )", "obj1": 0.49387755102040815, "obj2": 0.47924861203519736}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7489795918367347, "obj2": 0.16108160475962438}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( FirstVNF_CPU_Server / BR ) / BR ) ) )", "choosing": "( Max( ( Min( Min( RRSe ,MUR ) ,( ( MUR / ( MUC + RRSe ) ) / Max( DS,( CS + RRSe ) ) ) ) - CS ),( MUM / DS ) ) + CS )", "obj1": 0.12653061224489795, "obj2": 0.8589673024473602}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - ( ( MDR / FirstVNF_RAM_Server ) + ACS ) ) + ( ( FirstVNF_RAM / Min( PN ,FirstVNF_Mem ) ) * CRS ) )", "choosing": "( ( ( MUM / MUR ) * RMSe ) / ( ( ( Min( RRSe ,( CS * RMSe ) ) * ( ( MUR - Min( Max( RMSe,MLU ) ,Max( MUC,MLU ) ) ) + DS ) ) + ( MUM + MUC ) ) + RMSe ) )", "obj1": 0.6714285714285714, "obj2": 0.2381269419807639}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( AMS - ( Max( FirstVNF_Mem_Server,RRS ) / FirstVNF_Mem_Server ) ) + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + MUC ) - ( CS + ( ( CS / MUC ) + CS ) ) ) + Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) )", "obj1": 0.4775510204081633, "obj2": 0.48337363117441823}, {"determining": "( ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) * ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUM / RMSe ) / ( RRSe + CS ) ) / Min( MUR ,CS ) )", "obj1": 0.17959183673469387, "obj2": 0.7877494956817555}, {"determining": "( Min( PN ,( ( RRS + MDR ) * Min( ARS ,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem + FirstVNF_RAM ) )", "choosing": "Min( ( DS * MUM ) ,( MUR - MUC ) )", "obj1": 0.7428571428571429, "obj2": 0.1664925546105228}, {"determining": "( Max( ( CRS - MRS ),FirstVNF_CPU ) * ( Const / BR ) )", "choosing": "( Min( ( ( ( MUM - DS ) - MUR ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) / ( RCSe + ( ( ( ( ( DS + MUR ) - ( Max( DS,MLU ) - ( RCSe / MUR ) ) ) / CS ) / ( RRSe + RCSe ) ) - Max( DS,( RMSe - MUM ) ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.7593079729529636}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + Min( RRS ,( DDR + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUR * ( ( MLU + MUC ) / ( RRSe + CS ) ) )", "obj1": 0.4061224489795918, "obj2": 0.5661436542797085}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) / ( MRS / Const ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.5020408163265306, "obj2": 0.4678885213463412}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( ( DS + MLU ) - ( CS / MUC ) ) ,( ( CS * RRSe ) + ( MUR * MUR ) ) ) / MUM ) ,( DS + MUM ) )", "obj1": 0.7959183673469388, "obj2": 0.14168448138097578}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / ( Min( MDR ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8168286216329899}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) )", "choosing": "( Max( Max( MUC,MUC ),( ( MUR * MUR ) + MUC ) ) + Max( Min( Min( RMSe ,( MUM * ( ( ( DS * MUR ) / RCSe ) + DS ) ) ) ,CS ),( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) - MUC ) ) )", "obj1": 0.5102040816326531, "obj2": 0.462358123896554}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM + ACS ) + ACS ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - Max( CS,RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,CS ) )", "obj1": 0.16122448979591836, "obj2": 0.8254481062142297}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.9346938775510204, "obj2": 0.03205220282591535}, {"determining": "( ( Max( Const,ARS ) - ( AMS * BR ) ) * Max( FirstVNF_Mem,( RRS * Min( CRS ,ACS ) ) ) )", "choosing": "( Min( Max( ( Max( MUR,( ( MUR - ( RRSe + MUM ) ) * RMSe ) ) - RMSe ),MUR ) ,( ( Max( ( MUR + MLU ),MLU ) - DS ) / MUR ) ) - ( DS - ( ( ( ( CS - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2, "obj2": 0.7828626874506319}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / PN ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) ) )", "obj1": 0.7428571428571429, "obj2": 0.1664925546105228}, {"determining": "( ( ( MRS + BR ) * ( FirstVNF_Mem - Max( CRS,CRS ) ) ) / Max( FirstVNF_Mem,Min( RRS ,( ( Const * Max( DDR,BR ) ) + ( FirstVNF_RAM * CRS ) ) ) ) )", "choosing": "Max( Min( Min( ( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ,DS ) ,( ( MLU * ( RRSe * CS ) ) / RMSe ) ),( Max( MUC,MUR ) * Max( DS,MUR ) ) )", "obj1": 0.23877551020408164, "obj2": 0.742621691537095}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8879560768570286}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( Min( MDR ,CRS ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * AMS ) ) )", "choosing": "( ( MUM / ( RCSe + Max( Max( MUM,RMSe ),Max( MUM,DS ) ) ) ) / Min( CS ,MUR ) )", "obj1": 0.19387755102040816, "obj2": 0.7830444955490073}, {"determining": "( ( FirstVNF_CPU_Server / ( ( Min( BR ,AMS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) / PN ) ) ) * Min( PN ,BR ) ) ) * ( FirstVNF_CPU - FirstVNF_CPU ) )", "choosing": "Max( ( ( MUM - DS ) / ( Min( CS ,( MUC * DS ) ) * RRSe ) ),Min( ( DS + ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - ( RMSe + DS ) ) ) ,MLU ) ) ) ,( ( RRSe / ( DS / MUC ) ) - ( MUM * Max( ( Min( ( CS / MUM ) ,MUC ) / ( Max( DS,RCSe ) - RMSe ) ),( RRSe * CS ) ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7308844164389094}, {"determining": "( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUM + MLU ) / Min( MLU ,MUR ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "( Max( Const,( FirstVNF_CPU_Server / ( FirstVNF_RAM * MRS ) ) ) * Min( CRS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUM - ( RCSe + MUM ) ) - MUR ) + MUR ) + Max( ( ( RCSe / RRSe ) - CS ),( ( MUC + DS ) / DS ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8456225286194586}, {"determining": "( ( PN - ( Const / PN ) ) / ( Max( PN,CRS ) / Const ) )", "choosing": "Max( ( ( MLU / ( Min( MUC ,MUC ) + MUM ) ) + Min( MUC ,( ( RCSe * MUM ) - Max( CS,DS ) ) ) ),( MUC * ( MUM + CS ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0044484040353523395}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "Min( Max( Min( ( ACS - DDR ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( ( FirstVNF_CPU * RRS ) * Max( BR,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) ) ) - ( BR * MDR ) ) ) ,( Const * MDR ) )", "choosing": "( ( Min( ( MLU - ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( Max( ( RRSe / RCSe ),Min( RMSe ,MUM ) ) ,CS ) ) ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - CS ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9183673469387755, "obj2": 0.03714461229246687}, {"determining": "( ( ( ACS * Max( CRS,( ( FirstVNF_CPU_Server - ARS ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( Min( MRS ,Const ) / Max( ( FirstVNF_CPU / CRS ),Const ) ) + ACS ) ) ,( Max( ( FirstVNF_CPU_Server + DDR ),BR ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( Min( MUM ,( ( CS * DS ) * RRSe ) ) / MLU ) ,Max( ( ( CS - ( RRSe + MLU ) ) - MUM ),RMSe ) ) )", "obj1": 0.7857142857142857, "obj2": 0.14903970842639896}, {"determining": "( ( PN - ( Min( ( ( CRS * ( BR - ( FirstVNF_RAM_Server + BR ) ) ) + DDR ) ,FirstVNF_CPU_Server ) * ( Min( Max( DDR,ARS ) ,Const ) / FirstVNF_Mem ) ) ) / ( DDR * PN ) )", "choosing": "Min( Max( ( Max( ( CS / MUM ),DS ) - ( MUC + Min( ( ( DS / ( MUM * MUR ) ) + ( RCSe + ( MUC - MUC ) ) ) ,RCSe ) ) ),RCSe ) ,( MUC + ( CS - Min( DS ,( MUR + RCSe ) ) ) ) )", "obj1": 0.9734693877551021, "obj2": 0.012640372567352568}, {"determining": "Min( Min( Min( BR ,( Min( Min( ARS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( DDR - FirstVNF_CPU ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( ( MUC / CS ) / RRSe ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7297705964538184}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "Min( Max( Min( ( PN - ( Max( AMS,PN ) / Max( ( DDR / MDR ),FirstVNF_Mem_Server ) ) ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server + Min( ( AMS / DDR ) ,PN ) ) + Min( Const ,( FirstVNF_CPU / CRS ) ) ) + CRS ) * FirstVNF_CPU_Server ) ,Min( BR ,( ( PN / Min( DDR ,Max( ( PN / DDR ),( MRS + FirstVNF_CPU ) ) ) ) / ( CRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RMSe,MUM ) + ( DS - ( MLU - RRSe ) ) )", "obj1": 0.9612244897959183, "obj2": 0.017141212660118595}, {"determining": "Min( Min( Min( BR ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7461940789289293}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( DDR * PN ) ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.15918367346938775, "obj2": 0.838221209230279}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - Min( Const ,RRS ) ) ,( ( ( FirstVNF_CPU_Server + DDR ) - BR ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( RRSe - ( Min( RRSe ,MUC ) - RMSe ) ) ) - MLU ),( Min( RCSe ,( ( DS + MUR ) * ( RRSe * MUM ) ) ) * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.7142857142857143, "obj2": 0.20690242937450085}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( MUR * ( ( Min( Max( MUR,( ( MUC / DS ) * ( MUC / MUM ) ) ) ,( RMSe / MLU ) ) / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.4020408163265306, "obj2": 0.5779302201319569}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUC ) ) * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7512852708525964}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( PN / PN ) ,( ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) * Min( BR ,( ( MDR * ( FirstVNF_RAM_Server / DDR ) ) + DDR ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( DS / Max( MUR,( MUR * Max( ( Max( MUC,RMSe ) / RRSe ),( RCSe - RRSe ) ) ) ) )", "obj1": 0.8081632653061225, "obj2": 0.13676146011623266}, {"determining": "( ( ( ACS * ACS ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( DDR + ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( DDR * PN ) ) ) ) * ( BR + MRS ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( ( RCSe * RMSe ) ,( Min( ( ( Min( RRSe ,MUC ) * ( MUR - MLU ) ) / CS ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) ) ) )", "obj1": 0.8142857142857143, "obj2": 0.12973745575669174}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( Min( PN ,PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( DS / Max( MUR,( MUR * Max( MUC,( RCSe - RRSe ) ) ) ) )", "obj1": 0.8061224489795918, "obj2": 0.1387357862321308}, {"determining": "( ( FirstVNF_Mem * Max( ( PN - ( Const * ( ( FirstVNF_RAM_Server + ARS ) - ( ( FirstVNF_Mem / ACS ) / Const ) ) ) ),CRS ) ) * Min( DDR ,MRS ) )", "choosing": "Min( Min( ( ( ( ( RMSe * RMSe ) * Max( ( MUR * Min( MUR ,CS ) ),DS ) ) + ( RCSe + MUM ) ) * DS ) ,CS ) ,( RCSe - Min( ( Min( ( Min( ( MUR * RRSe ) ,MUC ) / CS ) ,MUC ) * RCSe ) ,Max( ( ( RMSe / ( CS - RMSe ) ) - ( MLU / Max( RRSe,( RCSe * MUM ) ) ) ),MLU ) ) ) )", "obj1": 0.4, "obj2": 0.5787581574559135}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( ( FirstVNF_Mem + ( FirstVNF_CPU / ( AMS * Const ) ) ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) / Max( DDR,FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( RCSe - RCSe ) ,( MUR * MUR ) ) - Min( Min( DS ,Min( Min( ( Max( DS,RCSe ) - RRSe ) ,MUR ) ,( MUM * RRSe ) ) ) ,( MUC - RRSe ) ) ) - ( MLU * Max( MUC,Min( MUC ,( Min( RCSe ,( Min( MUR ,MUM ) * ( CS - MUR ) ) ) * Min( MUM ,RRSe ) ) ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.021938267801514085}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( AMS - ( Max( FirstVNF_Mem_Server,RRS ) / FirstVNF_Mem_Server ) ) + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + MUC ) - ( CS + ( ( CS / MUC ) + CS ) ) ) + Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) )", "obj1": 0.4775510204081633, "obj2": 0.48337363117441823}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - ( PN / FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( DDR * PN ) ) + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( Max( MUC,MUR ) * ( RCSe * MUC ) ) ) / ( MUC / ( ( DS - ( RRSe / MUC ) ) - ( Min( RMSe ,MUC ) - RMSe ) ) ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.1278090215406991}, {"determining": "( ( Const - ( ( PN * Const ) + RRS ) ) * ( Max( BR,DDR ) / Min( ( ( Const - ( Const / AMS ) ) * ARS ) ,RRS ) ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( ( MUC + ( Max( DS,( MLU - Min( MLU ,( CS - MUC ) ) ) ) * Max( CS,MUM ) ) ) / ( DS - MLU ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( BR * MDR ) - ( FirstVNF_Mem_Server + ( Max( BR,Max( ( DDR * FirstVNF_CPU ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ,Min( Max( DDR,DDR ) ,( ( CRS * FirstVNF_Mem ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MLU * RMSe ) - MLU ) / ( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - RRSe ) ) ) - ( RMSe / DS ) )", "obj1": 0.9040816326530612, "obj2": 0.044576292118664075}, {"determining": "( ( DDR + FirstVNF_RAM ) * ( ACS * MRS ) )", "choosing": "( Max( ( MUR * RRSe ),Max( MUR,MUC ) ) * ( DS + RRSe ) )", "obj1": 0.22653061224489796, "obj2": 0.7509165061698968}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) + ( Const + DDR ) )", "choosing": "( Min( ( ( MUM * RRSe ) / MUC ) ,MUM ) / ( ( MUM - Max( ( MUR + MUC ),( Max( MUM,MLU ) / ( ( Max( MUR,RMSe ) * Min( MUM ,DS ) ) + ( Max( DS,CS ) - MUC ) ) ) ) ) + ( MUR + MUR ) ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( CS ,( RCSe / Min( Min( MUC ,CS ) ,MUM ) ) ) / MUR ) - ( MUC / MUM ) )", "obj1": 0.9448979591836735, "obj2": 0.02854180898678828}, {"determining": "( ( FirstVNF_RAM_Server - ( PN - ( AMS + BR ) ) ) * ( Const / ( DDR + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( DS * MLU ) / Min( ( RMSe / MUC ) ,MUM ) ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( Min( ( ( ( MUM - DS ) - MUR ) * ( ( MLU - CS ) - ( Max( MUM,MLU ) - CS ) ) ) ,MUM ) ,MUM ) ) )", "obj1": 0.4142857142857143, "obj2": 0.5554831475166735}, {"determining": "Min( Min( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ) ,( ( PN - CRS ) - Const ) ) ,Min( Max( Const,MDR ) ,Max( DDR,DDR ) ) )", "choosing": "( ( ( Max( MUR,( ( MUR / ( ( MUR / CS ) * ( MUM / RMSe ) ) ) + Max( DS,MUM ) ) ) / ( MLU - ( ( RRSe * ( Max( DS,RRSe ) + DS ) ) * ( Max( MUC,MUR ) * ( MUC + MUC ) ) ) ) ) / MUR ) - ( ( ( ( DS * RMSe ) - Max( Max( RMSe,MUM ),RCSe ) ) + DS ) / MUM ) )", "obj1": 0.9469387755102041, "obj2": 0.023986538127100273}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ARS / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8845312571319146}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( BR / BR ) ) ),Const ) / FirstVNF_Mem ) ) ) / ( ( PN / CRS ) / Const ) )", "choosing": "Max( ( Min( MLU ,( Min( MUC ,MUC ) + MUM ) ) + Min( MUC ,( ( RCSe * MUM ) - Max( DS,CS ) ) ) ),Max( ( MUM / RCSe ),( Min( ( Max( ( ( RCSe / RRSe ) - CS ),( MUM / DS ) ) * ( RCSe / Min( RCSe ,RMSe ) ) ) ,MUR ) - CS ) ) )", "obj1": 0.936734693877551, "obj2": 0.028817008330802692}, {"determining": "( ( AMS * ( FirstVNF_CPU_Server / ( FirstVNF_RAM / BR ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( Max( Max( DS,MUR ),( ( MUM - RRSe ) / CS ) ) + Max( ( Max( RRSe,RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8394065596601764}, {"determining": "Min( Max( ( ( ( ( CRS / FirstVNF_RAM ) - RRS ) + MRS ) - Min( FirstVNF_RAM ,BR ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,( Max( ( DDR / ( DDR / FirstVNF_Mem_Server ) ),PN ) - MDR ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( Max( RCSe,DS ) + ( Min( ( RMSe + MUC ) ,Min( DS ,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / Max( CS,MUM ) ) ) ) ) / ( Max( DS,( MUM + Max( MUM,MUR ) ) ) / Max( ( MUC + Min( Min( MUR ,MUM ) ,CS ) ),( MUC - MUM ) ) ) )", "obj1": 0.9591836734693877, "obj2": 0.019382486026179487}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Max( Max( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ),ARS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - ( ( Max( DDR,( DDR - ARS ) ) - RRS ) * MDR ) ) ) + Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ) )", "choosing": "( DS / Max( MLU,MLU ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( RRS - PN ) ,( Min( ( PN * ACS ) ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( Max( DS,MUC ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU * RRS ) ) + BR ) / Const ) )", "choosing": "( Max( Max( MUC,MUC ),( ( DS * MUM ) / Min( ( RMSe / MUC ) ,MUM ) ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( Min( ( ( ( MUM - DS ) - MUR ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) ,MUM ) ) )", "obj1": 0.4142857142857143, "obj2": 0.5554831475166735}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( BR,Max( ( DDR * FirstVNF_CPU ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) - ( BR * MDR ) ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( ( ( MLU * RMSe ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - RRSe ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.03979198273076521}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / FirstVNF_Mem ) ) ) / ( ( PN / CRS ) / Const ) )", "choosing": "( MUR * ( ( Min( Max( MUR,( ( MUC / DS ) * ( MUC / MUM ) ) ) ,( RMSe / MLU ) ) / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.9959183673469387, "obj2": 0.002150840493376882}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8801457984827996}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "( ( PN - ( Min( ( ( CRS * ( BR - ( FirstVNF_RAM_Server + BR ) ) ) - DDR ) ,FirstVNF_CPU_Server ) * ( Min( Max( DDR,ARS ) ,Const ) / FirstVNF_Mem ) ) ) / ( MDR / FirstVNF_Mem ) )", "choosing": "Min( Max( ( Max( ( CS / MUM ),DS ) - ( MUC + Min( ( ( DS / ( MUM * MUR ) ) + ( RMSe + ( MUC - MUC ) ) ) ,RCSe ) ) ),RCSe ) ,( ( MUC + ( RCSe - ( Min( MLU ,( CS + RCSe ) ) * RRSe ) ) ) + ( CS - Min( DS ,( MUR + RCSe ) ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.01063306973262185}, {"determining": "( ( Const / FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( Min( BR ,( Min( PN ,ARS ) - ACS ) ) / ACS ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( RMSe * Min( Min( ( MUC - DS ) ,Min( RCSe ,RRSe ) ) ,RCSe ) ) ) ,DS ),( CS - RCSe ) ) )", "obj1": 0.1, "obj2": 0.8817032954300777}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_CPU / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ACS - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( DS / ( Min( ( ( MLU * Max( MUM,MUR ) ) / MLU ) ,( RCSe - ( RRSe / MLU ) ) ) / RCSe ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "Min( Max( ( DDR + AMS ),( ( FirstVNF_Mem + ( Max( BR,Max( ( MRS + FirstVNF_Mem_Server ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM * MRS ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( MUR + ( MUC * Min( RCSe ,MUC ) ) ) - Min( Min( MUR ,MUR ) ,( CS - ( ( MLU / ( Min( RRSe ,CS ) * ( MLU * ( MUC - RCSe ) ) ) ) - RCSe ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.04126006699067148}, {"determining": "Min( Max( ( DDR + AMS ),( ( FirstVNF_Mem + ( Max( BR,Max( ( DDR * FirstVNF_CPU ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) - ( BR * MDR ) ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( ( ( MLU * RMSe ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - RRSe ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( Max( ( MUR * CS ),RMSe ),MUM ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.04126006699067148}], "15": [{"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Max( ( AMS - Max( ( ( ( FirstVNF_CPU * MDR ) * FirstVNF_RAM ) * FirstVNF_Mem ),ARS ) ),DDR ) ) )", "choosing": "( ( Min( CS ,( ( RCSe + CS ) / MUC ) ) / MUR ) - ( ( MUC - RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Max( ( AMS - Max( ( ( ( MDR - BR ) - Max( BR,AMS ) ) * FirstVNF_Mem ),ARS ) ),DDR ) ) )", "choosing": "( ( Min( CS ,( RCSe * CS ) ) / MUR ) - ( MUC / ( MUC - ( CS * ( MLU / ( MLU - Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8958148423992437}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * Min( BR ,FirstVNF_CPU_Server ) ),ARS ) ) / Max( CRS,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - ( ( MUR * DS ) - ( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUC * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5306122448979592, "obj2": 0.37219404487375884}, {"determining": "( ( AMS - Max( ( ( DDR - Min( MDR ,DDR ) ) * FirstVNF_Mem ),Max( FirstVNF_Mem_Server,ACS ) ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RRSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - MUM ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6396053273337301}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.30532402512547024}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( AMS - Max( ( Max( Min( MDR ,FirstVNF_CPU ),DDR ) * ( PN / FirstVNF_Mem ) ),Const ) ) / ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( ( MLU + ( ( RCSe * DS ) * RCSe ) ) / MUC ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - RRSe ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( RMSe / MUM ) * MUM ) ) - MUR ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.679292893601322}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) ) * ( Const / BR ) )", "choosing": "( Min( ( ( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - DS ) - MUR ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) / Max( MUR,CS ) )", "obj1": 0.5224489795918368, "obj2": 0.4282918925864325}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,( ( CS * RCSe ) - ( MUM - RCSe ) ) )", "obj1": 0.6346938775510204, "obj2": 0.28397960378299636}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - RRS ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( CS * MUR ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4306122448979592, "obj2": 0.49772733909853323}, {"determining": "Min( AMS ,( ( ( ( ( DDR - ( FirstVNF_CPU_Server + ( PN - BR ) ) ) - PN ) * ARS ) - ( FirstVNF_CPU + PN ) ) - Max( FirstVNF_CPU,Const ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( ( ( ( ( MLU + ( MUM + RMSe ) ) + DS ) - ( ( CS + RCSe ) + DS ) ) / Min( MUM ,MUR ) ) / MUC ) / Min( MLU ,MLU ) ) )", "obj1": 0.8612244897959184, "obj2": 0.11979230494467584}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) )", "choosing": "( MUR * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.42653061224489797, "obj2": 0.5428318592174833}, {"determining": "( ( AMS - Max( Min( Min( ARS ,FirstVNF_Mem ) ,Min( BR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( RMSe + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - ( RMSe * Min( MLU ,MUM ) ) ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5904940164180497}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) + ( Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) * Max( ( ARS / FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( MUR * ( ( RMSe - CS ) + Max( ( CS * ( Max( RMSe,( MUR + ( DS / CS ) ) ) - MLU ) ),( DS / MUM ) ) ) )", "obj1": 0.636734693877551, "obj2": 0.27030808835089826}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,MUR ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.44285714285714284, "obj2": 0.4837218763889074}, {"determining": "( ( ( AMS - Max( ( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) ) * ( Const / BR ) )", "choosing": "( Min( ( ( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - DS ) - ( ( Min( ( RCSe - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) ) ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) / Max( MUR,CS ) )", "obj1": 0.5040816326530613, "obj2": 0.44326049456855193}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),( ACS - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) / Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) ) ,Max( ( CRS + DDR ),Const ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( RCSe - MLU ) ) - Min( ( MUR / MUC ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * ( MUR - ( RRSe + ( ( RMSe / MUC ) / ( ( MUR + RMSe ) * ( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.9, "obj2": 0.04742435034615194}, {"determining": "( ( RRS + FirstVNF_RAM_Server ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( MRS ,( BR * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( MUC ,Min( ( MLU + ( RRSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( ( ( MLU / MUC ) / MUM ) - ( ( RMSe * RCSe ) + ( RCSe * CS ) ) ) ),MUC ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM - ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( ( MLU * RMSe ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - RRSe ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.7387755102040816, "obj2": 0.18858422355380797}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + ( Const - FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,MLU ) / Max( Min( MUM ,DS ),MUM ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "( Max( Const,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) * ( ARS + Min( ( PN + ( FirstVNF_CPU_Server - CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RMSe - Min( MUC ,RRSe ) ),( MUC - RMSe ) )", "obj1": 0.38571428571428573, "obj2": 0.578842040318999}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ) ) / ( MRS / Const ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.5020408163265306, "obj2": 0.4678885213463412}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( FirstVNF_RAM_Server * ACS ) / ( Max( Max( BR,FirstVNF_CPU ),ACS ) - Min( ( FirstVNF_CPU_Server + ( RRS / Const ) ) ,PN ) ) )", "choosing": "Min( ( ( RMSe + MUM ) - MUR ) ,( RMSe + ( MUC / ( ( ( Max( MUM,MUM ) * ( MUC - RRSe ) ) / RCSe ) * Min( Max( Min( CS ,Max( RMSe,RCSe ) ),Min( Min( MUM ,MUM ) ,( MUC / RRSe ) ) ) ,( ( MUM / Min( MUC ,MLU ) ) / ( ( MUC + DS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.7551020408163265, "obj2": 0.15842251377714275}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * ( ( FirstVNF_Mem + Const ) * ( Const / BR ) ) ) )", "choosing": "( ( Max( ( ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) - MLU ),( Max( ( ( RCSe / RRSe ) - CS ),( MUM / DS ) ) * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.7224489795918367, "obj2": 0.19784561765034173}, {"determining": "( ( ( MRS + BR ) * ( FirstVNF_Mem - Max( CRS,CRS ) ) ) / Max( FirstVNF_Mem,Min( RRS ,( ( Const * ARS ) + ( RRS * CRS ) ) ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ,DS ) ,( ( MLU * ( RRSe * CS ) ) / RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7668085800527091}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / ( ( MLU + Min( RMSe ,( RCSe - RRSe ) ) ) + ( ( ( MLU - DS ) + ( MLU - RMSe ) ) * Max( CS,DS ) ) ) ) * MLU ) / Min( MUM ,( RMSe / MUR ) ) )", "obj1": 0.8285714285714286, "obj2": 0.1275042004103305}, {"determining": "( ( AMS - ( ACS * FirstVNF_Mem_Server ) ) + Min( CRS ,MRS ) )", "choosing": "( Max( DS,MUM ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUR - DS ) ) / MUR ) ) )", "obj1": 0.8530612244897959, "obj2": 0.12401229005242755}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - ( ( MDR / FirstVNF_RAM_Server ) + ACS ) ) + ( ( FirstVNF_RAM / Min( PN ,FirstVNF_Mem ) ) * CRS ) )", "choosing": "( ( ( MUM / MUR ) * RMSe ) / ( ( ( Min( RRSe ,( CS * RMSe ) ) * ( ( MUR - Min( Max( RMSe,MLU ) ,Max( MUC,MLU ) ) ) + DS ) ) + ( MUM + MUC ) ) + RMSe ) )", "obj1": 0.6714285714285714, "obj2": 0.2381269419807639}, {"determining": "( ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) * ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUM / RMSe ) / ( RRSe + CS ) ) / Min( MUR ,CS ) )", "obj1": 0.17959183673469387, "obj2": 0.7877494956817555}, {"determining": "( Max( ( CRS - MRS ),FirstVNF_CPU ) * ( Const / BR ) )", "choosing": "( Min( ( ( ( MUM - DS ) - MUR ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) / ( RCSe + ( ( ( ( ( DS + MUR ) - ( Max( DS,MLU ) - ( RCSe / MUR ) ) ) / CS ) / ( RRSe + RCSe ) ) - Max( DS,( RMSe - MUM ) ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.7593079729529636}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + Min( RRS ,( DDR + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUR * ( ( MLU + MUC ) / ( RRSe + CS ) ) )", "obj1": 0.4061224489795918, "obj2": 0.5661436542797085}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( AMS - ( Max( FirstVNF_Mem_Server,RRS ) / FirstVNF_Mem_Server ) ) + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + MUC ) - ( CS + ( ( CS / MUC ) + CS ) ) ) + Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) )", "obj1": 0.4775510204081633, "obj2": 0.48337363117441823}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( RRS - PN ) ,( Min( ( PN * ACS ) ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( Max( DS,MUC ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( ( DS + MLU ) - ( CS / MUC ) ) ,( ( CS * RRSe ) + ( MUR * MUR ) ) ) / MUM ) ,( DS + MUM ) )", "obj1": 0.7959183673469388, "obj2": 0.14168448138097578}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / ( Min( MDR ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8168286216329899}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7428571428571429, "obj2": 0.1664925546105228}, {"determining": "Min( Max( Min( ( ACS - DDR ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( ( FirstVNF_CPU * RRS ) * Max( BR,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) ) ) - ( BR * MDR ) ) ) ,( Const * MDR ) )", "choosing": "( ( Min( ( MLU - ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( Max( ( RRSe / RCSe ),Min( RMSe ,MUM ) ) ,CS ) ) ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - CS ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9183673469387755, "obj2": 0.03714461229246687}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM + ACS ) + ACS ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - Max( CS,RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,CS ) )", "obj1": 0.16122448979591836, "obj2": 0.8254481062142297}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.9346938775510204, "obj2": 0.03205220282591535}, {"determining": "Min( Max( Min( ( ARS / RRS ) ,( ACS + ACS ) ),( ( FirstVNF_Mem + Max( Max( Const,FirstVNF_Mem_Server ),FirstVNF_RAM ) ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,PN ) / Max( DDR,FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( ( Max( Min( ( Min( Min( CS ,RRSe ) ,( DS + MUC ) ) - ( ( RCSe + RMSe ) * RMSe ) ) ,( DS * MUM ) ),MLU ) - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( CS / MUC ) ) + MUM ) ) * ( Max( RMSe,RCSe ) * DS ) ),RRSe ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7807894345175307}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8879560768570286}, {"determining": "( ( Min( ( FirstVNF_CPU - ( ( RRS + ( ACS + MRS ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) - FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + Max( PN,MDR ) ) ) * ( ( FirstVNF_CPU + RRS ) * FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) + ( ( CRS * FirstVNF_Mem_Server ) - AMS ) )", "choosing": "Max( ( RMSe * RMSe ),Min( Min( ( RMSe * Min( Max( ( Min( CS ,CS ) - RRSe ),MUC ) ,MLU ) ) ,( RRSe * CS ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / DS ) ) + MUM ) ) * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUM + MLU ) / Min( MLU ,MUR ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "( ( Min( Min( ( ACS + MDR ) ,MRS ) ,ARS ) + ( ( BR * ( FirstVNF_Mem - Min( ( MDR + ( AMS / CRS ) ) ,Const ) ) ) - FirstVNF_CPU_Server ) ) * Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( CS - ( ( MUM - Max( MLU,RMSe ) ) / RCSe ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8433184526280625}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.861849297665582}, {"determining": "( ( PN - ( Max( CRS,MDR ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / MDR ) ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Min( Max( MUR,( MUC / ( RCSe * Max( MLU,( MUM / MUC ) ) ) ) ) ,( ( ( MLU - MUR ) - RRSe ) / MLU ) ) )", "obj1": 0.9918367346938776, "obj2": 0.004246300215538529}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "( ( ( ACS * Max( CRS,( ( FirstVNF_CPU_Server - ARS ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( Min( MRS ,Const ) / Max( ( FirstVNF_CPU / CRS ),Const ) ) + ACS ) ) ,( Max( ( FirstVNF_CPU_Server + DDR ),BR ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( Min( MUM ,( ( CS * DS ) * RRSe ) ) / MLU ) ,Max( ( ( CS - ( RRSe + MLU ) ) - MUM ),RMSe ) ) )", "obj1": 0.7857142857142857, "obj2": 0.14903970842639896}, {"determining": "( Min( MDR ,CRS ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * AMS ) ) )", "choosing": "( ( MUM / ( RCSe + Max( Max( MUM,RMSe ),Max( MUM,DS ) ) ) ) / Min( CS ,MUR ) )", "obj1": 0.19387755102040816, "obj2": 0.7830444955490073}, {"determining": "( Min( ARS ,( AMS + ACS ) ) / ( ( ( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + AMS ) ) * Const ) ) - DDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( ( ( DS - CS ) - MUR ),CS ) / ( ( ( ( MLU - ( ( MUC / Min( CS ,MUM ) ) + RCSe ) ) * Min( RCSe ,CS ) ) - MLU ) - MUC ) )", "obj1": 0.9714285714285714, "obj2": 0.012238172698020206}, {"determining": "Min( Min( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ) ,( ( PN - CRS ) - Const ) ) ,Min( Max( Const,MDR ) ,Max( DDR,DDR ) ) )", "choosing": "( ( ( Max( MUR,( ( MUR / ( ( MUR / CS ) * ( MUM / RMSe ) ) ) + Max( DS,MUM ) ) ) / ( MLU - ( ( RRSe * ( Max( DS,RRSe ) + DS ) ) * ( Max( MUC,MUR ) * ( MUC + MUC ) ) ) ) ) / MUR ) - ( ( ( ( DS * RMSe ) - Max( Max( RMSe,MUM ),RCSe ) ) + DS ) / MUM ) )", "obj1": 0.9469387755102041, "obj2": 0.023986538127100273}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( ( ( Const * FirstVNF_RAM ) - FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( RRSe,MUM ) ) ) + RCSe ),( RRSe + MUC ) ) + Max( ( Min( ( MUM * ( ( DS / MUC ) + DS ) ) ,RMSe ) / CS ),( RRSe - MUC ) ) )", "obj1": 0.49387755102040815, "obj2": 0.47924861203519736}, {"determining": "Min( Min( Min( BR ,( Min( Min( ARS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( DDR - FirstVNF_CPU ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( ( MUC / CS ) / RRSe ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7297705964538184}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "( ( FirstVNF_CPU_Server / ( ( Min( BR ,AMS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) / PN ) ) ) * Min( PN ,BR ) ) ) * ( FirstVNF_CPU - FirstVNF_CPU ) )", "choosing": "Max( ( ( MUM - DS ) / ( Min( CS ,( MUC * DS ) ) * RRSe ) ),Min( ( DS + ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - ( RMSe + DS ) ) ) ,MLU ) ) ) ,( ( RRSe / ( DS / MUC ) ) - ( MUM * Max( ( Min( ( CS / MUM ) ,MUC ) / ( Max( DS,RCSe ) - RMSe ) ),( RRSe * CS ) ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7308844164389094}, {"determining": "Min( Min( Min( BR ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7461940789289293}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7489795918367347, "obj2": 0.16108160475962438}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( BR / BR ) ) ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / FirstVNF_Mem ) ) ) / ( ( PN / CRS ) / FirstVNF_Mem ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.936734693877551, "obj2": 0.028419893462602135}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( DDR * PN ) ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.15918367346938775, "obj2": 0.838221209230279}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( FirstVNF_CPU_Server / BR ) / BR ) ) )", "choosing": "( Max( ( Min( Min( RRSe ,MUR ) ,( ( MUR / ( MUC + RRSe ) ) / Max( DS,( CS + RRSe ) ) ) ) - CS ),( MUM / DS ) ) + CS )", "obj1": 0.12653061224489795, "obj2": 0.8589673024473602}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - Min( Const ,RRS ) ) ,( ( ( FirstVNF_CPU_Server + DDR ) - BR ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( RRSe - ( Min( RRSe ,MUC ) - RMSe ) ) ) - MLU ),( Min( RCSe ,( ( DS + MUR ) * ( RRSe * MUM ) ) ) * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.7142857142857143, "obj2": 0.20690242937450085}, {"determining": "Min( Max( Min( ( PN - ( Max( AMS,PN ) / Max( ( DDR / MDR ),FirstVNF_Mem_Server ) ) ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server + Min( ( AMS / DDR ) ,PN ) ) + Min( Const ,( FirstVNF_CPU / CRS ) ) ) + CRS ) * FirstVNF_CPU_Server ) ,Min( BR ,( ( PN / Min( DDR ,Max( ( PN / DDR ),( MRS + FirstVNF_CPU ) ) ) ) / ( CRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RMSe,MUM ) + ( DS - ( MLU - RRSe ) ) )", "obj1": 0.9612244897959183, "obj2": 0.017141212660118595}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( MUR * ( ( Min( Max( MUR,( ( MUC / DS ) * ( MUC / MUM ) ) ) ,( RMSe / MLU ) ) / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.4020408163265306, "obj2": 0.5779302201319569}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUC ) ) * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7512852708525964}, {"determining": "( ( AMS - ( ACS * FirstVNF_Mem_Server ) ) + Min( CRS ,MRS ) )", "choosing": "( Max( DS,MUM ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUR - DS ) ) / MUR ) ) )", "obj1": 0.24285714285714285, "obj2": 0.7423463239785516}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( ( Max( Max( DDR,DDR ),Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) )", "choosing": "Max( ( Min( MLU ,( Min( MUC ,MUC ) + MUM ) ) + Min( MUC ,( ( RCSe * MUM ) - Max( DS,( MUM * Max( MLU,RMSe ) ) ) ) ) ),( ( Min( MUM ,MUR ) - CS ) * ( MUM / RCSe ) ) )", "obj1": 0.4897959183673469, "obj2": 0.4831683535284944}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( PN / PN ) ,( ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) * Min( BR ,( ( MDR * ( FirstVNF_RAM_Server / DDR ) ) + DDR ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( DS / Max( MUR,( MUR * Max( ( Max( MUC,RMSe ) / RRSe ),( RCSe - RRSe ) ) ) ) )", "obj1": 0.8081632653061225, "obj2": 0.13676146011623266}, {"determining": "( ( ( ACS * ACS ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( DDR + ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( DDR * PN ) ) ) ) * ( BR + MRS ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( ( RCSe * RMSe ) ,( Min( ( ( Min( RRSe ,MUC ) * ( MUR - MLU ) ) / CS ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) ) ) )", "obj1": 0.8142857142857143, "obj2": 0.12973745575669174}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( Min( PN ,PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( DS / Max( MUR,( MUR * Max( MUC,( RCSe - RRSe ) ) ) ) )", "obj1": 0.8061224489795918, "obj2": 0.1387357862321308}, {"determining": "( ( FirstVNF_Mem * Max( ( PN - ( Const * ( ( FirstVNF_RAM_Server + ARS ) - ( ( FirstVNF_Mem / ACS ) / Const ) ) ) ),CRS ) ) * Min( DDR ,MRS ) )", "choosing": "Min( Min( ( ( ( ( RMSe * RMSe ) * Max( ( MUR * Min( MUR ,CS ) ),DS ) ) + ( RCSe + MUM ) ) * DS ) ,CS ) ,( RCSe - Min( ( Min( ( Min( ( MUR * RRSe ) ,MUC ) / CS ) ,MUC ) * RCSe ) ,Max( ( ( RMSe / ( CS - RMSe ) ) - ( MLU / Max( RRSe,( RCSe * MUM ) ) ) ),MLU ) ) ) )", "obj1": 0.4, "obj2": 0.5787581574559135}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( ( FirstVNF_Mem + ( FirstVNF_CPU / ( AMS * Const ) ) ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) / Max( DDR,FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( RCSe - RCSe ) ,( MUR * MUR ) ) - Min( Min( DS ,Min( Min( ( Max( DS,RCSe ) - RRSe ) ,MUR ) ,( MUM * RRSe ) ) ) ,( MUC - RRSe ) ) ) - ( MLU * Max( MUC,Min( MUC ,( Min( RCSe ,( Min( MUR ,MUM ) * ( CS - MUR ) ) ) * Min( MUM ,RRSe ) ) ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.021938267801514085}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - ( PN / FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( DDR * PN ) ) + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( Max( MUC,MUR ) * ( RCSe * MUC ) ) ) / ( MUC / ( ( DS - ( RRSe / MUC ) ) - ( Min( RMSe ,MUC ) - RMSe ) ) ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.1278090215406991}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( BR * MDR ) - ( FirstVNF_Mem_Server + ( Max( BR,Max( ( DDR * FirstVNF_CPU ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ,Min( Max( DDR,DDR ) ,( ( CRS * FirstVNF_Mem ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MLU * RMSe ) - MLU ) / ( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - RRSe ) ) ) - ( RMSe / DS ) )", "obj1": 0.9040816326530612, "obj2": 0.044576292118664075}, {"determining": "( ( Const - ( ( PN * Const ) + RRS ) ) * ( Max( BR,DDR ) / Min( ( ( Const - ( Const / AMS ) ) * ARS ) ,RRS ) ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( ( MUC + ( Max( DS,( MLU - Min( MLU ,( CS - MUC ) ) ) ) * Max( CS,MUM ) ) ) / ( DS - MLU ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ARS / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8845312571319146}, {"determining": "( ( DDR + FirstVNF_RAM ) * ( ACS * MRS ) )", "choosing": "( Max( ( MUR * RRSe ),Max( MUR,MUC ) ) * ( DS + RRSe ) )", "obj1": 0.22653061224489796, "obj2": 0.7509165061698968}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) + ( Const + DDR ) )", "choosing": "( Min( ( ( MUM * RRSe ) / MUC ) ,MUM ) / ( ( MUM - Max( ( MUR + MUC ),( Max( MUM,MLU ) / ( ( Max( MUR,RMSe ) * Min( MUM ,DS ) ) + ( Max( DS,CS ) - MUC ) ) ) ) ) + ( MUR + MUR ) ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU * RRS ) ) + BR ) / Const ) )", "choosing": "( Max( Max( MUC,MUC ),( ( DS * MUM ) / Min( ( RMSe / MUC ) ,MUM ) ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( Min( ( ( ( MUM - DS ) - MUR ) + ( ( MLU - CS ) - ( DS - RRSe ) ) ) ,MUM ) ,MUM ) ) )", "obj1": 0.4142857142857143, "obj2": 0.5554831475166735}, {"determining": "( ( AMS * ( FirstVNF_CPU_Server / ( FirstVNF_RAM / BR ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( Max( Max( DS,MUR ),( ( MUM - RRSe ) / CS ) ) + Max( ( Max( RRSe,RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8394065596601764}, {"determining": "Min( Max( ( ( ( ( CRS / FirstVNF_RAM ) - RRS ) + MRS ) - Min( FirstVNF_RAM ,BR ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,( Max( ( DDR / ( DDR / FirstVNF_Mem_Server ) ),PN ) - MDR ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( Max( RCSe,DS ) + ( Min( ( RMSe + MUC ) ,Min( DS ,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / Max( CS,MUM ) ) ) ) ) / ( Max( DS,( MUM + Max( MUM,MUR ) ) ) / Max( ( MUC + Min( Min( MUR ,MUM ) ,CS ) ),( MUC - MUM ) ) ) )", "obj1": 0.9591836734693877, "obj2": 0.019382486026179487}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_CPU / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ACS - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( DS / ( Min( ( ( MLU * Max( MUM,MUR ) ) / MLU ) ,( RCSe - ( RRSe / MLU ) ) ) / RCSe ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( AMS - ( Max( FirstVNF_Mem_Server,RRS ) / FirstVNF_Mem_Server ) ) + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + MUC ) - ( CS + ( ( CS / MUC ) + CS ) ) ) + Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) )", "obj1": 0.4775510204081633, "obj2": 0.48337363117441823}, {"determining": "( ( ( MRS + BR ) * ( FirstVNF_Mem - Max( CRS,CRS ) ) ) / Max( FirstVNF_Mem,Min( RRS ,( ( Const * Max( DDR,BR ) ) + ( FirstVNF_RAM * CRS ) ) ) ) )", "choosing": "Max( Min( Min( ( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ,DS ) ,( ( MLU * ( RRSe * CS ) ) / RMSe ) ),( Max( MUC,MUR ) * Max( DS,MUR ) ) )", "obj1": 0.23877551020408164, "obj2": 0.742621691537095}, {"determining": "( ( FirstVNF_RAM_Server - ( PN - ( AMS + BR ) ) ) * ( Const / ( DDR + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( DS * MLU ) / Min( ( RMSe / MUC ) ,MUM ) ) ) + Min( Max( ( MUR * CS ),RMSe ) ,Min( Min( ( ( ( MUM - DS ) - MUR ) * ( ( MLU - CS ) - ( Max( MUM,MLU ) - CS ) ) ) ,MUM ) ,MUM ) ) )", "obj1": 0.4142857142857143, "obj2": 0.5554831475166735}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( ( Const / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ),BR ) * ( AMS + AMS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.010545523950770025}, {"determining": "( Min( PN ,( ( RRS + MDR ) * Min( ARS ,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem + FirstVNF_RAM ) )", "choosing": "Min( ( DS * MUM ) ,( MUR - MUC ) )", "obj1": 0.7428571428571429, "obj2": 0.1664925546105228}, {"determining": "( Min( FirstVNF_CPU ,RRS ) + ( FirstVNF_CPU + Const ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS / ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( ( ( CS + RCSe ) + ( Min( DS ,MLU ) / MLU ) ) - ( RCSe / MUM ) ) ,( RMSe - MUR ) ),CS ) )", "obj1": 0.1, "obj2": 0.8802435212133923}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( ( ( Min( MDR ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU * RRS ) ) + BR ) / Const ) )", "choosing": "( Max( ( ( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,RRSe ) ) + RCSe ),( RRSe + MUC ) ) + Max( ( Min( ( MUM * ( ( DS / MUC ) + DS ) ) ,RMSe ) / CS ),( RRSe - MUC ) ) )", "obj1": 0.49183673469387756, "obj2": 0.47993060305778146}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Max( Max( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ),ARS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - ( ( Max( DDR,( DDR - ARS ) ) - RRS ) * MDR ) ) ) + Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ) )", "choosing": "( DS / Max( MLU,MLU ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "Min( Max( ( DDR + AMS ),( ( FirstVNF_Mem + ( Max( BR,Max( ( MRS + FirstVNF_Mem_Server ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM * MRS ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( MUR + ( MUC * Min( RCSe ,MUC ) ) ) - Min( Min( MUR ,MUR ) ,( CS - ( ( MLU / ( Min( RRSe ,CS ) * ( MLU * ( MUC - RCSe ) ) ) ) - RCSe ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.04126006699067148}], "16": [{"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Max( ( AMS - Max( ( ( ( FirstVNF_CPU * MDR ) * FirstVNF_RAM ) * FirstVNF_Mem ),ARS ) ),DDR ) ) )", "choosing": "( ( Min( CS ,( ( RCSe + CS ) / MUC ) ) / MUR ) - ( ( MUC - RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Max( ( AMS - Max( ( ( ( MDR - BR ) - Max( BR,AMS ) ) * FirstVNF_Mem ),ARS ) ),DDR ) ) )", "choosing": "( ( Min( CS ,( RCSe * CS ) ) / MUR ) - ( MUC / ( MUC - ( CS * ( MLU / ( MLU - Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8958148423992437}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * Min( BR ,FirstVNF_CPU_Server ) ),ARS ) ) / Max( CRS,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - ( ( MUR * DS ) - ( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUC * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5306122448979592, "obj2": 0.37219404487375884}, {"determining": "( ( AMS - Max( ( ( DDR - Min( MDR ,DDR ) ) * FirstVNF_Mem ),Max( FirstVNF_Mem_Server,ACS ) ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RRSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - MUM ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6396053273337301}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.30532402512547024}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( AMS - Max( ( Max( Min( MDR ,FirstVNF_CPU ),DDR ) * ( PN / FirstVNF_Mem ) ),Const ) ) / ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( ( MLU + ( ( RCSe * DS ) * RCSe ) ) / MUC ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - RRSe ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( RMSe / MUM ) * MUM ) ) - MUR ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.679292893601322}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,( ( CS * RCSe ) - ( MUM - RCSe ) ) )", "obj1": 0.6346938775510204, "obj2": 0.28397960378299636}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - RRS ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( CS * MUR ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4306122448979592, "obj2": 0.49772733909853323}, {"determining": "Min( AMS ,( ( ( ( ( DDR - ( FirstVNF_CPU_Server + ( PN - BR ) ) ) - PN ) * ARS ) - ( FirstVNF_CPU + PN ) ) - Max( FirstVNF_CPU,Const ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( ( ( ( ( MLU + ( MUM + RMSe ) ) + DS ) - ( ( CS + RCSe ) + DS ) ) / Min( MUM ,MUR ) ) / MUC ) / Min( MLU ,MLU ) ) )", "obj1": 0.8612244897959184, "obj2": 0.11979230494467584}, {"determining": "( ( AMS - Max( Min( Min( ARS ,FirstVNF_Mem ) ,Min( BR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( RMSe + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - ( RMSe * Min( MLU ,MUM ) ) ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5904940164180497}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) + ( Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) * Max( ( ARS / FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( MUR * ( ( RMSe - CS ) + Max( ( CS * ( Max( RMSe,( MUR + ( DS / CS ) ) ) - MLU ) ),( DS / MUM ) ) ) )", "obj1": 0.636734693877551, "obj2": 0.27030808835089826}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,MUR ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.44285714285714284, "obj2": 0.4837218763889074}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),( ACS - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) / Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) ) ,Max( ( CRS + DDR ),Const ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( RCSe - MLU ) ) - Min( ( MUR / MUC ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * ( MUR - ( RRSe + ( ( RMSe / MUC ) / ( ( MUR + RMSe ) * ( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.9, "obj2": 0.04742435034615194}, {"determining": "( ( RRS + FirstVNF_RAM_Server ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( MRS ,( BR * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( MUC ,Min( ( MLU + ( RRSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( ( ( MLU / MUC ) / MUM ) - ( ( RMSe * RCSe ) + ( RCSe * CS ) ) ) ),MUC ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM - ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + ( Const - FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,MLU ) / Max( Min( MUM ,DS ),MUM ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "( Max( Const,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) * ( ARS + Min( ( PN + ( FirstVNF_CPU_Server - CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RMSe - Min( MUC ,RRSe ) ),( MUC - RMSe ) )", "obj1": 0.38571428571428573, "obj2": 0.578842040318999}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( FirstVNF_RAM_Server * ACS ) / ( Max( Max( BR,FirstVNF_CPU ),ACS ) - Min( ( FirstVNF_CPU_Server + ( RRS / Const ) ) ,PN ) ) )", "choosing": "Min( ( ( RMSe + MUM ) - MUR ) ,( RMSe + ( MUC / ( ( ( Max( MUM,MUM ) * ( MUC - RRSe ) ) / RCSe ) * Min( Max( Min( CS ,Max( RMSe,RCSe ) ),Min( Min( MUM ,MUM ) ,( MUC / RRSe ) ) ) ,( ( MUM / Min( MUC ,MLU ) ) / ( ( MUC + DS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.7551020408163265, "obj2": 0.15842251377714275}, {"determining": "( ( ( MRS + BR ) * ( FirstVNF_Mem - Max( CRS,CRS ) ) ) / Max( FirstVNF_Mem,Min( RRS ,( ( Const * ARS ) + ( RRS * CRS ) ) ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ,DS ) ,( ( MLU * ( RRSe * CS ) ) / RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7668085800527091}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - ( ( MDR / FirstVNF_RAM_Server ) + ACS ) ) + ( ( FirstVNF_RAM / Min( PN ,FirstVNF_Mem ) ) * CRS ) )", "choosing": "( ( ( MUM / MUR ) * RMSe ) / ( ( ( Min( RRSe ,( CS * RMSe ) ) * ( ( MUR - Min( Max( RMSe,MLU ) ,Max( MUC,MLU ) ) ) + DS ) ) + ( MUM + MUC ) ) + RMSe ) )", "obj1": 0.6714285714285714, "obj2": 0.2381269419807639}, {"determining": "( ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) * ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUM / RMSe ) / ( RRSe + CS ) ) / Min( MUR ,CS ) )", "obj1": 0.17959183673469387, "obj2": 0.7877494956817555}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + Min( RRS ,( DDR + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUR * ( ( MLU + MUC ) / ( RRSe + CS ) ) )", "obj1": 0.4061224489795918, "obj2": 0.5661436542797085}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( RRS - PN ) ,( Min( ( PN * ACS ) ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( Max( DS,MUC ) ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / ( Min( MDR ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8168286216329899}, {"determining": "Min( Max( Min( ( ACS - DDR ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( ( FirstVNF_CPU * RRS ) * Max( BR,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) ) ) - ( BR * MDR ) ) ) ,( Const * MDR ) )", "choosing": "( ( Min( ( MLU - ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( Max( ( RRSe / RCSe ),Min( RMSe ,MUM ) ) ,CS ) ) ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - CS ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9183673469387755, "obj2": 0.03714461229246687}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM + ACS ) + ACS ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - Max( CS,RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,CS ) )", "obj1": 0.16122448979591836, "obj2": 0.8254481062142297}, {"determining": "Min( Max( Min( ( ARS / RRS ) ,( ACS + ACS ) ),( ( FirstVNF_Mem + Max( Max( Const,FirstVNF_Mem_Server ),FirstVNF_RAM ) ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,PN ) / Max( DDR,FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( ( Max( Min( ( Min( Min( CS ,RRSe ) ,( DS + MUC ) ) - ( ( RCSe + RMSe ) * RMSe ) ) ,( DS * MUM ) ),MLU ) - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( CS / MUC ) ) + MUM ) ) * ( Max( RMSe,RCSe ) * DS ) ),RRSe ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7807894345175307}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8879560768570286}, {"determining": "( ( Min( ( FirstVNF_CPU - ( ( RRS + ( ACS + MRS ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) - FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + Max( PN,MDR ) ) ) * ( ( FirstVNF_CPU + RRS ) * FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) + ( ( CRS * FirstVNF_Mem_Server ) - AMS ) )", "choosing": "Max( ( RMSe * RMSe ),Min( Min( ( RMSe * Min( Max( ( Min( CS ,CS ) - RRSe ),MUC ) ,MLU ) ) ,( RRSe * CS ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / DS ) ) + MUM ) ) * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( Min( Min( ( ACS + MDR ) ,MRS ) ,ARS ) + ( ( BR * ( FirstVNF_Mem - Min( ( MDR + ( AMS / CRS ) ) ,Const ) ) ) - FirstVNF_CPU_Server ) ) * Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( CS - ( ( MUM - Max( MLU,RMSe ) ) / RCSe ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8433184526280625}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.861849297665582}, {"determining": "( ( PN - ( Max( CRS,MDR ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / MDR ) ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Min( Max( MUR,( MUC / ( RCSe * Max( MLU,( MUM / MUC ) ) ) ) ) ,( ( ( MLU - MUR ) - RRSe ) / MLU ) ) )", "obj1": 0.9918367346938776, "obj2": 0.004246300215538529}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "( ( ( ACS * Max( CRS,( ( FirstVNF_CPU_Server - ARS ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( Min( MRS ,Const ) / Max( ( FirstVNF_CPU / CRS ),Const ) ) + ACS ) ) ,( Max( ( FirstVNF_CPU_Server + DDR ),BR ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( Min( MUM ,( ( CS * DS ) * RRSe ) ) / MLU ) ,Max( ( ( CS - ( RRSe + MLU ) ) - MUM ),RMSe ) ) )", "obj1": 0.7857142857142857, "obj2": 0.14903970842639896}, {"determining": "( Min( MDR ,CRS ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * AMS ) ) )", "choosing": "( ( MUM / ( RCSe + Max( Max( MUM,RMSe ),Max( MUM,DS ) ) ) ) / Min( CS ,MUR ) )", "obj1": 0.19387755102040816, "obj2": 0.7830444955490073}, {"determining": "( Min( ARS ,( AMS + ACS ) ) / ( ( ( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + AMS ) ) * Const ) ) - DDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( ( ( DS - CS ) - MUR ),CS ) / ( ( ( ( MLU - ( ( MUC / Min( CS ,MUM ) ) + RCSe ) ) * Min( RCSe ,CS ) ) - MLU ) - MUC ) )", "obj1": 0.9714285714285714, "obj2": 0.012238172698020206}, {"determining": "Min( Min( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ) ,( ( PN - CRS ) - Const ) ) ,Min( Max( Const,MDR ) ,Max( DDR,DDR ) ) )", "choosing": "( ( ( Max( MUR,( ( MUR / ( ( MUR / CS ) * ( MUM / RMSe ) ) ) + Max( DS,MUM ) ) ) / ( MLU - ( ( RRSe * ( Max( DS,RRSe ) + DS ) ) * ( Max( MUC,MUR ) * ( MUC + MUC ) ) ) ) ) / MUR ) - ( ( ( ( DS * RMSe ) - Max( Max( RMSe,MUM ),RCSe ) ) + DS ) / MUM ) )", "obj1": 0.9469387755102041, "obj2": 0.023986538127100273}, {"determining": "Min( Min( Min( BR ,( Min( Min( ARS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( DDR - FirstVNF_CPU ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( ( MUC / CS ) / RRSe ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7297705964538184}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "( ( FirstVNF_CPU_Server / ( ( Min( BR ,AMS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) / PN ) ) ) * Min( PN ,BR ) ) ) * ( FirstVNF_CPU - FirstVNF_CPU ) )", "choosing": "Max( ( ( MUM - DS ) / ( Min( CS ,( MUC * DS ) ) * RRSe ) ),Min( ( DS + ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - ( RMSe + DS ) ) ) ,MLU ) ) ) ,( ( RRSe / ( DS / MUC ) ) - ( MUM * Max( ( Min( ( CS / MUM ) ,MUC ) / ( Max( DS,RCSe ) - RMSe ) ),( RRSe * CS ) ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7308844164389094}, {"determining": "Min( Min( Min( BR ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7461940789289293}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7489795918367347, "obj2": 0.16108160475962438}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( BR / BR ) ) ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / FirstVNF_Mem ) ) ) / ( ( PN / CRS ) / FirstVNF_Mem ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.936734693877551, "obj2": 0.028419893462602135}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( FirstVNF_CPU_Server / BR ) / BR ) ) )", "choosing": "( Max( ( Min( Min( RRSe ,MUR ) ,( ( MUR / ( MUC + RRSe ) ) / Max( DS,( CS + RRSe ) ) ) ) - CS ),( MUM / DS ) ) + CS )", "obj1": 0.12653061224489795, "obj2": 0.8589673024473602}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - Min( Const ,RRS ) ) ,( ( ( FirstVNF_CPU_Server + DDR ) - BR ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( RRSe - ( Min( RRSe ,MUC ) - RMSe ) ) ) - MLU ),( Min( RCSe ,( ( DS + MUR ) * ( RRSe * MUM ) ) ) * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.7142857142857143, "obj2": 0.20690242937450085}, {"determining": "Min( Max( Min( ( PN - ( Max( AMS,PN ) / Max( ( DDR / MDR ),FirstVNF_Mem_Server ) ) ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server + Min( ( AMS / DDR ) ,PN ) ) + Min( Const ,( FirstVNF_CPU / CRS ) ) ) + CRS ) * FirstVNF_CPU_Server ) ,Min( BR ,( ( PN / Min( DDR ,Max( ( PN / DDR ),( MRS + FirstVNF_CPU ) ) ) ) / ( CRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RMSe,MUM ) + ( DS - ( MLU - RRSe ) ) )", "obj1": 0.9612244897959183, "obj2": 0.017141212660118595}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( MUR * ( ( Min( Max( MUR,( ( MUC / DS ) * ( MUC / MUM ) ) ) ,( RMSe / MLU ) ) / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.4020408163265306, "obj2": 0.5779302201319569}, {"determining": "( ( AMS - ( ACS * FirstVNF_Mem_Server ) ) + Min( CRS ,MRS ) )", "choosing": "( Max( DS,MUM ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( MUR - DS ) ) / MUR ) ) )", "obj1": 0.24285714285714285, "obj2": 0.7423463239785516}, {"determining": "( ( FirstVNF_Mem * Max( ( PN - ( Const * ( ( FirstVNF_RAM_Server + ARS ) - ( ( FirstVNF_Mem / ACS ) / Const ) ) ) ),CRS ) ) * Min( DDR ,MRS ) )", "choosing": "Min( Min( ( ( ( ( RMSe * RMSe ) * Max( ( MUR * Min( MUR ,CS ) ),DS ) ) + ( RCSe + MUM ) ) * DS ) ,CS ) ,( RCSe - Min( ( Min( ( Min( ( MUR * RRSe ) ,MUC ) / CS ) ,MUC ) * RCSe ) ,Max( ( ( RMSe / ( CS - RMSe ) ) - ( MLU / Max( RRSe,( RCSe * MUM ) ) ) ),MLU ) ) ) )", "obj1": 0.4, "obj2": 0.5787581574559135}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( ( FirstVNF_Mem + ( FirstVNF_CPU / ( AMS * Const ) ) ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) / Max( DDR,FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( RCSe - RCSe ) ,( MUR * MUR ) ) - Min( Min( DS ,Min( Min( ( Max( DS,RCSe ) - RRSe ) ,MUR ) ,( MUM * RRSe ) ) ) ,( MUC - RRSe ) ) ) - ( MLU * Max( MUC,Min( MUC ,( Min( RCSe ,( Min( MUR ,MUM ) * ( CS - MUR ) ) ) * Min( MUM ,RRSe ) ) ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.021938267801514085}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( BR * MDR ) - ( FirstVNF_Mem_Server + ( Max( BR,Max( ( DDR * FirstVNF_CPU ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ,Min( Max( DDR,DDR ) ,( ( CRS * FirstVNF_Mem ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MLU * RMSe ) - MLU ) / ( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - RRSe ) ) ) - ( RMSe / DS ) )", "obj1": 0.9040816326530612, "obj2": 0.044576292118664075}, {"determining": "( ( Const - ( ( PN * Const ) + RRS ) ) * ( Max( BR,DDR ) / Min( ( ( Const - ( Const / AMS ) ) * ARS ) ,RRS ) ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( ( MUC + ( Max( DS,( MLU - Min( MLU ,( CS - MUC ) ) ) ) * Max( CS,MUM ) ) ) / ( DS - MLU ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ARS / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8845312571319146}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) + ( Const + DDR ) )", "choosing": "( Min( ( ( MUM * RRSe ) / MUC ) ,MUM ) / ( ( MUM - Max( ( MUR + MUC ),( Max( MUM,MLU ) / ( ( Max( MUR,RMSe ) * Min( MUM ,DS ) ) + ( Max( DS,CS ) - MUC ) ) ) ) ) + ( MUR + MUR ) ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "Min( Max( ( ( ( ( CRS / FirstVNF_RAM ) - RRS ) + MRS ) - Min( FirstVNF_RAM ,BR ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,( Max( ( DDR / ( DDR / FirstVNF_Mem_Server ) ),PN ) - MDR ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( Max( RCSe,DS ) + ( Min( ( RMSe + MUC ) ,Min( DS ,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / Max( CS,MUM ) ) ) ) ) / ( Max( DS,( MUM + Max( MUM,MUR ) ) ) / Max( ( MUC + Min( Min( MUR ,MUM ) ,CS ) ),( MUC - MUM ) ) ) )", "obj1": 0.9591836734693877, "obj2": 0.019382486026179487}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_CPU / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ACS - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( DS / ( Min( ( ( MLU * Max( MUM,MUR ) ) / MLU ) ,( RCSe - ( RRSe / MLU ) ) ) / RCSe ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "( ( ( MRS + BR ) * ( FirstVNF_Mem - Max( CRS,CRS ) ) ) / Max( FirstVNF_Mem,Min( RRS ,( ( Const * Max( DDR,BR ) ) + ( FirstVNF_RAM * CRS ) ) ) ) )", "choosing": "Max( Min( Min( ( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ,DS ) ,( ( MLU * ( RRSe * CS ) ) / RMSe ) ),( Max( MUC,MUR ) * Max( DS,MUR ) ) )", "obj1": 0.23877551020408164, "obj2": 0.742621691537095}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( ( Const / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ),BR ) * ( AMS + AMS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.010545523950770025}, {"determining": "( Min( FirstVNF_CPU ,RRS ) + ( FirstVNF_CPU + Const ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS / ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( ( ( CS + RCSe ) + ( Min( DS ,MLU ) / MLU ) ) - ( RCSe / MUM ) ) ,( RMSe - MUR ) ),CS ) )", "obj1": 0.1, "obj2": 0.8802435212133923}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Max( Max( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ),ARS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - ( ( Max( DDR,( DDR - ARS ) ) - RRS ) * MDR ) ) ) + Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ) )", "choosing": "( DS / Max( MLU,MLU ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( RCSe,RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Min( MUM ,( ( MUC / MUR ) * ( RCSe * MUC ) ) ) / MUR ) ) )", "obj1": 0.7836734693877551, "obj2": 0.15269807701423746}, {"determining": "Min( Max( ( DDR + AMS ),( ( FirstVNF_Mem + ( Max( BR,Max( ( MRS + FirstVNF_Mem_Server ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM * MRS ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( MUR + ( MUC * Min( RCSe ,MUC ) ) ) - Min( Min( MUR ,MUR ) ,( CS - ( ( MLU / ( Min( RRSe ,CS ) * ( MLU * ( MUC - RCSe ) ) ) ) - RCSe ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.04126006699067148}, {"determining": "( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( ( BR * ( FirstVNF_CPU_Server + DDR ) ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) - ( ( RRS + ( MDR / ( FirstVNF_RAM_Server / ( FirstVNF_CPU - Min( RRS ,FirstVNF_RAM_Server ) ) ) ) ) * ( FirstVNF_Mem / Max( CRS,Const ) ) ) ) / ( FirstVNF_CPU / Max( DDR,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + Min( RCSe ,MUR ) ) - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),( MUC - Max( MUM,( CS * RRSe ) ) ) ) + ( MUM - ( MUR + Max( MLU,Min( RCSe ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_CPU / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ACS - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( DS / ( Min( ( ( MLU * Max( MUM,MUR ) ) / MLU ) ,( RCSe - ( RRSe / MLU ) ) ) / RCSe ) )", "obj1": 0.9673469387755103, "obj2": 0.01623470208620429}, {"determining": "( ( PN - ( ( ( DDR * FirstVNF_CPU_Server ) + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.7877551020408163, "obj2": 0.12286017851274517}, {"determining": "Min( Max( Min( ( ACS - MRS ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * MDR ) * Min( BR ,Max( ( DDR / FirstVNF_CPU ),Min( FirstVNF_Mem_Server ,MDR ) ) ) ) ) - ( BR * MDR ) ) ) ,Min( ( FirstVNF_RAM / MDR ) ,Min( DDR ,MRS ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( Max( ( MUM / MUM ),( CS + RRSe ) ) * ( ( MUM * ( MUM - RMSe ) ) / RCSe ) ) - ( RCSe / Max( Min( CS ,( MUR * MUC ) ),( Min( DS ,MUM ) + ( MLU / MUR ) ) ) ) ) ) - Min( ( MUR / DS ) ,( DS - CS ) ) ) - Min( Min( MUR ,MUR ) ,( Min( MUR ,RCSe ) * Max( Min( Max( RMSe,MUC ) ,RRSe ),MUM ) ) ) )", "obj1": 0.9163265306122449, "obj2": 0.03805493543893866}, {"determining": "( ( ( PN / CRS ) / Const ) / ( PN - ( ( RRS + MDR ) * ( Max( Max( FirstVNF_Mem_Server,( Max( DDR,BR ) * ( BR / CRS ) ) ),BR ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUM / MUM ) / ( MLU - ( RCSe / ( DS - ( Min( RMSe ,MUC ) - Max( ( MLU - RMSe ),MUM ) ) ) ) ) ) / Min( MUR ,CS ) )", "obj1": 0.9448979591836735, "obj2": 0.026000747474675807}, {"determining": "( ( ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( DDR + AMS ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8761866246907271}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( BR,Max( ( DDR * FirstVNF_CPU ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) - ( BR * MDR ) ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( ( ( MLU * RMSe ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - RRSe ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.042464001909889346}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_Mem + DDR ) ) * ( ( FirstVNF_CPU + ( Const - FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,MLU ) / Max( ( ( MUM - DS ) / ( CS * RRSe ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,ARS ) - ( AMS * BR ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( RMSe * Max( Max( RRSe,MUM ),RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.1489795918367347, "obj2": 0.83322252393101}, {"determining": "Min( Min( Min( Max( ( ARS - FirstVNF_RAM_Server ),( ( FirstVNF_CPU - Const ) + ACS ) ) ,( ACS / ( Min( MRS ,AMS ) / FirstVNF_CPU_Server ) ) ) ,BR ) ,( FirstVNF_CPU * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( CS / MLU ),( Max( ( Min( ( MUC / MLU ) ,RMSe ) + RMSe ),MUM ) - Max( ( MUC - MLU ),Max( MUC,DS ) ) ) ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + MUC ) + RRSe ) ,MLU ) ) ,DS ) ,Max( RRSe,( Min( MUM ,( ( RRSe / ( MUC + CS ) ) * MLU ) ) * MUC ) ) ) )", "obj1": 0.21428571428571427, "obj2": 0.7554642351771761}, {"determining": "( ( ( ( DDR - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) - Max( ( ( Min( ACS ,( ( AMS - BR ) - FirstVNF_Mem ) ) + CRS ) - FirstVNF_CPU ),ARS ) ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( Min( CS ,RRSe ) + ( MUC + RRSe ) ) * RCSe ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( MLU + DS ) ) - RCSe ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4122448979591837, "obj2": 0.5114250867953828}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / ( Min( MDR ,FirstVNF_Mem_Server ) * ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * RRS ) ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.16326530612244897, "obj2": 0.8175574149333995}, {"determining": "( ( Const / FirstVNF_Mem ) * ( ( ( BR / ( RRS - ( Const * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_CPU_Server ) + ( Min( ( DDR - ACS ) ,( Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) * FirstVNF_Mem_Server ) ) * ( ACS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS / Max( ( ( DS - ( ( Min( DS ,DS ) - MUR ) + RCSe ) ) + ( MUM - RMSe ) ),( MUC / Max( ( RRSe * RMSe ),DS ) ) ) ) * ( ( ( RMSe + RMSe ) / Min( Max( DS,( Max( MLU,( RCSe + MUM ) ) * ( Min( MLU ,DS ) + DS ) ) ) ,( RMSe / MLU ) ) ) / ( RRSe + CS ) ) )", "obj1": 0.7183673469387755, "obj2": 0.16132175323841497}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7571428571428571, "obj2": 0.15729861368852785}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) * ( ( ARS - Const ) / BR ) )", "choosing": "Max( ( ( Max( RCSe,( MUR + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( RRSe,MUM ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8651697560855729}, {"determining": "( ( ( Max( ( ARS / RRS ),Const ) + Min( Max( ( FirstVNF_RAM_Server / BR ),MRS ) ,Const ) ) - Min( ( Max( DDR,Min( MDR ,( FirstVNF_RAM / BR ) ) ) * FirstVNF_Mem ) ,ARS ) ) / Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,Max( ( ( ( CRS + FirstVNF_CPU ) + ( MDR + BR ) ) * ( ACS * BR ) ),FirstVNF_CPU_Server ) ) ),DDR ) )", "choosing": "( ( ( MUC - MUM ) / ( ( RMSe + MUR ) / ( RMSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUR * MUR ) / RMSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( RRSe - MUR ) ) ) )", "obj1": 0.4714285714285714, "obj2": 0.38629977454758124}, {"determining": "Min( Max( ( ( Max( Min( AMS ,FirstVNF_RAM ),MRS ) * FirstVNF_CPU_Server ) * ACS ),( MDR + ( FirstVNF_RAM * ARS ) ) ) ,Min( ( ( DDR - FirstVNF_CPU_Server ) - Min( PN ,RRS ) ) ,Min( DDR ,DDR ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( ( DS * MUC ) / Min( MUC ,CS ) ) - MLU ) ) - Min( ( DS * MUR ) ,( MUR / DS ) ) ) - Min( ( RCSe / CS ) ,( Min( RCSe ,( ( Max( Min( RCSe ,CS ),MLU ) * DS ) + Min( CS ,DS ) ) ) + Min( MLU ,MUM ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.03129395782837683}, {"determining": "( ( ( ( ACS - MDR ) * Min( FirstVNF_RAM ,Min( MDR ,RRS ) ) ) - AMS ) + ( ( ( ( ( RRS + FirstVNF_RAM_Server ) - DDR ) - FirstVNF_RAM_Server ) - ( ( Max( Max( ( FirstVNF_CPU * RRS ),BR ),Const ) / FirstVNF_Mem ) * ( ARS * Max( Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ),Min( FirstVNF_RAM_Server ,CRS ) ) ) ) ) / ( MRS / Const ) ) )", "choosing": "( ( Max( ( ( MUC / ( DS - ( ( CS - MUC ) / ( RRSe + MUC ) ) ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( RCSe - RCSe ) ) / Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - Max( ( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) ) * ( Const / BR ) )", "choosing": "( ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / MUR ) - ( ( ( ( ( Min( RRSe ,MLU ) - MUM ) * MUM ) / RMSe ) + DS ) / MUM ) )", "obj1": 0.336734693877551, "obj2": 0.5912134411120042}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / FirstVNF_Mem ) ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( Min( MUM ,MUR ) - CS ) / Max( MUC,MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.9918367346938776, "obj2": 0.004246300215538529}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.753061224489796, "obj2": 0.15991023808689434}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Max( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ),DDR ) ) )", "choosing": "( ( Min( CS ,( RCSe / DS ) ) / MUR ) - ( MUC / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU - PN ) ,BR ) ) / FirstVNF_Mem )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + RMSe ) ) - Min( ( MUR * DS ) ,( ( CS + ( ( MUC + MLU ) - ( RCSe - RRSe ) ) ) + RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( Min( DS ,( RRSe - DS ) ) * ( ( MUC + RMSe ) / ( RMSe - MUC ) ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.748302548957801}, {"determining": "( ( ( ( ( RRS + FirstVNF_RAM_Server ) - DDR ) - FirstVNF_RAM_Server ) - ( ( Max( Max( ( FirstVNF_CPU * RRS ),BR ),Const ) / FirstVNF_Mem ) * ( ARS * Max( Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ),Min( FirstVNF_RAM_Server ,CRS ) ) ) ) ) / ( MRS / Const ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,( MUR + ( MUC + ( RCSe + RCSe ) ) ) ) / ( ( CS - MUC ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Max( MUC,MUC ) / ( ( MUR / ( DS / CS ) ) * ( MUC - CS ) ) ) ),Min( DS ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( ( BR * ( FirstVNF_CPU_Server + DDR ) ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) - ( ( RRS + MDR ) * ( FirstVNF_Mem / Max( CRS,Const ) ) ) ) / ( FirstVNF_CPU / Max( DDR,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Max( ( AMS - Max( ( ( ( FirstVNF_CPU * MDR ) * FirstVNF_RAM ) * FirstVNF_Mem ),ARS ) ),DDR ) ) )", "choosing": "( ( Min( CS ,( ( RCSe + CS ) / MUC ) ) / MUR ) - ( ( MUC - RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8958148423992437}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * ( FirstVNF_RAM * ACS ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.348946036325002}, {"determining": "Min( AMS ,( ( ( ( ( DDR - ( FirstVNF_CPU_Server + ( PN - BR ) ) ) - PN ) * ARS ) - ( FirstVNF_CPU + PN ) ) - Max( FirstVNF_CPU,Const ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( ( ( ( ( MLU + ( MUM + RMSe ) ) + DS ) - ( ( CS + RCSe ) + DS ) ) / Min( MUM ,MUR ) ) / MUC ) / Min( MLU ,MLU ) ) )", "obj1": 0.8612244897959184, "obj2": 0.11979230494467584}, {"determining": "( ( AMS - Max( ( ( DDR - Min( MDR ,DDR ) ) * FirstVNF_Mem ),Max( FirstVNF_Mem_Server,ACS ) ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RRSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - MUM ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6396053273337301}, {"determining": "( ( PN - ( ( RRS + MDR ) * Min( Min( Max( PN,FirstVNF_Mem ) ,( ARS / BR ) ) ,PN ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RRSe ) - RMSe ) + Min( MUM ,MLU ) ) ) ,( RMSe + ( Max( MUR,( MUR * DS ) ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.463265306122449, "obj2": 0.4064914575501343}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,MUR ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.44285714285714284, "obj2": 0.4837218763889074}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.30532402512547024}, {"determining": "( ( ( Max( ( ARS / RRS ),Const ) + Min( Max( ( FirstVNF_RAM_Server / BR ),MRS ) ,Const ) ) - Min( ( Max( DDR,Min( MDR ,( FirstVNF_RAM / BR ) ) ) * FirstVNF_Mem ) ,ARS ) ) / Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,Max( ( ( ( CRS + FirstVNF_CPU ) + ( MDR + BR ) ) * ( ACS * BR ) ),FirstVNF_CPU_Server ) ) ),DDR ) )", "choosing": "( ( ( MUC - MUM ) / ( ( RMSe + MUR ) / ( RMSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUR * MUR ) / RMSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( RRSe - MUR ) ) ) )", "obj1": 0.4714285714285714, "obj2": 0.38629977454758124}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( AMS - Max( ( Max( Min( MDR ,FirstVNF_CPU ),DDR ) * ( PN / FirstVNF_Mem ) ),Const ) ) / ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( ( MLU + ( ( RCSe * DS ) * RCSe ) ) / MUC ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - RRSe ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( RMSe / MUM ) * MUM ) ) - MUR ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.679292893601322}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.7877551020408163, "obj2": 0.12286017851274517}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( ( ( DDR - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) - Max( ( ( Min( ACS ,( ( AMS - BR ) - FirstVNF_Mem ) ) + CRS ) - FirstVNF_CPU ),ARS ) ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( Min( CS ,RRSe ) + ( MUC + RRSe ) ) * RCSe ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( MLU + DS ) ) - RCSe ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4122448979591837, "obj2": 0.5114250867953828}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,( ( CS * RCSe ) - ( MUM - RCSe ) ) )", "obj1": 0.6346938775510204, "obj2": 0.28397960378299636}, {"determining": "( ( ( ACS * Max( CRS,( ( FirstVNF_CPU_Server - ARS ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( Min( MRS ,Const ) / Max( ( FirstVNF_CPU / CRS ),Const ) ) + ACS ) ) ,( Max( ( FirstVNF_CPU_Server + DDR ),BR ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( Min( MUM ,( ( CS * DS ) * RRSe ) ) / MLU ) ,Max( ( ( CS - ( RRSe + MLU ) ) - MUM ),RMSe ) ) )", "obj1": 0.7857142857142857, "obj2": 0.14903970842639896}, {"determining": "( Min( PN ,( ( FirstVNF_Mem_Server + MDR ) * ( AMS / MDR ) ) ) / ( MRS / ( ACS * ACS ) ) )", "choosing": "( ( MLU / ( ( ( ( DS / ( MUM / CS ) ) + RCSe ) * MUM ) * CS ) ) / Min( MUR ,CS ) )", "obj1": 0.7326530612244898, "obj2": 0.1493582000869129}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( PN + Min( RRS ,( DDR + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUR * ( ( MLU + MUC ) / ( RRSe + CS ) ) )", "obj1": 0.4061224489795918, "obj2": 0.5661436542797085}, {"determining": "( ( Const / FirstVNF_Mem ) * ( ( ( BR / ( RRS - ( Const * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_CPU_Server ) + ( Min( ( DDR - ACS ) ,( Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) * FirstVNF_Mem_Server ) ) * ( ACS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS / Max( ( ( DS - ( ( Min( DS ,DS ) - MUR ) + RCSe ) ) + ( MUM - RMSe ) ),( MUC / Max( ( RRSe * RMSe ),DS ) ) ) ) * ( ( ( RMSe + RMSe ) / Min( Max( DS,( Max( MLU,( RCSe + MUM ) ) * ( Min( MLU ,DS ) + DS ) ) ) ,( RMSe / MLU ) ) ) / ( RRSe + CS ) ) )", "obj1": 0.7183673469387755, "obj2": 0.16132175323841497}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) + ( Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) * Max( ( ARS / FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( MUR * ( ( RMSe - CS ) + Max( ( CS * ( Max( RMSe,( MUR + ( DS / CS ) ) ) - MLU ) ),( DS / MUM ) ) ) )", "obj1": 0.636734693877551, "obj2": 0.27030808835089826}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.42653061224489797, "obj2": 0.495001754199449}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),( ACS - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) / Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) ) ,Max( ( CRS + DDR ),Const ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( RCSe - MLU ) ) - Min( ( MUR / MUC ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * ( MUR - ( RRSe + ( ( RMSe / MUC ) / ( ( MUR + RMSe ) * ( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.9, "obj2": 0.04742435034615194}, {"determining": "( ( RRS + FirstVNF_RAM_Server ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( MRS ,( BR * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( MUC ,Min( ( MLU + ( RRSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( ( ( MLU / MUC ) / MUM ) - ( ( RMSe * RCSe ) + ( RCSe * CS ) ) ) ),MUC ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM - ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - Min( Const ,RRS ) ) ,( ( ( FirstVNF_CPU_Server + DDR ) - BR ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( RRSe - ( Min( RRSe ,MUC ) - RMSe ) ) ) - MLU ),( Min( RCSe ,( ( DS + MUR ) * ( RRSe * MUM ) ) ) * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.7142857142857143, "obj2": 0.20690242937450085}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + ( Const - FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,MLU ) / Max( Min( MUM ,DS ),MUM ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "( Max( Const,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) * ( ARS + Min( ( PN + ( FirstVNF_CPU_Server - CRS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RMSe - Min( MUC ,RRSe ) ),( MUC - RMSe ) )", "obj1": 0.38571428571428573, "obj2": 0.578842040318999}, {"determining": "( ( Min( ( FirstVNF_CPU - ( ( RRS + ( ACS + MRS ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) - FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + Max( PN,MDR ) ) ) * ( ( FirstVNF_CPU + RRS ) * FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) + ( ( CRS * FirstVNF_Mem_Server ) - AMS ) )", "choosing": "Max( ( RMSe * RMSe ),Min( Min( ( RMSe * Min( Max( ( Min( CS ,CS ) - RRSe ),MUC ) ,MLU ) ) ,( RRSe * CS ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / DS ) ) + MUM ) ) * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( AMS * PN ) + ( Const - Min( ( ACS + ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ,( ( Const + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) / RRS ) ) ) )", "choosing": "( ( ( MUM / MUM ) / ( RRSe + MUM ) ) / ( RRSe * Max( Max( Max( ( RMSe + ( ( RRSe * MUM ) * MLU ) ),MUR ),( ( MUR * MUM ) - MUC ) ),( ( ( MUC - DS ) / RCSe ) / ( MUM - CS ) ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.740803066329768}, {"determining": "( ( ( AMS - Max( ( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) ) * ( Const / BR ) )", "choosing": "( ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / MUR ) - ( ( ( ( ( Min( RRSe ,MLU ) - MUM ) * MUM ) / RMSe ) + DS ) / MUM ) )", "obj1": 0.336734693877551, "obj2": 0.5912134411120042}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( RMSe * Max( Max( ( CS - MUC ),MUM ),RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7829511098189514}, {"determining": "Min( Max( Min( ( ARS / RRS ) ,( ACS + ACS ) ),( ( FirstVNF_Mem + Max( Max( Const,FirstVNF_Mem_Server ),FirstVNF_RAM ) ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,PN ) / Max( DDR,FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( ( Max( Min( ( Min( Min( CS ,RRSe ) ,( DS + MUC ) ) - ( ( RCSe + RMSe ) * RMSe ) ) ,( DS * MUM ) ),MLU ) - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( CS / MUC ) ) + MUM ) ) * ( Max( RMSe,RCSe ) * DS ) ),RRSe ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7807894345175307}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - ( ( MDR / FirstVNF_RAM_Server ) + ACS ) ) + ( ( FirstVNF_RAM / Min( PN ,FirstVNF_Mem ) ) * CRS ) )", "choosing": "( ( ( MUM / MUR ) * RMSe ) / ( ( ( Min( RRSe ,( CS * RMSe ) ) * ( ( MUR - Min( Max( RMSe,MLU ) ,Max( MUC,MLU ) ) ) + DS ) ) + ( MUM + MUC ) ) + RMSe ) )", "obj1": 0.6714285714285714, "obj2": 0.2381269419807639}, {"determining": "( ( FirstVNF_CPU_Server / ( ( Min( BR ,AMS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) / PN ) ) ) * Min( PN ,BR ) ) ) * ( FirstVNF_CPU - FirstVNF_CPU ) )", "choosing": "Max( ( ( MUM - DS ) / ( Min( CS ,( MUC * DS ) ) * RRSe ) ),Min( ( DS + ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - ( RMSe + DS ) ) ) ,MLU ) ) ) ,( ( RRSe / ( DS / MUC ) ) - ( MUM * Max( ( Min( ( CS / MUM ) ,MUC ) / ( Max( DS,RCSe ) - RMSe ) ),( RRSe * CS ) ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7308844164389094}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "Min( Min( Min( Max( ( ARS - FirstVNF_RAM_Server ),( ( FirstVNF_CPU - Const ) + ACS ) ) ,( ACS / ( Min( MRS ,AMS ) / FirstVNF_CPU_Server ) ) ) ,BR ) ,( FirstVNF_CPU * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( CS / MLU ),( Max( ( Min( ( MUC / MLU ) ,RMSe ) + RMSe ),MUM ) - Max( ( MUC - MLU ),Max( MUC,DS ) ) ) ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + MUC ) + RRSe ) ,MLU ) ) ,DS ) ,Max( RRSe,( Min( MUM ,( ( RRSe / ( MUC + CS ) ) * MLU ) ) * MUC ) ) ) )", "obj1": 0.21428571428571427, "obj2": 0.7554642351771761}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "Min( Max( ( ( Max( Min( AMS ,FirstVNF_RAM ),MRS ) * FirstVNF_CPU_Server ) * ACS ),( MDR + ( FirstVNF_RAM * ARS ) ) ) ,Min( ( ( DDR - FirstVNF_CPU_Server ) - Min( PN ,RRS ) ) ,Min( DDR ,DDR ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( ( DS * MUC ) / Min( MUC ,CS ) ) - MLU ) ) - Min( ( DS * MUR ) ,( MUR / DS ) ) ) - Min( ( RCSe / CS ) ,( Min( RCSe ,( ( Max( Min( RCSe ,CS ),MLU ) * DS ) + Min( CS ,DS ) ) ) + Min( MLU ,MUM ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.03129395782837683}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU - PN ) ,BR ) ) / FirstVNF_Mem )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + RMSe ) ) - Min( ( MUR * DS ) ,( ( CS + ( ( MUC + MLU ) - ( RCSe - RRSe ) ) ) + RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( Min( DS ,( RRSe - DS ) ) * ( ( MUC + RMSe ) / ( RMSe - MUC ) ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.748302548957801}, {"determining": "( ( AMS - Max( Min( Min( ARS ,FirstVNF_Mem ) ,Min( BR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( RMSe + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - ( RMSe * Min( MLU ,MUM ) ) ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5904940164180497}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8879560768570286}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( Min( Min( ( ACS + MDR ) ,MRS ) ,ARS ) + ( ( BR * ( FirstVNF_Mem - Min( ( MDR + ( AMS / CRS ) ) ,Const ) ) ) - FirstVNF_CPU_Server ) ) * Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( CS - ( ( MUM - Max( MLU,RMSe ) ) / RCSe ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8433184526280625}, {"determining": "Min( Min( Min( BR ,( ( FirstVNF_CPU_Server / Max( Const,AMS ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( Const * ARS ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7668085800527091}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM + ACS ) + ACS ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - Max( CS,RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,CS ) )", "obj1": 0.16122448979591836, "obj2": 0.8254481062142297}, {"determining": "Min( Min( Min( BR ,( Min( Min( ARS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( DDR - FirstVNF_CPU ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( ( MUC / CS ) / RRSe ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7297705964538184}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( BR / BR ) ) ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / FirstVNF_Mem ) ) ) / ( ( PN / CRS ) / FirstVNF_Mem ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.936734693877551, "obj2": 0.028419893462602135}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / ( Min( MDR ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8168286216329899}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( FirstVNF_CPU_Server / BR ) / BR ) ) )", "choosing": "( Max( ( Min( Min( RRSe ,MUR ) ,( ( MUR / ( MUC + RRSe ) ) / Max( DS,( CS + RRSe ) ) ) ) - CS ),( MUM / DS ) ) + CS )", "obj1": 0.12653061224489795, "obj2": 0.8589673024473602}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) * ( ( ARS - Const ) / BR ) )", "choosing": "Max( ( ( Max( RCSe,( MUR + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( RRSe,MUM ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8651697560855729}, {"determining": "( ( ( MRS + BR ) * ( FirstVNF_Mem - Max( CRS,CRS ) ) ) / Max( FirstVNF_Mem,Min( RRS ,( ( Const * ARS ) + ( RRS * CRS ) ) ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( MLU ,Max( MUC,( Min( CS ,CS ) - RRSe ) ) ) ) ,DS ) ,( ( MLU * ( RRSe * CS ) ) / RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7668085800527091}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU_Server + Min( Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) ,( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( MUR * ( ( Min( Max( MUR,( ( MUC / DS ) * ( MUC / MUM ) ) ) ,( RMSe / MLU ) ) / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.4020408163265306, "obj2": 0.5779302201319569}, {"determining": "( ( FirstVNF_Mem * Max( ( PN - ( Const * ( ( FirstVNF_RAM_Server + ARS ) - ( ( FirstVNF_Mem / ACS ) / Const ) ) ) ),CRS ) ) * Min( DDR ,MRS ) )", "choosing": "Min( Min( ( ( ( ( RMSe * RMSe ) * Max( ( MUR * Min( MUR ,CS ) ),DS ) ) + ( RCSe + MUM ) ) * DS ) ,CS ) ,( RCSe - Min( ( Min( ( Min( ( MUR * RRSe ) ,MUC ) / CS ) ,MUC ) * RCSe ) ,Max( ( ( RMSe / ( CS - RMSe ) ) - ( MLU / Max( RRSe,( RCSe * MUM ) ) ) ),MLU ) ) ) )", "obj1": 0.4, "obj2": 0.5787581574559135}, {"determining": "Min( Max( ( ( ( ACS * PN ) - ACS ) / ( MRS - ACS ) ),( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) * ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * ( ( PN * MDR ) * CRS ) ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( Min( ( RRSe * RMSe ) ,Max( ( RCSe + DS ),Max( ( MUM * RRSe ),( MUC - RMSe ) ) ) ) / ( CS + RRSe ) ) )", "obj1": 0.9530612244897959, "obj2": 0.020586508258801935}, {"determining": "( ( Const - ( ( PN * Const ) + RRS ) ) * ( Max( BR,DDR ) / Min( ( ( Const - ( Const / AMS ) ) * ARS ) ,RRS ) ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( ( MUC + ( Max( DS,( MLU - Min( MLU ,( CS - MUC ) ) ) ) * Max( CS,MUM ) ) ) / ( DS - MLU ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ARS / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8845312571319146}, {"determining": "( Min( ARS ,( AMS + ACS ) ) / ( ( ( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + AMS ) ) * Const ) ) - DDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( ( ( DS - CS ) - MUR ),CS ) / ( ( ( ( MLU - ( ( MUC / Min( CS ,MUM ) ) + RCSe ) ) * Min( RCSe ,CS ) ) - MLU ) - MUC ) )", "obj1": 0.9714285714285714, "obj2": 0.012238172698020206}, {"determining": "( ( ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( DDR + AMS ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8761866246907271}, {"determining": "( ( PN - ( Max( CRS,MDR ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / MDR ) ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Min( Max( MUR,( MUC / ( RCSe * Max( MLU,( MUM / MUC ) ) ) ) ) ,( ( ( MLU - MUR ) - RRSe ) / MLU ) ) )", "obj1": 0.9918367346938776, "obj2": 0.004246300215538529}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) + ( Const + DDR ) )", "choosing": "( Min( ( ( MUM * RRSe ) / MUC ) ,MUM ) / ( ( MUM - Max( ( MUR + MUC ),( Max( MUM,MLU ) / ( ( Max( MUR,RMSe ) * Min( MUM ,DS ) ) + ( Max( DS,CS ) - MUC ) ) ) ) ) + ( MUR + MUR ) ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "( ( ( PN / CRS ) / Const ) / ( PN - ( ( RRS + MDR ) * ( Max( Max( FirstVNF_Mem_Server,( Max( DDR,BR ) * ( BR / CRS ) ) ),BR ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUM / MUM ) / ( MLU - ( RCSe / ( DS - ( Min( RMSe ,MUC ) - Max( ( MLU - RMSe ),MUM ) ) ) ) ) ) / Min( MUR ,CS ) )", "obj1": 0.9448979591836735, "obj2": 0.026000747474675807}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.861849297665582}, {"determining": "( Min( FirstVNF_CPU ,RRS ) + ( FirstVNF_CPU + Const ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS / ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( ( ( CS + RCSe ) + ( Min( DS ,MLU ) / MLU ) ) - ( RCSe / MUM ) ) ,( RMSe - MUR ) ),CS ) )", "obj1": 0.1, "obj2": 0.8802435212133923}, {"determining": "Min( Min( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ) ,( ( PN - CRS ) - Const ) ) ,Min( Max( Const,MDR ) ,Max( DDR,DDR ) ) )", "choosing": "( ( ( Max( MUR,( ( MUR / ( ( MUR / CS ) * ( MUM / RMSe ) ) ) + Max( DS,MUM ) ) ) / ( MLU - ( ( RRSe * ( Max( DS,RRSe ) + DS ) ) * ( Max( MUC,MUR ) * ( MUC + MUC ) ) ) ) ) / MUR ) - ( ( ( ( DS * RMSe ) - Max( Max( RMSe,MUM ),RCSe ) ) + DS ) / MUM ) )", "obj1": 0.9469387755102041, "obj2": 0.023986538127100273}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( BR * MDR ) - ( FirstVNF_Mem_Server + ( Max( BR,Max( ( DDR * FirstVNF_CPU ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ,Min( Max( DDR,DDR ) ,( ( CRS * FirstVNF_Mem ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MLU * RMSe ) - MLU ) / ( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - RRSe ) ) ) - ( RMSe / DS ) )", "obj1": 0.9040816326530612, "obj2": 0.044576292118664075}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8321540144904129}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / ( Min( MDR ,FirstVNF_Mem_Server ) * ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * RRS ) ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.16326530612244897, "obj2": 0.8175574149333995}, {"determining": "( ( Max( ( Max( DDR,BR ) * ( Const / BR ) ),ARS ) - ( AMS * BR ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( RMSe * Max( Max( RRSe,MUM ),RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( MUC / ( RCSe * Max( MLU,( MUM / MUC ) ) ) ),( MUM / DS ) ) )", "obj1": 0.1489795918367347, "obj2": 0.83322252393101}, {"determining": "Min( Max( ( DDR + AMS ),( ( FirstVNF_Mem + ( Max( BR,Max( ( MRS + FirstVNF_Mem_Server ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM * MRS ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( MUR + ( MUC * Min( RCSe ,MUC ) ) ) - Min( Min( MUR ,MUR ) ,( CS - ( ( MLU / ( Min( RRSe ,CS ) * ( MLU * ( MUC - RCSe ) ) ) ) - RCSe ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.04126006699067148}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Max( Max( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ),ARS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - ( ( Max( DDR,( DDR - ARS ) ) - RRS ) * MDR ) ) ) + Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ) )", "choosing": "( DS / Max( MLU,MLU ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( Max( DDR,BR ) * ( Const / BR ) ),Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( ( MUM / MUC ) + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0012650504169780304}, {"determining": "Min( Max( Min( ( ACS - MRS ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * MDR ) * Min( BR ,Max( ( DDR / FirstVNF_CPU ),Min( FirstVNF_Mem_Server ,MDR ) ) ) ) ) - ( BR * MDR ) ) ) ,Min( ( FirstVNF_RAM / MDR ) ,Min( DDR ,MRS ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( Max( ( MUM / MUM ),( CS + RRSe ) ) * ( ( MUM * ( MUM - RMSe ) ) / RCSe ) ) - ( RCSe / Max( Min( CS ,( MUR * MUC ) ),( Min( DS ,MUM ) + ( MLU / MUR ) ) ) ) ) ) - Min( ( MUR / DS ) ,( DS - CS ) ) ) - Min( Min( MUR ,MUR ) ,( Min( MUR ,RCSe ) * Max( Min( Max( RMSe,MUC ) ,RRSe ),MUM ) ) ) )", "obj1": 0.9163265306122449, "obj2": 0.03805493543893866}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / FirstVNF_Mem ) ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( Min( MUM ,MUR ) - CS ) / Max( MUC,MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.9918367346938776, "obj2": 0.004246300215538529}, {"determining": "Min( Max( ( ( ( ( CRS / FirstVNF_RAM ) - RRS ) + MRS ) - Min( FirstVNF_RAM ,BR ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,( Max( ( DDR / ( DDR / FirstVNF_Mem_Server ) ),PN ) - MDR ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( Max( RCSe,DS ) + ( Min( ( RMSe + MUC ) ,Min( DS ,( MUC + ( RCSe + RCSe ) ) ) ) / ( ( MUC - CS ) / Max( CS,MUM ) ) ) ) ) / ( Max( DS,( MUM + Max( MUM,MUR ) ) ) / Max( ( MUC + Min( Min( MUR ,MUM ) ,CS ) ),( MUC - MUM ) ) ) )", "obj1": 0.9591836734693877, "obj2": 0.019382486026179487}, {"determining": "Min( Max( Min( ( PN - ( Max( AMS,PN ) / Max( ( DDR / MDR ),FirstVNF_Mem_Server ) ) ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server + Min( ( AMS / DDR ) ,PN ) ) + Min( Const ,( FirstVNF_CPU / CRS ) ) ) + CRS ) * FirstVNF_CPU_Server ) ,Min( BR ,( ( PN / Min( DDR ,Max( ( PN / DDR ),( MRS + FirstVNF_CPU ) ) ) ) / ( CRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RMSe,MUM ) + ( DS - ( MLU - RRSe ) ) )", "obj1": 0.9612244897959183, "obj2": 0.017141212660118595}, {"determining": "Min( Max( ( AMS / ( DDR / FirstVNF_Mem ) ),( ( FirstVNF_Mem + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR - FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MLU / MUM ) / ( RRSe + CS ) ) / Min( ( MUR + RMSe ) ,MUM ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9183673469387755, "obj2": 0.03714461229246687}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( ( Const / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ),BR ) * ( AMS + AMS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.010545523950770025}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_CPU / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ACS - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( DS / ( Min( ( ( MLU * Max( MUM,MUR ) ) / MLU ) ,( RCSe - ( RRSe / MLU ) ) ) / RCSe ) )", "obj1": 0.9673469387755103, "obj2": 0.01623470208620429}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( BR,Max( ( DDR * FirstVNF_CPU ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) - ( BR * MDR ) ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( ( ( MLU * RMSe ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - RRSe ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.042464001909889346}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_CPU / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ACS - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( DS / ( Min( ( ( MLU * Max( MUM,MUR ) ) / MLU ) ,( RCSe - ( RRSe / MLU ) ) ) / RCSe ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "Min( Max( Min( ( ACS - DDR ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( ( FirstVNF_CPU * RRS ) * Max( BR,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) ) ) - ( BR * MDR ) ) ) ,( Const * MDR ) )", "choosing": "( ( Min( ( MLU - ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( Max( ( RRSe / RCSe ),Min( RMSe ,MUM ) ) ,CS ) ) ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - CS ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9183673469387755, "obj2": 0.03714461229246687}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8321540144904129}, {"determining": "( ( Max( Min( ARS ,FirstVNF_CPU ),Const ) + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_CPU / Min( DDR ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ACS - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( RCSe * Min( MUC ,MUR ) ) / ( Min( ( ( MLU * Max( MUM,MUR ) ) / MLU ) ,( MUC - ( RRSe / MLU ) ) ) / RCSe ) )", "obj1": 0.9673469387755103, "obj2": 0.01623470208620429}, {"determining": "( ( Max( FirstVNF_RAM_Server,ARS ) - ( AMS * BR ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( RMSe * Max( Max( RRSe,MUM ),RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.1489795918367347, "obj2": 0.83322252393101}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Max( ( AMS - Max( ( ( ( MDR - BR ) - Max( BR,AMS ) ) * FirstVNF_Mem ),ARS ) ),DDR ) ) )", "choosing": "( ( Min( CS ,( RCSe * CS ) ) / MUR ) - ( MUC / ( MUC - ( CS * ( MLU / ( MLU - Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( ( BR * ( FirstVNF_CPU_Server + DDR ) ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) - ( ( RRS + ( MDR / ( FirstVNF_RAM_Server / ( FirstVNF_CPU - Min( RRS ,FirstVNF_RAM_Server ) ) ) ) ) * ( FirstVNF_Mem / Max( CRS,Const ) ) ) ) / ( FirstVNF_CPU / Max( DDR,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + Min( RCSe ,MUR ) ) - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),( MUC - Max( MUM,( CS * RRSe ) ) ) ) + ( MUM - ( MUR + Max( MLU,Min( RCSe ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ( ( DDR * FirstVNF_CPU_Server ) + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_Mem + DDR ) ) * ( ( FirstVNF_CPU + ( Const - FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,MLU ) / Max( ( ( MUM - DS ) / ( CS * RRSe ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - MDR ) * Min( FirstVNF_RAM ,Min( MDR ,RRS ) ) ) - AMS ) + ( ( ( ( ( RRS + FirstVNF_RAM_Server ) - DDR ) - FirstVNF_RAM_Server ) - ( ( Max( Max( ( FirstVNF_CPU * RRS ),BR ),Const ) / FirstVNF_Mem ) * ( ARS * Max( Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ),Min( FirstVNF_RAM_Server ,CRS ) ) ) ) ) / ( MRS / Const ) ) )", "choosing": "( ( Max( ( ( MUC / ( DS - ( ( CS - MUC ) / ( RRSe + MUC ) ) ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( RCSe - RCSe ) ) / Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Max( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ),DDR ) ) )", "choosing": "( ( Min( CS ,( RCSe / DS ) ) / MUR ) - ( MUC / ( MUC - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( RRS + FirstVNF_RAM_Server ) - DDR ) - FirstVNF_RAM_Server ) - ( ( Max( Max( ( FirstVNF_CPU * RRS ),BR ),Const ) / FirstVNF_Mem ) * ( ARS * Max( Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ),Min( FirstVNF_RAM_Server ,CRS ) ) ) ) ) / ( MRS / Const ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,( MUR + ( MUC + ( RCSe + RCSe ) ) ) ) / ( ( CS - MUC ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Max( MUC,MUC ) / ( ( MUR / ( DS / CS ) ) * ( MUC - CS ) ) ) ),Min( DS ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( ( BR * ( FirstVNF_CPU_Server + DDR ) ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) - ( ( RRS + ( MDR / ( FirstVNF_RAM_Server / ( FirstVNF_CPU - Min( RRS ,FirstVNF_RAM_Server ) ) ) ) ) * ( FirstVNF_Mem / Max( CRS,Const ) ) ) ) / ( FirstVNF_CPU / Max( DDR,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + Min( RCSe ,MUR ) ) - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),( MUC - Max( MUM,( CS * RRSe ) ) ) ) + ( MUM - ( MUR + Max( MLU,Min( RCSe ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( ( BR * ( FirstVNF_CPU_Server + DDR ) ) * ( ( AMS - FirstVNF_CPU ) - ACS ) ) ) - ( ( RRS + MDR ) * ( FirstVNF_Mem / Max( CRS,Const ) ) ) ) / ( FirstVNF_CPU / Max( DDR,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + Min( MUR ,RCSe ) ) - ( RMSe + MUM ) ) ,( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( ( PN - ( Max( ( ( ( ( CRS / FirstVNF_RAM ) - RRS ) + MRS ) - Min( FirstVNF_RAM ,BR ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / FirstVNF_Mem ) ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( ( ( MUC - CS ) / Max( CS,MUM ) ) - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( Min( MUM ,MUR ) - CS ) / Max( MUC,MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( ( BR * ( FirstVNF_CPU_Server + DDR ) ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) - ( ( RRS + MDR ) * ( FirstVNF_Mem / Max( CRS,Const ) ) ) ) / ( FirstVNF_CPU / Max( DDR,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8958148423992437}, {"determining": "Min( AMS ,( ( ( ( ( DDR - ( FirstVNF_CPU_Server + ( PN - BR ) ) ) - PN ) * ARS ) - ( FirstVNF_CPU + PN ) ) - Max( FirstVNF_CPU,Const ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( ( ( ( ( MLU + ( MUM + RMSe ) ) + DS ) - ( ( CS + RCSe ) + DS ) ) / Min( MUM ,MUR ) ) / MUC ) / Min( MLU ,MLU ) ) )", "obj1": 0.8612244897959184, "obj2": 0.11979230494467584}, {"determining": "( ( Const / Min( ACS ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,ARS ) ) ) ) * ( PN - Max( ( CRS / FirstVNF_Mem ),AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( RCSe - Min( Min( Min( ( CS * MUC ) ,( MUR + MUC ) ) ,MUC ) ,CS ) ) ) ),( ( ( ( MUM * MUM ) * MUC ) * ( RCSe / MUR ) ) - CS ) )", "obj1": 0.7448979591836735, "obj2": 0.12269990469959279}, {"determining": "( ( AMS - Max( ( ( DDR - Min( MDR ,DDR ) ) * FirstVNF_Mem ),Max( FirstVNF_Mem_Server,ACS ) ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RRSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - MUM ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6396053273337301}, {"determining": "( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( DDR + BR ) * ( BR / Const ) ) / ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Max( ( DS * ( Min( MUC ,( ( DS + RCSe ) / MUR ) ) + MUC ) ),( MUC - RRSe ) ) ) - ( MUC - ( DS * ( RMSe + Min( RRSe ,( Min( ( RCSe / RRSe ) ,MLU ) * MLU ) ) ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.5333534044983416}, {"determining": "( ( PN - ( ( RRS + MDR ) * Min( Min( Max( PN,FirstVNF_Mem ) ,( ARS / BR ) ) ,PN ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RRSe ) - RMSe ) + Min( MUM ,MLU ) ) ) ,( RMSe + ( Max( MUR,( MUR * DS ) ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.463265306122449, "obj2": 0.4064914575501343}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,MUR ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.44285714285714284, "obj2": 0.4837218763889074}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.30532402512547024}, {"determining": "( ( ( Max( ( ARS / RRS ),Const ) + Min( Max( ( FirstVNF_RAM_Server / BR ),MRS ) ,Const ) ) - Min( ( Max( DDR,Min( MDR ,( FirstVNF_RAM / BR ) ) ) * FirstVNF_Mem ) ,ARS ) ) / Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,Max( ( ( ( CRS + FirstVNF_CPU ) + ( MDR + BR ) ) * ( ACS * BR ) ),FirstVNF_CPU_Server ) ) ),DDR ) )", "choosing": "( ( ( MUC - MUM ) / ( ( RMSe + MUR ) / ( RMSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUR * MUR ) / RMSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( RRSe - MUR ) ) ) )", "obj1": 0.4714285714285714, "obj2": 0.38629977454758124}, {"determining": "( ( AMS - Max( ( Max( Min( MDR ,FirstVNF_CPU ),DDR ) * ( PN / FirstVNF_Mem ) ),Const ) ) / ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( ( MLU + ( ( RCSe * DS ) * RCSe ) ) / MUC ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - RRSe ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( RMSe / MUM ) * MUM ) ) - MUR ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.679292893601322}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( ( ( DDR - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) - Max( ( ( Min( ACS ,( ( AMS - BR ) - FirstVNF_Mem ) ) + CRS ) - FirstVNF_CPU ),ARS ) ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( Min( CS ,RRSe ) + ( MUC + RRSe ) ) * RCSe ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( MLU + DS ) ) - RCSe ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4122448979591837, "obj2": 0.5114250867953828}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * ( FirstVNF_RAM * ACS ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.348946036325002}, {"determining": "( ( Const / FirstVNF_Mem ) * ( ( ( BR / ( RRS - ( Const * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_CPU_Server ) + ( Min( ( DDR - ACS ) ,( Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) * FirstVNF_Mem_Server ) ) * ( ACS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS / Max( ( ( DS - ( ( Min( DS ,DS ) - MUR ) + RCSe ) ) + ( MUM - RMSe ) ),( MUC / Max( ( RRSe * RMSe ),DS ) ) ) ) * ( ( ( RMSe + RMSe ) / Min( Max( DS,( Max( MLU,( RCSe + MUM ) ) * ( Min( MLU ,DS ) + DS ) ) ) ,( RMSe / MLU ) ) ) / ( RRSe + CS ) ) )", "obj1": 0.7183673469387755, "obj2": 0.16132175323841497}, {"determining": "( ( RRS + FirstVNF_RAM_Server ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( MRS ,( BR * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( MUC ,Min( ( MLU + ( RRSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( ( ( MLU / MUC ) / MUM ) - ( ( RMSe * RCSe ) + ( RCSe * CS ) ) ) ),MUC ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM - ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( Min( PN ,( ( FirstVNF_Mem_Server + MDR ) * ( AMS / MDR ) ) ) / ( MRS / ( ACS * ACS ) ) )", "choosing": "( ( MLU / ( ( ( ( DS / ( MUM / CS ) ) + RCSe ) * MUM ) * CS ) ) / Min( MUR ,CS ) )", "obj1": 0.7326530612244898, "obj2": 0.1493582000869129}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) + ( Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) * Max( ( ARS / FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( MUR * ( ( RMSe - CS ) + Max( ( CS * ( Max( RMSe,( MUR + ( DS / CS ) ) ) - MLU ) ),( DS / MUM ) ) ) )", "obj1": 0.636734693877551, "obj2": 0.27030808835089826}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,( ( CS * RCSe ) - ( MUM - RCSe ) ) )", "obj1": 0.6346938775510204, "obj2": 0.28397960378299636}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,MUR ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.34559390746848123}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.42653061224489797, "obj2": 0.495001754199449}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - Min( Const ,RRS ) ) ,( ( ( FirstVNF_CPU_Server + DDR ) - BR ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( RRSe - ( Min( RRSe ,MUC ) - RMSe ) ) ) - MLU ),( Min( RCSe ,( ( DS + MUR ) * ( RRSe * MUM ) ) ) * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.7142857142857143, "obj2": 0.20690242937450085}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + ( Const - FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,MLU ) / Max( Min( MUM ,DS ),MUM ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "Min( Max( Min( ( ACS - ACS ) ,( ACS - FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ( Max( BR,( ( DDR / FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) - ( Min( ( ( Min( ( Min( RRSe ,MUM ) * MLU ) ,MLU ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.04759271207600989}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( AMS * PN ) + ( Const - Min( ( ACS + ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ,( ( Const + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) / RRS ) ) ) )", "choosing": "( ( ( MUM / MUM ) / ( RRSe + MUM ) ) / ( RRSe * Max( Max( Max( ( RMSe + ( ( RRSe * MUM ) * MLU ) ),MUR ),( ( MUR * MUM ) - MUC ) ),( ( ( MUC - DS ) / RCSe ) / ( MUM - CS ) ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.740803066329768}, {"determining": "( ( ( AMS - Max( ( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) ) * ( Const / BR ) )", "choosing": "( ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / MUR ) - ( ( ( ( ( Min( RRSe ,MLU ) - MUM ) * MUM ) / RMSe ) + DS ) / MUM ) )", "obj1": 0.336734693877551, "obj2": 0.5912134411120042}, {"determining": "( ( AMS * ACS ) / Max( ( ( ACS - ACS ) * ( PN - FirstVNF_RAM_Server ) ),BR ) )", "choosing": "( ( ( ( ( DS * CS ) / MUR ) / ( MUR / MUC ) ) + MUM ) - ( DS - ( CS - ( MUM - ( RRSe * CS ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7600334505949903}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - ( ( MDR / FirstVNF_RAM_Server ) + ACS ) ) + ( ( FirstVNF_RAM / Min( PN ,FirstVNF_Mem ) ) * CRS ) )", "choosing": "( ( ( MUM / MUR ) * RMSe ) / ( ( ( Min( RRSe ,( CS * RMSe ) ) * ( ( MUR - Min( Max( RMSe,MLU ) ,Max( MUC,MLU ) ) ) + DS ) ) + ( MUM + MUC ) ) + RMSe ) )", "obj1": 0.6714285714285714, "obj2": 0.2381269419807639}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( RMSe * Max( Max( ( CS - MUC ),MUM ),RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7829511098189514}, {"determining": "( ( FirstVNF_CPU_Server / ( ( Min( BR ,AMS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) / PN ) ) ) * Min( PN ,BR ) ) ) * ( FirstVNF_CPU - FirstVNF_CPU ) )", "choosing": "Max( ( ( MUM - DS ) / ( Min( CS ,( MUC * DS ) ) * RRSe ) ),Min( ( DS + ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - ( RMSe + DS ) ) ) ,MLU ) ) ) ,( ( RRSe / ( DS / MUC ) ) - ( MUM * Max( ( Min( ( CS / MUM ) ,MUC ) / ( Max( DS,RCSe ) - RMSe ) ),( RRSe * CS ) ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7308844164389094}, {"determining": "Min( Max( Min( ( ARS / RRS ) ,( ACS + ACS ) ),( ( FirstVNF_Mem + Max( Max( Const,FirstVNF_Mem_Server ),FirstVNF_RAM ) ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,PN ) / Max( DDR,FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( ( Max( Min( ( Min( Min( CS ,RRSe ) ,( DS + MUC ) ) - ( ( RCSe + RMSe ) * RMSe ) ) ,( DS * MUM ) ),MLU ) - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( CS / MUC ) ) + MUM ) ) * ( Max( RMSe,RCSe ) * DS ) ),RRSe ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7807894345175307}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU - PN ) ,BR ) ) / FirstVNF_Mem )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + RMSe ) ) - Min( ( MUR * DS ) ,( ( CS + ( ( MUC + MLU ) - ( RCSe - RRSe ) ) ) + RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( Min( DS ,( RRSe - DS ) ) * ( ( MUC + RMSe ) / ( RMSe - MUC ) ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.748302548957801}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "Min( Max( ( ( Max( Min( AMS ,FirstVNF_RAM ),MRS ) * FirstVNF_CPU_Server ) * ACS ),( MDR + ( FirstVNF_RAM * ARS ) ) ) ,Min( ( ( DDR - FirstVNF_CPU_Server ) - Min( PN ,RRS ) ) ,Min( DDR ,DDR ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( ( DS * MUC ) / Min( MUC ,CS ) ) - MLU ) ) - Min( ( DS * MUR ) ,( MUR / DS ) ) ) - Min( ( RCSe / CS ) ,( Min( RCSe ,( ( Max( Min( RCSe ,CS ),MLU ) * DS ) + Min( CS ,DS ) ) ) + Min( MLU ,MUM ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.03129395782837683}, {"determining": "( ( AMS - Max( Min( Min( ARS ,FirstVNF_Mem ) ,Min( BR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( RMSe + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - ( RMSe * Min( MLU ,MUM ) ) ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5904940164180497}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8879560768570286}, {"determining": "( ( Min( ( FirstVNF_CPU - ( ( RRS + ( ACS + MRS ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) - FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + Max( PN,MDR ) ) ) * ( ( FirstVNF_CPU + RRS ) * FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) + ( ( CRS * FirstVNF_Mem_Server ) - AMS ) )", "choosing": "Max( ( RMSe * RMSe ),Min( Min( ( RMSe * Min( Max( ( Min( CS ,CS ) - RRSe ),MUC ) ,MLU ) ) ,( RRSe * CS ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / DS ) ) + MUM ) ) * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "Min( Min( Min( Max( ( ARS - FirstVNF_RAM_Server ),( ( FirstVNF_CPU - Const ) + ACS ) ) ,( ACS / ( Min( MRS ,AMS ) / FirstVNF_CPU_Server ) ) ) ,BR ) ,( FirstVNF_CPU * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( CS / MLU ),( Max( ( Min( ( MUC / MLU ) ,RMSe ) + RMSe ),MUM ) - Max( ( MUC - MLU ),Max( MUC,DS ) ) ) ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + MUC ) + RRSe ) ,MLU ) ) ,DS ) ,Max( RRSe,( Min( MUM ,( ( RRSe / ( MUC + CS ) ) * MLU ) ) * MUC ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7544423640090209}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ( ( ACS / FirstVNF_Mem_Server ) - ( MRS - MRS ) ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( ( MUM - CS ) / Min( RCSe ,( RMSe + ( RRSe + Max( RRSe,MUM ) ) ) ) ) / Min( ( RMSe + ( RRSe - MUC ) ) ,Max( DS,DS ) ) ),( ( Min( RCSe ,RMSe ) + ( ( Min( RMSe ,MUC ) * ( Max( RRSe,DS ) - ( MUM / MUR ) ) ) + DS ) ) * RMSe ) ) ,( ( CS * RCSe ) - ( MUM * RCSe ) ) )", "obj1": 0.6346938775510204, "obj2": 0.28397960378299636}, {"determining": "( Min( Const ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( BR ,( ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM + ACS ) + ACS ) ) / ACS ) ) ) / DDR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - Max( CS,RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,CS ) )", "obj1": 0.16122448979591836, "obj2": 0.8254481062142297}, {"determining": "Min( Min( Min( BR ,( Min( Min( ARS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( DDR - FirstVNF_CPU ) ) / ACS ) ) ,BR ) ,( Min( ( ( Min( PN ,PN ) - ( FirstVNF_CPU_Server * Max( MDR,( RRS * MDR ) ) ) ) / RRS ) ,ARS ) / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( MUM ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( ( MUC / CS ) / RRSe ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7297705964538184}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( BR / BR ) ) ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / FirstVNF_Mem ) ) ) / ( ( PN / CRS ) / FirstVNF_Mem ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.936734693877551, "obj2": 0.028419893462602135}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / ( Min( MDR ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8168286216329899}, {"determining": "( ACS / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.19387755102040816, "obj2": 0.782779673390625}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( FirstVNF_CPU_Server / BR ) / BR ) ) )", "choosing": "( Max( ( Min( Min( RRSe ,MUR ) ,( ( MUR / ( MUC + RRSe ) ) / Max( DS,( CS + RRSe ) ) ) ) - CS ),( MUM / DS ) ) + CS )", "obj1": 0.12653061224489795, "obj2": 0.8589673024473602}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ( ( ( FirstVNF_CPU * BR ) - PN ) * FirstVNF_CPU ) ) ) - Const ) / BR ) )", "choosing": "Max( Min( ( Max( RMSe,( MUR + DS ) ) / DS ) ,( RMSe - CS ) ),( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( Max( Max( RCSe,RMSe ),( RCSe - ( DS - RCSe ) ) ),MUM ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8646387774221315}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( Max( DDR,BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( ( MUM / MUC ) + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,( MUC - CS ) ) ) ) ) ) ) )", "obj1": 0.9897959183673469, "obj2": 0.005161771579956421}, {"determining": "( ACS / Max( BR,( CRS + ( Max( CRS,PN ) * PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RCSe ) * RMSe ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS - MUR ) / RCSe ) ) - ( ( MLU + Max( RCSe,MUM ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.13877551020408163, "obj2": 0.84382541227652}, {"determining": "( ( Const - ( ( PN * Const ) + RRS ) ) * ( Max( BR,DDR ) / Min( ( ( Const - ( Const / AMS ) ) * ARS ) ,RRS ) ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( ( MUC + ( Max( DS,( MLU - Min( MLU ,( CS - MUC ) ) ) ) * Max( CS,MUM ) ) ) / ( DS - MLU ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ARS / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8845312571319146}, {"determining": "( Min( ARS ,( AMS + ACS ) ) / ( ( ( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + AMS ) ) * Const ) ) - DDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( ( ( DS - CS ) - MUR ),CS ) / ( ( ( ( MLU - ( ( MUC / Min( CS ,MUM ) ) + RCSe ) ) * Min( RCSe ,CS ) ) - MLU ) - MUC ) )", "obj1": 0.9714285714285714, "obj2": 0.012238172698020206}, {"determining": "( ( ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( DDR + AMS ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8761866246907271}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) + ( Const + DDR ) )", "choosing": "( Min( ( ( MUM * RRSe ) / MUC ) ,MUM ) / ( ( MUM - Max( ( MUR + MUC ),( Max( MUM,MLU ) / ( ( Max( MUR,RMSe ) * Min( MUM ,DS ) ) + ( Max( DS,CS ) - MUC ) ) ) ) ) + ( MUR + MUR ) ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "( ( ( PN / CRS ) / Const ) / ( PN - ( ( RRS + MDR ) * ( Max( Max( FirstVNF_Mem_Server,( Max( DDR,BR ) * ( BR / CRS ) ) ),BR ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUM / MUM ) / ( MLU - ( RCSe / ( DS - ( Min( RMSe ,MUC ) - Max( ( MLU - RMSe ),MUM ) ) ) ) ) ) / Min( MUR ,CS ) )", "obj1": 0.9448979591836735, "obj2": 0.026000747474675807}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.861849297665582}, {"determining": "( Min( FirstVNF_CPU ,RRS ) + ( FirstVNF_CPU + Const ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS / ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( ( ( CS + RCSe ) + ( Min( DS ,MLU ) / MLU ) ) - ( RCSe / MUM ) ) ,( RMSe - MUR ) ),CS ) )", "obj1": 0.1, "obj2": 0.8802435212133923}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( BR * MDR ) - ( FirstVNF_Mem_Server + ( Max( BR,Max( ( DDR * FirstVNF_CPU ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ,Min( Max( DDR,DDR ) ,( ( CRS * FirstVNF_Mem ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MLU * RMSe ) - MLU ) / ( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - RRSe ) ) ) - ( RMSe / DS ) )", "obj1": 0.9040816326530612, "obj2": 0.044576292118664075}, {"determining": "Min( Max( ( ( ( ACS * PN ) - ACS ) / ( MRS - ACS ) ),( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) * ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * ( ( PN * MDR ) * CRS ) ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( Min( ( RRSe * RMSe ) ,Max( ( RCSe + DS ),Max( ( MUM * RRSe ),( MUC - RMSe ) ) ) ) / ( CS + RRSe ) ) )", "obj1": 0.9530612244897959, "obj2": 0.020586508258801935}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8321540144904129}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( Min( FirstVNF_RAM_Server ,( PN + ACS ) ) ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / ( Min( MDR ,FirstVNF_Mem_Server ) * ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * RRS ) ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) ) ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.16326530612244897, "obj2": 0.8175574149333995}, {"determining": "( Const * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( RMSe * Max( Max( RRSe,MUM ),RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / Min( Min( ( MUM / ( DS / CS ) ) ,MUC ) ,CS ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.1489795918367347, "obj2": 0.83322252393101}, {"determining": "Min( Max( Min( ( PN - ( Max( AMS,PN ) / Max( ( DDR / MDR ),FirstVNF_Mem_Server ) ) ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server + Min( ( AMS / DDR ) ,PN ) ) + Min( Const ,( FirstVNF_CPU / CRS ) ) ) + CRS ) * FirstVNF_CPU_Server ) ,Min( BR ,( ( PN / Min( DDR ,Max( ( PN / DDR ),( MRS + FirstVNF_CPU ) ) ) ) / ( CRS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RMSe,MUM ) + ( DS - ( MLU - RRSe ) ) )", "obj1": 0.9612244897959183, "obj2": 0.017141212660118595}, {"determining": "Min( Max( Min( ( ACS - MRS ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * MDR ) * Min( BR ,Max( ( DDR / FirstVNF_CPU ),Min( FirstVNF_Mem_Server ,MDR ) ) ) ) ) - ( BR * MDR ) ) ) ,Min( ( FirstVNF_RAM / MDR ) ,Min( DDR ,MRS ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( Max( ( MUM / MUM ),( CS + RRSe ) ) * ( ( MUM * ( MUM - RMSe ) ) / RCSe ) ) - ( RCSe / Max( Min( CS ,( MUR * MUC ) ),( Min( DS ,MUM ) + ( MLU / MUR ) ) ) ) ) ) - Min( ( MUR / DS ) ,( DS - CS ) ) ) - Min( Min( MUR ,MUR ) ,( Min( MUR ,RCSe ) * Max( Min( Max( RMSe,MUC ) ,RRSe ),MUM ) ) ) )", "obj1": 0.9163265306122449, "obj2": 0.03805493543893866}, {"determining": "Min( Max( ( DDR + AMS ),( ( FirstVNF_Mem + ( Max( BR,Max( ( MRS + FirstVNF_Mem_Server ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM * MRS ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( MUR + ( MUC * Min( RCSe ,MUC ) ) ) - Min( Min( MUR ,MUR ) ,( CS - ( ( MLU / ( Min( RRSe ,CS ) * ( MLU * ( MUC - RCSe ) ) ) ) - RCSe ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.04126006699067148}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_CPU / Min( BR ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( RRSe * RMSe ) - ( ( MUR - RMSe ) * ( RCSe * MUR ) ) ) / ( Min( ( ( MLU * Max( MUM,MUR ) ) / MLU ) ,( RCSe - ( RRSe / ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ) / RCSe ) )", "obj1": 0.9571428571428572, "obj2": 0.018443946552532255}, {"determining": "Min( Max( Min( ( ACS - DDR ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( ( FirstVNF_CPU * RRS ) * Max( BR,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) ) ) - ( BR * MDR ) ) ) ,( Const * MDR ) )", "choosing": "( ( Min( ( MLU - ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( Max( ( RRSe / RCSe ),Min( RMSe ,MUM ) ) ,CS ) ) ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - CS ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9183673469387755, "obj2": 0.03714461229246687}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( BR,( FirstVNF_RAM * ACS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) - ( BR * MDR ) ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( ( ( MLU * RMSe ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - RRSe ) ) ) - ( ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) - MLU ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_CPU / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ACS - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( DS / ( Min( ( ( MLU * Max( MUM,MUR ) ) / MLU ) ,( RCSe - ( RRSe / MLU ) ) ) / RCSe ) )", "obj1": 0.9673469387755103, "obj2": 0.01623470208620429}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( BR,Max( FirstVNF_CPU_Server,Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,( ( MLU * RMSe ) - MLU ) ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.02373739488163892}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ,Max( RRS,( ( FirstVNF_Mem + ( Max( BR,( FirstVNF_CPU * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * ( MDR * ARS ) ) ) ) - ( BR * RRS ) ) ) )", "choosing": "( ( Min( ( RMSe + RMSe ) ,( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - MUR ) ) ) - ( Max( ( Max( MLU,Min( MUC ,MUC ) ) + CS ),( ( RCSe / ( ( MLU * RMSe ) * CS ) ) + Min( DS ,MUC ) ) ) + ( MLU - ( RCSe * RMSe ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.0419329768748851}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),( ACS - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) / Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) ) ,Max( ( CRS + DDR ),Const ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( RCSe - MLU ) ) - Min( ( MUR / MUC ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * ( MUR - ( RRSe + ( ( RMSe / MUC ) / ( ( MUR + RMSe ) * ( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.9, "obj2": 0.04742435034615194}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / FirstVNF_Mem ) ) ) * ( Const / BR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.9959183673469387, "obj2": 0.002150840493376882}, {"determining": "Min( Max( ( AMS / ( DDR / FirstVNF_Mem ) ),( ( FirstVNF_Mem + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR - FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MLU / MUM ) / ( RRSe + CS ) ) / Min( ( MUR + RMSe ) ,MUM ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9183673469387755, "obj2": 0.03714461229246687}, {"determining": "( ( Min( Min( ( ACS + MDR ) ,MRS ) ,ARS ) + ( ( BR * ( FirstVNF_Mem - Min( ( MDR + ( AMS / CRS ) ) ,Const ) ) ) - FirstVNF_CPU_Server ) ) * Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( CS - ( ( MUM - Max( MLU,RMSe ) ) / RCSe ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8433184526280625}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8321540144904129}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Max( Max( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ),ARS ),( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - ( ( Max( DDR,( DDR - ARS ) ) - RRS ) * MDR ) ) ) + Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ) )", "choosing": "( DS / Max( MLU,MLU ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( ( Const / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ),BR ) * ( AMS + AMS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.010545523950770025}, {"determining": "Min( Min( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ) ,( ( PN - CRS ) - Const ) ) ,Min( Max( Const,MDR ) ,Max( DDR,DDR ) ) )", "choosing": "( ( ( Max( MUR,( ( MUR / ( ( MUR / CS ) * ( MUM / RMSe ) ) ) + Max( DS,MUM ) ) ) / ( MLU - ( ( RRSe * ( Max( DS,RRSe ) + DS ) ) * ( Max( MUC,MUR ) * ( MUC + MUC ) ) ) ) ) / MUR ) - ( ( ( ( DS * RMSe ) - Max( Max( RMSe,MUM ),RCSe ) ) + DS ) / MUM ) )", "obj1": 0.9469387755102041, "obj2": 0.023986538127100273}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / FirstVNF_Mem ) ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( Min( MUM ,MUR ) - CS ) / Max( MUC,MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.9918367346938776, "obj2": 0.004246300215538529}, {"determining": "( ( Max( Min( ARS ,FirstVNF_CPU ),Const ) + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_CPU / Min( DDR ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ACS - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( RCSe * Min( MUC ,MUR ) ) / ( Min( ( ( MLU * Max( MUM,MUR ) ) / MLU ) ,( MUC - ( RRSe / MLU ) ) ) / RCSe ) )", "obj1": 0.9673469387755103, "obj2": 0.01623470208620429}, {"determining": "( ( Max( DDR,ARS ) - ( AMS * BR ) ) * ( ACS / Max( BR,( CRS + ( AMS / PN ) ) ) ) )", "choosing": "( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( ( MUR + MUR ) / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8433184526280625}, {"determining": "( ( PN - ( Max( CRS,MDR ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / MDR ) ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Min( Max( MUR,( MUC / ( RCSe * Max( MLU,( MUM / MUC ) ) ) ) ) ,( ( ( MLU - MUR ) - RRSe ) / MLU ) ) )", "obj1": 0.9918367346938776, "obj2": 0.004246300215538529}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + Min( MUR ,RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.010545523950770025}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( Max( DDR,BR ) * ( Const / BR ) ),Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( ( MUM / MUC ) + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0012650504169780304}, {"determining": "( ( Max( ( Max( DDR,BR ) * ( Const / BR ) ),ARS ) - ( AMS * BR ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( RMSe * Max( Max( RRSe,MUM ),RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( MUC / ( RCSe * Max( MLU,( MUM / MUC ) ) ) ),( MUM / DS ) ) )", "obj1": 0.1489795918367347, "obj2": 0.83322252393101}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( Max( DDR,BR ) * ( Const / BR ) ),Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( ( MUM / MUC ) + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0012650504169780304}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Max( ( AMS - Max( ( ( ( FirstVNF_CPU * MDR ) * FirstVNF_RAM ) * FirstVNF_Mem ),ARS ) ),DDR ) ) )", "choosing": "( ( Min( CS ,( ( RCSe + CS ) / MUC ) ) / MUR ) - ( ( MUC - RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Max( ( AMS - Max( ( ( ( MDR - BR ) - Max( BR,AMS ) ) * FirstVNF_Mem ),ARS ) ),DDR ) ) )", "choosing": "( ( Min( CS ,( RCSe * CS ) ) / MUR ) - ( MUC / ( MUC - ( CS * ( MLU / ( MLU - Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( ( BR * ( FirstVNF_CPU_Server + DDR ) ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) - ( ( RRS + ( MDR / ( FirstVNF_RAM_Server / ( FirstVNF_CPU - Min( RRS ,FirstVNF_RAM_Server ) ) ) ) ) * ( FirstVNF_Mem / Max( CRS,Const ) ) ) ) / ( FirstVNF_CPU / Max( DDR,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe + Min( RCSe ,MUR ) ) - ( RMSe + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),( MUC - Max( MUM,( CS * RRSe ) ) ) ) + ( MUM - ( MUR + Max( MLU,Min( RCSe ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ( ( DDR * FirstVNF_CPU_Server ) + MDR ) * ( Max( CRS,Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( RMSe + ( ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "( Min( PN ,( ( FirstVNF_Mem_Server + MDR ) * ( AMS / MDR ) ) ) / ( MRS / ( ACS * ACS ) ) )", "choosing": "( ( MLU / ( ( ( ( DS / ( MUM / CS ) ) + RCSe ) * MUM ) * CS ) ) / Min( MUR ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( Max( ( ( ( ( CRS / FirstVNF_RAM ) - RRS ) + MRS ) - Min( FirstVNF_RAM ,BR ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / FirstVNF_Mem ) ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( ( ( MUC - CS ) / Max( CS,MUM ) ) - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( Min( MUM ,MUR ) - CS ) / Max( MUC,MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8958148423992437}, {"determining": "( ( PN - ( ( ( AMS - ARS ) + Min( ( Min( ( FirstVNF_RAM - ARS ) ,FirstVNF_RAM ) / ( ARS - FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem,DDR ) - MDR ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / ( ( BR * AMS ) - Max( ARS,Max( ARS,BR ) ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "Min( ( ( ( ( RCSe / RCSe ) - CS ) + ( MLU * CS ) ) - MUM ) ,( RMSe + ( ( ( Max( ( ( RCSe / MUR ) + RRSe ),( ( RMSe * MUR ) * MUR ) ) / ( ( RRSe / ( MUM / RCSe ) ) / RCSe ) ) + Min( MUC ,( CS - Min( DS ,( RRSe / RCSe ) ) ) ) ) + ( RMSe - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7959183673469388, "obj2": 0.10177147378877685}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.26326530612244897, "obj2": 0.635118734034016}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( ( Max( ( ARS / RRS ),Const ) + Min( Max( ( FirstVNF_RAM_Server / BR ),MRS ) ,Const ) ) - Min( ( Max( DDR,Min( MDR ,( FirstVNF_RAM / BR ) ) ) * FirstVNF_Mem ) ,ARS ) ) / Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,Max( ( ( ( CRS + FirstVNF_CPU ) + ( MDR + BR ) ) * ( ACS * BR ) ),FirstVNF_CPU_Server ) ) ),DDR ) )", "choosing": "( ( ( MUC - MUM ) / ( ( RMSe + MUR ) / ( RMSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUR * MUR ) / RMSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( RRSe - MUR ) ) ) )", "obj1": 0.4714285714285714, "obj2": 0.38629977454758124}, {"determining": "( ( Const / Min( ACS ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,ARS ) ) ) ) * ( PN - Max( ( CRS / FirstVNF_Mem ),AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( RCSe - Min( Min( Min( ( CS * MUC ) ,( MUR + MUC ) ) ,MUC ) ,CS ) ) ) ),( ( ( ( MUM * MUM ) * MUC ) * ( RCSe / MUR ) ) - CS ) )", "obj1": 0.7448979591836735, "obj2": 0.12269990469959279}, {"determining": "( ( AMS - Max( ( BR / Max( DDR,BR ) ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUM ) / RCSe ) ) - ( ( RMSe + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.44693877551020406, "obj2": 0.42192028840623746}, {"determining": "( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( DDR + BR ) * ( BR / Const ) ) / ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Max( ( DS * ( Min( MUC ,( ( DS + RCSe ) / MUR ) ) + MUC ) ),( MUC - RRSe ) ) ) - ( MUC - ( DS * ( RMSe + Min( RRSe ,( Min( ( RCSe / RRSe ) ,MLU ) * MLU ) ) ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.5333534044983416}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * ( FirstVNF_RAM * ACS ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.348946036325002}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,MUR ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.44285714285714284, "obj2": 0.4837218763889074}, {"determining": "( ( AMS - Max( ( Max( Min( MDR ,FirstVNF_CPU ),DDR ) * ( PN / FirstVNF_Mem ) ),Const ) ) / ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( ( MLU + ( ( RCSe * DS ) * RCSe ) ) / MUC ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - RRSe ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( RMSe / MUM ) * MUM ) ) - MUR ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.679292893601322}, {"determining": "( Max( MRS,( ( FirstVNF_CPU_Server + ( PN / FirstVNF_CPU ) ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) * ( Min( ( Const - RRS ) ,CRS ) * Const ) ) * Min( CRS ,CRS ) ) ) ) / ( PN - Min( ( RRS + AMS ) ,( Max( CRS,( FirstVNF_CPU_Server - MRS ) ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "Min( ( MUR - ( DS / CS ) ) ,( RCSe + ( ( MUM - ( DS / ( CS / ( Max( RRSe,MUR ) * DS ) ) ) ) + Max( ( MUR * DS ),( ( MUM - MUR ) + RMSe ) ) ) ) )", "obj1": 0.5836734693877551, "obj2": 0.30504492281383727}, {"determining": "( ( Const / FirstVNF_Mem ) * ( ( ( BR / ( RRS - ( Const * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_CPU_Server ) + ( Min( ( DDR - ACS ) ,( Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) * FirstVNF_Mem_Server ) ) * ( ACS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS / Max( ( ( DS - ( ( Min( DS ,DS ) - MUR ) + RCSe ) ) + ( MUM - RMSe ) ),( MUC / Max( ( RRSe * RMSe ),DS ) ) ) ) * ( ( ( RMSe + RMSe ) / Min( Max( DS,( Max( MLU,( RCSe + MUM ) ) * ( Min( MLU ,DS ) + DS ) ) ) ,( RMSe / MLU ) ) ) / ( RRSe + CS ) ) )", "obj1": 0.7183673469387755, "obj2": 0.16132175323841497}, {"determining": "( ( Max( ( RRS - ( FirstVNF_RAM * DDR ) ),( ACS * MDR ) ) - AMS ) / Min( ACS ,Min( ARS ,( ACS * ( DDR - ( ACS * ACS ) ) ) ) ) )", "choosing": "( ( ( RCSe - MUC ) / MUR ) - ( ( CS - ( ( ( Max( DS,MUC ) / MLU ) + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.3979591836734694, "obj2": 0.5278133555986517}, {"determining": "( Min( PN ,( ( FirstVNF_Mem_Server + MDR ) * ( AMS / MDR ) ) ) / ( MRS / ( ACS * ACS ) ) )", "choosing": "( ( MLU / ( ( ( ( DS / ( MUM / CS ) ) + RCSe ) * MUM ) * CS ) ) / Min( MUR ,CS ) )", "obj1": 0.7326530612244898, "obj2": 0.1493582000869129}, {"determining": "( ( ( ( DDR - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) - Max( ( ( Min( ACS ,( ( AMS - BR ) - FirstVNF_Mem ) ) + CRS ) - FirstVNF_CPU ),ARS ) ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( Min( CS ,RRSe ) + ( MUC + RRSe ) ) * RCSe ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( MLU + DS ) ) - RCSe ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4122448979591837, "obj2": 0.5114250867953828}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) + ( Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) * Max( ( ARS / FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( MUR * ( ( RMSe - CS ) + Max( ( CS * ( Max( RMSe,( MUR + ( DS / CS ) ) ) - MLU ) ),( DS / MUM ) ) ) )", "obj1": 0.636734693877551, "obj2": 0.27030808835089826}, {"determining": "( ( PN - ( ( RRS + MDR ) * Min( Min( Max( PN,FirstVNF_Mem ) ,( ARS / BR ) ) ,PN ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RRSe ) - RMSe ) + Min( MUM ,MLU ) ) ) ,( RMSe + ( Max( MUR,( MUR * DS ) ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.463265306122449, "obj2": 0.4064914575501343}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) / ( RRS * ( CRS * FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( AMS,ARS ),( ARS + PN ) ) / FirstVNF_Mem ) ) ) ,( AMS * ( FirstVNF_CPU - ( FirstVNF_CPU + RRS ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( MLU - MUC ),( Max( DS,DS ) / DS ) ) ,( ( CS * RCSe ) - ( MUM * RCSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.3044710304440972}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,MUR ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.34559390746848123}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( ( RRS + FirstVNF_RAM_Server ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( MRS ,( BR * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( MUC ,Min( ( MLU + ( RRSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( ( ( MLU / MUC ) / MUM ) - ( ( RMSe * RCSe ) + ( RCSe * CS ) ) ) ),MUC ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM - ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.42653061224489797, "obj2": 0.495001754199449}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - Min( Const ,RRS ) ) ,( ( ( FirstVNF_CPU_Server + DDR ) - BR ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( RRSe - ( Min( RRSe ,MUC ) - RMSe ) ) ) - MLU ),( Min( RCSe ,( ( DS + MUR ) * ( RRSe * MUM ) ) ) * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.7142857142857143, "obj2": 0.20690242937450085}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + ( Const - FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,MLU ) / Max( Min( MUM ,DS ),MUM ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "Min( Max( Min( ( ACS - ACS ) ,( ACS - FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ( Max( BR,( ( DDR / FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) - ( Min( ( ( Min( ( Min( RRSe ,MUM ) * MLU ) ,MLU ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.04759271207600989}, {"determining": "( ( Min( ( FirstVNF_CPU - ( ( RRS + ( ACS + MRS ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) - FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + Max( PN,MDR ) ) ) * ( ( FirstVNF_CPU + RRS ) * FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) + ( ( CRS * FirstVNF_Mem_Server ) - AMS ) )", "choosing": "Max( ( RMSe * RMSe ),Min( Min( ( RMSe * Min( Max( ( Min( CS ,CS ) - RRSe ),MUC ) ,MLU ) ) ,( RRSe * CS ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / DS ) ) + MUM ) ) * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( AMS * PN ) + ( Const - Min( ( ACS + ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ,( ( Const + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) / RRS ) ) ) )", "choosing": "( ( ( MUM / MUM ) / ( RRSe + MUM ) ) / ( RRSe * Max( Max( Max( ( RMSe + ( ( RRSe * MUM ) * MLU ) ),MUR ),( ( MUR * MUM ) - MUC ) ),( ( ( MUC - DS ) / RCSe ) / ( MUM - CS ) ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.740803066329768}, {"determining": "( Min( ACS ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM * CRS ) ) / ACS ) ,BR ) ) / DDR ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC / ( RCSe - ( Min( RMSe ,( RMSe / RCSe ) ) - RMSe ) ) ) ) ) - ( ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) - DS ) )", "obj1": 0.15918367346938775, "obj2": 0.8119757933690984}, {"determining": "( ( ( AMS - Max( ( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) ) * ( Const / BR ) )", "choosing": "( ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / MUR ) - ( ( ( ( ( Min( RRSe ,MLU ) - MUM ) * MUM ) / RMSe ) + DS ) / MUM ) )", "obj1": 0.336734693877551, "obj2": 0.5912134411120042}, {"determining": "( ( AMS * ACS ) / Max( ( ( ACS - ACS ) * ( PN - FirstVNF_RAM_Server ) ),BR ) )", "choosing": "( ( ( ( ( DS * CS ) / MUR ) / ( MUR / MUC ) ) + MUM ) - ( DS - ( CS - ( MUM - ( RRSe * CS ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7600334505949903}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - ( ( MDR / FirstVNF_RAM_Server ) + ACS ) ) + ( ( FirstVNF_RAM / Min( PN ,FirstVNF_Mem ) ) * CRS ) )", "choosing": "( ( ( MUM / MUR ) * RMSe ) / ( ( ( Min( RRSe ,( CS * RMSe ) ) * ( ( MUR - Min( Max( RMSe,MLU ) ,Max( MUC,MLU ) ) ) + DS ) ) + ( MUM + MUC ) ) + RMSe ) )", "obj1": 0.6714285714285714, "obj2": 0.2381269419807639}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( RMSe * Max( Max( ( CS - MUC ),MUM ),RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7829511098189514}, {"determining": "( ( FirstVNF_CPU_Server / ( ( Min( BR ,AMS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) / PN ) ) ) * Min( PN ,BR ) ) ) * ( FirstVNF_CPU - FirstVNF_CPU ) )", "choosing": "Max( ( ( MUM - DS ) / ( Min( CS ,( MUC * DS ) ) * RRSe ) ),Min( ( DS + ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - ( RMSe + DS ) ) ) ,MLU ) ) ) ,( ( RRSe / ( DS / MUC ) ) - ( MUM * Max( ( Min( ( CS / MUM ) ,MUC ) / ( Max( DS,RCSe ) - RMSe ) ),( RRSe * CS ) ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7308844164389094}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( ( MUM - CS ) / Min( RCSe ,( RMSe + ( RRSe + Max( RRSe,MUM ) ) ) ) ) / Min( ( RMSe + ( RRSe - MUC ) ) ,Max( DS,DS ) ) ),( ( Min( RCSe ,RMSe ) + CS ) * RMSe ) ) ,( ( CS * RCSe ) - ( MUM * RCSe ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2875590160815293}, {"determining": "Min( Max( Min( ( ARS / RRS ) ,( ACS + ACS ) ),( ( FirstVNF_Mem + Max( Max( Const,FirstVNF_Mem_Server ),FirstVNF_RAM ) ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,PN ) / Max( DDR,FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( ( Max( Min( ( Min( Min( CS ,RRSe ) ,( DS + MUC ) ) - ( ( RCSe + RMSe ) * RMSe ) ) ,( DS * MUM ) ),MLU ) - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( CS / MUC ) ) + MUM ) ) * ( Max( RMSe,RCSe ) * DS ) ),RRSe ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7807894345175307}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU - PN ) ,BR ) ) / FirstVNF_Mem )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + RMSe ) ) - Min( ( MUR * DS ) ,( ( CS + ( ( MUC + MLU ) - ( RCSe - RRSe ) ) ) + RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( Min( DS ,( RRSe - DS ) ) * ( ( MUC + RMSe ) / ( RMSe - MUC ) ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.748302548957801}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "Min( Max( ( ( Max( Min( AMS ,FirstVNF_RAM ),MRS ) * FirstVNF_CPU_Server ) * ACS ),( MDR + ( FirstVNF_RAM * ARS ) ) ) ,Min( ( ( DDR - FirstVNF_CPU_Server ) - Min( PN ,RRS ) ) ,Min( DDR ,DDR ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( ( DS * MUC ) / Min( MUC ,CS ) ) - MLU ) ) - Min( ( DS * MUR ) ,( MUR / DS ) ) ) - Min( ( RCSe / CS ) ,( Min( RCSe ,( ( Max( Min( RCSe ,CS ),MLU ) * DS ) + Min( CS ,DS ) ) ) + Min( MLU ,MUM ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.03129395782837683}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8321540144904129}, {"determining": "( ( AMS - Max( Min( Min( ARS ,FirstVNF_Mem ) ,Min( BR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( RMSe + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - ( RMSe * Min( MLU ,MUM ) ) ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5904940164180497}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8879560768570286}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "Min( Min( Min( Max( ( ARS - FirstVNF_RAM_Server ),( ( FirstVNF_CPU - Const ) + ACS ) ) ,( ACS / ( Min( MRS ,AMS ) / FirstVNF_CPU_Server ) ) ) ,BR ) ,( FirstVNF_CPU * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( CS / MLU ),( Max( ( Min( ( MUC / MLU ) ,RMSe ) + RMSe ),MUM ) - Max( ( MUC - MLU ),Max( MUC,DS ) ) ) ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + MUC ) + RRSe ) ,MLU ) ) ,DS ) ,Max( RRSe,( Min( MUM ,( ( RRSe / ( MUC + CS ) ) * MLU ) ) * MUC ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7544423640090209}, {"determining": "( ACS / Min( MRS ,Min( ( FirstVNF_Mem_Server - Min( AMS ,( FirstVNF_RAM - AMS ) ) ) ,( PN + ACS ) ) ) )", "choosing": "( ( MUM + MUR ) - ( DS - Max( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ),( ( MUM - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - RRSe ) ) ) )", "obj1": 0.24897959183673468, "obj2": 0.7281816868410307}, {"determining": "( ACS / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.19387755102040816, "obj2": 0.782779673390625}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( FirstVNF_CPU_Server / BR ) / BR ) ) )", "choosing": "( Max( ( Min( Min( RRSe ,MUR ) ,( ( MUR / ( MUC + RRSe ) ) / Max( DS,( CS + RRSe ) ) ) ) - CS ),( MUM / DS ) ) + CS )", "obj1": 0.12653061224489795, "obj2": 0.8589673024473602}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ( ( ( FirstVNF_CPU * BR ) - PN ) * FirstVNF_CPU ) ) ) - Const ) / BR ) )", "choosing": "Max( Min( ( Max( RMSe,( MUR + DS ) ) / DS ) ,( RMSe - CS ) ),( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( Max( Max( RCSe,RMSe ),( RCSe - ( DS - RCSe ) ) ),MUM ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8646387774221315}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,( ( CS * RCSe ) - ( MUM - RCSe ) ) )", "obj1": 0.6346938775510204, "obj2": 0.28397960378299636}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( Max( DDR,BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( ( MUM / MUC ) + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,( MUC - CS ) ) ) ) ) ) ) )", "obj1": 0.9897959183673469, "obj2": 0.005161771579956421}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - RRS ),ARS ) ) / Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * MUR ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + DS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( BR,Max( FirstVNF_CPU_Server,Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + Min( MUR ,RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9795918367346939, "obj2": 0.00982877659334165}, {"determining": "( ACS / Max( BR,( CRS + ( Max( CRS,PN ) * PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RCSe ) * RMSe ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS - MUR ) / RCSe ) ) - ( ( MLU + Max( RCSe,MUM ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.13877551020408163, "obj2": 0.84382541227652}, {"determining": "( ( Const - ( ( PN * Const ) + RRS ) ) * ( Max( BR,DDR ) / Min( ( ( Const - ( Const / AMS ) ) * ARS ) ,RRS ) ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( ( MUC + ( Max( DS,( MLU - Min( MLU ,( CS - MUC ) ) ) ) * Max( CS,MUM ) ) ) / ( DS - MLU ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ARS / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8845312571319146}, {"determining": "( Min( ARS ,( AMS + ACS ) ) / ( ( ( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + AMS ) ) * Const ) ) - DDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( ( ( DS - CS ) - MUR ),CS ) / ( ( ( ( MLU - ( ( MUC / Min( CS ,MUM ) ) + RCSe ) ) * Min( RCSe ,CS ) ) - MLU ) - MUC ) )", "obj1": 0.9714285714285714, "obj2": 0.012238172698020206}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "Max( ( ( Max( RCSe,( ( ( MUR - MUM ) / DS ) + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( DS / CS ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ),( CS + RCSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8329880263221716}, {"determining": "( ( ( FirstVNF_Mem * ( FirstVNF_Mem_Server / PN ) ) - Max( FirstVNF_RAM_Server,RRS ) ) + ( Const + DDR ) )", "choosing": "( Min( ( ( MUM * RRSe ) / MUC ) ,MUM ) / ( ( MUM - Max( ( MUR + MUC ),( Max( MUM,MLU ) / ( ( Max( MUR,RMSe ) * Min( MUM ,DS ) ) + ( Max( DS,CS ) - MUC ) ) ) ) ) + ( MUR + MUR ) ) )", "obj1": 0.6693877551020408, "obj2": 0.2574659037748033}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( ( BR / CRS ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,MDR ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,( ( MLU * RMSe ) - MLU ) ) ) - MLU ) ,( ( DS + Min( ( RRSe + RRSe ) ,( RRSe / MUC ) ) ) * MUR ) ) - Min( ( RCSe / DS ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.024296936913491805}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.861849297665582}, {"determining": "( Min( FirstVNF_CPU ,RRS ) + ( FirstVNF_CPU + Const ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS / ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( ( ( CS + RCSe ) + ( Min( DS ,MLU ) / MLU ) ) - ( RCSe / MUM ) ) ,( RMSe - MUR ) ),CS ) )", "obj1": 0.1, "obj2": 0.8802435212133923}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( BR * MDR ) - ( FirstVNF_Mem_Server + ( Max( BR,Max( ( DDR * FirstVNF_CPU ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ,Min( Max( DDR,DDR ) ,( ( CRS * FirstVNF_Mem ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MLU * RMSe ) - MLU ) / ( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - RRSe ) ) ) - ( RMSe / DS ) )", "obj1": 0.9040816326530612, "obj2": 0.044576292118664075}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) * FirstVNF_RAM ) + ( Max( ( ( FirstVNF_RAM_Server * ( DDR * ( FirstVNF_RAM_Server / AMS ) ) ) * ARS ),AMS ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( Max( RCSe,( MUR + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( DS / CS ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( ( RRSe * RCSe ),MUC ) ) ) ) ,CS ),( Min( ( ( Min( CS ,DS ) * MUC ) - ( ( MUR / ( MUM / CS ) ) + CS ) ) ,DS ) - MUM ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8738710046890669}, {"determining": "Min( Max( ( ( ( ACS * PN ) - ACS ) / ( MRS - ACS ) ),( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) * ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * ( ( PN * MDR ) * CRS ) ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( Min( ( RRSe * RMSe ) ,Max( ( RCSe + DS ),Max( ( MUM * RRSe ),( MUC - RMSe ) ) ) ) / ( CS + RRSe ) ) )", "obj1": 0.9530612244897959, "obj2": 0.020586508258801935}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_Mem_Server,DDR ) ,( FirstVNF_CPU / Max( ARS,ARS ) ) ) ) ,( ( ( MRS - Const ) + ( ACS / BR ) ) - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ( Max( ( DDR + ARS ),Min( DDR ,DDR ) ) / FirstVNF_Mem ) - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( Min( ( MLU / MUC ) ,MUC ) - ( ( MUR - RRSe ) * ( MUR * MUR ) ) ) / ( CS - RRSe ) )", "obj1": 0.9571428571428572, "obj2": 0.01839621576838663}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / MDR ) ) + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,Min( FirstVNF_CPU ,Min( BR ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ( Max( Max( ARS,DDR ),Const ) / FirstVNF_Mem ) - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Min( MUM ,MUR ) ) / ( CS + MUM ) ) ,( ( RRSe / ( ( MUM - DS ) / ( CS * RRSe ) ) ) - RCSe ) ) / RCSe ) )", "obj1": 0.9612244897959183, "obj2": 0.016377062804846135}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( BR / BR ) ) ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / FirstVNF_Mem ) ) ) / ( ( PN / CRS ) / FirstVNF_Mem ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.936734693877551, "obj2": 0.028419893462602135}, {"determining": "Min( Max( Min( ( ACS - MRS ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * MDR ) * Min( BR ,Max( ( DDR / FirstVNF_CPU ),Min( FirstVNF_Mem_Server ,MDR ) ) ) ) ) - ( BR * MDR ) ) ) ,Min( ( FirstVNF_RAM / MDR ) ,Min( DDR ,MRS ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( Max( ( MUM / MUM ),( CS + RRSe ) ) * ( ( MUM * ( MUM - RMSe ) ) / RCSe ) ) - ( RCSe / Max( Min( CS ,( MUR * MUC ) ),( Min( DS ,MUM ) + ( MLU / MUR ) ) ) ) ) ) - Min( ( MUR / DS ) ,( DS - CS ) ) ) - Min( Min( MUR ,MUR ) ,( Min( MUR ,RCSe ) * Max( Min( Max( RMSe,MUC ) ,RRSe ),MUM ) ) ) )", "obj1": 0.9163265306122449, "obj2": 0.03805493543893866}, {"determining": "Min( Max( ( DDR + AMS ),( ( FirstVNF_Mem + ( Max( BR,Max( ( MRS + FirstVNF_Mem_Server ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM * MRS ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( MUR + ( MUC * Min( RCSe ,MUC ) ) ) - Min( Min( MUR ,MUR ) ,( CS - ( ( MLU / ( Min( RRSe ,CS ) * ( MLU * ( MUC - RCSe ) ) ) ) - RCSe ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.04126006699067148}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( DDR - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) - MLU ) ,( ( CS * RCSe ) - ( MUM * RCSe ) ) )", "obj1": 0.6306122448979592, "obj2": 0.28458925307536237}, {"determining": "Min( Max( ( AMS / ( DDR / FirstVNF_Mem ) ),( ( FirstVNF_Mem + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR - FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MLU / MUM ) / ( RRSe + CS ) ) / Min( ( MUR + RMSe ) ,MUM ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9183673469387755, "obj2": 0.03714461229246687}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_CPU / Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ACS - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( DS / ( Min( ( ( MLU * Max( MUM,MUR ) ) / MLU ) ,( RCSe - ( RRSe / MLU ) ) ) / RCSe ) )", "obj1": 0.9673469387755103, "obj2": 0.01623470208620429}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) )", "obj1": 0.9489795918367347, "obj2": 0.022638591460948283}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ,Max( RRS,( ( FirstVNF_Mem + ( Max( BR,( FirstVNF_CPU * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * ( MDR * ARS ) ) ) ) - ( BR * RRS ) ) ) )", "choosing": "( ( Min( ( RMSe + RMSe ) ,( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - MUR ) ) ) - ( Max( ( Max( MLU,Min( MUC ,MUC ) ) + CS ),( ( RCSe / ( ( MLU * RMSe ) * CS ) ) + Min( DS ,MUC ) ) ) + ( MLU - ( RCSe * RMSe ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.0419329768748851}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( Max( DDR,BR ) * ( Const / BR ) ),Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.004160966140070369}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),( ACS - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) / Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) ) ,Max( ( CRS + DDR ),Const ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( RCSe - MLU ) ) - Min( ( MUR / MUC ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * ( MUR - ( RRSe + ( ( RMSe / MUC ) / ( ( MUR + RMSe ) * ( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.9, "obj2": 0.04742435034615194}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Max( ( AMS - Max( ( ( ( MDR - BR ) - Max( BR,AMS ) ) * FirstVNF_Mem ),ARS ) ),DDR ) ) )", "choosing": "( ( Min( CS ,( RCSe * CS ) ) / MUR ) - ( MUC / ( MUC - ( CS * ( MLU / ( MLU - Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 0.9959183673469387, "obj2": 0.002134555175228033}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( FirstVNF_RAM_Server,( RRS * ( Const / BR ) ) ),Const ) / FirstVNF_Mem ) ) ) * ( Const / BR ) )", "choosing": "( ( Min( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.936734693877551, "obj2": 0.028419893462602135}, {"determining": "Min( Max( Min( ( ACS - DDR ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( ( FirstVNF_CPU * RRS ) * Max( BR,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) ) ) - ( BR * MDR ) ) ) ,( Const * MDR ) )", "choosing": "( ( Min( ( MLU - ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( Max( ( RRSe / RCSe ),Min( RMSe ,MUM ) ) ,CS ) ) ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - CS ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9183673469387755, "obj2": 0.03714461229246687}, {"determining": "Min( Min( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ) ,( ( PN - CRS ) - Const ) ) ,Min( Max( Const,MDR ) ,Max( DDR,DDR ) ) )", "choosing": "( ( ( Max( MUR,( ( MUR / ( ( MUR / CS ) * ( MUM / RMSe ) ) ) + Max( DS,MUM ) ) ) / ( MLU - ( ( RRSe * ( Max( DS,RRSe ) + DS ) ) * ( Max( MUC,MUR ) * ( MUC + MUC ) ) ) ) ) / MUR ) - ( ( ( ( DS * RMSe ) - Max( Max( RMSe,MUM ),RCSe ) ) + DS ) / MUM ) )", "obj1": 0.9469387755102041, "obj2": 0.023986538127100273}, {"determining": "( ( Min( Min( ( ACS + MDR ) ,MRS ) ,ARS ) + ( ( BR * ( FirstVNF_Mem - Min( ( MDR + ( AMS / CRS ) ) ,Const ) ) ) - FirstVNF_CPU_Server ) ) * Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( CS - ( ( MUM - Max( MLU,RMSe ) ) / RCSe ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8433184526280625}, {"determining": "( ( ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( DDR + AMS ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8761866246907271}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( ( Const / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ),BR ) * ( AMS + AMS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.010545523950770025}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8321540144904129}, {"determining": "( ( Max( DDR,ARS ) - ( AMS * BR ) ) * ( ACS / Max( BR,( CRS + ( AMS / PN ) ) ) ) )", "choosing": "( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( ( MUR + MUR ) / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8433184526280625}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( RRSe * RMSe ) - ( ( MUR - RMSe ) * ( RCSe * MUR ) ) ) / ( Min( ( ( MLU * Max( MUM,MUR ) ) / MLU ) ,( RCSe - Max( RRSe,MUM ) ) ) / RCSe ) )", "obj1": 0.9673469387755103, "obj2": 0.01623470208620429}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + Min( MUR ,RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.010545523950770025}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( Max( DDR,BR ) * ( Const / BR ) ),Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( ( MUM / MUC ) + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0012650504169780304}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( Max( DDR,BR ) * ( Const / BR ) ),Const ) / FirstVNF_Mem ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( ( MUM / MUC ) + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0012650504169780304}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( ( DDR * ARS ),Const ) / FirstVNF_Mem ) ) ) ,( Min( ( Const * RRS ) ,FirstVNF_CPU ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( ( CS - MUM ) / Min( Max( DS,RMSe ) ,( RMSe + ( RRSe + Max( RRSe,MUM ) ) ) ) ) / Min( ( RMSe + ( RRSe - Min( ( MUR / DS ) ,( DS - MUR ) ) ) ) ,Max( DS,DS ) ) ),( ( Min( RCSe ,RMSe ) + CS ) * RMSe ) ) ,( Max( CS,RCSe ) - ( MUM * RCSe ) ) )", "obj1": 0.6346938775510204, "obj2": 0.28397960378299636}, {"determining": "( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( ( BR * ( FirstVNF_CPU_Server + DDR ) ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) - ( ( RRS + MDR ) * ( FirstVNF_Mem / Max( CRS,Const ) ) ) ) / ( FirstVNF_CPU / Max( DDR,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "( ( PN - ( ( ACS - DDR ) * ( AMS / MDR ) ) ) / ( MRS / Const ) )", "choosing": "( ( ( RCSe * Min( MUC ,RCSe ) ) / MLU ) / Min( MUR ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( ( FirstVNF_Mem_Server + MDR ) * ( AMS / MDR ) ) ) / ( MRS / ( ACS * ACS ) ) )", "choosing": "( ( MLU / ( ( ( ( DS / ( MUM / CS ) ) + RCSe ) * MUM ) * CS ) ) / Min( MUR ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8958148423992437}, {"determining": "( ( PN - ( ( ( AMS - ARS ) + Min( ( Min( ( FirstVNF_RAM - ARS ) ,FirstVNF_RAM ) / ( ARS - FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem,DDR ) - MDR ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / ( ( BR * AMS ) - Max( ARS,Max( ARS,BR ) ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "Min( ( ( ( ( RCSe / RCSe ) - CS ) + ( MLU * CS ) ) - MUM ) ,( RMSe + ( ( ( Max( ( ( RCSe / MUR ) + RRSe ),( ( RMSe * MUR ) * MUR ) ) / ( ( RRSe / ( MUM / RCSe ) ) / RCSe ) ) + Min( MUC ,( CS - Min( DS ,( RRSe / RCSe ) ) ) ) ) + ( RMSe - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7959183673469388, "obj2": 0.10177147378877685}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.26326530612244897, "obj2": 0.635118734034016}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( ( Max( ( ARS / RRS ),Const ) + Min( Max( ( FirstVNF_RAM_Server / BR ),MRS ) ,Const ) ) - Min( ( Max( DDR,Min( MDR ,( FirstVNF_RAM / BR ) ) ) * FirstVNF_Mem ) ,ARS ) ) / Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,Max( ( ( ( CRS + FirstVNF_CPU ) + ( MDR + BR ) ) * ( ACS * BR ) ),FirstVNF_CPU_Server ) ) ),DDR ) )", "choosing": "( ( ( MUC - MUM ) / ( ( RMSe + MUR ) / ( RMSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUR * MUR ) / RMSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( RRSe - MUR ) ) ) )", "obj1": 0.4714285714285714, "obj2": 0.38629977454758124}, {"determining": "( ( AMS - Max( ( BR / Max( DDR,BR ) ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUM ) / RCSe ) ) - ( ( RMSe + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.44693877551020406, "obj2": 0.42192028840623746}, {"determining": "( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( DDR + BR ) * ( BR / Const ) ) / ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Max( ( DS * ( Min( MUC ,( ( DS + RCSe ) / MUR ) ) + MUC ) ),( MUC - RRSe ) ) ) - ( MUC - ( DS * ( RMSe + Min( RRSe ,( Min( ( RCSe / RRSe ) ,MLU ) * MLU ) ) ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.5333534044983416}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * ( FirstVNF_RAM * ACS ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.348946036325002}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - RRS ),ARS ) ) / ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( RRSe * RMSe ) - ( ( MUR - RMSe ) * ( RCSe * MUR ) ) ) / ( RRSe + CS ) ) * MUR ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + DS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4387755102040816, "obj2": 0.4807625911523837}, {"determining": "( Max( MRS,( ( FirstVNF_CPU_Server + ( PN / FirstVNF_CPU ) ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) * ( Min( ( Const - RRS ) ,CRS ) * Const ) ) * Min( CRS ,CRS ) ) ) ) / ( PN - Min( ( RRS + AMS ) ,( Max( CRS,( FirstVNF_CPU_Server - MRS ) ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "Min( ( MUR - ( DS / CS ) ) ,( RCSe + ( ( MUM - ( DS / ( CS / ( Max( RRSe,MUR ) * DS ) ) ) ) + Max( ( MUR * DS ),( ( MUM - MUR ) + RMSe ) ) ) ) )", "obj1": 0.5836734693877551, "obj2": 0.30504492281383727}, {"determining": "( ( Const / FirstVNF_Mem ) * ( ( ( BR / ( RRS - ( Const * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_CPU_Server ) + ( Min( ( DDR - ACS ) ,( Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) * FirstVNF_Mem_Server ) ) * ( ACS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS / Max( ( ( DS - ( ( Min( DS ,DS ) - MUR ) + RCSe ) ) + ( MUM - RMSe ) ),( MUC / Max( ( RRSe * RMSe ),DS ) ) ) ) * ( ( ( RMSe + RMSe ) / Min( Max( DS,( Max( MLU,( RCSe + MUM ) ) * ( Min( MLU ,DS ) + DS ) ) ) ,( RMSe / MLU ) ) ) / ( RRSe + CS ) ) )", "obj1": 0.7183673469387755, "obj2": 0.16132175323841497}, {"determining": "( ( Const / Min( ACS ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,ARS ) ) ) ) * ( PN - Max( ( CRS / FirstVNF_Mem ),AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( RCSe - Min( Min( Min( ( CS * MUC ) ,( MUR + MUC ) ) ,MUC ) ,CS ) ) ) ),( ( ( ( MUM * MUM ) * MUC ) * ( RCSe / MUR ) ) - CS ) )", "obj1": 0.7448979591836735, "obj2": 0.12269990469959279}, {"determining": "( ( Max( ( RRS - ( FirstVNF_RAM * DDR ) ),( ACS * MDR ) ) - AMS ) / Min( ACS ,Min( ARS ,( ACS * ( DDR - ( ACS * ACS ) ) ) ) ) )", "choosing": "( ( ( RCSe - MUC ) / MUR ) - ( ( CS - ( ( ( Max( DS,MUC ) / MLU ) + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.3979591836734694, "obj2": 0.5278133555986517}, {"determining": "( ( AMS - Max( ( Max( Min( MDR ,FirstVNF_CPU ),DDR ) * ( PN / FirstVNF_Mem ) ),Const ) ) / ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( ( MLU + ( ( RCSe * DS ) * RCSe ) ) / MUC ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - RRSe ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( RMSe / MUM ) * MUM ) ) - MUR ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.679292893601322}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6408163265306123, "obj2": 0.24905469676390593}, {"determining": "( Min( PN ,( ( FirstVNF_Mem_Server + MDR ) * ( AMS / MDR ) ) ) / ( MRS / ( ACS * ACS ) ) )", "choosing": "( ( MLU / ( ( ( ( DS / ( MUM / CS ) ) + RCSe ) * MUM ) * CS ) ) / Min( MUR ,CS ) )", "obj1": 0.7326530612244898, "obj2": 0.1493582000869129}, {"determining": "( ( ( ( DDR - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) - Max( ( ( Min( ACS ,( ( AMS - BR ) - FirstVNF_Mem ) ) + CRS ) - FirstVNF_CPU ),ARS ) ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( Min( CS ,RRSe ) + ( MUC + RRSe ) ) * RCSe ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( MLU + DS ) ) - RCSe ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4122448979591837, "obj2": 0.5114250867953828}, {"determining": "( ( PN - ( ( RRS + MDR ) * Min( Min( Max( PN,FirstVNF_Mem ) ,( ARS / BR ) ) ,PN ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RRSe ) - RMSe ) + Min( MUM ,MLU ) ) ) ,( RMSe + ( Max( MUR,( MUR * DS ) ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.463265306122449, "obj2": 0.4064914575501343}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) / ( RRS * ( CRS * FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( AMS,ARS ),( ARS + PN ) ) / FirstVNF_Mem ) ) ) ,( AMS * ( FirstVNF_CPU - ( FirstVNF_CPU + RRS ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( MLU - MUC ),( Max( DS,DS ) / DS ) ) ,( ( CS * RCSe ) - ( MUM * RCSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.3044710304440972}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,MUR ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.34559390746848123}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - ( ( MDR / FirstVNF_RAM_Server ) + ACS ) ) + ( ( FirstVNF_RAM / Min( PN ,FirstVNF_Mem ) ) * CRS ) )", "choosing": "( ( ( MUM / MUR ) * RMSe ) / ( ( ( Min( RRSe ,( CS * RMSe ) ) * ( ( MUR - Min( Max( RMSe,MLU ) ,Max( MUC,MLU ) ) ) + DS ) ) + ( MUM + MUC ) ) + RMSe ) )", "obj1": 0.6714285714285714, "obj2": 0.2381269419807639}, {"determining": "( ( RRS + FirstVNF_RAM_Server ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( MRS ,( BR * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( MUC ,Min( ( MLU + ( RRSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( ( ( MLU / MUC ) / MUM ) - ( ( RMSe * RCSe ) + ( RCSe * CS ) ) ) ),MUC ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM - ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - Min( Const ,RRS ) ) ,( ( ( FirstVNF_CPU_Server + DDR ) - BR ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( RRSe - ( Min( RRSe ,MUC ) - RMSe ) ) ) - MLU ),( Min( RCSe ,( ( DS + MUR ) * ( RRSe * MUM ) ) ) * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.7142857142857143, "obj2": 0.20690242937450085}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( AMS * PN ) + ( Const - Min( ( ACS + ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ,( ( Const + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) / RRS ) ) ) )", "choosing": "( ( ( MUM / MUM ) / ( RRSe + MUM ) ) / ( RRSe * Max( Max( Max( ( RMSe + ( ( RRSe * MUM ) * MLU ) ),MUR ),( ( MUR * MUM ) - MUC ) ),( ( ( MUC - DS ) / RCSe ) / ( MUM - CS ) ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.740803066329768}, {"determining": "( ( Max( ( RRS - ( FirstVNF_RAM * DDR ) ),( ACS * MDR ) ) - AMS ) / Min( ACS ,Min( ARS ,( ACS * ( DDR - ( ACS * ACS ) ) ) ) ) )", "choosing": "( ( ( RCSe - MUC ) / MUR ) - ( ( CS - ( ( ( Max( DS,MUC ) / MLU ) + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.25510204081632654, "obj2": 0.6989410278280859}, {"determining": "( Min( ACS ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM * CRS ) ) / ACS ) ,BR ) ) / DDR ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC / ( RCSe - ( Min( RMSe ,( RMSe / RCSe ) ) - RMSe ) ) ) ) ) - ( ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) - DS ) )", "obj1": 0.15918367346938775, "obj2": 0.8119757933690984}, {"determining": "( ( ( AMS - Max( ( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) ) * ( Const / BR ) )", "choosing": "( ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / MUR ) - ( ( ( ( ( Min( RRSe ,MLU ) - MUM ) * MUM ) / RMSe ) + DS ) / MUM ) )", "obj1": 0.336734693877551, "obj2": 0.5912134411120042}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) + ( Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) * Max( ( ARS / FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( MUR * ( ( RMSe - CS ) + Max( ( CS * ( Max( RMSe,( MUR + ( DS / CS ) ) ) - MLU ) ),( DS / MUM ) ) ) )", "obj1": 0.636734693877551, "obj2": 0.27030808835089826}, {"determining": "( ( AMS * ACS ) / Max( ( ( ACS - ACS ) * ( PN - FirstVNF_RAM_Server ) ),BR ) )", "choosing": "( ( ( ( ( DS * CS ) / MUR ) / ( MUR / MUC ) ) + MUM ) - ( DS - ( CS - ( MUM - ( RRSe * CS ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7600334505949903}, {"determining": "( ( PN - Min( Min( FirstVNF_CPU ,BR ) ,FirstVNF_CPU ) ) * ( Const / ACS ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( ( ( ( MUM + MUM ) / ( ( MUC / MUR ) * MUC ) ) - DS ),( CS - ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.7428571428571429, "obj2": 0.1238833003470986}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( RMSe * Max( Max( ( CS - MUC ),MUM ),RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7829511098189514}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.42653061224489797, "obj2": 0.495001754199449}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( ( FirstVNF_CPU_Server / ( ( Min( BR ,AMS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) / PN ) ) ) * Min( PN ,BR ) ) ) * ( FirstVNF_CPU - FirstVNF_CPU ) )", "choosing": "Max( ( ( MUM - DS ) / ( Min( CS ,( MUC * DS ) ) * RRSe ) ),Min( ( DS + ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - ( RMSe + DS ) ) ) ,MLU ) ) ) ,( ( RRSe / ( DS / MUC ) ) - ( MUM * Max( ( Min( ( CS / MUM ) ,MUC ) / ( Max( DS,RCSe ) - RMSe ) ),( RRSe * CS ) ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7308844164389094}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( ( MUM - CS ) / Min( RCSe ,( RMSe + ( RRSe + Max( RRSe,MUM ) ) ) ) ) / Min( ( RMSe + ( RRSe - MUC ) ) ,Max( DS,DS ) ) ),( ( Min( RCSe ,RMSe ) + CS ) * RMSe ) ) ,( ( CS * RCSe ) - ( MUM * RCSe ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2875590160815293}, {"determining": "Min( Max( Min( ( ARS / RRS ) ,( ACS + ACS ) ),( ( FirstVNF_Mem + Max( Max( Const,FirstVNF_Mem_Server ),FirstVNF_RAM ) ) - ( BR * MDR ) ) ) ,Min( ( Min( FirstVNF_CPU ,PN ) / Max( DDR,FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( ( Max( Min( ( Min( Min( CS ,RRSe ) ,( DS + MUC ) ) - ( ( RCSe + RMSe ) * RMSe ) ) ,( DS * MUM ) ),MLU ) - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( CS / MUC ) ) + MUM ) ) * ( Max( RMSe,RCSe ) * DS ) ),RRSe ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7807894345175307}, {"determining": "Min( Max( Min( ( ACS - ACS ) ,( ACS - FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ( Max( BR,( ( DDR / FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) - ( Min( ( ( Min( ( Min( RRSe ,MUM ) * MLU ) ,MLU ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.04759271207600989}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU - PN ) ,BR ) ) / FirstVNF_Mem )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + RMSe ) ) - Min( ( MUR * DS ) ,( ( CS + ( ( MUC + MLU ) - ( RCSe - RRSe ) ) ) + RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( Min( DS ,( RRSe - DS ) ) * ( ( MUC + RMSe ) / ( RMSe - MUC ) ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.748302548957801}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,( MUR + ( MUC + ( RCSe + RCSe ) ) ) ) / ( ( CS - MUC ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Max( MUC,MUC ) / ( ( MUR / ( DS / CS ) ) * ( MUC - CS ) ) ) ),Min( DS ,RMSe ) ) ) )", "obj1": 0.4306122448979592, "obj2": 0.4914785154622301}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8321540144904129}, {"determining": "( ( AMS - Max( Min( Min( ARS ,FirstVNF_Mem ) ,Min( BR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( RMSe + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - ( RMSe * Min( MLU ,MUM ) ) ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5904940164180497}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8879560768570286}, {"determining": "( ( Min( ( FirstVNF_CPU - ( ( RRS + ( ACS + MRS ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) - FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + Max( PN,MDR ) ) ) * ( ( FirstVNF_CPU + RRS ) * FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) + ( ( CRS * FirstVNF_Mem_Server ) - AMS ) )", "choosing": "Max( ( RMSe * RMSe ),Min( Min( ( RMSe * Min( Max( ( Min( CS ,CS ) - RRSe ),MUC ) ,MLU ) ) ,( RRSe * CS ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / DS ) ) + MUM ) ) * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "Min( Min( Min( Max( ( ARS - FirstVNF_RAM_Server ),( ( FirstVNF_CPU - Const ) + ACS ) ) ,( ACS / ( Min( MRS ,AMS ) / FirstVNF_CPU_Server ) ) ) ,BR ) ,( FirstVNF_CPU * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( CS / MLU ),( Max( ( Min( ( MUC / MLU ) ,RMSe ) + RMSe ),MUM ) - Max( ( MUC - MLU ),Max( MUC,DS ) ) ) ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + MUC ) + RRSe ) ,MLU ) ) ,DS ) ,Max( RRSe,( Min( MUM ,( ( RRSe / ( MUC + CS ) ) * MLU ) ) * MUC ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7544423640090209}, {"determining": "( ACS / Min( MRS ,Min( ( FirstVNF_Mem_Server - Min( AMS ,( FirstVNF_RAM - AMS ) ) ) ,( PN + ACS ) ) ) )", "choosing": "( ( MUM + MUR ) - ( DS - Max( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ),( ( MUM - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - RRSe ) ) ) )", "obj1": 0.24897959183673468, "obj2": 0.7281816868410307}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( FirstVNF_RAM_Server,( RRS * ( Const / BR ) ) ),Const ) / FirstVNF_Mem ) ) ) * ( Const / BR ) )", "choosing": "( ( Min( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.936734693877551, "obj2": 0.028419893462602132}, {"determining": "( ACS / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.19387755102040816, "obj2": 0.782779673390625}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( FirstVNF_CPU_Server / BR ) / BR ) ) )", "choosing": "( Max( ( Min( Min( RRSe ,MUR ) ,( ( MUR / ( MUC + RRSe ) ) / Max( DS,( CS + RRSe ) ) ) ) - CS ),( MUM / DS ) ) + CS )", "obj1": 0.12653061224489795, "obj2": 0.8589673024473602}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ( ( ( FirstVNF_CPU * BR ) - PN ) * FirstVNF_CPU ) ) ) - Const ) / BR ) )", "choosing": "Max( Min( ( Max( RMSe,( MUR + DS ) ) / DS ) ,( RMSe - CS ) ),( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( Max( Max( RCSe,RMSe ),( RCSe - ( DS - RCSe ) ) ),MUM ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8646387774221315}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,( ( CS * RCSe ) - ( MUM - RCSe ) ) )", "obj1": 0.6346938775510204, "obj2": 0.28397960378299636}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - RRS ),ARS ) ) / Min( ( ACS - Const ) ,( DDR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * MUR ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + DS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( BR,Max( FirstVNF_CPU_Server,Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + Min( MUR ,RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9795918367346939, "obj2": 0.00982877659334165}, {"determining": "Min( Max( ( ( Max( Min( AMS ,FirstVNF_RAM ),MRS ) * FirstVNF_CPU_Server ) * ACS ),( MDR + ( FirstVNF_RAM * ARS ) ) ) ,Min( ( ( DDR - FirstVNF_CPU_Server ) - Min( PN ,RRS ) ) ,Min( DDR ,DDR ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( ( DS * MUC ) / Min( MUC ,CS ) ) - MLU ) ) - Min( ( DS * MUR ) ,( MUR / DS ) ) ) - Min( ( RCSe / CS ) ,( Min( RCSe ,( ( Max( Min( RCSe ,CS ),MLU ) * DS ) + Min( CS ,DS ) ) ) + Min( MLU ,MUM ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.03129395782837683}, {"determining": "( ACS / Max( BR,( CRS + ( Max( CRS,PN ) * PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RCSe ) * RMSe ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS - MUR ) / RCSe ) ) - ( ( MLU + Max( RCSe,MUM ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.13877551020408163, "obj2": 0.84382541227652}, {"determining": "( ( Const - ( ( PN * Const ) + RRS ) ) * ( Max( BR,DDR ) / Min( ( ( Const - ( Const / AMS ) ) * ARS ) ,RRS ) ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( ( MUC + ( Max( DS,( MLU - Min( MLU ,( CS - MUC ) ) ) ) * Max( CS,MUM ) ) ) / ( DS - MLU ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "Min( Max( CRS,Const ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.04759271207600989}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ARS / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8845312571319146}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "Max( ( ( Max( RCSe,( ( ( MUR - MUM ) / DS ) + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( DS / CS ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ),( CS + RCSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8329880263221716}, {"determining": "( Min( ARS ,( AMS + ACS ) ) / ( ( ( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + AMS ) ) * Const ) ) - DDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( ( ( DS - CS ) - MUR ),CS ) / ( ( ( ( MLU - ( ( MUC / Min( CS ,MUM ) ) + RCSe ) ) * Min( RCSe ,CS ) ) - MLU ) - MUC ) )", "obj1": 0.9714285714285714, "obj2": 0.012238172698020206}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( ( BR / CRS ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,MDR ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,( ( MLU * RMSe ) - MLU ) ) ) - MLU ) ,( ( DS + Min( ( RRSe + RRSe ) ,( RRSe / MUC ) ) ) * MUR ) ) - Min( ( RCSe / DS ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.024296936913491805}, {"determining": "Min( Max( Min( ( ACS - ACS ) ,( ACS - FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ( Max( BR,( ( DDR / FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( CS + ( Max( RCSe,( RMSe * MUR ) ) / ( CS - RRSe ) ) ),Min( Min( MUR ,MUR ) ,( Max( MUM,RRSe ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9673469387755103, "obj2": 0.015547148041899184}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.861849297665582}, {"determining": "( Min( FirstVNF_CPU ,RRS ) + ( FirstVNF_CPU + Const ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS / ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( ( ( CS + RCSe ) + ( Min( DS ,MLU ) / MLU ) ) - ( RCSe / MUM ) ) ,( RMSe - MUR ) ),CS ) )", "obj1": 0.1, "obj2": 0.8802435212133923}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / MDR ) ) + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,Min( FirstVNF_CPU ,Min( BR ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ( Max( Max( ARS,DDR ),Const ) / FirstVNF_Mem ) - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Min( MUM ,MUR ) ) / ( CS + MUM ) ) ,( ( RRSe / ( ( MUM - DS ) / ( CS * RRSe ) ) ) - RCSe ) ) / RCSe ) )", "obj1": 0.9612244897959183, "obj2": 0.016377062804846135}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) * FirstVNF_RAM ) + ( Max( ( ( FirstVNF_RAM_Server * ( DDR * ( FirstVNF_RAM_Server / AMS ) ) ) * ARS ),AMS ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( Max( RCSe,( MUR + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( DS / CS ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( ( RRSe * RCSe ),MUC ) ) ) ) ,CS ),( Min( ( ( Min( CS ,DS ) * MUC ) - ( ( MUR / ( MUM / CS ) ) + CS ) ) ,DS ) - MUM ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8738710046890669}, {"determining": "Min( Max( ( ( ( ACS * PN ) - ACS ) / ( MRS - ACS ) ),( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) * ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * ( ( PN * MDR ) * CRS ) ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( Min( ( RRSe * RMSe ) ,Max( ( RCSe + DS ),Max( ( MUM * RRSe ),( MUC - RMSe ) ) ) ) / ( CS + RRSe ) ) )", "obj1": 0.9530612244897959, "obj2": 0.020586508258801935}, {"determining": "Min( Max( Min( ( ACS - MRS ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * MDR ) * Min( BR ,Max( ( DDR / FirstVNF_CPU ),Min( FirstVNF_Mem_Server ,MDR ) ) ) ) ) - ( BR * MDR ) ) ) ,Min( ( FirstVNF_RAM / MDR ) ,Min( DDR ,MRS ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( Max( ( MUM / MUM ),( CS + RRSe ) ) * ( ( MUM * ( MUM - RMSe ) ) / RCSe ) ) - ( RCSe / Max( Min( CS ,( MUR * MUC ) ),( Min( DS ,MUM ) + ( MLU / MUR ) ) ) ) ) ) - Min( ( MUR / DS ) ,( DS - CS ) ) ) - Min( Min( MUR ,MUR ) ,( Min( MUR ,RCSe ) * Max( Min( Max( RMSe,MUC ) ,RRSe ),MUM ) ) ) )", "obj1": 0.9163265306122449, "obj2": 0.03805493543893866}, {"determining": "Min( Max( ( DDR + AMS ),( ( FirstVNF_Mem + ( Max( BR,Max( ( MRS + FirstVNF_Mem_Server ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM * MRS ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( MUR + ( MUC * Min( RCSe ,MUC ) ) ) - Min( Min( MUR ,MUR ) ,( CS - ( ( MLU / ( Min( RRSe ,CS ) * ( MLU * ( MUC - RCSe ) ) ) ) - RCSe ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.04126006699067148}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( Max( DDR,BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( ( MUM / MUC ) + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,( MUC - CS ) ) ) ) ) ) ) )", "obj1": 0.9897959183673469, "obj2": 0.005161771579956421}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( DDR - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) - MLU ) ,( ( CS * RCSe ) - ( MUM * RCSe ) ) )", "obj1": 0.6306122448979592, "obj2": 0.28458925307536237}, {"determining": "Min( Max( Min( ( ACS + FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( MDR - FirstVNF_Mem_Server ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * DDR ) ) ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * ( MUC / MUM ) ) ) ) - MLU ) ,( MLU + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR - Max( MUM,RCSe ) ) ) * ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( RRSe - MUR ) ) ) )", "obj1": 0.9244897959183673, "obj2": 0.03338002760466691}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,( ACS / Const ) ) * ( ( BR * FirstVNF_Mem_Server ) / RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_CPU_Server ) - Min( PN ,FirstVNF_CPU ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( ( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03486417169314258}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( BR * MDR ) - ( FirstVNF_Mem_Server + ( Max( BR,Max( ( DDR * FirstVNF_CPU ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) ) ) ,Min( Max( DDR,DDR ) ,( ( CRS * FirstVNF_Mem ) - ( DDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MLU * RMSe ) - MLU ) / ( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - RRSe ) ) ) - ( RMSe / DS ) )", "obj1": 0.9040816326530612, "obj2": 0.044576292118664075}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) )", "obj1": 0.9489795918367347, "obj2": 0.022638591460948283}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),( ACS - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) / Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) ) ,Max( ( CRS + DDR ),Const ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( RCSe - MLU ) ) - Min( ( MUR / MUC ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * ( MUR - ( RRSe + ( ( RMSe / MUC ) / ( ( MUR + RMSe ) * ( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.9, "obj2": 0.04742435034615194}, {"determining": "Min( Min( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ) ,( ( PN - CRS ) - Const ) ) ,Min( Max( Const,MDR ) ,Max( DDR,DDR ) ) )", "choosing": "( ( ( Max( MUR,( ( MUR / ( ( MUR / CS ) * ( MUM / RMSe ) ) ) + Max( DS,MUM ) ) ) / ( MLU - ( ( RRSe * ( Max( DS,RRSe ) + DS ) ) * ( Max( MUC,MUR ) * ( MUC + MUC ) ) ) ) ) / MUR ) - ( ( ( ( DS * RMSe ) - Max( Max( RMSe,MUM ),RCSe ) ) + DS ) / MUM ) )", "obj1": 0.9469387755102041, "obj2": 0.023986538127100273}, {"determining": "( ( Min( Min( ( ACS + MDR ) ,MRS ) ,ARS ) + ( ( BR * ( FirstVNF_Mem - Min( ( MDR + ( AMS / CRS ) ) ,Const ) ) ) - FirstVNF_CPU_Server ) ) * Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( CS - ( ( MUM - Max( MLU,RMSe ) ) / RCSe ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8433184526280625}, {"determining": "( ( ( ( RRS + MDR ) * ( Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / MDR ) ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( DDR + AMS ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( Max( ( CS / DS ),Min( MUC ,( CS - ( ( MUM - DS ) / ( MLU * Max( MUM,MUR ) ) ) ) ) ),Max( Min( ( RMSe / ( MUM * Min( RCSe ,MUM ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8760284840954607}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( ( Const / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ),BR ) * ( AMS + AMS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.010545523950770025}, {"determining": "( ( PN - ( ( RRS + FirstVNF_RAM_Server ) * ( Max( ( Max( DDR,BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( ACS + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - ( RMSe + MUM ) ) ,( ( MUM / MUC ) + ( Max( ( MUR * ( DS / ( ( MLU * MUR ) - Max( RMSe,MLU ) ) ) ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9897959183673469, "obj2": 0.005161771579956421}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ,Max( RRS,( ( FirstVNF_Mem + ( Max( BR,( FirstVNF_CPU * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * ( MDR * ARS ) ) ) ) - ( BR * RRS ) ) ) )", "choosing": "( ( Min( ( RMSe + RMSe ) ,( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - MUR ) ) ) - ( Max( ( Max( MLU,Min( MUC ,MUC ) ) + CS ),( ( RCSe / ( ( MLU * RMSe ) * CS ) ) + Min( DS ,MUC ) ) ) + ( MLU - ( RCSe * RMSe ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.0419329768748851}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ( MRS - ACS ) - ACS ) ),( ( FirstVNF_Mem + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( ARS * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) - Min( ( ( MUM / MUM ) / ( RRSe + CS ) ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9061224489795918, "obj2": 0.04392076449651582}, {"determining": "( ( PN - ( ( RRS + ( ( AMS - Max( FirstVNF_RAM_Server,( ACS + AMS ) ) ) * Const ) ) * ( Min( ( Max( DDR,BR ) * ( Const / BR ) ) ,Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( Const / MRS ) )", "choosing": "( ( Max( Min( MLU ,Min( MUC ,RCSe ) ),DS ) * ( ( ( RMSe - DS ) / MUM ) * Max( RRSe,Max( ( DS / DS ),( MUC + RMSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0034616397171632765}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_Mem_Server,DDR ) ,( FirstVNF_CPU / Max( ARS,ARS ) ) ) ) ,( ( ( MRS - Const ) + ( ACS / BR ) ) - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ( Max( ( DDR + ARS ),Min( DDR ,DDR ) ) / FirstVNF_Mem ) - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( Min( ( MLU / MUC ) ,MUC ) - ( ( MUR - RRSe ) * ( MUR * MUR ) ) ) / ( CS - RRSe ) )", "obj1": 0.9571428571428572, "obj2": 0.01839621576838663}, {"determining": "( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( ( BR * ( FirstVNF_CPU_Server + DDR ) ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) - ( ( RRS + MDR ) * ( FirstVNF_Mem / Max( CRS,Const ) ) ) ) / ( FirstVNF_CPU / Max( DDR,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0008011892270333164}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Max( ( AMS - Max( ( ( ( MDR - BR ) - Max( BR,AMS ) ) * FirstVNF_Mem ),ARS ) ),DDR ) ) )", "choosing": "( ( Min( CS ,( RCSe * CS ) ) / MUR ) - ( MUC / ( MUC - ( CS * ( MLU / ( MLU - Max( MUM,MUC ) ) ) ) ) ) )", "obj1": 0.9959183673469387, "obj2": 0.002134555175228033}, {"determining": "( ( FirstVNF_Mem + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_Mem_Server,DDR ) ,( FirstVNF_CPU / Max( ARS,ARS ) ) ) ) ,( ( ( MRS - Const ) + ( ACS / BR ) ) - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ( Max( ( DDR + ARS ),Min( DDR ,DDR ) ) / FirstVNF_Mem ) - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( Min( ( MLU / MUC ) ,MUC ) - ( ( MUR - RRSe ) * ( MUR * MUR ) ) ) / ( CS - RRSe ) )", "obj1": 0.9571428571428572, "obj2": 0.01839621576838663}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),Max( MDR,( DDR + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,Max( ( AMS - Max( ( ( ( MDR - BR ) - Max( BR,AMS ) ) * FirstVNF_Mem ),ARS ) ),DDR ) ) )", "choosing": "( ( CS * MUR ) - ( DS - ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + DS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.9938775510204082, "obj2": 0.002878335223855524}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8321540144904129}], "21": [{"determining": "( ( PN - ( ( ACS - DDR ) * ( AMS / MDR ) ) ) / ( MRS / Const ) )", "choosing": "( ( ( RCSe * Min( MUC ,RCSe ) ) / MLU ) / Min( MUR ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ( ACS - DDR ) * ( AMS / MDR ) ) ) / ( MRS / Const ) )", "choosing": "( ( ( RCSe * Min( MUC ,RCSe ) ) / MLU ) / Min( MUR ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8958148423992437}, {"determining": "( ( PN - ( ( ( AMS - ARS ) + Min( ( Min( ( FirstVNF_RAM - ARS ) ,FirstVNF_RAM ) / ( ARS - FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem,DDR ) - MDR ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / ( ( BR * AMS ) - Max( ARS,Max( ARS,BR ) ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "Min( ( ( ( ( RCSe / RCSe ) - CS ) + ( MLU * CS ) ) - MUM ) ,( RMSe + ( ( ( Max( ( ( RCSe / MUR ) + RRSe ),( ( RMSe * MUR ) * MUR ) ) / ( ( RRSe / ( MUM / RCSe ) ) / RCSe ) ) + Min( MUC ,( CS - Min( DS ,( RRSe / RCSe ) ) ) ) ) + ( RMSe - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7959183673469388, "obj2": 0.10177147378877685}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( AMS - Max( FirstVNF_Mem,( ( FirstVNF_Mem * ARS ) * ( ( PN - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( FirstVNF_Mem * PN ) ) ) + Const ) ) ) ) / Min( FirstVNF_Mem ,MDR ) )", "choosing": "( Max( ( ( ( MUC / MUR ) / MUR ) / MUM ),Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUC ,( ( Max( ( MUC * Max( CS,RCSe ) ),( RMSe + DS ) ) + Max( ( MUC + DS ),MUR ) ) - MUR ) ) ,RMSe ) )", "obj1": 0.4326530612244898, "obj2": 0.40525309416291927}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.26326530612244897, "obj2": 0.635118734034016}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( DDR + BR ) * ( BR / Const ) ) / ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Max( ( DS * ( Min( MUC ,( ( DS + RCSe ) / MUR ) ) + MUC ) ),( MUC - RRSe ) ) ) - ( MUC - ( DS * ( RMSe + Min( RRSe ,( Min( ( RCSe / RRSe ) ,MLU ) * MLU ) ) ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.5333534044983416}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,( MUR + ( MUC + ( RCSe + RCSe ) ) ) ) / ( ( CS - MUC ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Max( MUC,MUC ) / ( ( MUR / ( DS / CS ) ) * ( MUC - CS ) ) ) ),Min( DS ,RMSe ) ) ) )", "obj1": 0.4306122448979592, "obj2": 0.4914785154622301}, {"determining": "( ( AMS - Max( ( FirstVNF_RAM * ARS ),ARS ) ) / Max( FirstVNF_RAM,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MUM - Max( MUR,MUR ) ) - ( DS - ( ( MUR - ( ( MUM - ( ( MUM * RMSe ) / RCSe ) ) - ( ( MLU + ( MLU + CS ) ) * RMSe ) ) ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5102040816326531, "obj2": 0.3648492233348197}, {"determining": "( Max( MRS,( ( FirstVNF_CPU_Server + ( PN / FirstVNF_CPU ) ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) * ( Min( ( Const - RRS ) ,CRS ) * Const ) ) * Min( CRS ,CRS ) ) ) ) / ( PN - Min( ( RRS + AMS ) ,( Max( CRS,( FirstVNF_CPU_Server - MRS ) ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "Min( ( MUR - ( DS / CS ) ) ,( RCSe + ( ( MUM - ( DS / ( CS / ( Max( RRSe,MUR ) * DS ) ) ) ) + Max( ( MUR * DS ),( ( MUM - MUR ) + RMSe ) ) ) ) )", "obj1": 0.5836734693877551, "obj2": 0.30504492281383727}, {"determining": "( ( Max( ( RRS - ( FirstVNF_RAM * DDR ) ),( ACS * MDR ) ) - AMS ) / Min( ACS ,Min( ARS ,( ACS * ( DDR - ( ACS * ACS ) ) ) ) ) )", "choosing": "( ( ( RCSe - MUC ) / MUR ) - ( ( CS - ( ( ( Max( DS,MUC ) / MLU ) + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.3979591836734694, "obj2": 0.5278133555986517}, {"determining": "( ( Const / Min( ACS ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,ARS ) ) ) ) * ( PN - Max( ( CRS / FirstVNF_Mem ),AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( RCSe - Min( Min( Min( ( CS * MUC ) ,( MUR + MUC ) ) ,MUC ) ,CS ) ) ) ),( ( ( ( MUM * MUM ) * MUC ) * ( RCSe / MUR ) ) - CS ) )", "obj1": 0.7448979591836735, "obj2": 0.12269990469959279}, {"determining": "( ( AMS - Max( ( Max( Min( MDR ,FirstVNF_CPU ),DDR ) * ( PN / FirstVNF_Mem ) ),Const ) ) / ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( ( MLU + ( ( RCSe * DS ) * RCSe ) ) / MUC ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - RRSe ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( RMSe / MUM ) * MUM ) ) - MUR ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.679292893601322}, {"determining": "( ( ( Max( ( ARS / RRS ),Const ) + Min( Max( ( FirstVNF_RAM_Server / BR ),MRS ) ,Const ) ) - Min( ( Max( DDR,Min( MDR ,( FirstVNF_RAM / BR ) ) ) * FirstVNF_Mem ) ,ARS ) ) / Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,Max( ( ( ( CRS + FirstVNF_CPU ) + ( MDR + BR ) ) * ( ACS * BR ) ),FirstVNF_CPU_Server ) ) ),DDR ) )", "choosing": "( ( ( MUC - MUM ) / ( ( RMSe + MUR ) / ( RMSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUR * MUR ) / RMSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( RRSe - MUR ) ) ) )", "obj1": 0.4714285714285714, "obj2": 0.38629977454758124}, {"determining": "( ( Const / FirstVNF_Mem ) * ( ( ( BR / ( RRS - ( Const * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_CPU_Server ) + ( Min( ( DDR - ACS ) ,( Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) * FirstVNF_Mem_Server ) ) * ( ACS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS / Max( ( ( DS - ( ( Min( DS ,DS ) - MUR ) + RCSe ) ) + ( MUM - RMSe ) ),( MUC / Max( ( RRSe * RMSe ),DS ) ) ) ) * ( ( ( RMSe + RMSe ) / Min( Max( DS,( Max( MLU,( RCSe + MUM ) ) * ( Min( MLU ,DS ) + DS ) ) ) ,( RMSe / MLU ) ) ) / ( RRSe + CS ) ) )", "obj1": 0.7183673469387755, "obj2": 0.16132175323841497}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6408163265306123, "obj2": 0.24905469676390593}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( Min( PN ,( ( FirstVNF_Mem_Server + MDR ) * ( AMS / MDR ) ) ) / ( MRS / ( ACS * ACS ) ) )", "choosing": "( ( MLU / ( ( ( ( DS / ( MUM / CS ) ) + RCSe ) * MUM ) * CS ) ) / Min( MUR ,CS ) )", "obj1": 0.7326530612244898, "obj2": 0.1493582000869129}, {"determining": "( ( Max( FirstVNF_RAM_Server,BR ) / AMS ) / ( FirstVNF_RAM + DDR ) )", "choosing": "( ( Max( MUM,MUC ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( RRSe / ( MUM * MUR ) ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4061224489795918, "obj2": 0.5011289642345607}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) / ( RRS * ( CRS * FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( AMS,ARS ),( ARS + PN ) ) / FirstVNF_Mem ) ) ) ,( AMS * ( FirstVNF_CPU - ( FirstVNF_CPU + RRS ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( MLU - MUC ),( Max( DS,DS ) / DS ) ) ,( ( CS * RCSe ) - ( MUM * RCSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.3044710304440972}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - ( ( MDR / FirstVNF_RAM_Server ) + ACS ) ) + ( ( FirstVNF_RAM / Min( PN ,FirstVNF_Mem ) ) * CRS ) )", "choosing": "( ( ( MUM / MUR ) * RMSe ) / ( ( ( Min( RRSe ,( CS * RMSe ) ) * ( ( MUR - Min( Max( RMSe,MLU ) ,Max( MUC,MLU ) ) ) + DS ) ) + ( MUM + MUC ) ) + RMSe ) )", "obj1": 0.6714285714285714, "obj2": 0.2381269419807639}, {"determining": "( ( RRS + FirstVNF_RAM_Server ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( MRS ,( BR * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( MUC ,Min( ( MLU + ( RRSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( ( ( MLU / MUC ) / MUM ) - ( ( RMSe * RCSe ) + ( RCSe * CS ) ) ) ),MUC ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM - ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ( AMS - Max( ARS,( ( ( ( MDR / ACS ) * ACS ) * FirstVNF_CPU ) * MDR ) ) ) / Min( FirstVNF_CPU ,( FirstVNF_CPU + Const ) ) )", "choosing": "( ( Min( ( MUM + MUR ) ,( MUR + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( Min( RRSe ,( RRSe * MLU ) ) * ( ( RMSe * RCSe ) / RCSe ) ) - ( ( CS + RMSe ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.45918367346938777, "obj2": 0.3863778089801303}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "( ( AMS * PN ) + ( Const - Min( ( ACS + ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ,( ( Const + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) / RRS ) ) ) )", "choosing": "( ( ( MUM / MUM ) / ( RRSe + MUM ) ) / ( RRSe * Max( Max( Max( ( RMSe + ( ( RRSe * MUM ) * MLU ) ),MUR ),( ( MUR * MUM ) - MUC ) ),( ( ( MUC - DS ) / RCSe ) / ( MUM - CS ) ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.740803066329768}, {"determining": "( ( AMS * ACS ) / Max( ( ( ACS - ACS ) * ( PN - FirstVNF_RAM_Server ) ),BR ) )", "choosing": "( ( ( ( ( DS * CS ) / MUR ) / ( MUR / MUC ) ) + MUM ) - ( DS - ( CS - ( MUM - ( RRSe * CS ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7600334505949903}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),( ACS - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) / Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) ) ,Max( ( CRS + DDR ),Const ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( RCSe - MLU ) ) - Min( ( MUR / MUC ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * ( MUR - ( RRSe + ( ( RMSe / MUC ) / ( ( MUR + RMSe ) * ( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.7163265306122449, "obj2": 0.20062704410191967}, {"determining": "( Max( FirstVNF_CPU,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MLU * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( RRSe - MUC ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7229063585658788}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * ( FirstVNF_Mem / Max( CRS,Const ) ) ) ) )", "choosing": "( ( ( RMSe * Max( Max( ( CS - MUC ),( ( CS * MUR ) / RCSe ) ),RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.1836734693877551, "obj2": 0.7780935642053739}, {"determining": "( ( Min( ( FirstVNF_CPU - ( ( RRS + ( ACS + MRS ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) - FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + Max( PN,MDR ) ) ) * ( ( FirstVNF_CPU + RRS ) * FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) + ( ( CRS * FirstVNF_Mem_Server ) - AMS ) )", "choosing": "Max( ( RMSe * RMSe ),Min( Min( ( RMSe * Min( Max( ( Min( CS ,CS ) - RRSe ),MUC ) ,MLU ) ) ,( RRSe * CS ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / DS ) ) + MUM ) ) * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( Max( ( RRS - ( FirstVNF_RAM * DDR ) ),( ACS * MDR ) ) - AMS ) / Min( ACS ,Min( ARS ,( ACS * ( DDR - ( ACS * ACS ) ) ) ) ) )", "choosing": "( ( ( RCSe - MUC ) / MUR ) - ( ( CS - ( ( ( Max( DS,MUC ) / MLU ) + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.25510204081632654, "obj2": 0.6989410278280859}, {"determining": "( ( ( AMS - Max( ( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) ) * ( Const / BR ) )", "choosing": "( ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / MUR ) - ( ( ( ( ( Min( RRSe ,MLU ) - MUM ) * MUM ) / RMSe ) + DS ) / MUM ) )", "obj1": 0.336734693877551, "obj2": 0.5912134411120042}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) + ( Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) * Max( ( ARS / FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( MUR * ( ( RMSe - CS ) + Max( ( CS * ( Max( RMSe,( MUR + ( DS / CS ) ) ) - MLU ) ),( DS / MUM ) ) ) )", "obj1": 0.636734693877551, "obj2": 0.27030808835089826}, {"determining": "( Min( ACS ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM * CRS ) ) / ACS ) ,BR ) ) / DDR ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC / ( RCSe - ( Min( RMSe ,( RMSe / RCSe ) ) - RMSe ) ) ) ) ) - ( ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) - DS ) )", "obj1": 0.15918367346938775, "obj2": 0.8119757933690984}, {"determining": "( Min( RRS ,MRS ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( MLU - ( ( ( CS / RMSe ) * RCSe ) * DS ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( Max( ( MLU / DS ),Max( MUC,MLU ) ) * Max( MLU,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5530612244897959, "obj2": 0.34073102844298647}, {"determining": "( ( PN - Min( Min( FirstVNF_CPU ,BR ) ,FirstVNF_CPU ) ) * ( Const / ACS ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( ( ( ( MUM + MUM ) / ( ( MUC / MUR ) * MUC ) ) - DS ),( CS - ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.7428571428571429, "obj2": 0.1238833003470986}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * ( FirstVNF_RAM * ACS ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.348946036325002}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( ( MUM - CS ) / Min( RCSe ,( RMSe + ( RRSe + Max( RRSe,MUM ) ) ) ) ) / Min( ( RMSe + ( RRSe - MUC ) ) ,Max( DS,DS ) ) ),( ( Min( RCSe ,RMSe ) + CS ) * RMSe ) ) ,( ( CS * RCSe ) - ( MUM * RCSe ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2875590160815293}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( MDR ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.42653061224489797, "obj2": 0.495001754199449}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( RMSe * Max( Max( ( CS - MUC ),MUM ),RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7829511098189514}, {"determining": "Min( Max( Min( ( ACS - ACS ) ,( ACS - FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ( Max( BR,( ( DDR / FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) - ( Min( ( ( Min( ( Min( RRSe ,MUM ) * MLU ) ,MLU ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.04759271207600989}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU - PN ) ,BR ) ) / FirstVNF_Mem )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + RMSe ) ) - Min( ( MUR * DS ) ,( ( CS + ( ( MUC + MLU ) - ( RCSe - RRSe ) ) ) + RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( Min( DS ,( RRSe - DS ) ) * ( ( MUC + RMSe ) / ( RMSe - MUC ) ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.748302548957801}, {"determining": "( ( AMS - Max( ( Max( DDR,( ( PN * FirstVNF_CPU ) + DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( Max( CS,DS ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( ( MLU + DS ) * RMSe ) + RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.3452166496109561}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8321540144904129}, {"determining": "( ( AMS - Max( Min( Min( ARS ,FirstVNF_Mem ) ,Min( BR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( RMSe + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - ( RMSe * Min( MLU ,MUM ) ) ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5904940164180497}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8879560768570286}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "Min( Min( Min( Max( ( ARS - FirstVNF_RAM_Server ),( ( FirstVNF_CPU - Const ) + ACS ) ) ,( ACS / ( Min( MRS ,AMS ) / FirstVNF_CPU_Server ) ) ) ,BR ) ,( FirstVNF_CPU * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( CS / MLU ),( Max( ( Min( ( MUC / MLU ) ,RMSe ) + RMSe ),MUM ) - Max( ( MUC - MLU ),Max( MUC,DS ) ) ) ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + MUC ) + RRSe ) ,MLU ) ) ,DS ) ,Max( RRSe,( Min( MUM ,( ( RRSe / ( MUC + CS ) ) * MLU ) ) * MUC ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7544423640090209}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,( ( CS * RCSe ) - ( MUM - RCSe ) ) )", "obj1": 0.6346938775510204, "obj2": 0.28397960378299636}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,MUR ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.34559390746848123}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( FirstVNF_CPU_Server / BR ) / BR ) ) )", "choosing": "( Max( ( Min( Min( RRSe ,MUR ) ,( ( MUR / ( MUC + RRSe ) ) / Max( DS,( CS + RRSe ) ) ) ) - CS ),( MUM / DS ) ) + CS )", "obj1": 0.12653061224489795, "obj2": 0.8589673024473602}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ( ( ( FirstVNF_CPU * BR ) - PN ) * FirstVNF_CPU ) ) ) - Const ) / BR ) )", "choosing": "Max( Min( ( Max( RMSe,( MUR + DS ) ) / DS ) ,( RMSe - CS ) ),( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( Max( Max( RCSe,RMSe ),( RCSe - ( DS - RCSe ) ) ),MUM ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8646387774221315}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ACS / Max( BR,( CRS + ( Min( MDR ,DDR ) * Const ) ) ) )", "choosing": "( ( CS - MUC ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8021734073188833}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - RRS ),( ( FirstVNF_CPU_Server * ACS ) * CRS ) ) ) / Min( Min( FirstVNF_RAM ,( DDR * FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + AMS ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - Min( RRSe ,RCSe ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ACS / Max( BR,( CRS + ( Max( CRS,PN ) * PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RCSe ) * RMSe ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS - MUR ) / RCSe ) ) - ( ( MLU + Max( RCSe,MUM ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.13877551020408163, "obj2": 0.84382541227652}, {"determining": "Min( Max( Min( ( ACS - MRS ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * MDR ) * Min( BR ,Max( ( DDR / FirstVNF_CPU ),Min( FirstVNF_Mem_Server ,MDR ) ) ) ) ) - ( BR * MDR ) ) ) ,Min( ( FirstVNF_RAM / MDR ) ,Min( DDR ,MRS ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( Max( ( MUM / MUM ),( CS + RRSe ) ) * ( ( MUM * ( MUM - RMSe ) ) / RCSe ) ) - ( RCSe / Max( Min( CS ,( MUR * MUC ) ),( Min( DS ,MUM ) + ( MLU / MUR ) ) ) ) ) ) - Min( ( MUR / DS ) ,( DS - CS ) ) ) - Min( Min( MUR ,MUR ) ,( Min( MUR ,RCSe ) * Max( Min( Max( RMSe,MUC ) ,RRSe ),MUM ) ) ) )", "obj1": 0.9163265306122449, "obj2": 0.03805493543893866}, {"determining": "( ( Const - ( ( PN * Const ) + RRS ) ) * ( Max( BR,DDR ) / Min( ( ( Const - ( Const / AMS ) ) * ARS ) ,RRS ) ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( ( MUC + ( Max( DS,( MLU - Min( MLU ,( CS - MUC ) ) ) ) * Max( CS,MUM ) ) ) / ( DS - MLU ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "Min( Max( CRS,Const ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.04759271207600989}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ARS / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8845312571319146}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "Max( ( ( Max( RCSe,( ( ( MUR - MUM ) / DS ) + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( DS / CS ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ),( CS + RCSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8329880263221716}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( ( BR / CRS ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,MDR ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,( ( MLU * RMSe ) - MLU ) ) ) - MLU ) ,( ( DS + Min( ( RRSe + RRSe ) ,( RRSe / MUC ) ) ) * MUR ) ) - Min( ( RCSe / DS ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.024296936913491805}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( ( Max( MRS,RRS ) - BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( MRS / Const ) )", "choosing": "( MUR * ( ( Min( ( MUM - ( ( DS * MUR ) / RCSe ) ) ,( DS + RMSe ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9857142857142858, "obj2": 0.005628862220294025}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.861849297665582}, {"determining": "( Min( FirstVNF_CPU ,RRS ) + ( FirstVNF_CPU + Const ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS / ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( ( ( CS + RCSe ) + ( Min( DS ,MLU ) / MLU ) ) - ( RCSe / MUM ) ) ,( RMSe - MUR ) ),CS ) )", "obj1": 0.1, "obj2": 0.8802435212133923}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( ( Const / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ),BR ) * ( AMS + AMS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9795918367346939, "obj2": 0.009378505763204027}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) * FirstVNF_RAM ) + ( Max( ( ( FirstVNF_RAM_Server * ( DDR * ( FirstVNF_RAM_Server / AMS ) ) ) * ARS ),AMS ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( Max( RCSe,( MUR + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( DS / CS ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( ( RRSe * RCSe ),MUC ) ) ) ) ,CS ),( Min( ( ( Min( CS ,DS ) * MUC ) - ( ( MUR / ( MUM / CS ) ) + CS ) ) ,DS ) - MUM ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8738710046890669}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,( ACS / Const ) ) * ( ( BR * FirstVNF_Mem_Server ) / RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_CPU_Server ) - Min( PN ,FirstVNF_CPU ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( ( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03486417169314258}, {"determining": "Min( Max( ( ( Max( Min( AMS ,FirstVNF_RAM ),MRS ) * FirstVNF_CPU_Server ) * ACS ),( MDR + ( FirstVNF_RAM * ARS ) ) ) ,Min( ( ( DDR - FirstVNF_CPU_Server ) - Min( PN ,RRS ) ) ,Min( DDR ,DDR ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( ( DS * MUC ) / Min( MUC ,CS ) ) - MLU ) ) - Min( ( DS * MUR ) ,( MUR / DS ) ) ) - Min( ( RCSe / CS ) ,( Min( RCSe ,( ( Max( Min( RCSe ,CS ),MLU ) * DS ) + Min( CS ,DS ) ) ) + Min( MLU ,MUM ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.03129395782837683}, {"determining": "( ( Min( Min( ( ACS + MDR ) ,MRS ) ,ARS ) + ( ( BR * ( FirstVNF_Mem - Min( ( MDR + ( AMS / CRS ) ) ,Const ) ) ) - FirstVNF_CPU_Server ) ) * Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( CS - ( ( MUM - Max( MLU,RMSe ) ) / RCSe ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8433184526280625}, {"determining": "( Min( ARS ,( AMS + ACS ) ) / ( ( ( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + AMS ) ) * Const ) ) - DDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( ( ( DS - CS ) - MUR ),CS ) / ( ( ( ( MLU - ( ( MUC / Min( CS ,MUM ) ) + RCSe ) ) * Min( RCSe ,CS ) ) - MLU ) - MUC ) )", "obj1": 0.9714285714285714, "obj2": 0.012238172698020206}, {"determining": "Min( Max( ( DDR + AMS ),( ( FirstVNF_Mem + ( Max( BR,Max( ( MRS + FirstVNF_Mem_Server ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM * MRS ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( MUR + ( MUC * Min( RCSe ,MUC ) ) ) - Min( Min( MUR ,MUR ) ,( CS - ( ( MLU / ( Min( RRSe ,CS ) * ( MLU * ( MUC - RCSe ) ) ) ) - RCSe ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.04126006699067148}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( DDR - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) - MLU ) ,( ( CS * RCSe ) - ( MUM * RCSe ) ) )", "obj1": 0.6306122448979592, "obj2": 0.28458925307536237}, {"determining": "Min( Max( Min( ( ACS + FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( MDR - FirstVNF_Mem_Server ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * DDR ) ) ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * ( MUC / MUM ) ) ) ) - MLU ) ,( MLU + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR - Max( MUM,RCSe ) ) ) * ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( RRSe - MUR ) ) ) )", "obj1": 0.9244897959183673, "obj2": 0.03338002760466691}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - Min( Const ,RRS ) ) ,( ( ( FirstVNF_CPU_Server + DDR ) - BR ) * ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( RRSe - ( Min( RRSe ,MUC ) - RMSe ) ) ) - MLU ),( Min( RCSe ,( ( DS + MUR ) * ( RRSe * MUM ) ) ) * ( RCSe / Min( RCSe ,RMSe ) ) ) ) / RCSe ) / Min( RRSe ,RRSe ) )", "obj1": 0.7142857142857143, "obj2": 0.20690242937450085}, {"determining": "Min( Max( Max( ( FirstVNF_CPU - Min( FirstVNF_CPU_Server ,PN ) ),MRS ),( ( FirstVNF_Mem + ( Max( ARS,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( Min( Const ,Min( ARS ,FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) - ( BR * FirstVNF_RAM_Server ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * DDR ) ) * Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( MLU + MUM ) ) - Min( ( RMSe * DS ) ,( MUC - Min( ( MLU + RMSe ) ,Min( RRSe ,Min( ( MUC + RRSe ) ,MUC ) ) ) ) ) ) - ( DS - ( ( ( ( MUM - ( ( RRSe + CS ) - Max( MUR,RCSe ) ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.9326530612244898, "obj2": 0.0292162922195646}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( ( Const / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ),BR ) * ( AMS + AMS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.010545523950770025}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "Min( Max( Min( ( ACS - ACS ) ,( ACS - FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ( Max( BR,( ( DDR / FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( CS + ( Max( RCSe,( RMSe * MUR ) ) / ( CS - RRSe ) ) ),Min( Min( MUR ,MUR ) ,( Max( MUM,RRSe ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9673469387755103, "obj2": 0.015547148041899184}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / MDR ) ) + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,Min( FirstVNF_CPU ,Min( BR ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ( Max( Max( ARS,DDR ),Const ) / FirstVNF_Mem ) - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Min( MUM ,MUR ) ) / ( CS + MUM ) ) ,( ( RRSe / ( ( MUM - DS ) / ( CS * RRSe ) ) ) - RCSe ) ) / RCSe ) )", "obj1": 0.9612244897959183, "obj2": 0.016377062804846135}, {"determining": "Min( Max( ( ( ( ACS * PN ) - ACS ) / ( MRS - ACS ) ),( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) * ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * ( ( PN * MDR ) * CRS ) ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( Min( ( RRSe * RMSe ) ,Max( ( RCSe + DS ),Max( ( MUM * RRSe ),( MUC - RMSe ) ) ) ) / ( CS + RRSe ) ) )", "obj1": 0.9530612244897959, "obj2": 0.020586508258801935}, {"determining": "Min( ( ( MDR - FirstVNF_RAM_Server ) + ( ( ARS - AMS ) + Const ) ) ,Max( MRS,Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * RRSe ) - ( MUC / ( CS * MLU ) ) )", "obj1": 0.9040816326530612, "obj2": 0.043893244040151304}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ,Max( RRS,( ( FirstVNF_Mem + ( Max( BR,( FirstVNF_CPU * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * ( MDR * ARS ) ) ) ) - ( BR * RRS ) ) ) )", "choosing": "( ( Min( ( RMSe + RMSe ) ,( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - MUR ) ) ) - ( Max( ( Max( MLU,Min( MUC ,MUC ) ) + CS ),( ( RCSe / ( ( MLU * RMSe ) * CS ) ) + Min( DS ,MUC ) ) ) + ( MLU - ( RCSe * RMSe ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.0419329768748851}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( FirstVNF_RAM_Server,( RRS * ( Const / BR ) ) ),Const ) / FirstVNF_Mem ) ) ) * ( Const / BR ) )", "choosing": "( ( Min( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.936734693877551, "obj2": 0.028419893462602132}, {"determining": "Min( Min( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ) ,( ( PN - CRS ) - Const ) ) ,Min( Max( Const,MDR ) ,Max( DDR,DDR ) ) )", "choosing": "( ( ( Max( MUR,( ( MUR / ( ( MUR / CS ) * ( MUM / RMSe ) ) ) + Max( DS,MUM ) ) ) / ( MLU - ( ( RRSe * ( Max( DS,RRSe ) + DS ) ) * ( Max( MUC,MUR ) * ( MUC + MUC ) ) ) ) ) / MUR ) - ( ( ( ( DS * RMSe ) - Max( Max( RMSe,MUM ),RCSe ) ) + DS ) / MUM ) )", "obj1": 0.9469387755102041, "obj2": 0.023986538127100273}, {"determining": "Min( Max( CRS,Const ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9020408163265307, "obj2": 0.04520116720165456}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( Min( FirstVNF_RAM ,PN ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( FirstVNF_RAM + BR ) ,Max( DDR,DDR ) ) )", "choosing": "( RCSe * ( MUM / ( MUR + RRSe ) ) )", "obj1": 0.9693877551020408, "obj2": 0.014633835904540315}, {"determining": "( ( ( ( RRS + MDR ) * ( Min( Max( FirstVNF_RAM_Server,DDR ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / MDR ) ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( DDR + AMS ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( Max( ( CS / DS ),Min( MUC ,( CS - ( ( MUM - DS ) / ( MLU * Max( MUM,MUR ) ) ) ) ) ),Max( Min( ( RMSe / ( MUM * Min( RCSe ,MUM ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8760284840954607}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( Max( FirstVNF_RAM_Server,( RRS * ( Const / ACS ) ) ),Const ) / FirstVNF_Mem ) ) ) * ( Const / BR ) )", "choosing": "( ( Min( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.936734693877551, "obj2": 0.028419893462602132}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),( ACS - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) / Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) ) ,Max( ( CRS + DDR ),Const ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( RCSe - MLU ) ) - Min( ( MUR / MUC ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * ( MUR - ( RRSe + ( ( RMSe / MUC ) / ( ( MUR + RMSe ) * ( DS / MUC ) ) ) ) ) ) ) )", "obj1": 0.9, "obj2": 0.04742435034615194}, {"determining": "( ( PN - ( ( RRS + ( ( AMS - Max( FirstVNF_RAM_Server,( ACS + AMS ) ) ) * Const ) ) * ( Min( ( Max( DDR,BR ) * ( Const / BR ) ) ,Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( Const / MRS ) )", "choosing": "( ( Max( Min( MLU ,Min( MUC ,RCSe ) ),DS ) * ( ( ( RMSe - DS ) / MUM ) * Max( RRSe,Max( ( DS / DS ),( MUC + RMSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0034616397171632765}, {"determining": "( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( ( BR * ( FirstVNF_CPU_Server + DDR ) ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) - ( ( RRS + MDR ) * ( FirstVNF_Mem / Max( CRS,Const ) ) ) ) / ( FirstVNF_CPU / Max( DDR,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0008011892270333164}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) )", "obj1": 0.9510204081632653, "obj2": 0.022010929472212608}, {"determining": "( ( Const + ( Max( CRS,MDR ) * ( MRS + ( RRS - ( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( Min( Max( MRS,Min( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),DDR ) ,( FirstVNF_CPU / Min( RRS ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) - ACS ) ,Max( ( ( Max( FirstVNF_CPU_Server,ACS ) - RRS ) / ARS ),AMS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( RMSe ,( ( MUR + RCSe ) - Min( Min( ( ( MLU / MUM ) / MUM ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Max( MUR,MUM ) ) / DS ) ,( RMSe + ( CS / Min( MLU ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.9591836734693877, "obj2": 0.017192892409302152}], "22": [{"determining": "( ( ( ( ACS - MDR ) * Min( FirstVNF_RAM ,Min( MDR ,RRS ) ) ) - AMS ) + ( Min( ( PN - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,( MUR + ( MUC + ( RCSe + RCSe ) ) ) ) / ( ( CS - MUC ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Max( MUC,MUC ) / ( ( MUR / ( DS / CS ) ) * ( MUC - CS ) ) ) ),Min( DS ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ( ACS - DDR ) * ( AMS / MDR ) ) ) / ( MRS / Const ) )", "choosing": "( ( ( RCSe * Min( MUC ,RCSe ) ) / MLU ) / Min( MUR ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8958148423992437}, {"determining": "( ( PN - ( ( ( AMS - ARS ) + Min( ( Min( ( FirstVNF_RAM - ARS ) ,FirstVNF_RAM ) / ( ARS - FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem,DDR ) - MDR ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / ( ( BR * AMS ) - Max( ARS,Max( ARS,BR ) ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "Min( ( ( ( ( RCSe / RCSe ) - CS ) + ( MLU * CS ) ) - MUM ) ,( RMSe + ( ( ( Max( ( ( RCSe / MUR ) + RRSe ),( ( RMSe * MUR ) * MUR ) ) / ( ( RRSe / ( MUM / RCSe ) ) / RCSe ) ) + Min( MUC ,( CS - Min( DS ,( RRSe / RCSe ) ) ) ) ) + ( RMSe - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7959183673469388, "obj2": 0.10177147378877685}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.26326530612244897, "obj2": 0.635118734034016}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.40816326530612246, "obj2": 0.43918721784092785}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( AMS - Max( FirstVNF_Mem,( ( FirstVNF_Mem * ARS ) * ( ( PN - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( FirstVNF_Mem * PN ) ) ) + Const ) ) ) ) / Min( FirstVNF_Mem ,MDR ) )", "choosing": "( Max( ( ( ( MUC / MUR ) / MUR ) / MUM ),Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUC ,( ( Max( ( MUC * Max( CS,RCSe ) ),( RMSe + DS ) ) + Max( ( MUC + DS ),MUR ) ) - MUR ) ) ,RMSe ) )", "obj1": 0.4326530612244898, "obj2": 0.40525309416291927}, {"determining": "( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( DDR + BR ) * ( BR / Const ) ) / ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Max( ( DS * ( Min( MUC ,( ( DS + RCSe ) / MUR ) ) + MUC ) ),( MUC - RRSe ) ) ) - ( MUC - ( DS * ( RMSe + Min( RRSe ,( Min( ( RCSe / RRSe ) ,MLU ) * MLU ) ) ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.5333534044983416}, {"determining": "( ( Max( FirstVNF_RAM_Server,BR ) / AMS ) / ( FirstVNF_RAM + DDR ) )", "choosing": "( ( Max( MUM,MUC ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( RRSe / ( MUM * MUR ) ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4061224489795918, "obj2": 0.5011289642345607}, {"determining": "( Max( MRS,( ( FirstVNF_CPU_Server + ( PN / FirstVNF_CPU ) ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) * ( Min( ( Const - RRS ) ,CRS ) * Const ) ) * Min( CRS ,CRS ) ) ) ) / ( PN - Min( ( RRS + AMS ) ,( Max( CRS,( FirstVNF_CPU_Server - MRS ) ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "Min( ( MUR - ( DS / CS ) ) ,( RCSe + ( ( MUM - ( DS / ( CS / ( Max( RRSe,MUR ) * DS ) ) ) ) + Max( ( MUR * DS ),( ( MUM - MUR ) + RMSe ) ) ) ) )", "obj1": 0.5836734693877551, "obj2": 0.30504492281383727}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( ( FirstVNF_CPU / Min( BR ,FirstVNF_Mem ) ) ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( CS / DS ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.3836734693877551, "obj2": 0.5096446797499621}, {"determining": "( ( Const / Min( ACS ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,ARS ) ) ) ) * ( PN - Max( ( CRS / FirstVNF_Mem ),AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( RCSe - Min( Min( Min( ( CS * MUC ) ,( MUR + MUC ) ) ,MUC ) ,CS ) ) ) ),( ( ( ( MUM * MUM ) * MUC ) * ( RCSe / MUR ) ) - CS ) )", "obj1": 0.7448979591836735, "obj2": 0.12269990469959279}, {"determining": "( ( AMS - Max( ( Max( Min( MDR ,FirstVNF_CPU ),DDR ) * ( PN / FirstVNF_Mem ) ),Const ) ) / ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( ( MLU + ( ( RCSe * DS ) * RCSe ) ) / MUC ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - RRSe ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( RMSe / MUM ) * MUM ) ) - MUR ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.679292893601322}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6408163265306123, "obj2": 0.24905469676390593}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( Const / FirstVNF_Mem ) * ( ( ( BR / ( RRS - ( Const * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_CPU_Server ) + ( Min( ( DDR - ACS ) ,( Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) * FirstVNF_Mem_Server ) ) * ( ACS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS / Max( ( ( DS - ( ( Min( DS ,DS ) - MUR ) + RCSe ) ) + ( MUM - RMSe ) ),( MUC / Max( ( RRSe * RMSe ),DS ) ) ) ) * ( ( ( RMSe + RMSe ) / Min( Max( DS,( Max( MLU,( RCSe + MUM ) ) * ( Min( MLU ,DS ) + DS ) ) ) ,( RMSe / MLU ) ) ) / ( RRSe + CS ) ) )", "obj1": 0.7183673469387755, "obj2": 0.16132175323841497}, {"determining": "( Min( PN ,( ( FirstVNF_Mem_Server + MDR ) * ( AMS / MDR ) ) ) / ( MRS / ( ACS * ACS ) ) )", "choosing": "( ( MLU / ( ( ( ( DS / ( MUM / CS ) ) + RCSe ) * MUM ) * CS ) ) / Min( MUR ,CS ) )", "obj1": 0.7326530612244898, "obj2": 0.1493582000869129}, {"determining": "( ( ( Max( ( ARS / RRS ),Const ) + Min( Max( ( FirstVNF_RAM_Server / BR ),MRS ) ,Const ) ) - Min( ( Max( DDR,Min( MDR ,( FirstVNF_RAM / BR ) ) ) * FirstVNF_Mem ) ,ARS ) ) / Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,Max( ( ( ( CRS + FirstVNF_CPU ) + ( MDR + BR ) ) * ( ACS * BR ) ),FirstVNF_CPU_Server ) ) ),DDR ) )", "choosing": "( ( ( MUC - MUM ) / ( ( RMSe + MUR ) / ( RMSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUR * MUR ) / RMSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( RRSe - MUR ) ) ) )", "obj1": 0.4714285714285714, "obj2": 0.38629977454758124}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) / ( RRS * ( CRS * FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( AMS,ARS ),( ARS + PN ) ) / FirstVNF_Mem ) ) ) ,( AMS * ( FirstVNF_CPU - ( FirstVNF_CPU + RRS ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( MLU - MUC ),( Max( DS,DS ) / DS ) ) ,( ( CS * RCSe ) - ( MUM * RCSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.3044710304440972}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - ( ( MDR / FirstVNF_RAM_Server ) + ACS ) ) + ( ( FirstVNF_RAM / Min( PN ,FirstVNF_Mem ) ) * CRS ) )", "choosing": "( ( ( MUM / MUR ) * RMSe ) / ( ( ( Min( RRSe ,( CS * RMSe ) ) * ( ( MUR - Min( Max( RMSe,MLU ) ,Max( MUC,MLU ) ) ) + DS ) ) + ( MUM + MUC ) ) + RMSe ) )", "obj1": 0.6714285714285714, "obj2": 0.2381269419807639}, {"determining": "( ( RRS + FirstVNF_RAM_Server ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( MRS ,( BR * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( MUC ,Min( ( MLU + ( RRSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( ( ( MLU / MUC ) / MUM ) - ( ( RMSe * RCSe ) + ( RCSe * CS ) ) ) ),MUC ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM - ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ( AMS - Max( ARS,( ( ( ( MDR / ACS ) * ACS ) * FirstVNF_CPU ) * MDR ) ) ) / Min( FirstVNF_CPU ,( FirstVNF_CPU + Const ) ) )", "choosing": "( ( Min( ( MUM + MUR ) ,( MUR + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( Min( RRSe ,( RRSe * MLU ) ) * ( ( RMSe * RCSe ) / RCSe ) ) - ( ( CS + RMSe ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.45918367346938777, "obj2": 0.3863778089801303}, {"determining": "( ( AMS * PN ) + ( Const - Min( ( ACS + ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ,( ( Const + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) / RRS ) ) ) )", "choosing": "( ( ( MUM / MUM ) / ( RRSe + MUM ) ) / ( RRSe * Max( Max( Max( ( RMSe + ( ( RRSe * MUM ) * MLU ) ),MUR ),( ( MUR * MUM ) - MUC ) ),( ( ( MUC - DS ) / RCSe ) / ( MUM - CS ) ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.740803066329768}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( ( MUM - CS ) / Min( RCSe ,( RMSe + ( RRSe + Max( RRSe,MUM ) ) ) ) ) / Min( ( RMSe + ( RRSe - MUC ) ) ,Max( DS,DS ) ) ),( ( MLU + CS ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ) )", "obj1": 0.7142857142857143, "obj2": 0.19502829822196951}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.5040816326530613, "obj2": 0.36962026981923085}, {"determining": "( ( AMS * ACS ) / Max( ( ( ACS - ACS ) * ( PN - FirstVNF_RAM_Server ) ),BR ) )", "choosing": "( ( ( ( ( DS * CS ) / MUR ) / ( MUR / MUC ) ) + MUM ) - ( DS - ( CS - ( MUM - ( RRSe * CS ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7600334505949903}, {"determining": "( Max( FirstVNF_CPU,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MLU * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( RRSe - MUC ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7229063585658788}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * ( FirstVNF_Mem / Max( CRS,Const ) ) ) ) )", "choosing": "( ( ( RMSe * Max( Max( ( CS - MUC ),( ( CS * MUR ) / RCSe ) ),RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.1836734693877551, "obj2": 0.7780935642053739}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( Max( ( RRS - ( FirstVNF_RAM * DDR ) ),( ACS * MDR ) ) - AMS ) / Min( ACS ,Min( ARS ,( ACS * ( DDR - ( ACS * ACS ) ) ) ) ) )", "choosing": "( ( ( RCSe - MUC ) / MUR ) - ( ( CS - ( ( ( Max( DS,MUC ) / MLU ) + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.25510204081632654, "obj2": 0.6989410278280859}, {"determining": "( ( ( AMS - Max( ( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) ) * ( Const / BR ) )", "choosing": "( ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / MUR ) - ( ( ( ( ( Min( RRSe ,MLU ) - MUM ) * MUM ) / RMSe ) + DS ) / MUM ) )", "obj1": 0.336734693877551, "obj2": 0.5912134411120042}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) + ( Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) * Max( ( ARS / FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( MUR * ( ( RMSe - CS ) + Max( ( CS * ( Max( RMSe,( MUR + ( DS / CS ) ) ) - MLU ) ),( DS / MUM ) ) ) )", "obj1": 0.636734693877551, "obj2": 0.27030808835089826}, {"determining": "( Min( ACS ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM * CRS ) ) / ACS ) ,BR ) ) / DDR ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC / ( RCSe - ( Min( RMSe ,( RMSe / RCSe ) ) - RMSe ) ) ) ) ) - ( ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) - DS ) )", "obj1": 0.15918367346938775, "obj2": 0.8119757933690984}, {"determining": "( Min( RRS ,MRS ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( MLU - ( ( ( CS / RMSe ) * RCSe ) * DS ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( Max( ( MLU / DS ),Max( MUC,MLU ) ) * Max( MLU,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5530612244897959, "obj2": 0.34073102844298647}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * ( FirstVNF_RAM * ACS ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.348946036325002}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( ( MUM - CS ) / Min( RCSe ,( RMSe + ( RRSe + Max( RRSe,MUM ) ) ) ) ) / Min( ( RMSe + ( RRSe - MUC ) ) ,Max( DS,DS ) ) ),( ( Min( RCSe ,RMSe ) + CS ) * RMSe ) ) ,( ( CS * RCSe ) - ( MUM * RCSe ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2875590160815293}, {"determining": "( ( AMS - Max( ( FirstVNF_RAM * ARS ),ARS ) ) / Max( FirstVNF_RAM,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MUM - Max( MUR,MUR ) ) - ( DS - ( ( MUR - ( ( MUM - ( ( MUM * RMSe ) / RCSe ) ) - ( ( MLU + ( MLU + CS ) ) * RMSe ) ) ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5102040816326531, "obj2": 0.3648492233348197}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * ( ( FirstVNF_Mem / MDR ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC - MUM ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7813411576934753}, {"determining": "Min( Max( Min( ( ACS - ACS ) ,( ACS - FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ( Max( BR,( ( DDR / FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) - ( Min( ( ( Min( ( Min( RRSe ,MUM ) * MLU ) ,MLU ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.04759271207600989}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8321540144904129}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU - PN ) ,BR ) ) / FirstVNF_Mem )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + RMSe ) ) - Min( ( MUR * DS ) ,( ( CS + ( ( MUC + MLU ) - ( RCSe - RRSe ) ) ) + RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( Min( DS ,( RRSe - DS ) ) * ( ( MUC + RMSe ) / ( RMSe - MUC ) ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.748302548957801}, {"determining": "( ( AMS - Max( ( Max( DDR,( ( PN * FirstVNF_CPU ) + DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( Max( CS,DS ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( ( MLU + DS ) * RMSe ) + RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.3452166496109561}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( Min( MUM ,MUR ) - CS ) / Max( MUC,MUC ) ) ) ) ,CS ),( CS - ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.7428571428571429, "obj2": 0.1238833003470986}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "( ( AMS - Max( Min( Min( ARS ,FirstVNF_Mem ) ,Min( BR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( RMSe + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - ( RMSe * Min( MLU ,MUM ) ) ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5904940164180497}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8879560768570286}, {"determining": "( ( Min( ( FirstVNF_CPU - ( ( RRS + ( ACS + MRS ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) - FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + Max( PN,MDR ) ) ) * ( ( FirstVNF_CPU + RRS ) * FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) + ( ( CRS * FirstVNF_Mem_Server ) - AMS ) )", "choosing": "Max( ( RMSe * RMSe ),Min( Min( ( RMSe * Min( Max( ( Min( CS ,CS ) - RRSe ),MUC ) ,MLU ) ) ,( RRSe * CS ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / DS ) ) + MUM ) ) * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "Min( Min( Min( Max( ( ARS - FirstVNF_RAM_Server ),( ( FirstVNF_CPU - Const ) + ACS ) ) ,( ACS / ( Min( MRS ,AMS ) / FirstVNF_CPU_Server ) ) ) ,BR ) ,( FirstVNF_CPU * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( CS / MLU ),( Max( ( Min( ( MUC / MLU ) ,RMSe ) + RMSe ),MUM ) - Max( ( MUC - MLU ),Max( MUC,DS ) ) ) ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + MUC ) + RRSe ) ,MLU ) ) ,DS ) ,Max( RRSe,( Min( MUM ,( ( RRSe / ( MUC + CS ) ) * MLU ) ) * MUC ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7544423640090209}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,( ( CS * RCSe ) - ( MUM - RCSe ) ) )", "obj1": 0.6346938775510204, "obj2": 0.28397960378299636}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,MUR ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.34559390746848123}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( FirstVNF_CPU_Server / BR ) / BR ) ) )", "choosing": "( Max( ( Min( Min( RRSe ,MUR ) ,( ( MUR / ( MUC + RRSe ) ) / Max( DS,( CS + RRSe ) ) ) ) - CS ),( MUM / DS ) ) + CS )", "obj1": 0.12653061224489795, "obj2": 0.8589673024473602}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ( ( ( FirstVNF_CPU * BR ) - PN ) * FirstVNF_CPU ) ) ) - Const ) / BR ) )", "choosing": "Max( Min( ( Max( RMSe,( MUR + DS ) ) / DS ) ,( RMSe - CS ) ),( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( Max( Max( RCSe,RMSe ),( RCSe - ( DS - RCSe ) ) ),MUM ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8646387774221315}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ACS / Max( BR,( CRS + ( Min( MDR ,DDR ) * Const ) ) ) )", "choosing": "( ( CS - MUC ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8021734073188833}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - RRS ),( ( FirstVNF_CPU_Server * ACS ) * CRS ) ) ) / Min( Min( FirstVNF_RAM ,( DDR * FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + AMS ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - Min( RRSe ,RCSe ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ACS / Max( BR,( CRS + ( Max( CRS,PN ) * PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RCSe ) * RMSe ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS - MUR ) / RCSe ) ) - ( ( MLU + Max( RCSe,MUM ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.13877551020408163, "obj2": 0.84382541227652}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_Mem_Server ) ),MDR ) * ( AMS + AMS ) ) ) - ( BR * ( FirstVNF_RAM - MDR ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( RRSe,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / Max( DS,RRSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9163265306122449, "obj2": 0.037870547323189195}, {"determining": "( ( Const - ( ( PN * Const ) + RRS ) ) * ( Max( BR,DDR ) / Min( ( ( Const - ( Const / AMS ) ) * ARS ) ,RRS ) ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( ( MUC + ( Max( DS,( MLU - Min( MLU ,( CS - MUC ) ) ) ) * Max( CS,MUM ) ) ) / ( DS - MLU ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "Min( Max( CRS,Const ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.04759271207600989}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ARS / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( DS ,( MUR + RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8845312571319146}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "Max( ( ( Max( RCSe,( ( ( MUR - MUM ) / DS ) + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( DS / CS ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ),( CS + RCSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8329880263221716}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( ( Max( MRS,RRS ) - BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( MRS / Const ) )", "choosing": "( MUR * ( ( Min( ( MUM - ( ( DS * MUR ) / RCSe ) ) ,( DS + RMSe ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9857142857142858, "obj2": 0.005628862220294025}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.861849297665582}, {"determining": "( Min( FirstVNF_CPU ,RRS ) + ( FirstVNF_CPU + Const ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS / ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( ( ( CS + RCSe ) + ( Min( DS ,MLU ) / MLU ) ) - ( RCSe / MUM ) ) ,( RMSe - MUR ) ),CS ) )", "obj1": 0.1, "obj2": 0.8802435212133923}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( ( Const / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ),BR ) * ( AMS + AMS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9795918367346939, "obj2": 0.009378505763204027}, {"determining": "Min( Max( ( ( ( ACS * PN ) - ACS ) / ( MRS - ACS ) ),( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) * ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * ( ( PN * MDR ) * CRS ) ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( Min( ( RRSe * RMSe ) ,Max( ( RCSe + DS ),Max( ( MUM * RRSe ),( MUC - RMSe ) ) ) ) / ( CS + RRSe ) ) )", "obj1": 0.9530612244897959, "obj2": 0.020586508258801935}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,( ACS / Const ) ) * ( ( BR * FirstVNF_Mem_Server ) / RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_CPU_Server ) - Min( PN ,FirstVNF_CPU ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( ( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03486417169314258}, {"determining": "( ( PN - ( ( RRS + ( ( AMS - Max( FirstVNF_RAM_Server,( ACS + AMS ) ) ) * Const ) ) * ( Min( ( Max( DDR,BR ) * ( Const / BR ) ) ,Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( Const / MRS ) )", "choosing": "( ( Max( Min( MLU ,Min( MUC ,RCSe ) ),DS ) * ( ( ( RMSe - DS ) / MUM ) * Max( RRSe,Max( ( DS / DS ),( MUC + RMSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0034616397171632765}, {"determining": "( ( Const + ( Max( CRS,MDR ) * ( MRS + ( RRS - ( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( Min( Max( MRS,Min( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),DDR ) ,( FirstVNF_CPU / Min( RRS ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) - ACS ) ,Max( ( ( Max( FirstVNF_CPU_Server,ACS ) - RRS ) / ARS ),AMS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( RMSe ,( ( MUR + RCSe ) - Min( Min( ( ( MLU / MUM ) / MUM ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Max( MUR,MUM ) ) / DS ) ,( RMSe + ( CS / Min( MLU ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.9591836734693877, "obj2": 0.017192892409302152}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) * FirstVNF_RAM ) + ( Max( ( ( FirstVNF_RAM_Server * ( DDR * ( FirstVNF_RAM_Server / AMS ) ) ) * ARS ),AMS ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( Max( RCSe,( MUR + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( DS / CS ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( ( RRSe * RCSe ),MUC ) ) ) ) ,CS ),( Min( ( ( Min( CS ,DS ) * MUC ) - ( ( MUR / ( MUM / CS ) ) + CS ) ) ,DS ) - MUM ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8738710046890669}, {"determining": "Min( Max( ( ( Max( Min( AMS ,FirstVNF_RAM ),MRS ) * FirstVNF_CPU_Server ) * ACS ),( MDR + ( FirstVNF_RAM * ARS ) ) ) ,Min( ( ( DDR - FirstVNF_CPU_Server ) - Min( PN ,RRS ) ) ,Min( DDR ,DDR ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( ( DS * MUC ) / Min( MUC ,CS ) ) - MLU ) ) - Min( ( DS * MUR ) ,( MUR / DS ) ) ) - Min( ( RCSe / CS ) ,( Min( RCSe ,( ( Max( Min( RCSe ,CS ),MLU ) * DS ) + Min( CS ,DS ) ) ) + Min( MLU ,MUM ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.03129395782837683}, {"determining": "( ( Min( Min( ( ACS + MDR ) ,MRS ) ,ARS ) + ( ( BR * ( FirstVNF_Mem - Min( ( MDR + ( AMS / CRS ) ) ,Const ) ) ) - FirstVNF_CPU_Server ) ) * Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( CS - ( ( MUM - Max( MLU,RMSe ) ) / RCSe ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8433184526280625}, {"determining": "( Min( ARS ,( AMS + ACS ) ) / ( ( ( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + AMS ) ) * Const ) ) - DDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( ( ( DS - CS ) - MUR ),CS ) / ( ( ( ( MLU - ( ( MUC / Min( CS ,MUM ) ) + RCSe ) ) * Min( RCSe ,CS ) ) - MLU ) - MUC ) )", "obj1": 0.9714285714285714, "obj2": 0.012238172698020206}, {"determining": "Min( Max( ( DDR + AMS ),( ( FirstVNF_Mem + ( Max( BR,Max( ( MRS + FirstVNF_Mem_Server ),RRS ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM * MRS ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( MUR + ( MUC * Min( RCSe ,MUC ) ) ) - Min( Min( MUR ,MUR ) ,( CS - ( ( MLU / ( Min( RRSe ,CS ) * ( MLU * ( MUC - RCSe ) ) ) ) - RCSe ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.04126006699067148}, {"determining": "Min( Max( Max( ( FirstVNF_CPU - Min( FirstVNF_CPU_Server ,PN ) ),MRS ),( ( FirstVNF_Mem + ( Max( ARS,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( Min( Const ,Min( ARS ,FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) - ( BR * FirstVNF_RAM_Server ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * DDR ) ) * Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( MLU + MUM ) ) - Min( ( RMSe * DS ) ,( MUC - Min( ( MLU + RMSe ) ,Min( RRSe ,Min( ( MUC + RRSe ) ,MUC ) ) ) ) ) ) - ( DS - ( ( ( ( MUM - ( ( RRSe + CS ) - Max( MUR,RCSe ) ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.9326530612244898, "obj2": 0.0292162922195646}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( DDR - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) - MLU ) ,( ( CS * RCSe ) - ( MUM * RCSe ) ) )", "obj1": 0.6306122448979592, "obj2": 0.28458925307536237}, {"determining": "Min( Max( Min( ( ACS + FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( MDR - FirstVNF_Mem_Server ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * DDR ) ) ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * ( MUC / MUM ) ) ) ) - MLU ) ,( MLU + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR - Max( MUM,RCSe ) ) ) * ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( RRSe - MUR ) ) ) )", "obj1": 0.9244897959183673, "obj2": 0.03338002760466691}, {"determining": "( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( ( BR * ( FirstVNF_CPU_Server + DDR ) ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) - ( ( RRS + MDR ) * ( FirstVNF_Mem / Max( CRS,Const ) ) ) ) / ( FirstVNF_CPU / Max( DDR,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0008011892270333164}, {"determining": "( ( PN - Min( Min( FirstVNF_CPU ,BR ) ,FirstVNF_CPU ) ) * ( Const / ACS ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( ( ( ( MUM + MUM ) / ( ( MUC / MUR ) * MUC ) ) - DS ),( CS - ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.7428571428571429, "obj2": 0.1238833003470986}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( ( Const / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ),BR ) * ( AMS + AMS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.010545523950770025}, {"determining": "( ( AMS - Max( ( Min( Max( CRS,Const ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( BR + FirstVNF_RAM_Server ) ) ,Max( Const,DDR ) ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_CPU,DDR ) ) )", "choosing": "( ( DS - ( ( ( ( RRSe * ( MUR * ( MUC - CS ) ) ) - ( ( MLU + ( DS + CS ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) - ( Min( ( MUR + MUR ) ,Min( RMSe ,MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) )", "obj1": 0.5061224489795918, "obj2": 0.3687183903919669}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "Min( Max( Min( ( ACS - ACS ) ,( ACS - FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ( Max( BR,( ( DDR / FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( CS + ( Max( RCSe,( RMSe * MUR ) ) / ( CS - RRSe ) ) ),Min( Min( MUR ,MUR ) ,( Max( MUM,RRSe ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9673469387755103, "obj2": 0.015547148041899184}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / MDR ) ) + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,Min( FirstVNF_CPU ,Min( BR ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ( Max( Max( ARS,DDR ),Const ) / FirstVNF_Mem ) - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Min( MUM ,MUR ) ) / ( CS + MUM ) ) ,( ( RRSe / ( ( MUM - DS ) / ( CS * RRSe ) ) ) - RCSe ) ) / RCSe ) )", "obj1": 0.9612244897959183, "obj2": 0.016377062804846135}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( ( BR / CRS ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,MDR ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,( ( MLU * RMSe ) - MLU ) ) ) - MLU ) ,( ( DS + Min( ( RRSe + RRSe ) ,( RRSe / MUC ) ) ) * MUR ) ) - Min( ( RCSe / DS ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.024296936913491805}, {"determining": "Min( ( ( MDR - FirstVNF_RAM_Server ) + ( ( ARS - AMS ) + Const ) ) ,Max( MRS,Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * RRSe ) - ( MUC / ( CS * MLU ) ) )", "obj1": 0.9040816326530612, "obj2": 0.043893244040151304}, {"determining": "Min( Max( CRS,Max( ( ( Max( CRS,Max( MDR,( ACS + DDR ) ) ) * FirstVNF_CPU_Server ) * ACS ),( MDR * ( FirstVNF_RAM * ARS ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,MDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( Min( CS ,( ( ( RCSe + RRSe ) - MUC ) / RMSe ) ) ,( DS - MUR ) ) ) - ( ( Min( ( MUR * MUR ) ,( ( ( DS * MUC ) / Min( MUC ,CS ) ) - MLU ) ) / Min( ( DS * MUR ) ,( MUR / DS ) ) ) - Min( ( RCSe / CS ) ,( Min( RCSe ,( MLU + Min( CS ,DS ) ) ) + Min( MLU ,DS ) ) ) ) )", "obj1": 0.9387755102040817, "obj2": 0.027380878216268716}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ,Max( RRS,( ( FirstVNF_Mem + ( Max( BR,( FirstVNF_CPU * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * ( MDR * ARS ) ) ) ) - ( BR * RRS ) ) ) )", "choosing": "( ( Min( ( RMSe + RMSe ) ,( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - MUR ) ) ) - ( Max( ( Max( MLU,Min( MUC ,MUC ) ) + CS ),( ( RCSe / ( ( MLU * RMSe ) * CS ) ) + Min( DS ,MUC ) ) ) + ( MLU - ( RCSe * RMSe ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.0419329768748851}, {"determining": "Min( ( Min( FirstVNF_CPU ,( ACS - ACS ) ) * ( ( FirstVNF_Mem + ( ( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( DDR + MDR ) / ( FirstVNF_Mem_Server + MRS ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,( ( MLU * RMSe ) - MLU ) ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / RMSe ) ,( DS - MUR ) ) ) - Min( ( ( ( MUR * Min( ( CS * ( CS - RCSe ) ) ,Max( CS,DS ) ) ) - Min( MLU ,RRSe ) ) / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ) )", "obj1": 0.9448979591836735, "obj2": 0.023752196977063933}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( Max( DDR,BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( MRS / Const ) )", "choosing": "( ( Max( ( ( MUC / ( DS - Min( Min( RMSe ,MUC ) ,RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( RCSe - RCSe ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.9897959183673469, "obj2": 0.005161771579956421}, {"determining": "Min( Max( Max( ( FirstVNF_CPU - Min( FirstVNF_CPU_Server ,PN ) ),MRS ),( ( FirstVNF_Mem + ( Max( ARS,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( Min( Const ,Min( ARS ,FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) - ( BR * FirstVNF_RAM_Server ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * DDR ) ) * Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( MLU + MUM ) ) - Min( ( RMSe * DS ) ,( MUC - Min( ( MLU + RMSe ) ,Min( RRSe ,Min( ( MUC + RRSe ) ,MUC ) ) ) ) ) ) - ( DS - ( ( ( ( MUM - ( ( RRSe + CS ) - Max( MUR,RCSe ) ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.022109691313257174}, {"determining": "Min( Max( CRS,Const ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9020408163265307, "obj2": 0.04520116720165456}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( Min( FirstVNF_RAM ,PN ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( FirstVNF_RAM + BR ) ,Max( DDR,DDR ) ) )", "choosing": "( RCSe * ( MUM / ( MUR + RRSe ) ) )", "obj1": 0.9693877551020408, "obj2": 0.014633835904540315}, {"determining": "( ( ( ( RRS + MDR ) * ( FirstVNF_Mem / Max( Max( DDR,ARS ),Const ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + Min( FirstVNF_CPU ,RRS ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS / ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( ( MUM * ( ( Min( RMSe ,MUC ) - MUC ) + DS ) ) / RMSe ) ,CS ),( CS - MUC ) ) )", "obj1": 0.10612244897959183, "obj2": 0.875537126138607}], "23": [{"determining": "( ( PN - ( ( RRS + ( ( FirstVNF_CPU_Server / ( AMS + CRS ) ) - RRS ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / ( Max( ARS,BR ) - ( DDR - FirstVNF_CPU_Server ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + ( MLU * CS ) ) ) ,( RMSe + ( ( ( CS / DS ) + ( Min( RCSe ,( MLU + Min( CS ,DS ) ) ) + Min( MLU ,DS ) ) ) + ( RMSe - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - MDR ) * Min( FirstVNF_RAM ,Min( MDR ,RRS ) ) ) - AMS ) + ( Min( ( PN - PN ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,( MUR + ( MUC + ( RCSe + RCSe ) ) ) ) / ( ( CS - MUC ) / ( RRSe + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Max( MUC,MUC ) / ( ( MUR / ( DS / CS ) ) * ( MUC - CS ) ) ) ),Min( DS ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ( CRS + ( MDR - ARS ) ) + Max( Const,FirstVNF_Mem ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( CS / Max( Min( MUR ,( ( MUR / RMSe ) - ( MUM - ( CS + MUC ) ) ) ),( CS * DS ) ) ) + Min( MUC ,( CS - Min( ( RMSe * ( MLU + CS ) ) ,( MUR * RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( Max( CS,( CS / RCSe ) ) ,MUM ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.07959183673469387, "obj2": 0.901624967856927}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.26326530612244897, "obj2": 0.635118734034016}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.40816326530612246, "obj2": 0.43918721784092785}, {"determining": "( ( PN - ( ( ( AMS - ARS ) + Min( ( Min( ( FirstVNF_RAM - ARS ) ,FirstVNF_RAM ) / ( ARS - FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem,DDR ) - MDR ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / ( ( BR * AMS ) - Max( ARS,Max( ARS,BR ) ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "Min( ( ( ( ( RCSe / RCSe ) - CS ) + ( MLU * CS ) ) - MUM ) ,( RMSe + ( ( ( Max( ( ( RCSe / MUR ) + RRSe ),( ( RMSe * MUR ) * MUR ) ) / ( ( RRSe / ( MUM / RCSe ) ) / RCSe ) ) + Min( MUC ,( CS - Min( DS ,( RRSe / RCSe ) ) ) ) ) + ( RMSe - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7959183673469388, "obj2": 0.10177147378877685}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( DDR + BR ) * ( BR / Const ) ) / ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Max( ( DS * ( Min( MUC ,( ( DS + RCSe ) / MUR ) ) + MUC ) ),( MUC - RRSe ) ) ) - ( MUC - ( DS * ( RMSe + Min( RRSe ,( Min( ( RCSe / RRSe ) ,MLU ) * MLU ) ) ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.5333534044983416}, {"determining": "( ( Max( FirstVNF_RAM_Server,BR ) / AMS ) / ( FirstVNF_RAM + DDR ) )", "choosing": "( ( Max( MUM,MUC ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( RRSe / ( MUM * MUR ) ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4061224489795918, "obj2": 0.5011289642345607}, {"determining": "( Max( MRS,( ( FirstVNF_CPU_Server + ( PN / FirstVNF_CPU ) ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) * ( Min( ( Const - RRS ) ,CRS ) * Const ) ) * Min( CRS ,CRS ) ) ) ) / ( PN - Min( ( RRS + AMS ) ,( Max( CRS,( FirstVNF_CPU_Server - MRS ) ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "Min( ( MUR - ( DS / CS ) ) ,( RCSe + ( ( MUM - ( DS / ( CS / ( Max( RRSe,MUR ) * DS ) ) ) ) + Max( ( MUR * DS ),( ( MUM - MUR ) + RMSe ) ) ) ) )", "obj1": 0.5836734693877551, "obj2": 0.30504492281383727}, {"determining": "( ( AMS - Max( ( Max( DDR,Min( ( FirstVNF_CPU / Min( BR ,FirstVNF_Mem ) ) ,DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( CS / DS ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.3836734693877551, "obj2": 0.5096446797499621}, {"determining": "( ( AMS - Max( ( Max( Min( MDR ,FirstVNF_CPU ),DDR ) * ( PN / FirstVNF_Mem ) ),Const ) ) / ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( ( MLU + ( ( RCSe * DS ) * RCSe ) ) / MUC ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - RRSe ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( RMSe / MUM ) * MUM ) ) - MUR ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.679292893601322}, {"determining": "( ( ( ( RRS + MDR ) * AMS ) - Max( Const,RRS ) ) * Max( Const,BR ) )", "choosing": "( Max( ( ( Min( MUM ,MUM ) / MUR ) * MUR ),RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.7857142857142857, "obj2": 0.10423884421050618}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6408163265306123, "obj2": 0.24905469676390593}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( Const / FirstVNF_Mem ) * ( ( ( BR / ( RRS - ( Const * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_CPU_Server ) + ( Min( ( DDR - ACS ) ,( Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) * FirstVNF_Mem_Server ) ) * ( ACS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS / Max( ( ( DS - ( ( Min( DS ,DS ) - MUR ) + RCSe ) ) + ( MUM - RMSe ) ),( MUC / Max( ( RRSe * RMSe ),DS ) ) ) ) * ( ( ( RMSe + RMSe ) / Min( Max( DS,( Max( MLU,( RCSe + MUM ) ) * ( Min( MLU ,DS ) + DS ) ) ) ,( RMSe / MLU ) ) ) / ( RRSe + CS ) ) )", "obj1": 0.7183673469387755, "obj2": 0.16132175323841497}, {"determining": "( ( Const / Min( ACS ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,ARS ) ) ) ) * ( PN - Max( ( CRS / FirstVNF_Mem ),AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( RCSe - Min( Min( Min( ( CS * MUC ) ,( MUR + MUC ) ) ,MUC ) ,CS ) ) ) ),( ( ( ( MUM * MUM ) * MUC ) * ( RCSe / MUR ) ) - CS ) )", "obj1": 0.7448979591836735, "obj2": 0.12269990469959279}, {"determining": "( ( AMS - Min( Min( PN ,AMS ) ,FirstVNF_CPU ) ) / ( Max( ( ACS * Min( Const ,BR ) ),ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,Min( RMSe ,MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( MUC - ( ( ( ( ( RMSe * RCSe ) - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3787061548462769}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * ( FirstVNF_RAM * ACS ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4326530612244898, "obj2": 0.40525309416291927}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) / ( RRS * ( CRS * FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( AMS,ARS ),( ARS + PN ) ) / FirstVNF_Mem ) ) ) ,( AMS * ( FirstVNF_CPU - ( FirstVNF_CPU + RRS ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( MLU - MUC ),( Max( DS,DS ) / DS ) ) ,( ( CS * RCSe ) - ( MUM * RCSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.3044710304440972}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - ( ( MDR / FirstVNF_RAM_Server ) + ACS ) ) + ( ( FirstVNF_RAM / Min( PN ,FirstVNF_Mem ) ) * CRS ) )", "choosing": "( ( ( MUM / MUR ) * RMSe ) / ( ( ( Min( RRSe ,( CS * RMSe ) ) * ( ( MUR - Min( Max( RMSe,MLU ) ,Max( MUC,MLU ) ) ) + DS ) ) + ( MUM + MUC ) ) + RMSe ) )", "obj1": 0.6714285714285714, "obj2": 0.2381269419807639}, {"determining": "( Min( PN ,( ( FirstVNF_Mem_Server + MDR ) * ( AMS / MDR ) ) ) / ( MRS / ( ACS * ACS ) ) )", "choosing": "( ( MLU / ( ( ( ( DS / ( MUM / CS ) ) + RCSe ) * MUM ) * CS ) ) / Min( MUR ,CS ) )", "obj1": 0.7326530612244898, "obj2": 0.1493582000869129}, {"determining": "( ( RRS + FirstVNF_RAM_Server ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( MRS ,( BR * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( MUC ,Min( ( MLU + ( RRSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( ( ( MLU / MUC ) / MUM ) - ( ( RMSe * RCSe ) + ( RCSe * CS ) ) ) ),MUC ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM - ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ( AMS * PN ) + ( Const - Min( ( ACS + ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ,( ( Const + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) / RRS ) ) ) )", "choosing": "( ( ( MUM / MUM ) / ( RRSe + MUM ) ) / ( RRSe * Max( Max( Max( ( RMSe + ( ( RRSe * MUM ) * MLU ) ),MUR ),( ( MUR * MUM ) - MUC ) ),( ( ( MUC - DS ) / RCSe ) / ( MUM - CS ) ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.740803066329768}, {"determining": "( ( AMS - Max( ARS,( ( ( ( MDR / ACS ) * ACS ) * FirstVNF_CPU ) * MDR ) ) ) / Min( FirstVNF_CPU ,( FirstVNF_CPU + Const ) ) )", "choosing": "( ( Min( ( MUM + MUR ) ,( MUR + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( Min( RRSe ,( RRSe * MLU ) ) * ( ( RMSe * RCSe ) / RCSe ) ) - ( ( CS + RMSe ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.45918367346938777, "obj2": 0.3863778089801303}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) ,( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.5040816326530613, "obj2": 0.36962026981923085}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6857142857142857, "obj2": 0.21813912183101744}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( ( MUM - CS ) / Min( RCSe ,( RMSe + ( RRSe + Max( RRSe,MUM ) ) ) ) ) / Min( ( RMSe + ( RRSe - MUC ) ) ,Max( DS,DS ) ) ),( ( MLU + CS ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ) )", "obj1": 0.7142857142857143, "obj2": 0.19502829822196951}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "( ( AMS * PN ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "( ( ( MUC * MUM ) / ( ( RMSe + MUR ) / ( RMSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RMSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7207915086526647}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server * ( ARS * ARS ) ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( DDR + ACS ) ) )", "choosing": "( ( ( RRSe - MUM ) + Min( RMSe ,Max( ( ( CS - MUC ) / ( MUC / Max( DS,MUC ) ) ),Max( ( RMSe * MUC ),MLU ) ) ) ) + ( ( Min( RCSe ,( ( ( RMSe * ( MLU - CS ) ) / Min( CS ,DS ) ) - MLU ) ) * Max( CS,MUR ) ) + RCSe ) )", "obj1": 0.1836734693877551, "obj2": 0.7726397780300505}, {"determining": "Min( Max( CRS,Const ) ,Min( ( FirstVNF_CPU_Server + Max( MDR,FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) * Min( Min( DS ,( MUR + RCSe ) ) ,( DS - MUR ) ) ) - ( Min( MUC ,Min( CS ,DS ) ) + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.8938775510204081, "obj2": 0.049335223615270714}, {"determining": "( ( AMS * ACS ) / Max( ( ( ACS - ACS ) * ( PN - FirstVNF_RAM_Server ) ),BR ) )", "choosing": "( ( ( ( ( DS * CS ) / MUR ) / ( MUR / MUC ) ) + MUM ) - ( DS - ( CS - ( MUM - ( RRSe * CS ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7600334505949903}, {"determining": "( ( AMS - Max( FirstVNF_Mem,( ( FirstVNF_Mem * ARS ) * ( ( PN - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( FirstVNF_Mem * PN ) ) ) + Const ) ) ) ) / Min( FirstVNF_Mem ,MDR ) )", "choosing": "( Max( ( ( ( MUC / MUR ) / MUR ) / MUM ),Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUC ,( ( Max( ( MUC * Max( CS,RCSe ) ),( RMSe + DS ) ) + Max( ( MUC + DS ),MUR ) ) - MUR ) ) ,RMSe ) )", "obj1": 0.4326530612244898, "obj2": 0.40525309416291927}, {"determining": "( ( ( AMS - Max( ( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) ) * ( Const / BR ) )", "choosing": "( ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / MUR ) - ( ( ( ( ( Min( RRSe ,MLU ) - MUM ) * MUM ) / RMSe ) + DS ) / MUM ) )", "obj1": 0.336734693877551, "obj2": 0.5912134411120042}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) + ( Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) * Max( ( ARS / FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( MUR * ( ( RMSe - CS ) + Max( ( CS * ( Max( RMSe,( MUR + ( DS / CS ) ) ) - MLU ) ),( DS / MUM ) ) ) )", "obj1": 0.636734693877551, "obj2": 0.27030808835089826}, {"determining": "( Min( RRS ,MRS ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( MLU - ( ( ( CS / RMSe ) * RCSe ) * DS ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( Max( ( MLU / DS ),Max( MUC,MLU ) ) * Max( MLU,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5530612244897959, "obj2": 0.34073102844298647}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * ( ( FirstVNF_Mem / MDR ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC - MUM ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7813411576934753}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * ( FirstVNF_RAM * ACS ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.348946036325002}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( Min( MUM ,MUR ) - CS ) / Max( MUC,MUC ) ) ) ) ,CS ),( CS - ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.12500720043571356}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( ( MUM - CS ) / Min( RCSe ,( RMSe + ( RRSe + Max( RRSe,MUM ) ) ) ) ) / Min( ( RMSe + ( RRSe - MUC ) ) ,Max( DS,DS ) ) ),( ( Min( RCSe ,RMSe ) + CS ) * RMSe ) ) ,( ( CS * RCSe ) - ( MUM * RCSe ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2875590160815293}, {"determining": "( ( AMS - Max( ( FirstVNF_RAM * ARS ),ARS ) ) / Max( FirstVNF_RAM,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MUM - Max( MUR,MUR ) ) - ( DS - ( ( MUR - ( ( MUM - ( ( MUM * RMSe ) / RCSe ) ) - ( ( MLU + ( MLU + CS ) ) * RMSe ) ) ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5102040816326531, "obj2": 0.3648492233348197}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8321540144904129}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU - PN ) ,BR ) ) / FirstVNF_Mem )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + RMSe ) ) - Min( ( MUR * DS ) ,( ( CS + ( ( MUC + MLU ) - ( RCSe - RRSe ) ) ) + RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( Min( DS ,( RRSe - DS ) ) * ( ( MUC + RMSe ) / ( RMSe - MUC ) ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.748302548957801}, {"determining": "( ( AMS - Max( ( Max( DDR,( ( PN * FirstVNF_CPU ) + DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( Max( CS,DS ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( ( MLU + DS ) * RMSe ) + RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.3452166496109561}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8879560768570286}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "( Min( Const ,BR ) + ( ( ( ACS * FirstVNF_RAM ) - Max( Const,( Const * FirstVNF_CPU ) ) ) / DDR ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC / ( DS - ( Min( ( DS / RCSe ) ,( DS - MUR ) ) - RMSe ) ) ) ) ) - Min( MLU ,( ( MUC / RMSe ) - Max( ( Max( CS,MUC ) - RCSe ),( MUM * ( RRSe * MLU ) ) ) ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8119757933690984}, {"determining": "( ( AMS - Max( Min( Min( ARS ,FirstVNF_Mem ) ,Min( BR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( RMSe + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - ( RMSe * Min( MLU ,MUM ) ) ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5904940164180497}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8958148423992437}, {"determining": "Min( Min( Min( Max( ( ARS - FirstVNF_RAM_Server ),( ( FirstVNF_CPU - Const ) + ACS ) ) ,( ACS / ( Min( MRS ,AMS ) / FirstVNF_CPU_Server ) ) ) ,BR ) ,( FirstVNF_CPU * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( CS / MLU ),( Max( ( Min( ( MUC / MLU ) ,RMSe ) + RMSe ),MUM ) - Max( ( MUC - MLU ),Max( MUC,DS ) ) ) ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + MUC ) + RRSe ) ,MLU ) ) ,DS ) ,Max( RRSe,( Min( MUM ,( ( RRSe / ( MUC + CS ) ) * MLU ) ) * MUC ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7544423640090209}, {"determining": "( ( AMS - Max( ( RRS - FirstVNF_CPU ),ARS ) ) / Min( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( CS - MUC ) / MUR ) - ( ( ( ( DS + DS ) - ( Max( ( ( RCSe - MUR ) + DS ),RMSe ) / RCSe ) ) + DS ) / MUC ) )", "obj1": 0.25510204081632654, "obj2": 0.6989410278280859}, {"determining": "( ( Max( ( RRS - ( FirstVNF_RAM * DDR ) ),( ACS * MDR ) ) - AMS ) / Min( ACS ,Min( ARS ,( ACS * ( DDR - ( ACS * ACS ) ) ) ) ) )", "choosing": "( ( ( RCSe - MUC ) / MUR ) - ( ( CS - ( ( ( Max( DS,MUC ) / MLU ) + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.25510204081632654, "obj2": 0.6989410278280859}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,( ( CS * RCSe ) - ( MUM - RCSe ) ) )", "obj1": 0.6346938775510204, "obj2": 0.28397960378299636}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,MUR ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.34559390746848123}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( FirstVNF_CPU_Server / BR ) / BR ) ) )", "choosing": "( Max( ( Min( Min( RRSe ,MUR ) ,( ( MUR / ( MUC + RRSe ) ) / Max( DS,( CS + RRSe ) ) ) ) - CS ),( MUM / DS ) ) + CS )", "obj1": 0.12653061224489795, "obj2": 0.8589673024473602}, {"determining": "( ( Min( ( FirstVNF_CPU - ( ( RRS + ( ACS + MRS ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) - FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + Max( PN,MDR ) ) ) * ( ( FirstVNF_CPU + RRS ) * FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) + ( ( CRS * FirstVNF_Mem_Server ) - AMS ) )", "choosing": "Max( ( RMSe * RMSe ),Min( Min( ( RMSe * Min( Max( ( Min( CS ,CS ) - RRSe ),MUC ) ,MLU ) ) ,( RRSe * CS ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / DS ) ) + MUM ) ) * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ( ( ( FirstVNF_CPU * BR ) - PN ) * FirstVNF_CPU ) ) ) - Const ) / BR ) )", "choosing": "Max( Min( ( Max( RMSe,( MUR + DS ) ) / DS ) ,( RMSe - CS ) ),( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( Max( Max( RCSe,RMSe ),( RCSe - ( DS - RCSe ) ) ),MUM ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8646387774221315}, {"determining": "( ACS / Max( BR,( CRS + ( Min( MDR ,DDR ) * Const ) ) ) )", "choosing": "( ( CS - MUC ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8021734073188833}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - RRS ),( ( FirstVNF_CPU_Server * ACS ) * CRS ) ) ) / Min( Min( FirstVNF_RAM ,( DDR * FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + AMS ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - Min( RRSe ,RCSe ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ACS / Max( BR,( CRS + ( Max( CRS,PN ) * PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RCSe ) * RMSe ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS - MUR ) / RCSe ) ) - ( ( MLU + Max( RCSe,MUM ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.13877551020408163, "obj2": 0.84382541227652}, {"determining": "( ( Const - ( ( PN * Const ) + RRS ) ) * ( Max( BR,DDR ) / Min( ( ( Const - ( Const / AMS ) ) * ARS ) ,RRS ) ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( ( MUC + ( Max( DS,( MLU - Min( MLU ,( CS - MUC ) ) ) ) * Max( CS,MUM ) ) ) / ( DS - MLU ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( RRS + MDR ) * ( FirstVNF_Mem / Max( Max( DDR,ARS ),Const ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( ( ( Min( RMSe ,MUC ) - MUC ) + DS ) - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09795918367346938, "obj2": 0.88184206948515}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "Max( ( ( Max( RCSe,( ( ( MUR - MUM ) / DS ) + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( DS / CS ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ),( CS + RCSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8329880263221716}, {"determining": "Min( Max( ( ( ( ACS * PN ) - ACS ) / ( MRS - ACS ) ),( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) * ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * ( ( PN * MDR ) * CRS ) ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( Min( ( RRSe * RMSe ) ,Max( ( RCSe + DS ),Max( ( MUM * RRSe ),( MUC - RMSe ) ) ) ) / ( CS + RRSe ) ) )", "obj1": 0.9530612244897959, "obj2": 0.020586508258801935}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + DDR ) ) * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( Max( MUC,( Min( CS ,CS ) - RRSe ) ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( PN - ( ( RRS + ( ( AMS - Max( FirstVNF_RAM_Server,( ACS + AMS ) ) ) * Const ) ) * ( Min( ( Max( DDR,BR ) * ( Const / BR ) ) ,Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( Const / MRS ) )", "choosing": "( ( Max( Min( MLU ,Min( MUC ,RCSe ) ),DS ) * ( ( ( RMSe - DS ) / MUM ) * Max( RRSe,Max( ( DS / DS ),( MUC + RMSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0034616397171632765}, {"determining": "( Min( ACS ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM * CRS ) ) / ACS ) ,BR ) ) / DDR ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC / ( RCSe - ( Min( RMSe ,( RMSe / RCSe ) ) - RMSe ) ) ) ) ) - ( ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) - DS ) )", "obj1": 0.15918367346938775, "obj2": 0.8119757933690984}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.861849297665582}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_Mem_Server ) ),MDR ) * ( AMS + AMS ) ) ) - ( BR * ( FirstVNF_RAM - MDR ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( RRSe,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / Max( DS,RRSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9163265306122449, "obj2": 0.037870547323189195}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( ( Max( MRS,RRS ) - BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( MRS / Const ) )", "choosing": "( MUR * ( ( Min( ( MUM - ( ( DS * MUR ) / RCSe ) ) ,( DS + RMSe ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9857142857142858, "obj2": 0.005628862220294025}, {"determining": "( ( Const + ( Max( CRS,MDR ) * ( MRS + ( RRS - ( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( Min( Max( MRS,Min( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),DDR ) ,( FirstVNF_CPU / Min( RRS ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) - ACS ) ,Max( ( ( Max( FirstVNF_CPU_Server,ACS ) - RRS ) / ARS ),AMS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( RMSe ,( ( MUR + RCSe ) - Min( Min( ( ( MLU / MUM ) / MUM ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Max( MUR,MUM ) ) / DS ) ,( RMSe + ( CS / Min( MLU ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.9591836734693877, "obj2": 0.017192892409302152}, {"determining": "( ( Min( Min( ( ACS + MDR ) ,MRS ) ,ARS ) + ( ( BR * ( FirstVNF_Mem - Min( ( MDR + ( AMS / CRS ) ) ,Const ) ) ) - FirstVNF_CPU_Server ) ) * Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( CS - ( ( MUM - Max( MLU,RMSe ) ) / RCSe ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8433184526280625}, {"determining": "( Min( ARS ,( AMS + ACS ) ) / ( ( ( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + AMS ) ) * Const ) ) - DDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( ( ( DS - CS ) - MUR ),CS ) / ( ( ( ( MLU - ( ( MUC / Min( CS ,MUM ) ) + RCSe ) ) * Min( RCSe ,CS ) ) - MLU ) - MUC ) )", "obj1": 0.9714285714285714, "obj2": 0.012238172698020206}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( DDR - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( MUC / ( DS - ( Min( RMSe ,MUC ) - RMSe ) ) ) - MLU ) ,( ( CS * RCSe ) - ( MUM * RCSe ) ) )", "obj1": 0.6306122448979592, "obj2": 0.28458925307536237}, {"determining": "( ( PN - ( FirstVNF_CPU * ( Max( CRS,FirstVNF_CPU_Server ) / ( Max( ARS,BR ) - ( BR * AMS ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + ( MLU * CS ) ) ) ,( RMSe + MUR ) )", "obj1": 0.9979591836734694, "obj2": 0.0006704972556648238}, {"determining": "( Min( FirstVNF_CPU ,RRS ) + ( FirstVNF_CPU + Const ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS / ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( ( ( CS + RCSe ) + ( Min( DS ,MLU ) / MLU ) ) - ( RCSe / MUM ) ) ,( RMSe - MUR ) ),CS ) )", "obj1": 0.1, "obj2": 0.8802435212133923}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( ( Const / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ),BR ) * ( AMS + AMS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.010545523950770025}, {"determining": "( ( AMS - Max( ( Min( Max( CRS,Const ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( BR + FirstVNF_RAM_Server ) ) ,Max( Const,DDR ) ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_CPU,DDR ) ) )", "choosing": "( ( DS - ( ( ( ( RRSe * ( MUR * ( MUC - CS ) ) ) - ( ( MLU + ( DS + CS ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) - ( Min( ( MUR + MUR ) ,Min( RMSe ,MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) )", "obj1": 0.5061224489795918, "obj2": 0.3687183903919669}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "Min( Max( Min( ( ACS - ACS ) ,( ACS - FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ( Max( BR,( ( DDR / FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( CS + ( Max( RCSe,( RMSe * MUR ) ) / ( CS - RRSe ) ) ),Min( Min( MUR ,MUR ) ,( Max( MUM,RRSe ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9673469387755103, "obj2": 0.015547148041899184}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,( ACS / Const ) ) * ( ( BR * FirstVNF_Mem_Server ) / RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_CPU_Server ) - Min( PN ,FirstVNF_CPU ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( ( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03486417169314258}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / MDR ) ) + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,Min( FirstVNF_CPU ,Min( BR ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ( Max( Max( ARS,DDR ),Const ) / FirstVNF_Mem ) - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Min( MUM ,MUR ) ) / ( CS + MUM ) ) ,( ( RRSe / ( ( MUM - DS ) / ( CS * RRSe ) ) ) - RCSe ) ) / RCSe ) )", "obj1": 0.9612244897959183, "obj2": 0.016377062804846135}, {"determining": "Min( Max( ( ( Max( Min( AMS ,FirstVNF_RAM ),MRS ) * FirstVNF_CPU_Server ) * ACS ),( MDR + ( FirstVNF_RAM * ARS ) ) ) ,Min( ( ( DDR - FirstVNF_CPU_Server ) - Min( PN ,RRS ) ) ,Min( DDR ,DDR ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( ( DS * MUC ) / Min( MUC ,CS ) ) - MLU ) ) - Min( ( DS * MUR ) ,( MUR / DS ) ) ) - Min( ( RCSe / CS ) ,( Min( RCSe ,( ( Max( Min( RCSe ,CS ),MLU ) * DS ) + Min( CS ,DS ) ) ) + Min( MLU ,MUM ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.03129395782837683}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_Mem_Server ) ),BR ) * ( ( Max( FirstVNF_RAM_Server,BR ) / AMS ) + AMS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( ( MUR / DS ) + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),( MLU + CS ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9122448979591836, "obj2": 0.04039739141460315}, {"determining": "Min( ( ( MDR - FirstVNF_RAM_Server ) + ( ( ARS - AMS ) + Const ) ) ,Max( MRS,Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * RRSe ) - ( MUC / ( CS * MLU ) ) )", "obj1": 0.9040816326530612, "obj2": 0.043893244040151304}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "Min( Max( Min( ( ACS + FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( MDR - FirstVNF_Mem_Server ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * DDR ) ) ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * ( MUC / MUM ) ) ) ) - MLU ) ,( MLU + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR - Max( MUM,RCSe ) ) ) * ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( RRSe - MUR ) ) ) )", "obj1": 0.9244897959183673, "obj2": 0.03338002760466691}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ,Max( RRS,( ( FirstVNF_Mem + ( Max( BR,( FirstVNF_CPU * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * ( MDR * ARS ) ) ) ) - ( BR * RRS ) ) ) )", "choosing": "( ( Min( ( RMSe + RMSe ) ,( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - MUR ) ) ) - ( Max( ( Max( MLU,Min( MUC ,MUC ) ) + CS ),( ( RCSe / ( ( MLU * RMSe ) * CS ) ) + Min( DS ,MUC ) ) ) + ( MLU - ( RCSe * RMSe ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.0419329768748851}, {"determining": "( ( Max( PN,FirstVNF_RAM_Server ) / MDR ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( ( ( MUM - DS ) / ( MUM * RRSe ) ) / CS ) ) ),Max( Min( ( ( MUM * ( ( RCSe / MUC ) + DS ) ) / RMSe ) ,CS ),( CS - MUC ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8736250661894744}, {"determining": "Min( Max( Max( ( FirstVNF_CPU - Min( FirstVNF_CPU_Server ,PN ) ),MRS ),( ( FirstVNF_Mem + ( Max( ARS,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( Min( Const ,Min( ARS ,FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) - ( BR * FirstVNF_RAM_Server ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * DDR ) ) * Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( MLU + MUM ) ) - Min( ( RMSe * DS ) ,( MUC - Min( ( MLU + RMSe ) ,Min( RRSe ,Min( ( MUC + RRSe ) ,MUC ) ) ) ) ) ) - ( DS - ( ( ( ( MUM - ( ( RRSe + CS ) - Max( MUR,RCSe ) ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.9326530612244898, "obj2": 0.0292162922195646}, {"determining": "Min( ( Min( FirstVNF_CPU ,( ACS - ACS ) ) * ( ( FirstVNF_Mem + ( ( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( DDR + MDR ) / ( FirstVNF_Mem_Server + MRS ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,( ( MLU * RMSe ) - MLU ) ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / RMSe ) ,( DS - MUR ) ) ) - Min( ( ( ( MUR * Min( ( CS * ( CS - RCSe ) ) ,Max( CS,DS ) ) ) - Min( MLU ,RRSe ) ) / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ) )", "obj1": 0.9448979591836735, "obj2": 0.023752196977063933}, {"determining": "( ( ( ( Max( DDR,BR ) * ( Const / BR ) ) + Const ) - ( ACS * FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM / Min( Max( ACS,DDR ) ,FirstVNF_Mem ) ) * CRS ) )", "choosing": "( ( ( MUM / MUR ) * RMSe ) / ( ( ( Min( RRSe ,( CS * RMSe ) ) * ( ( MUR - Min( Min( RMSe ,MUC ) ,Max( MUC,MLU ) ) ) + ( RRSe / RMSe ) ) ) + ( MUM + MUC ) ) + RMSe ) )", "obj1": 0.9877551020408163, "obj2": 0.0045216208066881335}, {"determining": "Min( Max( CRS,Max( ( ( Max( CRS,MRS ) * FirstVNF_CPU_Server ) * ACS ),( AMS * ( FirstVNF_RAM * ARS ) ) ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( MUC / DS ) + DS ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.936734693877551, "obj2": 0.02752135264321491}, {"determining": "Min( Max( CRS,Const ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9020408163265307, "obj2": 0.04520116720165456}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( Min( FirstVNF_RAM ,PN ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( FirstVNF_RAM + BR ) ,Max( DDR,DDR ) ) )", "choosing": "( RCSe * ( MUM / ( MUR + RRSe ) ) )", "obj1": 0.9693877551020408, "obj2": 0.014633835904540315}], "24": [{"determining": "( ( Const / FirstVNF_Mem ) * ( ( ( ( RRS - ( Const * ARS ) ) / BR ) / FirstVNF_CPU_Server ) + Min( Min( ( Const - ( ( BR - FirstVNF_RAM ) + AMS ) ) ,( DDR * FirstVNF_Mem_Server ) ) ,Max( ACS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * MUC ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( ( DS - MUM ) - ( RRSe / ( MUM * MUR ) ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ( RRS + ( ( FirstVNF_CPU_Server / ( AMS + CRS ) ) - RRS ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / ( Max( ARS,BR ) - ( DDR - FirstVNF_CPU_Server ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + ( MLU * CS ) ) ) ,( RMSe + ( ( ( CS / DS ) + ( Min( RCSe ,( MLU + Min( CS ,DS ) ) ) + Min( MLU ,DS ) ) ) + ( RMSe - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ( CRS + ( MDR - ARS ) ) + Max( Const,FirstVNF_Mem ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( CS / Max( Min( MUR ,( ( MUR / RMSe ) - ( MUM - ( CS + MUC ) ) ) ),( CS * DS ) ) ) + Min( MUC ,( CS - Min( ( RMSe * ( MLU + CS ) ) ,( MUR * RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( Max( CS,( CS / RCSe ) ) ,MUM ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.07959183673469387, "obj2": 0.901624967856927}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.26326530612244897, "obj2": 0.635118734034016}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.40816326530612246, "obj2": 0.43918721784092785}, {"determining": "( ( PN - ( ( ( AMS - ARS ) + Min( ( Min( ( FirstVNF_RAM - ARS ) ,FirstVNF_RAM ) / ( ARS - FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem,DDR ) - MDR ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / ( ( BR * AMS ) - Max( ARS,Max( ARS,BR ) ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "Min( ( ( ( ( RCSe / RCSe ) - CS ) + ( MLU * CS ) ) - MUM ) ,( RMSe + ( ( ( Max( ( ( RCSe / MUR ) + RRSe ),( ( RMSe * MUR ) * MUR ) ) / ( ( RRSe / ( MUM / RCSe ) ) / RCSe ) ) + Min( MUC ,( CS - Min( DS ,( RRSe / RCSe ) ) ) ) ) + ( RMSe - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7959183673469388, "obj2": 0.10177147378877685}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( Max( FirstVNF_RAM_Server,BR ) / AMS ) / ( FirstVNF_RAM + DDR ) )", "choosing": "( ( Max( MUM,MUC ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( RRSe / ( MUM * MUR ) ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4061224489795918, "obj2": 0.5011289642345607}, {"determining": "( Max( MRS,( ( FirstVNF_CPU_Server + ( PN / FirstVNF_CPU ) ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) * ( Min( ( Const - RRS ) ,CRS ) * Const ) ) * Min( CRS ,CRS ) ) ) ) / ( PN - Min( ( RRS + AMS ) ,( Max( CRS,( FirstVNF_CPU_Server - MRS ) ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "Min( ( MUR - ( DS / CS ) ) ,( RCSe + ( ( MUM - ( DS / ( CS / ( Max( RRSe,MUR ) * DS ) ) ) ) + Max( ( MUR * DS ),( ( MUM - MUR ) + RMSe ) ) ) ) )", "obj1": 0.5836734693877551, "obj2": 0.30504492281383727}, {"determining": "( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( DDR + BR ) * ( BR / Const ) ) / ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Max( ( DS * ( Min( MUC ,( ( DS + RCSe ) / MUR ) ) + MUC ) ),( MUC - RRSe ) ) ) - ( MUC - ( DS * ( RMSe + Min( RRSe ,( Min( ( RCSe / RRSe ) ,MLU ) * MLU ) ) ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.5333534044983416}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,( ( Min( ( MUR + MUR ) ,( MLU + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - Min( ( CS - Min( ( MLU + CS ) ,( RMSe - RCSe ) ) ) ,DS ) ) ) ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.37142857142857144, "obj2": 0.5082053126703845}, {"determining": "( ( AMS - Max( ( Max( Min( MDR ,FirstVNF_CPU ),DDR ) * ( PN / FirstVNF_Mem ) ),Const ) ) / ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( ( MLU + ( ( RCSe * DS ) * RCSe ) ) / MUC ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - RRSe ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( RMSe / MUM ) * MUM ) ) - MUR ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.679292893601322}, {"determining": "( ( ( ( RRS + MDR ) * AMS ) - Max( Const,RRS ) ) * Max( Const,BR ) )", "choosing": "( Max( ( ( Min( MUM ,MUM ) / MUR ) * MUR ),RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.7857142857142857, "obj2": 0.10423884421050618}, {"determining": "( ( PN - ( ( ARS / PN ) * ( Max( CRS,FirstVNF_CPU ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) ,( RMSe + ( Max( ( DS - MUM ),MUR ) + ( MUM * ( MUR / ( MLU + Min( MUR ,RMSe ) ) ) ) ) ) )", "obj1": 0.610204081632653, "obj2": 0.28198543733968595}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6408163265306123, "obj2": 0.24905469676390593}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( Const / FirstVNF_Mem ) * ( ( ( BR / ( RRS - ( Const * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_CPU_Server ) + ( Min( ( DDR - ACS ) ,( Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) * FirstVNF_Mem_Server ) ) * ( ACS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS / Max( ( ( DS - ( ( Min( DS ,DS ) - MUR ) + RCSe ) ) + ( MUM - RMSe ) ),( MUC / Max( ( RRSe * RMSe ),DS ) ) ) ) * ( ( ( RMSe + RMSe ) / Min( Max( DS,( Max( MLU,( RCSe + MUM ) ) * ( Min( MLU ,DS ) + DS ) ) ) ,( RMSe / MLU ) ) ) / ( RRSe + CS ) ) )", "obj1": 0.7183673469387755, "obj2": 0.16132175323841497}, {"determining": "( ( Const / Min( ACS ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,ARS ) ) ) ) * ( PN - Max( ( CRS / FirstVNF_Mem ),AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( RCSe - Min( Min( Min( ( CS * MUC ) ,( MUR + MUC ) ) ,MUC ) ,CS ) ) ) ),( ( ( ( MUM * MUM ) * MUC ) * ( RCSe / MUR ) ) - CS ) )", "obj1": 0.7448979591836735, "obj2": 0.12269990469959279}, {"determining": "( ( ( Max( FirstVNF_RAM,( Min( FirstVNF_RAM_Server ,CRS ) * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) * AMS ) ) * Max( ( ( ACS * FirstVNF_Mem_Server ) - AMS ),( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * ( ( ( RRSe / CS ) - MUR ) / Min( CS ,RMSe ) ) ) ) ,CS ) )", "obj1": 0.6653061224489796, "obj2": 0.22859323009126412}, {"determining": "( Min( PN ,( ( FirstVNF_Mem_Server + MDR ) * ( AMS / MDR ) ) ) / ( MRS / ( ACS * ACS ) ) )", "choosing": "( ( MLU / ( ( ( ( DS / ( MUM / CS ) ) + RCSe ) * MUM ) * CS ) ) / Min( MUR ,CS ) )", "obj1": 0.7326530612244898, "obj2": 0.1493582000869129}, {"determining": "( ( RRS + FirstVNF_RAM_Server ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( MRS ,( BR * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( MUC ,Min( ( MLU + ( RRSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( ( ( MLU / MUC ) / MUM ) - ( ( RMSe * RCSe ) + ( RCSe * CS ) ) ) ),MUC ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM - ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ( AMS * PN ) + ( Const - Min( ( ACS + ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ,( ( Const + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) / RRS ) ) ) )", "choosing": "( ( ( MUM / MUM ) / ( RRSe + MUM ) ) / ( RRSe * Max( Max( Max( ( RMSe + ( ( RRSe * MUM ) * MLU ) ),MUR ),( ( MUR * MUM ) - MUC ) ),( ( ( MUC - DS ) / RCSe ) / ( MUM - CS ) ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.740803066329768}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6857142857142857, "obj2": 0.21813912183101744}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( ( MUM - CS ) / Min( RCSe ,( RMSe + ( RRSe + Max( RRSe,MUM ) ) ) ) ) / Min( ( RMSe + ( RRSe - MUC ) ) ,Max( DS,DS ) ) ),( ( MLU + CS ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ) )", "obj1": 0.7142857142857143, "obj2": 0.19502829822196951}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "( ( AMS * PN ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "( ( ( MUC * MUM ) / ( ( RMSe + MUR ) / ( RMSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RMSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7207915086526647}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server * ( ARS * ARS ) ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( DDR + ACS ) ) )", "choosing": "( ( ( RRSe - MUM ) + Min( RMSe ,Max( ( ( CS - MUC ) / ( MUC / Max( DS,MUC ) ) ),Max( ( RMSe * MUC ),MLU ) ) ) ) + ( ( Min( RCSe ,( ( ( RMSe * ( MLU - CS ) ) / Min( CS ,DS ) ) - MLU ) ) * Max( CS,MUR ) ) + RCSe ) )", "obj1": 0.1836734693877551, "obj2": 0.7726397780300505}, {"determining": "( ( AMS - Max( ARS,( ( ( ( MDR / ACS ) * ACS ) * FirstVNF_CPU ) * MDR ) ) ) / Min( FirstVNF_CPU ,( FirstVNF_CPU + Const ) ) )", "choosing": "( ( Min( ( MUM + MUR ) ,( MUR + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( Min( RRSe ,( RRSe * MLU ) ) * ( ( RMSe * RCSe ) / RCSe ) ) - ( ( CS + RMSe ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.45918367346938777, "obj2": 0.3863778089801303}, {"determining": "Min( Max( CRS,Const ) ,Min( ( FirstVNF_CPU_Server + Max( MDR,FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) * Min( Min( DS ,( MUR + RCSe ) ) ,( DS - MUR ) ) ) - ( Min( MUC ,Min( CS ,DS ) ) + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.8938775510204081, "obj2": 0.049335223615270714}, {"determining": "( Max( ( FirstVNF_CPU / Const ),AMS ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( ( Min( ( MUR + ( ( RMSe * RCSe ) + ( ( RCSe + RRSe ) * RRSe ) ) ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RMSe - ( ( MLU / RMSe ) - MUC ) ) ) ) - ( MUC - ( ( ( ( Max( ( RMSe * CS ),( MUC / MUC ) ) - ( DS / ( RMSe + RMSe ) ) ) - ( RRSe * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.43673469387755104, "obj2": 0.40267783867325646}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU - Max( ACS,FirstVNF_Mem_Server ) ) ) - RRS ) / Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM / MUM ) / ( MLU + Min( MUR ,DS ) ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( MUR - RRSe ) + ( ( ( MUM - Max( ( MUR + RCSe ),MUM ) ) - ( ( RMSe + CS ) * Max( CS,MUR ) ) ) * MUR ) ) ) )", "obj1": 0.46938775510204084, "obj2": 0.3690572516440237}, {"determining": "( ( AMS - Max( ( Min( Max( CRS,Const ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( BR + FirstVNF_RAM_Server ) ) ,Max( Const,DDR ) ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,Max( FirstVNF_CPU,DDR ) ) )", "choosing": "( ( DS - ( ( ( ( RRSe * ( MUR * ( MUC - CS ) ) ) - ( ( MLU + ( DS + CS ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) - ( Min( ( MUR + MUR ) ,Min( RMSe ,MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) )", "obj1": 0.5061224489795918, "obj2": 0.3687183903919669}, {"determining": "( ( AMS * ACS ) / Max( ( ( ACS - ACS ) * ( PN - FirstVNF_RAM_Server ) ),BR ) )", "choosing": "( ( ( ( ( DS * CS ) / MUR ) / ( MUR / MUC ) ) + MUM ) - ( DS - ( CS - ( MUM - ( RRSe * CS ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7600334505949903}, {"determining": "( ( ( AMS - Max( ( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) ) * ( Const / BR ) )", "choosing": "( ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / MUR ) - ( ( ( ( ( Min( RRSe ,MLU ) - MUM ) * MUM ) / RMSe ) + DS ) / MUM ) )", "obj1": 0.336734693877551, "obj2": 0.5912134411120042}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) + ( Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) * Max( ( ARS / FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( MUR * ( ( RMSe - CS ) + Max( ( CS * ( Max( RMSe,( MUR + ( DS / CS ) ) ) - MLU ) ),( DS / MUM ) ) ) )", "obj1": 0.636734693877551, "obj2": 0.27030808835089826}, {"determining": "( Min( RRS ,MRS ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( MLU - ( ( ( CS / RMSe ) * RCSe ) * DS ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( Max( ( MLU / DS ),Max( MUC,MLU ) ) * Max( MLU,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5530612244897959, "obj2": 0.34073102844298647}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * ( ( FirstVNF_Mem / MDR ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC - MUM ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7813411576934753}, {"determining": "( ( AMS - Max( FirstVNF_Mem,( ( FirstVNF_Mem * ARS ) * ( ( PN - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( FirstVNF_Mem * PN ) ) ) + Const ) ) ) ) / Min( FirstVNF_Mem ,MDR ) )", "choosing": "( Max( ( ( ( MUC / MUR ) / MUR ) / MUM ),Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUC ,( ( Max( ( MUC * Max( CS,RCSe ) ),( RMSe + DS ) ) + Max( ( MUC + DS ),MUR ) ) - MUR ) ) ,RMSe ) )", "obj1": 0.4326530612244898, "obj2": 0.40525309416291927}, {"determining": "( ( AMS - Min( ( CRS * ( FirstVNF_CPU * Const ) ) ,ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) + ( RRSe / DS ) ) / ( DS + ( ( RMSe - DS ) + ( Min( ( RCSe + ( Min( RRSe ,DS ) * ( DS + RRSe ) ) ) ,MUC ) * Max( DS,MLU ) ) ) ) )", "obj1": 0.6265306122448979, "obj2": 0.27632315936508456}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * ( FirstVNF_RAM * ACS ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.348946036325002}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( Min( MUM ,MUR ) - CS ) / Max( MUC,MUC ) ) ) ) ,CS ),( CS - ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.12500720043571356}, {"determining": "( ( AMS - Max( ( FirstVNF_RAM * ARS ),ARS ) ) / Max( FirstVNF_RAM,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( MUM - Max( MUR,MUR ) ) - ( DS - ( ( MUR - ( ( MUM - ( ( MUM * RMSe ) / RCSe ) ) - ( ( MLU + ( MLU + CS ) ) * RMSe ) ) ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5102040816326531, "obj2": 0.3648492233348197}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8321540144904129}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU - PN ) ,BR ) ) / FirstVNF_Mem )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + RMSe ) ) - Min( ( MUR * DS ) ,( ( CS + ( ( MUC + MLU ) - ( RCSe - RRSe ) ) ) + RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( Min( DS ,( RRSe - DS ) ) * ( ( MUC + RMSe ) / ( RMSe - MUC ) ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.748302548957801}, {"determining": "( ( AMS - Max( ( Max( DDR,( ( PN * FirstVNF_CPU ) + DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( Max( CS,DS ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( ( MLU + DS ) * RMSe ) + RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.3452166496109561}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8879560768570286}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * ( FirstVNF_RAM * ACS ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4326530612244898, "obj2": 0.40525309416291927}, {"determining": "( Min( ACS ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM * CRS ) ) / ACS ) ,BR ) ) / DDR ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC / ( RCSe - ( Min( RMSe ,( RMSe / RCSe ) ) - RMSe ) ) ) ) ) - ( ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) - DS ) )", "obj1": 0.15918367346938775, "obj2": 0.8119757933690984}, {"determining": "( ( AMS - Max( Min( Min( ARS ,FirstVNF_Mem ) ,Min( BR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( RMSe + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - ( RMSe * Min( MLU ,MUM ) ) ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5904940164180497}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,( RMSe * ( MLU + CS ) ) ) ) ) ),Max( Min( ( ( ( CS * CS ) * Min( MUM ,( MUR - MLU ) ) ) / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.08163265306122448, "obj2": 0.8933480969824823}, {"determining": "Min( Min( Min( Max( ( ARS - FirstVNF_RAM_Server ),( ( FirstVNF_CPU - Const ) + ACS ) ) ,( ACS / ( Min( MRS ,AMS ) / FirstVNF_CPU_Server ) ) ) ,BR ) ,( FirstVNF_CPU * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( CS / MLU ),( Max( ( Min( ( MUC / MLU ) ,RMSe ) + RMSe ),MUM ) - Max( ( MUC - MLU ),Max( MUC,DS ) ) ) ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + MUC ) + RRSe ) ,MLU ) ) ,DS ) ,Max( RRSe,( Min( MUM ,( ( RRSe / ( MUC + CS ) ) * MLU ) ) * MUC ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7544423640090209}, {"determining": "Min( ( Min( FirstVNF_CPU ,( ACS - ACS ) ) * ( ( FirstVNF_Mem + ( ( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( DDR + MDR ) / ( FirstVNF_Mem_Server + MRS ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,( ( MLU * RMSe ) - MLU ) ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / RMSe ) ,( DS - MUR ) ) ) - Min( ( ( ( MUR * Min( ( CS * ( CS - RCSe ) ) ,Max( CS,DS ) ) ) - Min( MLU ,RRSe ) ) / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ) )", "obj1": 0.9448979591836735, "obj2": 0.023752196977063933}, {"determining": "( ( Max( ( RRS - ( FirstVNF_RAM * DDR ) ),( ACS * MDR ) ) - AMS ) / Min( ACS ,Min( ARS ,( ACS * ( DDR - ( ACS * ACS ) ) ) ) ) )", "choosing": "( ( ( RCSe - MUC ) / MUR ) - ( ( CS - ( ( ( Max( DS,MUC ) / MLU ) + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.25510204081632654, "obj2": 0.6989410278280859}, {"determining": "( ( AMS - Max( ( RRS - FirstVNF_CPU ),ARS ) ) / Min( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( CS - MUC ) / MUR ) - ( ( ( ( DS + DS ) - ( Max( ( ( RCSe - MUR ) + DS ),RMSe ) / RCSe ) ) + DS ) / MUC ) )", "obj1": 0.25510204081632654, "obj2": 0.6989410278280859}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( ( Const / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ),BR ) * ( AMS + AMS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.010545523950770025}, {"determining": "Min( Max( ( ( ( ACS * PN ) - ACS ) / ( MRS - ACS ) ),( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) * ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * ( ( PN * MDR ) * CRS ) ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( Min( ( RRSe * RMSe ) ,Max( ( RCSe + DS ),Max( ( MUM * RRSe ),( MUC - RMSe ) ) ) ) / ( CS + RRSe ) ) )", "obj1": 0.9530612244897959, "obj2": 0.020586508258801935}, {"determining": "( ( Min( ( FirstVNF_CPU - ( ( RRS + ( ACS + MRS ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) - FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + Max( PN,MDR ) ) ) * ( ( FirstVNF_CPU + RRS ) * FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) + ( ( CRS * FirstVNF_Mem_Server ) - AMS ) )", "choosing": "Max( ( RMSe * RMSe ),Min( Min( ( RMSe * Min( Max( ( Min( CS ,CS ) - RRSe ),MUC ) ,MLU ) ) ,( RRSe * CS ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / DS ) ) + MUM ) ) * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,MUR ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.34559390746848123}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( FirstVNF_CPU_Server / BR ) / BR ) ) )", "choosing": "( Max( ( Min( Min( RRSe ,MUR ) ,( ( MUR / ( MUC + RRSe ) ) / Max( DS,( CS + RRSe ) ) ) ) - CS ),( MUM / DS ) ) + CS )", "obj1": 0.12653061224489795, "obj2": 0.8589673024473602}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ( ( ( FirstVNF_CPU * BR ) - PN ) * FirstVNF_CPU ) ) ) - Const ) / BR ) )", "choosing": "Max( Min( ( Max( RMSe,( MUR + DS ) ) / DS ) ,( RMSe - CS ) ),( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( Max( Max( RCSe,RMSe ),( RCSe - ( DS - RCSe ) ) ),MUM ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8646387774221315}, {"determining": "( ( AMS - Min( Min( PN ,AMS ) ,FirstVNF_CPU ) ) / ( Max( ( ACS * Min( Const ,BR ) ),ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,Min( RMSe ,MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( MUC - ( ( ( ( ( RMSe * RCSe ) - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3787061548462769}, {"determining": "( ACS / Max( BR,( CRS + ( Min( MDR ,DDR ) * Const ) ) ) )", "choosing": "( ( CS - MUC ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8021734073188833}, {"determining": "( ( FirstVNF_CPU - Max( ARS,( ( DDR * ( AMS / ( Min( CRS ,FirstVNF_RAM ) + PN ) ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - Max( ( RMSe + MLU ),RRSe ) ) * MUR ) + ( MUR - RRSe ) ) ) - ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / ( Max( MUM,RMSe ) / RCSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.3751066143799092}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - RRS ),( ( FirstVNF_CPU_Server * ACS ) * CRS ) ) ) / Min( Min( FirstVNF_RAM ,( DDR * FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + AMS ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - Min( RRSe ,RCSe ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ACS / Max( BR,( CRS + ( Max( CRS,PN ) * PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RCSe ) * RMSe ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS - MUR ) / RCSe ) ) - ( ( MLU + Max( RCSe,MUM ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.13877551020408163, "obj2": 0.84382541227652}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "( ( Const - ( ( PN * Const ) + RRS ) ) * ( Max( BR,DDR ) / Min( ( ( Const - ( Const / AMS ) ) * ARS ) ,RRS ) ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( ( MUC + ( Max( DS,( MLU - Min( MLU ,( CS - MUC ) ) ) ) * Max( CS,MUM ) ) ) / ( DS - MLU ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( ( Max( MRS,RRS ) - BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( MRS / Const ) )", "choosing": "( MUR * ( ( Min( ( MUM - ( ( DS * MUR ) / RCSe ) ) ,( DS + RMSe ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9857142857142858, "obj2": 0.005628862220294025}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( RRS + MDR ) * ( FirstVNF_Mem / Max( Max( DDR,ARS ),Const ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( ( ( Min( RMSe ,MUC ) - MUC ) + DS ) - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09795918367346938, "obj2": 0.88184206948515}, {"determining": "( ( Max( PN,FirstVNF_RAM_Server ) / MDR ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( ( ( MUM - DS ) / ( MUM * RRSe ) ) / CS ) ) ),Max( Min( ( ( MUM * ( ( RCSe / MUC ) + DS ) ) / RMSe ) ,CS ),( CS - MUC ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8736250661894744}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "Max( ( ( Max( RCSe,( ( ( MUR - MUM ) / DS ) + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( DS / CS ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ),( CS + RCSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8329880263221716}, {"determining": "( ( PN - ( ( RRS + ( ( AMS - Max( FirstVNF_RAM_Server,( ACS + AMS ) ) ) * Const ) ) * ( Min( ( Max( DDR,BR ) * ( Const / BR ) ) ,Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( Const / MRS ) )", "choosing": "( ( Max( Min( MLU ,Min( MUC ,RCSe ) ),DS ) * ( ( ( RMSe - DS ) / MUM ) * Max( RRSe,Max( ( DS / DS ),( MUC + RMSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0034616397171632765}, {"determining": "( Min( Const ,BR ) + ( ( ( ACS * FirstVNF_RAM ) - Max( Const,( Const * FirstVNF_CPU ) ) ) / DDR ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC / ( DS - ( Min( ( DS / RCSe ) ,( DS - MUR ) ) - RMSe ) ) ) ) ) - Min( MLU ,( ( MUC / RMSe ) - Max( ( Max( CS,MUC ) - RCSe ),( MUM * ( RRSe * MLU ) ) ) ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8119757933690984}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.861849297665582}, {"determining": "( ( Const + ( Max( CRS,MDR ) * ( MRS + ( RRS - ( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( Min( Max( MRS,Min( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),DDR ) ,( FirstVNF_CPU / Min( RRS ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) - ACS ) ,Max( ( ( Max( FirstVNF_CPU_Server,ACS ) - RRS ) / ARS ),AMS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( RMSe ,( ( MUR + RCSe ) - Min( Min( ( ( MLU / MUM ) / MUM ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Max( MUR,MUM ) ) / DS ) ,( RMSe + ( CS / Min( MLU ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.9591836734693877, "obj2": 0.017192892409302152}, {"determining": "Min( Max( ( ( Max( Min( AMS ,FirstVNF_RAM ),MRS ) * FirstVNF_CPU_Server ) * ACS ),( MDR + ( FirstVNF_RAM * ARS ) ) ) ,Min( ( ( DDR - FirstVNF_CPU_Server ) - Min( PN ,RRS ) ) ,Min( DDR ,DDR ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( ( DS * MUC ) / Min( MUC ,CS ) ) - MLU ) ) - Min( ( DS * MUR ) ,( MUR / DS ) ) ) - Min( ( RCSe / CS ) ,( Min( RCSe ,( ( Max( Min( RCSe ,CS ),MLU ) * DS ) + Min( CS ,DS ) ) ) + Min( MLU ,MUM ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.03129395782837683}, {"determining": "Min( Max( RRS,( ( FirstVNF_Mem + ( Max( BR,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,MUR ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) - Min( Min( MUR ,MUR ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.04759271207600989}, {"determining": "( ( Min( Min( ( ACS + MDR ) ,MRS ) ,ARS ) + ( ( BR * ( FirstVNF_Mem - Min( ( MDR + ( AMS / CRS ) ) ,Const ) ) ) - FirstVNF_CPU_Server ) ) * Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( CS - ( ( MUM - Max( MLU,RMSe ) ) / RCSe ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8433184526280625}, {"determining": "( Min( ARS ,( AMS + ACS ) ) / ( ( ( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + AMS ) ) * Const ) ) - DDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( ( ( DS - CS ) - MUR ),CS ) / ( ( ( ( MLU - ( ( MUC / Min( CS ,MUM ) ) + RCSe ) ) * Min( RCSe ,CS ) ) - MLU ) - MUC ) )", "obj1": 0.9714285714285714, "obj2": 0.012238172698020206}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_Mem_Server ) ),BR ) * ( ( Max( FirstVNF_RAM_Server,BR ) / AMS ) + AMS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( ( MUR / DS ) + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),( MLU + CS ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9122448979591836, "obj2": 0.04039739141460315}, {"determining": "Min( Max( Max( ( FirstVNF_CPU - Min( FirstVNF_CPU_Server ,PN ) ),MRS ),( ( FirstVNF_Mem + ( Max( ARS,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( Min( Const ,Min( ARS ,FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) - ( BR * FirstVNF_RAM_Server ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * DDR ) ) * Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( MLU + MUM ) ) - Min( ( RMSe * DS ) ,( MUC - Min( ( MLU + RMSe ) ,Min( RRSe ,Min( ( MUC + RRSe ) ,MUC ) ) ) ) ) ) - ( DS - ( ( ( ( MUM - ( ( RRSe + CS ) - Max( MUR,RCSe ) ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.9326530612244898, "obj2": 0.0292162922195646}, {"determining": "Min( Max( Min( ( ACS + FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( MDR - FirstVNF_Mem_Server ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * DDR ) ) ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * ( MUC / MUM ) ) ) ) - MLU ) ,( MLU + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR - Max( MUM,RCSe ) ) ) * ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( RRSe - MUR ) ) ) )", "obj1": 0.9244897959183673, "obj2": 0.03338002760466691}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ,Max( RRS,( ( FirstVNF_Mem + ( Max( BR,( FirstVNF_CPU * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * ( MDR * ARS ) ) ) ) - ( BR * RRS ) ) ) )", "choosing": "( ( Min( ( RMSe + RMSe ) ,( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - MUR ) ) ) - ( Max( ( Max( MLU,Min( MUC ,MUC ) ) + CS ),( ( RCSe / ( ( MLU * RMSe ) * CS ) ) + Min( DS ,MUC ) ) ) + ( MLU - ( RCSe * RMSe ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.0419329768748851}, {"determining": "( Min( FirstVNF_CPU ,RRS ) + ( FirstVNF_CPU + Const ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS / ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( ( ( CS + RCSe ) + ( Min( DS ,MLU ) / MLU ) ) - ( RCSe / MUM ) ) ,( RMSe - MUR ) ),CS ) )", "obj1": 0.1, "obj2": 0.8802435212133923}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,( ACS / Const ) ) * ( ( BR * FirstVNF_Mem_Server ) / RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_CPU_Server ) - Min( PN ,FirstVNF_CPU ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( ( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03486417169314258}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "Min( Max( Min( ( ACS - ACS ) ,( ACS - FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ( Max( BR,( ( DDR / FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( CS + ( Max( RCSe,( RMSe * MUR ) ) / ( CS - RRSe ) ) ),Min( Min( MUR ,MUR ) ,( Max( MUM,RRSe ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9673469387755103, "obj2": 0.015547148041899184}, {"determining": "Min( Max( CRS,Const ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / DS ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.9020408163265307, "obj2": 0.04520116720165456}, {"determining": "Min( ( AMS - Max( ARS,( ( FirstVNF_CPU * ( FirstVNF_RAM * ACS ) ) * ( ( PN - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,DDR ) ) ) + Const ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( CS - Min( ( MLU + CS ) ,( RMSe - RCSe ) ) ) ,DS ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.936734693877551, "obj2": 0.02752135264321491}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / MDR ) ) + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,Min( FirstVNF_CPU ,Min( BR ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ( Max( Max( ARS,DDR ),Const ) / FirstVNF_Mem ) - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Min( MUM ,MUR ) ) / ( CS + MUM ) ) ,( ( RRSe / ( ( MUM - DS ) / ( CS * RRSe ) ) ) - RCSe ) ) / RCSe ) )", "obj1": 0.9612244897959183, "obj2": 0.016377062804846135}, {"determining": "Min( ( ( MDR - FirstVNF_RAM_Server ) + ( ( ARS - AMS ) + Const ) ) ,Max( MRS,Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * RRSe ) - ( MUC / ( CS * MLU ) ) )", "obj1": 0.9040816326530612, "obj2": 0.043893244040151304}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_Mem_Server ) ),MDR ) * ( AMS + AMS ) ) ) - ( BR * ( FirstVNF_RAM - MDR ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( RRSe,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / Max( DS,RRSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9163265306122449, "obj2": 0.037870547323189195}, {"determining": "( ( ( ( Max( DDR,BR ) * ( Const / BR ) ) + Const ) - ( ACS * FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM / Min( Max( ACS,DDR ) ,FirstVNF_Mem ) ) * CRS ) )", "choosing": "( ( ( MUM / MUR ) * RMSe ) / ( ( ( Min( RRSe ,( CS * RMSe ) ) * ( ( MUR - Min( Min( RMSe ,MUC ) ,Max( MUC,MLU ) ) ) + ( RRSe / RMSe ) ) ) + ( MUM + MUC ) ) + RMSe ) )", "obj1": 0.9877551020408163, "obj2": 0.0045216208066881335}, {"determining": "Min( Max( CRS,Max( ( ( Max( CRS,MRS ) * FirstVNF_CPU_Server ) * ACS ),( AMS * ( FirstVNF_RAM * ARS ) ) ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( MUC / DS ) + DS ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.936734693877551, "obj2": 0.02752135264321491}], "25": [{"determining": "( ( PN - ( ( RRS + ( ( FirstVNF_CPU_Server / ( AMS + CRS ) ) - RRS ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / ( Max( ARS,BR ) - ( DDR - FirstVNF_CPU_Server ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( ( CS * MUR ) - ( DS - ( ( ( ( DS - ( ( DS * RMSe ) / RCSe ) ) - ( ( MLU + DS ) * RMSe ) ) - MUR ) + ( ( Min( MUR ,DS ) + RRSe ) - ( Min( RRSe ,RMSe ) * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_Mem ) * ( ( ( ( RRS - ( Const * ARS ) ) / BR ) / FirstVNF_CPU_Server ) + Min( Min( ( Const - ( ( BR - FirstVNF_RAM ) + AMS ) ) ,( DDR * FirstVNF_Mem_Server ) ) ,Max( ACS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * MUC ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( ( DS - MUM ) - ( RRSe / ( MUM * MUR ) ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ( CRS + ( MDR - ARS ) ) + Max( Const,FirstVNF_Mem ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( CS / Max( Min( MUR ,( ( MUR / RMSe ) - ( MUM - ( CS + MUC ) ) ) ),( CS * DS ) ) ) + Min( MUC ,( CS - Min( ( RMSe * ( MLU + CS ) ) ,( MUR * RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( Max( CS,( CS / RCSe ) ) ,MUM ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.07959183673469387, "obj2": 0.901624967856927}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.26326530612244897, "obj2": 0.635118734034016}, {"determining": "( ( PN - ( ( ( AMS - ARS ) + Min( ( Min( ( FirstVNF_RAM - ARS ) ,FirstVNF_RAM ) / ( ARS - FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem,DDR ) - MDR ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / ( ( BR * AMS ) - Max( ARS,Max( ARS,BR ) ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "Min( ( ( ( ( RCSe / RCSe ) - CS ) + ( MLU * CS ) ) - MUM ) ,( RMSe + ( ( ( Max( ( ( RCSe / MUR ) + RRSe ),( ( RMSe * MUR ) * MUR ) ) / ( ( RRSe / ( MUM / RCSe ) ) / RCSe ) ) + Min( MUC ,( CS - Min( DS ,( RRSe / RCSe ) ) ) ) ) + ( RMSe - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7959183673469388, "obj2": 0.10177147378877685}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( Max( FirstVNF_RAM_Server,BR ) / AMS ) / ( FirstVNF_RAM + DDR ) )", "choosing": "( ( Max( MUM,MUC ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( RRSe / ( MUM * MUR ) ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4061224489795918, "obj2": 0.5011289642345607}, {"determining": "( Max( MRS,( ( FirstVNF_CPU_Server + ( PN / FirstVNF_CPU ) ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) * ( Min( ( Const - RRS ) ,CRS ) * Const ) ) * Min( CRS ,CRS ) ) ) ) / ( PN - Min( ( RRS + AMS ) ,( Max( CRS,( FirstVNF_CPU_Server - MRS ) ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "Min( ( MUR - ( DS / CS ) ) ,( RCSe + ( ( MUM - ( DS / ( CS / ( Max( RRSe,MUR ) * DS ) ) ) ) + Max( ( MUR * DS ),( ( MUM - MUR ) + RMSe ) ) ) ) )", "obj1": 0.5836734693877551, "obj2": 0.30504492281383727}, {"determining": "( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( DDR + BR ) * ( BR / Const ) ) / ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Max( ( DS * ( Min( MUC ,( ( DS + RCSe ) / MUR ) ) + MUC ) ),( MUC - RRSe ) ) ) - ( MUC - ( DS * ( RMSe + Min( RRSe ,( Min( ( RCSe / RRSe ) ,MLU ) * MLU ) ) ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.5333534044983416}, {"determining": "( ( Const / FirstVNF_Mem ) * ( ( ( BR / ( RRS - ( Const * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_CPU_Server ) + ( Min( ( DDR - ACS ) ,( Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) * FirstVNF_Mem_Server ) ) * ( ACS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS / Max( ( ( DS - ( ( Min( DS ,DS ) - MUR ) + RCSe ) ) + ( MUM - RMSe ) ),( MUC / Max( ( RRSe * RMSe ),DS ) ) ) ) * ( ( ( RMSe + RMSe ) / Min( Max( DS,( Max( MLU,( RCSe + MUM ) ) * ( Min( MLU ,DS ) + DS ) ) ) ,( RMSe / MLU ) ) ) / ( RRSe + CS ) ) )", "obj1": 0.7183673469387755, "obj2": 0.16132175323841497}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.40816326530612246, "obj2": 0.43918721784092785}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,( ( Min( ( MUR + MUR ) ,( MLU + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - Min( ( CS - Min( ( MLU + CS ) ,( RMSe - RCSe ) ) ) ,DS ) ) ) ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.37142857142857144, "obj2": 0.5082053126703845}, {"determining": "( ( AMS - Max( ( Max( Min( MDR ,FirstVNF_CPU ),DDR ) * ( PN / FirstVNF_Mem ) ),Const ) ) / ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( ( MLU + ( ( RCSe * DS ) * RCSe ) ) / MUC ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - RRSe ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( RMSe / MUM ) * MUM ) ) - MUR ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.679292893601322}, {"determining": "( ( PN - ( ( ARS / PN ) * ( Max( CRS,FirstVNF_CPU ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) ,( RMSe + ( Max( ( DS - MUM ),MUR ) + ( MUM * ( MUR / ( MLU + Min( MUR ,RMSe ) ) ) ) ) ) )", "obj1": 0.610204081632653, "obj2": 0.28198543733968595}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( AMS - ( ( RRS - FirstVNF_CPU ) * ARS ) ) / Min( FirstVNF_RAM ,Min( ARS ,( ACS * ( DDR * Min( ( ARS - ( DDR - FirstVNF_CPU_Server ) ) ,CRS ) ) ) ) ) )", "choosing": "( MUR * ( Min( ( ( MUM - ( ( ( RRSe / MUR ) * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) ,MUR ) + ( RRSe - MUR ) ) )", "obj1": 0.5, "obj2": 0.3581348118199062}, {"determining": "( ( AMS + Max( ( FirstVNF_CPU / RRS ),ARS ) ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - AMS ) ) * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( CS ,Min( ( MLU + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( Min( DS ,RMSe ) - ( DS - MLU ) ) ) * ( MLU + ( ( RMSe * DS ) + MUC ) ) ),MUC ) ) - ( ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) + ( Min( ( ( Max( CS,MUR ) - MUM ) + MUR ) ,CS ) - RRSe ) ) ) )", "obj1": 0.6163265306122448, "obj2": 0.26803392207986054}, {"determining": "( ( PN - ( MDR + FirstVNF_RAM ) ) * ( Const / MRS ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RCSe ) - CS ) + ( MLU * CS ) ) ) ,( RMSe + ( ( ( CS / DS ) + Min( ( CS - Min( DS ,( RRSe + RCSe ) ) ) ,MUC ) ) + ( RMSe - ( ( ( MUR + ( RMSe - MUC ) ) + ( MUM - DS ) ) / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.773469387755102, "obj2": 0.10982884718382041}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.7306122448979592, "obj2": 0.12965138027693368}, {"determining": "( ( RRS + FirstVNF_RAM_Server ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( MRS ,( BR * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( MUC ,Min( ( MLU + ( RRSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( ( ( MLU / MUC ) / MUM ) - ( ( RMSe * RCSe ) + ( RCSe * CS ) ) ) ),MUC ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM - ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ( AMS * PN ) + ( Const - Min( ( ACS + ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ,( ( Const + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) / RRS ) ) ) )", "choosing": "( ( ( MUM / MUM ) / ( RRSe + MUM ) ) / ( RRSe * Max( Max( Max( ( RMSe + ( ( RRSe * MUM ) * MLU ) ),MUR ),( ( MUR * MUM ) - MUC ) ),( ( ( MUC - DS ) / RCSe ) / ( MUM - CS ) ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.740803066329768}, {"determining": "( ( ( Max( FirstVNF_RAM,( Min( FirstVNF_RAM_Server ,CRS ) * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) * AMS ) ) * Max( ( ( ACS * FirstVNF_Mem_Server ) - AMS ),( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * ( ( ( RRSe / CS ) - MUR ) / Min( CS ,RMSe ) ) ) ) ,CS ) )", "obj1": 0.6653061224489796, "obj2": 0.22859323009126412}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6857142857142857, "obj2": 0.21813912183101744}, {"determining": "( ( ( ACS * BR ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( MRS * FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( ( MUM - CS ) / ( RCSe - ( RMSe + ( RRSe + Max( RRSe,MUM ) ) ) ) ) / Min( ( RMSe + ( RRSe - MUC ) ) ,Max( DS,DS ) ) ),( ( RRSe * MUC ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ) )", "obj1": 0.7142857142857143, "obj2": 0.1948619238291775}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "( ( AMS * PN ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "( ( ( MUC * MUM ) / ( ( RMSe + MUR ) / ( RMSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RMSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7207915086526647}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server * ( ARS * ARS ) ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( DDR + ACS ) ) )", "choosing": "( ( ( RRSe - MUM ) + Min( RMSe ,Max( ( ( CS - MUC ) / ( MUC / Max( DS,MUC ) ) ),Max( ( RMSe * MUC ),MLU ) ) ) ) + ( ( Min( RCSe ,( ( ( RMSe * ( MLU - CS ) ) / Min( CS ,DS ) ) - MLU ) ) * Max( CS,MUR ) ) + RCSe ) )", "obj1": 0.1836734693877551, "obj2": 0.7726397780300505}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU - Max( ACS,FirstVNF_Mem_Server ) ) ) - RRS ) / Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM / MUM ) / ( MLU + Min( MUR ,DS ) ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( MUR - RRSe ) + ( ( ( MUM - Max( ( MUR + RCSe ),MUM ) ) - ( ( RMSe + CS ) * Max( CS,MUR ) ) ) * MUR ) ) ) )", "obj1": 0.46938775510204084, "obj2": 0.3690572516440237}, {"determining": "( ( AMS - Max( ARS,( ( ( ( MDR / ACS ) * ACS ) * FirstVNF_CPU ) * MDR ) ) ) / Min( FirstVNF_CPU ,( FirstVNF_CPU + Const ) ) )", "choosing": "( ( Min( ( MUM + MUR ) ,( MUR + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( Min( RRSe ,( RRSe * MLU ) ) * ( ( RMSe * RCSe ) / RCSe ) ) - ( ( CS + RMSe ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.45918367346938777, "obj2": 0.3863778089801303}, {"determining": "( ( Const / Min( ACS ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,ARS ) ) ) ) * ( PN - Max( ( CRS / FirstVNF_Mem ),AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( RCSe - Min( Min( Min( ( CS * MUC ) ,( MUR + MUC ) ) ,MUC ) ,CS ) ) ) ),( ( ( ( MUM * MUM ) * MUC ) * ( RCSe / MUR ) ) - CS ) )", "obj1": 0.7448979591836735, "obj2": 0.12269990469959279}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6408163265306123, "obj2": 0.24905469676390593}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( RRSe / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.42653061224489797, "obj2": 0.4226994059105814}, {"determining": "( Max( ( FirstVNF_CPU / Const ),AMS ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( ( Min( ( MUR + ( ( RMSe * RCSe ) + ( ( RCSe + RRSe ) * RRSe ) ) ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RMSe - ( ( MLU / RMSe ) - MUC ) ) ) ) - ( MUC - ( ( ( ( Max( ( RMSe * CS ),( MUC / MUC ) ) - ( DS / ( RMSe + RMSe ) ) ) - ( RRSe * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.43673469387755104, "obj2": 0.40267783867325646}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) * AMS ) + Min( CRS ,FirstVNF_CPU ) )", "choosing": "Max( ( Min( MUM ,DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( MUC * MUC ) ,MLU ) ) ,DS ) ,Max( ( Min( DS ,( ( RRSe / ( CS / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6428571428571429, "obj2": 0.24771978202489486}, {"determining": "( ( AMS * ACS ) / Max( ( ( ACS - ACS ) * ( PN - FirstVNF_RAM_Server ) ),BR ) )", "choosing": "( ( ( ( ( DS * CS ) / MUR ) / ( MUR / MUC ) ) + MUM ) - ( DS - ( CS - ( MUM - ( RRSe * CS ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7600334505949903}, {"determining": "( ( ( AMS - Max( ( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) ) * ( Const / BR ) )", "choosing": "( ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / MUR ) - ( ( ( ( ( Min( RRSe ,MLU ) - MUM ) * MUM ) / RMSe ) + DS ) / MUM ) )", "obj1": 0.336734693877551, "obj2": 0.5912134411120042}, {"determining": "( ( AMS - ( ( FirstVNF_CPU / RRS ) - MDR ) ) / Max( ( ACS - Const ),( Max( Max( ( FirstVNF_Mem - Min( ( MDR / ACS ) ,FirstVNF_Mem_Server ) ),Min( ( Const + FirstVNF_CPU ) ,( MRS * ( FirstVNF_Mem_Server + MRS ) ) ) ),FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR * ( MUR - ( Max( RCSe,Max( Min( DS ,( MUR + RRSe ) ),Min( RMSe ,MUM ) ) ) - ( MLU - MUR ) ) ) ) - ( ( Max( CS,Min( ( ( RCSe / RRSe ) + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( RMSe + ( ( RMSe * DS ) + RRSe ) ) ),( MLU - ( ( MUR + RRSe ) / DS ) ) ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM * ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5122448979591837, "obj2": 0.3473205021030432}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( MDR + ACS ) ) ,Min( ( Min( PN ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM * MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( Min( DS ,( MUR + Min( MUC ,RMSe ) ) ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + ( ( RCSe + RCSe ) + MUC ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.0511438476776511}, {"determining": "( Min( RRS ,MRS ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( MLU - ( ( ( CS / RMSe ) * RCSe ) * DS ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( Max( ( MLU / DS ),Max( MUC,MLU ) ) * Max( MLU,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5530612244897959, "obj2": 0.34073102844298647}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MUR + ( DS / CS ) ) ) / DS ) ) )", "obj1": 0.4163265306122449, "obj2": 0.43486115707662826}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8321540144904129}, {"determining": "( ( ( ( RRS + MDR ) * AMS ) - Max( Const,RRS ) ) * Max( Const,BR ) )", "choosing": "( Max( ( ( Min( MUM ,MUM ) / MUR ) * MUR ),RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.7857142857142857, "obj2": 0.10423884421050618}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU - PN ) ,BR ) ) / FirstVNF_Mem )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + RMSe ) ) - Min( ( MUR * DS ) ,( ( CS + ( ( MUC + MLU ) - ( RCSe - RRSe ) ) ) + RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( Min( DS ,( RRSe - DS ) ) * ( ( MUC + RMSe ) / ( RMSe - MUC ) ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.748302548957801}, {"determining": "( ( AMS - Max( ( Max( DDR,( ( PN * FirstVNF_CPU ) + DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( Max( CS,DS ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( ( MLU + DS ) * RMSe ) + RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.3452166496109561}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8879560768570286}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "( Min( Const ,BR ) + ( ( ( ACS * FirstVNF_RAM ) - Max( Const,( Const * FirstVNF_CPU ) ) ) / DDR ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC / ( DS - ( Min( ( DS / RCSe ) ,( DS - MUR ) ) - RMSe ) ) ) ) ) - Min( MLU ,( ( MUC / RMSe ) - Max( ( Max( CS,MUC ) - RCSe ),( MUM * ( RRSe * MLU ) ) ) ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8119757933690984}, {"determining": "( ( AMS - Max( Min( Min( ARS ,FirstVNF_Mem ) ,Min( BR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( RMSe + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - ( RMSe * Min( MLU ,MUM ) ) ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5904940164180497}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,MUR ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.34559390746848123}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,( RMSe * ( MLU + CS ) ) ) ) ) ),Max( Min( ( ( ( CS * CS ) * Min( MUM ,( MUR - MLU ) ) ) / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.08163265306122448, "obj2": 0.8933480969824823}, {"determining": "Min( Min( Min( Max( ( ARS - FirstVNF_RAM_Server ),( ( FirstVNF_CPU - Const ) + ACS ) ) ,( ACS / ( Min( MRS ,AMS ) / FirstVNF_CPU_Server ) ) ) ,BR ) ,( FirstVNF_CPU * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( CS / MLU ),( Max( ( Min( ( MUC / MLU ) ,RMSe ) + RMSe ),MUM ) - Max( ( MUC - MLU ),Max( MUC,DS ) ) ) ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + MUC ) + RRSe ) ,MLU ) ) ,DS ) ,Max( RRSe,( Min( MUM ,( ( RRSe / ( MUC + CS ) ) * MLU ) ) * MUC ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7544423640090209}, {"determining": "( ( FirstVNF_RAM_Server - Max( AMS,( ARS * ARS ) ) ) * Max( ( Min( MRS ,ARS ) * ARS ),ARS ) )", "choosing": "( ( Min( CS ,CS ) + Max( ( RMSe + ( MUM - DS ) ),MUM ) ) + Max( ( ( RRSe / Max( MLU,( MLU + CS ) ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7813411576934753}, {"determining": "Min( ( Min( FirstVNF_CPU ,( ACS - ACS ) ) * ( ( FirstVNF_Mem + ( ( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( DDR + MDR ) / ( FirstVNF_Mem_Server + MRS ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,( ( MLU * RMSe ) - MLU ) ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / RMSe ) ,( DS - MUR ) ) ) - Min( ( ( ( MUR * Min( ( CS * ( CS - RCSe ) ) ,Max( CS,DS ) ) ) - Min( MLU ,RRSe ) ) / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ) )", "obj1": 0.9448979591836735, "obj2": 0.023752196977063933}, {"determining": "( ( AMS - Max( ( RRS - FirstVNF_CPU ),ARS ) ) / Min( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( CS - MUC ) / MUR ) - ( ( ( ( DS + DS ) - ( Max( ( ( RCSe - MUR ) + DS ),RMSe ) / RCSe ) ) + DS ) / MUC ) )", "obj1": 0.25510204081632654, "obj2": 0.6989410278280859}, {"determining": "( ( Max( ( RRS - ( FirstVNF_RAM * DDR ) ),( ACS * MDR ) ) - AMS ) / Min( ACS ,Min( ARS ,( ACS * ( DDR - ( ACS * ACS ) ) ) ) ) )", "choosing": "( ( ( RCSe - MUC ) / MUR ) - ( ( CS - ( ( ( Max( DS,MUC ) / MLU ) + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.25510204081632654, "obj2": 0.6989410278280859}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * ( FirstVNF_RAM * ACS ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4326530612244898, "obj2": 0.40525309416291927}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( Min( MUM ,MUR ) - CS ) / Max( MUC,MUC ) ) ) ) ,CS ),( CS - ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.12500720043571356}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( ( Const / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ),BR ) * ( AMS + Min( ( FirstVNF_Mem * DDR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) + ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( ( ( CS * MUM ) - Max( Min( MLU ,Min( RRSe ,MLU ) ),RCSe ) ) ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.010413878791123751}, {"determining": "Min( Max( ( ( ( ACS * PN ) - ACS ) / ( MRS - ACS ) ),( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) * ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * ( ( PN * MDR ) * CRS ) ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( Min( ( RRSe * RMSe ) ,Max( ( RCSe + DS ),Max( ( MUM * RRSe ),( MUC - RMSe ) ) ) ) / ( CS + RRSe ) ) )", "obj1": 0.9530612244897959, "obj2": 0.020586508258801935}, {"determining": "( ( Min( ( FirstVNF_CPU - ( ( RRS + ( ACS + MRS ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) - FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + Max( PN,MDR ) ) ) * ( ( FirstVNF_CPU + RRS ) * FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) + ( ( CRS * FirstVNF_Mem_Server ) - AMS ) )", "choosing": "Max( ( RMSe * RMSe ),Min( Min( ( RMSe * Min( Max( ( Min( CS ,CS ) - RRSe ),MUC ) ,MLU ) ) ,( RRSe * CS ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / DS ) ) + MUM ) ) * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( FirstVNF_CPU_Server / BR ) / BR ) ) )", "choosing": "( Max( ( Min( Min( RRSe ,MUR ) ,( ( MUR / ( MUC + RRSe ) ) / Max( DS,( CS + RRSe ) ) ) ) - CS ),( MUM / DS ) ) + CS )", "obj1": 0.12653061224489795, "obj2": 0.8589673024473602}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ( ( ( FirstVNF_CPU * BR ) - PN ) * FirstVNF_CPU ) ) ) - Const ) / BR ) )", "choosing": "Max( Min( ( Max( RMSe,( MUR + DS ) ) / DS ) ,( RMSe - CS ) ),( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( Max( Max( RCSe,RMSe ),( RCSe - ( DS - RCSe ) ) ),MUM ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8646387774221315}, {"determining": "( ( AMS - Min( Min( PN ,AMS ) ,FirstVNF_CPU ) ) / ( Max( ( ACS * Min( Const ,BR ) ),ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,Min( RMSe ,MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( MUC - ( ( ( ( ( RMSe * RCSe ) - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3787061548462769}, {"determining": "( ACS / Max( BR,( CRS + ( Min( MDR ,DDR ) * Const ) ) ) )", "choosing": "( ( CS - MUC ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8021734073188833}, {"determining": "( ( FirstVNF_CPU - Max( ARS,( ( DDR * ( AMS / ( Min( CRS ,FirstVNF_RAM ) + PN ) ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - Max( ( RMSe + MLU ),RRSe ) ) * MUR ) + ( MUR - RRSe ) ) ) - ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / ( Max( MUM,RMSe ) / RCSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.3751066143799092}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - RRS ),( ( FirstVNF_CPU_Server * ACS ) * CRS ) ) ) / Min( Min( FirstVNF_RAM ,( DDR * FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + AMS ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - Min( RRSe ,RCSe ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ACS / Max( BR,( CRS + ( Max( CRS,PN ) * PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RCSe ) * RMSe ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS - MUR ) / RCSe ) ) - ( ( MLU + Max( RCSe,MUM ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.13877551020408163, "obj2": 0.84382541227652}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "( ( PN - ( ( RRS + ( ( AMS - Max( FirstVNF_RAM_Server,( ACS + AMS ) ) ) * Const ) ) * ( Min( ( Max( DDR,BR ) * ( Const / BR ) ) ,Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( Const / MRS ) )", "choosing": "( ( Max( Min( MLU ,Min( MUC ,RCSe ) ),DS ) * ( ( ( RMSe - DS ) / MUM ) * Max( RRSe,Max( ( DS / DS ),( MUC + RMSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0034616397171632765}, {"determining": "( ( Const - ( ( PN * Const ) + RRS ) ) * ( Max( BR,DDR ) / Min( ( ( Const - ( Const / AMS ) ) * ARS ) ,RRS ) ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( ( MUC + ( Max( DS,( MLU - Min( MLU ,( CS - MUC ) ) ) ) * Max( CS,MUM ) ) ) / ( DS - MLU ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( ( Max( MRS,RRS ) - BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( MRS / Const ) )", "choosing": "( MUR * ( ( Min( ( MUM - ( ( DS * MUR ) / RCSe ) ) ,( DS + RMSe ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9857142857142858, "obj2": 0.005628862220294025}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( Min( ( Min( FirstVNF_CPU ,PN ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( Const,DDR ) ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( MUC * ( RCSe / MUR ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.881725731384579}, {"determining": "( ( Max( PN,FirstVNF_RAM_Server ) / MDR ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( ( ( MUM - DS ) / ( MUM * RRSe ) ) / CS ) ) ),Max( Min( ( ( MUM * ( ( RCSe / MUC ) + DS ) ) / RMSe ) ,CS ),( CS - MUC ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8736250661894744}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "Max( ( ( Max( RCSe,( ( ( MUR - MUM ) / DS ) + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( DS / CS ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ),( CS + RCSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8329880263221716}, {"determining": "( Min( ARS ,( AMS + ACS ) ) / ( ( ( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + AMS ) ) * Const ) ) - DDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( ( ( DS - CS ) - MUR ),CS ) / ( ( ( ( MLU - ( ( MUC / Min( CS ,MUM ) ) + RCSe ) ) * Min( RCSe ,CS ) ) - MLU ) - MUC ) )", "obj1": 0.9714285714285714, "obj2": 0.012238172698020206}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * ( ( FirstVNF_Mem / MDR ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC - MUM ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7813411576934753}, {"determining": "Min( Max( Min( ( ACS - ACS ) ,( ACS - FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ( Max( BR,( ( DDR / FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( CS + ( Max( RCSe,( RMSe * MUR ) ) / ( CS - RRSe ) ) ),Min( Min( MUR ,MUR ) ,( Max( MUM,RRSe ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9673469387755103, "obj2": 0.015547148041899184}, {"determining": "( Min( ACS ,BR ) + ( ( ( FirstVNF_RAM * ACS ) - Min( ( ( FirstVNF_CPU_Server / ( FirstVNF_RAM * CRS ) ) / ACS ) ,BR ) ) / DDR ) )", "choosing": "( ( MUM - Min( ( MUR * DS ) ,( MUC / ( RCSe - ( Min( RMSe ,( RMSe / RCSe ) ) - RMSe ) ) ) ) ) - ( ( ( ( ( MUM - ( ( DS * MUM ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) - DS ) )", "obj1": 0.15918367346938775, "obj2": 0.8119757933690984}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + Min( FirstVNF_RAM ,Max( Max( ( DDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( ( RRS / Max( ACS,FirstVNF_Mem ) ) - ( DDR - BR ) ) ) ) ) * Max( ( FirstVNF_Mem / PN ),MRS ) )", "choosing": "Max( ( Min( DS ,CS ) + Min( RCSe ,( MLU - Min( ( MUC / ( MUM + ( RMSe * CS ) ) ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( Max( MLU,MUC ),MUC ) ) ) ) ,CS ),( CS - RCSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.861849297665582}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_Mem_Server ) ),MDR ) * ( AMS + AMS ) ) ) - ( BR * ( FirstVNF_RAM - MDR ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( RRSe,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / Max( DS,RRSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9163265306122449, "obj2": 0.037870547323189195}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,( ACS / Const ) ) * ( ( BR * FirstVNF_Mem_Server ) / RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_CPU_Server ) - Min( PN ,FirstVNF_CPU ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( ( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03486417169314258}, {"determining": "( ( Const + ( Max( CRS,MDR ) * ( MRS + ( RRS - ( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( Min( Max( MRS,Min( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),DDR ) ,( FirstVNF_CPU / Min( RRS ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) - ACS ) ,Max( ( ( Max( FirstVNF_CPU_Server,ACS ) - RRS ) / ARS ),AMS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( RMSe ,( ( MUR + RCSe ) - Min( Min( ( ( MLU / MUM ) / MUM ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Max( MUR,MUM ) ) / DS ) ,( RMSe + ( CS / Min( MLU ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.9591836734693877, "obj2": 0.017192892409302152}, {"determining": "Min( Max( ( ( Max( Min( AMS ,FirstVNF_RAM ),MRS ) * FirstVNF_CPU_Server ) * ACS ),( MDR + ( FirstVNF_RAM * ARS ) ) ) ,Min( ( ( DDR - FirstVNF_CPU_Server ) - Min( PN ,RRS ) ) ,Min( DDR ,DDR ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( ( DS * MUC ) / Min( MUC ,CS ) ) - MLU ) ) - Min( ( DS * MUR ) ,( MUR / DS ) ) ) - Min( ( RCSe / CS ) ,( Min( RCSe ,( ( Max( Min( RCSe ,CS ),MLU ) * DS ) + Min( CS ,DS ) ) ) + Min( MLU ,MUM ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.03129395782837683}, {"determining": "( ( Min( Min( ( ACS + MDR ) ,MRS ) ,ARS ) + ( ( BR * ( FirstVNF_Mem - Min( ( MDR + ( AMS / CRS ) ) ,Const ) ) ) - FirstVNF_CPU_Server ) ) * Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( CS - ( ( MUM - Max( MLU,RMSe ) ) / RCSe ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8433184526280625}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_Mem_Server ) ),BR ) * ( ( Max( FirstVNF_RAM_Server,BR ) / AMS ) + AMS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( ( MUR / DS ) + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),( MLU + CS ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9122448979591836, "obj2": 0.04039739141460315}, {"determining": "Min( Max( Max( ( FirstVNF_CPU - Min( FirstVNF_CPU_Server ,PN ) ),MRS ),( ( FirstVNF_Mem + ( Max( ARS,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( Min( Const ,Min( ARS ,FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) - ( BR * FirstVNF_RAM_Server ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * DDR ) ) * Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( MLU + MUM ) ) - Min( ( RMSe * DS ) ,( MUC - Min( ( MLU + RMSe ) ,Min( RRSe ,Min( ( MUC + RRSe ) ,MUC ) ) ) ) ) ) - ( DS - ( ( ( ( MUM - ( ( RRSe + CS ) - Max( MUR,RCSe ) ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.9326530612244898, "obj2": 0.0292162922195646}, {"determining": "Min( Max( Min( ( ACS + FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( MDR - FirstVNF_Mem_Server ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * DDR ) ) ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * ( MUC / MUM ) ) ) ) - MLU ) ,( MLU + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR - Max( MUM,RCSe ) ) ) * ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( RRSe - MUR ) ) ) )", "obj1": 0.9244897959183673, "obj2": 0.03338002760466691}, {"determining": "Min( Max( CRS,Const ) ,Min( ( FirstVNF_CPU_Server + Max( MDR,FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) * Min( Min( DS ,( MUR + RCSe ) ) ,( DS - MUR ) ) ) - ( Min( MUC ,Min( CS ,DS ) ) + ( Max( ( MUR * DS ),MUR ) + ( MUM - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.8938775510204081, "obj2": 0.049335223615270714}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ,Max( RRS,( ( FirstVNF_Mem + ( Max( BR,( FirstVNF_CPU * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * ( MDR * ARS ) ) ) ) - ( BR * RRS ) ) ) )", "choosing": "( ( Min( ( RMSe + RMSe ) ,( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - MUR ) ) ) - ( Max( ( Max( MLU,Min( MUC ,MUC ) ) + CS ),( ( RCSe / ( ( MLU * RMSe ) * CS ) ) + Min( DS ,MUC ) ) ) + ( MLU - ( RCSe * RMSe ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.0419329768748851}, {"determining": "( Min( FirstVNF_CPU ,RRS ) + ( FirstVNF_CPU + Const ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS / ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( ( ( CS + RCSe ) + ( Min( DS ,MLU ) / MLU ) ) - ( RCSe / MUM ) ) ,( RMSe - MUR ) ),CS ) )", "obj1": 0.1, "obj2": 0.8802435212133923}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "Min( Max( CRS,Max( ( ( Max( CRS,MRS ) * FirstVNF_CPU_Server ) * ACS ),( AMS * ( FirstVNF_RAM * ARS ) ) ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( MUC / DS ) + DS ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.936734693877551, "obj2": 0.02752135264321491}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / MDR ) ) + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,Min( FirstVNF_CPU ,Min( BR ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ( Max( Max( ARS,DDR ),Const ) / FirstVNF_Mem ) - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Min( MUM ,MUR ) ) / ( CS + MUM ) ) ,( ( RRSe / ( ( MUM - DS ) / ( CS * RRSe ) ) ) - RCSe ) ) / RCSe ) )", "obj1": 0.9612244897959183, "obj2": 0.016377062804846135}, {"determining": "Min( ( ( MDR - FirstVNF_RAM_Server ) + ( ( ARS - AMS ) + Const ) ) ,Max( MRS,Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * RRSe ) - ( MUC / ( CS * MLU ) ) )", "obj1": 0.9040816326530612, "obj2": 0.043893244040151304}, {"determining": "( ( ( AMS * CRS ) * Min( RRS ,Min( ( FirstVNF_RAM_Server * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,( BR * PN ) ) ) ) ,PN ) ) ) / Min( Max( ACS,( ACS + ( ( MDR - MDR ) + ( ( BR * BR ) + ( ( PN - PN ) / AMS ) ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MLU * MUM ) / ( ( RMSe / ( RMSe - MUC ) ) * MUR ) ) / ( RRSe - RRSe ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "( ( AMS - Max( FirstVNF_Mem,( ( FirstVNF_Mem * ARS ) * ( ( PN - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( FirstVNF_Mem * PN ) ) ) + Const ) ) ) ) / Min( FirstVNF_Mem ,MDR ) )", "choosing": "( Max( ( ( ( MUC / MUR ) / MUR ) / MUM ),Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUC ,( ( Max( ( MUC * Max( CS,RCSe ) ),( RMSe + DS ) ) + Max( ( MUC + DS ),MUR ) ) - MUR ) ) ,RMSe ) )", "obj1": 0.4326530612244898, "obj2": 0.40525309416291927}], "26": [{"determining": "( ( PN - ( MDR + FirstVNF_RAM ) ) * ( Const / MRS ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RCSe ) - CS ) + ( MLU * CS ) ) ) ,( RMSe + ( ( ( CS / DS ) + Min( ( CS - Min( DS ,( RRSe + RCSe ) ) ) ,MUC ) ) + ( RMSe - ( ( ( MUR + ( RMSe - MUC ) ) + ( MUM - DS ) ) / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ( RRS + ( ( FirstVNF_CPU_Server / ( AMS + CRS ) ) - RRS ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / ( Max( ARS,BR ) - ( DDR - FirstVNF_CPU_Server ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( ( CS * MUR ) - ( DS - ( ( ( ( DS - ( ( DS * RMSe ) / RCSe ) ) - ( ( MLU + DS ) * RMSe ) ) - MUR ) + ( ( Min( MUR ,DS ) + RRSe ) - ( Min( RRSe ,RMSe ) * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ( CRS + ( MDR - ARS ) ) + Max( Const,FirstVNF_Mem ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( CS / Max( Min( MUR ,( ( MUR / RMSe ) - ( MUM - ( CS + MUC ) ) ) ),( CS * DS ) ) ) + Min( MUC ,( CS - Min( ( RMSe * ( MLU + CS ) ) ,( MUR * RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( Max( CS,( CS / RCSe ) ) ,MUM ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.07959183673469387, "obj2": 0.901624967856927}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.26326530612244897, "obj2": 0.635118734034016}, {"determining": "( ( PN - ( ( ( AMS - ARS ) + Min( ( Min( ( FirstVNF_RAM - ARS ) ,FirstVNF_RAM ) / ( ARS - FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem,DDR ) - MDR ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / ( ( BR * AMS ) - Max( ARS,Max( ARS,BR ) ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "Min( ( ( ( ( RCSe / RCSe ) - CS ) + ( MLU * CS ) ) - MUM ) ,( RMSe + ( ( ( Max( ( ( RCSe / MUR ) + RRSe ),( ( RMSe * MUR ) * MUR ) ) / ( ( RRSe / ( MUM / RCSe ) ) / RCSe ) ) + Min( MUC ,( CS - Min( DS ,( RRSe / RCSe ) ) ) ) ) + ( RMSe - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7959183673469388, "obj2": 0.10177147378877685}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * Min( ( RRS * Const ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) / MUM ) / ( RRSe + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.47216786001709216}, {"determining": "( Max( MRS,( ( FirstVNF_CPU_Server + ( PN / FirstVNF_CPU ) ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) * ( Min( ( Const - RRS ) ,CRS ) * Const ) ) * Min( CRS ,CRS ) ) ) ) / ( PN - Min( ( RRS + AMS ) ,( Max( CRS,( FirstVNF_CPU_Server - MRS ) ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "Min( ( MUR - ( DS / CS ) ) ,( RCSe + ( ( MUM - ( DS / ( CS / ( Max( RRSe,MUR ) * DS ) ) ) ) + Max( ( MUR * DS ),( ( MUM - MUR ) + RMSe ) ) ) ) )", "obj1": 0.5836734693877551, "obj2": 0.30504492281383727}, {"determining": "( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( DDR + BR ) * ( BR / Const ) ) / ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Max( ( DS * ( Min( MUC ,( ( DS + RCSe ) / MUR ) ) + MUC ) ),( MUC - RRSe ) ) ) - ( MUC - ( DS * ( RMSe + Min( RRSe ,( Min( ( RCSe / RRSe ) ,MLU ) * MLU ) ) ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.5333534044983416}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,( ( Min( ( MUR + MUR ) ,( MLU + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - Min( ( CS - Min( ( MLU + CS ) ,( RMSe - RCSe ) ) ) ,DS ) ) ) ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.37142857142857144, "obj2": 0.5082053126703845}, {"determining": "( ( Const / FirstVNF_Mem ) * ( ( ( BR / ( RRS - ( Const * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_CPU_Server ) + ( Min( ( DDR - ACS ) ,( Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) * FirstVNF_Mem_Server ) ) * ( ACS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS / Max( ( ( DS - ( ( Min( DS ,DS ) - MUR ) + RCSe ) ) + ( MUM - RMSe ) ),( MUC / Max( ( RRSe * RMSe ),DS ) ) ) ) * ( ( ( RMSe + RMSe ) / Min( Max( DS,( Max( MLU,( RCSe + MUM ) ) * ( Min( MLU ,DS ) + DS ) ) ) ,( RMSe / MLU ) ) ) / ( RRSe + CS ) ) )", "obj1": 0.7183673469387755, "obj2": 0.16132175323841497}, {"determining": "( ( AMS - Max( ( Max( Min( MDR ,FirstVNF_CPU ),DDR ) * ( PN / FirstVNF_Mem ) ),Const ) ) / ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( ( MLU + ( ( RCSe * DS ) * RCSe ) ) / MUC ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - RRSe ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( RMSe / MUM ) * MUM ) ) - MUR ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.679292893601322}, {"determining": "( ( PN - ( ( ARS / PN ) * ( Max( CRS,FirstVNF_CPU ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) ,( RMSe + ( Max( ( DS - MUM ),MUR ) + ( MUM * ( MUR / ( MLU + Min( MUR ,RMSe ) ) ) ) ) ) )", "obj1": 0.610204081632653, "obj2": 0.28198543733968595}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( AMS - ( ( RRS - FirstVNF_CPU ) * ARS ) ) / Min( FirstVNF_RAM ,Min( ARS ,( ACS * ( DDR * Min( ( ARS - ( DDR - FirstVNF_CPU_Server ) ) ,CRS ) ) ) ) ) )", "choosing": "( MUR * ( Min( ( ( MUM - ( ( ( RRSe / MUR ) * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) ,MUR ) + ( RRSe - MUR ) ) )", "obj1": 0.5, "obj2": 0.3581348118199062}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( Min( FirstVNF_CPU_Server ,Max( DDR,DDR ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( MUM * CS ) + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MUR + ( CS / DS ) ) ) / DS ) ) )", "obj1": 0.40816326530612246, "obj2": 0.4387338862269851}, {"determining": "( ( PN - ( MDR + FirstVNF_RAM ) ) * ( Const / MRS ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RCSe ) - CS ) + ( MLU * CS ) ) ) ,( RMSe + ( ( ( CS / DS ) + Min( ( CS - Min( DS ,( RRSe + RCSe ) ) ) ,MUC ) ) + ( RMSe - ( ( ( MUR + ( RMSe - MUC ) ) + ( MUM - DS ) ) / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.773469387755102, "obj2": 0.10982884718382041}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.7306122448979592, "obj2": 0.12965138027693368}, {"determining": "( ( RRS + FirstVNF_RAM_Server ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( MRS ,( BR * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( MUC ,Min( ( MLU + ( RRSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( ( ( MLU / MUC ) / MUM ) - ( ( RMSe * RCSe ) + ( RCSe * CS ) ) ) ),MUC ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM - ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ( ( Max( FirstVNF_RAM,( Min( FirstVNF_RAM_Server ,CRS ) * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) * AMS ) ) * Max( ( ( ACS * FirstVNF_Mem_Server ) - AMS ),( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * ( ( ( RRSe / CS ) - MUR ) / Min( CS ,RMSe ) ) ) ) ,CS ) )", "obj1": 0.6653061224489796, "obj2": 0.22859323009126412}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6857142857142857, "obj2": 0.21813912183101744}, {"determining": "( ( ( ACS * BR ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( MRS * FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( ( MUM - CS ) / ( RCSe - ( RMSe + ( RRSe + Max( RRSe,MUM ) ) ) ) ) / Min( ( RMSe + ( RRSe - MUC ) ) ,Max( DS,DS ) ) ),( ( RRSe * MUC ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ) )", "obj1": 0.7142857142857143, "obj2": 0.1948619238291775}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server * ( ARS * ARS ) ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( DDR + ACS ) ) )", "choosing": "( ( ( RRSe - MUM ) + Min( RMSe ,Max( ( ( CS - MUC ) / ( MUC / Max( DS,MUC ) ) ),Max( ( RMSe * MUC ),MLU ) ) ) ) + ( ( Min( RCSe ,( ( ( RMSe * ( MLU - CS ) ) / Min( CS ,DS ) ) - MLU ) ) * Max( CS,MUR ) ) + RCSe ) )", "obj1": 0.1836734693877551, "obj2": 0.7726397780300505}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU - Max( ACS,FirstVNF_Mem_Server ) ) ) - RRS ) / Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM / MUM ) / ( MLU + Min( MUR ,DS ) ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( MUR - RRSe ) + ( ( ( MUM - Max( ( MUR + RCSe ),MUM ) ) - ( ( RMSe + CS ) * Max( CS,MUR ) ) ) * MUR ) ) ) )", "obj1": 0.46938775510204084, "obj2": 0.3690572516440237}, {"determining": "( ( AMS - Max( ARS,( ( ( ( MDR / ACS ) * ACS ) * FirstVNF_CPU ) * MDR ) ) ) / Min( FirstVNF_CPU ,( FirstVNF_CPU + Const ) ) )", "choosing": "( ( Min( ( MUM + MUR ) ,( MUR + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( Min( RRSe ,( RRSe * MLU ) ) * ( ( RMSe * RCSe ) / RCSe ) ) - ( ( CS + RMSe ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.45918367346938777, "obj2": 0.3863778089801303}, {"determining": "( ( Const / Min( ACS ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,ARS ) ) ) ) * ( PN - Max( ( CRS / FirstVNF_Mem ),AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( RCSe - Min( Min( Min( ( CS * MUC ) ,( MUR + MUC ) ) ,MUC ) ,CS ) ) ) ),( ( ( ( MUM * MUM ) * MUC ) * ( RCSe / MUR ) ) - CS ) )", "obj1": 0.7448979591836735, "obj2": 0.12269990469959279}, {"determining": "( Max( ( FirstVNF_CPU / Const ),AMS ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( ( Min( ( MUR + ( ( RMSe * RCSe ) + ( ( RCSe + RRSe ) * RRSe ) ) ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RMSe - ( ( MLU / RMSe ) - MUC ) ) ) ) - ( MUC - ( ( ( ( Max( ( RMSe * CS ),( MUC / MUC ) ) - ( DS / ( RMSe + RMSe ) ) ) - ( RRSe * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.43673469387755104, "obj2": 0.40267783867325646}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) * AMS ) + Min( CRS ,FirstVNF_CPU ) )", "choosing": "Max( ( Min( MUM ,DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( MUC * MUC ) ,MLU ) ) ,DS ) ,Max( ( Min( DS ,( ( RRSe / ( CS / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6428571428571429, "obj2": 0.24771978202489486}, {"determining": "( ( AMS * ACS ) / Max( ( ( ACS - ACS ) * ( PN - FirstVNF_RAM_Server ) ),BR ) )", "choosing": "( ( ( ( ( DS * CS ) / MUR ) / ( MUR / MUC ) ) + MUM ) - ( DS - ( CS - ( MUM - ( RRSe * CS ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7600334505949903}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,BR ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,( ( MUM - ( RRSe / ( MUM * MUR ) ) ) - ( ( MLU + CS ) * RMSe ) ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6244897959183674, "obj2": 0.26298068476214587}, {"determining": "( ( ( AMS - Max( ( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) ) * ( Const / BR ) )", "choosing": "( ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / MUR ) - ( ( ( ( ( Min( RRSe ,MLU ) - MUM ) * MUM ) / RMSe ) + DS ) / MUM ) )", "obj1": 0.336734693877551, "obj2": 0.5912134411120042}, {"determining": "( ( AMS - ( ( FirstVNF_CPU / RRS ) - MDR ) ) / Max( ( ACS - Const ),( Max( Max( ( FirstVNF_Mem - Min( ( MDR / ACS ) ,FirstVNF_Mem_Server ) ),Min( ( Const + FirstVNF_CPU ) ,( MRS * ( FirstVNF_Mem_Server + MRS ) ) ) ),FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR * ( MUR - ( Max( RCSe,Max( Min( DS ,( MUR + RRSe ) ),Min( RMSe ,MUM ) ) ) - ( MLU - MUR ) ) ) ) - ( ( Max( CS,Min( ( ( RCSe / RRSe ) + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( RMSe + ( ( RMSe * DS ) + RRSe ) ) ),( MLU - ( ( MUR + RRSe ) / DS ) ) ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM * ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5122448979591837, "obj2": 0.3473205021030432}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( MDR + ACS ) ) ,Min( ( Min( PN ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM * MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( Min( DS ,( MUR + Min( MUC ,RMSe ) ) ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + ( ( RCSe + RCSe ) + MUC ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.0511438476776511}, {"determining": "( ( ( Max( Max( FirstVNF_CPU,ACS ),FirstVNF_CPU ) / FirstVNF_CPU ) - ( AMS * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem,( RRS * ( ( RRS + ( ACS + MRS ) ) * ( ( Const - ( DDR - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( CS ,CS ) + Max( RRSe,MUM ) ) + Max( ( ( ( Min( Min( ( RCSe * MUM ) ,( MUR / MUR ) ) ,RMSe ) / ( MUC * MUC ) ) / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8110369612511952}, {"determining": "( Min( RRS ,MRS ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( MLU - ( ( ( CS / RMSe ) * RCSe ) * DS ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( Max( ( MLU / DS ),Max( MUC,MLU ) ) * Max( MLU,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5530612244897959, "obj2": 0.34073102844298647}, {"determining": "( ( Const - ( BR - FirstVNF_RAM_Server ) ) + Min( AMS ,PN ) )", "choosing": "( ( ( MUC * MUM ) / Max( ( RMSe + MUR ),( RMSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( RMSe * MUR ) / RMSe ) ) - ( ( MLU + CS ) * ( ( RRSe * MUM ) * DS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.23877551020408164, "obj2": 0.7334656019196193}, {"determining": "( ( AMS * PN ) + ( Const - Min( ( ACS + ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ,( ( Const + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) / RRS ) ) ) )", "choosing": "( ( ( MUM / MUM ) / ( RRSe + MUM ) ) / ( RRSe * Max( Max( Max( ( RMSe + ( ( RRSe * MUM ) * MLU ) ),MUR ),( ( MUR * MUM ) - MUC ) ),( ( ( MUC - DS ) / RCSe ) / ( MUM - CS ) ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.740803066329768}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MUR + ( DS / CS ) ) ) / DS ) ) )", "obj1": 0.4163265306122449, "obj2": 0.43486115707662826}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6408163265306123, "obj2": 0.24905469676390593}, {"determining": "( ( AMS + Max( ( FirstVNF_CPU / RRS ),ARS ) ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - AMS ) ) * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( CS ,Min( ( MLU + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( Min( DS ,RMSe ) - ( DS - MLU ) ) ) * ( MLU + ( ( RMSe * DS ) + MUC ) ) ),MUC ) ) - ( ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) + ( Min( ( ( Max( CS,MUR ) - MUM ) + MUR ) ,CS ) - RRSe ) ) ) )", "obj1": 0.6163265306122448, "obj2": 0.26803392207986054}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8321540144904129}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( ( AMS * PN ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "( ( ( MUC * MUM ) / ( ( RMSe + MUR ) / ( RMSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RMSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7207915086526647}, {"determining": "( ( ( ( RRS + MDR ) * AMS ) - Max( Const,RRS ) ) * Max( Const,BR ) )", "choosing": "( Max( ( ( Min( MUM ,MUM ) / MUR ) * MUR ),RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.7857142857142857, "obj2": 0.10423884421050618}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU - PN ) ,BR ) ) / FirstVNF_Mem )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + RMSe ) ) - Min( ( MUR * DS ) ,( ( CS + ( ( MUC + MLU ) - ( RCSe - RRSe ) ) ) + RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( Min( DS ,( RRSe - DS ) ) * ( ( MUC + RMSe ) / ( RMSe - MUC ) ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.748302548957801}, {"determining": "( ( AMS - Max( ( Max( DDR,( ( PN * FirstVNF_CPU ) + DDR ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( Max( CS,DS ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RCSe ) ) - ( ( ( MLU + DS ) * RMSe ) + RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.3452166496109561}, {"determining": "( FirstVNF_RAM_Server * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( ( ( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) + ( MUR - RRSe ) ),MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8580249015663243}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8879560768570286}, {"determining": "( ( AMS - Max( Min( Min( ARS ,FirstVNF_Mem ) ,Min( BR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( RMSe + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - ( RMSe * Min( MLU ,MUM ) ) ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5904940164180497}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,MUR ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.34559390746848123}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,( RMSe * ( MLU + CS ) ) ) ) ) ),Max( Min( ( ( ( CS * CS ) * Min( MUM ,( MUR - MLU ) ) ) / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.08163265306122448, "obj2": 0.8933480969824823}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( RRSe / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.42653061224489797, "obj2": 0.4226994059105814}, {"determining": "Min( Min( Min( Max( ( ARS - FirstVNF_RAM_Server ),( ( FirstVNF_CPU - Const ) + ACS ) ) ,( ACS / ( Min( MRS ,AMS ) / FirstVNF_CPU_Server ) ) ) ,BR ) ,( FirstVNF_CPU * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( CS / MLU ),( Max( ( Min( ( MUC / MLU ) ,RMSe ) + RMSe ),MUM ) - Max( ( MUC - MLU ),Max( MUC,DS ) ) ) ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + MUC ) + RRSe ) ,MLU ) ) ,DS ) ,Max( RRSe,( Min( MUM ,( ( RRSe / ( MUC + CS ) ) * MLU ) ) * MUC ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7544423640090209}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * ( ( FirstVNF_Mem / MDR ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC - MUM ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7813411576934753}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( RRSe / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.42857142857142855, "obj2": 0.42199554973519854}, {"determining": "Min( ( Min( FirstVNF_CPU ,( ACS - ACS ) ) * ( ( FirstVNF_Mem + ( ( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( DDR + MDR ) / ( FirstVNF_Mem_Server + MRS ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,( ( MLU * RMSe ) - MLU ) ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / RMSe ) ,( DS - MUR ) ) ) - Min( ( ( ( MUR * Min( ( CS * ( CS - RCSe ) ) ,Max( CS,DS ) ) ) - Min( MLU ,RRSe ) ) / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ) )", "obj1": 0.9448979591836735, "obj2": 0.023752196977063933}, {"determining": "( ( Max( ( RRS - ( FirstVNF_RAM * DDR ) ),( ACS * MDR ) ) - AMS ) / Min( ACS ,Min( ARS ,( ACS * ( DDR - ( ACS * ACS ) ) ) ) ) )", "choosing": "( ( ( RCSe - MUC ) / MUR ) - ( ( CS - ( ( ( Max( DS,MUC ) / MLU ) + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.25510204081632654, "obj2": 0.6989410278280859}, {"determining": "( ( AMS - Max( ( RRS - FirstVNF_CPU ),ARS ) ) / Min( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( CS - MUC ) / MUR ) - ( ( ( ( DS + DS ) - ( Max( ( ( RCSe - MUR ) + DS ),RMSe ) / RCSe ) ) + DS ) / MUC ) )", "obj1": 0.25510204081632654, "obj2": 0.6989410278280859}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( Min( MUM ,MUR ) - CS ) / Max( MUC,MUC ) ) ) ) ,CS ),( CS - ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.12500720043571356}, {"determining": "( ( AMS - Max( FirstVNF_Mem,( ( FirstVNF_Mem * ARS ) * ( ( PN - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( FirstVNF_Mem * PN ) ) ) + Const ) ) ) ) / Min( FirstVNF_Mem ,MDR ) )", "choosing": "( Max( ( ( ( MUC / MUR ) / MUR ) / MUM ),Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUC ,( ( Max( ( MUC * Max( CS,RCSe ) ),( RMSe + DS ) ) + Max( ( MUC + DS ),MUR ) ) - MUR ) ) ,RMSe ) )", "obj1": 0.4326530612244898, "obj2": 0.40525309416291927}, {"determining": "Min( Max( ( ( ( ACS * PN ) - ACS ) / ( MRS - ACS ) ),( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) * ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * ( ( PN * MDR ) * CRS ) ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( Min( ( RRSe * RMSe ) ,Max( ( RCSe + DS ),Max( ( MUM * RRSe ),( MUC - RMSe ) ) ) ) / ( CS + RRSe ) ) )", "obj1": 0.9530612244897959, "obj2": 0.020586508258801935}, {"determining": "( ( Min( ( FirstVNF_CPU - ( ( RRS + ( ACS + MRS ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) - FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + Max( PN,MDR ) ) ) * ( ( FirstVNF_CPU + RRS ) * FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) + ( ( CRS * FirstVNF_Mem_Server ) - AMS ) )", "choosing": "Max( ( RMSe * RMSe ),Min( Min( ( RMSe * Min( Max( ( Min( CS ,CS ) - RRSe ),MUC ) ,MLU ) ) ,( RRSe * CS ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / DS ) ) + MUM ) ) * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( PN - ( ( RRS + ( ( AMS - Max( FirstVNF_RAM_Server,( ACS + AMS ) ) ) * Const ) ) * ( Min( ( Max( DDR,BR ) * ( Const / BR ) ) ,Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( Const / MRS ) )", "choosing": "( ( Max( Min( MLU ,Min( MUC ,RCSe ) ),DS ) * ( ( ( RMSe - DS ) / MUM ) * Max( RRSe,Max( ( DS / DS ),( MUC + RMSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0034616397171632765}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ( ( ( FirstVNF_CPU * BR ) - PN ) * FirstVNF_CPU ) ) ) - Const ) / BR ) )", "choosing": "Max( Min( ( Max( RMSe,( MUR + DS ) ) / DS ) ,( RMSe - CS ) ),( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( Max( Max( RCSe,RMSe ),( RCSe - ( DS - RCSe ) ) ),MUM ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8646387774221315}, {"determining": "( ( AMS - Min( Min( PN ,AMS ) ,FirstVNF_CPU ) ) / ( Max( ( ACS * Min( Const ,BR ) ),ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,Min( RMSe ,MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( MUC - ( ( ( ( ( RMSe * RCSe ) - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3787061548462769}, {"determining": "( ACS / Max( BR,( CRS + ( Min( MDR ,DDR ) * Const ) ) ) )", "choosing": "( ( CS - MUC ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8021734073188833}, {"determining": "( ( FirstVNF_CPU - Max( ARS,( ( DDR * ( AMS / ( Min( CRS ,FirstVNF_RAM ) + PN ) ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - Max( ( RMSe + MLU ),RRSe ) ) * MUR ) + ( MUR - RRSe ) ) ) - ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / ( Max( MUM,RMSe ) / RCSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.3751066143799092}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - RRS ),( ( FirstVNF_CPU_Server * ACS ) * CRS ) ) ) / Min( Min( FirstVNF_RAM ,( DDR * FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + AMS ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - Min( RRSe ,RCSe ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ACS / Max( BR,( CRS + ( Max( CRS,PN ) * PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RCSe ) * RMSe ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS - MUR ) / RCSe ) ) - ( ( MLU + Max( RCSe,MUM ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.13877551020408163, "obj2": 0.84382541227652}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( ( Max( MRS,RRS ) - BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( MRS / Const ) )", "choosing": "( MUR * ( ( Min( ( MUM - ( ( DS * MUR ) / RCSe ) ) ,( DS + RMSe ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9857142857142858, "obj2": 0.005628862220294025}, {"determining": "( ( Const - ( ( PN * Const ) + RRS ) ) * ( Max( BR,DDR ) / Min( ( ( Const - ( Const / AMS ) ) * ARS ) ,RRS ) ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( ( MUC + ( Max( DS,( MLU - Min( MLU ,( CS - MUC ) ) ) ) * Max( CS,MUM ) ) ) / ( DS - MLU ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( Min( ( Min( FirstVNF_CPU ,PN ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( Const,DDR ) ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( MUC * ( RCSe / MUR ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.881725731384579}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "Max( ( ( Max( RCSe,( ( ( MUR - MUM ) / DS ) + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( DS / CS ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ),( CS + RCSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8329880263221716}, {"determining": "Min( ( FirstVNF_Mem * MDR ) ,( ( Min( PN ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * Min( DDR ,FirstVNF_CPU_Server ) ) - Max( DDR,DDR ) ) )", "choosing": "( ( ( ( ( ( ( MUM / ( CS + DS ) ) / ( ( MUC + RMSe ) + MUM ) ) / Min( MUR ,MLU ) ) - MLU ) / ( MUR * MUR ) ) - Min( Min( DS ,( MUR + RCSe ) ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + Min( ( RCSe + RCSe ) ,MUC ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.04664455471800032}, {"determining": "( Min( ARS ,( AMS + ACS ) ) / ( ( ( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + AMS ) ) * Const ) ) - DDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( ( ( DS - CS ) - MUR ),CS ) / ( ( ( ( MLU - ( ( MUC / Min( CS ,MUM ) ) + RCSe ) ) * Min( RCSe ,CS ) ) - MLU ) - MUC ) )", "obj1": 0.9714285714285714, "obj2": 0.012238172698020206}, {"determining": "Min( ( ( MDR - FirstVNF_RAM_Server ) + ( ( ARS - AMS ) + Const ) ) ,Max( MRS,Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * RRSe ) - ( MUC / ( CS * MLU ) ) )", "obj1": 0.9040816326530612, "obj2": 0.043893244040151304}, {"determining": "( ( FirstVNF_RAM_Server - Max( AMS,( ARS * ARS ) ) ) * Max( ( Min( MRS ,ARS ) * ARS ),ARS ) )", "choosing": "( ( Min( CS ,CS ) + Max( ( RMSe + ( MUM - DS ) ),MUM ) ) + Max( ( ( RRSe / Max( MLU,( MLU + CS ) ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7813411576934753}, {"determining": "Min( Max( CRS,Max( ( ( Max( CRS,MRS ) * FirstVNF_CPU_Server ) * ACS ),( AMS * ( FirstVNF_RAM * ARS ) ) ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( MUC / DS ) + DS ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.936734693877551, "obj2": 0.02752135264321491}, {"determining": "Min( Max( Min( ( ACS - ACS ) ,( ACS - FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ( Max( BR,( ( DDR / FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( CS + ( Max( RCSe,( RMSe * MUR ) ) / ( CS - RRSe ) ) ),Min( Min( MUR ,MUR ) ,( Max( MUM,RRSe ) * Max( MUM,MUM ) ) ) )", "obj1": 0.9673469387755103, "obj2": 0.015547148041899184}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_Mem_Server ) ),MDR ) * ( AMS + AMS ) ) ) - ( BR * ( FirstVNF_RAM - MDR ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( RRSe,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / Max( DS,RRSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9163265306122449, "obj2": 0.037870547323189195}, {"determining": "Min( ( FirstVNF_Mem + ( ARS / FirstVNF_Mem_Server ) ) ,Min( ( Min( PN ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) - Max( ( RRS + MDR ),( Max( ( Max( DDR,BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / ( MUM + CS ) ) - MLU ) ,( MUR * MUR ) ) - Min( Min( MUC ,( MUR + RCSe ) ) ,( DS - MUR ) ) ) - RCSe )", "obj1": 0.9795918367346939, "obj2": 0.008129833702884861}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,( ACS / Const ) ) * ( ( BR * FirstVNF_Mem_Server ) / RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_CPU_Server ) - Min( PN ,FirstVNF_CPU ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( ( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03486417169314258}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "( ( Const + ( Max( CRS,MDR ) * ( MRS + ( RRS - ( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( Min( Max( MRS,Min( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),DDR ) ,( FirstVNF_CPU / Min( RRS ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) - ACS ) ,Max( ( ( Max( FirstVNF_CPU_Server,ACS ) - RRS ) / ARS ),AMS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( RMSe ,( ( MUR + RCSe ) - Min( Min( ( ( MLU / MUM ) / MUM ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Max( MUR,MUM ) ) / DS ) ,( RMSe + ( CS / Min( MLU ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.9591836734693877, "obj2": 0.017192892409302152}, {"determining": "Min( Max( ( ( Max( Min( AMS ,FirstVNF_RAM ),MRS ) * FirstVNF_CPU_Server ) * ACS ),( MDR + ( FirstVNF_RAM * ARS ) ) ) ,Min( ( ( DDR - FirstVNF_CPU_Server ) - Min( PN ,RRS ) ) ,Min( DDR ,DDR ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( ( DS * MUC ) / Min( MUC ,CS ) ) - MLU ) ) - Min( ( DS * MUR ) ,( MUR / DS ) ) ) - Min( ( RCSe / CS ) ,( Min( RCSe ,( ( Max( Min( RCSe ,CS ),MLU ) * DS ) + Min( CS ,DS ) ) ) + Min( MLU ,MUM ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.03129395782837683}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( ( Const / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ),BR ) * ( AMS + Min( ( FirstVNF_Mem * DDR ) ,Min( ACS ,FirstVNF_Mem_Server ) ) ) ) ) + ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( RRSe + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( ( ( CS * MUM ) - Max( Min( MLU ,Min( RRSe ,MLU ) ),RCSe ) ) ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.010413878791123751}, {"determining": "( ( Min( Min( ( ACS + MDR ) ,MRS ) ,ARS ) + ( ( BR * ( FirstVNF_Mem - Min( ( MDR + ( AMS / CRS ) ) ,Const ) ) ) - FirstVNF_CPU_Server ) ) * Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( CS - ( ( MUM - Max( MLU,RMSe ) ) / RCSe ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8433184526280625}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_Mem_Server ) ),BR ) * ( ( Max( FirstVNF_RAM_Server,BR ) / AMS ) + AMS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( ( MUR / DS ) + MUC ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),( MLU + CS ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9122448979591836, "obj2": 0.04039739141460315}, {"determining": "Min( Max( Min( ( ACS + FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( MDR - FirstVNF_Mem_Server ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * DDR ) ) ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * ( MUC / MUM ) ) ) ) - MLU ) ,( MLU + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR - Max( MUM,RCSe ) ) ) * ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( RRSe - MUR ) ) ) )", "obj1": 0.9244897959183673, "obj2": 0.03338002760466691}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ,Max( RRS,( ( FirstVNF_Mem + ( Max( BR,( FirstVNF_CPU * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * ( MDR * ARS ) ) ) ) - ( BR * RRS ) ) ) )", "choosing": "( ( Min( ( RMSe + RMSe ) ,( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - MUR ) ) ) - ( Max( ( Max( MLU,Min( MUC ,MUC ) ) + CS ),( ( RCSe / ( ( MLU * RMSe ) * CS ) ) + Min( DS ,MUC ) ) ) + ( MLU - ( RCSe * RMSe ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.0419329768748851}, {"determining": "( Min( FirstVNF_CPU ,RRS ) + ( FirstVNF_CPU + Const ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS / ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( ( ( CS + RCSe ) + ( Min( DS ,MLU ) / MLU ) ) - ( RCSe / MUM ) ) ,( RMSe - MUR ) ),CS ) )", "obj1": 0.1, "obj2": 0.8802435212133923}, {"determining": "( ( Max( PN,FirstVNF_RAM_Server ) / MDR ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( ( ( MUM - DS ) / ( MUM * RRSe ) ) / CS ) ) ),Max( Min( ( ( MUM * ( ( RCSe / MUC ) + DS ) ) / RMSe ) ,CS ),( CS - MUC ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8736250661894744}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( RRS,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,( MUM * ( ( DS / MUC ) - DS ) ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( Max( Max( FirstVNF_RAM_Server,( Max( DDR,BR ) * ( Const / BR ) ) ),Const ) / MDR ) ) + Const ) * Min( Max( Min( Max( MRS,Min( Max( FirstVNF_RAM_Server,DDR ) ,Min( FirstVNF_CPU ,Min( BR ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( FirstVNF_Mem + RRS ) ,( ( Max( Max( ARS,DDR ),Const ) / FirstVNF_Mem ) - ACS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Min( MUM ,MUR ) ) / ( CS + MUM ) ) ,( ( RRSe / ( ( MUM - DS ) / ( CS * RRSe ) ) ) - RCSe ) ) / RCSe ) )", "obj1": 0.9612244897959183, "obj2": 0.016377062804846135}, {"determining": "( ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) / ( Max( ( ACS * Min( Const ,BR ) ),ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,Min( RMSe ,MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( MUC - ( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MUR + ( DS / CS ) ) ) / DS ) ) ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8757597764803214}], "27": [{"determining": "( ( PN - ( ( Max( CRS,FirstVNF_CPU_Server ) / ( Max( ARS,BR ) - ( DDR - FirstVNF_CPU_Server ) ) ) * ( RRS + ( ( FirstVNF_CPU_Server / ( AMS + CRS ) ) - RRS ) ) ) ) / ( AMS + MRS ) )", "choosing": "( Max( DS,MUR ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - ( MUR + MUR ) ) + ( MUR - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( MDR + FirstVNF_RAM ) ) * ( Const / MRS ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RCSe ) - CS ) + ( MLU * CS ) ) ) ,( RMSe + ( ( ( CS / DS ) + Min( ( CS - Min( DS ,( RRSe + RCSe ) ) ) ,MUC ) ) + ( RMSe - ( ( ( MUR + ( RMSe - MUC ) ) + ( MUM - DS ) ) / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ( CRS + ( MDR - ARS ) ) + Max( Const,FirstVNF_Mem ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( CS / Max( Min( MUR ,( ( MUR / RMSe ) - ( MUM - ( CS + MUC ) ) ) ),( CS * DS ) ) ) + Min( MUC ,( CS - Min( ( RMSe * ( MLU + CS ) ) ,( MUR * RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( Max( CS,( CS / RCSe ) ) ,MUM ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.07959183673469387, "obj2": 0.901624967856927}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.26326530612244897, "obj2": 0.635118734034016}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( PN - ( ( ( AMS - ARS ) + Min( ( Min( ( FirstVNF_RAM - ARS ) ,FirstVNF_RAM ) / ( ARS - FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem,DDR ) - MDR ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / ( ( BR * AMS ) - Max( ARS,Max( ARS,BR ) ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "Min( ( ( ( ( RCSe / RCSe ) - CS ) + ( MLU * CS ) ) - MUM ) ,( RMSe + ( ( ( Max( ( ( RCSe / MUR ) + RRSe ),( ( RMSe * MUR ) * MUR ) ) / ( ( RRSe / ( MUM / RCSe ) ) / RCSe ) ) + Min( MUC ,( CS - Min( DS ,( RRSe / RCSe ) ) ) ) ) + ( RMSe - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7959183673469388, "obj2": 0.10177147378877685}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * Min( ( RRS * Const ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) / MUM ) / ( RRSe + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.47216786001709216}, {"determining": "( Max( MRS,( ( FirstVNF_CPU_Server + ( PN / FirstVNF_CPU ) ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) * ( Min( ( Const - RRS ) ,CRS ) * Const ) ) * Min( CRS ,CRS ) ) ) ) / ( PN - Min( ( RRS + AMS ) ,( Max( CRS,( FirstVNF_CPU_Server - MRS ) ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "Min( ( MUR - ( DS / CS ) ) ,( RCSe + ( ( MUM - ( DS / ( CS / ( Max( RRSe,MUR ) * DS ) ) ) ) + Max( ( MUR * DS ),( ( MUM - MUR ) + RMSe ) ) ) ) )", "obj1": 0.5836734693877551, "obj2": 0.30504492281383727}, {"determining": "( ( PN - Max( ( DDR + MRS ),( CRS + ( FirstVNF_CPU_Server * Min( PN ,( ( RRS / BR ) + FirstVNF_RAM_Server ) ) ) ) ) ) / ( ACS / Const ) )", "choosing": "Min( Min( Max( ( RCSe / CS ),( MUM / CS ) ) ,( ( RCSe - ( ( ( CS + MUM ) - MUR ) - ( MUR * RCSe ) ) ) / MLU ) ) ,( ( RCSe * CS ) - ( RCSe * RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.33347459723215317}, {"determining": "( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( DDR + BR ) * ( BR / Const ) ) / ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Max( ( DS * ( Min( MUC ,( ( DS + RCSe ) / MUR ) ) + MUC ) ),( MUC - RRSe ) ) ) - ( MUC - ( DS * ( RMSe + Min( RRSe ,( Min( ( RCSe / RRSe ) ,MLU ) * MLU ) ) ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.5333534044983416}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,( ( Min( ( MUR + MUR ) ,( MLU + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - Min( ( CS - Min( ( MLU + CS ) ,( RMSe - RCSe ) ) ) ,DS ) ) ) ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.37142857142857144, "obj2": 0.5082053126703845}, {"determining": "( ( AMS - ( ACS * FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( MRS,BR ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( Min( CRS ,FirstVNF_RAM ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + Min( RCSe ,RMSe ) ) - ( DS - ( ( ( ( MUM - Max( ( MUR + RCSe ),MUM ) ) - ( ( RMSe + CS ) + Max( CS,MUR ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.6408163265306123, "obj2": 0.24375180789906647}, {"determining": "( ( AMS - Max( ( Max( Min( MDR ,FirstVNF_CPU ),DDR ) * ( PN / FirstVNF_Mem ) ),Const ) ) / ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( ( MLU + ( ( RCSe * DS ) * RCSe ) ) / MUC ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - RRSe ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( RMSe / MUM ) * MUM ) ) - MUR ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.679292893601322}, {"determining": "( ( PN - ( ( ARS / PN ) * ( Max( CRS,FirstVNF_CPU ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) ,( RMSe + ( Max( ( DS - MUM ),MUR ) + ( MUM * ( MUR / ( MLU + Min( MUR ,RMSe ) ) ) ) ) ) )", "obj1": 0.610204081632653, "obj2": 0.28198543733968595}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - ( ( DDR + FirstVNF_CPU ) - ( BR - RRS ) ) ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( ( DS - MUC ) / MUR ) - ( ( CS - ( Min( MUR ,( RRSe / ( ( DS - MUC ) / ( MUM + DS ) ) ) ) - RCSe ) ) - MUM ) )", "obj1": 0.5204081632653061, "obj2": 0.3383725974219043}, {"determining": "( ( AMS - ( ( RRS - FirstVNF_CPU ) * ARS ) ) / Min( FirstVNF_RAM ,Min( ARS ,( ACS * ( DDR * Min( ( ARS - ( DDR - FirstVNF_CPU_Server ) ) ,CRS ) ) ) ) ) )", "choosing": "( MUR * ( Min( ( ( MUM - ( ( ( RRSe / MUR ) * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) ,MUR ) + ( RRSe - MUR ) ) )", "obj1": 0.5, "obj2": 0.3581348118199062}, {"determining": "( ( RRS + FirstVNF_RAM_Server ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( MRS ,( BR * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( MUC ,Min( ( MLU + ( RRSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( ( ( MLU / MUC ) / MUM ) - ( ( RMSe * RCSe ) + ( RCSe * CS ) ) ) ),MUC ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM - ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ( ( Max( FirstVNF_RAM,( Min( FirstVNF_RAM_Server ,CRS ) * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) * AMS ) ) * Max( ( ( ACS * FirstVNF_Mem_Server ) - AMS ),( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * ( ( ( RRSe / CS ) - MUR ) / Min( CS ,RMSe ) ) ) ) ,CS ) )", "obj1": 0.6653061224489796, "obj2": 0.22859323009126412}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6857142857142857, "obj2": 0.21813912183101744}, {"determining": "( ( ( ACS * BR ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( MRS * FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( ( MUM - CS ) / ( RCSe - ( RMSe + ( RRSe + Max( RRSe,MUM ) ) ) ) ) / Min( ( RMSe + ( RRSe - MUC ) ) ,Max( DS,DS ) ) ),( ( RRSe * MUC ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ) )", "obj1": 0.7142857142857143, "obj2": 0.1948619238291775}, {"determining": "( ( Const / FirstVNF_Mem ) * ( ( ( BR / ( RRS - ( Const * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_CPU_Server ) + ( Min( ( DDR - ACS ) ,( Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) * FirstVNF_Mem_Server ) ) * ( ACS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS / Max( ( ( DS - ( ( Min( DS ,DS ) - MUR ) + RCSe ) ) + ( MUM - RMSe ) ),( MUC / Max( ( RRSe * RMSe ),DS ) ) ) ) * ( ( ( RMSe + RMSe ) / Min( Max( DS,( Max( MLU,( RCSe + MUM ) ) * ( Min( MLU ,DS ) + DS ) ) ) ,( RMSe / MLU ) ) ) / ( RRSe + CS ) ) )", "obj1": 0.7183673469387755, "obj2": 0.16132175323841497}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server * ( ARS * ARS ) ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( DDR + ACS ) ) )", "choosing": "( ( ( RRSe - MUM ) + Min( RMSe ,Max( ( ( CS - MUC ) / ( MUC / Max( DS,MUC ) ) ),Max( ( RMSe * MUC ),MLU ) ) ) ) + ( ( Min( RCSe ,( ( ( RMSe * ( MLU - CS ) ) / Min( CS ,DS ) ) - MLU ) ) * Max( CS,MUR ) ) + RCSe ) )", "obj1": 0.1836734693877551, "obj2": 0.7726397780300505}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU - Max( ACS,FirstVNF_Mem_Server ) ) ) - RRS ) / Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM / MUM ) / ( MLU + Min( MUR ,DS ) ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( MUR - RRSe ) + ( ( ( MUM - Max( ( MUR + RCSe ),MUM ) ) - ( ( RMSe + CS ) * Max( CS,MUR ) ) ) * MUR ) ) ) )", "obj1": 0.46938775510204084, "obj2": 0.3690572516440237}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,BR ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,( ( MUM - ( RRSe / ( MUM * MUR ) ) ) - ( ( MLU + CS ) * RMSe ) ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6244897959183674, "obj2": 0.26298068476214587}, {"determining": "( ( AMS - Max( ARS,( ( ( ( MDR / ACS ) * ACS ) * FirstVNF_CPU ) * MDR ) ) ) / Min( FirstVNF_CPU ,( FirstVNF_CPU + Const ) ) )", "choosing": "( ( Min( ( MUM + MUR ) ,( MUR + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( Min( RRSe ,( RRSe * MLU ) ) * ( ( RMSe * RCSe ) / RCSe ) ) - ( ( CS + RMSe ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.45918367346938777, "obj2": 0.3863778089801303}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( MDR + ACS ) ) ,Min( ( Min( PN ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM * MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( Min( DS ,( MUR + Min( MUC ,RMSe ) ) ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + ( ( RCSe + RCSe ) + MUC ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.0511438476776511}, {"determining": "( Max( ( FirstVNF_CPU / Const ),AMS ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( ( Min( ( MUR + ( ( RMSe * RCSe ) + ( ( RCSe + RRSe ) * RRSe ) ) ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RMSe - ( ( MLU / RMSe ) - MUC ) ) ) ) - ( MUC - ( ( ( ( Max( ( RMSe * CS ),( MUC / MUC ) ) - ( DS / ( RMSe + RMSe ) ) ) - ( RRSe * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.43673469387755104, "obj2": 0.40267783867325646}, {"determining": "( ( AMS * ACS ) / Max( ( ( ACS - ACS ) * ( PN - FirstVNF_RAM_Server ) ),BR ) )", "choosing": "( ( ( ( ( DS * CS ) / MUR ) / ( MUR / MUC ) ) + MUM ) - ( DS - ( CS - ( MUM - ( RRSe * CS ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7600334505949903}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.7306122448979592, "obj2": 0.12965138027693368}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( DDR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MUR + MUM ) ) / DS ) ) )", "obj1": 0.7224489795918367, "obj2": 0.15091962478353013}, {"determining": "( ( ( AMS - Max( ( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) ) * ( Const / BR ) )", "choosing": "( ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / MUR ) - ( ( ( ( ( Min( RRSe ,MLU ) - MUM ) * MUM ) / RMSe ) + DS ) / MUM ) )", "obj1": 0.336734693877551, "obj2": 0.5912134411120042}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( MUR / ( DS - MLU ) ) )", "obj1": 0.7571428571428571, "obj2": 0.11572774783030657}, {"determining": "( ( ( Max( Max( FirstVNF_CPU,ACS ),FirstVNF_CPU ) / FirstVNF_CPU ) - ( AMS * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem,( RRS * ( ( RRS + ( ACS + MRS ) ) * ( ( Const - ( DDR - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( CS ,CS ) + Max( RRSe,MUM ) ) + Max( ( ( ( Min( Min( ( RCSe * MUM ) ,( MUR / MUR ) ) ,RMSe ) / ( MUC * MUC ) ) / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8110369612511952}, {"determining": "( ( AMS - ( ( FirstVNF_CPU / RRS ) - MDR ) ) / Max( ( ACS - Const ),( Max( Max( ( FirstVNF_Mem - Min( ( MDR / ACS ) ,FirstVNF_Mem_Server ) ),Min( ( Const + FirstVNF_CPU ) ,( MRS * ( FirstVNF_Mem_Server + MRS ) ) ) ),FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR * ( MUR - ( Max( RCSe,Max( Min( DS ,( MUR + RRSe ) ),Min( RMSe ,MUM ) ) ) - ( MLU - MUR ) ) ) ) - ( ( Max( CS,Min( ( ( RCSe / RRSe ) + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( RMSe + ( ( RMSe * DS ) + RRSe ) ) ),( MLU - ( ( MUR + RRSe ) / DS ) ) ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM * ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5122448979591837, "obj2": 0.3473205021030432}, {"determining": "( ( PN - ( MDR + FirstVNF_RAM ) ) * ( Const / MRS ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RCSe ) - CS ) + ( MLU * CS ) ) ) ,( RMSe + ( ( ( CS / DS ) + Min( ( CS - Min( DS ,( RRSe + RCSe ) ) ) ,MUC ) ) + ( RMSe - ( ( ( MUR + ( RMSe - MUC ) ) + ( MUM - DS ) ) / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.773469387755102, "obj2": 0.10982884718382041}, {"determining": "( ( Const - ( BR - FirstVNF_RAM_Server ) ) + Min( AMS ,PN ) )", "choosing": "( ( ( MUC * MUM ) / Max( ( RMSe + MUR ),( RMSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( RMSe * MUR ) / RMSe ) ) - ( ( MLU + CS ) * ( ( RRSe * MUM ) * DS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.23877551020408164, "obj2": 0.7334656019196193}, {"determining": "( ( AMS * PN ) + ( Const - Min( ( ACS + ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ,( ( Const + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) / RRS ) ) ) )", "choosing": "( ( ( MUM / MUM ) / ( RRSe + MUM ) ) / ( RRSe * Max( Max( Max( ( RMSe + ( ( RRSe * MUM ) * MLU ) ),MUR ),( ( MUR * MUM ) - MUC ) ),( ( ( MUC - DS ) / RCSe ) / ( MUM - CS ) ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.740803066329768}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + AMS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - MUC ),( ( MUR / ( MUR + ( DS / CS ) ) ) / DS ) ) )", "obj1": 0.40816326530612246, "obj2": 0.4387338862269851}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8321540144904129}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( AMS * PN ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "( ( ( MUC * MUM ) / ( ( RMSe + MUR ) / ( RMSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RMSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7207915086526647}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU - PN ) ,BR ) ) / FirstVNF_Mem )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + RMSe ) ) - Min( ( MUR * DS ) ,( ( CS + ( ( MUC + MLU ) - ( RCSe - RRSe ) ) ) + RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( Min( DS ,( RRSe - DS ) ) * ( ( MUC + RMSe ) / ( RMSe - MUC ) ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.748302548957801}, {"determining": "( FirstVNF_RAM_Server * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( ( ( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) + ( MUR - RRSe ) ),MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8580249015663243}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8879560768570286}, {"determining": "( ( AMS - Max( FirstVNF_Mem,( ( FirstVNF_Mem * ARS ) * ( ( PN - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( FirstVNF_Mem * PN ) ) ) + Const ) ) ) ) / Min( FirstVNF_Mem ,MDR ) )", "choosing": "( Max( ( ( ( MUC / MUR ) / MUR ) / MUM ),Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUC ,( ( Max( ( MUC * Max( CS,RCSe ) ),( RMSe + DS ) ) + Max( ( MUC + DS ),MUR ) ) - MUR ) ) ,RMSe ) )", "obj1": 0.4326530612244898, "obj2": 0.40525309416291927}, {"determining": "( ( ( ( RRS + MDR ) * AMS ) - Max( Const,RRS ) ) * Max( Const,BR ) )", "choosing": "( Max( ( ( Min( MUM ,MUM ) / MUR ) * MUR ),RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.7857142857142857, "obj2": 0.10423884421050618}, {"determining": "( ( AMS - Max( Min( Min( ARS ,FirstVNF_Mem ) ,Min( BR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( RMSe + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - ( RMSe * Min( MLU ,MUM ) ) ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5904940164180497}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,( RMSe * ( MLU + CS ) ) ) ) ) ),Max( Min( ( ( ( CS * CS ) * Min( MUM ,( MUR - MLU ) ) ) / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.08163265306122448, "obj2": 0.8933480969824823}, {"determining": "( ACS / Max( BR,( CRS + ( Min( MDR ,DDR ) * Const ) ) ) )", "choosing": "( ( CS - MUC ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8021734073188833}, {"determining": "Min( Min( Min( Max( ( ARS - FirstVNF_RAM_Server ),( ( FirstVNF_CPU - Const ) + ACS ) ) ,( ACS / ( Min( MRS ,AMS ) / FirstVNF_CPU_Server ) ) ) ,BR ) ,( FirstVNF_CPU * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( CS / MLU ),( Max( ( Min( ( MUC / MLU ) ,RMSe ) + RMSe ),MUM ) - Max( ( MUC - MLU ),Max( MUC,DS ) ) ) ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + MUC ) + RRSe ) ,MLU ) ) ,DS ) ,Max( RRSe,( Min( MUM ,( ( RRSe / ( MUC + CS ) ) * MLU ) ) * MUC ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7544423640090209}, {"determining": "( ( FirstVNF_RAM_Server - Max( AMS,( ARS * ARS ) ) ) * Max( ( Min( MRS ,ARS ) * ARS ),ARS ) )", "choosing": "( ( Min( CS ,CS ) + Max( ( RMSe + ( MUM - DS ) ),MUM ) ) + Max( ( ( RRSe / Max( MLU,( MLU + CS ) ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7813411576934753}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( RRSe / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.42857142857142855, "obj2": 0.42199554973519854}, {"determining": "( ( AMS - Max( ( RRS - FirstVNF_CPU ),ARS ) ) / Min( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( CS - MUC ) / MUR ) - ( ( ( ( DS + DS ) - ( Max( ( ( RCSe - MUR ) + DS ),RMSe ) / RCSe ) ) + DS ) / MUC ) )", "obj1": 0.25510204081632654, "obj2": 0.6989410278280859}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.41836734693877553, "obj2": 0.42495376958820347}, {"determining": "( ( Const / Min( ACS ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,ARS ) ) ) ) * ( PN - Max( ( CRS / FirstVNF_Mem ),AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( RCSe - Min( Min( Min( ( CS * MUC ) ,( MUR + MUC ) ) ,MUC ) ,CS ) ) ) ),( ( ( ( MUM * MUM ) * MUC ) * ( RCSe / MUR ) ) - CS ) )", "obj1": 0.7448979591836735, "obj2": 0.12269990469959279}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU / RRS ),ARS ) ) / Min( ( ACS - ( ACS * Min( Const ,BR ) ) ) ,( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( CS ,Min( ( MLU + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( RMSe + ( ( RMSe * DS ) + MUR ) ) ),MUC ) ) - ( ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) + ( MUR - RRSe ) ) ) )", "obj1": 0.6163265306122448, "obj2": 0.26803392207986054}, {"determining": "( ( Max( ( RRS - ( FirstVNF_RAM * DDR ) ),( ACS * MDR ) ) - AMS ) / Min( ACS ,Min( ARS ,( ACS * ( DDR - ( ACS * ACS ) ) ) ) ) )", "choosing": "( ( ( RCSe - MUC ) / MUR ) - ( ( CS - ( ( ( Max( DS,MUC ) / MLU ) + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.25510204081632654, "obj2": 0.6989410278280859}, {"determining": "Min( ( FirstVNF_Mem * MDR ) ,( ( Min( PN ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * Min( DDR ,FirstVNF_CPU_Server ) ) - Max( DDR,DDR ) ) )", "choosing": "( ( ( ( ( ( ( MUM / ( CS + DS ) ) / ( ( MUC + RMSe ) + MUM ) ) / Min( MUR ,MLU ) ) - MLU ) / ( MUR * MUR ) ) - Min( Min( DS ,( MUR + RCSe ) ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + Min( ( RCSe + RCSe ) ,MUC ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.04664455471800032}, {"determining": "( ( Min( ( FirstVNF_CPU - ( ( RRS + ( ACS + MRS ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) - FirstVNF_Mem ) ) ) ,( Min( BR ,( FirstVNF_CPU_Server + Max( PN,MDR ) ) ) * ( ( FirstVNF_CPU + RRS ) * FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) + ( ( CRS * FirstVNF_Mem_Server ) - AMS ) )", "choosing": "Max( ( RMSe * RMSe ),Min( Min( ( RMSe * Min( Max( ( Min( CS ,CS ) - RRSe ),MUC ) ,MLU ) ) ,( RRSe * CS ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / DS ) ) + MUM ) ) * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.22658886246928772}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MUR + ( DS / CS ) ) ) / DS ) ) )", "obj1": 0.4163265306122449, "obj2": 0.43486115707662826}, {"determining": "( ( PN - ( ( RRS + ( ( AMS - Max( FirstVNF_RAM_Server,( ACS + AMS ) ) ) * Const ) ) * ( Min( ( Max( DDR,BR ) * ( Const / BR ) ) ,Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( Const / MRS ) )", "choosing": "( ( Max( Min( MLU ,Min( MUC ,RCSe ) ),DS ) * ( ( ( RMSe - DS ) / MUM ) * Max( RRSe,Max( ( DS / DS ),( MUC + RMSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0034616397171632765}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( Min( FirstVNF_CPU_Server ,Max( DDR,DDR ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( MUM * CS ) + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MUR + ( CS / DS ) ) ) / DS ) ) )", "obj1": 0.40816326530612246, "obj2": 0.4387338862269851}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ( ( ( FirstVNF_CPU * BR ) - PN ) * FirstVNF_CPU ) ) ) - Const ) / BR ) )", "choosing": "Max( Min( ( Max( RMSe,( MUR + DS ) ) / DS ) ,( RMSe - CS ) ),( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( Max( Max( RCSe,RMSe ),( RCSe - ( DS - RCSe ) ) ),MUM ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8646387774221315}, {"determining": "Min( Max( ( ( Max( Min( AMS ,FirstVNF_RAM ),MRS ) * FirstVNF_CPU_Server ) * ACS ),( MDR + ( FirstVNF_RAM * ARS ) ) ) ,Min( ( ( DDR - FirstVNF_CPU_Server ) - Min( PN ,RRS ) ) ,Min( DDR ,DDR ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( ( DS * MUC ) / Min( MUC ,CS ) ) - MLU ) ) - Min( ( DS * MUR ) ,( MUR / DS ) ) ) - Min( ( RCSe / CS ) ,( Min( RCSe ,( ( Max( Min( RCSe ,CS ),MLU ) * DS ) + Min( CS ,DS ) ) ) + Min( MLU ,MUM ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.03129395782837683}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( Min( MUM ,MUR ) - CS ) / Max( MUC,MUC ) ) ) ) ,CS ),( CS - ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.12500720043571356}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - RRS ),( ( FirstVNF_CPU_Server * ACS ) * CRS ) ) ) / Min( Min( FirstVNF_RAM ,( DDR * FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + AMS ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - Min( RRSe ,RCSe ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "Min( ( Min( FirstVNF_CPU ,( ACS - ACS ) ) * ( ( FirstVNF_Mem + ( ( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( DDR + MDR ) / ( FirstVNF_Mem_Server + MRS ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,( ( MLU * RMSe ) - MLU ) ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / RMSe ) ,( DS - MUR ) ) ) - Min( ( ( ( MUR * Min( ( CS * ( CS - RCSe ) ) ,Max( CS,DS ) ) ) - Min( MLU ,RRSe ) ) / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ) )", "obj1": 0.9448979591836735, "obj2": 0.023752196977063933}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ACS / Max( BR,( CRS + ( Max( CRS,PN ) * PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RCSe ) * RMSe ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS - MUR ) / RCSe ) ) - ( ( MLU + Max( RCSe,MUM ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.13877551020408163, "obj2": 0.84382541227652}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( Min( ( Min( FirstVNF_CPU ,PN ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( Const,DDR ) ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( MUC * ( RCSe / MUR ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.881725731384579}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( ( Max( MRS,RRS ) - BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( MRS / Const ) )", "choosing": "( MUR * ( ( Min( ( MUM - ( ( DS * MUR ) / RCSe ) ) ,( DS + RMSe ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9857142857142858, "obj2": 0.005628862220294025}, {"determining": "( ( Const - ( ( PN * Const ) + RRS ) ) * ( Max( BR,DDR ) / Min( ( ( Const - ( Const / AMS ) ) * ARS ) ,RRS ) ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( ( MUC + ( Max( DS,( MLU - Min( MLU ,( CS - MUC ) ) ) ) * Max( CS,MUM ) ) ) / ( DS - MLU ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "( ( AMS - Min( Min( PN ,AMS ) ,FirstVNF_CPU ) ) / ( Max( ( ACS * Min( Const ,BR ) ),ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,Min( RMSe ,MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( MUC - ( ( ( ( ( RMSe * RCSe ) - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3787061548462769}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "Max( ( ( Max( RCSe,( ( ( MUR - MUM ) / DS ) + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( DS / CS ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ),( CS + RCSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8329880263221716}, {"determining": "Min( Max( ( ( ( ACS * PN ) - ACS ) / ( MRS - ACS ) ),( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) * ( Min( Const ,( ARS / FirstVNF_Mem_Server ) ) * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * ( ( PN * MDR ) * CRS ) ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( Min( ( RRSe * RMSe ) ,Max( ( RCSe + DS ),Max( ( MUM * RRSe ),( MUC - RMSe ) ) ) ) / ( CS + RRSe ) ) )", "obj1": 0.9530612244897959, "obj2": 0.020586508258801935}, {"determining": "Min( ( ( MDR - FirstVNF_RAM_Server ) + ( ( ARS - AMS ) + Const ) ) ,Max( MRS,Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * RRSe ) - ( MUC / ( CS * MLU ) ) )", "obj1": 0.9040816326530612, "obj2": 0.043893244040151304}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * ( ( FirstVNF_Mem / MDR ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC - MUM ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7813411576934753}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( RRSe / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.42653061224489797, "obj2": 0.4226994059105814}, {"determining": "Min( ( FirstVNF_Mem + ( ARS / FirstVNF_Mem_Server ) ) ,Min( ( Min( PN ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) - Max( ( RRS + MDR ),( Max( ( Max( DDR,BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / ( MUM + CS ) ) - MLU ) ,( MUR * MUR ) ) - Min( Min( MUC ,( MUR + RCSe ) ) ,( DS - MUR ) ) ) - RCSe )", "obj1": 0.9795918367346939, "obj2": 0.008129833702884861}, {"determining": "( Min( ARS ,( AMS + ACS ) ) / ( ( ( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + AMS ) ) * Const ) ) - DDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( ( ( DS - CS ) - MUR ),CS ) / ( ( ( ( MLU - ( ( MUC / Min( CS ,MUM ) ) + RCSe ) ) * Min( RCSe ,CS ) ) - MLU ) - MUC ) )", "obj1": 0.9714285714285714, "obj2": 0.012238172698020206}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,( ACS / Const ) ) * ( ( BR * FirstVNF_Mem_Server ) / RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_CPU_Server ) - Min( PN ,FirstVNF_CPU ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( ( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03486417169314258}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - Min( Min( RMSe ,MUM ) ,RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( RCSe - ( RCSe * MUR ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7938775510204081, "obj2": 0.10321102972102549}, {"determining": "( ( Const + ( Max( CRS,MDR ) * ( MRS + ( RRS - ( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( Min( Max( MRS,Min( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),DDR ) ,( FirstVNF_CPU / Min( RRS ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) - ACS ) ,Max( ( ( Max( FirstVNF_CPU_Server,ACS ) - RRS ) / ARS ),AMS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( RMSe ,( ( MUR + RCSe ) - Min( Min( ( ( MLU / MUM ) / MUM ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Max( MUR,MUM ) ) / DS ) ,( RMSe + ( CS / Min( MLU ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.9591836734693877, "obj2": 0.017192892409302152}, {"determining": "( ( Min( Min( ( ACS + MDR ) ,MRS ) ,ARS ) + ( ( BR * ( FirstVNF_Mem - Min( ( MDR + ( AMS / CRS ) ) ,Const ) ) ) - FirstVNF_CPU_Server ) ) * Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( CS - ( ( MUM - Max( MLU,RMSe ) ) / RCSe ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8433184526280625}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MUR + ( DS / CS ) ) ) / DS ) ) )", "obj1": 0.41020408163265304, "obj2": 0.43724733577135705}, {"determining": "Min( Max( Min( ( ACS - ACS ) ,( ACS - FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ( Max( BR,( ( DDR / FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,( MUM * ( ( DS / MUC ) - DS ) ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.936734693877551, "obj2": 0.02752135264321491}, {"determining": "Min( Max( CRS,Max( ( ( Max( CRS,MRS ) * FirstVNF_CPU_Server ) * ACS ),( AMS * ( FirstVNF_RAM * ARS ) ) ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( MUC / DS ) + DS ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.936734693877551, "obj2": 0.02752135264321491}, {"determining": "Min( Max( Min( ( ACS + FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( MDR - FirstVNF_Mem_Server ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * DDR ) ) ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * ( MUC / MUM ) ) ) ) - MLU ) ,( MLU + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR - Max( MUM,RCSe ) ) ) * ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( RRSe - MUR ) ) ) )", "obj1": 0.9244897959183673, "obj2": 0.03338002760466691}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ,Max( RRS,( ( FirstVNF_Mem + ( Max( BR,( FirstVNF_CPU * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * ( MDR * ARS ) ) ) ) - ( BR * RRS ) ) ) )", "choosing": "( ( Min( ( RMSe + RMSe ) ,( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - MUR ) ) ) - ( Max( ( Max( MLU,Min( MUC ,MUC ) ) + CS ),( ( RCSe / ( ( MLU * RMSe ) * CS ) ) + Min( DS ,MUC ) ) ) + ( MLU - ( RCSe * RMSe ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.0419329768748851}, {"determining": "( ( FirstVNF_CPU - Max( ARS,( ( DDR * ( AMS / ( Min( CRS ,FirstVNF_RAM ) + PN ) ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - Max( ( RMSe + MLU ),RRSe ) ) * MUR ) + ( MUR - RRSe ) ) ) - ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / ( Max( MUM,RMSe ) / RCSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.3751066143799092}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,Max( ( DDR / FirstVNF_CPU ),Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( Min( Const ,( ARS / DDR ) ) * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) - ( BR * FirstVNF_RAM_Server ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * DDR ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( MLU + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR - Max( MUM,RCSe ) ) ) - ( ( ( CS * MUR ) + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.022322451595692103}, {"determining": "( ( AMS + Max( ( FirstVNF_CPU / RRS ),ARS ) ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - AMS ) ) * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( CS ,Min( ( MLU + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( Min( DS ,RMSe ) - ( DS - MLU ) ) ) * ( MLU + ( ( RMSe * DS ) + MUC ) ) ),MUC ) ) - ( ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) + ( Min( ( ( Max( CS,MUR ) - MUM ) + MUR ) ,CS ) - RRSe ) ) ) )", "obj1": 0.6163265306122448, "obj2": 0.26803392207986054}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_Mem_Server ) ),MDR ) * ( AMS + AMS ) ) ) - ( BR * ( FirstVNF_RAM - MDR ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( RRSe,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / Max( DS,RRSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9163265306122449, "obj2": 0.037870547323189195}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS / ( ( MUM - DS ) / ( ( RCSe / RRSe ) * RRSe ) ) ) ) ),Max( Min( ( ( MUM * ( ( Min( RMSe ,MUC ) - MUC ) + DS ) ) / RMSe ) ,CS ),( CS - MUC ) ) )", "obj1": 0.1, "obj2": 0.8792746909100844}, {"determining": "( ( Max( PN,FirstVNF_RAM_Server ) / MDR ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( ( ( MUM - DS ) / ( MUM * RRSe ) ) / CS ) ) ),Max( Min( ( ( MUM * ( ( RCSe / MUC ) + DS ) ) / RMSe ) ,CS ),( CS - MUC ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8736250661894744}], "28": [{"determining": "( ( MRS / ( ( FirstVNF_CPU_Server + ( PN / FirstVNF_CPU ) ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) * ( Min( RRS ,CRS ) * Const ) ) * Min( CRS ,CRS ) ) ) ) / ( PN - Min( ( RRS + AMS ) ,( Max( CRS,( FirstVNF_CPU_Server - MRS ) ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "Min( ( MUR - ( DS / CS ) ) ,( RCSe + ( ( MUM - ( DS / ( CS / ( Max( RRSe,MUR ) * DS ) ) ) ) + Max( ( MUR * DS ),( ( RRSe / Max( RRSe,CS ) ) + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ( Max( CRS,FirstVNF_CPU_Server ) / ( Max( ARS,BR ) - ( DDR - FirstVNF_CPU_Server ) ) ) * ( RRS + ( ( FirstVNF_CPU_Server / ( AMS + CRS ) ) - RRS ) ) ) ) / ( AMS + MRS ) )", "choosing": "( Max( DS,MUR ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - ( MUR + MUR ) ) + ( MUR - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ARS / MRS ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( RMSe * ( MLU + CS ) ) ,( MUR + RCSe ) ) ) ) ),( RCSe + ( ( MUM - ( DS / ( CS / ( Max( RRSe,MUR ) * DS ) ) ) ) + Max( ( MUR * DS ),( ( RRSe / Max( RRSe,CS ) ) + RMSe ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9074694900194289}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * Min( ( RRS * Const ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) / MUM ) / ( RRSe + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5029286765900902}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( PN - ( ( ( AMS - ARS ) + Min( ( Min( ( FirstVNF_RAM - ARS ) ,FirstVNF_RAM ) / ( ARS - FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem,DDR ) - MDR ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / ( ( BR * AMS ) - Max( ARS,Max( ARS,BR ) ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "Min( ( ( ( ( RCSe / RCSe ) - CS ) + ( MLU * CS ) ) - MUM ) ,( RMSe + ( ( ( Max( ( ( RCSe / MUR ) + RRSe ),( ( RMSe * MUR ) * MUR ) ) / ( ( RRSe / ( MUM / RCSe ) ) / RCSe ) ) + Min( MUC ,( CS - Min( DS ,( RRSe / RCSe ) ) ) ) ) + ( RMSe - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7959183673469388, "obj2": 0.10177147378877685}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * Min( ( RRS * Const ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) / MUM ) / ( RRSe + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.47216786001709216}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / Max( Max( PN,RRS ),FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe * Min( Min( RMSe ,CS ) ,Max( MUC,RCSe ) ) ) - ( ( CS - ( ( MLU + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.5591836734693878, "obj2": 0.31421784215471205}, {"determining": "( ( PN * ( MRS + ( BR - MRS ) ) ) / Min( ( PN + FirstVNF_CPU ) ,DDR ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - ( CS - DS ) )", "obj1": 0.3163265306122449, "obj2": 0.6067613286863484}, {"determining": "( ( RRS + FirstVNF_RAM_Server ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( MRS ,( BR * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( MUC ,Min( ( MLU + ( RRSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( ( ( MLU / MUC ) / MUM ) - ( ( RMSe * RCSe ) + ( RCSe * CS ) ) ) ),MUC ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM - ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.581061807772955}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( ( Max( DDR,MRS ) - RRS ) / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( RRSe / ( MLU + Max( MUC,MUC ) ) ) / DS ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6341492137628726}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - ( ( DDR + FirstVNF_CPU ) - ( BR - RRS ) ) ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( ( DS - MUC ) / MUR ) - ( ( CS - ( Min( MUR ,( RRSe / ( ( DS - MUC ) / ( MUM + DS ) ) ) ) - RCSe ) ) - MUM ) )", "obj1": 0.5204081632653061, "obj2": 0.3383725974219043}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.26326530612244897, "obj2": 0.635118734034016}, {"determining": "( ( AMS - ( ACS * FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( MRS,BR ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( Min( CRS ,FirstVNF_RAM ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + Min( RCSe ,RMSe ) ) - ( DS - ( ( ( ( MUM - Max( ( MUR + RCSe ),MUM ) ) - ( ( RMSe + CS ) + Max( CS,MUR ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.6408163265306123, "obj2": 0.24375180789906647}, {"determining": "( Max( MRS,( ( FirstVNF_CPU_Server + ( PN / FirstVNF_CPU ) ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) * ( Min( ( Const - RRS ) ,CRS ) * Const ) ) * Min( CRS ,CRS ) ) ) ) / ( PN - Min( ( RRS + AMS ) ,( Max( CRS,( FirstVNF_CPU_Server - MRS ) ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "Min( ( MUR - ( DS / CS ) ) ,( RCSe + ( ( MUM - ( DS / ( CS / ( Max( RRSe,MUR ) * DS ) ) ) ) + Max( ( MUR * DS ),( ( MUM - MUR ) + RMSe ) ) ) ) )", "obj1": 0.5836734693877551, "obj2": 0.30504492281383727}, {"determining": "( ( AMS - Max( ( Max( Min( MDR ,FirstVNF_CPU ),DDR ) * ( PN / FirstVNF_Mem ) ),Const ) ) / ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( ( MLU + ( ( RCSe * DS ) * RCSe ) ) / MUC ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - RRSe ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( RMSe / MUM ) * MUM ) ) - MUR ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.679292893601322}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6857142857142857, "obj2": 0.21813912183101744}, {"determining": "( ( ( ACS * BR ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( MRS * FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( ( MUM - CS ) / ( RCSe - ( RMSe + ( RRSe + Max( RRSe,MUM ) ) ) ) ) / Min( ( RMSe + ( RRSe - MUC ) ) ,Max( DS,DS ) ) ),( ( RRSe * MUC ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ) )", "obj1": 0.7142857142857143, "obj2": 0.1948619238291775}, {"determining": "( ( Const / FirstVNF_Mem ) * ( ( ( BR / ( RRS - ( Const * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_CPU_Server ) + ( Min( ( DDR - ACS ) ,( Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) * FirstVNF_Mem_Server ) ) * ( ACS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS / Max( ( ( DS - ( ( Min( DS ,DS ) - MUR ) + RCSe ) ) + ( MUM - RMSe ) ),( MUC / Max( ( RRSe * RMSe ),DS ) ) ) ) * ( ( ( RMSe + RMSe ) / Min( Max( DS,( Max( MLU,( RCSe + MUM ) ) * ( Min( MLU ,DS ) + DS ) ) ) ,( RMSe / MLU ) ) ) / ( RRSe + CS ) ) )", "obj1": 0.7183673469387755, "obj2": 0.16132175323841497}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server * ( ARS * ARS ) ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( DDR + ACS ) ) )", "choosing": "( ( ( RRSe - MUM ) + Min( RMSe ,Max( ( ( CS - MUC ) / ( MUC / Max( DS,MUC ) ) ),Max( ( RMSe * MUC ),MLU ) ) ) ) + ( ( Min( RCSe ,( ( ( RMSe * ( MLU - CS ) ) / Min( CS ,DS ) ) - MLU ) ) * Max( CS,MUR ) ) + RCSe ) )", "obj1": 0.1836734693877551, "obj2": 0.7726397780300505}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( MUC ,Min( ( MLU + ( RRSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( ( ( MLU / MUC ) / MUM ) - ( ( RMSe * RCSe ) + ( RCSe * CS ) ) ) ),MUC ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM - ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.6061224489795919, "obj2": 0.287388870775285}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,BR ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,( ( MUM - ( RRSe / ( MUM * MUR ) ) ) - ( ( MLU + CS ) * RMSe ) ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6244897959183674, "obj2": 0.26298068476214587}, {"determining": "( ( AMS - Max( ARS,( ( ( ( MDR / ACS ) * ACS ) * FirstVNF_CPU ) * MDR ) ) ) / Min( FirstVNF_CPU ,( FirstVNF_CPU + Const ) ) )", "choosing": "( ( Min( ( MUM + MUR ) ,( MUR + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( Min( RRSe ,( RRSe * MLU ) ) * ( ( RMSe * RCSe ) / RCSe ) ) - ( ( CS + RMSe ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.45918367346938777, "obj2": 0.3863778089801303}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) / MUM ) / ( RRSe + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.3979591836734694, "obj2": 0.4429361181930074}, {"determining": "( ( ( Max( FirstVNF_RAM,( Min( FirstVNF_RAM_Server ,CRS ) * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) * AMS ) ) * Max( ( ( ACS * FirstVNF_Mem_Server ) - AMS ),( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * ( ( ( RRSe / CS ) - MUR ) / Min( CS ,RMSe ) ) ) ) ,CS ) )", "obj1": 0.6653061224489796, "obj2": 0.22859323009126412}, {"determining": "( Max( ( FirstVNF_CPU / Const ),AMS ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( ( Min( ( MUR + ( ( RMSe * RCSe ) + ( ( RCSe + RRSe ) * RRSe ) ) ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RMSe - ( ( MLU / RMSe ) - MUC ) ) ) ) - ( MUC - ( ( ( ( Max( ( RMSe * CS ),( MUC / MUC ) ) - ( DS / ( RMSe + RMSe ) ) ) - ( RRSe * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.43673469387755104, "obj2": 0.40267783867325646}, {"determining": "( ( AMS * ACS ) / Max( ( ( ACS - ACS ) * ( PN - FirstVNF_RAM_Server ) ),BR ) )", "choosing": "( ( ( ( ( DS * CS ) / MUR ) / ( MUR / MUC ) ) + MUM ) - ( DS - ( CS - ( MUM - ( RRSe * CS ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7600334505949903}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.7306122448979592, "obj2": 0.12965138027693368}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( DDR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MUR + MUM ) ) / DS ) ) )", "obj1": 0.7224489795918367, "obj2": 0.15091962478353013}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( MDR + ACS ) ) ,Min( ( Min( PN ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM * MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( Min( DS ,( MUR + Min( MUC ,RMSe ) ) ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + ( ( RCSe + RCSe ) + MUC ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.0511438476776511}, {"determining": "( ( ( AMS - Max( ( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) * FirstVNF_Mem ),ARS ) ) / Max( FirstVNF_RAM,DDR ) ) * ( Const / BR ) )", "choosing": "( ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / MUR ) - ( ( ( ( ( Min( RRSe ,MLU ) - MUM ) * MUM ) / RMSe ) + DS ) / MUM ) )", "obj1": 0.336734693877551, "obj2": 0.5912134411120042}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * Max( Max( DDR,FirstVNF_Mem_Server ),Const ) ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,( ( Min( ( MUR + MUR ) ,( MLU + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - Min( ( ( Min( CS ,CS ) + Max( RRSe,MUM ) ) - Min( ( MLU + CS ) ,( RMSe - RCSe ) ) ) ,DS ) ) ) ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4959183673469388, "obj2": 0.36474011248476845}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( MUR / ( DS - MLU ) ) )", "obj1": 0.7571428571428571, "obj2": 0.11572774783030657}, {"determining": "( ( ( Max( Max( FirstVNF_CPU,ACS ),FirstVNF_CPU ) / FirstVNF_CPU ) - ( AMS * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem,( RRS * ( ( RRS + ( ACS + MRS ) ) * ( ( Const - ( DDR - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( CS ,CS ) + Max( RRSe,MUM ) ) + Max( ( ( ( Min( Min( ( RCSe * MUM ) ,( MUR / MUR ) ) ,RMSe ) / ( MUC * MUC ) ) / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8110369612511952}, {"determining": "( ( PN - ( MDR + FirstVNF_RAM ) ) * ( Const / MRS ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RCSe ) - CS ) + ( MLU * CS ) ) ) ,( RMSe + ( ( ( CS / DS ) + Min( ( CS - Min( DS ,( RRSe + RCSe ) ) ) ,MUC ) ) + ( RMSe - ( ( ( MUR + ( RMSe - MUC ) ) + ( MUM - DS ) ) / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.773469387755102, "obj2": 0.10982884718382041}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU - Max( ACS,FirstVNF_Mem_Server ) ) ) - RRS ) / Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM / MUM ) / ( MLU + Min( MUR ,DS ) ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( MUR - RRSe ) + ( ( ( MUM - Max( ( MUR + RCSe ),MUM ) ) - ( ( RMSe + CS ) * Max( CS,MUR ) ) ) * MUR ) ) ) )", "obj1": 0.46938775510204084, "obj2": 0.3690572516440237}, {"determining": "( ( Const - ( BR - FirstVNF_RAM_Server ) ) + Min( AMS ,PN ) )", "choosing": "( ( ( MUC * MUM ) / Max( ( RMSe + MUR ),( RMSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( RMSe * MUR ) / RMSe ) ) - ( ( MLU + CS ) * ( ( RRSe * MUM ) * DS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.23877551020408164, "obj2": 0.7334656019196193}, {"determining": "( ( AMS * PN ) + ( Const - Min( ( ACS + ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ,( ( Const + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) / RRS ) ) ) )", "choosing": "( ( ( MUM / MUM ) / ( RRSe + MUM ) ) / ( RRSe * Max( Max( Max( ( RMSe + ( ( RRSe * MUM ) * MLU ) ),MUR ),( ( MUR * MUM ) - MUC ) ),( ( ( MUC - DS ) / RCSe ) / ( MUM - CS ) ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.740803066329768}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8321540144904129}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * ( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ) )", "obj1": 0.6714285714285714, "obj2": 0.22612812872103724}, {"determining": "( ( AMS * PN ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "( ( ( MUC * MUM ) / ( ( RMSe + MUR ) / ( RMSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RMSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7207915086526647}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU - PN ) ,BR ) ) / FirstVNF_Mem )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + RMSe ) ) - Min( ( MUR * DS ) ,( ( CS + ( ( MUC + MLU ) - ( RCSe - RRSe ) ) ) + RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( Min( DS ,( RRSe - DS ) ) * ( ( MUC + RMSe ) / ( RMSe - MUC ) ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.748302548957801}, {"determining": "( ( PN - ( ( ARS / PN ) * ( Max( CRS,FirstVNF_CPU ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) ,( RMSe + ( Max( ( DS - MUM ),MUR ) + ( MUM * ( MUR / ( MLU + Min( MUR ,RMSe ) ) ) ) ) ) )", "obj1": 0.610204081632653, "obj2": 0.28198543733968595}, {"determining": "( Min( ARS ,( AMS + ACS ) ) / ( ( ( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + AMS ) ) * Const ) ) - DDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( ( ( DS - CS ) - MUR ),CS ) / ( ( ( ( MLU - ( ( MUC / Min( CS ,MUM ) ) + RCSe ) ) * Min( RCSe ,CS ) ) - MLU ) - MUC ) )", "obj1": 0.9714285714285714, "obj2": 0.012238172698020206}, {"determining": "( FirstVNF_RAM_Server * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( ( ( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) + ( MUR - RRSe ) ),MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8580249015663243}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8879560768570286}, {"determining": "( ( AMS - ( ( RRS - FirstVNF_CPU ) * ARS ) ) / Min( FirstVNF_RAM ,Min( ARS ,( ACS * ( DDR * Min( ( ARS - ( DDR - FirstVNF_CPU_Server ) ) ,CRS ) ) ) ) ) )", "choosing": "( MUR * ( Min( ( ( MUM - ( ( ( RRSe / MUR ) * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) ,MUR ) + ( RRSe - MUR ) ) )", "obj1": 0.5, "obj2": 0.3581348118199062}, {"determining": "( ( AMS - Max( FirstVNF_Mem,( ( FirstVNF_Mem * ARS ) * ( ( PN - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( FirstVNF_Mem * PN ) ) ) + Const ) ) ) ) / Min( FirstVNF_Mem ,MDR ) )", "choosing": "( Max( ( ( ( MUC / MUR ) / MUR ) / MUM ),Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUC ,( ( Max( ( MUC * Max( CS,RCSe ) ),( RMSe + DS ) ) + Max( ( MUC + DS ),MUR ) ) - MUR ) ) ,RMSe ) )", "obj1": 0.4326530612244898, "obj2": 0.40525309416291927}, {"determining": "( ( ( ( RRS + MDR ) * AMS ) - Max( Const,RRS ) ) * Max( Const,BR ) )", "choosing": "( Max( ( ( Min( MUM ,MUM ) / MUR ) * MUR ),RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.7857142857142857, "obj2": 0.10423884421050618}, {"determining": "( ( Const + ( Max( CRS,MDR ) * ( MRS + ( RRS - ( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( Min( Max( MRS,Min( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),DDR ) ,( FirstVNF_CPU / Min( RRS ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) - ACS ) ,Max( ( ( Max( FirstVNF_CPU_Server,ACS ) - RRS ) / ARS ),AMS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( RMSe ,( ( MUR + RCSe ) - Min( Min( ( ( MLU / MUM ) / MUM ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Max( MUR,MUM ) ) / DS ) ,( RMSe + ( CS / Min( MLU ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.9591836734693877, "obj2": 0.017192892409302152}, {"determining": "( ( AMS - Max( Min( Min( ARS ,FirstVNF_Mem ) ,Min( BR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( ( RMSe + ( MLU / ( DS * DS ) ) ) - MLU ) ,( RMSe + MUM ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - ( RMSe * Min( MLU ,MUM ) ) ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5904940164180497}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,( RMSe * ( MLU + CS ) ) ) ) ) ),Max( Min( ( ( ( CS * CS ) * Min( MUM ,( MUR - MLU ) ) ) / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.08163265306122448, "obj2": 0.8933480969824823}, {"determining": "( ( Const / Min( ACS ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,ARS ) ) ) ) * ( PN - Max( ( CRS / FirstVNF_Mem ),AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( RCSe - Min( Min( Min( ( CS * MUC ) ,( MUR + MUC ) ) ,MUC ) ,CS ) ) ) ),( ( ( ( MUM * MUM ) * MUC ) * ( RCSe / MUR ) ) - CS ) )", "obj1": 0.7448979591836735, "obj2": 0.12269990469959279}, {"determining": "( ACS / Max( BR,( CRS + ( Min( MDR ,DDR ) * Const ) ) ) )", "choosing": "( ( CS - MUC ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8021734073188833}, {"determining": "Min( Min( Min( Max( ( ARS - FirstVNF_RAM_Server ),( ( FirstVNF_CPU - Const ) + ACS ) ) ,( ACS / ( Min( MRS ,AMS ) / FirstVNF_CPU_Server ) ) ) ,BR ) ,( FirstVNF_CPU * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( CS / MLU ),( Max( ( Min( ( MUC / MLU ) ,RMSe ) + RMSe ),MUM ) - Max( ( MUC - MLU ),Max( MUC,DS ) ) ) ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + MUC ) + RRSe ) ,MLU ) ) ,DS ) ,Max( RRSe,( Min( MUM ,( ( RRSe / ( MUC + CS ) ) * MLU ) ) * MUC ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7544423640090209}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * ( ( FirstVNF_Mem / MDR ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC - MUM ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7813411576934753}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( RRSe / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.42857142857142855, "obj2": 0.42199554973519854}, {"determining": "( ( AMS - ( ( FirstVNF_CPU / RRS ) - MDR ) ) / Max( ( ACS - Const ),( Max( Max( ( FirstVNF_Mem - Min( ( MDR / ACS ) ,FirstVNF_Mem_Server ) ),Min( ( Const + FirstVNF_CPU ) ,( MRS * ( FirstVNF_Mem_Server + MRS ) ) ) ),FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR * ( MUR - ( Max( RCSe,Max( Min( DS ,( MUR + RRSe ) ),Min( RMSe ,MUM ) ) ) - ( MLU - MUR ) ) ) ) - ( ( Max( CS,Min( ( ( RCSe / RRSe ) + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( RMSe + ( ( RMSe * DS ) + RRSe ) ) ),( MLU - ( ( MUR + RRSe ) / DS ) ) ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM * ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5122448979591837, "obj2": 0.3473205021030432}, {"determining": "( ( FirstVNF_Mem + Max( Min( ( ( ( RRS / ACS ) + Max( FirstVNF_RAM_Server,Const ) ) / BR ) ,( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( ( FirstVNF_CPU_Server - Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( ( DS - MUC ) / RCSe ) )", "obj1": 0.5102040816326531, "obj2": 0.3512071272313902}, {"determining": "( ( Max( ( RRS - ( FirstVNF_RAM * DDR ) ),( ACS * MDR ) ) - AMS ) / Min( ACS ,Min( ARS ,( ACS * ( DDR - ( ACS * ACS ) ) ) ) ) )", "choosing": "( ( ( RCSe - MUC ) / MUR ) - ( ( CS - ( ( ( Max( DS,MUC ) / MLU ) + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.25510204081632654, "obj2": 0.6989410278280859}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.41836734693877553, "obj2": 0.42495376958820347}, {"determining": "( ( AMS + Max( ( FirstVNF_CPU / RRS ),ARS ) ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - AMS ) ) * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( CS ,Min( ( MLU + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( Min( DS ,RMSe ) - ( DS - MLU ) ) ) * ( MLU + ( ( RMSe * DS ) + MUC ) ) ),MUC ) ) - ( ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) + ( Min( ( ( Max( CS,MUR ) - MUM ) + MUR ) ,CS ) - RRSe ) ) ) )", "obj1": 0.6163265306122448, "obj2": 0.26803392207986054}, {"determining": "( ( AMS - Max( ( RRS - FirstVNF_CPU ),ARS ) ) / Min( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( CS - MUC ) / MUR ) - ( ( ( ( DS + DS ) - ( Max( ( ( RCSe - MUR ) + DS ),RMSe ) / RCSe ) ) + DS ) / MUC ) )", "obj1": 0.25510204081632654, "obj2": 0.6989410278280859}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( MLU / MUM ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( Min( MUM ,MUR ) - CS ) / Max( MUC,MUC ) ) ) ) ,CS ),( CS - ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.12500720043571356}, {"determining": "Min( ( FirstVNF_Mem + ( ARS / FirstVNF_Mem_Server ) ) ,Min( ( Min( PN ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) - Max( ( RRS + MDR ),( Max( ( Max( DDR,BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / ( MUM + CS ) ) - MLU ) ,( MUR * MUR ) ) - Min( Min( MUC ,( MUR + RCSe ) ) ,( DS - MUR ) ) ) - RCSe )", "obj1": 0.9795918367346939, "obj2": 0.008129833702884861}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MUR + ( DS / CS ) ) ) / DS ) ) )", "obj1": 0.4163265306122449, "obj2": 0.43486115707662826}, {"determining": "( ( PN - ( ( RRS + ( ( AMS - Max( FirstVNF_RAM_Server,( ACS + AMS ) ) ) * Const ) ) * ( Min( ( Max( DDR,BR ) * ( Const / BR ) ) ,Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( Const / MRS ) )", "choosing": "( ( Max( Min( MLU ,Min( MUC ,RCSe ) ),DS ) * ( ( ( RMSe - DS ) / MUM ) * Max( RRSe,Max( ( DS / DS ),( MUC + RMSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0034616397171632765}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ( ( ( FirstVNF_CPU * BR ) - PN ) * FirstVNF_CPU ) ) ) - Const ) / BR ) )", "choosing": "Max( Min( ( Max( RMSe,( MUR + DS ) ) / DS ) ,( RMSe - CS ) ),( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( Max( Max( RCSe,RMSe ),( RCSe - ( DS - RCSe ) ) ),MUM ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8646387774221315}, {"determining": "( ( AMS - Min( Min( PN ,AMS ) ,FirstVNF_CPU ) ) / ( Max( ( ACS * Min( Const ,BR ) ),ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,Min( RMSe ,MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( MUC - ( ( ( ( ( RMSe * RCSe ) - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3787061548462769}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_Mem_Server ) ),MDR ) * ( AMS + AMS ) ) ) - ( BR * ( FirstVNF_RAM - MDR ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( RRSe,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / Max( DS,RRSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9163265306122449, "obj2": 0.037870547323189195}, {"determining": "( Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ( CRS + ( MDR - ARS ) ) + Max( Const,FirstVNF_Mem ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( CS / Max( Min( MUR ,( ( MUR / RMSe ) - ( MUM - ( CS + MUC ) ) ) ),( CS * DS ) ) ) + Min( MUC ,( CS - Min( ( RMSe * ( MLU + CS ) ) ,( MUR * RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( Max( CS,( CS / RCSe ) ) ,MUM ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.07959183673469387, "obj2": 0.901624967856927}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ,Max( RRS,( ( FirstVNF_Mem + ( Max( BR,( FirstVNF_CPU * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * ( MDR * ARS ) ) ) ) - ( BR * RRS ) ) ) )", "choosing": "( ( Min( ( RMSe + RMSe ) ,( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - MUR ) ) ) - ( Max( ( Max( MLU,Min( MUC ,MUC ) ) + CS ),( ( RCSe / ( ( MLU * RMSe ) * CS ) ) + Min( DS ,MUC ) ) ) + ( MLU - ( RCSe * RMSe ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.0419329768748851}, {"determining": "Min( Max( ( ( Max( Min( AMS ,FirstVNF_RAM ),MRS ) * FirstVNF_CPU_Server ) * ACS ),( MDR + ( FirstVNF_RAM * ARS ) ) ) ,Min( ( ( DDR - FirstVNF_CPU_Server ) - Min( PN ,RRS ) ) ,Min( DDR ,DDR ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( ( DS * MUC ) / Min( MUC ,CS ) ) - MLU ) ) - Min( ( DS * MUR ) ,( MUR / DS ) ) ) - Min( ( RCSe / CS ) ,( Min( RCSe ,( ( Max( Min( RCSe ,CS ),MLU ) * DS ) + Min( CS ,DS ) ) ) + Min( MLU ,MUM ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.03129395782837683}, {"determining": "( ( FirstVNF_CPU - Max( ARS,( ( DDR * ( AMS / ( Min( CRS ,FirstVNF_RAM ) + PN ) ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - Max( ( RMSe + MLU ),RRSe ) ) * MUR ) + ( MUR - RRSe ) ) ) - ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / ( Max( MUM,RMSe ) / RCSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.3751066143799092}, {"determining": "Min( ( Min( FirstVNF_CPU ,( ACS - ACS ) ) * ( ( FirstVNF_Mem + ( ( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( DDR + MDR ) / ( FirstVNF_Mem_Server + MRS ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,( ( MLU * RMSe ) - MLU ) ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / RMSe ) ,( DS - MUR ) ) ) - Min( ( ( ( MUR * Min( ( CS * ( CS - RCSe ) ) ,Max( CS,DS ) ) ) - Min( MLU ,RRSe ) ) / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ) )", "obj1": 0.9448979591836735, "obj2": 0.023752196977063933}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ACS / Max( BR,( CRS + ( Max( CRS,PN ) * PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RCSe ) * RMSe ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS - MUR ) / RCSe ) ) - ( ( MLU + Max( RCSe,MUM ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.13877551020408163, "obj2": 0.84382541227652}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( ( Max( MRS,RRS ) - BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( MRS / Const ) )", "choosing": "( MUR * ( ( Min( ( MUM - ( ( DS * MUR ) / RCSe ) ) ,( DS + RMSe ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9857142857142858, "obj2": 0.005628862220294025}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( Min( ( Min( FirstVNF_CPU ,PN ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( Const,DDR ) ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( MUC * ( RCSe / MUR ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.881725731384579}, {"determining": "( ( Const - ( ( PN * Const ) + RRS ) ) * ( Max( BR,DDR ) / Min( ( ( Const - ( Const / AMS ) ) * ARS ) ,RRS ) ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( ( MUC + ( Max( DS,( MLU - Min( MLU ,( CS - MUC ) ) ) ) * Max( CS,MUM ) ) ) / ( DS - MLU ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8397269173447076}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "( ( Max( PN,FirstVNF_RAM_Server ) / MDR ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( ( ( MUM - DS ) / ( MUM * RRSe ) ) / CS ) ) ),Max( Min( ( ( MUM * ( ( RCSe / MUC ) + DS ) ) / RMSe ) ,CS ),( CS - MUC ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8736250661894744}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "Max( ( ( Max( RCSe,( ( ( MUR - MUM ) / DS ) + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( DS / CS ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ),( CS + RCSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8329880263221716}, {"determining": "Min( ( ( MDR - FirstVNF_RAM_Server ) + ( ( ARS - AMS ) + Const ) ) ,Max( MRS,Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * RRSe ) - ( MUC / ( CS * MLU ) ) )", "obj1": 0.9040816326530612, "obj2": 0.043893244040151304}, {"determining": "( ( FirstVNF_RAM_Server - Max( AMS,( ARS * ARS ) ) ) * Max( ( Min( MRS ,ARS ) * ARS ),ARS ) )", "choosing": "( ( Min( CS ,CS ) + Max( ( RMSe + ( MUM - DS ) ),MUM ) ) + Max( ( ( RRSe / Max( MLU,( MLU + CS ) ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7813411576934753}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MUR + ( DS / CS ) ) ) / DS ) ) )", "obj1": 0.4061224489795918, "obj2": 0.44042328135722353}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( RRSe / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.42653061224489797, "obj2": 0.4226994059105814}, {"determining": "Min( Max( Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * DDR ) ) ),Max( ( FirstVNF_CPU * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) ,Min( ( Min( PN ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( Min( DS ,( MUR + RCSe ) ) ,( DS - MUR ) ) ) - RMSe )", "obj1": 0.8959183673469387, "obj2": 0.048220374064745566}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,( ACS / Const ) ) * ( ( BR * FirstVNF_Mem_Server ) / RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_CPU_Server ) - Min( PN ,FirstVNF_CPU ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( ( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03486417169314258}, {"determining": "( ( PN - ( ( Min( FirstVNF_RAM ,Min( Min( CRS ,( ARS * FirstVNF_CPU_Server ) ) ,RRS ) ) + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "( ( Max( ( ( MUC / ( DS - Min( Min( RMSe ,MUM ) ,RMSe ) ) ) - MLU ),( MUM * ( RCSe / RCSe ) ) ) / ( RCSe - ( RCSe * MUR ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7938775510204081, "obj2": 0.10318434125262671}, {"determining": "Min( ( FirstVNF_Mem * MDR ) ,( ( Min( PN ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * Min( DDR ,FirstVNF_CPU_Server ) ) - Max( DDR,DDR ) ) )", "choosing": "( ( ( ( ( ( ( MUM / ( CS + DS ) ) / ( ( MUC + RMSe ) + MUM ) ) / Min( MUR ,MLU ) ) - MLU ) / ( MUR * MUR ) ) - Min( Min( DS ,( MUR + RCSe ) ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + Min( ( RCSe + RCSe ) ,MUC ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.04664455471800032}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( FirstVNF_Mem * ARS ) / ( FirstVNF_Mem_Server + MRS ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( Max( MUC,MUC ) - Min( ( RMSe / ( ( RCSe / MUC ) * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ) )", "obj1": 0.9530612244897959, "obj2": 0.02043848563921583}, {"determining": "( ( Min( Min( ( ACS + MDR ) ,MRS ) ,ARS ) + ( ( BR * ( FirstVNF_Mem - Min( ( MDR + ( AMS / CRS ) ) ,Const ) ) ) - FirstVNF_CPU_Server ) ) * Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( CS - ( ( MUM - Max( MLU,RMSe ) ) / RCSe ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8433184526280625}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MUR + ( DS / CS ) ) ) / DS ) ) )", "obj1": 0.41020408163265304, "obj2": 0.43724733577135705}, {"determining": "Min( Max( CRS,Max( ( ( Max( CRS,MRS ) * FirstVNF_CPU_Server ) * ACS ),( AMS * ( FirstVNF_RAM * ARS ) ) ) ) ,Min( Max( DDR,DDR ) ,( Min( PN ,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( MUC / DS ) + DS ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.936734693877551, "obj2": 0.02752135264321491}, {"determining": "Min( Max( Min( ( ACS - ACS ) ,( ACS - FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ( Max( BR,( ( DDR / FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,( MUM * ( ( DS / MUC ) - DS ) ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.936734693877551, "obj2": 0.02752135264321491}], "29": [{"determining": "( Min( BR ,Min( ( RRS - PN ) ,BR ) ) / FirstVNF_Mem )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + RMSe ) ) - Min( ( MUR * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ,( ( CS + ( ( MUC + MLU ) - ( RCSe - RRSe ) ) ) + RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( Min( DS ,( RRSe - DS ) ) * ( ( MUC + RMSe ) / ( RMSe - MUC ) ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( FirstVNF_CPU_Server + ( PN / FirstVNF_CPU ) ) * ( ( Min( DDR ,FirstVNF_RAM_Server ) * ( Min( RRS ,CRS ) * Const ) ) * Min( CRS ,CRS ) ) ) ) / ( PN - Min( ( RRS + AMS ) ,( Max( CRS,( FirstVNF_CPU_Server - MRS ) ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "Min( ( MUR - ( DS / CS ) ) ,( RCSe + ( ( MUM - ( DS / ( CS / ( Max( RRSe,MUR ) * DS ) ) ) ) + Max( ( MUR * DS ),( ( RRSe / Max( RRSe,CS ) ) + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ARS / MRS ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( RMSe * ( MLU + CS ) ) ,( MUR + RCSe ) ) ) ) ),( RCSe + ( ( MUM - ( DS / ( CS / ( Max( RRSe,MUR ) * DS ) ) ) ) + Max( ( MUR * DS ),( ( RRSe / Max( RRSe,CS ) ) + RMSe ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9074694900194289}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "( CS + Max( ( ( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) / RRSe ) - CS ),( ( MUR / ( MUR + ( DS / CS ) ) ) / DS ) ) )", "obj1": 0.336734693877551, "obj2": 0.535392820737195}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( Min( ( MUR + ( ( RMSe * RCSe ) + ( ( RCSe + RRSe ) * RRSe ) ) ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RMSe - RRSe ) ) ) - ( MUC - ( ( ( ( Max( ( RMSe * CS ),( MUC / MUC ) ) - ( DS / ( RMSe + RMSe ) ) ) - ( RRSe * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2938775510204082, "obj2": 0.6034281459535298}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * Min( ( RRS * Const ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) / MUM ) / ( RRSe + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5029286765900902}, {"determining": "( ( PN - ( ( ( AMS - ARS ) + Min( ( Min( ( FirstVNF_RAM - ARS ) ,FirstVNF_RAM ) / ( ARS - FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem,DDR ) - MDR ) ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / ( ( BR * AMS ) - Max( ARS,Max( ARS,BR ) ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "Min( ( ( ( ( RCSe / RCSe ) - CS ) + ( MLU * CS ) ) - MUM ) ,( RMSe + ( ( ( Max( ( ( RCSe / MUR ) + RRSe ),( ( RMSe * MUR ) * MUR ) ) / ( ( RRSe / ( MUM / RCSe ) ) / RCSe ) ) + Min( MUC ,( CS - Min( DS ,( RRSe / RCSe ) ) ) ) ) + ( RMSe - ( MUR / ( MLU + Min( RMSe ,MUR ) ) ) ) ) ) )", "obj1": 0.7959183673469388, "obj2": 0.10177147378877685}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / Max( Max( PN,RRS ),FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe * Min( Min( RMSe ,CS ) ,Max( MUC,RCSe ) ) ) - ( ( CS - ( ( MLU + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.5591836734693878, "obj2": 0.31421784215471205}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * Min( ( RRS * Const ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) / MUM ) / ( RRSe + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.47216786001709216}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.26326530612244897, "obj2": 0.635118734034016}, {"determining": "( ( AMS - ( ACS * FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( MRS,BR ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( Min( CRS ,FirstVNF_RAM ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + Min( RCSe ,RMSe ) ) - ( DS - ( ( ( ( MUM - Max( ( MUR + RCSe ),MUM ) ) - ( ( RMSe + CS ) + Max( CS,MUR ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.6408163265306123, "obj2": 0.24375180789906647}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( ( RRS + Min( FirstVNF_Mem_Server ,AMS ) ) / Const ) ) ) )", "choosing": "( ( ( DS - MUC ) / ( ( RRSe / MUC ) - Max( ( RRSe / CS ),MLU ) ) ) - ( ( CS - ( ( MUM + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.5836734693877551, "obj2": 0.28916838881698004}, {"determining": "( ( AMS - Max( ( Max( Min( MDR ,FirstVNF_CPU ),DDR ) * ( PN / FirstVNF_Mem ) ),Const ) ) / ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( ( MLU + ( ( RCSe * DS ) * RCSe ) ) / MUC ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - RRSe ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( RMSe / MUM ) * MUM ) ) - MUR ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.679292893601322}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / Max( Max( PN,RRS ),FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe * Min( Min( RMSe ,CS ) ,Max( MUC,RCSe ) ) ) - ( ( CS - ( ( MLU + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.5326530612244897, "obj2": 0.3379969725504565}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( ( Max( DDR,MRS ) - RRS ) / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( RRSe / ( MLU + Max( MUC,MUC ) ) ) / DS ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6341492137628726}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6857142857142857, "obj2": 0.21813912183101744}, {"determining": "( ( ( ACS * BR ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( MRS * FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( ( MUM - CS ) / ( RCSe - ( RMSe + ( RRSe + Max( RRSe,MUM ) ) ) ) ) / Min( ( RMSe + ( RRSe - MUC ) ) ,Max( DS,DS ) ) ),( ( RRSe * MUC ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ) )", "obj1": 0.7142857142857143, "obj2": 0.1948619238291775}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "( ( Const / FirstVNF_Mem ) * ( ( ( BR / ( RRS - ( Const * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_CPU_Server ) + ( Min( ( DDR - ACS ) ,( Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) * FirstVNF_Mem_Server ) ) * ( ACS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS / Max( ( ( DS - ( ( Min( DS ,DS ) - MUR ) + RCSe ) ) + ( MUM - RMSe ) ),( MUC / Max( ( RRSe * RMSe ),DS ) ) ) ) * ( ( ( RMSe + RMSe ) / Min( Max( DS,( Max( MLU,( RCSe + MUM ) ) * ( Min( MLU ,DS ) + DS ) ) ) ,( RMSe / MLU ) ) ) / ( RRSe + CS ) ) )", "obj1": 0.7183673469387755, "obj2": 0.16132175323841497}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,BR ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,( ( MUM - ( RRSe / ( MUM * MUR ) ) ) - ( ( MLU + CS ) * RMSe ) ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6244897959183674, "obj2": 0.26298068476214587}, {"determining": "( ( AMS - Max( ARS,( ( ( ( MDR / ACS ) * ACS ) * FirstVNF_CPU ) * MDR ) ) ) / Min( FirstVNF_CPU ,( FirstVNF_CPU + Const ) ) )", "choosing": "( ( Min( ( MUM + MUR ) ,( MUR + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( Min( RRSe ,( RRSe * MLU ) ) * ( ( RMSe * RCSe ) / RCSe ) ) - ( ( CS + RMSe ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.45918367346938777, "obj2": 0.3863778089801303}, {"determining": "( ( ( Max( FirstVNF_RAM,( Min( FirstVNF_RAM_Server ,CRS ) * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) * AMS ) ) * Max( ( ( ACS * FirstVNF_Mem_Server ) - AMS ),( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * ( ( ( RRSe / CS ) - MUR ) / Min( CS ,RMSe ) ) ) ) ,CS ) )", "obj1": 0.6653061224489796, "obj2": 0.22859323009126412}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.7306122448979592, "obj2": 0.12965138027693368}, {"determining": "( Max( ( FirstVNF_CPU / Const ),AMS ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( ( Min( ( MUR + ( ( RMSe * RCSe ) + ( ( RCSe + RRSe ) * RRSe ) ) ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RMSe - ( ( MLU / RMSe ) - MUC ) ) ) ) - ( MUC - ( ( ( ( Max( ( RMSe * CS ),( MUC / MUC ) ) - ( DS / ( RMSe + RMSe ) ) ) - ( RRSe * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.43673469387755104, "obj2": 0.40267783867325646}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * Max( Max( DDR,FirstVNF_Mem_Server ),Const ) ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,( ( Min( ( MUR + MUR ) ,( MLU + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - Min( ( ( Min( CS ,CS ) + Max( RRSe,MUM ) ) - Min( ( MLU + CS ) ,( RMSe - RCSe ) ) ) ,DS ) ) ) ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4959183673469388, "obj2": 0.36474011248476845}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( MDR + ACS ) ) ,Min( ( Min( PN ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM * MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( Min( DS ,( MUR + Min( MUC ,RMSe ) ) ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + ( ( RCSe + RCSe ) + MUC ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.0511438476776511}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( MUR / ( DS - MLU ) ) )", "obj1": 0.7693877551020408, "obj2": 0.10951570555156834}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU - Max( ACS,FirstVNF_Mem_Server ) ) ) - RRS ) / Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM / MUM ) / ( MLU + Min( MUR ,DS ) ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( MUR - RRSe ) + ( ( ( MUM - Max( ( MUR + RCSe ),MUM ) ) - ( ( RMSe + CS ) * Max( CS,MUR ) ) ) * MUR ) ) ) )", "obj1": 0.46938775510204084, "obj2": 0.3690572516440237}, {"determining": "( ( Const - ( BR - FirstVNF_RAM_Server ) ) + Min( AMS ,PN ) )", "choosing": "( ( ( MUC * MUM ) / Max( ( RMSe + MUR ),( RMSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( RMSe * MUR ) / RMSe ) ) - ( ( MLU + CS ) * ( ( RRSe * MUM ) * DS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.23877551020408164, "obj2": 0.7334656019196193}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server * ( ARS * ARS ) ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( DDR + ACS ) ) )", "choosing": "( ( ( RRSe - MUM ) + Min( RMSe ,Max( ( ( CS - MUC ) / ( MUC / Max( DS,MUC ) ) ),Max( ( RMSe * MUC ),MLU ) ) ) ) + ( ( Min( RCSe ,( ( ( RMSe * ( MLU - CS ) ) / Min( CS ,DS ) ) - MLU ) ) * Max( CS,MUR ) ) + RCSe ) )", "obj1": 0.1836734693877551, "obj2": 0.7726397780300505}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( MUR / ( DS - MLU ) ) )", "obj1": 0.7571428571428571, "obj2": 0.11572774783030657}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * ( ( ( Min( MDR ,PN ) + ( AMS * ( Const - DDR ) ) ) * RRS ) - ( FirstVNF_Mem * ( Max( FirstVNF_RAM_Server,( PN * FirstVNF_RAM_Server ) ) / DDR ) ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( ( CS + RMSe ) / RCSe ) ) ,( ( MUC * MUC ) + ( Min( MUR ,MUM ) * ( ( RRSe + CS ) + DS ) ) ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.39387755102040817, "obj2": 0.44895105044785716}, {"determining": "( ( AMS * PN ) + ( Const - Min( ( ACS + ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ,( ( Const + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) / RRS ) ) ) )", "choosing": "( ( ( MUM / MUM ) / ( RRSe + MUM ) ) / ( RRSe * Max( Max( Max( ( RMSe + ( ( RRSe * MUM ) * MLU ) ),MUR ),( ( MUR * MUM ) - MUC ) ),( ( ( MUC - DS ) / RCSe ) / ( MUM - CS ) ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.740803066329768}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( MUC ,Min( ( MLU + ( RRSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( ( ( MLU / MUC ) / MUM ) - ( ( RMSe * RCSe ) + ( RCSe * CS ) ) ) ),MUC ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM - ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.6061224489795919, "obj2": 0.287388870775285}, {"determining": "( ( AMS + Max( ( FirstVNF_CPU / RRS ),ARS ) ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - AMS ) ) * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( CS ,Min( ( MLU + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( Min( DS ,RMSe ) - ( DS - MLU ) ) ) * ( MLU + ( ( RMSe * DS ) + MUC ) ) ),MUC ) ) - ( ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) + ( Min( ( ( Max( CS,MUR ) - MUM ) + MUR ) ,CS ) - RRSe ) ) ) )", "obj1": 0.6163265306122448, "obj2": 0.26803392207986054}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * ( ( RRS + ( ACS + MRS ) ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( CS ,CS ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.20204081632653062, "obj2": 0.7695382012586768}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8321540144904129}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( Min( Max( ( Min( MUM ,( ( RRSe / MLU ) + ( Min( RCSe ,MUM ) + Min( MLU ,RRSe ) ) ) ) * MUC ),RRSe ) ,( ( RMSe * ( RCSe * MLU ) ) / DS ) ),( ( MUM - RMSe ) / ( CS * ( Min( ( DS / MUC ) ,( ( ( MUC * MUR ) - RMSe ) * ( ( MUC - RMSe ) / MUC ) ) ) + MUR ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7172970877246568}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( DDR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MUR + MUM ) ) / DS ) ) )", "obj1": 0.7224489795918367, "obj2": 0.15091962478353013}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * ( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ) )", "obj1": 0.6714285714285714, "obj2": 0.22612812872103724}, {"determining": "( ( AMS * PN ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "( ( ( MUC * MUM ) / ( ( RMSe + MUR ) / ( RMSe - MUC ) ) ) - ( DS - ( ( ( ( MUM - ( ( MUM * MUR ) / RMSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7207915086526647}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,( RMSe * ( MLU + CS ) ) ) ) ) ),Max( Min( ( ( ( CS * CS ) * Min( MUM ,( MUR - MLU ) ) ) / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.08163265306122448, "obj2": 0.8933480969824823}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU - PN ) ,BR ) ) / FirstVNF_Mem )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + RMSe ) ) - Min( ( MUR * DS ) ,( ( CS + ( ( MUC + MLU ) - ( RCSe - RRSe ) ) ) + RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( Min( DS ,( RRSe - DS ) ) * ( ( MUC + RMSe ) / ( RMSe - MUC ) ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.748302548957801}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - ( ( DDR + FirstVNF_CPU ) - ( BR - RRS ) ) ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( ( DS - MUC ) / MUR ) - ( ( CS - ( Min( MUR ,( RRSe / ( ( DS - MUC ) / ( MUM + DS ) ) ) ) - RCSe ) ) - MUM ) )", "obj1": 0.5204081632653061, "obj2": 0.3383725974219043}, {"determining": "( ( PN - ( ( ARS / PN ) * ( Max( CRS,FirstVNF_CPU ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) ,( RMSe + ( Max( ( DS - MUM ),MUR ) + ( MUM * ( MUR / ( MLU + Min( MUR ,RMSe ) ) ) ) ) ) )", "obj1": 0.610204081632653, "obj2": 0.28198543733968595}, {"determining": "( Min( ARS ,( AMS + ACS ) ) / ( ( ( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + AMS ) ) * Const ) ) - DDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( ( ( DS - CS ) - MUR ),CS ) / ( ( ( ( MLU - ( ( MUC / Min( CS ,MUM ) ) + RCSe ) ) * Min( RCSe ,CS ) ) - MLU ) - MUC ) )", "obj1": 0.9714285714285714, "obj2": 0.012238172698020206}, {"determining": "( FirstVNF_RAM_Server * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( ( ( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) + ( MUR - RRSe ) ),MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8580249015663243}, {"determining": "( ( ( ( RRS + MDR ) * AMS ) - Max( Const,RRS ) ) * Max( Const,BR ) )", "choosing": "( Max( ( ( Min( MUM ,MUM ) / MUR ) * MUR ),RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.7857142857142857, "obj2": 0.10423884421050618}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,( RMSe * ( MLU + CS ) ) ) ) ) ),Max( Min( ( ( ( CS * CS ) * Min( MUM ,( MUR - MLU ) ) ) / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8836436297635926}, {"determining": "( ( AMS - ( ( RRS - FirstVNF_CPU ) * ARS ) ) / Min( FirstVNF_RAM ,Min( ARS ,( ACS * ( DDR * Min( ( ARS - ( DDR - FirstVNF_CPU_Server ) ) ,CRS ) ) ) ) ) )", "choosing": "( MUR * ( Min( ( ( MUM - ( ( ( RRSe / MUR ) * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) ,MUR ) + ( RRSe - MUR ) ) )", "obj1": 0.5, "obj2": 0.3581348118199062}, {"determining": "( ( AMS - Max( FirstVNF_Mem,( ( FirstVNF_Mem * ARS ) * ( ( PN - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( FirstVNF_Mem * PN ) ) ) + Const ) ) ) ) / Min( FirstVNF_Mem ,MDR ) )", "choosing": "( Max( ( ( ( MUC / MUR ) / MUR ) / MUM ),Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUC ,( ( Max( ( MUC * Max( CS,RCSe ) ),( RMSe + DS ) ) + Max( ( MUC + DS ),MUR ) ) - MUR ) ) ,RMSe ) )", "obj1": 0.4326530612244898, "obj2": 0.40525309416291927}, {"determining": "( ( FirstVNF_Mem - CRS ) * Max( Const,( RRS * ( ( RRS + ( MRS + ACS ) ) * ( Max( FirstVNF_CPU_Server,Min( MRS ,( BR * Const ) ) ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( CS ,CS ) + Max( RRSe,MUM ) ) + Max( ( ( Min( ( MLU + ( RRSe / Min( CS ,DS ) ) ) ,RCSe ) / RMSe ) - CS ),( MUM / MLU ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8110369612511952}, {"determining": "( ( Const + ( Max( CRS,MDR ) * ( MRS + ( RRS - ( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( Min( Max( MRS,Min( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),DDR ) ,( FirstVNF_CPU / Min( RRS ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) - ACS ) ,Max( ( ( Max( FirstVNF_CPU_Server,ACS ) - RRS ) / ARS ),AMS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( RMSe ,( ( MUR + RCSe ) - Min( Min( ( ( MLU / MUM ) / MUM ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Max( MUR,MUM ) ) / DS ) ,( RMSe + ( CS / Min( MLU ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.9591836734693877, "obj2": 0.017192892409302152}, {"determining": "( ACS / Max( BR,( CRS + ( Min( MDR ,DDR ) * Const ) ) ) )", "choosing": "( ( CS - MUC ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8021734073188833}, {"determining": "Min( Min( Min( Max( ( ARS - FirstVNF_RAM_Server ),( ( FirstVNF_CPU - Const ) + ACS ) ) ,( ACS / ( Min( MRS ,AMS ) / FirstVNF_CPU_Server ) ) ) ,BR ) ,( FirstVNF_CPU * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( CS / MLU ),( Max( ( Min( ( MUC / MLU ) ,RMSe ) + RMSe ),MUM ) - Max( ( MUC - MLU ),Max( MUC,DS ) ) ) ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + MUC ) + RRSe ) ,MLU ) ) ,DS ) ,Max( RRSe,( Min( MUM ,( ( RRSe / ( MUC + CS ) ) * MLU ) ) * MUC ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7544423640090209}, {"determining": "( ( FirstVNF_RAM_Server - Max( AMS,( ARS * ARS ) ) ) * Max( ( Min( MRS ,ARS ) * ARS ),ARS ) )", "choosing": "( ( Min( CS ,CS ) + Max( ( RMSe + ( MUM - DS ) ),MUM ) ) + Max( ( ( RRSe / Max( MLU,( MLU + CS ) ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7813411576934753}, {"determining": "( ( Const / Min( ACS ,( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,ARS ) ) ) ) * ( PN - Max( ( CRS / FirstVNF_Mem ),AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( RCSe - Min( Min( Min( ( CS * MUC ) ,( MUR + MUC ) ) ,MUC ) ,CS ) ) ) ),( ( ( ( MUM * MUM ) * MUC ) * ( RCSe / MUR ) ) - CS ) )", "obj1": 0.7448979591836735, "obj2": 0.12269990469959279}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( RRSe / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.42857142857142855, "obj2": 0.42199554973519854}, {"determining": "Min( Max( ( ( Max( Min( AMS ,FirstVNF_RAM ),MRS ) * FirstVNF_CPU_Server ) * ACS ),( MDR + ( FirstVNF_RAM * ARS ) ) ) ,Min( ( ( DDR - FirstVNF_CPU_Server ) - Min( PN ,RRS ) ) ,Min( DDR ,DDR ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( ( DS * MUC ) / Min( MUC ,CS ) ) - MLU ) ) - Min( ( DS * MUR ) ,( MUR / DS ) ) ) - Min( ( RCSe / CS ) ,( Min( RCSe ,( ( Max( Min( RCSe ,CS ),MLU ) * DS ) + Min( CS ,DS ) ) ) + Min( MLU ,MUM ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.03129395782837683}, {"determining": "( ( AMS * ACS ) / Max( ( ( ACS - ACS ) * ( PN - FirstVNF_RAM_Server ) ),BR ) )", "choosing": "( ( ( ( ( DS * CS ) / MUR ) / ( MUR / MUC ) ) + MUM ) - ( DS - ( CS - ( MUM - ( RRSe * CS ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7600334505949903}, {"determining": "( ( AMS - ( ( FirstVNF_CPU / RRS ) - MDR ) ) / Max( ( ACS - Const ),( Max( Max( ( FirstVNF_Mem - Min( ( MDR / ACS ) ,FirstVNF_Mem_Server ) ),Min( ( Const + FirstVNF_CPU ) ,( MRS * ( FirstVNF_Mem_Server + MRS ) ) ) ),FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR * ( MUR - ( Max( RCSe,Max( Min( DS ,( MUR + RRSe ) ),Min( RMSe ,MUM ) ) ) - ( MLU - MUR ) ) ) ) - ( ( Max( CS,Min( ( ( RCSe / RRSe ) + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( RMSe + ( ( RMSe * DS ) + RRSe ) ) ),( MLU - ( ( MUR + RRSe ) / DS ) ) ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM * ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5122448979591837, "obj2": 0.3473205021030432}, {"determining": "( ( FirstVNF_Mem + Max( Min( ( ( ( RRS / ACS ) + Max( FirstVNF_RAM_Server,Const ) ) / BR ) ,( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( ( FirstVNF_CPU_Server - Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( ( DS - MUC ) / RCSe ) )", "obj1": 0.5102040816326531, "obj2": 0.3512071272313902}, {"determining": "( ( AMS - Max( ( RRS - FirstVNF_CPU ),ARS ) ) / Min( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( CS - MUC ) / MUR ) - ( ( ( ( DS + DS ) - ( Max( ( ( RCSe - MUR ) + DS ),RMSe ) / RCSe ) ) + DS ) / MUC ) )", "obj1": 0.25510204081632654, "obj2": 0.6989410278280859}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.41836734693877553, "obj2": 0.42495376958820347}, {"determining": "( ( Max( ( RRS - ( FirstVNF_RAM * DDR ) ),( ACS * MDR ) ) - AMS ) / Min( ACS ,Min( ARS ,( ACS * ( DDR - ( ACS * ACS ) ) ) ) ) )", "choosing": "( ( ( RCSe - MUC ) / MUR ) - ( ( CS - ( ( ( Max( DS,MUC ) / MLU ) + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.25510204081632654, "obj2": 0.6989410278280859}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( ARS / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( MUM - DS ) / ( CS * RRSe ) ),( ( RRSe / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.7408163265306122, "obj2": 0.12320032975630185}, {"determining": "( ( RRS * Const ) * ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) + ( MUR - DS ) ) ,( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8396548149599433}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU / RRS ),ARS ) ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,( Min( ( PN - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( CS ,Min( ( MLU + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( RMSe + ( ( RMSe * DS ) + MUC ) ) ),MUC ) ) - ( ( ( ( MUR / ( MUR + MUM ) ) / DS ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) + ( MUR - RRSe ) ) ) )", "obj1": 0.40408163265306124, "obj2": 0.430919763392486}, {"determining": "Min( ( FirstVNF_Mem + ( ARS / FirstVNF_Mem_Server ) ) ,Min( ( Min( PN ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) - Max( ( RRS + MDR ),( Max( ( Max( DDR,BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / ( MUM + CS ) ) - MLU ) ,( MUR * MUR ) ) - Min( Min( MUC ,( MUR + RCSe ) ) ,( DS - MUR ) ) ) - RCSe )", "obj1": 0.9795918367346939, "obj2": 0.008129833702884861}, {"determining": "( ACS / Max( BR,( CRS + ( Max( CRS,PN ) * PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RCSe ) * RMSe ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS - MUR ) / RCSe ) ) - ( ( MLU + Max( RCSe,MUM ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.13877551020408163, "obj2": 0.84382541227652}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "Min( ( Min( FirstVNF_CPU ,( ACS - ACS ) ) * ( ( FirstVNF_Mem + ( ( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( DDR + MDR ) / ( FirstVNF_Mem_Server + MRS ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,( ( MLU * RMSe ) - MLU ) ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / RMSe ) ,( DS - MUR ) ) ) - Min( ( ( ( MUR * Min( ( CS * ( CS - RCSe ) ) ,Max( CS,DS ) ) ) - Min( MLU ,RRSe ) ) / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ) )", "obj1": 0.9448979591836735, "obj2": 0.023752196977063933}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / Max( Max( PN,RRS ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( ( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4304757494193336}, {"determining": "( ( PN - ( ( RRS + ( ( AMS - Max( FirstVNF_RAM_Server,( ACS + AMS ) ) ) * Const ) ) * ( Min( ( Max( DDR,BR ) * ( Const / BR ) ) ,Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( Const / MRS ) )", "choosing": "( ( Max( Min( MLU ,Min( MUC ,RCSe ) ),DS ) * ( ( ( RMSe - DS ) / MUM ) * Max( RRSe,Max( ( DS / DS ),( MUC + RMSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0034616397171632765}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "Max( ( ( Max( RCSe,( ( ( MUR - MUM ) / DS ) + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( DS / CS ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ),( CS + RCSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8329880263221716}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ( ( ( FirstVNF_CPU * BR ) - PN ) * FirstVNF_CPU ) ) ) - Const ) / BR ) )", "choosing": "Max( Min( ( Max( RMSe,( MUR + DS ) ) / DS ) ,( RMSe - CS ) ),( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( Max( Max( RCSe,RMSe ),( RCSe - ( DS - RCSe ) ) ),MUM ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8646387774221315}, {"determining": "( ( AMS - Min( Min( PN ,AMS ) ,FirstVNF_CPU ) ) / ( Max( ( ACS * Min( Const ,BR ) ),ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,Min( RMSe ,MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( MUC - ( ( ( ( ( RMSe * RCSe ) - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3787061548462769}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( Min( ( Min( FirstVNF_CPU ,PN ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( Const,DDR ) ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( MUC * ( RCSe / MUR ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.881725731384579}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,( ACS / Const ) ) * ( ( BR * FirstVNF_Mem_Server ) / RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_CPU_Server ) - Min( PN ,FirstVNF_CPU ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( ( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03486417169314258}, {"determining": "( Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ( CRS + ( MDR - ARS ) ) + Max( Const,FirstVNF_Mem ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( CS / Max( Min( MUR ,( ( MUR / RMSe ) - ( MUM - ( CS + MUC ) ) ) ),( CS * DS ) ) ) + Min( MUC ,( CS - Min( ( RMSe * ( MLU + CS ) ) ,( MUR * RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( Max( CS,( CS / RCSe ) ) ,MUM ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.07959183673469387, "obj2": 0.901624967856927}, {"determining": "( ( AMS - Max( ARS,( ( ( ACS + MRS ) * Min( ( ACS * Const ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU_Server ,AMS ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( CS,MUM ) ) + Max( ( ( MUM / DS ) - CS ),( MUM / DS ) ) ) / MUM ) / ( RRSe + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( Min( Min( RRSe ,RCSe ) ,Max( MUC,RCSe ) ) - RRSe ) ) ) )", "obj1": 0.4020408163265306, "obj2": 0.44127131061134617}, {"determining": "( ( FirstVNF_CPU - Max( ARS,( ( DDR * ( AMS / ( Min( CRS ,FirstVNF_RAM ) + PN ) ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - Max( ( RMSe + MLU ),RRSe ) ) * MUR ) + ( MUR - RRSe ) ) ) - ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / ( Max( MUM,RMSe ) / RCSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.3751066143799092}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( ( Max( MRS,RRS ) - BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( MRS / Const ) )", "choosing": "( MUR * ( ( Min( ( MUM - ( ( DS * MUR ) / RCSe ) ) ,( DS + RMSe ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9857142857142858, "obj2": 0.005628862220294025}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) / MUM ) / ( RRSe + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.3979591836734694, "obj2": 0.4429361181930074}, {"determining": "( ( Max( PN,FirstVNF_RAM_Server ) / MDR ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( ( ( MUM - DS ) / ( MUM * RRSe ) ) / CS ) ) ),Max( Min( ( ( MUM * ( ( RCSe / MUC ) + DS ) ) / RMSe ) ,CS ),( CS - MUC ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8736250661894744}, {"determining": "Min( ( ( MDR - FirstVNF_RAM_Server ) + ( ( ARS - AMS ) + Const ) ) ,Max( MRS,Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * RRSe ) - ( MUC / ( CS * MLU ) ) )", "obj1": 0.9040816326530612, "obj2": 0.043893244040151304}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * ( ( FirstVNF_Mem / MDR ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC - MUM ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7813411576934753}, {"determining": "( Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) * Const ) ) ) * FirstVNF_Mem_Server ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( DDR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( ( DS - MLU ) - Min( DS ,RMSe ) ) + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MUR + MUM ) ) / DS ) ) )", "obj1": 0.7204081632653061, "obj2": 0.15122808282093653}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( RRSe / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.42653061224489797, "obj2": 0.4226994059105814}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_Mem_Server ) ),MDR ) * ( AMS + AMS ) ) ) - ( BR * ( FirstVNF_RAM - MDR ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( RRSe,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / Max( DS,RRSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9163265306122449, "obj2": 0.037870547323189195}, {"determining": "( ( ( Max( Max( FirstVNF_CPU,ACS ),FirstVNF_CPU ) / FirstVNF_CPU ) - ( AMS * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem,( RRS * ( ( RRS + ( ACS + MRS ) ) * ( ( Const - ( DDR - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( CS ,CS ) + Max( RRSe,MUM ) ) + Max( ( ( ( Min( Min( ( RCSe * MUM ) ,( MUR / MUR ) ) ,RMSe ) / ( MUC * MUC ) ) / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8110369612511952}, {"determining": "Min( ( FirstVNF_Mem * MDR ) ,( ( Min( PN ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * Min( DDR ,FirstVNF_CPU_Server ) ) - Max( DDR,DDR ) ) )", "choosing": "( ( ( ( ( ( ( MUM / ( CS + DS ) ) / ( ( MUC + RMSe ) + MUM ) ) / Min( MUR ,MLU ) ) - MLU ) / ( MUR * MUR ) ) - Min( Min( DS ,( MUR + RCSe ) ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + Min( ( RCSe + RCSe ) ,MUC ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.04664455471800032}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( FirstVNF_Mem * ARS ) / ( FirstVNF_Mem_Server + MRS ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( Max( MUC,MUC ) - Min( ( RMSe / ( ( RCSe / MUC ) * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ) )", "obj1": 0.9530612244897959, "obj2": 0.02043848563921583}, {"determining": "Min( Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) ,Max( RRS,( ( FirstVNF_Mem + ( Max( BR,( FirstVNF_CPU * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_CPU * ( MDR * ARS ) ) ) ) - ( BR * RRS ) ) ) )", "choosing": "( ( Min( ( RMSe + RMSe ) ,( MUR * MUR ) ) - Min( ( DS / MUR ) ,( DS - MUR ) ) ) - ( Max( ( Max( MLU,Min( MUC ,MUC ) ) + CS ),( ( RCSe / ( ( MLU * RMSe ) * CS ) ) + Min( DS ,MUC ) ) ) + ( MLU - ( RCSe * RMSe ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.0419329768748851}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS / ACS ) ),( ( FirstVNF_Mem + ( Min( RRS ,FirstVNF_CPU_Server ) * ( AMS + AMS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( DS,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / ( ( MUR / DS ) + MUR ) ) ) ) ) / ( RRSe * MUM ) )", "obj1": 0.9122448979591836, "obj2": 0.03974987501528835}, {"determining": "Min( Max( Min( ( ACS - ACS ) ,( ACS - FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ( Max( BR,( ( DDR / FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,( MUM * ( ( DS / MUC ) - DS ) ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.936734693877551, "obj2": 0.02752135264321491}], "30": [{"determining": "( ( ( ( ( RRS + FirstVNF_RAM_Server ) * DDR ) - FirstVNF_RAM_Server ) - ( ( Max( Max( ( FirstVNF_CPU * ( DDR - FirstVNF_RAM_Server ) ),BR ),Const ) / FirstVNF_Mem ) * ( ARS * Max( Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ),Min( CRS ,FirstVNF_RAM_Server ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( RMSe + MUC ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Max( MUC,MUC ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Min( ( RRS - PN ) ,BR ) ) / FirstVNF_Mem )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + RMSe ) ) - Min( ( MUR * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ,( ( CS + ( ( MUC + MLU ) - ( RCSe - RRSe ) ) ) + RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( Min( DS ,( RRSe - DS ) ) * ( ( MUC + RMSe ) / ( RMSe - MUC ) ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ARS / MRS ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( RMSe * ( MLU + CS ) ) ,( MUR + RCSe ) ) ) ) ),( RCSe + ( ( MUM - ( DS / ( CS / ( Max( RRSe,MUR ) * DS ) ) ) ) + Max( ( MUR * DS ),( ( RRSe / Max( RRSe,CS ) ) + RMSe ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9074694900194289}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( DDR + BR ) * ( Const / BR ) )", "choosing": "( ( MUR + ( ( MUR + ( ( ( ( DS * MLU ) - MLU ) / ( RCSe / MUC ) ) * CS ) ) - Min( RCSe ,Min( ( ( MUM + DS ) + DS ) ,RMSe ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MLU ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.7877551020408163, "obj2": 0.10056771083972497}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * Min( ( RRS * Const ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) / MUM ) / ( RRSe + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5029286765900902}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "( CS + Max( ( ( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) / RRSe ) - CS ),( ( MUR / ( MUR + ( DS / CS ) ) ) / DS ) ) )", "obj1": 0.336734693877551, "obj2": 0.535392820737195}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( ( ( ARS / PN ) * ( Max( CRS,FirstVNF_CPU ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ),( RRS * Const ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUM * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.22244897959183674, "obj2": 0.689169904487986}, {"determining": "( ( AMS - ARS ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,( ( Min( ( MUR + MUR ) ,( MLU + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - Min( ( ( Min( CS ,CS ) + Max( RRSe,MUM ) ) - Min( ( MLU + CS ) ,( RRSe - RCSe ) ) ) ,DS ) ) ) ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.32040816326530613, "obj2": 0.5839949208815991}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU / RRS ),ARS ) ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,( ( MUM - ( RRSe / ( MUM * MUR ) ) ) - ( ( MLU + CS ) * RMSe ) ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.5591836734693878, "obj2": 0.3058938812269257}, {"determining": "( ( AMS - Max( ( Max( Min( MDR ,FirstVNF_CPU ),DDR ) * ( PN / FirstVNF_Mem ) ),Const ) ) / ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( ( MLU + ( ( RCSe * DS ) * RCSe ) ) / MUC ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - RRSe ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( RMSe / MUM ) * MUM ) ) - MUR ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.679292893601322}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * Min( ( RRS * Const ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) / MUM ) / ( RRSe + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.47216786001709216}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.26326530612244897, "obj2": 0.635118734034016}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU - PN ) ,BR ) ) / FirstVNF_Mem )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + RMSe ) ) - Min( ( MUR * DS ) ,( ( CS + ( ( MUC + MLU ) - ( RCSe - RRSe ) ) ) + RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( Min( DS ,( RRSe - DS ) ) * ( ( MUC + RMSe ) / ( RMSe - MUC ) ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.748302548957801}, {"determining": "( ( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) ) * Max( Const,( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( ARS,BR ) - Min( RRS ,BR ) ) ) ) ) / ( ( RRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) / Const ) ) ) )", "choosing": "( ( ( DS / MUC ) / MUR ) - ( ( MUR - MLU ) / ( MUC - RCSe ) ) )", "obj1": 0.5265306122448979, "obj2": 0.3359013030535761}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( Min( ( MUR + ( ( RMSe * RCSe ) + ( ( RCSe + RRSe ) * RRSe ) ) ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RMSe - RRSe ) ) ) - ( MUC - ( ( ( ( Max( ( RMSe * CS ),( MUC / MUC ) ) - ( DS / ( RMSe + RMSe ) ) ) - ( RRSe * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2938775510204082, "obj2": 0.6034281459535298}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( ( RRS + Min( FirstVNF_Mem_Server ,AMS ) ) / Const ) ) ) )", "choosing": "( ( ( DS - MUC ) / ( ( RRSe / MUC ) - Max( ( RRSe / CS ),MLU ) ) ) - ( ( CS - ( ( MUM + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.5836734693877551, "obj2": 0.28916838881698004}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.2836734693877551, "obj2": 0.6147487533079946}, {"determining": "( ( ( ACS * BR ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( MRS * FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( ( MUM - CS ) / ( RCSe - ( RMSe + ( RRSe + Max( RRSe,MUM ) ) ) ) ) / Min( ( RMSe + ( RRSe - MUC ) ) ,Max( DS,DS ) ) ),( ( RRSe * MUC ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ) )", "obj1": 0.7142857142857143, "obj2": 0.1948619238291775}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6857142857142857, "obj2": 0.21813912183101744}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( DDR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS / ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( ( MUM * ( ( Min( RMSe ,MUC ) - MUC ) + DS ) ) / RMSe ) ,CS ),( CS - MUC ) ) )", "obj1": 0.7183673469387755, "obj2": 0.1537699800924813}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,BR ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,( ( MUM - ( RRSe / ( MUM * MUR ) ) ) - ( ( MLU + CS ) * RMSe ) ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6244897959183674, "obj2": 0.26298068476214587}, {"determining": "( ( AMS - Max( ARS,( ( ( ( MDR / ACS ) * ACS ) * FirstVNF_CPU ) * MDR ) ) ) / Min( FirstVNF_CPU ,( FirstVNF_CPU + Const ) ) )", "choosing": "( ( Min( ( MUM + MUR ) ,( MUR + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( Min( RRSe ,( RRSe * MLU ) ) * ( ( RMSe * RCSe ) / RCSe ) ) - ( ( CS + RMSe ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.45918367346938777, "obj2": 0.3863778089801303}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( MDR + ACS ) ) ,Min( ( Min( PN ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM * MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( Min( DS ,( MUR + Min( MUC ,RMSe ) ) ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + ( ( RCSe + RCSe ) + MUC ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.0511438476776511}, {"determining": "( Max( ( FirstVNF_CPU / Const ),AMS ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( ( Min( ( MUR + ( ( RMSe * RCSe ) + ( ( RCSe + RRSe ) * RRSe ) ) ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RMSe - ( ( MLU / RMSe ) - MUC ) ) ) ) - ( MUC - ( ( ( ( Max( ( RMSe * CS ),( MUC / MUC ) ) - ( DS / ( RMSe + RMSe ) ) ) - ( RRSe * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.43673469387755104, "obj2": 0.40267783867325646}, {"determining": "( ( ( Max( FirstVNF_RAM,( Min( FirstVNF_RAM_Server ,CRS ) * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) * AMS ) ) * Max( ( ( ACS * FirstVNF_Mem_Server ) - AMS ),( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * ( ( ( RRSe / CS ) - MUR ) / Min( CS ,RMSe ) ) ) ) ,CS ) )", "obj1": 0.6653061224489796, "obj2": 0.22859323009126412}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server * ( ARS * ARS ) ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( DDR + ACS ) ) )", "choosing": "( ( ( RRSe - MUM ) + Min( RMSe ,Max( ( ( CS - MUC ) / ( MUC / Max( DS,MUC ) ) ),Max( ( RMSe * MUC ),MLU ) ) ) ) + ( ( Min( RCSe ,( ( ( RMSe * ( MLU - CS ) ) / Min( CS ,DS ) ) - MLU ) ) * Max( CS,MUR ) ) + RCSe ) )", "obj1": 0.1836734693877551, "obj2": 0.7726397780300505}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,BR ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( CS ,Min( ( MLU + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( RMSe + ( ( RMSe * DS ) + MUC ) ) ),MUC ) ) - ( ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) + ( MUR - RRSe ) ) ) )", "obj1": 0.6428571428571429, "obj2": 0.242506160393947}, {"determining": "( ( AMS - ( ACS * FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( MRS,BR ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( Min( CRS ,FirstVNF_RAM ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + Min( RCSe ,RMSe ) ) - ( DS - ( ( ( ( MUM - Max( ( MUR + RCSe ),MUM ) ) - ( ( RMSe + CS ) + Max( CS,MUR ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.6408163265306123, "obj2": 0.24375180789906647}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * ( ( ( Min( MDR ,PN ) + ( AMS * ( Const - DDR ) ) ) * RRS ) - ( FirstVNF_Mem * ( Max( FirstVNF_RAM_Server,( PN * FirstVNF_RAM_Server ) ) / DDR ) ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( ( CS + RMSe ) / RCSe ) ) ,( ( MUC * MUC ) + ( Min( MUR ,MUM ) * ( ( RRSe + CS ) + DS ) ) ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.39387755102040817, "obj2": 0.44895105044785716}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( MUC ,Min( ( MLU + ( RRSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( ( ( MLU / MUC ) / MUM ) - ( ( RMSe * RCSe ) + ( RCSe * CS ) ) ) ),MUC ) ) - ( ( ( ( ( MLU + DS ) * RMSe ) - ( MUM - ( ( DS * MUM ) / RCSe ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.6061224489795919, "obj2": 0.287388870775285}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * Max( Max( DDR,FirstVNF_Mem_Server ),Const ) ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,( ( Min( ( MUR + MUR ) ,( MLU + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - Min( ( ( Min( CS ,CS ) + Max( RRSe,MUM ) ) - Min( ( MLU + CS ) ,( RMSe - RCSe ) ) ) ,DS ) ) ) ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4959183673469388, "obj2": 0.36474011248476845}, {"determining": "( ( AMS + Max( ( FirstVNF_CPU / RRS ),ARS ) ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - AMS ) ) * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( CS ,Min( ( MLU + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( Min( DS ,RMSe ) - ( DS - MLU ) ) ) * ( MLU + ( ( RMSe * DS ) + MUC ) ) ),MUC ) ) - ( ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) + ( Min( ( ( Max( CS,MUR ) - MUM ) + MUR ) ,CS ) - RRSe ) ) ) )", "obj1": 0.6163265306122448, "obj2": 0.26803392207986054}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.2, "obj2": 0.7640978643605946}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.7306122448979592, "obj2": 0.12965138027693368}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( MUR / ( DS - MLU ) ) )", "obj1": 0.7693877551020408, "obj2": 0.10951570555156834}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_CPU / ( Min( Max( Const,Min( AMS ,MDR ) ) ,MRS ) + ( Min( FirstVNF_CPU_Server ,CRS ) / DDR ) ) ) ) + ( ( DDR + PN ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUC ) / ( ( MUC / Min( DS ,MUC ) ) * RCSe ) ) / ( MUC - ( RCSe - CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8321540144904129}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( DDR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MUR + MUM ) ) / DS ) ) )", "obj1": 0.7224489795918367, "obj2": 0.15091962478353013}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * ( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ) )", "obj1": 0.6714285714285714, "obj2": 0.22612812872103724}, {"determining": "( ( Max( Min( PN ,PN ),( ( ( ( ( MRS / FirstVNF_RAM_Server ) * CRS ) + DDR ) / FirstVNF_CPU_Server ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ) ) + FirstVNF_Mem ) * ( Const / ( ( FirstVNF_Mem / FirstVNF_RAM ) + PN ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( MUR + RMSe ) ) - Min( ( MUR * DS ) ,( ( RCSe * RCSe ) - RRSe ) ) ) - ( DS - ( ( Min( RRSe ,RCSe ) * ( ( MUC - ( MUR - Max( MUC,DS ) ) ) - ( Max( CS,RMSe ) * Max( MUR,CS ) ) ) ) + ( MUR - RRSe ) ) ) )", "obj1": 0.47551020408163264, "obj2": 0.36724667691453666}, {"determining": "( ( PN - ( ( ARS / PN ) * ( Max( CRS,FirstVNF_CPU ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) )", "choosing": "Min( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) ,( RMSe + ( Max( ( DS - MUM ),MUR ) + ( MUM * ( MUR / ( MLU + Min( MUR ,RMSe ) ) ) ) ) ) )", "obj1": 0.610204081632653, "obj2": 0.28198543733968595}, {"determining": "( Min( ARS ,( AMS + ACS ) ) / ( ( ( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + AMS ) ) * Const ) ) - DDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( ( ( DS - CS ) - MUR ),CS ) / ( ( ( ( MLU - ( ( MUC / Min( CS ,MUM ) ) + RCSe ) ) * Min( RCSe ,CS ) ) - MLU ) - MUC ) )", "obj1": 0.9714285714285714, "obj2": 0.012238172698020206}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( MUR / ( DS - MLU ) ) )", "obj1": 0.7571428571428571, "obj2": 0.11572774783030657}, {"determining": "( ( AMS - Max( FirstVNF_Mem,( ( FirstVNF_Mem * ARS ) * ( ( PN - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( FirstVNF_Mem * PN ) ) ) + Const ) ) ) ) / Min( FirstVNF_Mem ,MDR ) )", "choosing": "( Max( ( ( ( MUC / MUR ) / MUR ) / MUM ),Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUC ,( ( Max( ( MUC * Max( CS,RCSe ) ),( RMSe + DS ) ) + Max( ( MUC + DS ),MUR ) ) - MUR ) ) ,RMSe ) )", "obj1": 0.4326530612244898, "obj2": 0.40525309416291927}, {"determining": "( ( ( Max( Max( FirstVNF_CPU,ACS ),FirstVNF_CPU ) / FirstVNF_CPU ) - ( AMS * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem,( RRS * ( ( RRS + ( ACS + MRS ) ) * ( ( Const - ( DDR - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( CS ,CS ) + Max( RRSe,MUM ) ) + Max( ( ( ( Min( Min( ( RCSe * MUM ) ,( MUR / MUR ) ) ,RMSe ) / ( MUC * MUC ) ) / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8110369612511952}, {"determining": "( ( ( ( RRS + MDR ) * AMS ) - Max( Const,RRS ) ) * Max( Const,BR ) )", "choosing": "( Max( ( ( Min( MUM ,MUM ) / MUR ) * MUR ),RCSe ) / Min( MLU ,MUR ) )", "obj1": 0.7857142857142857, "obj2": 0.10423884421050618}, {"determining": "( ( Const + ( Max( CRS,MDR ) * ( MRS + ( RRS - ( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( Min( Max( MRS,Min( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),DDR ) ,( FirstVNF_CPU / Min( RRS ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) - ACS ) ,Max( ( ( Max( FirstVNF_CPU_Server,ACS ) - RRS ) / ARS ),AMS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( RMSe ,( ( MUR + RCSe ) - Min( Min( ( ( MLU / MUM ) / MUM ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Max( MUR,MUM ) ) / DS ) ,( RMSe + ( CS / Min( MLU ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.9591836734693877, "obj2": 0.017192892409302152}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "( ACS / Max( BR,( CRS + ( Min( MDR ,DDR ) * Const ) ) ) )", "choosing": "( ( CS - MUC ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8021734073188833}, {"determining": "Min( Min( Min( Max( ( ARS - FirstVNF_RAM_Server ),( ( FirstVNF_CPU - Const ) + ACS ) ) ,( ACS / ( Min( MRS ,AMS ) / FirstVNF_CPU_Server ) ) ) ,BR ) ,( FirstVNF_CPU * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( CS / MLU ),( Max( ( Min( ( MUC / MLU ) ,RMSe ) + RMSe ),MUM ) - Max( ( MUC - MLU ),Max( MUC,DS ) ) ) ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + MUC ) + RRSe ) ,MLU ) ) ,DS ) ,Max( RRSe,( Min( MUM ,( ( RRSe / ( MUC + CS ) ) * MLU ) ) * MUC ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7544423640090209}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * ( ( FirstVNF_Mem / MDR ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC - MUM ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7813411576934753}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( RRSe / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.42857142857142855, "obj2": 0.42199554973519854}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( ARS / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( MUM - DS ) / ( CS * RRSe ) ),( ( RRSe / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.7428571428571429, "obj2": 0.1223975935114957}, {"determining": "Min( Max( ( ( Max( Min( AMS ,FirstVNF_RAM ),MRS ) * FirstVNF_CPU_Server ) * ACS ),( MDR + ( FirstVNF_RAM * ARS ) ) ) ,Min( ( ( DDR - FirstVNF_CPU_Server ) - Min( PN ,RRS ) ) ,Min( DDR ,DDR ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( ( DS * MUC ) / Min( MUC ,CS ) ) - MLU ) ) - Min( ( DS * MUR ) ,( MUR / DS ) ) ) - Min( ( RCSe / CS ) ,( Min( RCSe ,( ( Max( Min( RCSe ,CS ),MLU ) * DS ) + Min( CS ,DS ) ) ) + Min( MLU ,MUM ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.03129395782837683}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU / RRS ),ARS ) ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) * Max( Max( DDR,BR ),Const ) ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( CS ,Min( ( MLU + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( RMSe + ( ( RMSe * DS ) + MUC ) ) ),MUC ) ) - ( ( Min( DS ,MUM ) / ( ( ( ( CS / DS ) + RRSe ) + RRSe ) * ( CS * MUR ) ) ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5122448979591837, "obj2": 0.34446591146430106}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - ( ( DDR + FirstVNF_CPU ) - ( BR - RRS ) ) ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( ( DS - MUC ) / MUR ) - ( ( CS - ( Min( MUR ,( RRSe / ( ( DS - MUC ) / ( MUM + DS ) ) ) ) - RCSe ) ) - MUM ) )", "obj1": 0.5204081632653061, "obj2": 0.3383725974219043}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU / RRS ),ARS ) ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,( Min( ( PN - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( CS ,Min( ( MLU + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( RMSe + ( ( RMSe * DS ) + MUC ) ) ),MUC ) ) - ( ( ( ( MUR / ( MUR + MUM ) ) / DS ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) + ( MUR - RRSe ) ) ) )", "obj1": 0.40408163265306124, "obj2": 0.430919763392486}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.41836734693877553, "obj2": 0.42495376958820347}, {"determining": "Min( ( FirstVNF_Mem * MDR ) ,( ( Min( PN ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * Min( DDR ,FirstVNF_CPU_Server ) ) - Max( DDR,DDR ) ) )", "choosing": "( ( ( ( ( ( ( MUM / ( CS + DS ) ) / ( ( MUC + RMSe ) + MUM ) ) / Min( MUR ,MLU ) ) - MLU ) / ( MUR * MUR ) ) - Min( Min( DS ,( MUR + RCSe ) ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + Min( ( RCSe + RCSe ) ,MUC ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.04664455471800032}, {"determining": "Min( Max( Min( ( ACS - ACS ) ,( ACS - FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ( Max( BR,( ( DDR / FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,( MUM * ( ( DS / MUC ) - DS ) ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.936734693877551, "obj2": 0.02752135264321491}, {"determining": "Min( ( FirstVNF_Mem + ( ARS / FirstVNF_Mem_Server ) ) ,Min( ( Min( PN ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) - Max( ( RRS + MDR ),( Max( ( Max( DDR,BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / ( MUM + CS ) ) - MLU ) ,( MUR * MUR ) ) - Min( Min( MUC ,( MUR + RCSe ) ) ,( DS - MUR ) ) ) - RCSe )", "obj1": 0.9795918367346939, "obj2": 0.008129833702884861}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( FirstVNF_Mem * ARS ) / ( FirstVNF_Mem_Server + MRS ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( Max( MUC,MUC ) - Min( ( RMSe / ( ( RCSe / MUC ) * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ) )", "obj1": 0.9530612244897959, "obj2": 0.02043848563921583}, {"determining": "( ACS / Max( BR,( CRS + ( Max( CRS,PN ) * PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RCSe ) * RMSe ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS - MUR ) / RCSe ) ) - ( ( MLU + Max( RCSe,MUM ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.13877551020408163, "obj2": 0.84382541227652}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,( RMSe * ( MLU + CS ) ) ) ) ) ),Max( Min( ( ( ( CS * CS ) * Min( MUM ,( MUR - MLU ) ) ) / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8836436297635926}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / Max( Max( PN,RRS ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( ( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4304757494193336}, {"determining": "( ( RRS * Const ) * ( AMS * ( ARS * ARS ) ) )", "choosing": "( ( Min( ( ( MUR - ( ( ( RCSe / RMSe ) - CS ) + MUM ) ) + ( MUR - DS ) ) ,( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8572616229840515}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( Min( ( Min( FirstVNF_CPU ,PN ) - ( DDR * FirstVNF_CPU_Server ) ) ,Const ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ) * ( RCSe / MUR ) ) ) )", "obj1": 0.08775510204081632, "obj2": 0.8917626547170546}, {"determining": "( ( AMS - ( ( RRS - FirstVNF_CPU ) * ARS ) ) / Min( FirstVNF_RAM ,Min( ARS ,( ACS * ( DDR * Min( ( ARS - ( DDR - FirstVNF_CPU_Server ) ) ,CRS ) ) ) ) ) )", "choosing": "( MUR * ( Min( ( ( MUM - ( ( ( RRSe / MUR ) * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) ,MUR ) + ( RRSe - MUR ) ) )", "obj1": 0.5, "obj2": 0.3581348118199062}, {"determining": "( ( AMS * ACS ) / Max( ( ( ACS - ACS ) * ( PN - FirstVNF_RAM_Server ) ),BR ) )", "choosing": "( ( ( ( ( DS * CS ) / MUR ) / ( MUR / MUC ) ) + MUM ) - ( DS - ( CS - ( MUM - ( RRSe * CS ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7600334505949903}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ( ( ( FirstVNF_CPU * BR ) - PN ) * FirstVNF_CPU ) ) ) - Const ) / BR ) )", "choosing": "Max( Min( ( Max( RMSe,( MUR + DS ) ) / DS ) ,( RMSe - CS ) ),( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( Max( Max( RCSe,RMSe ),( RCSe - ( DS - RCSe ) ) ),MUM ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8646387774221315}, {"determining": "( ( AMS - Min( Min( PN ,AMS ) ,FirstVNF_CPU ) ) / ( Max( ( ACS * Min( Const ,BR ) ),ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,Min( RMSe ,MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( MUC - ( ( ( ( ( RMSe * RCSe ) - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3787061548462769}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( Min( ( Min( FirstVNF_CPU ,PN ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( Const,DDR ) ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( MUC * ( RCSe / MUR ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.881725731384579}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,( ACS / Const ) ) * ( ( BR * FirstVNF_Mem_Server ) / RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_CPU_Server ) - Min( PN ,FirstVNF_CPU ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( ( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03486417169314258}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( ARS / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( Min( ( ( ( ( MUM * MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( Min( DS ,( MUR + Min( MUC ,RMSe ) ) ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + ( ( RCSe + RCSe ) + MUC ) ) ) )", "obj1": 0.7591836734693878, "obj2": 0.11036756353610541}, {"determining": "( Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ( CRS + ( MDR - ARS ) ) + Max( Const,FirstVNF_Mem ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( CS / Max( Min( MUR ,( ( MUR / RMSe ) - ( MUM - ( CS + MUC ) ) ) ),( CS * DS ) ) ) + Min( MUC ,( CS - Min( ( RMSe * ( MLU + CS ) ) ,( MUR * RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( Max( CS,( CS / RCSe ) ) ,MUM ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.07959183673469387, "obj2": 0.901624967856927}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * Min( ( RRS * Const ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) / MUM ) / ( RRSe + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4, "obj2": 0.44090742460856247}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,( RMSe * ( MLU + CS ) ) ) ) ) ),Max( Min( ( ( ( CS * CS ) * Min( MUM ,( MUR - MLU ) ) ) / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.08163265306122448, "obj2": 0.8933480969824823}, {"determining": "( ( FirstVNF_CPU - Max( ARS,( ( DDR * ( AMS / ( Min( CRS ,FirstVNF_RAM ) + PN ) ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - Max( ( RMSe + MLU ),RRSe ) ) * MUR ) + ( MUR - RRSe ) ) ) - ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / ( Max( MUM,RMSe ) / RCSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.3751066143799092}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + FirstVNF_CPU_Server ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( ( RRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) / Const ) ) ) )", "choosing": "( ( ( DS - MUC ) / MUR ) - ( ( CS - ( ( MUM + RCSe ) - DS ) ) / MUM ) )", "obj1": 0.5061224489795918, "obj2": 0.3550676659518784}, {"determining": "( ( FirstVNF_Mem + Max( Min( ( ( ( RRS / ACS ) + Max( FirstVNF_RAM_Server,Const ) ) / BR ) ,( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( ( FirstVNF_CPU_Server - Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( ( DS - MUC ) / RCSe ) )", "obj1": 0.5102040816326531, "obj2": 0.3512071272313902}, {"determining": "( ( PN - ( ( RRS + MDR ) / AMS ) ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( CS / DS ) + Max( RMSe,( ( Min( ( MLU + MUR ) ,( DS * MLU ) ) - DS ) - Min( DS ,( CS - MUR ) ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.7326530612244898, "obj2": 0.12846798462942782}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( Const - ( Max( DDR,MRS ) - RRS ) ) )", "choosing": "Max( ( ( Max( RCSe,( ( ( MUR - MUM ) / DS ) + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( DS / CS ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ),( CS + RCSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8329880263221716}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "( ( ( ( Max( CS,RCSe ) * RMSe ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS - MUR ) / RCSe ) ) - ( ( MLU + Max( RCSe,MUM ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.1230901248978149}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU - Max( ACS,FirstVNF_Mem_Server ) ) ) - RRS ) / Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM / MUM ) / ( MLU + Min( MUR ,DS ) ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( MUR - RRSe ) + ( ( ( MUM - Max( ( MUR + RCSe ),MUM ) ) - ( ( RMSe + CS ) * Max( CS,MUR ) ) ) * MUR ) ) ) )", "obj1": 0.46938775510204084, "obj2": 0.3690572516440237}, {"determining": "( ( Max( PN,FirstVNF_RAM_Server ) / MDR ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( ( ( MUM - DS ) / ( MUM * RRSe ) ) / CS ) ) ),Max( Min( ( ( MUM * ( ( RCSe / MUC ) + DS ) ) / RMSe ) ,CS ),( CS - MUC ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8736250661894744}, {"determining": "( FirstVNF_RAM_Server * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( ( ( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) + ( MUR - RRSe ) ),MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8580249015663243}, {"determining": "Min( ( ( MDR - FirstVNF_RAM_Server ) + ( ( ARS - AMS ) + Const ) ) ,Max( MRS,Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * RRSe ) - ( MUC / ( CS * MLU ) ) )", "obj1": 0.9040816326530612, "obj2": 0.043893244040151304}, {"determining": "( ( PN - ( ( RRS + ( ( AMS - Max( FirstVNF_RAM_Server,( ACS + AMS ) ) ) * Const ) ) * ( Min( ( Max( DDR,BR ) * ( Const / BR ) ) ,Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( Const / MRS ) )", "choosing": "( ( Max( Min( MLU ,Min( MUC ,RCSe ) ),DS ) * ( ( ( RMSe - DS ) / MUM ) * Max( RRSe,Max( ( DS / DS ),( MUC + RMSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0034616397171632765}, {"determining": "( ( FirstVNF_RAM_Server - Max( AMS,( ARS * ARS ) ) ) * Max( ( Min( MRS ,ARS ) * ARS ),ARS ) )", "choosing": "( ( Min( CS ,CS ) + Max( ( RMSe + ( MUM - DS ) ),MUM ) ) + Max( ( ( RRSe / Max( MLU,( MLU + CS ) ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7813411576934753}, {"determining": "Min( ( Min( FirstVNF_CPU ,( ACS - ACS ) ) * ( ( FirstVNF_Mem + ( ( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( DDR + MDR ) / ( FirstVNF_Mem_Server + MRS ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,( ( MLU * RMSe ) - MLU ) ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / RMSe ) ,( DS - MUR ) ) ) - Min( ( ( ( MUR * Min( ( CS * ( CS - RCSe ) ) ,Max( CS,DS ) ) ) - Min( MLU ,RRSe ) ) / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ) )", "obj1": 0.9448979591836735, "obj2": 0.023752196977063933}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) / MUM ) / ( RRSe + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.3979591836734694, "obj2": 0.4429361181930074}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( ( Max( MRS,RRS ) - BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( MRS / Const ) )", "choosing": "( MUR * ( ( Min( ( MUM - ( ( DS * MUR ) / RCSe ) ) ,( DS + RMSe ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9857142857142858, "obj2": 0.005628862220294025}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( RRSe / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.42653061224489797, "obj2": 0.4226994059105814}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_Mem_Server ) ),MDR ) * ( AMS + AMS ) ) ) - ( BR * ( FirstVNF_RAM - MDR ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( RRSe,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / Max( DS,RRSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9163265306122449, "obj2": 0.037870547323189195}, {"determining": "( ( FirstVNF_Mem - CRS ) * Max( Const,( RRS * ( ( RRS + ( MRS + ACS ) ) * ( Max( FirstVNF_CPU_Server,Min( MRS ,( BR * Const ) ) ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( CS ,CS ) + Max( RRSe,MUM ) ) + Max( ( ( Min( ( MLU + ( RRSe / Min( CS ,DS ) ) ) ,RCSe ) / RMSe ) - CS ),( MUM / MLU ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8110369612511952}, {"determining": "( FirstVNF_RAM_Server * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( ( Max( CS,RCSe ) * RMSe ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS - MUR ) / RCSe ) ) - ( ( MLU + Max( RCSe,MUM ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.14489795918367346, "obj2": 0.838547518793822}], "31": [{"determining": "( ( ( Min( FirstVNF_RAM ,( Min( CRS ,( ARS * FirstVNF_CPU_Server ) ) / RRS ) ) * ( ACS - MDR ) ) - AMS ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * Min( PN ,( FirstVNF_CPU_Server + DDR ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( DS - Min( Min( RMSe ,MUM ) ,RMSe ) ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( ( RRSe / RMSe ) - CS ) ) / Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( RRS + FirstVNF_RAM_Server ) * DDR ) - FirstVNF_RAM_Server ) - ( ( Max( Max( ( FirstVNF_CPU * ( DDR - FirstVNF_RAM_Server ) ),BR ),Const ) / FirstVNF_Mem ) * ( ARS * Max( Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ),Min( CRS ,FirstVNF_RAM_Server ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( RMSe + MUC ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Max( MUC,MUC ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ARS / MRS ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( RMSe * ( MLU + CS ) ) ,( MUR + RCSe ) ) ) ) ),( RCSe + ( ( MUM - ( DS / ( CS / ( Max( RRSe,MUR ) * DS ) ) ) ) + Max( ( MUR * DS ),( ( RRSe / Max( RRSe,CS ) ) + RMSe ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9074694900194289}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( ( Max( Const,Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( DDR - FirstVNF_RAM_Server ) ),BR ) ) / FirstVNF_Mem ) * ( ARS * Max( ( CRS + FirstVNF_RAM_Server ),Min( Min( AMS ,FirstVNF_RAM ) ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MUC / MUM ) + RRSe ) + MUC ) ) + ( ( RCSe * RRSe ) + ( Min( ( MUC + RMSe ) ,( MUR + ( ( RCSe + RCSe ) + MUC ) ) ) / ( ( ( Min( MUR ,MUR ) * ( MUM + RRSe ) ) - MUC ) / ( MUC + MUC ) ) ) ) ) / ( Max( ( MUC + RCSe ),Min( MUC ,MUM ) ) / Max( ( RRSe - ( Min( DS ,RMSe ) / ( ( MUR / ( DS / DS ) ) * ( MUC - CS ) ) ) ),Min( DS ,MUR ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.06151212458290576}, {"determining": "( ( DDR + BR ) * ( Const / BR ) )", "choosing": "( ( MUR + ( ( MUR + ( ( ( ( DS * MLU ) - MLU ) / ( RCSe / MUC ) ) * CS ) ) - Min( RCSe ,Min( ( ( MUM + DS ) + DS ) ,RMSe ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MLU ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.7877551020408163, "obj2": 0.10056771083972497}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "( CS + Max( ( ( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) / RRSe ) - CS ),( ( MUR / ( MUR + ( DS / CS ) ) ) / DS ) ) )", "obj1": 0.336734693877551, "obj2": 0.535392820737195}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( ( ( ARS / PN ) * ( Max( CRS,FirstVNF_CPU ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ),( RRS * Const ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUM * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.22244897959183674, "obj2": 0.689169904487986}, {"determining": "( ( AMS - ARS ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,( ( Min( ( MUR + MUR ) ,( MLU + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - Min( ( ( Min( CS ,CS ) + Max( RRSe,MUM ) ) - Min( ( MLU + CS ) ,( RRSe - RCSe ) ) ) ,DS ) ) ) ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.32040816326530613, "obj2": 0.5839949208815991}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU / RRS ),ARS ) ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,( ( MUM - ( RRSe / ( MUM * MUR ) ) ) - ( ( MLU + CS ) * RMSe ) ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.5591836734693878, "obj2": 0.3058938812269257}, {"determining": "( ( AMS - Max( ( Max( Min( MDR ,FirstVNF_CPU ),DDR ) * ( PN / FirstVNF_Mem ) ),Const ) ) / ( Min( PN ,MDR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( ( ( MLU + ( ( RCSe * DS ) * RCSe ) ) / MUC ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( RMSe - ( ( MUR - RRSe ) + ( ( ( MUM - ( ( DS * MUR ) / RCSe ) ) - ( ( RMSe / MUM ) * MUM ) ) - MUR ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.679292893601322}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.26326530612244897, "obj2": 0.635118734034016}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU - PN ) ,BR ) ) / FirstVNF_Mem )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + RMSe ) ) - Min( ( MUR * DS ) ,( ( CS + ( ( MUC + MLU ) - ( RCSe - RRSe ) ) ) + RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( Min( DS ,( RRSe - DS ) ) * ( ( MUC + RMSe ) / ( RMSe - MUC ) ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.748302548957801}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * Min( ( RRS * Const ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) / MUM ) / ( RRSe + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.47216786001709216}, {"determining": "( ( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) ) * Max( Const,( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( ARS,BR ) - Min( RRS ,BR ) ) ) ) ) / ( ( RRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) / Const ) ) ) )", "choosing": "( ( ( DS / MUC ) / MUR ) - ( ( MUR - MLU ) / ( MUC - RCSe ) ) )", "obj1": 0.5265306122448979, "obj2": 0.3359013030535761}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( Min( ( MUR + ( ( RMSe * RCSe ) + ( ( RCSe + RRSe ) * RRSe ) ) ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RMSe - RRSe ) ) ) - ( MUC - ( ( ( ( Max( ( RMSe * CS ),( MUC / MUC ) ) - ( DS / ( RMSe + RMSe ) ) ) - ( RRSe * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.2938775510204082, "obj2": 0.6034281459535298}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * Min( ( RRS * Const ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) / MUM ) / ( RRSe + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5016974297458711}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * Min( ( RRS * Const ) ,( ARS * ARS ) ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) / MUM ) / ( RRSe + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - CS ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.3653061224489796, "obj2": 0.49763643584915535}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( ( RRS + Min( FirstVNF_Mem_Server ,AMS ) ) / Const ) ) ) )", "choosing": "( ( ( DS - MUC ) / ( ( RRSe / MUC ) - Max( ( RRSe / CS ),MLU ) ) ) - ( ( CS - ( ( MUM + RCSe ) - RCSe ) ) / MUM ) )", "obj1": 0.5836734693877551, "obj2": 0.28916838881698004}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUC ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.2836734693877551, "obj2": 0.6147487533079946}, {"determining": "( ( ( ACS * BR ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( MRS * FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( ( ( MUM - CS ) / ( RCSe - ( RMSe + ( RRSe + Max( RRSe,MUM ) ) ) ) ) / Min( ( RMSe + ( RRSe - MUC ) ) ,Max( DS,DS ) ) ),( ( RRSe * MUC ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ) )", "obj1": 0.7142857142857143, "obj2": 0.1948619238291775}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6857142857142857, "obj2": 0.21813912183101744}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU / RRS ),ARS ) ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,( ( MUM - ( RRSe / ( MUM * MUR ) ) ) - ( ( MLU + CS ) * RMSe ) ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.5979591836734693, "obj2": 0.2810390211275733}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( DDR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS / ( ( MUM - DS ) / ( CS * RRSe ) ) ) ) ),Max( Min( ( ( MUM * ( ( Min( RMSe ,MUC ) - MUC ) + DS ) ) / RMSe ) ,CS ),( CS - MUC ) ) )", "obj1": 0.7183673469387755, "obj2": 0.1537699800924813}, {"determining": "( ( MRS + BR ) + ( Min( ( PN - PN ) ,( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + RRS ) - FirstVNF_CPU ) * ( PN / ( DDR + FirstVNF_CPU_Server ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC / ( Min( Min( RMSe ,MUM ) ,RMSe ) - DS ) ) - MLU ),( MUM * ( RCSe / Min( ( MUC / CS ) ,RMSe ) ) ) ) / ( DS - ( RCSe * Min( Min( Max( ( MLU + MUR ),RCSe ) ,( DS / CS ) ) ,MUC ) ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.7122448979591837, "obj2": 0.2075300913632365}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,BR ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,( ( MUM - ( RRSe / ( MUM * MUR ) ) ) - ( ( MLU + CS ) * RMSe ) ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.6244897959183674, "obj2": 0.26298068476214587}, {"determining": "( ( AMS - Max( ARS,( ( ( ( MDR / ACS ) * ACS ) * FirstVNF_CPU ) * MDR ) ) ) / Min( FirstVNF_CPU ,( FirstVNF_CPU + Const ) ) )", "choosing": "( ( Min( ( MUM + MUR ) ,( MUR + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( Min( RRSe ,( RRSe * MLU ) ) * ( ( RMSe * RCSe ) / RCSe ) ) - ( ( CS + RMSe ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.45918367346938777, "obj2": 0.3863778089801303}, {"determining": "( Max( ( FirstVNF_CPU / Const ),AMS ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( ( Min( ( MUR + ( ( RMSe * RCSe ) + ( ( RCSe + RRSe ) * RRSe ) ) ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RMSe - ( ( MLU / RMSe ) - MUC ) ) ) ) - ( MUC - ( ( ( ( Max( ( RMSe * CS ),( MUC / MUC ) ) - ( DS / ( RMSe + RMSe ) ) ) - ( RRSe * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.43673469387755104, "obj2": 0.40267783867325646}, {"determining": "( ( ( Max( FirstVNF_RAM,( Min( FirstVNF_RAM_Server ,CRS ) * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) * AMS ) ) * Max( ( ( ACS * FirstVNF_Mem_Server ) - AMS ),( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * ( ( ( RRSe / CS ) - MUR ) / Min( CS ,RMSe ) ) ) ) ,CS ) )", "obj1": 0.6653061224489796, "obj2": 0.22859323009126412}, {"determining": "( ( AMS + Max( ( FirstVNF_CPU / RRS ),ARS ) ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - AMS ) ) * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( CS ,Min( ( MLU + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( Min( DS ,RMSe ) - ( DS - MLU ) ) ) * ( MLU + ( ( RMSe * DS ) + MUC ) ) ),MUC ) ) - ( ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) + ( Min( ( ( Max( CS,MUR ) - MUM ) + MUR ) ,CS ) - RRSe ) ) ) )", "obj1": 0.6163265306122448, "obj2": 0.26803392207986054}, {"determining": "( ( DDR + BR ) * ( Const / BR ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) / MUM ) / ( RRSe + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8255278665901332}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server * ( ARS * ARS ) ) ) * ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( DDR + ACS ) ) )", "choosing": "( ( ( RRSe - MUM ) + Min( RMSe ,Max( ( ( CS - MUC ) / ( MUC / Max( DS,MUC ) ) ),Max( ( RMSe * MUC ),MLU ) ) ) ) + ( ( Min( RCSe ,( ( ( RMSe * ( MLU - CS ) ) / Min( CS ,DS ) ) - MLU ) ) * Max( CS,MUR ) ) + RCSe ) )", "obj1": 0.1836734693877551, "obj2": 0.7726397780300505}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( MDR + ACS ) ) ,Min( ( Min( PN ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM * MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( Min( DS ,( MUR + Min( MUC ,RMSe ) ) ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + ( ( RCSe + RCSe ) + MUC ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.0511438476776511}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( DDR,BR ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( CS ,Min( ( MLU + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( RMSe + ( ( RMSe * DS ) + MUC ) ) ),MUC ) ) - ( ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) + ( MUR - RRSe ) ) ) )", "obj1": 0.6428571428571429, "obj2": 0.242506160393947}, {"determining": "( ( AMS - ( ACS * FirstVNF_Mem_Server ) ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * ( Max( Max( MRS,BR ),Const ) / FirstVNF_Mem ) ) ) ,( AMS * ( Min( CRS ,FirstVNF_RAM ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + Min( RCSe ,RMSe ) ) - ( DS - ( ( ( ( MUM - Max( ( MUR + RCSe ),MUM ) ) - ( ( RMSe + CS ) + Max( CS,MUR ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.6408163265306123, "obj2": 0.24375180789906647}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( DDR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( MUR / ( MUR + MUM ) ) / DS ) ) )", "obj1": 0.7224489795918367, "obj2": 0.15091962478353013}, {"determining": "( ( MRS - Min( Const ,ACS ) ) + Max( AMS,CRS ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,DS ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.2, "obj2": 0.7640978643605946}, {"determining": "( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) )", "choosing": "( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7970231533515283}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( Const - ( Max( DDR,MRS ) - RRS ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * ( ( ( ACS * FirstVNF_Mem_Server ) - AMS ) + ( Min( ( FirstVNF_CPU - ( ( RRS + MDR ) * Max( AMS,FirstVNF_RAM ) ) ) ,( AMS * ( ( FirstVNF_CPU + RRS ) - FirstVNF_CPU ) ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( ( MUR * DS ),( ( MLU + CS ) * RMSe ) ) ,Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ) )", "obj1": 0.6714285714285714, "obj2": 0.22612812872103724}, {"determining": "( ( Max( Min( PN ,PN ),( ( ( ( ( MRS / FirstVNF_RAM_Server ) * CRS ) + DDR ) / FirstVNF_CPU_Server ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ) ) + FirstVNF_Mem ) * ( Const / ( ( FirstVNF_Mem / FirstVNF_RAM ) + PN ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( MUR + RMSe ) ) - Min( ( MUR * DS ) ,( ( RCSe * RCSe ) - RRSe ) ) ) - ( DS - ( ( Min( RRSe ,RCSe ) * ( ( MUC - ( MUR - Max( MUC,DS ) ) ) - ( Max( CS,RMSe ) * Max( MUR,CS ) ) ) ) + ( MUR - RRSe ) ) ) )", "obj1": 0.47551020408163264, "obj2": 0.36724667691453666}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( ARS / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,( RMSe * ( MLU + CS ) ) ) ) ) ),Max( Min( ( ( ( CS * CS ) * Min( MUM ,( MUR - MLU ) ) ) / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.7285714285714285, "obj2": 0.13077528036554864}, {"determining": "( Min( ARS ,( AMS + ACS ) ) / ( ( ( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_CPU_Server / MRS ) + ( FirstVNF_RAM + AMS ) ) * Const ) ) - DDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( ( ( DS - CS ) - MUR ),CS ) / ( ( ( ( MLU - ( ( MUC / Min( CS ,MUM ) ) + RCSe ) ) * Min( RCSe ,CS ) ) - MLU ) - MUC ) )", "obj1": 0.9714285714285714, "obj2": 0.012238172698020206}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( MUR / ( DS - MLU ) ) )", "obj1": 0.7693877551020408, "obj2": 0.10951570555156834}, {"determining": "( FirstVNF_RAM_Server * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( ( ( Max( CS,RCSe ) * RMSe ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS - MUR ) / RCSe ) ) - ( ( MLU + Max( RCSe,MUM ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.14489795918367346, "obj2": 0.838547518793822}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( MUR / ( DS - MLU ) ) )", "obj1": 0.7571428571428571, "obj2": 0.11572774783030657}, {"determining": "( ( AMS - Max( FirstVNF_Mem,( ( FirstVNF_Mem * ARS ) * ( ( PN - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( FirstVNF_Mem * PN ) ) ) + Const ) ) ) ) / Min( FirstVNF_Mem ,MDR ) )", "choosing": "( Max( ( ( ( MUC / MUR ) / MUR ) / MUM ),Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( Min( MUC ,( ( Max( ( MUC * Max( CS,RCSe ) ),( RMSe + DS ) ) + Max( ( MUC + DS ),MUR ) ) - MUR ) ) ,RMSe ) )", "obj1": 0.4326530612244898, "obj2": 0.40525309416291927}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU / RRS ),ARS ) ) / Min( ( ACS - Const ) ,( FirstVNF_CPU_Server * ( ARS * ARS ) ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( CS ,Min( ( MLU + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( RMSe + ( ( RMSe * DS ) + MUC ) ) ),MUC ) ) - ( ( ( ( MUR / ( MUR + MUM ) ) / DS ) / ( ( RCSe * MUC ) * DS ) ) + ( MUR - RRSe ) ) ) )", "obj1": 0.39183673469387753, "obj2": 0.4503052895028652}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + ( Max( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_Mem_Server ) ),MDR ) * ( AMS + AMS ) ) ) - ( BR * ( FirstVNF_RAM - MDR ) ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),Min( MUC ,DS ) ) + ( ( RCSe * DS ) + ( Min( ( RMSe + MUC ) ,Max( RRSe,( MUC + ( RCSe + RCSe ) ) ) ) / ( RCSe / Max( DS,RRSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MLU + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9163265306122449, "obj2": 0.037870547323189195}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * AMS ) ) ) ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( RCSe / ( CS + RMSe ) ) ) ,( ( MUC * MUR ) + MUM ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.9, "obj2": 0.04171786627676529}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU * Max( Max( DDR,FirstVNF_Mem_Server ),Const ) ) - FirstVNF_Mem_Server ) ),ARS ) ) / Min( FirstVNF_RAM ,Min( PN ,( ACS - ( DDR * DDR ) ) ) ) )", "choosing": "( Max( DS,( ( Min( ( MUR + MUR ) ,( MLU + RMSe ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - Min( ( ( Min( CS ,CS ) + Max( RRSe,MUM ) ) - Min( ( MLU + CS ) ,( RMSe - RCSe ) ) ) ,DS ) ) ) ) - ( DS - ( ( ( ( MUM - Min( MUC ,Max( CS,RMSe ) ) ) - ( RMSe * ( MLU + CS ) ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4959183673469388, "obj2": 0.36474011248476845}, {"determining": "( ( Const + ( Max( CRS,MDR ) * ( MRS + ( RRS - ( ACS * FirstVNF_RAM_Server ) ) ) ) ) * Min( Max( Min( Max( MRS,Min( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),DDR ) ,( FirstVNF_CPU / Min( RRS ,FirstVNF_Mem ) ) ) ) ,( BR - MRS ) ),Min( ( ( Max( Max( DDR,ARS ),Const ) / FirstVNF_Mem ) - ACS ) ,Max( ( ( Max( FirstVNF_CPU_Server,ACS ) - RRS ) / ARS ),AMS ) ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) * Max( DDR,DDR ) ) ) )", "choosing": "( ( ( CS / DS ) + Min( RMSe ,( ( MUR + RCSe ) - Min( Min( ( ( MLU / MUM ) / MUM ) ,MUC ) ,CS ) ) ) ) / ( Min( ( ( MLU * Max( MUR,MUM ) ) / DS ) ,( RMSe + ( CS / Min( MLU ,MLU ) ) ) ) / RCSe ) )", "obj1": 0.9591836734693877, "obj2": 0.017192892409302152}, {"determining": "( ( Const - ( Max( ( FirstVNF_CPU_Server / ( ARS - ARS ) ),Max( DDR,MRS ) ) - MDR ) ) + ( AMS * PN ) )", "choosing": "Max( Min( ( CS / DS ) ,Min( RMSe ,( ( ( MUR - Min( RRSe ,MUR ) ) - Max( RCSe,RRSe ) ) - Min( DS ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * ( ( DS / MUC ) + DS ) ) ) ,Max( CS,( MUM - RMSe ) ) ),( CS - MUC ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8461514807458974}, {"determining": "( ACS / Max( BR,( CRS + ( Min( MDR ,DDR ) * Const ) ) ) )", "choosing": "( ( CS - MUC ) - ( DS - ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8021734073188833}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,( RMSe * ( MLU + CS ) ) ) ) ) ),Max( Min( ( ( ( CS * CS ) * Min( MUM ,( MUR - MLU ) ) ) / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8836436297635926}, {"determining": "Min( Min( Min( Max( ( ARS - FirstVNF_RAM_Server ),( ( FirstVNF_CPU - Const ) + ACS ) ) ,( ACS / ( Min( MRS ,AMS ) / FirstVNF_CPU_Server ) ) ) ,BR ) ,( FirstVNF_CPU * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( CS / MLU ),( Max( ( Min( ( MUC / MLU ) ,RMSe ) + RMSe ),MUM ) - Max( ( MUC - MLU ),Max( MUC,DS ) ) ) ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + MUC ) + RRSe ) ,MLU ) ) ,DS ) ,Max( RRSe,( Min( MUM ,( ( RRSe / ( MUC + CS ) ) * MLU ) ) * MUC ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7544423640090209}, {"determining": "( ( FirstVNF_RAM_Server - Max( AMS,( ARS * ARS ) ) ) * Max( ( Min( MRS ,ARS ) * ARS ),ARS ) )", "choosing": "( ( Min( CS ,CS ) + Max( ( RMSe + ( MUM - DS ) ),MUM ) ) + Max( ( ( RRSe / Max( MLU,( MLU + CS ) ) ) - CS ),( MUM / DS ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7813411576934753}, {"determining": "( ACS / Max( BR,( CRS + ( Max( CRS,PN ) * PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RCSe ) * RMSe ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) - ( DS - ( ( ( ( MUM - ( ( CS - MUR ) / RCSe ) ) - ( ( MLU + Max( RCSe,MUM ) ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.13877551020408163, "obj2": 0.84382541227652}, {"determining": "Min( Max( Min( ( ACS - ACS ) ,( ACS - FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ( Max( BR,( ( DDR / FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),Min( Min( ( RMSe * Min( ( ( ( CS / DS ) + RRSe ) + RRSe ) ,MLU ) ) ,( MUM * ( ( DS / MUC ) - DS ) ) ) ,Max( ( Min( MUM ,( ( RRSe / ( MUC / CS ) ) + MLU ) ) * MUC ),RRSe ) ) )", "obj1": 0.936734693877551, "obj2": 0.02752135264321491}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( RRSe / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.42857142857142855, "obj2": 0.42199554973519854}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( ARS / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( MUM - DS ) / ( CS * RRSe ) ),( ( RRSe / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.7428571428571429, "obj2": 0.1223975935114957}, {"determining": "Min( Max( ( ( Max( Min( AMS ,FirstVNF_RAM ),MRS ) * FirstVNF_CPU_Server ) * ACS ),( MDR + ( FirstVNF_RAM * ARS ) ) ) ,Min( ( ( DDR - FirstVNF_CPU_Server ) - Min( PN ,RRS ) ) ,Min( DDR ,DDR ) ) )", "choosing": "( ( Min( ( MUR * MUR ) ,( ( ( DS * MUC ) / Min( MUC ,CS ) ) - MLU ) ) - Min( ( DS * MUR ) ,( MUR / DS ) ) ) - Min( ( RCSe / CS ) ,( Min( RCSe ,( ( Max( Min( RCSe ,CS ),MLU ) * DS ) + Min( CS ,DS ) ) ) + Min( MLU ,MUM ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.03129395782837683}, {"determining": "Min( ( Min( FirstVNF_CPU ,( ACS - ACS ) ) * ( ( FirstVNF_Mem + ( ( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( DDR + MDR ) / ( FirstVNF_Mem_Server + MRS ) ) ) * ( FirstVNF_CPU * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / Min( MUR ,( ( MLU * RMSe ) - MLU ) ) ) - MLU ) ,( MUR * MUR ) ) - Min( ( MUR / RMSe ) ,( DS - MUR ) ) ) - Min( ( ( ( MUR * Min( ( CS * ( CS - RCSe ) ) ,Max( CS,DS ) ) ) - Min( MLU ,RRSe ) ) / ( MUM * ( ( Max( MLU,RCSe ) - MUC ) + DS ) ) ) ,CS ) )", "obj1": 0.9448979591836735, "obj2": 0.023752196977063933}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - ( ( DDR + FirstVNF_CPU ) - ( BR - RRS ) ) ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( ( DS - MUC ) / MUR ) - ( ( CS - ( Min( MUR ,( RRSe / ( ( DS - MUC ) / ( MUM + DS ) ) ) ) - RCSe ) ) - MUM ) )", "obj1": 0.5204081632653061, "obj2": 0.3383725974219043}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU / RRS ),ARS ) ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,( Min( ( PN - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) * Const ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( CS ,Min( ( MLU + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( RMSe + ( ( RMSe * DS ) + MUC ) ) ),MUC ) ) - ( ( ( ( MUR / ( MUR + MUM ) ) / DS ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) + ( MUR - RRSe ) ) ) )", "obj1": 0.40408163265306124, "obj2": 0.430919763392486}, {"determining": "( ( PN - ( ( ( ( MDR / Const ) * ( RRS * ( PN / MDR ) ) ) + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "( Max( ( ( RCSe - DS ) - MUR ),MUR ) + ( MUR / ( DS - ( Min( MUR ,Max( ( DS / MUR ),( Max( MUC,MUR ) / MUM ) ) ) / ( ( MUC / RCSe ) / ( RRSe + CS ) ) ) ) ) )", "obj1": 0.7836734693877551, "obj2": 0.10564664508425296}, {"determining": "Min( ( FirstVNF_Mem + ( ARS / FirstVNF_Mem_Server ) ) ,Min( ( Min( PN ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) - Max( ( RRS + MDR ),( Max( ( Max( DDR,BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( ( ( ( MUM / MUM ) / ( RRSe + CS ) ) / ( MUM + CS ) ) - MLU ) ,( MUR * MUR ) ) - Min( Min( MUC ,( MUR + RCSe ) ) ,( DS - MUR ) ) ) - RCSe )", "obj1": 0.9795918367346939, "obj2": 0.008129833702884861}, {"determining": "( ( FirstVNF_Mem - CRS ) * Max( Const,( RRS * ( ( RRS + ( MRS + ACS ) ) * ( Max( FirstVNF_CPU_Server,Min( MRS ,( BR * Const ) ) ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( CS ,CS ) + Max( RRSe,MUM ) ) + Max( ( ( Min( ( MLU + ( RRSe / Min( CS ,DS ) ) ) ,RCSe ) / RMSe ) - CS ),( MUM / MLU ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8110369612511952}, {"determining": "( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) )", "choosing": "Max( ( ( CS / Min( Min( ( ( Max( MLU,RMSe ) - RMSe ) - MLU ) ,RRSe ) ,MUR ) ) + Min( MUC ,( Min( ( MUC / CS ) ,RRSe ) - CS ) ) ),Max( Min( CS ,Min( RMSe ,( MUM * ( ( DS / MUC ) - DS ) ) ) ),( RRSe + RCSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8769815028204236}, {"determining": "( ( RRS * Const ) * ( AMS * ( ARS * ARS ) ) )", "choosing": "( ( Min( ( ( MUR - ( ( ( RCSe / RMSe ) - CS ) + MUM ) ) + ( MUR - DS ) ) ,( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8572616229840515}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,( RMSe * ( MLU + CS ) ) ) ) ) ),Max( Min( ( ( ( CS * CS ) * Min( MUM ,( MUR - MLU ) ) ) / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8916367867658537}, {"determining": "( ( AMS * ACS ) / Max( ( ( ACS - ACS ) * ( PN - FirstVNF_RAM_Server ) ),BR ) )", "choosing": "( ( ( ( ( DS * CS ) / MUR ) / ( MUR / MUC ) ) + MUM ) - ( DS - ( CS - ( MUM - ( RRSe * CS ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7600334505949903}, {"determining": "( ( PN - ( ( RRS + ( ( AMS - Max( FirstVNF_RAM_Server,( ACS + AMS ) ) ) * Const ) ) * ( Min( ( Max( DDR,BR ) * ( Const / BR ) ) ,Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( Const / MRS ) )", "choosing": "( ( Max( Min( MLU ,Min( MUC ,RCSe ) ),DS ) * ( ( ( RMSe - DS ) / MUM ) * Max( RRSe,Max( ( DS / DS ),( MUC + RMSe ) ) ) ) ) / ( Max( ( RRSe - ( Min( DS ,MUM ) / ( ( RCSe * MUC ) * ( CS * MUR ) ) ) ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0034616397171632765}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) * ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server / ( ( ( FirstVNF_CPU * BR ) - PN ) * FirstVNF_CPU ) ) ) - Const ) / BR ) )", "choosing": "Max( Min( ( Max( RMSe,( MUR + DS ) ) / DS ) ,( RMSe - CS ) ),( RMSe / Min( ( MLU / Min( MUR ,MUM ) ) ,Max( Max( Max( RCSe,RMSe ),( RCSe - ( DS - RCSe ) ) ),MUM ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8646387774221315}, {"determining": "( ( AMS - Min( Min( PN ,AMS ) ,FirstVNF_CPU ) ) / ( Max( ( ACS * Min( Const ,BR ) ),ARS ) - ( AMS * BR ) ) )", "choosing": "( ( Min( ( MUR + MUR ) ,Min( RMSe ,MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( MUC - ( ( ( ( ( RMSe * RCSe ) - ( ( DS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3787061548462769}, {"determining": "( ( AMS - Max( ( FirstVNF_CPU / RRS ),ARS ) ) / Min( ( ACS - Const ) ,( Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,( Min( ( ACS - FirstVNF_RAM_Server ) ,( ACS - ACS ) ) * Max( Max( DDR,BR ),Const ) ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * MUR ) - ( ( Min( CS ,Min( ( MLU + ( RMSe / Min( MUM ,DS ) ) ) ,RCSe ) ) + Max( ( Max( CS,( ( DS - MLU ) - Min( DS ,RMSe ) ) ) * ( RMSe + ( ( RMSe * DS ) + MUC ) ) ),MUC ) ) - ( ( Min( DS ,MUM ) / ( ( ( ( CS / DS ) + RRSe ) + RRSe ) * ( CS * MUR ) ) ) + ( MUR - RRSe ) ) ) )", "obj1": 0.5122448979591837, "obj2": 0.34446591146430106}, {"determining": "( ( ( Max( Max( FirstVNF_CPU,ACS ),FirstVNF_CPU ) / FirstVNF_CPU ) - ( AMS * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_Mem,( RRS * ( ( RRS + ( ACS + MRS ) ) * ( ( Const - ( DDR - FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( CS ,CS ) + Max( RRSe,MUM ) ) + Max( ( ( ( Min( Min( ( RCSe * MUM ) ,( MUR / MUR ) ) ,RMSe ) / ( MUC * MUC ) ) / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8110369612511952}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + ( ( Const + ( Min( ( Min( FirstVNF_CPU ,PN ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( Const,DDR ) ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,MUM ) ) ) ),Max( Min( ( RMSe / ( MUM * ( ( Max( MUC,RCSe ) - MUC ) + DS ) ) ) ,CS ),( MUC * ( RCSe / MUR ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.881725731384579}, {"determining": "Min( Max( Min( ( ACS - FirstVNF_RAM_Server ) ,( MRS - ACS ) ),( ( FirstVNF_Mem + ( Max( ARS,( ACS / Const ) ) * ( ( BR * FirstVNF_Mem_Server ) / RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( ( DDR * FirstVNF_CPU_Server ) - Min( PN ,FirstVNF_CPU ) ) ,Max( DDR,DDR ) ) )", "choosing": "( MUR * ( ( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03486417169314258}, {"determining": "( ( AMS - Max( ARS,( ( FirstVNF_CPU * Min( ( RRS * Const ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) / MUM ) / ( RRSe + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.4, "obj2": 0.44090742460856247}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( ARS / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( Min( ( ( ( ( MUM * MUM ) / ( RRSe + CS ) ) / Min( MUR ,MLU ) ) - MLU ) ,( MUR * MUR ) ) - Min( Min( DS ,( MUR + Min( MUC ,RMSe ) ) ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + ( ( RCSe + RCSe ) + MUC ) ) ) )", "obj1": 0.7591836734693878, "obj2": 0.11036756353610541}, {"determining": "( Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_RAM ) + ( FirstVNF_RAM * ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ( CRS + ( MDR - ARS ) ) + Max( Const,FirstVNF_Mem ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( CS / Max( Min( MUR ,( ( MUR / RMSe ) - ( MUM - ( CS + MUC ) ) ) ),( CS * DS ) ) ) + Min( MUC ,( CS - Min( ( RMSe * ( MLU + CS ) ) ,( MUR * RCSe ) ) ) ) ),Max( Min( ( RMSe / ( MUC + Min( Max( CS,( CS / RCSe ) ) ,MUM ) ) ) ,CS ),( CS - MUC ) ) )", "obj1": 0.07959183673469387, "obj2": 0.901624967856927}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.41836734693877553, "obj2": 0.42495376958820347}, {"determining": "( ( FirstVNF_CPU - Max( ARS,( ( DDR * ( AMS / ( Min( CRS ,FirstVNF_RAM ) + PN ) ) ) * FirstVNF_RAM_Server ) ) ) / Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - Max( ( RMSe + MLU ),RRSe ) ) * MUR ) + ( MUR - RRSe ) ) ) - ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - ( Min( CS ,( Min( Min( MUC ,CS ) ,RRSe ) / RCSe ) ) / ( Max( MUM,RMSe ) / RCSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.3751066143799092}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_RAM,( AMS - CRS ) ) ) + ( PN * Min( FirstVNF_CPU_Server ,Min( Max( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ),BR ) ,Max( Max( DDR,MRS ),AMS ) ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( ( RCSe - RMSe ) / ( CS * Max( Min( MUR ,CS ),Min( RMSe ,( MUC / MUR ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8693356241990067}, {"determining": "( ( PN - ( ( RRS + MDR ) * ( Max( ( ( Max( MRS,RRS ) - BR ) * ( Const / BR ) ),Const ) / ( ( RRS + FirstVNF_RAM_Server ) - DDR ) ) ) ) / ( MRS / Const ) )", "choosing": "( MUR * ( ( Min( ( MUM - ( ( DS * MUR ) / RCSe ) ) ,( DS + RMSe ) ) - MUR ) + ( MUR - RRSe ) ) )", "obj1": 0.9857142857142858, "obj2": 0.005628862220294025}, {"determining": "( ( AMS - ( ( RRS - FirstVNF_CPU ) * ARS ) ) / Min( FirstVNF_RAM ,Min( ARS ,( ACS * ( DDR * Min( ( ARS - ( DDR - FirstVNF_CPU_Server ) ) ,CRS ) ) ) ) ) )", "choosing": "( MUR * ( Min( ( ( MUM - ( ( ( RRSe / MUR ) * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) ,MUR ) + ( RRSe - MUR ) ) )", "obj1": 0.5, "obj2": 0.3581348118199062}, {"determining": "( ( ( FirstVNF_RAM * Min( MRS ,FirstVNF_RAM_Server ) ) + ( AMS - RRS ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * PN ) ) ) ) ) / ( ( RRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) / Const ) ) ) )", "choosing": "( ( ( RMSe - MUC ) / MUR ) - ( ( CS - ( RMSe - RCSe ) ) / MUM ) )", "obj1": 0.5102040816326531, "obj2": 0.3474008841706959}, {"determining": "( ( ( FirstVNF_RAM / ( FirstVNF_CPU - Max( ACS,FirstVNF_Mem_Server ) ) ) - RRS ) / Min( MDR ,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM / MUM ) / ( MLU + Min( MUR ,DS ) ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( MUR - RRSe ) + ( ( ( MUM - Max( ( MUR + RCSe ),MUM ) ) - ( ( RMSe + CS ) * Max( CS,MUR ) ) ) * MUR ) ) ) )", "obj1": 0.46938775510204084, "obj2": 0.3690572516440237}, {"determining": "( ( Max( PN,FirstVNF_RAM_Server ) / MDR ) + ( ( Const + ( ( FirstVNF_RAM_Server / MDR ) / ( Const / CRS ) ) ) / ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( ( ( MUM - DS ) / ( MUM * RRSe ) ) / CS ) ) ),Max( Min( ( ( MUM * ( ( RCSe / MUC ) + DS ) ) / RMSe ) ,CS ),( CS - MUC ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8736250661894744}, {"determining": "( FirstVNF_RAM_Server * Max( FirstVNF_Mem,( RRS * Const ) ) )", "choosing": "( ( Min( ( MUM + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( ( ( ( ( ( MLU + CS ) + RMSe ) - Max( RMSe,MUM ) ) - MUR ) + ( MUR - RRSe ) ),MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8580249015663243}, {"determining": "( ( FirstVNF_RAM_Server - ( AMS * ( ARS * ARS ) ) ) * Max( FirstVNF_Mem,( RRS * ( ( FirstVNF_Mem / MDR ) * ( Max( Max( DDR,FirstVNF_Mem_Server ),Const ) / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC - MUM ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7813411576934753}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + FirstVNF_CPU_Server ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( ( RRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) / Const ) ) ) )", "choosing": "( ( ( DS - MUC ) / MUR ) - ( ( CS - ( ( MUM + RCSe ) - DS ) ) / MUM ) )", "obj1": 0.5061224489795918, "obj2": 0.3550676659518784}, {"determining": "Min( ( FirstVNF_Mem * MDR ) ,( ( Min( PN ,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * Min( DDR ,FirstVNF_CPU_Server ) ) - Max( DDR,DDR ) ) )", "choosing": "( ( ( ( ( ( ( MUM / ( CS + DS ) ) / ( ( MUC + RMSe ) + MUM ) ) / Min( MUR ,MLU ) ) - MLU ) / ( MUR * MUR ) ) - Min( Min( DS ,( MUR + RCSe ) ) ,( DS - MUR ) ) ) - ( RMSe + ( Max( ( MUR * DS ),MUR ) + Min( ( RCSe + RCSe ) ,MUC ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.04664455471800032}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( ( DDR + BR ) * ( Const / BR ) ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( ( ( ( ( ( RMSe * Max( CS,RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) ) / MUM ) / ( ( ( RCSe * MLU ) * ( CS * MUR ) ) + CS ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - ( DS - ( ( ( ( MUM - ( MUR * MUM ) ) - ( ( RMSe + CS ) * Max( MUR,CS ) ) ) * MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.39591836734693875, "obj2": 0.44129701802471505}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) * ( Const / BR ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( CS - Min( ( MUR + RCSe ) ,( RMSe * ( MLU + CS ) ) ) ) ) ),Max( Min( ( ( ( CS * CS ) * Min( MUM ,( MUR - MLU ) ) ) / ( MUC + Min( MUM ,Max( CS,( CS / RCSe ) ) ) ) ) ,CS ),( CS - MUM ) ) )", "obj1": 0.08163265306122448, "obj2": 0.8933480969824823}, {"determining": "( ( PN - ( ( RRS + MDR ) * AMS ) ) * ( Const / BR ) )", "choosing": "Max( ( ( Max( RCSe,( ( ( MUR - MUM ) / DS ) + DS ) ) / DS ) + Min( MUC ,( CS - Min( Min( ( MUM / ( DS / CS ) ) ,MUC ) ,CS ) ) ) ),Max( Min( Min( RMSe ,( MUM * Min( ( ( RRSe / CS ) - MUR ) ,Max( MUC,MUC ) ) ) ) ,CS ),( CS + RCSe ) ) )", "obj1": 0.736734693877551, "obj2": 0.1253738760372429}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * ( ( ( Min( MDR ,PN ) + ( AMS * ( Const - DDR ) ) ) * RRS ) - ( FirstVNF_Mem * ( Max( FirstVNF_RAM_Server,( PN * FirstVNF_RAM_Server ) ) / DDR ) ) ) )", "choosing": "( ( ( MUM / DS ) / ( RRSe + CS ) ) / ( ( Min( ( RCSe + ( ( CS + RMSe ) / RCSe ) ) ,( ( MUC * MUC ) + ( Min( MUR ,MUM ) * ( ( RRSe + CS ) + DS ) ) ) ) / ( MUC / MUM ) ) / CS ) )", "obj1": 0.39387755102040817, "obj2": 0.44895105044785716}, {"determining": "( ( FirstVNF_Mem + Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( CS + Max( ( ( RCSe / RRSe ) - CS ),( ( RRSe / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.42653061224489797, "obj2": 0.4226994059105814}, {"determining": "Min( Max( Min( ( ACS - ACS ) ,( ACS - FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem + ( Max( BR,( ( DDR / FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem_Server * RRS ) ) ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,Max( DDR,DDR ) ) )", "choosing": "( ( Min( ( MUR + ( ( RMSe * RCSe ) + ( ( RCSe + RRSe ) * RRSe ) ) ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( RMSe - RRSe ) ) ) - ( MUC - ( ( ( ( Max( ( RMSe * CS ),( MUC / MUC ) ) - ( DS / ( RMSe + RMSe ) ) ) - ( RRSe * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) ) )", "obj1": 0.8938775510204081, "obj2": 0.050013692298161376}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( RRS / ACS ) + DDR ) / BR ) / ( ( Max( RRS,CRS ) + RRS ) - FirstVNF_CPU ) ),Min( PN ,PN ) ) ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( Max( BR,ARS ) - ( BR * AMS ) ) ) ) ) / Max( Max( PN,RRS ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( ( ( MUR - ( ( ( RCSe / RRSe ) - CS ) + MUM ) ) + ( MUR - DS ) ) ,( MUR / MUC ) ) + Max( RRSe,MUM ) ) + Max( ( ( RRSe / RMSe ) - CS ),( MUM / DS ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4304757494193336}, {"determining": "( ( Min( MDR ,DDR ) * Const ) * ( Const / ( ( PN - ( ( RRS + MDR ) * ( Max( CRS,Const ) / ( ACS * FirstVNF_Mem_Server ) ) ) ) / ( MRS / Const ) ) ) )", "choosing": "( ( ( ( ( MUM - ( ( CS * MUR ) / RCSe ) ) - ( ( MLU + CS ) * RMSe ) ) - MUR ) + ( MUR - RRSe ) ) + Max( ( ( RCSe / RRSe ) - CS ),( ( RRSe / ( MLU + Min( RMSe ,MUR ) ) ) / DS ) ) )", "obj1": 0.4142857142857143, "obj2": 0.4285187212902916}]}