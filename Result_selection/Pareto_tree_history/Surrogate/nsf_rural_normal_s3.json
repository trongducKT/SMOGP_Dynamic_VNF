{"1": [{"determining": "( Min( FirstVNF_CPU ,MDR ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / MUR ) * ( MLU / RCSe ) )", "obj1": 0.9800796812749004, "obj2": 0.026998738640769553}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( MUR + CS ) / Min( RCSe ,DS ) )", "obj1": 0.20916334661354583, "obj2": 0.774912163783138}, {"determining": "Min( Min( ( ( ( FirstVNF_RAM_Server / ACS ) - AMS ) + ACS ) ,RRS ) ,( MDR / PN ) )", "choosing": "( ( Min( Max( ( Max( MUR,( Min( CS ,MUC ) + MUC ) ) + ( ( MUM * MUM ) + ( MLU * MLU ) ) ),( RMSe / ( ( ( RMSe / MUM ) + DS ) / MUM ) ) ) ,Max( ( DS - ( ( RCSe - ( MUC - RRSe ) ) - ( RRSe - MUR ) ) ),( RMSe * ( ( MUM + MUC ) * MLU ) ) ) ) * MUC ) - ( MLU - RCSe ) )", "obj1": 0.31274900398406374, "obj2": 0.5937452855426476}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "( ( ( FirstVNF_CPU * ( AMS + DDR ) ) * PN ) / ( RRS - Const ) )", "choosing": "( Max( MUC,RMSe ) / ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - RCSe ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( AMS + ( ( BR - FirstVNF_Mem ) + Min( ( PN + AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,( Const + FirstVNF_Mem ) )", "choosing": "( ( MLU / RRSe ) + ( ( MLU / ( Max( MUR,MUR ) * MLU ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Const + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( DS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + PN ) * Max( BR,Const ) )", "choosing": "Max( ( MUC / DS ),Max( DS,MUR ) )", "obj1": 0.2290836653386454, "obj2": 0.7472474042861583}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU ) - ( PN - ( ( AMS - BR ) - Const ) ) )", "choosing": "( Min( Min( Min( ( RRSe + ( Max( Min( DS ,MUM ),Min( CS ,MUC ) ) / ( MUR + Min( DS ,MLU ) ) ) ) ,( RRSe - Min( MLU ,Min( ( CS - DS ) ,CS ) ) ) ) ,( Max( CS,( ( RRSe - RRSe ) + DS ) ) - MLU ) ) ,MUR ) / ( MUM + MUC ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( AMS + DDR ) * Max( ACS,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,CS ) ,( DS - CS ) )", "obj1": 0.32270916334661354, "obj2": 0.5926964894054033}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * RRS ) * Min( ( PN + ARS ) ,( PN / CRS ) ) )", "choosing": "( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( Max( MLU,RRSe ) - Max( CS,CS ) ) )", "obj1": 0.27689243027888444, "obj2": 0.6097084970609586}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.72778181263254}, {"determining": "( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( ( Max( RCSe,MUC ) / ( RCSe * RCSe ) ) - ( Max( MUR,RCSe ) * ( CS + MLU ) ) )", "obj1": 0.9043824701195219, "obj2": 0.08973190428266728}, {"determining": "( Min( MDR ,FirstVNF_Mem ) - ( FirstVNF_CPU + BR ) )", "choosing": "Max( ( ( RMSe - DS ) * ( CS / MUM ) ),Max( ( DS - MLU ),( MUR - CS ) ) )", "obj1": 0.9920318725099602, "obj2": 0.009760979256314665}, {"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - ( Max( MRS,CRS ) - FirstVNF_Mem ) ) - ( Const / MRS ) ) )", "choosing": "( ( MUM * CS ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) - ( MRS / Max( PN,FirstVNF_RAM ) ) ) ) - ( MDR / BR ) )", "choosing": "Max( ( ( MUM * MUC ) - ( MLU + ( ( DS * RCSe ) - ( DS + MUR ) ) ) ),Min( Min( CS ,RRSe ) ,( RCSe * ( Min( ( ( ( RCSe + RMSe ) + Max( RMSe,RMSe ) ) * RRSe ) ,RRSe ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU - ( FirstVNF_CPU - PN ) ) ,( ACS + ARS ) )", "choosing": "Max( Max( Min( RMSe ,CS ),( RRSe / MUC ) ),( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - PN ) - ( FirstVNF_RAM_Server - ( RRS / ACS ) ) )", "choosing": "Max( ( MUM / MUM ),Min( ( MLU * MUR ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( DDR + PN ) ),( Min( CRS ,FirstVNF_RAM_Server ) / Min( AMS ,PN ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17928286852589642, "obj2": 0.782314949222034}, {"determining": "( ( ( PN - Const ) + ( PN * ( AMS / Min( BR ,ACS ) ) ) ) / Max( ( ( CRS / CRS ) / Const ),( DDR * BR ) ) )", "choosing": "( ( ( MUR / DS ) - ( CS - RMSe ) ) / ( ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) * ( MUR / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_Mem_Server / DDR ) ,DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) )", "choosing": "Min( Max( RCSe,RCSe ) ,Max( Min( RMSe ,MUM ),( CS + RCSe ) ) )", "obj1": 0.46215139442231074, "obj2": 0.480530189906547}, {"determining": "Min( ( CRS / RRS ) ,Max( ( ( ARS - Const ) * Max( FirstVNF_Mem,ACS ) ),Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + ( RRSe + MLU ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) / ( ( ACS + FirstVNF_Mem_Server ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,Min( FirstVNF_CPU_Server ,( MRS - CRS ) ) )", "choosing": "( Max( MUC,MUR ) - ( Min( ( RCSe * DS ) ,( RRSe / DS ) ) + MUC ) )", "obj1": 0.5697211155378487, "obj2": 0.3679148806335169}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem / Const ) + ( Const - FirstVNF_CPU_Server ) ) + ( ( Const * FirstVNF_CPU_Server ) - ( MDR / CRS ) ) ) ,Max( ( ( Const / FirstVNF_CPU_Server ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( MUM / CS ) / ( ( ( MUM / CS ) * CS ) * ( ( RCSe * RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + Max( Max( ARS,( ( FirstVNF_CPU / FirstVNF_RAM ) + CRS ) ),AMS ) ) ,Min( Min( ( MDR - ACS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RCSe + ( RCSe + CS ) ) ) / ( ( ( MUC * RRSe ) - MUR ) / ( DS / MUR ) ) ) + ( ( ( DS * RCSe ) + Min( MUC ,MUC ) ) + Max( ( RMSe + CS ),Max( RRSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_RAM_Server ) ) * Max( ( AMS / DDR ),ARS ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "Min( ( MLU + Min( MUM ,MUM ) ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) )", "obj1": 0.36852589641434264, "obj2": 0.5495771009611908}, {"determining": "( ( ( AMS / ( FirstVNF_Mem_Server - ARS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( RRS + ACS ) ) ) - ( ( ( PN - BR ) + Max( Const,PN ) ) - ( Min( MDR ,ACS ) + ( DDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * MLU ) - ( MUR - ( DS / Min( ( ( RMSe / RCSe ) / MUC ) ,DS ) ) ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.8003757985100595}, {"determining": "( Max( FirstVNF_RAM,Const ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - Max( RCSe,MUR ) ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6305953648733944}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.2968127490039841, "obj2": 0.6049043376087903}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( ( AMS + ACS ) ,( BR - PN ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( Min( ( RRSe / MUR ) ,RRSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( Const / FirstVNF_CPU_Server ) - ( ( MRS + MRS ) + FirstVNF_RAM ) ) ) - Max( ACS,ARS ) )", "choosing": "( ( ( ( ( RMSe * MUR ) / MUR ) * ( RCSe / MLU ) ) + ( Max( CS,RRSe ) * ( MUC * RMSe ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( Min( ( CRS - MDR ) ,( FirstVNF_RAM_Server + RRS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( ( ( ( DS + RMSe ) - ( MUM + CS ) ) + ( ( CS / RRSe ) + ( MLU - RRSe ) ) ) * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( AMS + DDR ) ) * PN ) / ( RRS - Const ) )", "choosing": "( Max( MUC,RMSe ) / ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) * Max( BR,Const ) )", "choosing": "Max( ( MUC / DS ),Min( ( Max( ( MUC * MUM ),CS ) + MUC ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7910579375167857}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) / ( ( ACS + FirstVNF_Mem_Server ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,Min( FirstVNF_CPU_Server ,( MRS - CRS ) ) )", "choosing": "( Max( MUC,MUR ) - ( Min( ( RCSe * DS ) ,( RRSe / DS ) ) + MUC ) )", "obj1": 0.5697211155378487, "obj2": 0.3679148806335169}, {"determining": "( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( Max( ( DDR + RRS ),( FirstVNF_Mem + RRS ) ),( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) / ( BR - PN ) ) ) )", "choosing": "( RCSe - ( Max( MUR,RCSe ) * ( CS + MLU ) ) )", "obj1": 0.7669322709163346, "obj2": 0.21730839116670564}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( Max( DS,( MLU / MUC ) ) * Min( MUC ,RRSe ) )", "obj1": 0.250996015936255, "obj2": 0.6665151151031791}, {"determining": "Min( ( ( ( RRS * Const ) + ( FirstVNF_Mem / RRS ) ) + ( Min( Const ,CRS ) / Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) ) ) ) ,Min( Min( Min( DDR ,ACS ) ,Max( FirstVNF_CPU_Server,BR ) ) ,( ( BR - Const ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe / RMSe ) + ( MLU * RCSe ) ) + ( ( MUM - MLU ) * ( RCSe * DS ) ) ) ,( DS * RRSe ) )", "obj1": 0.5278884462151394, "obj2": 0.4414457228475405}, {"determining": "Max( ( ( Max( BR,Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - ( PN - FirstVNF_CPU_Server ) ) ),( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) + ( ( DDR * MRS ) / Min( FirstVNF_RAM_Server ,BR ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),( Min( RCSe ,Min( ( RMSe - RMSe ) ,RCSe ) ) / CS ) ) * ( ( CS * CS ) * ( DS / MLU ) ) ) + ( Max( ( RRSe - MUM ),Max( RRSe,MLU ) ) / ( DS / ( RMSe * RRSe ) ) ) )", "obj1": 0.2151394422310757, "obj2": 0.7266405216494174}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Min( MUM ,DS ) - Max( MUM,DS ) )", "obj1": 0.8585657370517928, "obj2": 0.12899212293071535}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,RRS ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,MLU ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5864109378624827}, {"determining": "Min( ( CRS / RRS ) ,Max( ( ( ARS - Const ) * Max( FirstVNF_Mem,ACS ) ),Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + ( RRSe + MLU ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU ) - ( PN - ( ( AMS - BR ) - Const ) ) )", "choosing": "( Min( Min( Min( ( RRSe + ( Max( Min( DS ,MUM ),Min( CS ,MUC ) ) / ( MUR + Min( DS ,MLU ) ) ) ) ,( RRSe - Min( MLU ,Min( ( CS - DS ) ,CS ) ) ) ) ,( Max( CS,( ( RRSe - RRSe ) + DS ) ) - MLU ) ) ,MUR ) / ( MUM + MUC ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server + ( ( ARS / PN ) * ( FirstVNF_CPU - ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( Max( RMSe,RMSe ),Min( DS ,MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6009589571812074}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,( FirstVNF_Mem / RRS ) )", "choosing": "Min( ( ( MUR * RCSe ) * ( DS * ( ( RCSe / RMSe ) + ( MLU * RCSe ) ) ) ) ,Max( Min( RMSe ,MUM ),( CS + RCSe ) ) )", "obj1": 0.4601593625498008, "obj2": 0.4890889172341722}, {"determining": "( ( ( ( AMS * CRS ) + ( Const / FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem - MDR ) / ( MDR * MRS ) ) ) - ( ( ARS / ( ARS * DDR ) ) - Max( ( FirstVNF_CPU_Server / BR ),Min( CRS ,DDR ) ) ) )", "choosing": "Max( ( ( ( RMSe + MUC ) + ( ( Max( ( RCSe - Min( MUC ,MUC ) ),( MLU + ( RCSe / RRSe ) ) ) / RMSe ) * CS ) ) - ( CS / Min( MUR ,MUR ) ) ),Min( MUC ,MLU ) )", "obj1": 0.9023904382470119, "obj2": 0.11737494030689592}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + Min( Min( DDR ,RRS ) ,( RRS + FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( ( DS * ( Max( ( RRSe * MUM ),( RRSe + DS ) ) - Max( ( MLU + MUR ),Min( DS ,MUC ) ) ) ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7572028991264995}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUC ,MUC ) + ( MUC / MUR ) )", "obj1": 0.9621513944223108, "obj2": 0.020125145020047745}, {"determining": "( ( ( AMS / ( FirstVNF_Mem_Server - ARS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( RRS + ACS ) ) ) - ( ( ( PN - BR ) + Max( Const,PN ) ) - ( Min( MDR ,ACS ) + ( DDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * MLU ) - ( MUR - ( DS / Min( ( ( RMSe / RCSe ) / MUC ) ,DS ) ) ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( ( Max( RCSe,MUC ) / ( RCSe * RCSe ) ) - ( Max( MUR,RCSe ) * ( CS + MLU ) ) )", "obj1": 0.9043824701195219, "obj2": 0.08973190428266728}, {"determining": "Max( ( ( PN + Max( ( ( DDR + Min( Max( ACS,PN ) ,( Const * ACS ) ) ) / DDR ),AMS ) ) - ACS ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_CPU_Server,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( ( RMSe + ( RRSe * CS ) ) ,( ( DS * ( DS / MLU ) ) / RCSe ) ) * Min( DS ,MUC ) ) ,Max( MLU,MUC ) )", "obj1": 0.5139442231075697, "obj2": 0.4686994107414477}, {"determining": "( ( ( AMS / ( FirstVNF_Mem_Server - ARS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( RRS + ACS ) ) ) - ( ( ( PN - BR ) + Max( Const,PN ) ) - ( Min( MDR ,ACS ) + ( DDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * MLU ) - ( MUR - ( DS / Min( ( ( RMSe / RCSe ) / MUC ) ,DS ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.17372401728133935}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) )", "choosing": "Min( ( ( MUR * RCSe ) * ( DS * RRSe ) ) ,Max( Min( RMSe ,MUM ),( CS + RCSe ) ) )", "obj1": 0.48406374501992033, "obj2": 0.4689465426159946}, {"determining": "( ( ( ( Const - Const ) * ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / Const ) * Max( BR,Const ) )", "choosing": "Max( ( DS / MUC ),( ( MUC / MUR ) + ( ( MUC / ( Min( ( MUC - CS ) ,Max( RCSe,CS ) ) - DS ) ) + DS ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7628655028233366}, {"determining": "( ( Max( Const,BR ) / ( FirstVNF_CPU_Server - MDR ) ) / ( FirstVNF_CPU * AMS ) )", "choosing": "Max( ( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ),( ( ( ( ( ( ( DS * MUM ) * RCSe ) - RRSe ) / MUM ) * RMSe ) / ( MLU * DS ) ) - MUM ) )", "obj1": 0.37649402390438247, "obj2": 0.5376019805808989}, {"determining": "Min( ( FirstVNF_CPU * ACS ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.5044315406723283}, {"determining": "( ( Max( AMS,Const ) / ( ( FirstVNF_CPU - ( BR * FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server * RRS ) ) ) - ( ( Min( MDR ,( FirstVNF_RAM_Server * ( FirstVNF_RAM * Max( ( ACS / FirstVNF_Mem ),( PN - MDR ) ) ) ) ) + ( FirstVNF_Mem + BR ) ) - ( ( PN - BR ) * Max( Const,PN ) ) ) )", "choosing": "( Min( MUM ,MLU ) + ( MUM * Max( ( MUM * ( RMSe / DS ) ),MUM ) ) )", "obj1": 0.8047808764940239, "obj2": 0.1750148240777565}, {"determining": "( ( CRS + PN ) / ( Max( Max( Min( Max( FirstVNF_CPU,FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM ) ),Max( ( FirstVNF_RAM_Server - MRS ),( Const + PN ) ) ),( ( ( DDR * FirstVNF_RAM ) / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) - ( ( DDR * CRS ) + ( PN * CRS ) ) ) ) - Const ) )", "choosing": "( Max( DS,( Max( MUR,RCSe ) * RRSe ) ) / ( MUM * RRSe ) )", "obj1": 0.34462151394422313, "obj2": 0.5543646254013462}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - ( ACS * AMS ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUC * RRSe ) ,Max( MLU,Min( Max( RCSe,( MLU + RMSe ) ) ,Min( RCSe ,RMSe ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.06383120289006299}, {"determining": "( ( CRS * FirstVNF_CPU_Server ) / ( ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) * FirstVNF_CPU ) )", "choosing": "( ( Max( Min( DS ,MUC ),( CS / RMSe ) ) / ( ( RRSe * MUR ) - Max( RMSe,RCSe ) ) ) / MUC )", "obj1": 0.9203187250996016, "obj2": 0.06527024442385256}, {"determining": "Min( ( Min( ( FirstVNF_Mem_Server / DDR ) ,DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) )", "choosing": "Min( Max( RCSe,RCSe ) ,Max( Min( RMSe ,MUM ),( CS + RCSe ) ) )", "obj1": 0.46215139442231074, "obj2": 0.480530189906547}, {"determining": "Min( ( MRS - ( AMS * ( ( FirstVNF_Mem - ( MDR * ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( DDR + PN ) ) ) ) + Min( Const ,FirstVNF_Mem_Server ) ) ) ) ,( FirstVNF_Mem + FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / RRSe ) + ( Max( RRSe,RCSe ) + RMSe ) )", "obj1": 0.9880478087649402, "obj2": 0.014746880784013178}, {"determining": "( Min( Max( MRS,BR ) ,( FirstVNF_CPU_Server / ARS ) ) * Max( ( ARS + MDR ),Min( AMS ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( MUM + ( ( Min( RRSe ,MLU ) - ( ( DS / ( RMSe * RMSe ) ) + MUR ) ) + ( DS * MLU ) ) ) / Max( MLU,RCSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7757414155551089}, {"determining": "( ( ( AMS / ( FirstVNF_Mem_Server - ARS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( RRS + ACS ) ) ) - ( ( ( PN - BR ) + Max( Const,PN ) ) - ( Min( MDR ,ACS ) + ( DDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * MLU ) - ( MUR - ( DS / Min( ( ( RMSe / RCSe ) / MUC ) ,DS ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.17372401728133935}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_RAM_Server ) ) * Max( ( AMS / DDR ),ARS ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "Min( ( MLU + Min( MUM ,MUM ) ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) )", "obj1": 0.36852589641434264, "obj2": 0.5495771009611908}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( MUR + CS ) / Min( RCSe ,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.7763914860292542}, {"determining": "( Max( PN,PN ) + ( Max( MRS,MRS ) - ( FirstVNF_Mem - DDR ) ) )", "choosing": "( ( MUC / MLU ) + ( DS - Max( Max( MUC,RMSe ),( ( Min( DS ,Max( ( MLU - RRSe ),CS ) ) + MUM ) - MUC ) ) ) )", "obj1": 0.7709163346613546, "obj2": 0.21329931961874013}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server + ( ( ARS / PN ) * ( FirstVNF_CPU - ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( Max( RMSe,RMSe ),Min( DS ,MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6009589571812074}, {"determining": "( Max( PN,PN ) + ( Max( MRS,MRS ) - ( FirstVNF_Mem - DDR ) ) )", "choosing": "( ( MUC / MLU ) + ( DS - Max( Max( MUC,RMSe ),( ( Min( DS ,Max( ( MLU - RRSe ),CS ) ) + MUM ) - MUC ) ) ) )", "obj1": 0.7709163346613546, "obj2": 0.21329931961874013}, {"determining": "( Min( MDR ,FirstVNF_Mem ) - ( FirstVNF_CPU + BR ) )", "choosing": "Max( ( ( RMSe - DS ) * ( CS / MUM ) ),Max( ( DS - MLU ),( MUR - CS ) ) )", "obj1": 0.9920318725099602, "obj2": 0.009760979256314665}, {"determining": "( Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * ( Max( Max( CRS,ARS ),( Max( CRS,PN ) * ( MDR + FirstVNF_Mem_Server ) ) ) + PN ) ) ),Max( ( FirstVNF_Mem / BR ),( DDR * DDR ) ) ) * Min( ( ( RRS + ARS ) / ( FirstVNF_RAM_Server + CRS ) ) ,Max( Min( MDR ,RRS ),( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( CS - ( MUC * Max( DS,RMSe ) ) ) + MUC ) ,( ( RCSe - DS ) / ( ( Min( ( MLU * ( RCSe + ( CS + MUC ) ) ) ,DS ) / RRSe ) + RCSe ) ) )", "obj1": 0.36852589641434264, "obj2": 0.5495771009611908}, {"determining": "( ( PN * ( ( Min( Max( MRS,BR ) ,( FirstVNF_CPU_Server / ARS ) ) * Max( Min( AMS ,FirstVNF_CPU ),Max( FirstVNF_CPU_Server,CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR * RMSe ),( RCSe / MUC ) ) + Max( ( MUR * MLU ),( RRSe * RRSe ) ) ) - Max( ( ( MUM - MLU ) / ( MUC / RMSe ) ),( Min( ( RRSe / CS ) ,Min( MUM ,CS ) ) / Max( ( MUM - RMSe ),( MUR - MLU ) ) ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0031883942855328935}, {"determining": "( Min( Const ,( RRS / Max( CRS,CRS ) ) ) - ( ( Min( MDR ,Const ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( MLU + RRSe ) - ( Min( MUM ,DS ) - Max( ( MUR / MLU ),DS ) ) )", "obj1": 0.9960159362549801, "obj2": 0.0014223253485329715}, {"determining": "( ( BR - ARS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - RCSe ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( AMS + ( ( BR - FirstVNF_Mem ) + Min( ( PN + AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,( Const + FirstVNF_Mem ) )", "choosing": "( ( MLU / RRSe ) + ( ( MLU / ( Max( MUR,MUR ) * MLU ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Const + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( DS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - ( Max( MRS,CRS ) - FirstVNF_Mem ) ) - ( Const / MRS ) ) )", "choosing": "( ( MUM * CS ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) - ( MRS / Max( PN,FirstVNF_RAM ) ) ) ) - ( MDR / BR ) )", "choosing": "Max( ( ( MUM * MUC ) - ( MLU + ( ( DS * RCSe ) - ( DS + MUR ) ) ) ),Min( Min( CS ,RRSe ) ,( RCSe * ( Min( ( ( ( RCSe + RMSe ) + Max( RMSe,RMSe ) ) * RRSe ) ,RRSe ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU - ( FirstVNF_CPU - PN ) ) ,( ACS + ARS ) )", "choosing": "Max( Max( Min( RMSe ,CS ),( RRSe / MUC ) ),( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - PN ) - ( FirstVNF_RAM_Server - ( RRS / ACS ) ) )", "choosing": "Max( ( MUM / MUM ),Min( ( MLU * MUR ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) + ( PN * ( AMS / Min( BR ,ACS ) ) ) ) / Max( ( ( CRS / CRS ) / Const ),( DDR * BR ) ) )", "choosing": "( ( ( MUR / DS ) - ( CS - RMSe ) ) / ( ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) * ( MUR / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem / Const ) + ( Const - FirstVNF_CPU_Server ) ) + ( ( Const * FirstVNF_CPU_Server ) - ( MDR / CRS ) ) ) ,Max( ( ( Const / FirstVNF_CPU_Server ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( MUM / CS ) / ( ( ( MUM / CS ) * CS ) * ( ( RCSe * RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + Max( Max( ARS,( ( FirstVNF_CPU / FirstVNF_RAM ) + CRS ) ),AMS ) ) ,Min( Min( ( MDR - ACS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RCSe + ( RCSe + CS ) ) ) / ( ( ( MUC * RRSe ) - MUR ) / ( DS / MUR ) ) ) + ( ( ( DS * RCSe ) + Min( MUC ,MUC ) ) + Max( ( RMSe + CS ),Max( RRSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( ( AMS + ACS ) ,( BR - PN ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( Min( ( RRSe / MUR ) ,RRSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( Const / FirstVNF_CPU_Server ) - ( ( MRS + MRS ) + FirstVNF_RAM ) ) ) - Max( ACS,ARS ) )", "choosing": "( ( ( ( ( RMSe * MUR ) / MUR ) * ( RCSe / MLU ) ) + ( Max( CS,RRSe ) * ( MUC * RMSe ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,BR ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * ( ( Max( ( MUR + RMSe ),Max( MUC,RCSe ) ) * ( ( CS * CS ) * ( DS / MLU ) ) ) + ( Max( Max( RRSe,MUM ),Max( RRSe,MLU ) ) / ( ( MUM - RCSe ) / ( RMSe * RRSe ) ) ) ) ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ACS ) - ( Const + AMS ) )", "choosing": "Min( ( ( Max( Min( MUC ,MUR ),CS ) * MUM ) + RCSe ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / ARS ) * AMS ) + BR ) - ( Const + AMS ) )", "choosing": "( ( RCSe / RMSe ) + ( RMSe + Max( ( DS - Min( RRSe ,Min( ( MUR - ( RMSe + MUR ) ) ,MUM ) ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( BR + ( FirstVNF_CPU - Max( RRS,FirstVNF_RAM ) ) ) ) - ( ACS * ARS ) ) / ( FirstVNF_RAM * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( MUC / MUR ) ) * ( ( MUC - MUR ) / ( RCSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + PN ) / ( RRS / ( ( ARS * MDR ) - ( ARS - CRS ) ) ) )", "choosing": "( ( MUM - RRSe ) / ( ( ( ( ( ( DS * ( MUC - RMSe ) ) + Min( ( RCSe + MUR ) ,Min( MUC ,MLU ) ) ) + MUR ) * MUR ) * RRSe ) + Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - CRS ) / Min( FirstVNF_CPU ,BR ) )", "choosing": "( Max( DS,( MUM - RRSe ) ) / ( Max( ( Max( Max( ( ( MUC + RMSe ) - DS ),RMSe ),( MUR + RRSe ) ) + DS ),Max( MUC,( ( Max( DS,MUR ) / MUR ) * MUM ) ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,( BR - FirstVNF_CPU ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ),Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( Min( PN ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) / ( DDR - Max( Min( RRS ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ),( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + ( MDR * Const ) ) ) ,( Const - FirstVNF_Mem_Server ) )", "choosing": "( DS / ( ( ( MUM + CS ) * CS ) * ( MUR * ( ( MLU / ( ( ( MUR - RMSe ) - ( RMSe + MUR ) ) * MLU ) ) / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem / Const ) + ( Const - FirstVNF_CPU_Server ) ) + ( ( Const * FirstVNF_CPU_Server ) - ( MDR / Min( Max( ( RRS / FirstVNF_RAM_Server ),ARS ) ,DDR ) ) ) ) ,Max( ( ( Const / FirstVNF_Mem ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( MUM * CS ) / ( ( ( MUM / CS ) * CS ) * ( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( Max( Max( Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,Min( Const ,FirstVNF_RAM ) ),Max( ( FirstVNF_RAM_Server - MRS ),( Const + PN ) ) ),( ( ( DDR * Min( BR ,ARS ) ) / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) - ( ( DDR * CRS ) + ( PN * CRS ) ) ) ) * Max( FirstVNF_Mem_Server,RRS ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( MUR,MUC ) * RRSe ) + Max( ( Max( Min( RRSe ,( MUC / CS ) ),( CS + RRSe ) ) / Max( ( DS - MUM ),RMSe ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,( AMS - Const ) ) - PN ) - ( FirstVNF_RAM_Server - ( RRS / ACS ) ) )", "choosing": "Max( ( MUM / MUM ),Min( ( MLU * MUR ) ,( MUR * ( DS * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS + MDR ) ),( ARS * CRS ) ) ) / CRS ) - ACS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( RRSe / ( ( ( MUC * ( ( RCSe - RCSe ) + Max( ( CS - ( MLU - MUR ) ),Max( MLU,Min( DS ,MLU ) ) ) ) ) / MUR ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - AMS ) ,( BR + Const ) )", "choosing": "( ( MLU / RRSe ) + ( ( ( RMSe - MUM ) * ( Max( CS,RMSe ) + RRSe ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - BR ) + ( ( Const + PN ) * Max( BR,Const ) ) )", "choosing": "( Max( ( RCSe * RRSe ),Min( DS ,( ( ( RRSe * ( RRSe * Max( MUM,MUM ) ) ) - Max( Min( RMSe ,Max( MUM,MUC ) ),( ( RMSe + DS ) / Min( CS ,MUR ) ) ) ) / RMSe ) ) ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( MLU * DS ) + ( RMSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_RAM ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "( ( MLU / RRSe ) + ( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - AMS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,CS ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) - ( MRS / Max( PN,FirstVNF_RAM ) ) ) ) - ( MDR / BR ) )", "choosing": "Max( ( ( MUM * MUC ) - ( MLU + ( ( DS * RCSe ) - ( DS + MUR ) ) ) ),Min( Min( CS ,RRSe ) ,( RCSe * ( Min( ( ( ( RCSe + RMSe ) + Max( RMSe,RMSe ) ) * RRSe ) ,RRSe ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( AMS + ( ( BR - FirstVNF_Mem ) + Min( ( PN + AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,( Const + FirstVNF_Mem ) )", "choosing": "( ( MLU / RRSe ) + ( ( MLU / ( Max( MUR,MUR ) * MLU ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) - ( MRS / Max( PN,FirstVNF_RAM ) ) ) ) - ( MDR / BR ) )", "choosing": "Max( ( ( MUM * MUC ) - ( MLU + ( ( DS * RCSe ) - ( DS + MUR ) ) ) ),Min( Min( CS ,RRSe ) ,( RCSe * ( Min( ( ( ( RCSe + RMSe ) + Max( RMSe,RMSe ) ) * RRSe ) ,RRSe ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( AMS + ( ( BR - FirstVNF_Mem ) + Min( ( PN + AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,( Const + FirstVNF_Mem ) )", "choosing": "( ( MLU / RRSe ) + ( ( MLU / ( Max( MUR,MUR ) * MLU ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) - ( MRS / Max( PN,FirstVNF_RAM ) ) ) ) - ( MDR / BR ) )", "choosing": "Max( ( ( MUM * MUC ) - ( MLU + ( ( DS * RCSe ) - ( DS + MUR ) ) ) ),Min( Min( CS ,RRSe ) ,( RCSe * ( Min( ( ( ( RCSe + RMSe ) + Max( RMSe,RMSe ) ) * RRSe ) ,RRSe ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( AMS + ( ( BR - FirstVNF_Mem ) + Min( ( PN + AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,( Const + FirstVNF_Mem ) )", "choosing": "( ( MLU / RRSe ) + ( ( MLU / ( Max( MUR,MUR ) * MLU ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( RRSe * Min( MUC ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - BR ) ,( ACS + ( FirstVNF_CPU * CRS ) ) )", "choosing": "( ( DS - ( Min( CS ,( MUM - ( MUM + ( MLU + ( MUC - MLU ) ) ) ) ) / MUC ) ) * Min( MUC ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) - ( MRS / Max( PN,FirstVNF_RAM ) ) ) ) - ( MDR / BR ) )", "choosing": "Max( ( ( MUM * MUC ) - ( MLU + ( ( DS * RCSe ) - ( DS + MUR ) ) ) ),Min( Min( CS ,RRSe ) ,( RCSe * ( Min( ( ( ( RCSe + RMSe ) + Max( RMSe,RMSe ) ) * RRSe ) ,RRSe ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) - ( MRS / Max( PN,FirstVNF_RAM ) ) ) ) - ( MDR / BR ) )", "choosing": "Max( ( ( MUM * MUC ) - ( MLU + ( ( DS * RCSe ) - ( DS + MUR ) ) ) ),Min( Min( CS ,RRSe ) ,( RCSe * ( Min( ( ( ( RCSe + RMSe ) + Max( RMSe,RMSe ) ) * RRSe ) ,RRSe ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( MDR - ACS ) ,Const ) ,( ( ( FirstVNF_RAM / FirstVNF_Mem ) / ( MRS - MRS ) ) / ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ,( CRS + Max( AMS,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RCSe + RMSe ) ) / ( ( MUC - MUM ) / ( DS / MUR ) ) ) + Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( MRS - Min( Min( Min( Min( ARS ,AMS ) ,Const ) ,FirstVNF_CPU_Server ) ,( CRS + Max( AMS,FirstVNF_RAM ) ) ) ) ) / ( FirstVNF_RAM * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) * Max( ( DS * Min( Max( ( RCSe - MUR ),Max( MUC,Max( MUC,RCSe ) ) ) ,Max( ( RRSe - Min( RMSe ,MUC ) ),RCSe ) ) ),( ( ( MUR + MLU ) * ( RCSe + RMSe ) ) / ( ( MUC - MUM ) / ( DS / MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( Const,( Const * ( MRS * MDR ) ) ) * PN ) ,FirstVNF_CPU_Server ) ,( CRS + Max( AMS,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Max( Max( Max( RRSe,( RRSe - MUC ) ),( ( RRSe / MUR ) - DS ) ),RCSe ) + MLU ) * ( RCSe + RMSe ) ) / ( ( MUC * MUM ) / ( MUR / MUR ) ) ) + Min( Max( ( RMSe + CS ),( RRSe * CS ) ) ,( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + Max( Max( ARS,( ( FirstVNF_CPU / FirstVNF_RAM ) + CRS ) ),AMS ) ) ,Min( Min( ( MDR - ACS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RCSe + ( RCSe + CS ) ) ) / ( ( ( MUC * RRSe ) - MUR ) / ( DS / MUR ) ) ) + ( ( ( DS * RCSe ) + Min( MUC ,MUC ) ) + Max( ( RMSe + CS ),Max( RRSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + Max( Max( ARS,( ( FirstVNF_CPU / FirstVNF_RAM ) + CRS ) ),AMS ) ) ,Min( Min( ( MDR - ACS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RCSe + ( RCSe + CS ) ) ) / ( ( ( MUC * RRSe ) - MUR ) / ( DS / MUR ) ) ) + ( ( ( DS * RCSe ) + Min( MUC ,MUC ) ) + Max( ( RMSe + CS ),Max( RRSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) + ( ( DDR * MRS ) / Min( FirstVNF_RAM_Server ,BR ) ) ) ) - Max( ACS,( RRS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * MUC ) - ( MLU + ( ( RCSe * DS ) - ( DS + MUR ) ) ) ),Min( Min( CS ,RRSe ) ,Min( RCSe ,( ( Max( ( RRSe - MUM ),Max( RRSe,MLU ) ) / ( ( MUM - RCSe ) / ( RMSe * RRSe ) ) ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( MRS / ( PN * ARS ) ) - FirstVNF_CPU_Server ) ) - Max( ACS,( RRS / FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),( Min( RCSe ,Min( ( RMSe - RMSe ) ,RCSe ) ) / CS ) ) * ( ( CS * CS ) * ( DS / MLU ) ) ) + ( Max( ( RRSe - MUM ),Max( RRSe,MLU ) ) / ( ( MUM - RCSe ) / ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem / Const ) + ( Const - FirstVNF_CPU_Server ) ) + ( ( Const * FirstVNF_CPU_Server ) - ( MDR / CRS ) ) ) ,( DDR * MDR ) )", "choosing": "( ( MUM / CS ) / ( ( ( MUM / ( MUM + RRSe ) ) * CS ) * ( ( RCSe * RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( MRS / ( AMS / ( FirstVNF_Mem_Server - ARS ) ) ) - FirstVNF_CPU_Server ) ) - Max( ACS,( RRS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * MUC ) - ( MLU + ( ( RCSe * RRSe ) - ( DS + MUR ) ) ) ),Min( Min( CS ,RRSe ) ,Min( RCSe ,( DS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( MRS / ( PN * ARS ) ) - FirstVNF_CPU_Server ) ) - Max( ACS,( RRS / FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - ( DS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * RRS ),( Const / FirstVNF_RAM_Server ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * MDR ) ) )", "choosing": "( ( Max( ( RCSe - Min( MUC ,MUC ) ),( MLU + ( CS / RRSe ) ) ) - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + PN ) / ( RRS - Const ) )", "choosing": "( Max( DS,RMSe ) / ( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( AMS * ( ( FirstVNF_Mem - ( MDR * Min( AMS ,FirstVNF_CPU ) ) ) + Min( Const ,FirstVNF_Mem_Server ) ) ) ) ,( FirstVNF_Mem + FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( FirstVNF_Mem / ( RRS - Const ) )", "choosing": "( Max( DS,RMSe ) / ( ( Max( RMSe,MLU ) - MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,( FirstVNF_RAM_Server + RRS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( ( ( ( DS + RMSe ) - ( MUM + CS ) ) + ( ( CS / RRSe ) + ( MLU - RRSe ) ) ) * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) * Max( BR,Const ) )", "choosing": "Max( ( MUC / DS ),Min( ( Max( ( MUC * MUM ),CS ) + MUC ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7910579375167857}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.6733067729083665, "obj2": 0.259635600201141}, {"determining": "( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) ),( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) / ( BR - PN ) ) ) )", "choosing": "( RCSe - ( Max( MUR,RCSe ) * ( CS * MUC ) ) )", "obj1": 0.5876494023904383, "obj2": 0.35682099197835665}, {"determining": "( ( ( PN - Const ) + ( FirstVNF_CPU_Server * MDR ) ) / ( ( FirstVNF_Mem * ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / CRS ) ) * ( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( ( ( MLU * DS ) - ( DS / RMSe ) ) / ( RRSe + ( MUR / MUM ) ) )", "obj1": 0.5219123505976095, "obj2": 0.39361242101651733}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( Max( DS,( MLU / MUC ) ) * Min( MUC ,RRSe ) )", "obj1": 0.250996015936255, "obj2": 0.6665151151031791}, {"determining": "Min( ( ( Max( FirstVNF_CPU,Max( FirstVNF_RAM,ARS ) ) / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Min( ( FirstVNF_RAM_Server - MRS ) ,Min( ARS ,MDR ) ) ) ) )", "choosing": "Min( ( ( MUR - ( Max( RCSe,( MUM * RCSe ) ) * ( RRSe + Max( Min( Max( RMSe,RCSe ) ,( MLU * RCSe ) ),RCSe ) ) ) ) * RMSe ) ,Max( ( RRSe * Min( MUC ,RRSe ) ),( RCSe + CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.44960101520477835}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( Max( Max( ARS,FirstVNF_CPU_Server ),AMS ),MRS ) / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "( ( MUC / MUR ) + ( ( ( ( MUR + MLU ) * ( RCSe + RMSe ) ) / ( ( ( MUC * RRSe ) - MUR ) / ( DS / MUR ) ) ) + ( ( ( DS * RCSe ) + Min( MUC ,MUC ) ) + Max( ( RMSe + CS ),( RRSe * CS ) ) ) ) )", "obj1": 0.44621513944223107, "obj2": 0.46614267519995667}, {"determining": "Min( ( ( ( Const * FirstVNF_CPU_Server ) - ( MDR / Min( Max( ( RRS / FirstVNF_RAM_Server ),Min( Min( DDR ,RRS ) ,( RRS + FirstVNF_CPU ) ) ) ,Min( DDR ,MRS ) ) ) ) + Max( ( FirstVNF_Mem / Const ),( Const - FirstVNF_CPU_Server ) ) ) ,Max( ( ( Const / FirstVNF_Mem ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) * CS ) / MUM ) / ( ( ( MUC / CS ) * CS ) * ( RCSe + MLU ) ) )", "obj1": 0.2250996015936255, "obj2": 0.7091236386350982}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( AMS * ( ( BR - FirstVNF_CPU ) + ( Max( MRS,( ( Const + Min( RRS ,FirstVNF_RAM ) ) + ( ( ACS - PN ) + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem - DDR ) ) ) ) )", "choosing": "( Max( DS,( MUM / MUC ) ) * ( Min( Max( ( RMSe - ( Max( MUC,MUC ) * ( RMSe - ( RRSe * CS ) ) ) ),CS ) ,DS ) + ( ( DS + CS ) + MUC ) ) )", "obj1": 0.7370517928286853, "obj2": 0.23638684216252173}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU ) - ( PN - ( ( AMS - BR ) - Const ) ) )", "choosing": "( Min( Min( Min( ( RRSe + ( Max( Min( DS ,MUM ),Min( CS ,MUC ) ) / ( MUR + Min( DS ,MLU ) ) ) ) ,( RRSe - Min( MLU ,Min( ( CS - DS ) ,CS ) ) ) ) ,( Max( CS,( ( RRSe - RRSe ) + DS ) ) - MLU ) ) ,MUR ) / ( MUM + MUC ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) / ( ( ACS + FirstVNF_Mem_Server ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,Min( FirstVNF_CPU_Server ,( MRS - CRS ) ) )", "choosing": "( Max( MUC,MUR ) - ( Min( ( RCSe * DS ) ,( RRSe / DS ) ) + MUC ) )", "obj1": 0.5697211155378487, "obj2": 0.3679148806335169}, {"determining": "( ( ( AMS / ( FirstVNF_Mem_Server - ARS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( RRS + ACS ) ) ) - ( ( ( PN - BR ) + Max( Const,PN ) ) - ( Min( MDR ,ACS ) + ( DDR + FirstVNF_Mem ) ) ) )", "choosing": "( RCSe - ( Max( MUR,RCSe ) * ( CS + MLU ) ) )", "obj1": 0.8227091633466136, "obj2": 0.15944770570245775}, {"determining": "( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( ( Max( RCSe,MUC ) / ( RCSe * RCSe ) ) - ( Max( MUR,RCSe ) * ( CS + MLU ) ) )", "obj1": 0.9043824701195219, "obj2": 0.08973190428266728}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server + ( ( ARS / PN ) * ( FirstVNF_CPU - ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( Max( RMSe,RMSe ),Min( DS ,MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6009589571812074}, {"determining": "Max( ( ( FirstVNF_Mem - ( MDR * Min( AMS ,FirstVNF_CPU ) ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) ) * RRSe ) ,Max( MLU,Min( Max( RCSe,( MLU + RMSe ) ) ,Min( RCSe ,RMSe ) ) ) )", "obj1": 0.8605577689243028, "obj2": 0.11360506121153302}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Min( MUM ,DS ) - Max( MUM,DS ) )", "obj1": 0.8585657370517928, "obj2": 0.12899212293071535}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * Min( MUC ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.19322709163346613, "obj2": 0.7176358733099337}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,RRS ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,MLU ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5864109378624827}, {"determining": "( ( ( AMS / ( FirstVNF_Mem_Server - ARS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( RRS + ACS ) ) ) - ( ( ( PN - BR ) + Max( Const,PN ) ) - ( Min( MDR ,ACS ) + ( DDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * MLU ) - ( MUR - ( DS / Min( ( ( RMSe / RCSe ) / MUC ) ,DS ) ) ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUC ,MUC ) + ( MUC / MUR ) )", "obj1": 0.9621513944223108, "obj2": 0.020125145020047745}, {"determining": "( ( Max( Max( MRS,( AMS - Const ) ),BR ) * CRS ) / ( FirstVNF_CPU * AMS ) )", "choosing": "Max( Max( ( MUM * CS ),( RRSe / RCSe ) ),( ( DS * RRSe ) + Min( RRSe ,RRSe ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5751020669377483}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( DDR + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) )", "choosing": "( MUC / Min( RCSe ,Min( ( ( RRSe + RRSe ) * MLU ) ,( DS * ( MUC / MUM ) ) ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7350692472515793}, {"determining": "( ( ( ( Const - Const ) * ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / Const ) * Max( BR,Const ) )", "choosing": "Max( ( DS / MUC ),( ( MUC / MUR ) + ( ( MUC / ( Min( ( MUC - CS ) ,Max( RCSe,CS ) ) - DS ) ) + DS ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7628655028233366}, {"determining": "( ( Max( AMS,Const ) / ( ( FirstVNF_CPU - ( BR * FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server * RRS ) ) ) - ( ( Min( MDR ,( FirstVNF_RAM_Server * ( FirstVNF_RAM * Max( ( ACS / FirstVNF_Mem ),( PN - MDR ) ) ) ) ) + ( FirstVNF_Mem + BR ) ) - ( ( PN - BR ) * Max( Const,PN ) ) ) )", "choosing": "( Min( MUM ,MLU ) + ( MUM * Max( ( MUM * ( RMSe / DS ) ),MUM ) ) )", "obj1": 0.8047808764940239, "obj2": 0.1750148240777565}, {"determining": "Min( ( FirstVNF_CPU * ACS ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.5044315406723283}, {"determining": "Min( ( CRS / RRS ) ,Max( ( ( ARS - Const ) * Max( FirstVNF_Mem,ACS ) ),Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + ( RRSe + MLU ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( Max( Const,BR ) / ( FirstVNF_CPU_Server - MDR ) ) / ( FirstVNF_CPU * AMS ) )", "choosing": "Max( ( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ),( ( ( ( ( ( ( DS * MUM ) * RCSe ) - RRSe ) / MUM ) * RMSe ) / ( MLU * DS ) ) - MUM ) )", "obj1": 0.37649402390438247, "obj2": 0.5376019805808989}, {"determining": "( ( CRS + PN ) / ( Max( Max( Min( Max( FirstVNF_CPU,FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM ) ),Max( ( FirstVNF_RAM_Server - MRS ),( Const + PN ) ) ),( ( ( DDR * FirstVNF_RAM ) / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) - ( ( DDR * CRS ) + ( PN * CRS ) ) ) ) - Const ) )", "choosing": "( Max( DS,( Max( MUR,RCSe ) * RRSe ) ) / ( MUM * RRSe ) )", "obj1": 0.34462151394422313, "obj2": 0.5543646254013462}, {"determining": "( ( ARS - ( FirstVNF_CPU * AMS ) ) + ( Max( MRS,MRS ) - ( FirstVNF_Mem - DDR ) ) )", "choosing": "( MLU + ( DS + Max( RMSe,( ( Min( Max( ( MLU - RRSe ),CS ) ,DS ) + MUM ) - MUC ) ) ) )", "obj1": 0.7549800796812749, "obj2": 0.23059871591074574}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( RMSe - RCSe ) - Min( MUR ,DS ) )", "obj1": 0.9063745019920318, "obj2": 0.06433584751076128}, {"determining": "( ( ( ( AMS * CRS ) + ( Const / FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem - MDR ) / ( MDR * MRS ) ) ) - ( FirstVNF_RAM_Server * PN ) )", "choosing": "Max( ( ( ( RMSe + MUC ) + ( ( Max( ( RCSe - Min( MUC ,MUC ) ),( MLU + ( RCSe / RRSe ) ) ) / RMSe ) * CS ) ) - ( CS / Min( MUR ,MUR ) ) ),Min( MUC ,MLU ) )", "obj1": 0.9860557768924303, "obj2": 0.013959841621104765}, {"determining": "( Min( Max( MRS,BR ) ,( FirstVNF_CPU_Server / ARS ) ) * Max( ( ARS + MDR ),Min( AMS ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( MUM + ( ( Min( RRSe ,MLU ) - ( ( DS / ( RMSe * RMSe ) ) + MUR ) ) + ( DS * MLU ) ) ) / Max( MLU,RCSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7757414155551089}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( MUR + CS ) / Min( RCSe ,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.7763914860292542}, {"determining": "( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( Max( ( DDR + RRS ),( FirstVNF_Mem + RRS ) ),( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) / ( BR - PN ) ) ) )", "choosing": "( RCSe - ( Max( MUR,RCSe ) * ( CS + MLU ) ) )", "obj1": 0.7669322709163346, "obj2": 0.21730839116670564}, {"determining": "( Max( PN,PN ) + ( Max( MRS,MRS ) - ( FirstVNF_Mem - DDR ) ) )", "choosing": "( ( MUC / MLU ) + ( DS - Max( Max( MUC,RMSe ),( ( Min( DS ,Max( ( MLU - RRSe ),CS ) ) + MUM ) - MUC ) ) ) )", "obj1": 0.7709163346613546, "obj2": 0.21329931961874013}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - ( ACS * AMS ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUC * RRSe ) ,Max( MLU,Min( Max( RCSe,( MLU + RMSe ) ) ,Min( RCSe ,RMSe ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.06383120289006299}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server + ( ( ARS / PN ) * ( FirstVNF_CPU - ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( Max( RMSe,RMSe ),Min( DS ,MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6009589571812074}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9243027888446215, "obj2": 0.05519817138487276}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_RAM_Server ) ) * Max( ( AMS / DDR ),ARS ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "Min( ( MLU + Min( MUM ,MUM ) ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) )", "obj1": 0.36852589641434264, "obj2": 0.5495771009611908}, {"determining": "( Max( PN,PN ) + ( Max( MRS,MRS ) - ( FirstVNF_Mem - DDR ) ) )", "choosing": "( ( MUC / MLU ) + ( DS - Max( Max( MUC,RMSe ),( ( Min( DS ,Max( ( MLU - RRSe ),CS ) ) + MUM ) - MUC ) ) ) )", "obj1": 0.7709163346613546, "obj2": 0.21329931961874013}, {"determining": "Min( Min( ( Max( Const,( ( ( PN - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,AMS ) ) * AMS ) ) * Const ) ,FirstVNF_CPU_Server ) ,( CRS + Max( AMS,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RCSe + RMSe ) ) / ( ( MUC * MUM ) / ( DS / MUR ) ) ) + DS )", "obj1": 0.3745019920318725, "obj2": 0.5481666960107566}, {"determining": "( Min( MDR ,FirstVNF_Mem ) - ( FirstVNF_CPU + BR ) )", "choosing": "Max( ( ( RMSe - DS ) * ( CS / MUM ) ),Max( ( DS - MLU ),( MUR - CS ) ) )", "obj1": 0.9920318725099602, "obj2": 0.009760979256314665}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9243027888446215, "obj2": 0.05519817138487276}, {"determining": "( ( PN * ( ( Min( Max( MRS,BR ) ,( FirstVNF_CPU_Server / ARS ) ) * Max( Min( AMS ,FirstVNF_CPU ),Max( FirstVNF_CPU_Server,CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR * RMSe ),( RCSe / MUC ) ) + Max( ( MUR * MLU ),( RRSe * RRSe ) ) ) - Max( ( ( MUM - MLU ) / ( MUC / RMSe ) ),( Min( ( RRSe / CS ) ,Min( MUM ,CS ) ) / Max( ( MUM - RMSe ),( MUR - MLU ) ) ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0031883942855328935}, {"determining": "( Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * ( Max( Max( CRS,ARS ),( Max( CRS,PN ) * ( MDR + FirstVNF_Mem_Server ) ) ) + PN ) ) ),Max( ( FirstVNF_Mem / BR ),( DDR * DDR ) ) ) * Min( ( ( RRS + ARS ) / ( FirstVNF_RAM_Server + CRS ) ) ,Max( Min( MDR ,RRS ),( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( CS - ( MUC * Max( DS,RMSe ) ) ) + MUC ) ,( ( RCSe - DS ) / ( ( Min( ( MLU * ( RCSe + ( CS + MUC ) ) ) ,DS ) / RRSe ) + RCSe ) ) )", "obj1": 0.36852589641434264, "obj2": 0.5495771009611908}, {"determining": "( Min( FirstVNF_CPU_Server ,RRS ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( Min( MUM ,DS ) - Min( MUC ,MUC ) ) )", "obj1": 0.9960159362549801, "obj2": 0.0014223253485329715}, {"determining": "( Min( Const ,( RRS / Max( CRS,CRS ) ) ) - ( ( Min( MDR ,Const ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( MLU + RRSe ) - ( Min( MUM ,DS ) - Max( ( MUR / MLU ),DS ) ) )", "obj1": 0.9960159362549801, "obj2": 0.0014223253485329715}, {"determining": "( ( ( FirstVNF_CPU * ( AMS + DDR ) ) * PN ) / ( RRS - Const ) )", "choosing": "( Max( MUC,RMSe ) / ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - RCSe ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( AMS + ( ( BR - FirstVNF_Mem ) + Min( ( PN + AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,( Const + FirstVNF_Mem ) )", "choosing": "( ( MLU / RRSe ) + ( ( MLU / ( Max( MUR,MUR ) * MLU ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Const + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( DS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - ( Max( MRS,CRS ) - FirstVNF_Mem ) ) - ( Const / MRS ) ) )", "choosing": "( ( MUM * CS ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) - ( MRS / Max( PN,FirstVNF_RAM ) ) ) ) - ( MDR / BR ) )", "choosing": "Max( ( ( MUM * MUC ) - ( MLU + ( ( DS * RCSe ) - ( DS + MUR ) ) ) ),Min( Min( CS ,RRSe ) ,( RCSe * ( Min( ( ( ( RCSe + RMSe ) + Max( RMSe,RMSe ) ) * RRSe ) ,RRSe ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU - ( FirstVNF_CPU - PN ) ) ,( ACS + ARS ) )", "choosing": "Max( Max( Min( RMSe ,CS ),( RRSe / MUC ) ),( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - PN ) - ( FirstVNF_RAM_Server - ( RRS / ACS ) ) )", "choosing": "Max( ( MUM / MUM ),Min( ( MLU * MUR ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) + ( PN * ( AMS / Min( BR ,ACS ) ) ) ) / Max( ( ( CRS / CRS ) / Const ),( DDR * BR ) ) )", "choosing": "( ( ( MUR / DS ) - ( CS - RMSe ) ) / ( ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) * ( MUR / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem / Const ) + ( Const - FirstVNF_CPU_Server ) ) + ( ( Const * FirstVNF_CPU_Server ) - ( MDR / CRS ) ) ) ,Max( ( ( Const / FirstVNF_CPU_Server ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( MUM / CS ) / ( ( ( MUM / CS ) * CS ) * ( ( RCSe * RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + Max( Max( ARS,( ( FirstVNF_CPU / FirstVNF_RAM ) + CRS ) ),AMS ) ) ,Min( Min( ( MDR - ACS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RCSe + ( RCSe + CS ) ) ) / ( ( ( MUC * RRSe ) - MUR ) / ( DS / MUR ) ) ) + ( ( ( DS * RCSe ) + Min( MUC ,MUC ) ) + Max( ( RMSe + CS ),Max( RRSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( ( AMS + ACS ) ,( BR - PN ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( Min( ( RRSe / MUR ) ,RRSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( Const / FirstVNF_CPU_Server ) - ( ( MRS + MRS ) + FirstVNF_RAM ) ) ) - Max( ACS,ARS ) )", "choosing": "( ( ( ( ( RMSe * MUR ) / MUR ) * ( RCSe / MLU ) ) + ( Max( CS,RRSe ) * ( MUC * RMSe ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,BR ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * ( ( Max( ( MUR + RMSe ),Max( MUC,RCSe ) ) * ( ( CS * CS ) * ( DS / MLU ) ) ) + ( Max( Max( RRSe,MUM ),Max( RRSe,MLU ) ) / ( ( MUM - RCSe ) / ( RMSe * RRSe ) ) ) ) ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ACS ) - ( Const + AMS ) )", "choosing": "Min( ( ( Max( Min( MUC ,MUR ),CS ) * MUM ) + RCSe ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / ARS ) * AMS ) + BR ) - ( Const + AMS ) )", "choosing": "( ( RCSe / RMSe ) + ( RMSe + Max( ( DS - Min( RRSe ,Min( ( MUR - ( RMSe + MUR ) ) ,MUM ) ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( BR + ( FirstVNF_CPU - Max( RRS,FirstVNF_RAM ) ) ) ) - ( ACS * ARS ) ) / ( FirstVNF_RAM * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( MUC / MUR ) ) * ( ( MUC - MUR ) / ( RCSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + PN ) / ( RRS / ( ( ARS * MDR ) - ( ARS - CRS ) ) ) )", "choosing": "( ( MUM - RRSe ) / ( ( ( ( ( ( DS * ( MUC - RMSe ) ) + Min( ( RCSe + MUR ) ,Min( MUC ,MLU ) ) ) + MUR ) * MUR ) * RRSe ) + Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - CRS ) / Min( FirstVNF_CPU ,BR ) )", "choosing": "( Max( DS,( MUM - RRSe ) ) / ( Max( ( Max( Max( ( ( MUC + RMSe ) - DS ),RMSe ),( MUR + RRSe ) ) + DS ),Max( MUC,( ( Max( DS,MUR ) / MUR ) * MUM ) ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,( BR - FirstVNF_CPU ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ),Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( Min( PN ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) / ( DDR - Max( Min( RRS ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ),( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + ( MDR * Const ) ) ) ,( Const - FirstVNF_Mem_Server ) )", "choosing": "( DS / ( ( ( MUM + CS ) * CS ) * ( MUR * ( ( MLU / ( ( ( MUR - RMSe ) - ( RMSe + MUR ) ) * MLU ) ) / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem / Const ) + ( Const - FirstVNF_CPU_Server ) ) + ( ( Const * FirstVNF_CPU_Server ) - ( MDR / Min( Max( ( RRS / FirstVNF_RAM_Server ),ARS ) ,DDR ) ) ) ) ,Max( ( ( Const / FirstVNF_Mem ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( MUM * CS ) / ( ( ( MUM / CS ) * CS ) * ( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( Max( Max( Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,Min( Const ,FirstVNF_RAM ) ),Max( ( FirstVNF_RAM_Server - MRS ),( Const + PN ) ) ),( ( ( DDR * Min( BR ,ARS ) ) / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) - ( ( DDR * CRS ) + ( PN * CRS ) ) ) ) * Max( FirstVNF_Mem_Server,RRS ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( MUR,MUC ) * RRSe ) + Max( ( Max( Min( RRSe ,( MUC / CS ) ),( CS + RRSe ) ) / Max( ( DS - MUM ),RMSe ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,( AMS - Const ) ) - PN ) - ( FirstVNF_RAM_Server - ( RRS / ACS ) ) )", "choosing": "Max( ( MUM / MUM ),Min( ( MLU * MUR ) ,( MUR * ( DS * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS + MDR ) ),( ARS * CRS ) ) ) / CRS ) - ACS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( RRSe / ( ( ( MUC * ( ( RCSe - RCSe ) + Max( ( CS - ( MLU - MUR ) ),Max( MLU,Min( DS ,MLU ) ) ) ) ) / MUR ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - AMS ) ,( BR + Const ) )", "choosing": "( ( MLU / RRSe ) + ( ( ( RMSe - MUM ) * ( Max( CS,RMSe ) + RRSe ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - BR ) + ( ( Const + PN ) * Max( BR,Const ) ) )", "choosing": "( Max( ( RCSe * RRSe ),Min( DS ,( ( ( RRSe * ( RRSe * Max( MUM,MUM ) ) ) - Max( Min( RMSe ,Max( MUM,MUC ) ),( ( RMSe + DS ) / Min( CS ,MUR ) ) ) ) / RMSe ) ) ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( MLU * DS ) + ( RMSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_RAM ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "( ( MLU / RRSe ) + ( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - AMS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,CS ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) - ( MRS / Max( PN,FirstVNF_RAM ) ) ) ) - ( MDR / BR ) )", "choosing": "Max( ( ( MUM * MUC ) - ( MLU + ( ( DS * RCSe ) - ( DS + MUR ) ) ) ),Min( Min( CS ,RRSe ) ,( RCSe * ( Min( ( ( ( RCSe + RMSe ) + Max( RMSe,RMSe ) ) * RRSe ) ,RRSe ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( AMS + ( ( BR - FirstVNF_Mem ) + Min( ( PN + AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,( Const + FirstVNF_Mem ) )", "choosing": "( ( MLU / RRSe ) + ( ( MLU / ( Max( MUR,MUR ) * MLU ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) - ( MRS / Max( PN,FirstVNF_RAM ) ) ) ) - ( MDR / BR ) )", "choosing": "Max( ( ( MUM * MUC ) - ( MLU + ( ( DS * RCSe ) - ( DS + MUR ) ) ) ),Min( Min( CS ,RRSe ) ,( RCSe * ( Min( ( ( ( RCSe + RMSe ) + Max( RMSe,RMSe ) ) * RRSe ) ,RRSe ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( AMS + ( ( BR - FirstVNF_Mem ) + Min( ( PN + AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,( Const + FirstVNF_Mem ) )", "choosing": "( ( MLU / RRSe ) + ( ( MLU / ( Max( MUR,MUR ) * MLU ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) - ( MRS / Max( PN,FirstVNF_RAM ) ) ) ) - ( MDR / BR ) )", "choosing": "Max( ( ( MUM * MUC ) - ( MLU + ( ( DS * RCSe ) - ( DS + MUR ) ) ) ),Min( Min( CS ,RRSe ) ,( RCSe * ( Min( ( ( ( RCSe + RMSe ) + Max( RMSe,RMSe ) ) * RRSe ) ,RRSe ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( AMS + ( ( BR - FirstVNF_Mem ) + Min( ( PN + AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,( Const + FirstVNF_Mem ) )", "choosing": "( ( MLU / RRSe ) + ( ( MLU / ( Max( MUR,MUR ) * MLU ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( RRSe * Min( MUC ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - BR ) ,( ACS + ( FirstVNF_CPU * CRS ) ) )", "choosing": "( ( DS - ( Min( CS ,( MUM - ( MUM + ( MLU + ( MUC - MLU ) ) ) ) ) / MUC ) ) * Min( MUC ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) - ( MRS / Max( PN,FirstVNF_RAM ) ) ) ) - ( MDR / BR ) )", "choosing": "Max( ( ( MUM * MUC ) - ( MLU + ( ( DS * RCSe ) - ( DS + MUR ) ) ) ),Min( Min( CS ,RRSe ) ,( RCSe * ( Min( ( ( ( RCSe + RMSe ) + Max( RMSe,RMSe ) ) * RRSe ) ,RRSe ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) - ( MRS / Max( PN,FirstVNF_RAM ) ) ) ) - ( MDR / BR ) )", "choosing": "Max( ( ( MUM * MUC ) - ( MLU + ( ( DS * RCSe ) - ( DS + MUR ) ) ) ),Min( Min( CS ,RRSe ) ,( RCSe * ( Min( ( ( ( RCSe + RMSe ) + Max( RMSe,RMSe ) ) * RRSe ) ,RRSe ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( MDR - ACS ) ,Const ) ,( ( ( FirstVNF_RAM / FirstVNF_Mem ) / ( MRS - MRS ) ) / ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ,( CRS + Max( AMS,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RCSe + RMSe ) ) / ( ( MUC - MUM ) / ( DS / MUR ) ) ) + Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( MRS - Min( Min( Min( Min( ARS ,AMS ) ,Const ) ,FirstVNF_CPU_Server ) ,( CRS + Max( AMS,FirstVNF_RAM ) ) ) ) ) / ( FirstVNF_RAM * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) * Max( ( DS * Min( Max( ( RCSe - MUR ),Max( MUC,Max( MUC,RCSe ) ) ) ,Max( ( RRSe - Min( RMSe ,MUC ) ),RCSe ) ) ),( ( ( MUR + MLU ) * ( RCSe + RMSe ) ) / ( ( MUC - MUM ) / ( DS / MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( Const,( Const * ( MRS * MDR ) ) ) * PN ) ,FirstVNF_CPU_Server ) ,( CRS + Max( AMS,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Max( Max( Max( RRSe,( RRSe - MUC ) ),( ( RRSe / MUR ) - DS ) ),RCSe ) + MLU ) * ( RCSe + RMSe ) ) / ( ( MUC * MUM ) / ( MUR / MUR ) ) ) + Min( Max( ( RMSe + CS ),( RRSe * CS ) ) ,( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + Max( Max( ARS,( ( FirstVNF_CPU / FirstVNF_RAM ) + CRS ) ),AMS ) ) ,Min( Min( ( MDR - ACS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RCSe + ( RCSe + CS ) ) ) / ( ( ( MUC * RRSe ) - MUR ) / ( DS / MUR ) ) ) + ( ( ( DS * RCSe ) + Min( MUC ,MUC ) ) + Max( ( RMSe + CS ),Max( RRSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + Max( Max( ARS,( ( FirstVNF_CPU / FirstVNF_RAM ) + CRS ) ),AMS ) ) ,Min( Min( ( MDR - ACS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RCSe + ( RCSe + CS ) ) ) / ( ( ( MUC * RRSe ) - MUR ) / ( DS / MUR ) ) ) + ( ( ( DS * RCSe ) + Min( MUC ,MUC ) ) + Max( ( RMSe + CS ),Max( RRSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) + ( ( DDR * MRS ) / Min( FirstVNF_RAM_Server ,BR ) ) ) ) - Max( ACS,( RRS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * MUC ) - ( MLU + ( ( RCSe * DS ) - ( DS + MUR ) ) ) ),Min( Min( CS ,RRSe ) ,Min( RCSe ,( ( Max( ( RRSe - MUM ),Max( RRSe,MLU ) ) / ( ( MUM - RCSe ) / ( RMSe * RRSe ) ) ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( Max( ( ( Min( PN ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( MDR * Const ) ) ) ,( Const - FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / RMSe ) + ( RMSe + Max( ( DS - Min( RRSe ,Min( ( MUR - ( RMSe + MUR ) ) ,MUM ) ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem / ( RRS - Const ) )", "choosing": "( Max( DS,RMSe ) / ( ( Max( RMSe,MLU ) - MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) * Max( BR,Const ) )", "choosing": "Max( ( MUC / DS ),Min( ( Max( ( MUC * MUM ),CS ) + MUC ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7910579375167857}, {"determining": "( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) ),( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) / ( BR - PN ) ) ) )", "choosing": "( RCSe - ( Max( MUR,RCSe ) * ( CS * MUC ) ) )", "obj1": 0.5876494023904383, "obj2": 0.35682099197835665}, {"determining": "( ( ( PN - Const ) + ( FirstVNF_CPU_Server * MDR ) ) / ( ( FirstVNF_Mem * ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / CRS ) ) * ( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( ( ( MLU * DS ) - ( DS / RMSe ) ) / ( RRSe + ( MUR / MUM ) ) )", "obj1": 0.5219123505976095, "obj2": 0.39361242101651733}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.6733067729083665, "obj2": 0.259635600201141}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( Max( DS,( MLU / MUC ) ) * Min( MUC ,RRSe ) )", "obj1": 0.250996015936255, "obj2": 0.6665151151031791}, {"determining": "( ( Max( AMS,Const ) / ( ( FirstVNF_CPU - ( BR * FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server * RRS ) ) ) - ( ( Min( MDR ,( FirstVNF_RAM_Server * ( FirstVNF_RAM * Max( ( ACS / FirstVNF_Mem ),( PN - MDR ) ) ) ) ) + ( FirstVNF_Mem + BR ) ) - ( ( PN - BR ) * Max( Const,PN ) ) ) )", "choosing": "( Min( MUM ,MLU ) + ( MUM * Max( ( MUM * ( RMSe / DS ) ),MUM ) ) )", "obj1": 0.651394422310757, "obj2": 0.30178200503137126}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) / ( ( ACS + FirstVNF_Mem_Server ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,Min( FirstVNF_CPU_Server ,( MRS - CRS ) ) )", "choosing": "( Max( MUC,MUR ) - ( Min( ( RCSe * DS ) ,( RRSe / DS ) ) + MUC ) )", "obj1": 0.5697211155378487, "obj2": 0.3679148806335169}, {"determining": "Min( Min( CRS ,FirstVNF_RAM ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe / Max( ( DS - ( Max( Min( ( RCSe / RMSe ) ,Max( RCSe,CS ) ),RRSe ) * MLU ) ),( CS + Max( Min( RRSe ,CS ),CS ) ) ) ) )", "obj1": 0.7749003984063745, "obj2": 0.1670599424325608}, {"determining": "Min( ( ( Max( FirstVNF_CPU,Max( FirstVNF_RAM,ARS ) ) / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Min( ( FirstVNF_RAM_Server - MRS ) ,Min( ARS ,MDR ) ) ) ) )", "choosing": "Min( ( ( MUR - ( Max( RCSe,( MUM * RCSe ) ) * ( RRSe + Max( Min( Max( RMSe,RCSe ) ,( MLU * RCSe ) ),RCSe ) ) ) ) * RMSe ) ,Max( ( RRSe * Min( MUC ,RRSe ) ),( RCSe + CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.44960101520477835}, {"determining": "( ( ARS - ( FirstVNF_CPU * AMS ) ) + ( Max( MRS,( FirstVNF_Mem / ( RRS - Const ) ) ) - ( FirstVNF_Mem - DDR ) ) )", "choosing": "( MLU + ( DS + Max( RMSe,( ( Min( Max( ( MLU - RRSe ),MLU ) ,DS ) + MUM ) - MUC ) ) ) )", "obj1": 0.7330677290836654, "obj2": 0.25355942428115275}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) ) ) )", "choosing": "Min( ( ( MUR * RCSe ) * ( DS * RRSe ) ) ,Max( ( RRSe * Min( MUC ,RRSe ) ),( CS + RCSe ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4853876897370197}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server + ( ( ARS / PN ) * ( FirstVNF_CPU - ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( Max( RMSe,RMSe ),Min( DS ,MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6009589571812074}, {"determining": "( ( Max( AMS,Const ) / ( ( FirstVNF_CPU - ( BR * FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server * RRS ) ) ) - ( ( Min( MDR ,( FirstVNF_RAM_Server * ( FirstVNF_RAM * Max( ( ACS / FirstVNF_Mem ),( PN - MDR ) ) ) ) ) + ( FirstVNF_Mem + BR ) ) - ( ( PN - BR ) * Max( Const,PN ) ) ) )", "choosing": "( Min( MUM ,MLU ) + ( MUM * Max( ( MUM * ( RMSe / DS ) ),MUM ) ) )", "obj1": 0.651394422310757, "obj2": 0.30178200503137126}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( MLU - MUR ) )", "obj1": 0.7908366533864541, "obj2": 0.14378395897355167}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * AMS ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5854684200882512}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,RRS ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,MLU ) ) )", "obj1": 0.30876494023904383, "obj2": 0.5713075495296877}, {"determining": "Max( ( ( FirstVNF_Mem - DDR ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUC * RRSe ) ,Max( MLU,Min( Max( RCSe,( ( MLU - RRSe ) + RMSe ) ) ,Min( RCSe ,RMSe ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.07865668162895165}, {"determining": "Max( ( ( FirstVNF_Mem - ( MDR * Min( AMS ,FirstVNF_CPU ) ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) ) * RRSe ) ,Max( MLU,Min( Max( RCSe,( MLU + RMSe ) ) ,Min( RCSe ,RMSe ) ) ) )", "obj1": 0.8665338645418327, "obj2": 0.10783791353200146}, {"determining": "( Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * ( Max( Max( CRS,ARS ),( Max( CRS,PN ) * ( MDR + FirstVNF_Mem_Server ) ) ) + PN ) ) ),Max( ( FirstVNF_Mem / BR ),( DDR * DDR ) ) ) * Min( ( ( RRS + ARS ) / ( FirstVNF_RAM_Server + CRS ) ) ,Max( Min( MDR ,RRS ),( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( CS - ( MUC * Max( DS,RMSe ) ) ) + MUC ) ,( ( RCSe - DS ) / ( ( Min( ( MLU * ( RCSe + ( CS + MUC ) ) ) ,DS ) / RRSe ) + RCSe ) ) )", "obj1": 0.5, "obj2": 0.4298931853137802}, {"determining": "( ( Max( Const,Const ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) - Max( CRS,MRS ) ),RRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU * DS ) - ( MUR / Max( Min( ( MUC * MUM ) ,CS ),( MUM + ( RCSe / DS ) ) ) ) ) / ( RRSe * ( MUR / MUM ) ) )", "obj1": 0.4342629482071713, "obj2": 0.4575494811532639}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) + ( FirstVNF_RAM_Server + ARS ) ) * ( ( Min( FirstVNF_CPU_Server ,DDR ) * ARS ) + FirstVNF_Mem ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "( ( MUC / MUR ) + ( ( RCSe - RCSe ) + RMSe ) )", "obj1": 0.23107569721115537, "obj2": 0.6944709406909826}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU ) - ( PN - ( ( AMS - BR ) - Const ) ) )", "choosing": "( Min( Min( Min( ( RRSe + ( Max( Min( DS ,MUM ),Min( CS ,MUC ) ) / ( MUR + Min( DS ,MLU ) ) ) ) ,( RRSe - Min( MLU ,Min( ( CS - DS ) ,CS ) ) ) ) ,( Max( CS,( ( RRSe - RRSe ) + DS ) ) - MLU ) ) ,MUR ) / ( MUM + MUC ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( ( ( Const - Const ) * ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / Const ) * Max( BR,Const ) )", "choosing": "Max( ( DS / MUC ),( ( MUC / MUR ) + ( ( MUC / ( Min( ( MUC - CS ) ,Max( RCSe,CS ) ) - DS ) ) + DS ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7628655028233366}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( ( ( ARS - FirstVNF_CPU ) + ( Max( MRS,MRS ) - ( FirstVNF_Mem - DDR ) ) ) * AMS ) )", "choosing": "( RRSe / ( MUM + MUC ) )", "obj1": 0.8346613545816733, "obj2": 0.1262557323496073}, {"determining": "Min( ( ( ( Const * FirstVNF_CPU_Server ) - ( MDR / Min( Max( ( RRS / FirstVNF_RAM_Server ),Min( Min( DDR ,RRS ) ,( RRS + FirstVNF_CPU ) ) ) ,Min( DDR ,MRS ) ) ) ) + Max( ( FirstVNF_Mem / Const ),( Const - FirstVNF_CPU_Server ) ) ) ,Max( ( ( Const / FirstVNF_Mem ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) * CS ) / MUM ) / ( ( ( MUC / CS ) * CS ) * ( RCSe + MLU ) ) )", "obj1": 0.2250996015936255, "obj2": 0.7091236386350982}, {"determining": "Min( ( FirstVNF_RAM - Min( RRS ,FirstVNF_RAM ) ) ,Max( Min( PN ,Min( CRS ,Max( Min( Min( ACS ,Const ) ,( ( ACS / FirstVNF_CPU ) / ( PN / AMS ) ) ),MDR ) ) ),FirstVNF_CPU ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( MUC - ( RMSe / CS ) ) - ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),RMSe ) * MUR ) ) + CS ) ) )", "obj1": 0.8167330677290837, "obj2": 0.1318265455379489}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * Min( MUC ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.19322709163346613, "obj2": 0.7176358733099337}, {"determining": "( Max( PN,PN ) + ( Max( MRS,MRS ) - ( FirstVNF_Mem - DDR ) ) )", "choosing": "( ( MUC / MLU ) + ( DS - Max( Max( MUC,RMSe ),( ( Min( DS ,Max( ( MLU - RRSe ),CS ) ) + MUM ) - MUC ) ) ) )", "obj1": 0.7709163346613546, "obj2": 0.21329931961874013}, {"determining": "( ( Max( Const,BR ) / ( FirstVNF_CPU_Server - MDR ) ) / ( FirstVNF_CPU * AMS ) )", "choosing": "Max( ( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ),( ( ( ( ( ( ( DS * MUM ) * RCSe ) - RRSe ) / MUM ) * RMSe ) / ( MLU * DS ) ) - MUM ) )", "obj1": 0.37649402390438247, "obj2": 0.5376019805808989}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( DDR + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) )", "choosing": "( MUC / Min( RCSe ,Min( ( ( RRSe + RRSe ) * MLU ) ,( DS * ( MUC / MUM ) ) ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7350692472515793}, {"determining": "Max( ( ( FirstVNF_Mem - ( MDR * Min( AMS ,FirstVNF_CPU ) ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) ) * RRSe ) ,Max( MLU,Min( Max( RCSe,( MLU + RMSe ) ) ,Min( RCSe ,RMSe ) ) ) )", "obj1": 0.8605577689243028, "obj2": 0.11360506121153302}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( AMS * ( ( BR - FirstVNF_CPU ) + ( Max( MRS,( ( Const + Min( RRS ,FirstVNF_RAM ) ) + ( ( ACS - PN ) + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem - DDR ) ) ) ) )", "choosing": "( Max( DS,( MUM / MUC ) ) * ( Min( Max( ( RMSe - ( Max( MUC,MUC ) * ( RMSe - ( RRSe * CS ) ) ) ),CS ) ,DS ) + ( ( DS + CS ) + MUC ) ) )", "obj1": 0.7370517928286853, "obj2": 0.23638684216252173}, {"determining": "( ( CRS + PN ) / ( Max( Max( Min( Max( FirstVNF_CPU,FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM ) ),Max( ( FirstVNF_RAM_Server - MRS ),( Const + PN ) ) ),( ( ( DDR * FirstVNF_RAM ) / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) - ( ( DDR * CRS ) + ( PN * CRS ) ) ) ) - Const ) )", "choosing": "( Max( DS,( Max( MUR,RCSe ) * RRSe ) ) / ( MUM * RRSe ) )", "obj1": 0.34462151394422313, "obj2": 0.5543646254013462}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUC ,MUC ) + ( MUC / MUR ) )", "obj1": 0.9561752988047809, "obj2": 0.03503900941676405}, {"determining": "( Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * ( Max( Max( CRS,ARS ),( Max( CRS,PN ) * ( MDR + FirstVNF_Mem_Server ) ) ) + PN ) ) ),Max( ( FirstVNF_Mem / BR ),( DDR * DDR ) ) ) * Min( ( ( RRS + ARS ) / ( FirstVNF_RAM_Server + CRS ) ) ,Max( Min( MDR ,RRS ),( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( CS - ( MUC * Max( DS,RMSe ) ) ) + MUC ) ,( ( RCSe - DS ) / ( ( Min( ( MLU * ( RCSe + ( CS + MUC ) ) ) ,DS ) / RRSe ) + RCSe ) ) )", "obj1": 0.5, "obj2": 0.4298931853137802}, {"determining": "( ( ARS - ( FirstVNF_CPU * AMS ) ) + ( Max( MRS,MRS ) - ( FirstVNF_Mem - DDR ) ) )", "choosing": "( MLU + ( DS + Max( RMSe,( ( Min( Max( ( MLU - RRSe ),CS ) ,DS ) + MUM ) - MUC ) ) ) )", "obj1": 0.7549800796812749, "obj2": 0.23059871591074574}, {"determining": "( Min( Max( MRS,BR ) ,( FirstVNF_CPU_Server / ARS ) ) * Max( ( ARS + MDR ),Min( AMS ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( MUM + ( ( Min( RRSe ,MLU ) - ( ( DS / ( RMSe * RMSe ) ) + MUR ) ) + ( DS * MLU ) ) ) / Max( MLU,RCSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7757414155551089}, {"determining": "Min( ( FirstVNF_CPU * ACS ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) ) ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.3784860557768924, "obj2": 0.507574388800529}, {"determining": "( Min( FirstVNF_Mem ,( AMS + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) + ( DDR + BR ) )", "choosing": "( MUC / Max( ( DS + MUR ),DS ) )", "obj1": 0.1852589641434263, "obj2": 0.7255818276755701}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),Max( MRS,CRS ) ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( MUM + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9243027888446215, "obj2": 0.05498699951932252}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( ( ( ARS - FirstVNF_CPU ) + ( Max( MRS,MRS ) - ( FirstVNF_Mem - ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) ) * AMS ) )", "choosing": "( Max( DS,( MLU / MUC ) ) * ( Min( Max( ( ( RRSe / ( MUM + MUC ) ) - RRSe ),CS ) ,DS ) + MUM ) )", "obj1": 0.9402390438247012, "obj2": 0.044079225632340985}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.3565737051792829, "obj2": 0.5441887909542527}, {"determining": "( ( FirstVNF_CPU - ( ( ( DDR * CRS ) / Min( Const ,Max( MRS,RRS ) ) ) - DDR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUM ),CS ) + Min( MUM ,RCSe ) )", "obj1": 0.9741035856573705, "obj2": 0.014250004745868397}, {"determining": "( Min( ( ARS * MDR ) ,RRS ) * Max( BR,Const ) )", "choosing": "Max( ( MUC / DS ),Min( ( DS + MUC ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7866525205185786}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server + ( ( ARS / PN ) * ( FirstVNF_CPU - ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( Max( RMSe,RMSe ),Min( DS ,MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6009589571812074}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUC ,MUC ) + ( MUC / MUR ) )", "obj1": 0.9621513944223108, "obj2": 0.020125145020047745}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + Min( AMS ,FirstVNF_CPU ) ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( RMSe + ( MUC / MUR ) )", "obj1": 0.9840637450199203, "obj2": 0.006593007940497348}, {"determining": "( ( Max( Const,( CRS / FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server - MDR ) ) / ( FirstVNF_CPU * AMS ) )", "choosing": "Max( ( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ),( ( ( ( ( ( RCSe - MUC ) - RRSe ) / MUM ) * RMSe ) / ( MLU * DS ) ) - MUM ) )", "obj1": 0.3605577689243028, "obj2": 0.540966854240827}, {"determining": "Min( ( CRS / RRS ) ,Max( ( ( ARS - Const ) * Max( FirstVNF_Mem,ACS ) ),Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + ( RRSe + MLU ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( MUR + CS ) / Min( RCSe ,DS ) )", "obj1": 0.14741035856573706, "obj2": 0.7763914860292542}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,MDR ),FirstVNF_CPU ) )", "choosing": "( ( MUC / MUR ) + ( MUC / DS ) )", "obj1": 0.900398406374502, "obj2": 0.06910743651934122}, {"determining": "( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( Max( ( DDR + RRS ),( FirstVNF_Mem + RRS ) ),( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) / ( BR - PN ) ) ) )", "choosing": "( RCSe - ( Max( MUR,RCSe ) * ( CS + MLU ) ) )", "obj1": 0.7629482071713147, "obj2": 0.22146106688459752}, {"determining": "Min( ( FirstVNF_CPU * ACS ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.5044315406723283}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "( Max( RMSe,MUC ) + Min( RMSe ,MUM ) )", "obj1": 0.9661354581673307, "obj2": 0.01800156066390581}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( MUR,( Max( ( MUM * CS ),( RRSe / RCSe ) ) - MUM ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.05916696162506106}, {"determining": "( ( ( Max( ARS,DDR ) - FirstVNF_RAM_Server ) / Min( MDR ,MDR ) ) - Const )", "choosing": "( ( MLU + Min( RMSe ,RCSe ) ) - ( ( ( MUM * DS ) / ( RRSe + Min( MUC ,DS ) ) ) * MLU ) )", "obj1": 0.9900398406374502, "obj2": 0.003585170042550125}, {"determining": "( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( Max( ( DDR + RRS ),( FirstVNF_Mem + RRS ) ),( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) / ( BR - PN ) ) ) )", "choosing": "( RCSe - ( Max( MUR,RCSe ) * ( CS + MLU ) ) )", "obj1": 0.7669322709163346, "obj2": 0.21730839116670564}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9103585657370518, "obj2": 0.061832994345938634}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,Max( ( ( ( Max( ACS,MDR ) / CRS ) - ACS ) - ( FirstVNF_CPU * FirstVNF_RAM ) ),FirstVNF_CPU ) )", "choosing": "( ( Min( ( ( RCSe - RRSe ) - MUM ) ,CS ) + ( MUC - ( RMSe * RCSe ) ) ) - Min( Max( ( CS / Min( ( RCSe * MUC ) ,CS ) ),( MUM / Max( CS,MLU ) ) ) ,DS ) )", "obj1": 0.9063745019920318, "obj2": 0.06433584751076128}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( RMSe - RCSe ) - Min( MUR ,DS ) )", "obj1": 0.9063745019920318, "obj2": 0.06433584751076128}, {"determining": "( ( ARS - FirstVNF_CPU ) + ( Max( Max( ( ( ( FirstVNF_Mem / RRS ) - ( ACS * AMS ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ),MRS ) - ( FirstVNF_Mem - DDR ) ) )", "choosing": "( ( MUC / MLU ) + RMSe )", "obj1": 0.7649402390438247, "obj2": 0.21860068567977864}, {"determining": "( Max( PN,PN ) + ( Max( MRS,MRS ) - ( FirstVNF_Mem - DDR ) ) )", "choosing": "( ( MUC / MLU ) + ( DS - Max( Max( MUC,RMSe ),( ( Min( DS ,Max( ( MLU - RRSe ),CS ) ) + MUM ) - MUC ) ) ) )", "obj1": 0.7709163346613546, "obj2": 0.21329931961874013}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,AMS ) ,MDR ),FirstVNF_CPU ) )", "choosing": "( ( ( RCSe - MUR ) / ( RCSe - CS ) ) + Min( RMSe ,MUM ) )", "obj1": 0.9223107569721115, "obj2": 0.05678747561244594}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9103585657370518, "obj2": 0.061832994345938634}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9203187250996016, "obj2": 0.057689352367046295}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) )", "choosing": "( Min( RRSe ,( RCSe + ( MUR * RMSe ) ) ) - Max( ( MLU + CS ),( Max( MUR,RCSe ) * RRSe ) ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( ( PN - ( Max( MRS,( AMS - Const ) ) - PN ) ) * Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( MLU * DS ) + Min( ( MLU * MUR ) ,( MUR * ( DS * RRSe ) ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0022426794969084766}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - ( Min( MUM ,DS ) - Max( MUM,DS ) ) )", "obj1": 0.9920318725099602, "obj2": 0.002732691856105886}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) ) + ( ( Min( PN ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) + BR ) )", "choosing": "( ( ( ( MLU / ( ( ( MUR - RMSe ) - ( RMSe + MUC ) ) * MLU ) ) / MUM ) * Min( MUC ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( Min( ( CRS - MDR ) ,( FirstVNF_RAM_Server + RRS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( ( ( ( DS + RMSe ) - ( MUM + CS ) ) + ( ( CS / RRSe ) + ( MLU - RRSe ) ) ) * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( AMS + DDR ) ) * PN ) / ( RRS - Const ) )", "choosing": "( Max( MUC,RMSe ) / ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - RCSe ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( AMS + ( ( BR - FirstVNF_Mem ) + Min( ( PN + AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,( Const + FirstVNF_Mem ) )", "choosing": "( ( MLU / RRSe ) + ( ( MLU / ( Max( MUR,MUR ) * MLU ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Const + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( DS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - ( Max( MRS,CRS ) - FirstVNF_Mem ) ) - ( Const / MRS ) ) )", "choosing": "( ( MUM * CS ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) - ( MRS / Max( PN,FirstVNF_RAM ) ) ) ) - ( MDR / BR ) )", "choosing": "Max( ( ( MUM * MUC ) - ( MLU + ( ( DS * RCSe ) - ( DS + MUR ) ) ) ),Min( Min( CS ,RRSe ) ,( RCSe * ( Min( ( ( ( RCSe + RMSe ) + Max( RMSe,RMSe ) ) * RRSe ) ,RRSe ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU - ( FirstVNF_CPU - PN ) ) ,( ACS + ARS ) )", "choosing": "Max( Max( Min( RMSe ,CS ),( RRSe / MUC ) ),( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - PN ) - ( FirstVNF_RAM_Server - ( RRS / ACS ) ) )", "choosing": "Max( ( MUM / MUM ),Min( ( MLU * MUR ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) + ( PN * ( AMS / Min( BR ,ACS ) ) ) ) / Max( ( ( CRS / CRS ) / Const ),( DDR * BR ) ) )", "choosing": "( ( ( MUR / DS ) - ( CS - RMSe ) ) / ( ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) * ( MUR / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem / Const ) + ( Const - FirstVNF_CPU_Server ) ) + ( ( Const * FirstVNF_CPU_Server ) - ( MDR / CRS ) ) ) ,Max( ( ( Const / FirstVNF_CPU_Server ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( MUM / CS ) / ( ( ( MUM / CS ) * CS ) * ( ( RCSe * RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + Max( Max( ARS,( ( FirstVNF_CPU / FirstVNF_RAM ) + CRS ) ),AMS ) ) ,Min( Min( ( MDR - ACS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RCSe + ( RCSe + CS ) ) ) / ( ( ( MUC * RRSe ) - MUR ) / ( DS / MUR ) ) ) + ( ( ( DS * RCSe ) + Min( MUC ,MUC ) ) + Max( ( RMSe + CS ),Max( RRSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( ( AMS + ACS ) ,( BR - PN ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( Min( ( RRSe / MUR ) ,RRSe ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( Const / FirstVNF_CPU_Server ) - ( ( MRS + MRS ) + FirstVNF_RAM ) ) ) - Max( ACS,ARS ) )", "choosing": "( ( ( ( ( RMSe * MUR ) / MUR ) * ( RCSe / MLU ) ) + ( Max( CS,RRSe ) * ( MUC * RMSe ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,BR ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * ( ( Max( ( MUR + RMSe ),Max( MUC,RCSe ) ) * ( ( CS * CS ) * ( DS / MLU ) ) ) + ( Max( Max( RRSe,MUM ),Max( RRSe,MLU ) ) / ( ( MUM - RCSe ) / ( RMSe * RRSe ) ) ) ) ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ACS ) - ( Const + AMS ) )", "choosing": "Min( ( ( Max( Min( MUC ,MUR ),CS ) * MUM ) + RCSe ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / ARS ) * AMS ) + BR ) - ( Const + AMS ) )", "choosing": "( ( RCSe / RMSe ) + ( RMSe + Max( ( DS - Min( RRSe ,Min( ( MUR - ( RMSe + MUR ) ) ,MUM ) ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( BR + ( FirstVNF_CPU - Max( RRS,FirstVNF_RAM ) ) ) ) - ( ACS * ARS ) ) / ( FirstVNF_RAM * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( MUC / MUR ) ) * ( ( MUC - MUR ) / ( RCSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + PN ) / ( RRS / ( ( ARS * MDR ) - ( ARS - CRS ) ) ) )", "choosing": "( ( MUM - RRSe ) / ( ( ( ( ( ( DS * ( MUC - RMSe ) ) + Min( ( RCSe + MUR ) ,Min( MUC ,MLU ) ) ) + MUR ) * MUR ) * RRSe ) + Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - CRS ) / Min( FirstVNF_CPU ,BR ) )", "choosing": "( Max( DS,( MUM - RRSe ) ) / ( Max( ( Max( Max( ( ( MUC + RMSe ) - DS ),RMSe ),( MUR + RRSe ) ) + DS ),Max( MUC,( ( Max( DS,MUR ) / MUR ) * MUM ) ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,( BR - FirstVNF_CPU ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ),Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( Min( PN ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) / ( DDR - Max( Min( RRS ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ),( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + ( MDR * Const ) ) ) ,( Const - FirstVNF_Mem_Server ) )", "choosing": "( DS / ( ( ( MUM + CS ) * CS ) * ( MUR * ( ( MLU / ( ( ( MUR - RMSe ) - ( RMSe + MUR ) ) * MLU ) ) / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem / Const ) + ( Const - FirstVNF_CPU_Server ) ) + ( ( Const * FirstVNF_CPU_Server ) - ( MDR / Min( Max( ( RRS / FirstVNF_RAM_Server ),ARS ) ,DDR ) ) ) ) ,Max( ( ( Const / FirstVNF_Mem ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( MUM * CS ) / ( ( ( MUM / CS ) * CS ) * ( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( Max( Max( Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,Min( Const ,FirstVNF_RAM ) ),Max( ( FirstVNF_RAM_Server - MRS ),( Const + PN ) ) ),( ( ( DDR * Min( BR ,ARS ) ) / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) - ( ( DDR * CRS ) + ( PN * CRS ) ) ) ) * Max( FirstVNF_Mem_Server,RRS ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( MUR,MUC ) * RRSe ) + Max( ( Max( Min( RRSe ,( MUC / CS ) ),( CS + RRSe ) ) / Max( ( DS - MUM ),RMSe ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( ( Max( ARS,DDR ) - FirstVNF_RAM_Server ) / Min( MDR ,MDR ) ) - Const )", "choosing": "( ( MLU + Min( RMSe ,RCSe ) ) - ( ( ( MUM * DS ) / ( RRSe + Min( MUC ,DS ) ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( Min( PN ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( MDR * Const ) ) ) ,( Const - FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / RMSe ) + ( RMSe + Max( ( DS - Min( RRSe ,Min( ( MUR - ( RMSe + MUR ) ) ,MUM ) ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) * Max( BR,Const ) )", "choosing": "Max( ( MUC / DS ),Min( ( Max( ( MUC * MUM ),CS ) + MUC ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7910579375167857}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.6733067729083665, "obj2": 0.259635600201141}, {"determining": "Min( Max( CRS,MRS ) ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) - ( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - RMSe ) * RMSe ) - Max( ( MUR + ( MLU / ( Min( MUM ,( RRSe - MUC ) ) * DS ) ) ),Min( DS ,MLU ) ) )", "obj1": 0.250996015936255, "obj2": 0.6414461930023828}, {"determining": "( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) ),( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) / ( BR - PN ) ) ) )", "choosing": "( RCSe - ( Max( MUR,RCSe ) * ( CS * MUC ) ) )", "obj1": 0.6075697211155379, "obj2": 0.3390993245688391}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.749003984063745, "obj2": 0.1891647141313344}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) / ( ( ACS + FirstVNF_Mem_Server ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,Min( FirstVNF_CPU_Server ,( MRS - CRS ) ) )", "choosing": "( Max( MUC,MUR ) - ( Min( ( RCSe * DS ) ,( RRSe / DS ) ) + MUC ) )", "obj1": 0.5697211155378487, "obj2": 0.3679148806335169}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) + ( FirstVNF_RAM_Server + ARS ) ) * ( ( Min( FirstVNF_CPU_Server ,DDR ) * ARS ) + FirstVNF_Mem ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "( ( MUC / MUR ) + ( ( RCSe - RCSe ) + RMSe ) )", "obj1": 0.23107569721115537, "obj2": 0.6944709406909826}, {"determining": "( ( ( PN - Const ) + ( FirstVNF_CPU_Server * MDR ) ) / ( ( FirstVNF_Mem * ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / CRS ) ) * ( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( ( ( MLU * DS ) - ( DS / RMSe ) ) / ( RRSe + ( MUR / MUM ) ) )", "obj1": 0.5219123505976095, "obj2": 0.39361242101651733}, {"determining": "Min( Min( CRS ,FirstVNF_RAM ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe / Max( ( DS - ( Max( Min( ( RCSe / RMSe ) ,Max( RCSe,CS ) ),RRSe ) * MLU ) ),( CS + Max( Min( RRSe ,CS ),CS ) ) ) ) )", "obj1": 0.7749003984063745, "obj2": 0.1670599424325608}, {"determining": "( ( Max( AMS,Const ) / ( ( FirstVNF_CPU - ( BR * FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server * RRS ) ) ) - ( ( Min( MDR ,( FirstVNF_RAM_Server * ( FirstVNF_RAM * Max( ( ACS / FirstVNF_Mem ),( PN - MDR ) ) ) ) ) + ( FirstVNF_Mem + BR ) ) - ( ( PN - BR ) * Max( Const,PN ) ) ) )", "choosing": "( Min( MUM ,MLU ) + ( MUM * Max( ( MUM * ( RMSe / DS ) ),MUM ) ) )", "obj1": 0.651394422310757, "obj2": 0.30178200503137126}, {"determining": "( ( ARS - ( FirstVNF_CPU * AMS ) ) + ( Max( MRS,( FirstVNF_Mem / ( RRS - Const ) ) ) - ( FirstVNF_Mem - DDR ) ) )", "choosing": "( MLU + ( DS + Max( RMSe,( ( Min( Max( ( MLU - RRSe ),MLU ) ,DS ) + MUM ) - MUC ) ) ) )", "obj1": 0.7330677290836654, "obj2": 0.25355942428115275}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) ) ) )", "choosing": "Min( ( ( MUR * RCSe ) * ( DS * RRSe ) ) ,Max( ( RRSe * Min( MUC ,RRSe ) ),( CS + RCSe ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4853876897370197}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( AMS * ( ( BR - FirstVNF_CPU ) + ( Max( MRS,( ( Const + Min( RRS ,FirstVNF_RAM ) ) + ( ( ACS - PN ) + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem - DDR ) ) ) ) )", "choosing": "( Max( DS,( MUM / MUC ) ) * ( Min( Max( ( RMSe - ( Max( MUC,MUC ) * ( RMSe - ( RRSe * CS ) ) ) ),CS ) ,DS ) + ( ( DS + CS ) + MUC ) ) )", "obj1": 0.7370517928286853, "obj2": 0.23638684216252173}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( MLU - MUR ) )", "obj1": 0.7908366533864541, "obj2": 0.14378395897355167}, {"determining": "( ( Max( Const,Const ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) - Max( CRS,MRS ) ),RRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU * DS ) - ( MUR / Max( Min( ( MUC * MUM ) ,CS ),( MUM + ( RCSe / DS ) ) ) ) ) / ( RRSe * ( MUR / MUM ) ) )", "obj1": 0.4342629482071713, "obj2": 0.4575494811532639}, {"determining": "( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) ),( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) / ( BR - PN ) ) ) )", "choosing": "( RCSe - ( Max( MUR,RCSe ) * ( CS * MUC ) ) )", "obj1": 0.5876494023904383, "obj2": 0.35682099197835665}, {"determining": "Min( ( ( Max( FirstVNF_CPU,Max( FirstVNF_RAM,ARS ) ) / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Min( ( FirstVNF_RAM_Server - MRS ) ,Min( ARS ,MDR ) ) ) ) )", "choosing": "Min( ( ( MUR - ( Max( RCSe,( MUM * RCSe ) ) * ( RRSe + Max( Min( Max( RMSe,RCSe ) ,( MLU * RCSe ) ),RCSe ) ) ) ) * RMSe ) ,Max( ( RRSe * Min( MUC ,RRSe ) ),( RCSe + CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.44960101520477835}, {"determining": "Max( ( ( FirstVNF_Mem - ( MDR * Min( ( ( FirstVNF_Mem * MRS ) / Min( RRS ,ACS ) ) ,FirstVNF_CPU ) ) ) - Max( ( DDR + FirstVNF_RAM ),( FirstVNF_Mem_Server * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( DS,RMSe ) + ( ( MUR / MLU ) - Max( RRSe,Min( ( Min( CS ,RRSe ) + MUC ) ,RRSe ) ) ) ) * RRSe ) ,Max( MLU,Min( Max( RCSe,( MLU + RMSe ) ) ,Min( RCSe ,RMSe ) ) ) )", "obj1": 0.8605577689243028, "obj2": 0.11213031102442658}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU ) - ( PN - ( ( AMS - BR ) - Const ) ) )", "choosing": "( Min( Min( Min( ( RRSe + ( Max( Min( DS ,MUM ),Min( CS ,MUC ) ) / ( MUR + Min( DS ,MLU ) ) ) ) ,( RRSe - Min( MLU ,Min( ( CS - DS ) ,CS ) ) ) ) ,( Max( CS,( ( RRSe - RRSe ) + DS ) ) - MLU ) ) ,MUR ) / ( MUM + MUC ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "Min( ( ( ( Const * FirstVNF_CPU_Server ) - ( MDR / Min( Max( ( RRS / FirstVNF_RAM_Server ),Min( Min( DDR ,RRS ) ,( RRS + FirstVNF_CPU ) ) ) ,Min( DDR ,MRS ) ) ) ) + Max( ( FirstVNF_Mem / Const ),( Const - FirstVNF_CPU_Server ) ) ) ,Max( ( ( Const / FirstVNF_Mem ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) * CS ) / MUM ) / ( ( ( MUC / CS ) * CS ) * ( RCSe + MLU ) ) )", "obj1": 0.2250996015936255, "obj2": 0.7091236386350982}, {"determining": "( ( FirstVNF_Mem + ( ( BR - Max( AMS,MRS ) ) / ( ( AMS / Min( BR ,ACS ) ) + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( Min( RCSe ,MUC ) / ( RRSe * ( DS / MUR ) ) )", "obj1": 0.15139442231075698, "obj2": 0.7589157922190635}, {"determining": "( ( Max( AMS,Const ) / ( ( FirstVNF_CPU - ( BR * FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server * RRS ) ) ) - ( ( Min( MDR ,( FirstVNF_RAM_Server * ( FirstVNF_RAM * Max( ( ACS / FirstVNF_Mem ),( PN - MDR ) ) ) ) ) + ( FirstVNF_Mem + BR ) ) - ( ( PN - BR ) * Max( Const,PN ) ) ) )", "choosing": "( Min( MUM ,MLU ) + ( MUM * Max( ( MUM * ( RMSe / DS ) ),MUM ) ) )", "obj1": 0.651394422310757, "obj2": 0.30178200503137126}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( AMS * ( ( ARS - FirstVNF_CPU ) + RRS ) ) )", "choosing": "( Max( DS,( MLU / MUC ) ) * Max( Max( Max( ( MUC * MUC ),DS ),RMSe ),( RRSe + MUR ) ) )", "obj1": 0.5079681274900398, "obj2": 0.39586438293535237}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,RRS ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,MLU ) ) )", "obj1": 0.30876494023904383, "obj2": 0.5713075495296877}, {"determining": "( ( ( ( BR / ( FirstVNF_Mem / Min( FirstVNF_Mem ,Max( ( Const * ARS ),Min( ACS ,MDR ) ) ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( ACS / ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem ,Min( CRS ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - ( MRS * AMS ) ) )", "choosing": "( Max( ( MLU / MUM ),Max( RMSe,( RMSe + RMSe ) ) ) + ( MUR / Max( ( ( ( ( CS + ( CS - MUM ) ) + MUR ) + DS ) - DS ),( Min( ( RCSe + RCSe ) ,MLU ) / RCSe ) ) ) )", "obj1": 0.8665338645418327, "obj2": 0.09058441553407148}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Min( Min( Max( BR,ACS ) ,FirstVNF_RAM_Server ) ,MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( ( DS * ( Max( ( RRSe * MUM ),( RRSe + ( Max( MUM,DS ) + MUM ) ) ) - Max( ( MLU + MUR ),Min( DS ,MUC ) ) ) ) * CS ) / ( ( ( MUM / CS ) * CS ) * Min( RCSe ,MLU ) ) )", "obj1": 0.8844621513944223, "obj2": 0.07827838781837367}, {"determining": "Min( ( AMS * ACS ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) ) ) ) ) )", "choosing": "Min( Min( RRSe ,Min( ( MUR - ( RMSe + MUR ) ) ,MUM ) ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.3545816733067729, "obj2": 0.5386662572196562}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * Min( MUC ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.19322709163346613, "obj2": 0.7176358733099337}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server + ( ( ARS / PN ) * ( FirstVNF_CPU - ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( Max( RMSe,RMSe ),Min( DS ,MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6009589571812074}, {"determining": "( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ) + ( DDR + BR ) )", "choosing": "( MUC / Min( Max( ( RMSe + CS ),( RRSe * CS ) ) ,DS ) )", "obj1": 0.17330677290836655, "obj2": 0.7453323409816623}, {"determining": "Min( ( FirstVNF_CPU * PN ) ,Max( Max( FirstVNF_Mem,AMS ),( ( ( ( MRS / FirstVNF_RAM_Server ) + Min( ACS ,ARS ) ) - ARS ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( ( ( ( ( ( MUC * RMSe ) / CS ) * CS ) + ( ( Max( ( DS + MUR ),Min( RCSe ,MUR ) ) * MUR ) + MUC ) ) / CS ) * MUC ) ,( CS - Max( CS,( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) ) )", "obj1": 0.3645418326693227, "obj2": 0.5196378375459549}, {"determining": "( Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * ( Max( Max( CRS,ARS ),( Max( CRS,PN ) * ( MDR + FirstVNF_Mem_Server ) ) ) + PN ) ) ),Max( ( FirstVNF_Mem / BR ),( DDR * DDR ) ) ) * Min( ( ( RRS + ARS ) / ( FirstVNF_RAM_Server + CRS ) ) ,Max( Min( MDR ,RRS ),( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( CS - ( MUC * Max( DS,RMSe ) ) ) + MUC ) ,( ( RCSe - DS ) / ( ( Min( ( MLU * ( RCSe + ( CS + MUC ) ) ) ,DS ) / RRSe ) + RCSe ) ) )", "obj1": 0.5, "obj2": 0.4298931853137802}, {"determining": "( ( CRS + PN ) / ( Max( Max( Min( Max( FirstVNF_CPU,FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM ) ),Max( ( FirstVNF_RAM_Server - MRS ),( Const + PN ) ) ),( ( ( DDR * FirstVNF_RAM ) / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) - ( ( DDR * CRS ) + ( PN * CRS ) ) ) ) - Const ) )", "choosing": "( Max( DS,( Max( MUR,RCSe ) * RRSe ) ) / ( MUM * RRSe ) )", "obj1": 0.34462151394422313, "obj2": 0.5543646254013462}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,FirstVNF_RAM )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( ( ( RCSe - MUR ) / ( RCSe - CS ) ) + CS ) ) )", "obj1": 0.8346613545816733, "obj2": 0.12308890652535032}, {"determining": "( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),Max( MRS,CRS ) ) ,CRS ) )", "choosing": "( RCSe - ( MUM * ( CS * MUC ) ) )", "obj1": 0.2908366533864542, "obj2": 0.5814268031901645}, {"determining": "( Min( MDR ,RRS ) * Min( Max( MRS,BR ) ,( FirstVNF_CPU_Server / ARS ) ) )", "choosing": "Max( ( MUC / DS ),Min( ( MUM + ( ( Min( RRSe ,MLU ) - ( ( DS / ( RMSe * RMSe ) ) + MUR ) ) + ( DS * MLU ) ) ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.14143426294820718, "obj2": 0.7737416410759536}, {"determining": "( ( ( ( RRS / ARS ) * AMS ) + BR ) - ( MRS + RRS ) )", "choosing": "( ( RCSe / RMSe ) + ( RCSe - ( CS + CS ) ) )", "obj1": 0.48406374501992033, "obj2": 0.4397211649772564}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * AMS ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5854684200882512}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ARS ,AMS ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,MDR ),FirstVNF_CPU ) )", "choosing": "( ( MUC / MUR ) + ( MLU / DS ) )", "obj1": 0.900398406374502, "obj2": 0.06849362301347002}, {"determining": "Min( Min( FirstVNF_CPU ,ACS ) ,( FirstVNF_CPU + BR ) )", "choosing": "Min( Max( ( RMSe * MUR ),Max( RMSe,( DS / ( RMSe * DS ) ) ) ) ,( Min( DS ,Min( MUM ,RMSe ) ) - ( CS + CS ) ) )", "obj1": 0.3745019920318725, "obj2": 0.5100451152492542}, {"determining": "( Min( FirstVNF_Mem ,( AMS + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) + ( DDR + BR ) )", "choosing": "( MUC / Max( ( DS + MUR ),DS ) )", "obj1": 0.1852589641434263, "obj2": 0.7255818276755701}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( DDR + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) )", "choosing": "( MUC / Min( RCSe ,Min( ( ( RRSe + RRSe ) * MLU ) ,( DS * ( MUC / MUM ) ) ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7350692472515793}, {"determining": "Min( ( ( Max( FirstVNF_RAM_Server,PN ) / FirstVNF_Mem ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,( ( Max( Const,BR ) * ( Min( BR ,PN ) + Const ) ) + ( FirstVNF_CPU * CRS ) ) ) ) ) )", "choosing": "Min( ( CS / RRSe ) ,( MUM + ( DS / Min( RRSe ,Max( ( MUR - Min( MUC ,RMSe ) ),CS ) ) ) ) )", "obj1": 0.27091633466135456, "obj2": 0.5999702145028862}, {"determining": "( ( MRS * BR ) + Max( MRS,BR ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe - ( Min( CS ,Min( ( RCSe - ( DS - ( MUR + MUC ) ) ) ,MUR ) ) - MUR ) ) )", "obj1": 0.37649402390438247, "obj2": 0.4968801628585156}, {"determining": "Min( ( CRS / RRS ) ,Max( ( ( ARS - Const ) * Max( FirstVNF_Mem,ACS ) ),Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + ( RRSe + MLU ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "Min( ( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,Min( ( MDR / Max( Max( ( Min( ( DDR + MDR ) ,MDR ) / FirstVNF_RAM_Server ),MDR ),FirstVNF_Mem_Server ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - MUR ) * RMSe ) - Max( Min( ( CS * ( CS * RMSe ) ) ,( Max( ( CS + Min( ( MUM / MUM ) ,RCSe ) ),( ( ( MUC - DS ) * RMSe ) * DS ) ) + DS ) ),Min( DS ,MUC ) ) )", "obj1": 0.9282868525896414, "obj2": 0.048078887257251346}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( ( ( ARS - FirstVNF_CPU ) + ( Max( MRS,MRS ) - ( FirstVNF_Mem - DDR ) ) ) * AMS ) )", "choosing": "( RRSe / ( MUM + MUC ) )", "obj1": 0.8306772908366534, "obj2": 0.1293695431090335}, {"determining": "( Min( ( ARS * MDR ) ,RRS ) * Max( BR,Const ) )", "choosing": "Max( ( MUC / DS ),Min( ( DS + MUC ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7866525205185786}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) * ( ( ARS - FirstVNF_CPU ) + ( Max( MRS,( ( Const + Min( RRS ,FirstVNF_RAM_Server ) ) + ( Max( PN,ARS ) + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem - DDR ) ) ) ) )", "choosing": "( Max( DS,( MUC / MUM ) ) * Min( ( Max( ( MUC * ( DS - RRSe ) ),CS ) + MUC ) ,Min( Min( MUM ,DS ) ,Min( RRSe ,Min( MUC ,DS ) ) ) ) )", "obj1": 0.4860557768924303, "obj2": 0.4317948795369437}, {"determining": "Min( ( FirstVNF_RAM - Min( RRS ,FirstVNF_RAM ) ) ,Max( Min( PN ,Min( CRS ,Max( Min( Min( ACS ,Const ) ,( ( ACS / FirstVNF_CPU ) / ( PN / AMS ) ) ),MDR ) ) ),FirstVNF_CPU ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( MUC - ( RMSe / CS ) ) - ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),RMSe ) * MUR ) ) + CS ) ) )", "obj1": 0.8147410358565738, "obj2": 0.13429103296776249}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUC ,MUC ) + ( MUC / MUR ) )", "obj1": 0.9581673306772909, "obj2": 0.030087317636913528}, {"determining": "Min( ( FirstVNF_RAM - Min( RRS ,FirstVNF_RAM ) ) ,Max( Min( PN ,Min( CRS ,Max( Min( Min( ACS ,Const ) ,( ( ACS / FirstVNF_CPU ) / ( PN / AMS ) ) ),MDR ) ) ),FirstVNF_CPU ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( MUC - ( RMSe / CS ) ) - ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),RMSe ) * MUR ) ) + CS ) ) )", "obj1": 0.8167330677290837, "obj2": 0.1318265455379489}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUC ,MUC ) + ( MUC / MUR ) )", "obj1": 0.9621513944223108, "obj2": 0.020125145020047745}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( ( ( ARS - FirstVNF_CPU ) + ( Max( MRS,MRS ) - ( FirstVNF_Mem - ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) ) * AMS ) )", "choosing": "( Max( DS,( MLU / MUC ) ) * ( Min( Max( ( ( RRSe / ( MUM + MUC ) ) - RRSe ),CS ) ,DS ) + MUM ) )", "obj1": 0.9402390438247012, "obj2": 0.044079225632340985}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( ( BR - PN ) + ( ( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) - ( FirstVNF_Mem_Server - ( Min( ACS ,ACS ) + MRS ) ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( Max( MLU,( DS + ( MUR + MUC ) ) ) ,MUC ) + CS )", "obj1": 0.9820717131474104, "obj2": 0.010660362351261103}, {"determining": "( ( ( Const + PN ) - ( MDR * RRS ) ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( CRS - ( Min( Min( ACS ,RRS ) ,MRS ) - Const ) ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUC ,MUC ) + ( ( ( ( RMSe * CS ) + DS ) - ( ( ( MUM * MUM ) - ( MLU + MUR ) ) * RCSe ) ) * MUM ) )", "obj1": 0.952191235059761, "obj2": 0.03467100683915118}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( MRS,MRS ) ,AMS ) ,MDR ),FirstVNF_CPU ) )", "choosing": "( ( ( RCSe - MUR ) / ( RCSe - ( Min( MUC ,MUC ) + ( MUC / MUR ) ) ) ) + Min( RMSe ,MUM ) )", "obj1": 0.9163346613545816, "obj2": 0.05861181692977425}, {"determining": "( Min( RRS ,RRS ) + ( ( Const + PN ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MUR - RMSe ) + DS ) - RRSe ) + RRSe ) + ( MUR / CS ) )", "obj1": 0.9462151394422311, "obj2": 0.035701027874669604}, {"determining": "( ( FirstVNF_CPU - ( ( ( DDR * CRS ) / Min( Const ,Max( MRS,RRS ) ) ) - DDR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUM ),CS ) + Min( MUM ,RCSe ) )", "obj1": 0.9741035856573705, "obj2": 0.014250004745868397}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),Max( MRS,CRS ) ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( MUM + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9243027888446215, "obj2": 0.05498699951932252}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server + ( ( ARS / PN ) * ( FirstVNF_CPU - ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( Max( RMSe,RMSe ),Min( DS ,MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6009589571812074}, {"determining": "Min( ( FirstVNF_RAM - Min( RRS ,FirstVNF_RAM ) ) ,Max( Min( PN ,Min( CRS ,Max( Min( Min( ACS ,Const ) ,( ( ACS / FirstVNF_CPU ) / ( PN / AMS ) ) ),MDR ) ) ),FirstVNF_CPU ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( MUC - ( RMSe / CS ) ) - ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),RMSe ) * MUR ) ) + CS ) ) )", "obj1": 0.8147410358565738, "obj2": 0.13429103296776249}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( Max( DS,( MUM - RRSe ) ) / ( RRSe + Max( ( Max( Max( Max( ( MUC * MUC ),DS ),RMSe ),( RRSe + MUR ) ) + DS ),Max( MUC,( ( Max( DS,MUR ) / MUR ) * MUM ) ) ) ) )", "obj1": 0.9442231075697212, "obj2": 0.041039467997223585}, {"determining": "( Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * ( Max( Max( CRS,ARS ),( Max( CRS,PN ) * ( MDR + FirstVNF_Mem_Server ) ) ) + PN ) ) ),Max( ( FirstVNF_Mem / BR ),( DDR * DDR ) ) ) * Min( ( ( RRS + ARS ) / ( FirstVNF_RAM_Server + CRS ) ) ,Max( Min( MDR ,RRS ),( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( CS - ( MUC * Max( DS,RMSe ) ) ) + MUC ) ,( ( RCSe - DS ) / ( ( Min( ( MLU * ( RCSe + ( CS + MUC ) ) ) ,DS ) / RRSe ) + RCSe ) ) )", "obj1": 0.5, "obj2": 0.4298931853137802}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) )", "obj1": 0.9880478087649402, "obj2": 0.003765047324444275}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "( Max( RMSe,MUC ) + Min( RMSe ,MUM ) )", "obj1": 0.9661354581673307, "obj2": 0.01800156066390581}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "( Max( RMSe,MUC ) + Min( RMSe ,MUM ) )", "obj1": 0.9721115537848606, "obj2": 0.01515821622662306}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "( Max( RMSe,MUC ) + Min( RMSe ,MUM ) )", "obj1": 0.9681274900398407, "obj2": 0.017160988843692698}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ( PN - FirstVNF_CPU_Server ) ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( MUR,( RRSe - RRSe ) ) ) )", "obj1": 0.9103585657370518, "obj2": 0.061832994345938634}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,Max( ( ( ( Max( ACS,MDR ) / CRS ) - ACS ) - ( FirstVNF_CPU * FirstVNF_RAM ) ),FirstVNF_CPU ) )", "choosing": "( ( Min( ( ( RCSe - RRSe ) - MUM ) ,CS ) + ( MUC - ( RMSe * RCSe ) ) ) - Min( Max( ( CS / Min( ( RCSe * MUC ) ,CS ) ),( MUM / Max( CS,MLU ) ) ) ,DS ) )", "obj1": 0.9063745019920318, "obj2": 0.06433584751076128}, {"determining": "( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) / ( FirstVNF_RAM * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) * ( ( RCSe - Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) / ( RCSe - CS ) ) )", "obj1": 0.9203187250996016, "obj2": 0.056957161707705574}, {"determining": "Min( Max( MDR,FirstVNF_CPU ) ,( FirstVNF_RAM - Max( MDR,ARS ) ) )", "choosing": "( ( RCSe - Min( ( RCSe * RCSe ) ,MUR ) ) - Min( MUR ,DS ) )", "obj1": 0.9063745019920318, "obj2": 0.06433584751076128}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + Min( AMS ,FirstVNF_CPU ) ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( RMSe + ( MUC / MUR ) )", "obj1": 0.9840637450199203, "obj2": 0.006593007940497348}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9103585657370518, "obj2": 0.061832994345938634}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.05617518696585255}, {"determining": "( ( PN - ( Max( MRS,( AMS - Const ) ) - PN ) ) * Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( MLU * DS ) + Min( ( MLU * MUR ) ,( MUR * ( DS * RRSe ) ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0022426794969084766}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - ( Min( MUM ,DS ) - Max( MUM,DS ) ) )", "obj1": 0.9920318725099602, "obj2": 0.002732691856105886}, {"determining": "( ( ( Max( ARS,DDR ) - FirstVNF_RAM_Server ) / Min( MDR ,MDR ) ) - Const )", "choosing": "( ( MLU + Min( RMSe ,RCSe ) ) - ( ( ( MUM * DS ) / ( RRSe + Min( MUC ,DS ) ) ) * MLU ) )", "obj1": 0.9900398406374502, "obj2": 0.003585170042550125}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + Min( AMS ,FirstVNF_CPU ) ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( RMSe + ( MUC / MUR ) )", "obj1": 0.9840637450199203, "obj2": 0.006593007940497348}, {"determining": "( ( ( Min( PN ,( ( Min( PN ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) / ( DDR - Max( Min( RRS ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),( Max( MLU,RCSe ) * RRSe ) ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) ) + ( ( Min( PN ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) + BR ) )", "choosing": "( ( ( ( MLU / ( ( ( MUR - RMSe ) - ( RMSe + MUC ) ) * MLU ) ) / MUM ) * Min( MUC ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) ) + ( MDR - ACS ) )", "choosing": "( ( ( ( MLU / ( MLU * Min( RCSe ,RRSe ) ) ) / MUM ) * Min( MUC ,MUM ) ) / Min( RCSe ,DS ) )", "obj1": 0.99800796812749, "obj2": 0.0008203541483755053}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) )", "choosing": "( Min( RRSe ,( RCSe + ( MUR * RMSe ) ) ) - Max( ( MLU + CS ),( Max( MUR,RCSe ) * RRSe ) ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( FirstVNF_Mem / ( RRS - Const ) )", "choosing": "( Max( DS,RMSe ) / ( ( Max( RMSe,MLU ) - MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,( FirstVNF_RAM_Server + RRS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( ( ( ( DS + RMSe ) - ( MUM + CS ) ) + ( ( CS / RRSe ) + ( MLU - RRSe ) ) ) * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( AMS + DDR ) ) * PN ) / ( RRS - Const ) )", "choosing": "( Max( MUC,RMSe ) / ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - RCSe ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( AMS + ( ( BR - FirstVNF_Mem ) + Min( ( PN + AMS ) ,FirstVNF_Mem_Server ) ) ) ) ,( Const + FirstVNF_Mem ) )", "choosing": "( ( MLU / RRSe ) + ( ( MLU / ( Max( MUR,MUR ) * MLU ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MLU * DS ) + ( RMSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Const + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( DS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - ( Max( MRS,CRS ) - FirstVNF_Mem ) ) - ( Const / MRS ) ) )", "choosing": "( ( MUM * CS ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( FirstVNF_RAM_Server / ( ARS * MRS ) ) - ( MRS / Max( PN,FirstVNF_RAM ) ) ) ) - ( MDR / BR ) )", "choosing": "Max( ( ( MUM * MUC ) - ( MLU + ( ( DS * RCSe ) - ( DS + MUR ) ) ) ),Min( Min( CS ,RRSe ) ,( RCSe * ( Min( ( ( ( RCSe + RMSe ) + Max( RMSe,RMSe ) ) * RRSe ) ,RRSe ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU - ( FirstVNF_CPU - PN ) ) ,( ACS + ARS ) )", "choosing": "Max( Max( Min( RMSe ,CS ),( RRSe / MUC ) ),( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - PN ) - ( FirstVNF_RAM_Server - ( RRS / ACS ) ) )", "choosing": "Max( ( MUM / MUM ),Min( ( MLU * MUR ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) + ( PN * ( AMS / Min( BR ,ACS ) ) ) ) / Max( ( ( CRS / CRS ) / Const ),( DDR * BR ) ) )", "choosing": "( ( ( MUR / DS ) - ( CS - RMSe ) ) / ( ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) * ( MUR / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - ( Max( MRS,CRS ) - FirstVNF_Mem ) ) - ( Const / MRS ) ) )", "choosing": "( ( MUM * CS ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ARS,DDR ) - FirstVNF_RAM_Server ) / Min( MDR ,MDR ) ) - Const )", "choosing": "( ( MLU + Min( RMSe ,RCSe ) ) - ( ( ( MUM * DS ) / ( RRSe + Min( MUC ,DS ) ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) * Max( BR,Const ) )", "choosing": "Max( ( MUC / DS ),Min( ( Max( ( MUC * MUM ),CS ) + MUC ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7910579375167857}, {"determining": "( ( ( ( BR / ( FirstVNF_Mem / Min( FirstVNF_Mem ,Max( ( Const * ARS ),Min( ACS ,MDR ) ) ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( ACS / ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem ,Min( CRS ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - ( MRS * AMS ) ) )", "choosing": "( Max( ( MLU / MUM ),Max( RMSe,( RMSe + RMSe ) ) ) + ( MUR / Max( ( ( ( ( CS + ( CS - MUM ) ) + MUR ) + DS ) - DS ),( Min( ( RCSe + RCSe ) ,MLU ) / RCSe ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.3137394800069238}, {"determining": "( ( ( PN - Const ) + ( FirstVNF_CPU_Server * MDR ) ) / ( ( FirstVNF_Mem * ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / CRS ) ) * ( FirstVNF_CPU_Server - PN ) ) )", "choosing": "( ( ( MLU * DS ) - ( DS / RMSe ) ) / ( RRSe + ( MUR / MUM ) ) )", "obj1": 0.5219123505976095, "obj2": 0.39361242101651733}, {"determining": "Min( Max( CRS,MRS ) ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) - ( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - RMSe ) * RMSe ) - Max( ( MUR + ( MLU / ( Min( MUM ,( RRSe - MUC ) ) * DS ) ) ),Min( DS ,MLU ) ) )", "obj1": 0.250996015936255, "obj2": 0.6414461930023828}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( ( ( ARS / PN ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "Min( ( ( ( MUM + Max( Min( RCSe ,MUC ),DS ) ) * ( MUC * MUR ) ) * MUM ) ,( MLU - MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08619867141469234}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.6733067729083665, "obj2": 0.259635600201141}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( CRS ,Max( Min( Min( ACS ,Const ) ,( ( ACS / FirstVNF_CPU ) / MRS ) ),MDR ) ) ,PN ),( FirstVNF_CPU * FirstVNF_CPU ) ) )", "choosing": "Min( ( RRSe * MUR ) ,Min( ( RCSe + RMSe ) ,MLU ) )", "obj1": 0.6235059760956175, "obj2": 0.2929364936321055}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) + ( FirstVNF_RAM_Server + ARS ) ) * ( ( Min( FirstVNF_CPU_Server ,DDR ) * ARS ) + FirstVNF_Mem ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "( ( MUC / MUR ) + ( ( RCSe - RCSe ) + RMSe ) )", "obj1": 0.23107569721115537, "obj2": 0.6944709406909826}, {"determining": "( ( ARS - ( FirstVNF_CPU * AMS ) ) + ( Max( MRS,( FirstVNF_Mem / ( RRS - Const ) ) ) - ( FirstVNF_Mem - DDR ) ) )", "choosing": "( MLU + ( DS + Max( RMSe,( ( Min( Max( ( MLU - RRSe ),MLU ) ,DS ) + MUM ) - MUC ) ) ) )", "obj1": 0.7330677290836654, "obj2": 0.25355942428115275}, {"determining": "( ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RRSe ,Min( ( MUR - ( RMSe + MUR ) ) ,MUM ) ) - ( MUR / DS ) ) / ( RRSe * ( MUR / MUM ) ) )", "obj1": 0.42231075697211157, "obj2": 0.46785436290567767}, {"determining": "( ( FirstVNF_CPU_Server + Const ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( Max( CRS,Min( RRS ,DDR ) ) / PN ) * ( FirstVNF_RAM - ( RRS / ( FirstVNF_RAM_Server + BR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * RRSe ) ,( ( MUR * RRSe ) - Min( CS ,Max( MUM,RMSe ) ) ) )", "obj1": 0.8067729083665338, "obj2": 0.10958087500993277}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Min( Min( Max( BR,ACS ) ,FirstVNF_RAM_Server ) ,MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( ( DS * ( Max( ( RRSe * MUM ),( RRSe + ( Max( MUM,DS ) + MUM ) ) ) - Max( ( MLU + MUR ),Min( DS ,MUC ) ) ) ) * CS ) / ( ( ( MUM / CS ) * CS ) * Min( RCSe ,MLU ) ) )", "obj1": 0.8844621513944223, "obj2": 0.07827838781837367}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU ) - ( PN - ( ( AMS - BR ) - Const ) ) )", "choosing": "( Min( Min( Min( ( RRSe + ( Max( Min( DS ,MUM ),Min( CS ,MUC ) ) / ( MUR + Min( DS ,MLU ) ) ) ) ,( RRSe - Min( MLU ,Min( ( CS - DS ) ,CS ) ) ) ) ,( Max( CS,( ( RRSe - RRSe ) + DS ) ) - MLU ) ) ,MUR ) / ( MUM + MUC ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( MLU - MUR ) )", "obj1": 0.7908366533864541, "obj2": 0.14378395897355167}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) ) ,( ACS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU - MUR ) * ( ( ( ( MUM - MUC ) - Min( RMSe ,MUR ) ) / ( RRSe * ( MUR / RCSe ) ) ) / DS ) ) - CS )", "obj1": 0.6354581673306773, "obj2": 0.2646564918630598}, {"determining": "Min( Min( CRS ,FirstVNF_RAM ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe / Max( ( DS - ( Max( Min( ( RCSe / RMSe ) ,Max( RCSe,CS ) ),RRSe ) * MLU ) ),( CS + Max( Min( RRSe ,CS ),CS ) ) ) ) )", "obj1": 0.7749003984063745, "obj2": 0.1670599424325608}, {"determining": "Min( ( ( ( Const * FirstVNF_CPU_Server ) - ( MDR / Min( Max( ( RRS / FirstVNF_RAM_Server ),Min( Min( DDR ,RRS ) ,( RRS + FirstVNF_CPU ) ) ) ,Min( DDR ,MRS ) ) ) ) + Max( ( FirstVNF_Mem / Const ),( Const - FirstVNF_CPU_Server ) ) ) ,Max( ( ( Const / FirstVNF_Mem ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) * CS ) / MUM ) / ( ( ( MUC / CS ) * CS ) * ( RCSe + MLU ) ) )", "obj1": 0.2250996015936255, "obj2": 0.7091236386350982}, {"determining": "( ( FirstVNF_Mem + ( ( BR - Max( AMS,MRS ) ) / ( ( AMS / Min( BR ,ACS ) ) + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( Min( RCSe ,MUC ) / ( RRSe * ( DS / MUR ) ) )", "obj1": 0.15139442231075698, "obj2": 0.7589157922190635}, {"determining": "( ( ( ( BR / ( FirstVNF_Mem / Min( FirstVNF_Mem ,Max( ( Const * ARS ),Min( ACS ,MDR ) ) ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( ACS / ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem ,Min( CRS ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - ( MRS * AMS ) ) )", "choosing": "( Max( ( MLU / MUM ),Max( RMSe,( RMSe + RMSe ) ) ) + ( MUR / Max( ( ( ( ( CS + ( CS - MUM ) ) + MUR ) + DS ) - DS ),( Min( ( RCSe + RCSe ) ,MLU ) / RCSe ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.3137394800069238}, {"determining": "( ( Max( Const,Const ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) - Max( CRS,MRS ) ),RRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU * DS ) - ( MUR / Max( Min( ( MUC * MUM ) ,CS ),( MUM + ( RCSe / DS ) ) ) ) ) / ( RRSe * ( MUR / MUM ) ) )", "obj1": 0.4342629482071713, "obj2": 0.4575494811532639}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( AMS * ( ( ARS - FirstVNF_CPU ) + RRS ) ) )", "choosing": "( Max( DS,( MLU / MUC ) ) * Max( Max( Max( ( MUC * MUC ),DS ),RMSe ),( RRSe + MUR ) ) )", "obj1": 0.5079681274900398, "obj2": 0.39586438293535237}, {"determining": "Min( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) ) ) ) ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.7450199203187251, "obj2": 0.19592982375368329}, {"determining": "( ( FirstVNF_Mem + ( Const + PN ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.34860557768924305, "obj2": 0.5289705336347388}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * Min( MUC ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.19322709163346613, "obj2": 0.7176358733099337}, {"determining": "( ( CRS + PN ) / ( Max( Max( Min( Max( FirstVNF_CPU,FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM ) ),Max( ( FirstVNF_RAM_Server - MRS ),( Const + PN ) ) ),( ( ( DDR * FirstVNF_RAM ) / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) - ( ( DDR * CRS ) + ( PN * CRS ) ) ) ) - Const ) )", "choosing": "( Max( DS,( Max( MUR,RCSe ) * RRSe ) ) / ( MUM * RRSe ) )", "obj1": 0.34462151394422313, "obj2": 0.5543646254013462}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) - ( AMS + ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) ) )", "choosing": "Min( ( MUC + MUM ) ,( RCSe * MUM ) )", "obj1": 0.896414342629482, "obj2": 0.059476716457492244}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS - PN ) * ( FirstVNF_CPU - ( AMS / FirstVNF_RAM ) ) ) ) ) + AMS ) )", "choosing": "Min( ( RCSe * Max( ( MUC / DS ),Min( ( DS + MUC ) ,Min( Min( ( MUC / Max( MUC,RRSe ) ) ,RRSe ) ,MLU ) ) ) ) ,( MLU / MUR ) )", "obj1": 0.8027888446215139, "obj2": 0.13138857985764454}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server + ( ( ARS / PN ) * ( FirstVNF_CPU - ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( Max( RMSe,RMSe ),Min( DS ,MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6009589571812074}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( ( ( ARS - FirstVNF_CPU ) + ( Max( MRS,AMS ) - ( ( MDR / MRS ) - DDR ) ) ) * AMS ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( ( MUM / MLU ),( RRSe - RRSe ) ) ) )", "obj1": 0.7390438247011952, "obj2": 0.2351213073396572}, {"determining": "( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ) + ( DDR + BR ) )", "choosing": "( MUC / Min( Max( ( RMSe + CS ),( RRSe * CS ) ) ,DS ) )", "obj1": 0.17330677290836655, "obj2": 0.7453323409816623}, {"determining": "( Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * ( Max( Max( CRS,ARS ),( Max( CRS,PN ) * ( MDR + FirstVNF_Mem_Server ) ) ) + PN ) ) ),Max( ( FirstVNF_Mem / BR ),( DDR * DDR ) ) ) * Min( ( ( RRS + ARS ) / ( FirstVNF_RAM_Server + CRS ) ) ,Max( Min( MDR ,RRS ),( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( CS - ( MUC * Max( DS,RMSe ) ) ) + MUC ) ,( ( RCSe - DS ) / ( ( Min( ( MLU * ( RCSe + ( CS + MUC ) ) ) ,DS ) / RRSe ) + RCSe ) ) )", "obj1": 0.5, "obj2": 0.4298931853137802}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,RRS ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,MLU ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5807511329797181}, {"determining": "( Min( MDR ,RRS ) * Min( Max( MRS,BR ) ,( FirstVNF_CPU_Server / ARS ) ) )", "choosing": "Max( ( MUC / DS ),Min( ( MUM + ( ( Min( RRSe ,MLU ) - ( ( DS / ( RMSe * RMSe ) ) + MUR ) ) + ( DS * MLU ) ) ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.14143426294820718, "obj2": 0.7737416410759536}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( ( Max( Const,BR ) * CRS ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( ( RRSe / ( MUM + MUC ) ) - MUC ) + Min( RMSe ,Max( MUR,( RRSe - RRSe ) ) ) )", "obj1": 0.6334661354581673, "obj2": 0.28230277084091726}, {"determining": "Min( ( ( Max( FirstVNF_CPU,Max( FirstVNF_RAM,ARS ) ) / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Min( ( FirstVNF_RAM_Server - MRS ) ,Min( ARS ,MDR ) ) ) ) )", "choosing": "Min( ( ( MUR - ( Max( RCSe,( MUM * RCSe ) ) * ( RRSe + Max( Min( Max( RMSe,RCSe ) ,( MLU * RCSe ) ),RCSe ) ) ) ) * RMSe ) ,Max( ( RRSe * Min( MUC ,RRSe ) ),( RCSe + CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.44960101520477835}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * AMS ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5854684200882512}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,RRS ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,MLU ) ) )", "obj1": 0.30876494023904383, "obj2": 0.5713075495296877}, {"determining": "Min( ( FirstVNF_CPU * PN ) ,Max( Max( FirstVNF_Mem,AMS ),( ( ( ( MRS / FirstVNF_RAM_Server ) + Min( ACS ,ARS ) ) - ARS ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( ( ( ( ( ( MUC * RMSe ) / CS ) * CS ) + ( ( Max( ( DS + MUR ),Min( RCSe ,MUR ) ) * MUR ) + MUC ) ) / CS ) * MUC ) ,( CS - Max( CS,( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) ) )", "obj1": 0.3645418326693227, "obj2": 0.5196378375459549}, {"determining": "( Min( FirstVNF_Mem ,( AMS + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) + ( DDR + BR ) )", "choosing": "( MUC / Max( ( DS + MUR ),DS ) )", "obj1": 0.1852589641434263, "obj2": 0.7255818276755701}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( DDR + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) )", "choosing": "( MUC / Min( RCSe ,Min( ( ( RRSe + RRSe ) * MLU ) ,( DS * ( MUC / MUM ) ) ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7350692472515793}, {"determining": "Min( ( ( Max( FirstVNF_RAM_Server,PN ) / FirstVNF_Mem ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,( ( Max( Const,BR ) * ( Min( BR ,PN ) + Const ) ) + ( FirstVNF_CPU * CRS ) ) ) ) ) )", "choosing": "Min( ( CS / RRSe ) ,( MUM + ( DS / Min( RRSe ,Max( ( MUR - Min( MUC ,RMSe ) ),CS ) ) ) ) )", "obj1": 0.27091633466135456, "obj2": 0.5999702145028862}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) ) ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,( RCSe - ( CS + RCSe ) ) )", "obj1": 0.31274900398406374, "obj2": 0.567568275741351}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.749003984063745, "obj2": 0.1891647141313344}, {"determining": "Min( Max( MDR,FirstVNF_CPU ) ,( FirstVNF_RAM - Max( MDR,ARS ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.7629482071713147, "obj2": 0.17674622716575988}, {"determining": "( ( MRS * BR ) + Max( MRS,BR ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe - ( Min( CS ,Min( ( RCSe - ( DS - ( MUR + MUC ) ) ) ,MUR ) ) - MUR ) ) )", "obj1": 0.37649402390438247, "obj2": 0.4968801628585156}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( MRS,MRS ) ,AMS ) ,MDR ),FirstVNF_CPU ) )", "choosing": "Min( ( CS * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.7589641434262948, "obj2": 0.17971922696083267}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( AMS * ( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) - FirstVNF_CPU ) + ( Max( MRS,( ( Const + Min( RRS ,FirstVNF_RAM ) ) + ( Max( PN,ARS ) + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem - DDR ) ) ) ) )", "choosing": "( Max( ( RMSe - ( CS + CS ) ),( MUM / MUC ) ) * Min( ( Max( ( MUC * Max( DS,RMSe ) ),CS ) + MUC ) ,Min( Min( MUM ,DS ) ,Min( RRSe ,( MUC / DS ) ) ) ) )", "obj1": 0.4820717131474104, "obj2": 0.44433033542827083}, {"determining": "( Max( ( ARS * ( Min( ARS ,FirstVNF_RAM_Server ) * ( Max( ( MDR * ( FirstVNF_RAM - FirstVNF_RAM ) ),MRS ) + ( MRS / FirstVNF_CPU ) ) ) ),RRS ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUC / DS ),( Min( Min( RMSe ,MUM ) ,RCSe ) - CS ) )", "obj1": 0.13545816733067728, "obj2": 0.78446544779515}, {"determining": "Min( Min( FirstVNF_CPU ,ACS ) ,( FirstVNF_CPU + BR ) )", "choosing": "Min( Max( ( RMSe * MUR ),Max( RMSe,( DS / ( RMSe * DS ) ) ) ) ,( Min( DS ,Min( MUM ,RMSe ) ) - ( CS + CS ) ) )", "obj1": 0.3745019920318725, "obj2": 0.5100451152492542}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) * ( ( ARS - FirstVNF_CPU ) + ( Max( MRS,( ( Const + Min( RRS ,FirstVNF_RAM_Server ) ) + ( Max( PN,ARS ) + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem - DDR ) ) ) ) )", "choosing": "( Max( DS,( MUC / MUM ) ) * Min( ( Max( ( MUC * ( DS - RRSe ) ),CS ) + MUC ) ,Min( Min( MUM ,DS ) ,Min( RRSe ,Min( MUC ,DS ) ) ) ) )", "obj1": 0.4860557768924303, "obj2": 0.4317948795369437}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( AMS * ( ( BR - FirstVNF_CPU ) + ( Max( MRS,( ( Const + Min( RRS ,FirstVNF_RAM ) ) + ( ( ACS - PN ) + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem - DDR ) ) ) ) )", "choosing": "( Max( DS,( MUM / MUC ) ) * ( Min( Max( ( RMSe - ( Max( MUC,MUC ) * ( RMSe - ( RRSe * CS ) ) ) ),CS ) ,DS ) + ( ( DS + CS ) + MUC ) ) )", "obj1": 0.7370517928286853, "obj2": 0.23638684216252173}, {"determining": "( ( ( Const + PN ) - AMS ) + ( Max( MRS,MRS ) / ( FirstVNF_CPU - AMS ) ) )", "choosing": "( Min( MUC ,MUC ) + ( ( ( ( RMSe * CS ) + DS ) - ( RRSe * ( ( MUM * MUM ) / ( ( ( MLU - CS ) * Max( MUR,MUM ) ) * MUM ) ) ) ) * MUM ) )", "obj1": 0.9581673306772909, "obj2": 0.02660292852809171}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( MRS,MRS ) ,AMS ) ,MDR ),FirstVNF_CPU ) )", "choosing": "( ( ( RCSe - MUR ) / ( RCSe - ( Min( MUC ,MUC ) + ( MUC / MUR ) ) ) ) + Min( RMSe ,MUM ) )", "obj1": 0.9163346613545816, "obj2": 0.05861181692977425}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( AMS * ( ( ARS - FirstVNF_CPU ) + ( Max( MRS,( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( Max( PN,ARS ) + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem - DDR ) ) ) ) )", "choosing": "( Max( DS,( MUM / MUC ) ) * Min( ( Max( ( MUC * Max( ( ( MUC / MUR ) + ( MLU / DS ) ),RMSe ) ),CS ) + MUC ) ,Min( Min( MUM ,DS ) ,Min( RRSe ,( MUC / DS ) ) ) ) )", "obj1": 0.46613545816733065, "obj2": 0.44836297523556917}, {"determining": "Min( ( CRS / RRS ) ,Max( ( ( ARS - Const ) * Max( FirstVNF_Mem,ACS ) ),Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + ( RRSe + MLU ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( ( Const + PN ) - ( MDR * RRS ) ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( CRS - ( Min( Min( ACS ,RRS ) ,MRS ) - Const ) ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUC ,MUC ) + ( ( ( ( RMSe * CS ) + DS ) - ( ( ( MUM * MUM ) - ( MLU + MUR ) ) * RCSe ) ) * MUM ) )", "obj1": 0.952191235059761, "obj2": 0.03467100683915118}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) ) ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,( RCSe - ( CS + ( MUR / MUR ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.5177093301227244}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUC ,MUC ) + ( MUC / MUR ) )", "obj1": 0.9621513944223108, "obj2": 0.020125145020047745}, {"determining": "( ( ( ( RRS / ARS ) * AMS ) + BR ) - ( MRS + RRS ) )", "choosing": "( ( RCSe / RMSe ) + ( RCSe - ( CS + CS ) ) )", "obj1": 0.48406374501992033, "obj2": 0.4397211649772564}, {"determining": "( Min( RRS ,RRS ) + ( ( Const + PN ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MUR - RMSe ) + DS ) - RRSe ) + RRSe ) + ( MUR / CS ) )", "obj1": 0.9462151394422311, "obj2": 0.035701027874669604}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RCSe / RMSe ) + ( RMSe + Max( ( DS - Min( RRSe ,Min( ( MUR - ( RMSe + MUR ) ) ,MUM ) ) ),DS ) ) )", "obj1": 0.9362549800796812, "obj2": 0.046623141875689986}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) - ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( ( Min( ACS ,RRS ) + CRS ) - ( Max( RRS,FirstVNF_Mem ) * MRS ) ) - ( ( DDR - FirstVNF_CPU_Server ) - Const ) ) * Max( MRS,Min( MDR ,BR ) ) ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) + DS ) - RRSe ) + RRSe ) + ( MUR / CS ) )", "obj1": 0.9780876494023905, "obj2": 0.010279946742861095}, {"determining": "Min( ( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,Min( ( MDR / Max( Max( ( Min( ( DDR + MDR ) ,MDR ) / FirstVNF_RAM_Server ),MDR ),FirstVNF_Mem_Server ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - MUR ) * RMSe ) - Max( Min( ( CS * ( CS * RMSe ) ) ,( Max( ( CS + Min( ( MUM / MUM ) ,RCSe ) ),( ( ( MUC - DS ) * RMSe ) * DS ) ) + DS ) ),Min( DS ,MUC ) ) )", "obj1": 0.9282868525896414, "obj2": 0.048078887257251346}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server + ( ( ARS / PN ) * ( FirstVNF_CPU - ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( Max( RMSe,RMSe ),Min( DS ,MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6009589571812074}, {"determining": "Min( ( Const / ( DDR * FirstVNF_RAM ) ) ,Min( Min( ( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ) * MDR ) ,CRS ) ,PN ) )", "choosing": "( ( ( RMSe - RCSe ) * RMSe ) - Max( ( Max( MUR,( RRSe - ( RCSe * MLU ) ) ) + CS ),Min( DS ,MUC ) ) )", "obj1": 0.9262948207171314, "obj2": 0.04994674821186099}, {"determining": "( ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + CRS ) ) - ( ( DDR - ARS ) - Const ) ) * FirstVNF_RAM ) ) ) + ( ( Const + PN ) - FirstVNF_CPU ) )", "choosing": "( Min( CS ,RRSe ) + ( ( RCSe - ( CS + CS ) ) / CS ) )", "obj1": 0.9661354581673307, "obj2": 0.016793420670449522}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),Max( MRS,CRS ) ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( MUM + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9243027888446215, "obj2": 0.05498699951932252}, {"determining": "( Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * ( Max( Max( CRS,ARS ),( Max( CRS,PN ) * ( MDR + FirstVNF_Mem_Server ) ) ) + PN ) ) ),Max( ( FirstVNF_Mem / BR ),( DDR * DDR ) ) ) * Min( ( ( RRS + ARS ) / ( FirstVNF_RAM_Server + CRS ) ) ,Max( Min( MDR ,RRS ),( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( CS - ( MUC * Max( DS,RMSe ) ) ) + MUC ) ,( ( RCSe - DS ) / ( ( Min( ( MLU * ( RCSe + ( CS + MUC ) ) ) ,DS ) / RRSe ) + RCSe ) ) )", "obj1": 0.5, "obj2": 0.4298931853137802}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( PN - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - PN ) ),MRS ) / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "( ( ( MLU * DS ) + ( RMSe / RRSe ) ) + Min( RMSe ,MUM ) )", "obj1": 0.9760956175298805, "obj2": 0.01174625939859113}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.9681274900398407, "obj2": 0.015245756773315421}, {"determining": "( ( FirstVNF_CPU - ( ( ( DDR * CRS ) / Min( Const ,Max( MRS,RRS ) ) ) - DDR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUM ),CS ) + Min( MUM ,RCSe ) )", "obj1": 0.9741035856573705, "obj2": 0.014250004745868397}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( ( FirstVNF_Mem + FirstVNF_RAM ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( Max( DS,( MUM - RRSe ) ) / ( RRSe + Max( ( Max( Max( Max( ( MUC * MUC ),DS ),RMSe ),( RRSe + MUR ) ) + DS ),( MUC / Min( RCSe ,DS ) ) ) ) )", "obj1": 0.9442231075697212, "obj2": 0.04086467525097768}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( ( Const + PN ) - FirstVNF_CPU ) )", "choosing": "( MUR + ( MLU / DS ) )", "obj1": 0.9860557768924303, "obj2": 0.006343746581054748}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) )", "obj1": 0.9880478087649402, "obj2": 0.003765047324444275}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + Min( AMS ,FirstVNF_CPU ) ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( RMSe + ( MUC / MUR ) )", "obj1": 0.9840637450199203, "obj2": 0.006593007940497348}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.05617518696585255}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( ( ( ARS - FirstVNF_CPU ) + ( Max( MRS,MRS ) - ( FirstVNF_Mem - ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) ) * AMS ) )", "choosing": "( Max( DS,( MLU / MUC ) ) * ( Min( Max( ( ( RRSe / ( MUM + MUC ) ) - RRSe ),CS ) ,DS ) + MUM ) )", "obj1": 0.9402390438247012, "obj2": 0.044079225632340985}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + Min( AMS ,FirstVNF_CPU ) ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( RMSe + ( MUC / MUR ) )", "obj1": 0.9840637450199203, "obj2": 0.006593007940497348}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( Min( ACS ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - MUC ) + Min( Max( ( Max( Max( Max( ( MUC * MUC ),DS ),RMSe ),( RRSe + MUR ) ) + DS ),Max( MUC,( ( Max( DS,MUR ) / MUR ) * MUM ) ) ) ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.0577886178374623}, {"determining": "( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) / ( FirstVNF_RAM * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) * ( ( RCSe - Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) / ( RCSe - CS ) ) )", "obj1": 0.9203187250996016, "obj2": 0.056957161707705574}, {"determining": "( ( ( PN - ( Max( MRS,( AMS - Const ) ) - PN ) ) * Min( FirstVNF_Mem_Server ,AMS ) ) + ( ( Const + PN ) - FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( MLU * DS ) + Min( ( MLU * MUR ) ,( MUR * ( DS * RRSe ) ) ) ) ) + ( MUR / CS ) )", "obj1": 0.9920318725099602, "obj2": 0.0026048518960587567}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,( PN + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) + BR ) )", "choosing": "( ( ( ( MLU / ( ( ( MUR + CS ) - ( MUR - RMSe ) ) * MLU ) ) / ( MUC / ( CS * ( MLU + ( ( MUM * MUC ) * ( CS * MUR ) ) ) ) ) ) / Min( MUC ,RRSe ) ) / Min( RCSe ,( ( MUC * MUC ) / ( Max( ( Max( MLU,Min( MUM ,DS ) ) - RRSe ),Min( RRSe ,MLU ) ) - MUM ) ) ) )", "obj1": 0.99800796812749, "obj2": 0.0006736961374702142}, {"determining": "( ( PN - ( Max( MRS,( AMS - Const ) ) - PN ) ) * Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( MLU * DS ) + Min( ( MLU * MUR ) ,( MUR * ( DS * RRSe ) ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0022426794969084766}, {"determining": "( ( ( Max( ARS,DDR ) - FirstVNF_RAM_Server ) / Min( MDR ,MDR ) ) - Const )", "choosing": "( ( MLU + Min( RMSe ,RCSe ) ) - ( ( ( MUM * DS ) / ( RRSe + Min( MUC ,DS ) ) ) * MLU ) )", "obj1": 0.9900398406374502, "obj2": 0.003585170042550125}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "( Max( RMSe,MUC ) + Min( RMSe ,MUM ) )", "obj1": 0.9721115537848606, "obj2": 0.01515821622662306}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Min( Min( Max( BR,ACS ) ,FirstVNF_RAM_Server ) ,MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( ( DS * ( Max( ( RRSe * MUM ),( RRSe + ( Max( MUM,DS ) + MUM ) ) ) - Max( ( MLU + MUR ),Min( DS ,MUC ) ) ) ) * CS ) / ( ( ( MUM / CS ) * CS ) * Min( RCSe ,MLU ) ) )", "obj1": 0.9382470119521913, "obj2": 0.04438001410121084}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( ( ( ( FirstVNF_Mem / CRS ) - ACS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ),FirstVNF_CPU ) )", "choosing": "( Max( DS,( MUM - RRSe ) ) / ( RRSe + Max( RRSe,Max( MUC,( ( Max( DS,MUR ) / MUR ) * MUM ) ) ) ) )", "obj1": 0.9442231075697212, "obj2": 0.04086467525097768}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) )", "choosing": "( Min( RRSe ,( RCSe + ( MUR * RMSe ) ) ) - Max( ( MLU + CS ),( Max( MUR,RCSe ) * RRSe ) ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "( ( ( Min( PN ,( ( Min( PN ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) / ( DDR - Max( Min( RRS ,FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),( Max( MLU,RCSe ) * RRSe ) ) )", "obj1": 0.9960159362549801, "obj2": 0.0013191229967500703}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Min( Min( Max( BR,ACS ) ,FirstVNF_RAM_Server ) ,MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( ( DS * ( Max( ( RRSe * MUM ),( RRSe + ( Max( MUM,DS ) + MUM ) ) ) - Max( ( MLU + MUR ),Min( DS ,MUC ) ) ) ) * CS ) / ( ( ( MUM / CS ) * CS ) * Min( RCSe ,MLU ) ) )", "obj1": 0.9382470119521913, "obj2": 0.04438001410121084}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + Min( Min( Max( Min( Min( ARS ,AMS ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,MDR ) )", "choosing": "( Max( RMSe,MUR ) + Min( RMSe ,MUM ) )", "obj1": 0.9721115537848606, "obj2": 0.01515821622662306}, {"determining": "Min( Max( ( ( Min( PN ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( MDR * Const ) ) ) ,( Const - FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / RMSe ) + ( RMSe + Max( ( DS - Min( RRSe ,Min( ( MUR - ( RMSe + MUR ) ) ,MUM ) ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem / ( RRS - Const ) )", "choosing": "( Max( DS,RMSe ) / ( ( Max( RMSe,MLU ) - MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,( FirstVNF_RAM_Server + RRS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( ( ( ( DS + RMSe ) - ( MUM + CS ) ) + ( ( CS / RRSe ) + ( MLU - RRSe ) ) ) * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * ( AMS + DDR ) ) * PN ) / ( RRS - Const ) )", "choosing": "( Max( MUC,RMSe ) / ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - RCSe ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( ( ( ( ARS / FirstVNF_CPU ) + PN ) / FirstVNF_RAM_Server ) + ( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - ( Max( MRS,CRS ) - FirstVNF_Mem ) ) - ( Const / MRS ) ) )", "choosing": "( ( CS / ( Max( ( MUC + RMSe ),MLU ) + ( ( MUC + RRSe ) + RCSe ) ) ) / ( ( Max( RMSe,MLU ) - MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - ( Max( MRS,CRS ) - FirstVNF_Mem ) ) - ( Const / MRS ) ) )", "choosing": "( ( MUM * CS ) * Min( ( MUR / MUR ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Max( ( BR / FirstVNF_CPU ),MRS ) ) / ( ARS * PN ) )", "choosing": "( Min( RRSe ,( ( ( Max( ( RRSe / Min( RMSe ,CS ) ),MUR ) / MUM ) / DS ) * ( RMSe / ( ( ( DS / Min( RRSe ,RRSe ) ) + Max( MLU,CS ) ) + Min( MUC ,( RMSe + ( CS * RRSe ) ) ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.6733067729083665, "obj2": 0.259635600201141}, {"determining": "( ( ( ACS + ( ( ( Min( Max( DDR,ACS ) ,FirstVNF_Mem ) + Max( MRS,( DDR + FirstVNF_CPU_Server ) ) ) * MDR ) + ( FirstVNF_CPU_Server - PN ) ) ) + BR ) - ( PN / FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( CS ,Min( Max( MLU,( Min( CS ,( MLU - MUR ) ) / Max( MLU,DS ) ) ) ,( RCSe * ( MUC / MLU ) ) ) ) ) - Max( ( MLU + CS ),Min( DS ,RCSe ) ) )", "obj1": 0.6055776892430279, "obj2": 0.2675831356670546}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( PN / ( DDR * ( FirstVNF_Mem + Max( ACS,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - FirstVNF_CPU ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( Min( MUR ,MUM ) - Max( RRSe,( ( RRSe / RRSe ) / ( MUM + CS ) ) ) ) ) ) ,( RMSe - ( CS - CS ) ) ) )", "obj1": 0.549800796812749, "obj2": 0.3226771948152346}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Max( MDR,ACS ) ) ) ,AMS ) ,PN ),FirstVNF_CPU ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( ( ( RMSe + RMSe ) * RRSe ) + DS ) ) )", "obj1": 0.7191235059760956, "obj2": 0.20962715456602107}, {"determining": "( ( AMS * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) / ( Const / FirstVNF_RAM ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( Min( ( DS / ( ( MUR / MUR ) / Max( RCSe,RCSe ) ) ) ,RCSe ) * RCSe ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.5159362549800797, "obj2": 0.38166175765807103}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) + ( FirstVNF_RAM_Server + ARS ) ) * ( ( Min( FirstVNF_CPU_Server ,DDR ) * ARS ) + FirstVNF_Mem ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "( ( MUC / MUR ) + ( ( RCSe - RCSe ) + RMSe ) )", "obj1": 0.23107569721115537, "obj2": 0.6944709406909826}, {"determining": "Min( Max( CRS,MRS ) ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) - ( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - RMSe ) * RMSe ) - Max( ( MUR + ( MLU / ( Min( MUM ,( RRSe - MUC ) ) * DS ) ) ),Min( DS ,MLU ) ) )", "obj1": 0.250996015936255, "obj2": 0.6414461930023828}, {"determining": "( ( FirstVNF_CPU_Server + Const ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( Max( CRS,Min( RRS ,DDR ) ) / PN ) * ( FirstVNF_RAM - ( RRS / ( FirstVNF_RAM_Server + BR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * RRSe ) ,( ( MUR * RRSe ) - Min( CS ,Max( MUM,RMSe ) ) ) )", "obj1": 0.8067729083665338, "obj2": 0.10958087500993277}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) ) ,( ACS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU - MUR ) * ( ( ( ( MUM - MUC ) - Min( RMSe ,MUR ) ) / ( RRSe * ( MUR / RCSe ) ) ) / DS ) ) - CS )", "obj1": 0.6354581673306773, "obj2": 0.2646564918630598}, {"determining": "( ( ( ( RRS / Min( ( FirstVNF_RAM - FirstVNF_CPU_Server ) ,Min( MDR ,FirstVNF_CPU ) ) ) * AMS ) + BR ) - ( ACS - CRS ) )", "choosing": "( ( RCSe + ( ( RMSe / RCSe ) * ( ( Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) - RCSe ) / ( RCSe - CS ) ) ) ) + ( ( ( ( CS + ( RMSe + RMSe ) ) - ( MUR * RCSe ) ) * Min( Max( ( ( MUR - ( MUM / CS ) ) + RMSe ),( MUR / ( RMSe / Max( MUM,MUM ) ) ) ) ,MLU ) ) - Max( RMSe,RRSe ) ) )", "obj1": 0.4820717131474104, "obj2": 0.4337134228630806}, {"determining": "Min( ( ( ( FirstVNF_RAM - Max( MDR,ARS ) ) * FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * Max( Const,FirstVNF_CPU_Server ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( CS + MUR ) ) * Max( Min( MUR ,MLU ),( ( MLU / MUM ) / DS ) ) ) - CS )", "obj1": 0.4860557768924303, "obj2": 0.3967064246946188}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU + CRS ) / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,FirstVNF_RAM_Server ) ) ) ) ) ) + ( FirstVNF_RAM / MRS ) ) )", "choosing": "Min( ( RCSe * MUM ) ,( RRSe - RCSe ) )", "obj1": 0.7868525896414342, "obj2": 0.14215412423252585}, {"determining": "( ( Max( ( Max( Const,BR ) * CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM_Server ,RRS ) * ( ARS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( Min( ( RRSe + ( Max( ( MUC * MUR ),DS ) - DS ) ) ,( CS - MUM ) ) / MUC ) ,( Max( RRSe,RRSe ) / RMSe ) ) / ( RRSe * ( MUR / MUM ) ) )", "obj1": 0.4203187250996016, "obj2": 0.48634405109167755}, {"determining": "( ( ( ( BR / ( FirstVNF_Mem / Min( FirstVNF_Mem ,Max( ( Const * ARS ),Min( ACS ,MDR ) ) ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( ACS / ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem ,Min( CRS ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - ( MRS * AMS ) ) )", "choosing": "( Max( ( MLU / MUM ),Max( RMSe,( RMSe + RMSe ) ) ) + ( MUR / Max( ( ( ( ( CS + ( CS - MUM ) ) + MUR ) + DS ) - DS ),( Min( ( RCSe + RCSe ) ,MLU ) / RCSe ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.3137394800069238}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( Max( MRS,( AMS - Const ) ) - PN ) ) ) ) + Min( ( FirstVNF_Mem * MDR ) ,( AMS + Min( FirstVNF_RAM_Server ,ACS ) ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,( RCSe * Min( MUM ,RCSe ) ) )", "obj1": 0.8665338645418327, "obj2": 0.07550631093323992}, {"determining": "Min( Min( CRS ,FirstVNF_RAM ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe / Max( ( DS - ( Max( Min( ( RCSe / RMSe ) ,Max( RCSe,CS ) ),RRSe ) * MLU ) ),( CS + Max( Min( RRSe ,CS ),CS ) ) ) ) )", "obj1": 0.7749003984063745, "obj2": 0.1670599424325608}, {"determining": "( ( Max( Const,Const ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) - Max( CRS,MRS ) ),RRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU * DS ) - ( MUR / Max( Min( ( MUC * MUM ) ,CS ),( MUM + ( RCSe / DS ) ) ) ) ) / ( RRSe * ( MUR / MUM ) ) )", "obj1": 0.4342629482071713, "obj2": 0.4575494811532639}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( BR / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "( ( RMSe / RCSe ) * ( ( RCSe - Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) / ( RCSe - CS ) ) )", "obj1": 0.8944223107569721, "obj2": 0.06396776732818814}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( ( PN - AMS ),RRS ) ) ,Min( ( CRS * ( Min( Min( Max( ( FirstVNF_Mem + MRS ),MDR ) ,CRS ) ,PN ) * ( ( ARS / PN ) * ( ( ARS * AMS ) / ( MDR / PN ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUC * Max( Min( MUC ,RRSe ),Max( CS,( Min( RRSe ,CS ) + ( Min( RRSe ,RCSe ) + Max( MUC,CS ) ) ) ) ) ),Min( DS ,MLU ) ) - ( ( MLU - MUR ) * Min( RCSe ,DS ) ) )", "obj1": 0.25697211155378485, "obj2": 0.6277555061356808}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS - PN ) * ( FirstVNF_CPU - ( AMS / FirstVNF_RAM ) ) ) ) ) + AMS ) )", "choosing": "Min( ( RCSe * Max( ( MUC / DS ),Min( ( DS + MUC ) ,Min( Min( ( MUC / Max( MUC,RRSe ) ) ,RRSe ) ,MLU ) ) ) ) ,( MLU / MUR ) )", "obj1": 0.8027888446215139, "obj2": 0.13138857985764454}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU ) - ( PN - ( ( AMS - BR ) - Const ) ) )", "choosing": "( Min( Min( Min( ( RRSe + ( Max( Min( DS ,MUM ),Min( CS ,MUC ) ) / ( MUR + Min( DS ,MLU ) ) ) ) ,( RRSe - Min( MLU ,Min( ( CS - DS ) ,CS ) ) ) ) ,( Max( CS,( ( RRSe - RRSe ) + DS ) ) - MLU ) ) ,MUR ) / ( MUM + MUC ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "Min( ( ( ( Const * FirstVNF_CPU_Server ) - ( MDR / Min( Max( ( RRS / FirstVNF_RAM_Server ),Min( Min( DDR ,RRS ) ,( RRS + FirstVNF_CPU ) ) ) ,Min( DDR ,MRS ) ) ) ) + Max( ( FirstVNF_Mem / Const ),( Const - FirstVNF_CPU_Server ) ) ) ,Max( ( ( Const / FirstVNF_Mem ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) * CS ) / MUM ) / ( ( ( MUC / CS ) * CS ) * ( RCSe + MLU ) ) )", "obj1": 0.2250996015936255, "obj2": 0.7091236386350982}, {"determining": "( ( ( ( BR / ( FirstVNF_Mem / Min( FirstVNF_Mem ,Max( ( Const * ARS ),Min( ACS ,MDR ) ) ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( ACS / ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem ,Min( CRS ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - ( MRS * AMS ) ) )", "choosing": "( Max( ( MLU / MUM ),Max( RMSe,( RMSe + RMSe ) ) ) + ( MUR / Max( ( ( ( ( CS + ( CS - MUM ) ) + MUR ) + DS ) - DS ),( Min( ( RCSe + RCSe ) ,MLU ) / RCSe ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.3137394800069238}, {"determining": "Min( ( ( ( Const * FirstVNF_CPU_Server ) - ( MDR / Min( Max( ( RRS / FirstVNF_RAM_Server ),Min( Min( DDR ,RRS ) ,( RRS + FirstVNF_CPU ) ) ) ,Min( DDR ,MRS ) ) ) ) + Max( ( FirstVNF_Mem / Const ),( Const - FirstVNF_CPU_Server ) ) ) ,Max( ( ( Const / FirstVNF_Mem ) / ( DDR - MRS ) ),Min( MDR ,RRS ) ) )", "choosing": "( ( MUC / ( CS * Min( RRSe ,DS ) ) ) / ( ( ( MUC / CS ) * CS ) * ( RCSe + MLU ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7243845240225646}, {"determining": "( ( FirstVNF_Mem + ( ( BR - Max( AMS,MRS ) ) / ( ( AMS / Min( BR ,ACS ) ) + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( Min( RCSe ,MUC ) / ( RRSe * ( DS / MUR ) ) )", "obj1": 0.15139442231075698, "obj2": 0.7589157922190635}, {"determining": "Min( ( ( Max( FirstVNF_CPU,Max( FirstVNF_RAM,ARS ) ) / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Min( ( FirstVNF_RAM_Server - MRS ) ,Min( ARS ,MDR ) ) ) ) )", "choosing": "Min( ( ( MUR - ( Max( RCSe,( MUM * RCSe ) ) * ( RRSe + Max( Min( Max( RMSe,RCSe ) ,( MLU * RCSe ) ),RCSe ) ) ) ) * RMSe ) ,Max( ( RRSe * Min( MUC ,RRSe ) ),( RCSe + CS ) ) )", "obj1": 0.4641434262948207, "obj2": 0.44960101520477835}, {"determining": "( ( FirstVNF_Mem + ( Const + PN ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.34860557768924305, "obj2": 0.5289705336347388}, {"determining": "( ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RRSe ,Min( ( MUR - ( RMSe + MUR ) ) ,MUM ) ) - ( MUR / DS ) ) / ( RRSe * ( MUR / MUM ) ) )", "obj1": 0.42231075697211157, "obj2": 0.46785436290567767}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,RRS ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS + PN ) * ( Min( ARS ,AMS ) / ( MDR / ( MRS - FirstVNF_Mem ) ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe * ( MLU - MUR ) ) - Max( ( MLU + CS ),Min( DS ,( ( ( ( Max( MUC,RCSe ) - ( CS * MUC ) ) + MUR ) + MLU ) * ( ( ( RCSe * CS ) * MUM ) * CS ) ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6003092773078749}, {"determining": "( Min( MDR ,RRS ) * Min( Max( MRS,BR ) ,( FirstVNF_CPU_Server / ARS ) ) )", "choosing": "Max( ( MUC / DS ),Min( ( MUM + ( ( Min( RRSe ,MLU ) - ( ( DS / ( RMSe * RMSe ) ) + MUR ) ) + ( DS * MLU ) ) ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.14143426294820718, "obj2": 0.7737416410759536}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( ( ( ARS / PN ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "Min( ( ( ( MUM + Max( Min( RCSe ,MUC ),DS ) ) * ( MUC * MUR ) ) * MUM ) ,( MLU - MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08619867141469234}, {"determining": "( ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / FirstVNF_RAM_Server ) + ( BR / Max( FirstVNF_RAM,( FirstVNF_Mem + Const ) ) ) ) ) ) + Max( Const,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( MUR + DS ) + Min( CS ,( ( ( RRSe + RRSe ) - RMSe ) / ( MLU * DS ) ) ) )", "obj1": 0.896414342629482, "obj2": 0.05018595979812172}, {"determining": "( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ) + ( DDR + BR ) )", "choosing": "( MUC / Min( Max( ( RMSe + CS ),( RRSe * CS ) ) ,DS ) )", "obj1": 0.17330677290836655, "obj2": 0.7453323409816623}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,Min( ( ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( ( MRS / FirstVNF_Mem ) / ( MDR / PN ) ) ) ) * CRS ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( CS,( Min( RRSe ,MUM ) * DS ) ) ,MUM ) - Max( ( CS + MLU ),Min( CS ,MLU ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5787261828048798}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,RRS ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,MLU ) ) )", "obj1": 0.30876494023904383, "obj2": 0.5713075495296877}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.7110846624789791}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( ( Min( MUC ,MUC ) + ( MUC / MUR ) ) * MUM ) ,( MLU - MUR ) )", "obj1": 0.7250996015936255, "obj2": 0.20294589853756015}, {"determining": "( Min( ( ARS * ( ACS * ( Max( ( MDR * ( MDR - FirstVNF_RAM ) ),MRS ) + ( ( FirstVNF_Mem - Const ) * ACS ) ) ) ) ,RRS ) * Max( BR,Const ) )", "choosing": "Max( ( MUC / DS ),Min( ( CS / Min( ( RCSe * MUC ) ,CS ) ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7880039079504338}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( AMS * ( ( ARS - FirstVNF_CPU ) + RRS ) ) )", "choosing": "( Max( DS,( MLU / MUC ) ) * Max( Max( Max( ( MUC * MUC ),DS ),RMSe ),( RRSe + MUR ) ) )", "obj1": 0.5079681274900398, "obj2": 0.39586438293535237}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.8466135458167331, "obj2": 0.07720733500877655}, {"determining": "( ( FirstVNF_Mem + Min( ( ( ( ARS / PN ) * ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) - FirstVNF_CPU ) ,( ACS + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( ( MLU + CS ) * Min( MUC ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.17131474103585656, "obj2": 0.7576578395629177}, {"determining": "Min( ( FirstVNF_CPU * PN ) ,Max( Max( FirstVNF_Mem,AMS ),( ( ( ( MRS / FirstVNF_RAM_Server ) + Min( ACS ,ARS ) ) - ARS ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( ( ( ( ( ( MUC * RMSe ) / CS ) * CS ) + ( ( Max( ( DS + MUR ),Min( RCSe ,MUR ) ) * MUR ) + MUC ) ) / CS ) * MUC ) ,( CS - Max( CS,( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) ) )", "obj1": 0.3645418326693227, "obj2": 0.5196378375459549}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( AMS * ( ( ARS - FirstVNF_CPU ) + ( Max( MRS,( ( FirstVNF_CPU_Server * AMS ) + ( Max( PN,ARS ) + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem - DDR ) ) ) ) )", "choosing": "( Max( DS,( MUM / MUC ) ) * Min( ( Max( ( MUC * Max( ( ( MUC / MUR ) + ( MLU / DS ) ),( MLU - MUR ) ) ),CS ) + MUC ) ,Min( Min( MUM ,DS ) ,Min( RRSe ,( MUC / DS ) ) ) ) )", "obj1": 0.46613545816733065, "obj2": 0.443398391585425}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ( FirstVNF_CPU_Server + ARS ) + Max( AMS,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Const * ARS ) ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUC * MUC ) / CS ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( Max( MUR,MUR ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.3426294820717131, "obj2": 0.5415986272114109}, {"determining": "( Min( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + CRS ) ) ,( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * ( Max( ( MDR * Max( DDR,BR ) ),MRS ) + PN ) ) ),Max( ( FirstVNF_Mem / BR ),( DDR * DDR ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3386454183266932, "obj2": 0.5520230063169438}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * Min( MUC ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.19322709163346613, "obj2": 0.7176358733099337}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) ) ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,( RCSe - ( CS + RCSe ) ) )", "obj1": 0.31274900398406374, "obj2": 0.567568275741351}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( Const,BR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( MLU - MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08619867141469234}, {"determining": "( ( ( AMS + ARS ) * CRS ) / Max( ( ( ARS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server * PN ) - ( FirstVNF_Mem - ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) ),AMS ) )", "choosing": "Min( ( MUR - MLU ) ,Min( CS ,( ( MUR * ( MUC + CS ) ) / Min( MUC ,RCSe ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.05000199166993491}, {"determining": "Min( Max( MDR,FirstVNF_CPU ) ,( FirstVNF_RAM - Max( MDR,ARS ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.7629482071713147, "obj2": 0.17674622716575988}, {"determining": "( ( MRS * BR ) + Max( MRS,BR ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe - ( Min( CS ,Min( ( RCSe - ( DS - ( MUR + MUC ) ) ) ,MUR ) ) - MUR ) ) )", "obj1": 0.37649402390438247, "obj2": 0.4968801628585156}, {"determining": "Min( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) ) ) ) ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.7450199203187251, "obj2": 0.19592982375368329}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) )", "obj1": 0.952191235059761, "obj2": 0.030266545859422588}, {"determining": "Min( Min( FirstVNF_CPU ,ACS ) ,( FirstVNF_CPU + BR ) )", "choosing": "Min( Max( ( RMSe * MUR ),Max( RMSe,( DS / ( RMSe * DS ) ) ) ) ,( Min( DS ,Min( MUM ,RMSe ) ) - ( CS + CS ) ) )", "obj1": 0.3745019920318725, "obj2": 0.5100451152492542}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( ( DDR / ARS ) - ARS ) )", "choosing": "( ( RRSe - MUM ) - Max( ( MLU + CS ),( Max( ( DS - Min( MLU ,RMSe ) ),RCSe ) * RRSe ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( ( MRS + RRS ) ,( CRS / DDR ) ),( Min( FirstVNF_Mem ,Max( PN,CRS ) ) + ( Const - AMS ) ) ) )", "choosing": "Min( Min( ( Max( CS,( MUC * ( Min( MUC ,( CS + MUR ) ) - CS ) ) ) + MUC ) ,( ( RCSe - DS ) / Min( ( MUC / ( CS / Min( RRSe ,DS ) ) ) ,RRSe ) ) ) ,( RCSe - ( CS + RCSe ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5954798281563578}, {"determining": "( Max( ( ARS * ( Min( ARS ,FirstVNF_RAM_Server ) * ( Max( ( MDR * ( FirstVNF_RAM - FirstVNF_RAM ) ),MRS ) + ( MRS / FirstVNF_CPU ) ) ) ),RRS ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUC / DS ),( Min( Min( RMSe ,MUM ) ,RCSe ) - CS ) )", "obj1": 0.13545816733067728, "obj2": 0.78446544779515}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) ) ) ) ) )", "choosing": "( Min( RRSe ,( RCSe + ( MUR * RMSe ) ) ) - Max( ( MUR + CS ),( Max( MUR,RCSe ) * RRSe ) ) )", "obj1": 0.5119521912350598, "obj2": 0.38600436946525435}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) ) ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,( RCSe - ( CS + ( MUR / MUR ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.5177093301227244}, {"determining": "Min( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) ) ) ) ) )", "choosing": "Min( ( Min( RMSe ,MUM ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.7549800796812749, "obj2": 0.18129048854480315}, {"determining": "Min( ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( Max( PN,ARS ) + FirstVNF_RAM_Server ) ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Max( ( MUM / RCSe ),Max( RRSe,Min( RRSe ,( MUC / DS ) ) ) ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * AMS ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5854684200882512}, {"determining": "( Min( RRS ,RRS ) + ( ( Const + PN ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MUR - RMSe ) + DS ) - RRSe ) + RRSe ) + ( MUR / CS ) )", "obj1": 0.9462151394422311, "obj2": 0.035701027874669604}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ),MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( Min( RMSe ,MUM ) * RRSe ) ,MUC ) + ( MUC / MUR ) )", "obj1": 0.9342629482071713, "obj2": 0.04583533245693566}, {"determining": "( Min( RRS ,RRS ) + ( ( Const + PN ) - FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( CS - RMSe ) + Max( CS,MLU ) ) ) + ( MUR / CS ) )", "obj1": 0.9641434262948207, "obj2": 0.0176157587390976}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( Min( ( PN - AMS ) ,PN ) / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RCSe / MUR ) - RMSe ) / ( RRSe + ( MUR / MUR ) ) ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.749003984063745, "obj2": 0.1891647141313344}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( MRS,MRS ) ,AMS ) ,MDR ),FirstVNF_CPU ) )", "choosing": "Min( ( CS * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.7589641434262948, "obj2": 0.17971922696083267}, {"determining": "Min( ( ( Max( FirstVNF_RAM_Server,PN ) / FirstVNF_Mem ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,( ( Max( Const,BR ) * ( Min( BR ,PN ) + Const ) ) + ( FirstVNF_CPU * CRS ) ) ) ) ) )", "choosing": "Min( ( CS / RRSe ) ,( MUM + ( DS / Min( RRSe ,Max( ( MUR - Min( MUC ,RMSe ) ),CS ) ) ) ) )", "obj1": 0.27091633466135456, "obj2": 0.5999702145028862}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.749003984063745, "obj2": 0.1891647141313344}, {"determining": "Min( ( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,Min( ( MDR / Max( Max( ( Min( ( DDR + MDR ) ,MDR ) / FirstVNF_RAM_Server ),MDR ),FirstVNF_Mem_Server ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - MUR ) * RMSe ) - Max( Min( ( CS * ( CS * RMSe ) ) ,( Max( ( CS + Min( ( MUM / MUM ) ,RCSe ) ),( ( ( MUC - DS ) * RMSe ) * DS ) ) + DS ) ),Min( DS ,MUC ) ) )", "obj1": 0.9282868525896414, "obj2": 0.048078887257251346}, {"determining": "Min( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,( ( Max( Const,BR ) * PN ) / ( FirstVNF_CPU * AMS ) ) ) ) ) )", "choosing": "Min( DS ,( RCSe - ( CS + CS ) ) )", "obj1": 0.7450199203187251, "obj2": 0.19592982375368329}, {"determining": "( ( ( Const + PN ) - Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( RRS + FirstVNF_CPU ) ) ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "( DS + Min( RMSe ,MUM ) )", "obj1": 0.9442231075697212, "obj2": 0.037105729263978586}, {"determining": "( ( ( ( Min( Min( ARS ,( AMS / ( CRS / Const ) ) ) ,FirstVNF_Mem ) - MRS ) - ACS ) / FirstVNF_CPU_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( ( CS + Min( MUM ,DS ) ) * Min( ( RRSe - CS ) ,MLU ) ) - ( ( ( CS - Max( MUR,MLU ) ) * RRSe ) / ( MLU - MUR ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5845814126194544}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( MUR,( RRSe - MUM ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( ( ( Min( FirstVNF_Mem_Server ,( Const * ( CRS * MDR ) ) ) + FirstVNF_Mem ) + CRS ) - FirstVNF_CPU ) )", "choosing": "( Max( Min( Max( ( MUM + MLU ),( RRSe - MUM ) ) ,MLU ),MUC ) + Min( ( MLU + ( MUM * ( MUR * ( MUC / MUC ) ) ) ) ,MUM ) )", "obj1": 0.9800796812749004, "obj2": 0.010212279085152081}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( PN - FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ),MRS ) / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "( ( ( MLU * DS ) + ( RMSe / RRSe ) ) + Min( RMSe ,( ( RCSe - CS ) / MUR ) ) )", "obj1": 0.9741035856573705, "obj2": 0.012523815853570893}, {"determining": "( ( ( PN - ( Max( MRS,( AMS - Const ) ) - PN ) ) * Min( FirstVNF_Mem_Server ,AMS ) ) + ( ( Const + PN ) - FirstVNF_CPU ) )", "choosing": "Min( ( CS * RRSe ) ,( RCSe - ( CS + RCSe ) ) )", "obj1": 0.9860557768924303, "obj2": 0.005435466201564315}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) - ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( ( Min( ACS ,RRS ) + CRS ) - ( Max( RRS,FirstVNF_Mem ) * MRS ) ) - ( ( DDR - FirstVNF_CPU_Server ) - Const ) ) * Max( MRS,Min( MDR ,BR ) ) ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) + DS ) - RRSe ) + RRSe ) + ( MUR / CS ) )", "obj1": 0.9721115537848606, "obj2": 0.01398593189148574}, {"determining": "( ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + CRS ) ) - ( ( DDR - ARS ) - Const ) ) * FirstVNF_RAM ) ) ) + ( ( Const + PN ) - FirstVNF_CPU ) )", "choosing": "( Min( CS ,RRSe ) + ( ( RCSe - ( CS + CS ) ) / CS ) )", "obj1": 0.9661354581673307, "obj2": 0.016793420670449522}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) - ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + CRS ) ) - ( ( DDR - ARS ) - Const ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.9760956175298805, "obj2": 0.010541038649873796}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / ( DDR - ( ( ( ARS + FirstVNF_Mem ) / ( ( DDR / FirstVNF_RAM ) + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( ( CS - Min( Max( ( ( RRSe / ( MUM + MUC ) ) - RRSe ),CS ) ,DS ) ) ,( RCSe - ( ( Min( ( RCSe * RMSe ) ,RCSe ) + RMSe ) + RCSe ) ) )", "obj1": 0.27091633466135456, "obj2": 0.5999702145028862}, {"determining": "Min( ( Const / ( DDR * FirstVNF_RAM ) ) ,Min( Min( ( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ) * MDR ) ,CRS ) ,PN ) )", "choosing": "( ( ( RMSe - RCSe ) * RMSe ) - Max( ( Max( MUR,( RRSe - ( RCSe * MLU ) ) ) + CS ),Min( DS ,MUC ) ) )", "obj1": 0.9262948207171314, "obj2": 0.04994674821186099}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + Min( AMS ,FirstVNF_CPU ) ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( RMSe + ( MUC / MUR ) )", "obj1": 0.9840637450199203, "obj2": 0.006593007940497348}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.9681274900398407, "obj2": 0.015245756773315421}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) ) + ( ( Min( PN ,( FirstVNF_RAM_Server + PN ) ) - FirstVNF_CPU_Server ) + BR ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.9960159362549801, "obj2": 0.0012240655236769433}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Min( Min( Max( BR,ACS ) ,FirstVNF_RAM_Server ) ,MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( ( DS * ( Max( ( RRSe * MUM ),( RRSe + ( Max( MUM,DS ) + MUM ) ) ) - Max( ( MLU + MUR ),Min( DS ,MUC ) ) ) ) * CS ) / ( ( ( MUM / CS ) * CS ) * Min( RCSe ,MLU ) ) )", "obj1": 0.9382470119521913, "obj2": 0.04438001410121084}, {"determining": "( ( PN - ( Max( MRS,( AMS - Const ) ) - PN ) ) * Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "( ( MLU * DS ) + Min( ( MLU * MUR ) ,( MUR * ( DS * RRSe ) ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0022426794969084766}, {"determining": "( ( ( PN - ( Max( MRS,( AMS - Const ) ) - PN ) ) * Min( FirstVNF_Mem_Server ,AMS ) ) + ( ( Const + PN ) - FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( MLU * DS ) + Min( ( MLU * MUR ) ,( MUR * ( DS * RRSe ) ) ) ) ) + ( MUR / CS ) )", "obj1": 0.9920318725099602, "obj2": 0.0026048518960587567}, {"determining": "Min( ( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + AMS ) ) ) ,Max( Min( Min( Max( Min( FirstVNF_RAM_Server ,( BR + Max( DDR,DDR ) ) ),MDR ) ,CRS ) ,PN ),RRS ) )", "choosing": "( ( RMSe - MUC ) + Min( RMSe ,Max( ( MLU - MUR ),( DS - MUM ) ) ) )", "obj1": 0.9701195219123506, "obj2": 0.015133177959434958}, {"determining": "( ( ( Max( ARS,DDR ) - FirstVNF_RAM_Server ) / Min( MDR ,MDR ) ) - Const )", "choosing": "( ( MLU + Min( RMSe ,RCSe ) ) - ( ( ( MUM * DS ) / ( RRSe + Min( MUC ,DS ) ) ) * MLU ) )", "obj1": 0.9900398406374502, "obj2": 0.003585170042550125}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + Min( AMS ,FirstVNF_CPU ) ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( RMSe + ( MUC / MUR ) )", "obj1": 0.9840637450199203, "obj2": 0.006593007940497348}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) - ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( ( Min( ACS ,RRS ) + CRS ) - ( Max( RRS,FirstVNF_Mem ) * MRS ) ) - ( ( DDR - FirstVNF_CPU_Server ) - Const ) ) * Max( MRS,Min( MDR ,BR ) ) ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) + DS ) - RRSe ) + RRSe ) + ( MUR / CS ) )", "obj1": 0.9780876494023905, "obj2": 0.010279946742861095}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) )", "obj1": 0.9880478087649402, "obj2": 0.003765047324444275}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),Min( BR ,RRS ) ) ,MRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( ( DS * ( Max( ( MUM * MUM ),( RRSe + ( Max( MUM,DS ) + MUM ) ) ) - Max( ( MLU + MUR ),Min( ( ( RCSe * MLU ) * RCSe ) ,MUC ) ) ) ) * CS ) / ( ( ( MUM / CS ) * CS ) * Min( RCSe ,MLU ) ) )", "obj1": 0.9382470119521913, "obj2": 0.04438001410121084}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ) ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RCSe / RMSe ) + ( RMSe + Max( Min( ( Min( RMSe ,MUM ) * RRSe ) ,( RCSe - ( CS + CS ) ) ),DS ) ) )", "obj1": 0.9402390438247012, "obj2": 0.042979066954049835}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,( PN + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) + BR ) )", "choosing": "( ( ( ( MLU / ( ( ( MUR + CS ) - ( MUR - RMSe ) ) * MLU ) ) / ( MUC / ( CS * ( MLU + ( ( MUM * MUC ) * ( CS * MUR ) ) ) ) ) ) / Min( MUC ,RRSe ) ) / Min( RCSe ,( ( MUC * MUC ) / ( Max( ( Max( MLU,Min( MUM ,DS ) ) - RRSe ),Min( RRSe ,MLU ) ) - MUM ) ) ) )", "obj1": 0.99800796812749, "obj2": 0.0006736961374702142}], "8": [{"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,Max( MDR,CRS ) ) - FirstVNF_Mem ) + CRS ) - FirstVNF_CPU ) + ( FirstVNF_RAM - ACS ) )", "choosing": "( Max( Min( MLU ,Max( MUR,( RRSe - MUM ) ) ),MUC ) + Max( RRSe,Max( ( ( ( CS * ( Max( MLU,RCSe ) / RMSe ) ) * Min( RMSe ,( RMSe + DS ) ) ) / Min( RRSe ,RCSe ) ),Min( RCSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ARS / FirstVNF_CPU ) + PN ) / FirstVNF_RAM_Server ) + ( DDR + FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - ( Max( MRS,CRS ) - FirstVNF_Mem ) ) - ( Const / MRS ) ) )", "choosing": "( ( CS / ( Max( ( MUC + RMSe ),MLU ) + ( ( MUC + RRSe ) + RCSe ) ) ) / ( ( Max( RMSe,MLU ) - MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Max( ( BR / FirstVNF_CPU ),MRS ) ) / ( ARS * PN ) )", "choosing": "( Min( RRSe ,( ( ( Max( ( RRSe / Min( RMSe ,CS ) ),MUR ) / MUM ) / DS ) * ( RMSe / ( ( ( DS / Min( RRSe ,RRSe ) ) + Max( MLU,CS ) ) + Min( MUC ,( RMSe + ( CS * RRSe ) ) ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.6733067729083665, "obj2": 0.259635600201141}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.35516773110503475}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Max( MDR,ACS ) ) ) ,AMS ) ,PN ),FirstVNF_CPU ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( ( ( RMSe + RMSe ) * RRSe ) + DS ) ) )", "obj1": 0.7191235059760956, "obj2": 0.20962715456602107}, {"determining": "( ( ( ACS + ( ( ( Min( Max( DDR,ACS ) ,FirstVNF_Mem ) + Max( MRS,( DDR + FirstVNF_CPU_Server ) ) ) * MDR ) + ( FirstVNF_CPU_Server - PN ) ) ) + BR ) - ( PN / FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( CS ,Min( Max( MLU,( Min( CS ,( MLU - MUR ) ) / Max( MLU,DS ) ) ) ,( RCSe * ( MUC / MLU ) ) ) ) ) - Max( ( MLU + CS ),Min( DS ,RCSe ) ) )", "obj1": 0.6055776892430279, "obj2": 0.2675831356670546}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( PN / ( DDR * ( FirstVNF_Mem + Max( ACS,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - FirstVNF_CPU ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( Min( MUR ,MUM ) - Max( RRSe,( ( RRSe / RRSe ) / ( MUM + CS ) ) ) ) ) ) ,( RMSe - ( CS - CS ) ) ) )", "obj1": 0.549800796812749, "obj2": 0.3226771948152346}, {"determining": "Min( Min( FirstVNF_CPU ,ACS ) ,( ( ( ( Const - ( Min( ACS ,FirstVNF_CPU_Server ) + ( RRS + ARS ) ) ) - ( Const / ( DDR / ACS ) ) ) * FirstVNF_Mem_Server ) + CRS ) )", "choosing": "Min( ( ( ( MUC + Max( MLU,RCSe ) ) - MLU ) - RRSe ) ,( Min( ( CS - RMSe ) ,DS ) - ( ( MUC + ( Max( ( MUR + MUM ),( ( MLU / CS ) * MLU ) ) / Max( ( Max( RRSe,MUR ) + RCSe ),Max( ( DS - DS ),( MUR - MUC ) ) ) ) ) + CS ) ) )", "obj1": 0.7211155378486056, "obj2": 0.17658845486204966}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) ) ,( ACS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU - MUR ) * ( ( ( ( MUM - MUC ) - Min( RMSe ,MUR ) ) / ( RRSe * ( MUR / RCSe ) ) ) / DS ) ) - CS )", "obj1": 0.6354581673306773, "obj2": 0.2646564918630598}, {"determining": "( ( Max( ( Max( Const,BR ) * CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,( Min( FirstVNF_RAM_Server ,RRS ) * ( ARS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( Min( ( RRSe + ( Max( ( MUC * MUR ),DS ) - DS ) ) ,( CS - MUM ) ) / MUC ) ,( Max( RRSe,RRSe ) / RMSe ) ) / ( RRSe * ( MUR / MUM ) ) )", "obj1": 0.4203187250996016, "obj2": 0.48634405109167755}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RCSe / RMSe ) + Min( Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.7609561752988048, "obj2": 0.17620549920601672}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_CPU_Server + ARS ) ,Max( AMS,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( ( ( ARS + FirstVNF_Mem ) / ( ( DDR / FirstVNF_RAM ) + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( RCSe * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.48804780876494025, "obj2": 0.39647130010122034}, {"determining": "( ( ( ( BR / ( FirstVNF_Mem / Min( FirstVNF_Mem ,Max( ( Const * ARS ),Min( ACS ,MDR ) ) ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( ACS / ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem ,Min( CRS ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - ( MRS * AMS ) ) )", "choosing": "( Max( ( MLU / MUM ),Max( RMSe,( RMSe + RMSe ) ) ) + ( MUR / Max( ( ( ( ( CS + ( CS - MUM ) ) + MUR ) + DS ) - DS ),( Min( ( RCSe + RCSe ) ,MLU ) / RCSe ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.3137394800069238}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( PN,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.8187250996015937, "obj2": 0.10737731097100921}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2410358565737052, "obj2": 0.6745024822405431}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,( PN + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) + BR ) )", "choosing": "( ( ( ( MLU / ( ( ( MUR + CS ) - ( MUR - RMSe ) ) * MLU ) ) / ( MUC / ( CS * ( MLU + ( ( MUM * MUC ) * ( CS * MUR ) ) ) ) ) ) / Min( MUC ,RRSe ) ) / Min( RCSe ,( ( MUC * MUC ) / ( Max( ( Max( MLU,Min( MUM ,DS ) ) - RRSe ),Min( RRSe ,MLU ) ) - MUM ) ) ) )", "obj1": 0.4342629482071713, "obj2": 0.4543310693264458}, {"determining": "( ( ( ( RRS / Min( ( FirstVNF_RAM - FirstVNF_CPU_Server ) ,Min( MDR ,FirstVNF_CPU ) ) ) * AMS ) + BR ) - ( ACS - CRS ) )", "choosing": "( ( RCSe + ( ( RMSe / RCSe ) * ( ( Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) - RCSe ) / ( RCSe - CS ) ) ) ) + ( ( ( ( CS + ( RMSe + RMSe ) ) - ( MUR * RCSe ) ) * Min( Max( ( ( MUR - ( MUM / CS ) ) + RMSe ),( MUR / ( RMSe / Max( MUM,MUM ) ) ) ) ,MLU ) ) - Max( RMSe,RRSe ) ) )", "obj1": 0.4820717131474104, "obj2": 0.4337134228630806}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS - PN ) * ( FirstVNF_CPU - ( AMS / FirstVNF_RAM ) ) ) ) ) + AMS ) )", "choosing": "Min( ( RCSe * Max( ( MUC / DS ),Min( ( DS + MUC ) ,Min( Min( ( MUC / Max( MUC,RRSe ) ) ,RRSe ) ,MLU ) ) ) ) ,( MLU / MUR ) )", "obj1": 0.8027888446215139, "obj2": 0.13138857985764454}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU ) - ( PN - ( ( AMS - BR ) - Const ) ) )", "choosing": "( Min( Min( Min( ( RRSe + ( Max( Min( DS ,MUM ),Min( CS ,MUC ) ) / ( MUR + Min( DS ,MLU ) ) ) ) ,( RRSe - Min( MLU ,Min( ( CS - DS ) ,CS ) ) ) ) ,( Max( CS,( ( RRSe - RRSe ) + DS ) ) - MLU ) ) ,MUR ) / ( MUM + MUC ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( ( ( BR / ( FirstVNF_Mem / Min( FirstVNF_Mem ,Max( ( Const * ARS ),Min( ACS ,MDR ) ) ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( ACS / ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem ,Min( CRS ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - ( MRS * AMS ) ) )", "choosing": "( Max( ( MLU / MUM ),Max( RMSe,( RMSe + RMSe ) ) ) + ( MUR / Max( ( ( ( ( CS + ( CS - MUM ) ) + MUR ) + DS ) - DS ),( Min( ( RCSe + RCSe ) ,MLU ) / RCSe ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.3137394800069238}, {"determining": "Min( Min( CRS ,FirstVNF_RAM ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe / Max( ( DS - ( Max( Min( ( RCSe / RMSe ) ,Max( RCSe,CS ) ),RRSe ) * MLU ) ),( CS + Max( Min( RRSe ,CS ),CS ) ) ) ) )", "obj1": 0.7749003984063745, "obj2": 0.1670599424325608}, {"determining": "Min( ( ( ( Const * FirstVNF_CPU_Server ) - ( MDR / Min( Max( ( RRS / FirstVNF_RAM_Server ),Min( Min( DDR ,RRS ) ,( RRS + FirstVNF_CPU ) ) ) ,Min( DDR ,MRS ) ) ) ) + Max( ( FirstVNF_Mem / Const ),( Const - FirstVNF_CPU_Server ) ) ) ,Max( ( ( Const / FirstVNF_Mem ) / ( DDR - MRS ) ),Min( MDR ,RRS ) ) )", "choosing": "( ( MUC / ( CS * Min( RRSe ,DS ) ) ) / ( ( ( MUC / CS ) * CS ) * ( RCSe + MLU ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7243845240225646}, {"determining": "( ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RRSe ,Min( ( MUR - ( RMSe + MUR ) ) ,MUM ) ) - ( MUR / DS ) ) / ( RRSe * ( MUR / MUM ) ) )", "obj1": 0.42231075697211157, "obj2": 0.46785436290567767}, {"determining": "( ( FirstVNF_Mem + ( ( BR - Max( AMS,MRS ) ) / ( ( AMS / Min( BR ,ACS ) ) + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( Min( RCSe ,MUC ) / ( RRSe * ( DS / MUR ) ) )", "obj1": 0.15139442231075698, "obj2": 0.7589157922190635}, {"determining": "Min( ( ( ( FirstVNF_RAM - Max( MDR,ARS ) ) * FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * Max( Const,FirstVNF_CPU_Server ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( CS + MUR ) ) * Max( Min( MUR ,MLU ),( ( MLU / MUM ) / DS ) ) ) - CS )", "obj1": 0.4860557768924303, "obj2": 0.3967064246946188}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( BR / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "( ( ( MLU * DS ) - ( MUR / Max( Min( RMSe ,CS ),( MUM + ( RCSe / DS ) ) ) ) ) / ( RRSe * ( MUR / MUM ) ) )", "obj1": 0.8804780876494024, "obj2": 0.06947581851448217}, {"determining": "( ( FirstVNF_CPU + BR ) + ( FirstVNF_Mem + Min( ( ( ( Const * MRS ) + FirstVNF_CPU ) - RRS ) ,( ACS - ( FirstVNF_Mem + ( Const + PN ) ) ) ) ) )", "choosing": "( ( RRSe * Min( ( Min( Max( Max( Max( CS,RCSe ),( RMSe + RCSe ) ),( MUR + MLU ) ) ,MLU ) + Min( MUC ,CS ) ) ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.24701195219123506, "obj2": 0.6549086828710773}, {"determining": "( ( FirstVNF_Mem + ( Const + PN ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.34860557768924305, "obj2": 0.5289705336347388}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) + ( FirstVNF_RAM_Server + ARS ) ) * ( ( Min( FirstVNF_CPU_Server ,DDR ) * ARS ) + FirstVNF_Mem ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "( ( MUC / MUR ) + ( ( RCSe - RCSe ) + RMSe ) )", "obj1": 0.23107569721115537, "obj2": 0.6944709406909826}, {"determining": "( Min( MDR ,RRS ) * Min( Max( MRS,BR ) ,( FirstVNF_CPU_Server / ARS ) ) )", "choosing": "Max( ( MUC / DS ),Min( ( MUM + ( ( Min( RRSe ,MLU ) - ( ( DS / ( RMSe * RMSe ) ) + MUR ) ) + ( DS * MLU ) ) ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.14143426294820718, "obj2": 0.7737416410759536}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,RRS ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,MLU ) ) )", "obj1": 0.30876494023904383, "obj2": 0.5713075495296877}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( Max( RRSe,DS ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / ( RCSe + DS ) )", "obj1": 0.4581673306772908, "obj2": 0.4478844536253508}, {"determining": "( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ) + ( DDR + BR ) )", "choosing": "( MUC / Min( Max( ( RMSe + CS ),( RRSe * CS ) ) ,DS ) )", "obj1": 0.17330677290836655, "obj2": 0.7453323409816623}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "( Max( DS,( MUM / MUC ) ) * Min( ( Max( ( MUC * Max( ( ( MUC / MUR ) + ( MLU / DS ) ),( MLU - MUR ) ) ),CS ) + MUC ) ,Min( Min( MUM ,DS ) ,Min( RRSe ,( MUC / DS ) ) ) ) )", "obj1": 0.9103585657370518, "obj2": 0.04683500481709355}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,Min( ( ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( ( MRS / FirstVNF_Mem ) / ( MDR / PN ) ) ) ) * CRS ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( CS,( Min( RRSe ,MUM ) * DS ) ) ,MUM ) - Max( ( CS + MLU ),Min( CS ,MLU ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5787261828048798}, {"determining": "( ( FirstVNF_CPU_Server + Const ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( Max( CRS,Min( RRS ,DDR ) ) / PN ) * ( FirstVNF_RAM - ( RRS / ( FirstVNF_RAM_Server + BR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * RRSe ) ,( ( MUR * RRSe ) - Min( CS ,Max( MUM,RMSe ) ) ) )", "obj1": 0.8067729083665338, "obj2": 0.10958087500993277}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( Max( MRS,( AMS - Const ) ) - PN ) ) ) ) + Min( ( FirstVNF_Mem * MDR ) ,( AMS + Min( FirstVNF_RAM_Server ,ACS ) ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,( RCSe * Min( MUM ,RCSe ) ) )", "obj1": 0.8665338645418327, "obj2": 0.07550631093323992}, {"determining": "( Min( ( ARS * ( ACS * ( Max( ( MDR * ( MDR - FirstVNF_RAM ) ),MRS ) + ( ( FirstVNF_Mem - Const ) * ACS ) ) ) ) ,RRS ) * Max( BR,Const ) )", "choosing": "Max( ( MUC / DS ),Min( ( CS / Min( ( RCSe * MUC ) ,CS ) ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7880039079504338}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * Min( MUC ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.7043200766396477}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( BR / Max( FirstVNF_CPU,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( RCSe * Max( ( ( Max( Min( ( RCSe / RMSe ) ,Max( RCSe,CS ) ),RRSe ) * MLU ) / DS ),Min( ( DS + MUC ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.7848605577689243, "obj2": 0.1500022105371215}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU + CRS ) / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,FirstVNF_RAM_Server ) ) ) ) ) ) + ( FirstVNF_RAM / MRS ) ) )", "choosing": "Min( ( RCSe * MUM ) ,( RRSe - RCSe ) )", "obj1": 0.7868525896414342, "obj2": 0.14215412423252585}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - RRS ) ) ) ) + AMS ) )", "choosing": "Min( ( ( Min( MUC ,MUC ) + ( RMSe - ( CS + CS ) ) ) * MUM ) ,( MLU - MUR ) )", "obj1": 0.8924302788844621, "obj2": 0.05644476732760126}, {"determining": "( ( FirstVNF_Mem + Min( ( ( ( ARS / PN ) * ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) - FirstVNF_CPU ) ,( ACS + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( ( MLU + CS ) * Min( MUC ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.17131474103585656, "obj2": 0.7576578395629177}, {"determining": "Min( ( FirstVNF_CPU * PN ) ,Max( Max( FirstVNF_Mem,AMS ),( ( ( ( MRS / FirstVNF_RAM_Server ) + Min( ACS ,ARS ) ) - ARS ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( ( ( ( ( ( MUC * RMSe ) / CS ) * CS ) + ( ( Max( ( DS + MUR ),Min( RCSe ,MUR ) ) * MUR ) + MUC ) ) / CS ) * MUC ) ,( CS - Max( CS,( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) ) )", "obj1": 0.3645418326693227, "obj2": 0.5196378375459549}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( RRS + FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / ( DDR - ( ( ( ARS + FirstVNF_Mem ) / ( ( DDR / FirstVNF_RAM ) + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( ( CS - Min( Max( ( ( RRSe / ( MUM + MUC ) ) - RRSe ),CS ) ,DS ) ) ,( ( ( ( MLU - MUR ) * RMSe ) - Max( ( MUR + CS ),Min( DS ,MLU ) ) ) - ( ( Min( ( RCSe * RMSe ) ,RCSe ) + RMSe ) + RCSe ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6090516733343485}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.7110846624789791}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.8466135458167331, "obj2": 0.07720733500877655}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( ( PN - AMS ),RRS ) ) ,Min( ( CRS * ( Min( Min( Max( ( FirstVNF_Mem + MRS ),MDR ) ,CRS ) ,PN ) * ( ( ARS / PN ) * ( ( ARS * AMS ) / ( MDR / PN ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUC * Max( Min( MUC ,RRSe ),Max( CS,( Min( RRSe ,CS ) + ( Min( RRSe ,RCSe ) + Max( MUC,CS ) ) ) ) ) ),Min( DS ,MLU ) ) - ( ( MLU - MUR ) * Min( RCSe ,DS ) ) )", "obj1": 0.25697211155378485, "obj2": 0.6277555061356808}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ( FirstVNF_CPU_Server + ARS ) + Max( AMS,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Const * ARS ) ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUC * MUC ) / CS ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( Max( MUR,MUR ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.3426294820717131, "obj2": 0.5415986272114109}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * Min( MUC ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.19322709163346613, "obj2": 0.7176358733099337}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5658906219050573}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ),MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( Min( RMSe ,MUM ) * RRSe ) ,MUC ) + ( MUC / MUR ) )", "obj1": 0.9342629482071713, "obj2": 0.04583533245693566}, {"determining": "Min( Max( CRS,MRS ) ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) - ( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - RMSe ) * RMSe ) - Max( ( MUR + ( MLU / ( Min( MUM ,( RRSe - MUC ) ) * DS ) ) ),Min( DS ,MLU ) ) )", "obj1": 0.250996015936255, "obj2": 0.6414461930023828}, {"determining": "( ( FirstVNF_Mem + Min( FirstVNF_CPU ,( ACS + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * Min( MUR ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.22111553784860558, "obj2": 0.698243246266789}, {"determining": "( ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / FirstVNF_RAM_Server ) + ( BR / Max( FirstVNF_RAM,( FirstVNF_Mem + Const ) ) ) ) ) ) + Max( Const,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( MUR + DS ) + Min( CS ,( ( ( RRSe + RRSe ) - RMSe ) / ( MLU * DS ) ) ) )", "obj1": 0.896414342629482, "obj2": 0.05018595979812172}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( FirstVNF_Mem + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) + ( FirstVNF_CPU + ( FirstVNF_RAM - ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( FirstVNF_Mem - PN ) ) ) ) )", "choosing": "Min( ( MUC - CS ) ,( DS - ( CS + ( ( MUR + DS ) + ( RRSe + ( CS / Max( DS,MUM ) ) ) ) ) ) )", "obj1": 0.3745019920318725, "obj2": 0.5072375377003008}, {"determining": "( ( MRS * BR ) + Max( MRS,BR ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe - ( Min( CS ,Min( ( RCSe - ( DS - ( MUR + MUC ) ) ) ,MUR ) ) - MUR ) ) )", "obj1": 0.37649402390438247, "obj2": 0.4968801628585156}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( Const,BR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( MLU - MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08619867141469234}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( ( MRS + RRS ) ,( CRS / DDR ) ),( Min( FirstVNF_Mem ,Max( PN,CRS ) ) + ( Const - AMS ) ) ) )", "choosing": "Min( Min( ( Max( CS,( MUC * ( Min( MUC ,( CS + MUR ) ) - CS ) ) ) + MUC ) ,( ( RCSe - DS ) / Min( ( MUC / ( CS / Min( RRSe ,DS ) ) ) ,RRSe ) ) ) ,( RCSe - ( CS + RCSe ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5954798281563578}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) )", "obj1": 0.952191235059761, "obj2": 0.030266545859422588}, {"determining": "( Max( ( ARS * ( Min( ARS ,FirstVNF_RAM_Server ) * ( Max( ( MDR * ( FirstVNF_RAM - FirstVNF_RAM ) ),MRS ) + ( MRS / FirstVNF_CPU ) ) ) ),RRS ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUC / DS ),( Min( Min( RMSe ,MUM ) ,RCSe ) - CS ) )", "obj1": 0.13545816733067728, "obj2": 0.78446544779515}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( DDR + FirstVNF_Mem ) ) ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) ) ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,( RCSe - ( CS + ( MUR / MUR ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.5177093301227244}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( ( ( ARS / PN ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "Min( ( ( ( MUM + Max( Min( RCSe ,MUC ),DS ) ) * ( MUC * MUR ) ) * MUM ) ,( MLU - MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08619867141469234}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),CRS ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( MLU + CS ),( Max( MUR,RCSe ) * ( MUR - ( RMSe + MUR ) ) ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( RRSe - MUM ) - Max( ( MLU + CS ),( Max( MUR,RCSe ) * RRSe ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6338142097957993}, {"determining": "( ( AMS * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) / ( Const / FirstVNF_RAM ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( Min( ( DS / ( ( MUR / MUR ) / Max( RCSe,RCSe ) ) ) ,RCSe ) * RCSe ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.3386454183266932, "obj2": 0.5494717448376011}, {"determining": "( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - BR ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Min( ( ( AMS * AMS ) + BR ) ,FirstVNF_Mem_Server ) ) ) ) + ( ACS * BR ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( ( Min( MUM ,( RMSe - ( RMSe / MLU ) ) ) / MUM ) / MUM ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6003092773078749}, {"determining": "Min( ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( Max( PN,ARS ) + FirstVNF_RAM_Server ) ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Min( Const ,( FirstVNF_RAM_Server - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( MUM / MUC ),Max( RRSe,Min( RRSe ,( DS / MUC ) ) ) ) ,( RMSe - ( DS * MUC ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,( PN + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) + BR ) )", "choosing": "( ( ( ( MLU / ( ( ( MUR + CS ) - ( MUR - RMSe ) ) * MLU ) ) / ( MUC / ( CS * ( MLU + ( ( MUM * MUC ) * ( CS * MUR ) ) ) ) ) ) / Min( MUC ,RRSe ) ) / Min( RCSe ,( ( MUC * MUC ) / ( Max( ( Max( MLU,Min( MUM ,DS ) ) - RRSe ),Min( RRSe ,MLU ) ) - MUM ) ) ) )", "obj1": 0.4760956175298805, "obj2": 0.43966045654390157}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * AMS ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5854684200882512}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( CRS * ( BR * ( ( FirstVNF_CPU - ( RRS / ( ARS - ACS ) ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( MLU - Min( ( ( Min( CS ,RRSe ) * Max( ( Min( RCSe ,CS ) / Max( MUR,MUC ) ),MUR ) ) - RRSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.8426294820717132, "obj2": 0.08498949578095476}, {"determining": "( ( AMS * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) / ( Const / FirstVNF_RAM ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( Min( ( DS / ( ( MUR / MUR ) / Max( RCSe,RCSe ) ) ) ,RCSe ) * RCSe ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.3386454183266932, "obj2": 0.5494717448376011}, {"determining": "( ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( Const + PN ) ) ) + ( ( Const + PN ) - FirstVNF_CPU ) )", "choosing": "( Min( CS ,RRSe ) + ( ( ( ( RCSe - CS ) / MUR ) - ( CS + CS ) ) / CS ) )", "obj1": 0.9641434262948207, "obj2": 0.016640449414190385}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( AMS * ( ( ARS - FirstVNF_CPU ) + ( Max( MRS,( ( FirstVNF_CPU_Server * AMS ) + FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem - DDR ) ) ) ) )", "choosing": "( Max( DS,( MUM / MUC ) ) * Min( ( Max( ( MUC * Max( ( ( MUC / MUR ) + ( MLU - MUR ) ),( MLU - MUR ) ) ),CS ) + MUC ) ,Min( Min( MUM ,DS ) ,Min( RRSe ,( MUC / DS ) ) ) ) )", "obj1": 0.46613545816733065, "obj2": 0.443398391585425}, {"determining": "( ( ( Const + PN ) - Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( RRS + FirstVNF_CPU ) ) ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "( DS + Min( RMSe ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.036332082897153936}, {"determining": "Min( ( ( Max( FirstVNF_RAM_Server,PN ) / FirstVNF_Mem ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,( ( Max( Const,BR ) * ( Min( BR ,PN ) + Const ) ) + ( FirstVNF_CPU * CRS ) ) ) ) ) )", "choosing": "Min( ( CS / RRSe ) ,( MUM + ( DS / Min( RRSe ,Max( ( MUR - Min( MUC ,RMSe ) ),CS ) ) ) ) )", "obj1": 0.27091633466135456, "obj2": 0.5999702145028862}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ) ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RCSe / RMSe ) + ( RMSe + Max( Min( ( Min( RMSe ,MUM ) * RRSe ) ,( RCSe - ( CS + CS ) ) ),DS ) ) )", "obj1": 0.9402390438247012, "obj2": 0.042979066954049835}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( AMS * ( ( ARS - FirstVNF_CPU ) + ( Max( MRS,( ( FirstVNF_CPU_Server * AMS ) + ( Max( PN,ARS ) + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem - DDR ) ) ) ) )", "choosing": "( Max( DS,( MUM / MUC ) ) * Min( ( Max( ( MUC * Max( ( ( MUC / MUR ) + ( MLU / DS ) ),( MLU - MUR ) ) ),CS ) + MUC ) ,Min( Min( MUM ,DS ) ,Min( RRSe ,( MUC / DS ) ) ) ) )", "obj1": 0.46613545816733065, "obj2": 0.443398391585425}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( FirstVNF_CPU_Server ,ACS ) + MRS ) ) - ( FirstVNF_RAM + AMS ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MUC / ( ( RCSe + RRSe ) / RCSe ) ),( Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) - ( CS / Min( ( RCSe * MUC ) ,CS ) ) ) )", "obj1": 0.9482071713147411, "obj2": 0.03462985249588759}, {"determining": "( ( ( ( Min( Min( ARS ,( AMS / ( CRS / Const ) ) ) ,FirstVNF_Mem ) - MRS ) - ACS ) / FirstVNF_CPU_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( ( CS + Min( MUM ,DS ) ) * Min( ( RRSe - CS ) ,MLU ) ) - ( ( ( CS - Max( MUR,MLU ) ) * RRSe ) / ( MLU - MUR ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5845814126194544}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,( PN + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) + BR ) )", "choosing": "( ( ( ( MLU / ( ( ( MUR + CS ) - ( MUR - RMSe ) ) * MLU ) ) / ( MUC / ( CS * ( MLU + ( ( MUM * MUC ) * ( CS * MUR ) ) ) ) ) ) / Min( MUC ,RRSe ) ) / Min( RCSe ,( ( MUC * MUC ) / ( Max( ( Max( MLU,Min( MUM ,DS ) ) - RRSe ),Min( RRSe ,MLU ) ) - MUM ) ) ) )", "obj1": 0.4760956175298805, "obj2": 0.43966045654390157}, {"determining": "( Min( RRS ,RRS ) + ( ( Const + PN ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MUR - RMSe ) + DS ) - RRSe ) + RRSe ) + ( MUR / CS ) )", "obj1": 0.9462151394422311, "obj2": 0.035701027874669604}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( PN - FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ),MRS ) / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "( ( ( MLU * DS ) + ( RMSe / RRSe ) ) + Min( RMSe ,( ( RCSe - CS ) / MUR ) ) )", "obj1": 0.9741035856573705, "obj2": 0.012337188993576905}, {"determining": "( ( ( PN - ( Max( MRS,( AMS - Const ) ) - PN ) ) * Min( FirstVNF_Mem_Server ,AMS ) ) + ( ( Const + PN ) - FirstVNF_CPU ) )", "choosing": "Min( ( CS * RRSe ) ,( RCSe - ( CS + RCSe ) ) )", "obj1": 0.9860557768924303, "obj2": 0.005435466201564315}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) - ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( ( Min( ACS ,ACS ) + CRS ) - ( ( RRS * FirstVNF_Mem ) * Min( FirstVNF_RAM_Server ,MRS ) ) ) - ( ( DDR - FirstVNF_CPU_Server ) - Const ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Min( RRSe ,( CS / ( RRSe - MUR ) ) ),MUC ) + Min( RMSe ,MUM ) )", "obj1": 0.9800796812749004, "obj2": 0.009264707865540588}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( ( Const + MDR ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( CRS ,Max( Min( Min( ACS ,Const ) ,MRS ),MDR ) ) ,PN ) ) ) )", "choosing": "( ( ( MUC * MUR ) - Min( MUR ,DS ) ) / ( RRSe * ( MUR / MUM ) ) )", "obj1": 0.9820717131474104, "obj2": 0.0074907449409224135}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,( RCSe - ( CS + RCSe ) ) )", "obj1": 0.27091633466135456, "obj2": 0.5999702145028862}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) )", "obj1": 0.9880478087649402, "obj2": 0.003765047324444275}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( Min( CS ,( ( CS - ( MLU * RRSe ) ) + Max( CS,MLU ) ) ) + ( MUR / CS ) )", "obj1": 0.9721115537848606, "obj2": 0.013695763172330679}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) - ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( DDR - ARS ) - ( ( DDR - FirstVNF_CPU_Server ) - Const ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( CS ,( ( CS - ( MLU * RRSe ) ) + Max( CS,MLU ) ) ) + ( RCSe - ( CS + CS ) ) )", "obj1": 0.9701195219123506, "obj2": 0.014167284433182286}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Min( Min( Max( BR,ACS ) ,FirstVNF_RAM_Server ) ,MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( ( DS * ( Max( ( RRSe * MUM ),( RRSe + ( Max( MUM,DS ) + MUM ) ) ) - Max( ( MLU + MUR ),Min( DS ,MUC ) ) ) ) * CS ) / ( ( ( MUM / CS ) * CS ) * Min( RCSe ,MLU ) ) )", "obj1": 0.9382470119521913, "obj2": 0.04438001410121084}, {"determining": "( ( ( Const + PN ) - Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( RRS + FirstVNF_CPU ) ) ) + ( Max( MRS,MRS ) / ( Min( RRS ,RRS ) + ( ( Const + PN ) - FirstVNF_CPU ) ) ) )", "choosing": "( DS + Min( ( MUR - RMSe ) ,MUM ) )", "obj1": 0.9661354581673307, "obj2": 0.015418964931575161}, {"determining": "( ( ( PN - ( Max( MRS,( AMS - Const ) ) - PN ) ) * Min( FirstVNF_Mem_Server ,AMS ) ) + ( ( Const + PN ) - FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( MLU * DS ) + Min( ( MLU * MUR ) ,( MUR * ( DS * RRSe ) ) ) ) ) + ( MUR / CS ) )", "obj1": 0.9920318725099602, "obj2": 0.0026048518960587567}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.9681274900398407, "obj2": 0.015245756773315421}, {"determining": "( ( ( Max( ARS,DDR ) - FirstVNF_RAM_Server ) / Min( MDR ,MDR ) ) - Const )", "choosing": "( ( MLU + Min( RMSe ,RCSe ) ) - ( ( ( MUM * DS ) / ( RRSe + Min( MUC ,DS ) ) ) * MLU ) )", "obj1": 0.9900398406374502, "obj2": 0.003585170042550125}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,RRS ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS + PN ) * ( Min( ARS ,AMS ) / ( MDR / ( MRS - FirstVNF_Mem ) ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe * ( MLU - MUR ) ) - Max( ( MLU + CS ),Min( DS ,( ( ( ( Max( MUC,RCSe ) - ( CS * MUC ) ) + MUR ) + MLU ) * ( ( ( RCSe * CS ) * MUM ) * CS ) ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6003092773078749}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) - ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + CRS ) ) - ( ( DDR - ARS ) - Const ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( CS * CS ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.9760956175298805, "obj2": 0.010541038649873796}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( ( DDR / ARS ) - ARS ) )", "choosing": "( ( RRSe - MUM ) - Max( ( MLU + CS ),( Max( ( DS - Min( MLU ,RMSe ) ),RCSe ) * RRSe ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}], "9": [{"determining": "( ( CRS + Max( ( BR / FirstVNF_CPU ),MRS ) ) / ( ARS * PN ) )", "choosing": "( Min( RRSe ,( ( ( Max( ( RRSe / Min( RMSe ,CS ) ),MUR ) / MUM ) / DS ) * ( RMSe / ( ( ( DS / Min( RRSe ,RRSe ) ) + Max( MLU,CS ) ) + Min( MUC ,( RMSe + ( CS * RRSe ) ) ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / CRS ) + ( BR / Max( Max( FirstVNF_CPU_Server,RRS ),FirstVNF_RAM ) ) ) ) ) + Max( Const,( Const + PN ) ) ) - ( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( MUR + DS ) + Min( CS ,( ( MLU * Min( ( Max( RCSe,MUM ) - MUR ) ,RRSe ) ) / Min( ( ( CS / Min( ( RMSe * MUC ) ,CS ) ) * CS ) ,( MUR * ( DS * RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,Max( MDR,CRS ) ) - FirstVNF_Mem ) + CRS ) - FirstVNF_CPU ) + ( FirstVNF_RAM - ACS ) )", "choosing": "( Max( Min( MLU ,Max( MUR,( RRSe - MUM ) ) ),MUC ) + Max( RRSe,Max( ( ( ( CS * ( Max( MLU,RCSe ) / RMSe ) ) * Min( RMSe ,( RMSe + DS ) ) ) / Min( RRSe ,RCSe ) ),Min( RCSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.35516773110503475}, {"determining": "( ( ( ACS + ( ( ( Min( Max( DDR,ACS ) ,FirstVNF_Mem ) + Max( MRS,( DDR + FirstVNF_CPU_Server ) ) ) * MDR ) + ( FirstVNF_CPU_Server - PN ) ) ) + BR ) - ( PN / FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( CS ,Min( Max( MLU,( Min( CS ,( MLU - MUR ) ) / Max( MLU,DS ) ) ) ,( RCSe * ( MUC / MLU ) ) ) ) ) - Max( ( MLU + CS ),Min( DS ,RCSe ) ) )", "obj1": 0.6055776892430279, "obj2": 0.2675831356670546}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( PN / ( DDR * ( FirstVNF_Mem + Max( ACS,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - FirstVNF_CPU ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( Min( MUR ,MUM ) - Max( RRSe,( ( RRSe / RRSe ) / ( MUM + CS ) ) ) ) ) ) ,( RMSe - ( CS - CS ) ) ) )", "obj1": 0.549800796812749, "obj2": 0.3226771948152346}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ),MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.7151394422310757, "obj2": 0.20300957127230623}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.6733067729083665, "obj2": 0.259635600201141}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) ) ,( ACS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU - MUR ) * ( ( ( ( MUM - MUC ) - Min( RMSe ,MUR ) ) / ( RRSe * ( MUR / RCSe ) ) ) / DS ) ) - CS )", "obj1": 0.6354581673306773, "obj2": 0.2646564918630598}, {"determining": "Min( Min( FirstVNF_CPU ,ACS ) ,( ( ( ( Const - ( Min( ACS ,FirstVNF_CPU_Server ) + ( RRS + ARS ) ) ) - ( Const / ( DDR / ACS ) ) ) * FirstVNF_Mem_Server ) + CRS ) )", "choosing": "Min( ( ( ( MUC + Max( MLU,RCSe ) ) - MLU ) - RRSe ) ,( Min( ( CS - RMSe ) ,DS ) - ( ( MUC + ( Max( ( MUR + MUM ),( ( MLU / CS ) * MLU ) ) / Max( ( Max( RRSe,MUR ) + RCSe ),Max( ( DS - DS ),( MUR - MUC ) ) ) ) ) + CS ) ) )", "obj1": 0.7211155378486056, "obj2": 0.17658845486204966}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1852589641434263, "obj2": 0.6999285962801715}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,( PN + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) + BR ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MUR + CS ),Min( DS ,MLU ) ) )", "obj1": 0.4103585657370518, "obj2": 0.4721957186209126}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( CRS * ( BR * ( ( FirstVNF_CPU - ( RRS / ( ARS - ACS ) ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( MLU - Min( ( ( Min( CS ,RRSe ) * Max( ( Min( RCSe ,CS ) / Max( MUR,MUC ) ),MUR ) ) - RRSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.6932270916334662, "obj2": 0.24331250623386766}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_CPU_Server + ARS ) ,Max( AMS,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( ( ( ARS + FirstVNF_Mem ) / ( ( DDR / FirstVNF_RAM ) + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( RCSe * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.48804780876494025, "obj2": 0.39647130010122034}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + Max( MRS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) + ( ( Max( DDR,Max( ARS,Const ) ) * ( PN * ACS ) ) - PN ) ) + ( ( FirstVNF_CPU / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM * FirstVNF_CPU ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MUM ) * ( RMSe / MUM ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.49865653294254103}, {"determining": "( ( ( ( BR / ( FirstVNF_Mem / Min( FirstVNF_Mem ,Max( ( Const * ARS ),Min( ACS ,MDR ) ) ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( ACS / ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem ,Min( CRS ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - ( MRS * AMS ) ) )", "choosing": "( Max( ( MLU / MUM ),Max( RMSe,( RMSe + RMSe ) ) ) + ( MUR / Max( ( ( ( ( CS + ( CS - MUM ) ) + MUR ) + DS ) - DS ),( Min( ( RCSe + RCSe ) ,MLU ) / RCSe ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.3137394800069238}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU ) - ( PN - ( ( AMS - BR ) - Const ) ) )", "choosing": "( Min( Min( Min( ( RRSe + ( Max( Min( DS ,MUM ),Min( CS ,MUC ) ) / ( MUR + Min( DS ,MLU ) ) ) ) ,( RRSe - Min( MLU ,Min( ( CS - DS ) ,CS ) ) ) ) ,( Max( CS,( ( RRSe - RRSe ) + DS ) ) - MLU ) ) ,MUR ) / ( MUM + MUC ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( PN,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.8187250996015937, "obj2": 0.10737731097100921}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) + BR ) )", "choosing": "( ( ( ( MLU / ( ( ( MUR + CS ) - ( MUR - RMSe ) ) * MLU ) ) / ( MUC / ( CS * ( MLU + ( ( MUM * MUC ) * ( CS * MUR ) ) ) ) ) ) / Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,RRSe ) ) / Min( RCSe ,( ( MUC * MUC ) / ( Max( ( Max( MLU,Min( MUM ,DS ) ) - RRSe ),Min( RRSe ,MLU ) ) - MUM ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4540756593616091}, {"determining": "( ( FirstVNF_Mem + Min( FirstVNF_CPU ,( ACS + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * Min( MUR ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.22111553784860558, "obj2": 0.698243246266789}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( Min( Min( Max( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ),MDR ) ,CRS ) ,PN ),FirstVNF_CPU ) )", "choosing": "( ( RCSe / RMSe ) + Min( Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.7609561752988048, "obj2": 0.17620549920601672}, {"determining": "Min( ( ( ( Const * FirstVNF_CPU_Server ) - ( MDR / Min( Max( ( RRS / FirstVNF_RAM_Server ),Min( Min( DDR ,RRS ) ,( RRS + FirstVNF_CPU ) ) ) ,Min( DDR ,MRS ) ) ) ) + Max( ( FirstVNF_Mem / Const ),( Const - FirstVNF_CPU_Server ) ) ) ,Max( ( ( Const / FirstVNF_Mem ) / ( DDR - MRS ) ),Min( MDR ,RRS ) ) )", "choosing": "( ( MUC / ( CS * Min( RRSe ,DS ) ) ) / ( ( ( MUC / CS ) * CS ) * ( RCSe + MLU ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7243845240225646}, {"determining": "( ( ( ( BR / ( FirstVNF_Mem / Min( FirstVNF_Mem ,Max( ( Const * ARS ),Min( ACS ,MDR ) ) ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( ACS / ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem ,Min( CRS ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - ( MRS * AMS ) ) )", "choosing": "( Max( ( MLU / MUM ),Max( RMSe,( RMSe + RMSe ) ) ) + ( MUR / Max( ( ( ( ( CS + ( CS - MUM ) ) + MUR ) + DS ) - DS ),( Min( ( RCSe + RCSe ) ,MLU ) / RCSe ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.3137394800069238}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) * ( ( FirstVNF_RAM - Max( MDR,ARS ) ) * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * AMS ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - CS )", "obj1": 0.4721115537848606, "obj2": 0.4082506562685497}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( Max( RRSe,DS ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / ( RCSe + DS ) )", "obj1": 0.4581673306772908, "obj2": 0.4478844536253508}, {"determining": "Min( Min( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + Max( ( FirstVNF_RAM + ACS ),ARS ) ) ),Max( MDR,FirstVNF_CPU_Server ) ) ,( ( AMS - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( ( FirstVNF_RAM + PN ),( ( Const - ( Max( Const,BR ) * ( Min( FirstVNF_RAM ,DDR ) / ACS ) ) ) / Max( ARS,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( ( CS * RRSe ) + ( ( ( Max( ( RCSe + CS ),RMSe ) + Min( MUC ,Min( RRSe ,CS ) ) ) - CS ) / DS ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5586796427433535}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( AMS * ( ( ARS - FirstVNF_CPU ) + ( Max( MRS,( ( FirstVNF_CPU_Server * AMS ) + FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem - DDR ) ) ) ) )", "choosing": "( Max( DS,( MUM / MUC ) ) * Min( ( Max( ( MUC * Max( ( ( MUC / MUR ) + ( MLU - MUR ) ),( MLU - MUR ) ) ),CS ) + MUC ) ,Min( Min( MUM ,DS ) ,Min( RRSe ,( MUC / DS ) ) ) ) )", "obj1": 0.46613545816733065, "obj2": 0.443398391585425}, {"determining": "( ( FirstVNF_Mem + ( ( BR - Max( AMS,MRS ) ) / ( ( AMS / Min( BR ,ACS ) ) + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( Min( RCSe ,MUC ) / ( RRSe * ( DS / MUR ) ) )", "obj1": 0.15139442231075698, "obj2": 0.7589157922190635}, {"determining": "( ( FirstVNF_CPU + BR ) + ( FirstVNF_Mem + Min( ( ( ( Const * MRS ) + FirstVNF_CPU ) - RRS ) ,( ACS - ( FirstVNF_Mem + ( Const + PN ) ) ) ) ) )", "choosing": "( ( RRSe * Min( ( Min( Max( Max( Max( CS,RCSe ),( RMSe + RCSe ) ),( MUR + MLU ) ) ,MLU ) + Min( MUC ,CS ) ) ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.24701195219123506, "obj2": 0.6549086828710773}, {"determining": "( FirstVNF_CPU_Server + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( Max( ( MUC / DS ),Min( ( DS + MUC ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.16733067729083664, "obj2": 0.7548852544053032}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS + PN ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) + FirstVNF_CPU ) ) ) ) + AMS ) )", "choosing": "( Min( CS ,( ( CS - ( MLU * RRSe ) ) + Max( CS,MLU ) ) ) + ( MUR / CS ) )", "obj1": 0.9302788844621513, "obj2": 0.03179629375863903}, {"determining": "( Min( MDR ,RRS ) * Min( Max( MRS,BR ) ,( FirstVNF_CPU_Server / ARS ) ) )", "choosing": "Max( ( MUC / DS ),Min( ( MUM + ( ( Min( RRSe ,MLU ) - ( ( DS / ( RMSe * RMSe ) ) + MUR ) ) + ( DS * MLU ) ) ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.14143426294820718, "obj2": 0.7737416410759536}, {"determining": "( ( FirstVNF_Mem + Max( ( ACS / BR ),Max( FirstVNF_RAM_Server,BR ) ) ) + ( ( BR / ( FirstVNF_Mem / ( ( FirstVNF_CPU / RRS ) * FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Max( CS,( MUR + MUM ) ) / ( ( DS / Max( RCSe,( ( RCSe * ( MUC / DS ) ) - Min( CS ,RMSe ) ) ) ) * RRSe ) )", "obj1": 0.17330677290836655, "obj2": 0.7380880723871411}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,Min( ( ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( ( MRS / FirstVNF_Mem ) / ( MDR / PN ) ) ) ) * CRS ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( CS,( Min( RRSe ,MUM ) * DS ) ) ,MUM ) - Max( ( CS + MLU ),Min( CS ,MLU ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5787261828048798}, {"determining": "( Min( MDR ,FirstVNF_RAM_Server ) - ( ( CRS * ( ( FirstVNF_RAM_Server / CRS ) * ( ( ARS / FirstVNF_RAM ) * RRS ) ) ) + AMS ) )", "choosing": "( ( RRSe * ( MUR / MUM ) ) / ( ( MLU * DS ) - Max( MUR,Max( ( ( ( MUM + ( MUR / CS ) ) - MLU ) - MLU ),( MUM + ( RRSe / DS ) ) ) ) ) )", "obj1": 0.8924302788844621, "obj2": 0.05557852266637949}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "( ( CS / ( Max( ( MUC + RMSe ),MLU ) + ( ( MUC + RRSe ) + RCSe ) ) ) / ( ( Max( RMSe,MLU ) - MUC ) * RRSe ) )", "obj1": 0.7629482071713147, "obj2": 0.16424220647495202}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3047808764940239, "obj2": 0.5680887136600884}, {"determining": "( Min( ( ARS * ( ACS * ( Max( ( MDR * ( MDR - FirstVNF_RAM ) ),MRS ) + ( ( FirstVNF_Mem - Const ) * ACS ) ) ) ) ,RRS ) * Max( BR,Const ) )", "choosing": "Max( ( MUC / DS ),Min( ( CS / Min( ( RCSe * MUC ) ,CS ) ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7880039079504338}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( CRS * ( BR * ( ( FirstVNF_CPU - ( RRS / ( ARS - ACS ) ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( MLU - Min( ( ( Min( CS ,RRSe ) * Max( ( Min( RCSe ,CS ) / Max( MUR,MUC ) ),MUR ) ) - RRSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.6932270916334662, "obj2": 0.24331250623386766}, {"determining": "( ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( Min( RRSe ,Min( ( MUR - ( RMSe + MUR ) ) ,MUM ) ) - ( MUR / DS ) ) / ( RRSe * ( MUR / MUM ) ) )", "obj1": 0.42231075697211157, "obj2": 0.46785436290567767}, {"determining": "( ( FirstVNF_CPU_Server + Const ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( Max( CRS,Min( RRS ,DDR ) ) / PN ) * ( FirstVNF_RAM - ( RRS / ( FirstVNF_RAM_Server + BR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * RRSe ) ,( ( MUR * RRSe ) - Min( CS ,Max( MUM,RMSe ) ) ) )", "obj1": 0.8067729083665338, "obj2": 0.10958087500993277}, {"determining": "( ( FirstVNF_Mem + Min( FirstVNF_CPU ,( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * Min( MUM ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.22709163346613545, "obj2": 0.687432930554348}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,BR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( MLU - Max( ( MUC + RMSe ),MLU ) ) )", "obj1": 0.8745019920318725, "obj2": 0.06832606001413273}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU + CRS ) / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,FirstVNF_RAM_Server ) ) ) ) ) ) + ( FirstVNF_RAM / MRS ) ) )", "choosing": "Min( ( RCSe * MUM ) ,( RRSe - RCSe ) )", "obj1": 0.7868525896414342, "obj2": 0.14215412423252585}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU + CRS ) / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MDR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( RMSe / RCSe ) )", "obj1": 0.7749003984063745, "obj2": 0.1516806354319358}, {"determining": "( ( FirstVNF_Mem + ( Const + PN ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.34860557768924305, "obj2": 0.5289705336347388}, {"determining": "( ( ( Const + PN ) - Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( RRS + FirstVNF_CPU ) ) ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "( ( ( ( MLU / ( ( ( MUR + CS ) - ( MUR - RMSe ) ) * MLU ) ) / ( MUC / ( CS * ( MLU + ( ( MUM * MUC ) * ( CS * MUR ) ) ) ) ) ) / Min( MUC ,RRSe ) ) / Min( RCSe ,( ( MUC * MUC ) / ( Max( ( Max( MLU,Min( MUM ,DS ) ) - RRSe ),Min( RRSe ,MLU ) ) - MUM ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.04660234517755671}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( RRS + FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / ( DDR - ( ( ( ARS + FirstVNF_Mem ) / ( ( DDR / FirstVNF_RAM ) + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( ( CS - Min( Max( ( ( RRSe / ( MUM + MUC ) ) - RRSe ),CS ) ,DS ) ) ,( ( ( ( MLU - MUR ) * RMSe ) - Max( ( MUR + CS ),Min( DS ,MLU ) ) ) - ( ( Min( ( RCSe * RMSe ) ,RCSe ) + RMSe ) + RCSe ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6090516733343485}, {"determining": "( ( MRS * BR ) + Max( MRS,BR ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe - ( Min( CS ,Min( ( RCSe - ( DS - ( MUR + MUC ) ) ) ,MUR ) ) - MUR ) ) )", "obj1": 0.37649402390438247, "obj2": 0.4968801628585156}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,MDR ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( Min( RRSe ,Min( ( MUR - ( RMSe + MUR ) ) ,MUM ) ) - ( MUR / DS ) ) / ( ( ( MLU - MUR ) * Min( RCSe ,DS ) ) * ( MUR / MUM ) ) )", "obj1": 0.9462151394422311, "obj2": 0.024054891874278193}, {"determining": "( ( AMS * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) / ( Const / FirstVNF_RAM ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( Min( ( DS / ( ( MUR / MUR ) / Max( RCSe,RCSe ) ) ) ,RCSe ) * RCSe ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.3386454183266932, "obj2": 0.5494717448376011}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2410358565737052, "obj2": 0.6745024822405431}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "( Max( DS,( MUM / MUC ) ) * Min( ( Max( ( MUC * Max( ( ( MUC / MUR ) + ( MLU / DS ) ),( MLU - MUR ) ) ),CS ) + MUC ) ,Min( Min( MUM ,DS ) ,Min( RRSe ,( MUC / DS ) ) ) ) )", "obj1": 0.9103585657370518, "obj2": 0.04683500481709355}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( ( PN - AMS ),RRS ) ) ,Min( ( CRS * ( Min( Min( Max( ( FirstVNF_Mem + MRS ),MDR ) ,CRS ) ,PN ) * ( ( ARS / PN ) * ( ( ARS * AMS ) / ( MDR / PN ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUC * Max( Min( MUC ,RRSe ),Max( CS,( Min( RRSe ,CS ) + ( Min( RRSe ,RCSe ) + Max( MUC,CS ) ) ) ) ) ),Min( DS ,MLU ) ) - ( ( MLU - MUR ) * Min( RCSe ,DS ) ) )", "obj1": 0.25697211155378485, "obj2": 0.6277555061356808}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / AMS ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( DS + Min( RMSe ,MUM ) ),RRSe ) ) + CS ) ) )", "obj1": 0.8625498007968128, "obj2": 0.06977583978924709}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS - PN ) * ( FirstVNF_CPU - ( AMS / FirstVNF_RAM ) ) ) ) ) + AMS ) )", "choosing": "Min( ( RCSe * Max( ( MUC / DS ),Min( ( DS + MUC ) ,Min( Min( ( MUC / Max( MUC,RRSe ) ) ,RRSe ) ,MLU ) ) ) ) ,( MLU / MUR ) )", "obj1": 0.8027888446215139, "obj2": 0.13138857985764454}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.8466135458167331, "obj2": 0.07720733500877655}, {"determining": "Min( Max( CRS,MRS ) ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) - ( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - RMSe ) * RMSe ) - Max( ( MUR + ( MLU / ( Min( MUM ,( RRSe - MUC ) ) * DS ) ) ),Min( DS ,MLU ) ) )", "obj1": 0.250996015936255, "obj2": 0.6414461930023828}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ( Min( ACS ,ACS ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2350597609561753, "obj2": 0.6753142283894125}, {"determining": "( ( BR + Min( PN ,RRS ) ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) ) + AMS ) )", "choosing": "( Max( ( CS + Max( RCSe,( Max( ( CS * DS ),RCSe ) - ( RMSe / MUC ) ) ) ),Min( DS ,DS ) ) - ( Max( Max( ( DS / Min( ( ( RMSe / RRSe ) / MUR ) ,MUM ) ),( RCSe + ( RCSe + RCSe ) ) ),DS ) + Max( MUR,CS ) ) )", "obj1": 0.8047808764940239, "obj2": 0.13077273048368152}, {"determining": "( ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / FirstVNF_RAM_Server ) + ( BR / Max( FirstVNF_RAM,( FirstVNF_Mem + Const ) ) ) ) ) ) + Max( Const,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( MUR + DS ) + Min( CS ,( ( ( RRSe + RRSe ) - RMSe ) / ( MLU * DS ) ) ) )", "obj1": 0.896414342629482, "obj2": 0.05018595979812172}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ( FirstVNF_CPU_Server + ARS ) + Max( AMS,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Const * ARS ) ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUC * MUC ) / CS ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( Max( MUR,MUR ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.3426294820717131, "obj2": 0.5415986272114109}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) * ( ( FirstVNF_RAM - Max( MDR,ARS ) ) * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * AMS ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - CS )", "obj1": 0.47410358565737054, "obj2": 0.40458154492560156}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( ( ( ARS / PN ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "Min( ( ( ( MUM + Max( Min( RCSe ,MUC ),DS ) ) * ( MUC * MUR ) ) * MUM ) ,( MLU - MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08619867141469234}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( ( MRS + RRS ) ,( CRS / DDR ) ),( Min( FirstVNF_Mem ,Max( PN,CRS ) ) + ( Const - AMS ) ) ) )", "choosing": "Min( Min( ( Max( CS,( MUC * ( Min( MUC ,( CS + MUR ) ) - CS ) ) ) + MUC ) ,( ( RCSe - DS ) / Min( ( MUC / ( CS / Min( RRSe ,DS ) ) ) ,RRSe ) ) ) ,( RCSe - ( CS + RCSe ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5954798281563578}, {"determining": "( Max( ( ARS * ( Min( ARS ,FirstVNF_RAM_Server ) * ( Max( ( MDR * ( FirstVNF_RAM - FirstVNF_RAM ) ),MRS ) + ( MRS / FirstVNF_CPU ) ) ) ),RRS ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUC / DS ),( Min( Min( RMSe ,MUM ) ,RCSe ) - CS ) )", "obj1": 0.13545816733067728, "obj2": 0.78446544779515}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( Const,BR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( MLU - MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08619867141469234}, {"determining": "Min( ( ( ( FirstVNF_RAM - Max( MDR,ARS ) ) * FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * Max( Const,FirstVNF_CPU_Server ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( CS + MUR ) ) * Max( Min( MUR ,MLU ),( ( MLU / MUM ) / DS ) ) ) - CS )", "obj1": 0.4860557768924303, "obj2": 0.3967064246946188}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( BR / Max( FirstVNF_CPU,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( RCSe * Max( ( ( Max( Min( ( RCSe / RMSe ) ,Max( RCSe,CS ) ),RRSe ) * MLU ) / DS ),Min( ( DS + MUC ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.7848605577689243, "obj2": 0.1500022105371215}, {"determining": "( ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( RRSe - MUM ) - Max( ( MLU + CS ),( Max( MUR,RCSe ) * RRSe ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6338142097957993}, {"determining": "( ( AMS * ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) ) / ( Const / FirstVNF_RAM ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5302114482949509}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5672438190569082}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,RRS ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS + PN ) * ( Min( ARS ,AMS ) / ( MDR / ( MRS - FirstVNF_Mem ) ) ) ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe * ( MLU - MUR ) ) - Max( ( MLU + CS ),Min( DS ,( ( ( ( Max( MUC,RCSe ) - ( CS * MUC ) ) + MUR ) + MLU ) * ( ( ( RCSe * CS ) * MUM ) * CS ) ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6003092773078749}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * AMS ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5854684200882512}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( MLU + CS ),( Max( MUR,RCSe ) * RRSe ) ) )", "obj1": 0.952191235059761, "obj2": 0.01944307155899847}, {"determining": "( ( AMS * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) / ( Const / FirstVNF_RAM ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( Min( ( DS / ( ( MUR / MUR ) / Max( RCSe,RCSe ) ) ) ,RCSe ) * RCSe ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.3386454183266932, "obj2": 0.5494717448376011}, {"determining": "( ( ( PN - ( Max( MRS,( AMS - Const ) ) - PN ) ) * Min( FirstVNF_Mem_Server ,AMS ) ) + ( ( Const + PN ) - FirstVNF_CPU ) )", "choosing": "( Min( CS ,( ( MLU * DS ) + Min( ( MLU * MUR ) ,( MUR * ( DS * RRSe ) ) ) ) ) + ( MUR / CS ) )", "obj1": 0.9920318725099602, "obj2": 0.0026048518960587567}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( Const,BR ) ) ) ) ) ) + AMS ) )", "choosing": "( Min( CS ,( ( CS - ( MLU * RRSe ) ) + Max( CS,MLU ) ) ) + ( MUR / CS ) )", "obj1": 0.8685258964143426, "obj2": 0.06940295260190663}, {"determining": "Min( ( ( Max( FirstVNF_RAM_Server,PN ) / FirstVNF_Mem ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,( ( Max( Const,BR ) * ( Min( BR ,PN ) + Const ) ) + ( FirstVNF_CPU * CRS ) ) ) ) ) )", "choosing": "Min( ( CS / RRSe ) ,( MUM + ( DS / Min( RRSe ,Max( ( MUR - Min( MUC ,RMSe ) ),CS ) ) ) ) )", "obj1": 0.27091633466135456, "obj2": 0.5999702145028862}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.8446215139442231, "obj2": 0.0807388047468004}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( Const + PN ) - Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( RRS + FirstVNF_CPU ) ) ),MRS ) / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * Min( RMSe ,MUM ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.9621513944223108, "obj2": 0.017970813161633202}, {"determining": "( ( ( ( Min( Min( ARS ,( AMS / ( CRS / Const ) ) ) ,FirstVNF_Mem ) - MRS ) - ACS ) / FirstVNF_CPU_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( ( CS + Min( MUM ,DS ) ) * Min( ( RRSe - CS ) ,MLU ) ) - ( ( ( CS - Max( MUR,MLU ) ) * RRSe ) / ( MLU - MUR ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5845814126194544}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( AMS * ( ( ARS - FirstVNF_CPU ) + ( Max( MRS,( ( FirstVNF_CPU_Server * AMS ) + ( Max( PN,ARS ) + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem - DDR ) ) ) ) )", "choosing": "( Max( DS,( MUM / MUC ) ) * Min( ( Max( ( MUC * Max( ( ( MUC / MUR ) + ( MLU / DS ) ),( MLU - MUR ) ) ),CS ) + MUC ) ,Min( Min( MUM ,DS ) ,Min( RRSe ,( MUC / DS ) ) ) ) )", "obj1": 0.46613545816733065, "obj2": 0.443398391585425}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( CRS * ( BR * ( ( FirstVNF_CPU - ( RRS / ( ARS - ACS ) ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( MLU - Min( ( ( Min( CS ,RRSe ) * Max( ( Min( RCSe ,CS ) / Max( MUR,MUC ) ),MUR ) ) - RRSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.8426294820717132, "obj2": 0.08498949578095476}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( ( DDR / ARS ) - ARS ) )", "choosing": "( ( RRSe - MUM ) - Max( ( MLU + CS ),( Max( ( DS - Min( MLU ,RMSe ) ),RCSe ) * RRSe ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( Max( Const,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( Min( ( RMSe * MUC ) ,MLU ) - CS ) / MUR ) ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.34860557768924305, "obj2": 0.5289705336347388}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),CRS ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( Min( RRSe ,Min( ( MUR - ( RMSe + MUR ) ) ,MUM ) ) - ( MUR / DS ) ) / ( RRSe * ( ( CS + CS ) / MUM ) ) )", "obj1": 0.9741035856573705, "obj2": 0.01147367441672317}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( BR + RRS ) )", "choosing": "( ( RRSe - ( MUC / DS ) ) - ( ( RRSe + CS ) + ( RRSe * Max( MUR,( MUC / ( RMSe + ( RRSe + ( MUR - RCSe ) ) ) ) ) ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007127122959462304}, {"determining": "( ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( Const + PN ) ) ) + ( ( Const + PN ) - FirstVNF_CPU ) )", "choosing": "( Min( CS ,RRSe ) + ( ( ( ( RCSe - CS ) / MUR ) - ( CS + CS ) ) / CS ) )", "obj1": 0.9641434262948207, "obj2": 0.016640449414190385}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) - ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( DDR - ARS ) - ( ( DDR / ( PN + ACS ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUC ,( ( RCSe + MUM ) + Max( CS,MLU ) ) ) + ( RCSe - ( CS + CS ) ) )", "obj1": 0.9721115537848606, "obj2": 0.013485478430133499}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,( RCSe - ( CS + RCSe ) ) )", "obj1": 0.27091633466135456, "obj2": 0.5999702145028862}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) - ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( ( Min( ACS ,ACS ) + CRS ) - ( ( RRS * FirstVNF_Mem ) * Min( FirstVNF_RAM_Server ,MRS ) ) ) - ( ( DDR - FirstVNF_CPU_Server ) - Const ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Min( RRSe ,( CS / ( RRSe - MUR ) ) ),MUC ) + Min( RMSe ,MUM ) )", "obj1": 0.9800796812749004, "obj2": 0.009264707865540588}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) )", "obj1": 0.9880478087649402, "obj2": 0.003765047324444275}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( ( ACS / PN ) * ( ( ( FirstVNF_RAM - ( FirstVNF_RAM - Const ) ) + ( CRS * DDR ) ) * ( FirstVNF_CPU - ( RRS / Max( Const,BR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( Max( MUM,DS ) - ( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) )", "obj1": 0.9840637450199203, "obj2": 0.006359064623229089}, {"determining": "( ( ( Const + PN ) - Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( RRS + FirstVNF_CPU ) ) ) + ( Max( MRS,MRS ) / ( Min( RRS ,RRS ) + ( ( Const + PN ) - FirstVNF_CPU ) ) ) )", "choosing": "( DS + Min( ( MUR - RMSe ) ,MUM ) )", "obj1": 0.9661354581673307, "obj2": 0.015418964931575161}, {"determining": "( ( Max( MRS,CRS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) + ( ( PN / BR ) + Const ) ) ) + ( FirstVNF_CPU - ( Const + PN ) ) )", "choosing": "( ( ( ( DS / ( RCSe / RMSe ) ) * Max( CS,MUM ) ) - RRSe ) + ( MUC * Max( CS,MUM ) ) )", "obj1": 0.9681274900398407, "obj2": 0.015121944725652491}, {"determining": "( ( ( Max( ARS,DDR ) - FirstVNF_RAM_Server ) / Min( MDR ,MDR ) ) - Const )", "choosing": "( ( MLU + Min( RMSe ,RCSe ) ) - ( ( ( MUM * DS ) / ( RRSe + Min( MUC ,DS ) ) ) * MLU ) )", "obj1": 0.9900398406374502, "obj2": 0.003585170042550125}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) - ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + CRS ) ) - ( ( DDR - ARS ) - Const ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( CS * CS ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.9760956175298805, "obj2": 0.010541038649873796}, {"determining": "( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - BR ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Min( ( ( AMS * AMS ) + BR ) ,FirstVNF_Mem_Server ) ) ) ) + ( ACS * BR ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( ( Min( MUM ,( RMSe - ( RMSe / MLU ) ) ) / MUM ) / MUM ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6003092773078749}], "10": [{"determining": "( ( CRS + Max( ( BR / FirstVNF_CPU ),MRS ) ) / ( ARS * PN ) )", "choosing": "( Min( RRSe ,( ( ( Max( ( RRSe / Min( RMSe ,CS ) ),MUR ) / MUM ) / DS ) * ( RMSe / ( ( ( DS / Min( RRSe ,RRSe ) ) + Max( MLU,CS ) ) + Min( MUC ,( RMSe + ( CS * RRSe ) ) ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( Const,BR ) ) ) ) ) ) - ( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( MUR + DS ) + Min( CS ,( ( MLU * DS ) / Min( ( ( CS - ( MLU * RRSe ) ) * MUR ) ,( MUR * ( DS * RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / CRS ) + ( BR / Max( Max( FirstVNF_CPU_Server,RRS ),FirstVNF_RAM ) ) ) ) ) + Max( Const,( Const + PN ) ) ) - ( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( MUR + DS ) + Min( CS ,( ( MLU * Min( ( Max( RCSe,MUM ) - MUR ) ,RRSe ) ) / Min( ( ( CS / Min( ( RMSe * MUC ) ,CS ) ) * CS ) ,( MUR * ( DS * RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( ( ( PN / ( ( ( BR - BR ) / FirstVNF_CPU_Server ) * DDR ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( RCSe + MUC ) ) - RRSe ) / Max( RRSe,Min( MUM ,MUR ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.50199203187251, "obj2": 0.3516785946348392}, {"determining": "( ( ( ACS + ( ( ( Min( Max( DDR,ACS ) ,FirstVNF_Mem ) + Max( MRS,( DDR + FirstVNF_CPU_Server ) ) ) * MDR ) + ( FirstVNF_CPU_Server - PN ) ) ) + BR ) - ( PN / FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( CS ,Min( Max( MLU,( Min( CS ,( MLU - MUR ) ) / Max( MLU,DS ) ) ) ,( RCSe * ( MUC / MLU ) ) ) ) ) - Max( ( MLU + CS ),Min( DS ,RCSe ) ) )", "obj1": 0.6055776892430279, "obj2": 0.2675831356670546}, {"determining": "Min( Min( FirstVNF_CPU ,ACS ) ,( ( ( ( Const - ( Min( ACS ,FirstVNF_CPU_Server ) + ( RRS + ARS ) ) ) - ( Const / ( DDR / ACS ) ) ) * FirstVNF_Mem_Server ) + CRS ) )", "choosing": "Min( ( ( ( MUC + Max( MLU,RCSe ) ) - MLU ) - RRSe ) ,( Min( ( CS - RMSe ) ,DS ) - ( ( MUC + ( Max( ( MUR + MUM ),( ( MLU / CS ) * MLU ) ) / Max( ( Max( RRSe,MUR ) + RCSe ),Max( ( DS - DS ),( MUR - MUC ) ) ) ) ) + CS ) ) )", "obj1": 0.7211155378486056, "obj2": 0.17658845486204966}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) + BR ) )", "choosing": "( ( ( ( MLU / ( ( ( MUR + CS ) - ( MUR - RMSe ) ) * MLU ) ) / ( MUC / ( CS * ( MLU + ( ( MUM * MUC ) * ( CS * MUR ) ) ) ) ) ) / Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,RRSe ) ) / Min( RCSe ,( ( MUC * MUC ) / ( Max( ( Max( MLU,Min( MUM ,DS ) ) - RRSe ),Min( RRSe ,MLU ) ) - MUM ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4540756593616091}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7545905761175521}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR - ( PN / ( Max( ARS,Min( Const ,DDR ) ) * Min( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) ) ) + ( ( ( Max( ( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) * FirstVNF_RAM ),ARS ) + CRS ) / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( Max( ( MLU - Max( MUC,RRSe ) ),DS ) * RCSe ) - ( CS * ( RCSe - ( CS / RRSe ) ) ) ) ) ) + ( RCSe / Min( MLU ,MUR ) ) )", "obj1": 0.39243027888446214, "obj2": 0.4660131155585617}, {"determining": "( ( ( ( PN / ( DDR * Min( ( Max( ARS,MDR ) + Max( FirstVNF_Mem_Server,MRS ) ) ,RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + MUM ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( MUM / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.4760956175298805, "obj2": 0.38630731125021645}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1852589641434263, "obj2": 0.6999285962801715}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( Max( Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,ACS ),( ( DDR * FirstVNF_CPU_Server ) + ARS ) ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "( ( RRSe * Min( MUM ,Max( ( RRSe / CS ),Min( Min( RMSe ,( RMSe / RRSe ) ) ,MUR ) ) ) ) / Min( DS ,DS ) )", "obj1": 0.7609561752988048, "obj2": 0.15532902259775172}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( ARS + RRS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( CRS / ACS ) - FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,RRSe ) ,( ( MUR * RRSe ) - Min( ( CS * MUR ) ,Max( MUM,RMSe ) ) ) )", "obj1": 0.5438247011952191, "obj2": 0.3251072904412896}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( AMS + ( CRS * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( MDR - ( MRS / RRS ) ) ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) * RMSe ) - Min( ( RCSe + RMSe ) ,Min( MUC ,( RRSe * MUR ) ) ) )", "obj1": 0.6314741035856574, "obj2": 0.2633478259400984}, {"determining": "( ( FirstVNF_Mem + Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,( RRS + FirstVNF_CPU ) ) ) ,( Max( Min( PN ,Const ),CRS ) * PN ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MUM - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MUR ) ) * ( MUC / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21115537848605578, "obj2": 0.6770035627298239}, {"determining": "( ( FirstVNF_Mem + Max( ( ACS / BR ),Max( FirstVNF_RAM_Server,BR ) ) ) + ( ( BR / ( FirstVNF_Mem / ( ( FirstVNF_CPU / RRS ) * FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Max( CS,( MUR + MUM ) ) / ( ( DS / Max( RCSe,( ( RCSe * ( MUC / DS ) ) - Min( CS ,RMSe ) ) ) ) * RRSe ) )", "obj1": 0.17330677290836655, "obj2": 0.7380880723871411}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) + BR ) )", "choosing": "( ( ( ( MLU / ( ( ( MUR + CS ) - ( MUR - RMSe ) ) * MLU ) ) / ( MUC / ( CS * ( MLU + ( ( MUM * MUC ) * ( CS * MUR ) ) ) ) ) ) / Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,RRSe ) ) / Min( RCSe ,( ( MUC * MUC ) / ( Max( ( Max( MLU,Min( MUM ,DS ) ) - RRSe ),Min( RRSe ,MLU ) ) - MUM ) ) ) )", "obj1": 0.448207171314741, "obj2": 0.4356984952869188}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.23107569721115537, "obj2": 0.6740205560645129}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( BR * FirstVNF_RAM ) ) / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,BR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( MLU - Min( MUR ,( RRSe - RMSe ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.23670278318340393}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + Max( MRS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) + ( ( Max( DDR,Max( ARS,Const ) ) * ( PN * ACS ) ) - PN ) ) + ( ( FirstVNF_CPU / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM * FirstVNF_CPU ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MUM ) * ( RMSe / MUM ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.49865653294254103}, {"determining": "( ( ( ( BR / ( FirstVNF_Mem / Min( FirstVNF_Mem ,Max( ( Const * ARS ),Min( ACS ,MDR ) ) ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( ACS / ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem ,Min( CRS ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - ( MRS * AMS ) ) )", "choosing": "( Max( ( MLU / MUM ),Max( RMSe,( RMSe + RMSe ) ) ) + ( MUR / Max( ( ( ( ( CS + ( CS - MUM ) ) + MUR ) + DS ) - DS ),( Min( ( RCSe + RCSe ) ,MLU ) / RCSe ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.3137394800069238}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.6733067729083665, "obj2": 0.259635600201141}, {"determining": "( ( FirstVNF_CPU + ( RRS * Max( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,( ACS + Min( MRS ,FirstVNF_Mem ) ) ) ),( AMS * FirstVNF_Mem_Server ) ) ) ) + PN )", "choosing": "( ( RRSe * Min( ( Min( MUC ,CS ) + Min( DS ,MUR ) ) ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.24701195219123506, "obj2": 0.650987942236107}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) * ( ( FirstVNF_RAM - Max( MDR,ARS ) ) * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( RRS + FirstVNF_CPU ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( CS + MLU ) ) * RCSe ) - CS )", "obj1": 0.4581673306772908, "obj2": 0.4208127268036173}, {"determining": "Min( ( ( ( Const * FirstVNF_CPU_Server ) - ( MDR / Min( Max( ( RRS / FirstVNF_RAM_Server ),Min( Min( DDR ,RRS ) ,( RRS + FirstVNF_CPU ) ) ) ,Min( DDR ,MRS ) ) ) ) + Max( ( FirstVNF_Mem / Const ),( Const - FirstVNF_CPU_Server ) ) ) ,Max( ( ( Const / FirstVNF_Mem ) / ( DDR - MRS ) ),Min( MDR ,RRS ) ) )", "choosing": "( ( MUC / ( CS * Min( RRSe ,DS ) ) ) / ( ( ( MUC / CS ) * CS ) * ( RCSe + MLU ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7243845240225646}, {"determining": "( ( ( ( BR / ( FirstVNF_Mem / Min( FirstVNF_Mem ,Max( ( Const * ARS ),Min( ACS ,MDR ) ) ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( ACS / ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem ,Min( CRS ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - ( MRS * AMS ) ) )", "choosing": "( Max( ( MLU / MUM ),Max( RMSe,( RMSe + RMSe ) ) ) + ( MUR / Max( ( ( ( ( CS + ( CS - MUM ) ) + MUR ) + DS ) - DS ),( Min( ( RCSe + RCSe ) ,MLU ) / RCSe ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.3137394800069238}, {"determining": "( Min( MDR ,FirstVNF_RAM_Server ) - ( ( CRS * ( ( FirstVNF_RAM_Server / CRS ) * ( ( ARS / FirstVNF_RAM ) * RRS ) ) ) + AMS ) )", "choosing": "( ( RRSe * ( MUR / MUM ) ) / ( ( MLU * DS ) - Max( MUR,Max( ( ( ( MUM + ( MUR / CS ) ) - MLU ) - MLU ),( MUM + ( RRSe / DS ) ) ) ) ) )", "obj1": 0.8924302788844621, "obj2": 0.05557852266637949}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ),MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.7131474103585658, "obj2": 0.20349691383510463}, {"determining": "( ( FirstVNF_CPU_Server - BR ) - Min( FirstVNF_CPU ,ARS ) )", "choosing": "( ( ( RMSe - MUR ) * RMSe ) - ( ( MLU + CS ) / Min( DS ,( ( Min( Min( DS ,MLU ) ,MLU ) - MUR ) - Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.7768924302788844, "obj2": 0.14012111973153982}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU ) - ( PN - ( ( AMS - BR ) - Const ) ) )", "choosing": "( Min( Min( Min( ( RRSe + ( Max( Min( DS ,MUM ),Min( CS ,MUC ) ) / ( MUR + Min( DS ,MLU ) ) ) ) ,( RRSe - Min( MLU ,Min( ( CS - DS ) ,CS ) ) ) ) ,( Max( CS,( ( RRSe - RRSe ) + DS ) ) - MLU ) ) ,MUR ) / ( MUM + MUC ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS + PN ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) + FirstVNF_CPU ) ) ) ) + AMS ) )", "choosing": "( Min( RCSe ,MUC ) / ( RRSe * ( DS / MUR ) ) )", "obj1": 0.9223107569721115, "obj2": 0.03996797762884658}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / AMS ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( DS + Min( RMSe ,MUM ) ),RRSe ) ) + CS ) ) )", "obj1": 0.8645418326693227, "obj2": 0.0677550436766621}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( BR / Max( FirstVNF_CPU,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( RCSe * Max( ( ( Max( Min( ( RCSe / RMSe ) ,Max( RCSe,CS ) ),RRSe ) * MLU ) / DS ),Min( ( DS + MUC ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.8326693227091634, "obj2": 0.10381252039369297}, {"determining": "( Max( ( ARS * ( Min( ARS ,FirstVNF_RAM_Server ) * ( Max( ( MDR * ( FirstVNF_RAM - FirstVNF_RAM ) ),MRS ) + ( MRS / FirstVNF_CPU ) ) ) ),RRS ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUC / DS ),( Min( Min( RMSe ,MUM ) ,RCSe ) - CS ) )", "obj1": 0.13545816733067728, "obj2": 0.78446544779515}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,Min( ( ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( ( MRS / FirstVNF_Mem ) / ( MDR / PN ) ) ) ) * CRS ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( CS,( Min( RRSe ,MUM ) * DS ) ) ,MUM ) - Max( ( CS + MLU ),Min( CS ,MLU ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5787261828048798}, {"determining": "( Min( MDR ,RRS ) * Min( Max( MRS,BR ) ,( ( ( FirstVNF_Mem + Min( FirstVNF_CPU ,( ACS + ARS ) ) ) + ( FirstVNF_CPU + BR ) ) / ARS ) ) )", "choosing": "Max( ( MUC / DS ),Min( ( MUM + ( ( Min( RRSe ,MLU ) - ( ( DS / ( RMSe * DS ) ) + MUR ) ) + ( DS * MLU ) ) ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7875932292237727}, {"determining": "( ( FirstVNF_CPU_Server + Const ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( Max( CRS,Min( RRS ,DDR ) ) / PN ) * ( FirstVNF_RAM - ( RRS / ( FirstVNF_RAM_Server + BR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * RRSe ) ,( ( MUR * RRSe ) - Min( CS ,Max( MUM,RMSe ) ) ) )", "obj1": 0.8067729083665338, "obj2": 0.10958087500993277}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS - PN ) * ( FirstVNF_CPU - ( AMS / FirstVNF_RAM ) ) ) ) ) + AMS ) )", "choosing": "Min( ( RCSe * Max( ( MUC / DS ),Min( ( DS + MUC ) ,Min( Min( ( MUC / Max( MUC,RRSe ) ) ,RRSe ) ,MLU ) ) ) ) ,( MLU / MUR ) )", "obj1": 0.8027888446215139, "obj2": 0.13138857985764454}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3047808764940239, "obj2": 0.5680887136600884}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ),MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.7151394422310757, "obj2": 0.20300957127230623}, {"determining": "( ( FirstVNF_Mem + ( Const + PN ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.34860557768924305, "obj2": 0.5289705336347388}, {"determining": "( ( ( ( FirstVNF_Mem + Min( BR ,FirstVNF_RAM ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - FirstVNF_Mem ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( Max( RRSe,DS ) * ( DS + ( ( Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) * ( RRSe / ( MLU - CS ) ) ) / MUM ) ) ) ) / ( RCSe + DS ) )", "obj1": 0.898406374501992, "obj2": 0.04456079545844847}, {"determining": "( ( MRS * BR ) + Max( MRS,BR ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe - ( Min( CS ,Min( ( RCSe - ( DS - ( MUR + MUC ) ) ) ,MUR ) ) - MUR ) ) )", "obj1": 0.37649402390438247, "obj2": 0.4968801628585156}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( RRS + FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / ( DDR - ( ( ( ARS + FirstVNF_Mem ) / ( ( DDR / FirstVNF_RAM ) + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( ( CS - Min( Max( ( ( RRSe / ( MUM + MUC ) ) - RRSe ),CS ) ,DS ) ) ,( ( ( ( MLU - MUR ) * RMSe ) - Max( ( MUR + CS ),Min( DS ,MLU ) ) ) - ( ( Min( ( RCSe * RMSe ) ,RCSe ) + RMSe ) + RCSe ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6090516733343485}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) * ( ( FirstVNF_RAM - Max( MDR,ARS ) ) * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * AMS ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - CS )", "obj1": 0.4721115537848606, "obj2": 0.4082506562685497}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS + PN ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) + FirstVNF_CPU ) ) ) ) + AMS ) )", "choosing": "( Min( CS ,( ( CS - ( MLU * RRSe ) ) + Max( CS,MLU ) ) ) + ( MUR / CS ) )", "obj1": 0.9302788844621513, "obj2": 0.03179629375863903}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MUR + CS ),Min( DS ,MLU ) ) )", "obj1": 0.2549800796812749, "obj2": 0.6250883602561786}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU + CRS ) / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MDR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( RMSe / RCSe ) )", "obj1": 0.7749003984063745, "obj2": 0.1516806354319358}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( PN,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.8187250996015937, "obj2": 0.10737731097100921}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( PN / ( DDR * ( FirstVNF_Mem + Max( ACS,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - FirstVNF_CPU ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( Min( MUR ,MUM ) - Max( RRSe,( ( RRSe / RRSe ) / ( MUM + CS ) ) ) ) ) ) ,( RMSe - ( CS - CS ) ) ) )", "obj1": 0.549800796812749, "obj2": 0.3226771948152346}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MUR + CS ),Min( DS ,MLU ) ) )", "obj1": 0.6792828685258964, "obj2": 0.2540133974553082}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.8466135458167331, "obj2": 0.07720733500877655}, {"determining": "( Max( Const,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RCSe / RMSe ) + Min( Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5501839333837836}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / AMS ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( DS + Min( RMSe ,MUM ) ),RRSe ) ) + CS ) ) )", "obj1": 0.8625498007968128, "obj2": 0.06977583978924709}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) * ( ( FirstVNF_RAM - Max( MDR,ARS ) ) * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * AMS ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - CS )", "obj1": 0.47410358565737054, "obj2": 0.40458154492560156}, {"determining": "( ( BR + Min( PN ,RRS ) ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) ) + AMS ) )", "choosing": "( Max( ( CS + Max( RCSe,( Max( ( CS * DS ),RCSe ) - ( RMSe / MUC ) ) ) ),Min( DS ,DS ) ) - ( Max( Max( ( DS / Min( ( ( RMSe / RRSe ) / MUR ) ,MUM ) ),( RCSe + ( RCSe + RCSe ) ) ),DS ) + Max( MUR,CS ) ) )", "obj1": 0.8047808764940239, "obj2": 0.13077273048368152}, {"determining": "( ( ( ( Max( BR,BR ) / ( DDR * Min( ( ARS + ( MRS * FirstVNF_RAM_Server ) ) ,Const ) ) ) - FirstVNF_Mem ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( RCSe * CS ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS * CS ) - Max( RRSe,( ( MLU - MUR ) * ( MLU / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.31673306772908366, "obj2": 0.5566955109012031}, {"determining": "( ( AMS * ( RRS + Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ) ) / Max( Const,FirstVNF_RAM ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( Min( ( DS / ( ( MUR / MUR ) / Min( DS ,RRSe ) ) ) ,RCSe ) * RCSe ) ) * RRSe ) ,( RCSe - ( MLU + CS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.5322163381271875}, {"determining": "( ( AMS * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) / ( Const / FirstVNF_RAM ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( Min( ( DS / ( ( MUR / MUR ) / Max( RCSe,RCSe ) ) ) ,RCSe ) * RCSe ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.3386454183266932, "obj2": 0.5494717448376011}, {"determining": "( Max( CRS,( AMS * ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) ) ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( MLU + CS ),( Max( MUR,( MUR * MUC ) ) * RRSe ) ) )", "obj1": 0.6872509960159362, "obj2": 0.2450330467630041}, {"determining": "Min( Max( CRS,MRS ) ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) - ( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - RMSe ) * RMSe ) - Max( ( MUR + ( MLU / ( Min( MUM ,( RRSe - MUC ) ) * DS ) ) ),Min( DS ,MLU ) ) )", "obj1": 0.250996015936255, "obj2": 0.6414461930023828}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS + PN ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) + FirstVNF_CPU ) ) ) ) + AMS ) )", "choosing": "( ( ( RMSe - ( CS + MUR ) ) * Max( Min( MUR ,MLU ),( ( MLU / MUM ) / DS ) ) ) - CS )", "obj1": 0.9422310756972112, "obj2": 0.027536967854727482}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( ( MRS + RRS ) ,( CRS / DDR ) ),( Min( FirstVNF_Mem ,Max( PN,CRS ) ) + ( Const - AMS ) ) ) )", "choosing": "Min( Min( ( Max( CS,( MUC * ( Min( MUC ,( CS + MUR ) ) - CS ) ) ) + MUC ) ,( ( RCSe - DS ) / Min( ( MUC / ( CS / Min( RRSe ,DS ) ) ) ,RRSe ) ) ) ,( RCSe - ( CS + RCSe ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5954798281563578}, {"determining": "( ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * AMS ) ) / ( FirstVNF_CPU * AMS ) )", "choosing": "( ( RRSe - MUM ) - Max( ( MLU + CS ),( Max( MUR,RCSe ) * RRSe ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6338142097957993}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( Const,BR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( MLU - MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08619867141469234}, {"determining": "( ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / FirstVNF_RAM_Server ) + ( BR / Max( FirstVNF_RAM,( FirstVNF_Mem + Const ) ) ) ) ) ) + Max( Const,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( MUR + DS ) + Min( CS ,( ( ( RRSe + RRSe ) - RMSe ) / ( MLU * DS ) ) ) )", "obj1": 0.896414342629482, "obj2": 0.05018595979812172}, {"determining": "Min( Min( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + Max( ( FirstVNF_RAM + ACS ),ARS ) ) ),Max( MDR,FirstVNF_CPU_Server ) ) ,( ( AMS - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( ( FirstVNF_RAM + PN ),( ( Const - ( Max( Const,BR ) * ( Min( FirstVNF_RAM ,DDR ) / ACS ) ) ) / Max( ARS,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( ( CS * RRSe ) + ( ( ( Max( ( RCSe + CS ),RMSe ) + Min( MUC ,Min( RRSe ,CS ) ) ) - CS ) / DS ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5586796427433535}, {"determining": "( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - BR ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Min( ( ( AMS * AMS ) + BR ) ,FirstVNF_Mem_Server ) ) ) ) + ( ACS * BR ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( ( Min( MUM ,( RMSe - ( RMSe / MLU ) ) ) / MUM ) / MUM ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6003092773078749}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * AMS ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5854684200882512}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5672438190569082}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,MDR ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( Min( RRSe ,Min( ( MUR - ( RMSe + MUR ) ) ,MUM ) ) - ( MUR / DS ) ) / ( ( ( MLU - MUR ) * Min( RCSe ,DS ) ) * ( MUR / MUM ) ) )", "obj1": 0.9462151394422311, "obj2": 0.024054891874278193}, {"determining": "( ( ( Const + PN ) - Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( RRS + FirstVNF_CPU ) ) ) + ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) )", "choosing": "( DS + Min( ( MUR - ( MLU + CS ) ) ,MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0026048518960587563}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( CRS * ( BR * ( ( FirstVNF_CPU - ( RRS / ( ARS - ACS ) ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( MLU - Min( ( ( Min( CS ,RRSe ) * Max( ( Min( RCSe ,CS ) / Max( MUR,MUC ) ),MUR ) ) - RRSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.6932270916334662, "obj2": 0.24331250623386766}, {"determining": "Min( ( ( Max( FirstVNF_RAM_Server,PN ) / FirstVNF_Mem ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,( ( Max( Const,BR ) * ( Min( BR ,PN ) + Const ) ) + ( FirstVNF_CPU * CRS ) ) ) ) ) )", "choosing": "Min( ( CS / RRSe ) ,( MUM + ( DS / Min( RRSe ,Max( ( MUR - Min( MUC ,RMSe ) ),CS ) ) ) ) )", "obj1": 0.27091633466135456, "obj2": 0.5999702145028862}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.8446215139442231, "obj2": 0.0807388047468004}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( Const + PN ) - Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( RRS + FirstVNF_CPU ) ) ),MRS ) / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * Min( RMSe ,MUM ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.9621513944223108, "obj2": 0.017970813161633202}, {"determining": "( ( AMS * ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) ) / ( Const / FirstVNF_RAM ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5302114482949509}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,MDR ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( Min( RRSe ,Min( ( MUR - ( RMSe + MUR ) ) ,MUM ) ) - ( MUR / DS ) ) / ( ( ( MLU - MUR ) * Min( RCSe ,DS ) ) * ( MUR / MUM ) ) )", "obj1": 0.950199203187251, "obj2": 0.02214817538459022}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( CRS * ( BR * ( ( FirstVNF_CPU - ( RRS / ( ARS - ACS ) ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( MLU - Min( ( ( Min( CS ,RRSe ) * Max( ( Min( RCSe ,CS ) / Max( MUR,MUC ) ),MUR ) ) - RRSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.8426294820717132, "obj2": 0.08498949578095476}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( CRS * ( BR * ( ( FirstVNF_CPU - ( RRS / ( ARS - ACS ) ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( MLU - Min( ( ( Min( CS ,RRSe ) * Max( ( Min( RCSe ,CS ) / Max( MUR,MUC ) ),MUR ) ) - RRSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.6932270916334662, "obj2": 0.24331250623386766}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) - ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( ( Min( ACS ,ACS ) + CRS ) - ( ( RRS * FirstVNF_Mem ) * Min( FirstVNF_RAM_Server ,MRS ) ) ) - ( ( DDR - FirstVNF_CPU_Server ) - Const ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Min( RRSe ,( CS / ( RRSe - MUR ) ) ),MUC ) + Min( RMSe ,MUM ) )", "obj1": 0.9800796812749004, "obj2": 0.009264707865540588}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( ( ACS / PN ) * ( ( ( FirstVNF_RAM - ( FirstVNF_RAM - Const ) ) + ( CRS * DDR ) ) * ( FirstVNF_CPU - ( RRS / Max( Const,BR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( Max( MUM,DS ) - ( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) )", "obj1": 0.9840637450199203, "obj2": 0.006359064623229089}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( ( ( ARS / PN ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "Min( ( ( ( MUM + Max( Min( RCSe ,MUC ),DS ) ) * ( MUC * MUR ) ) * MUM ) ,( MLU - MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08619867141469234}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),CRS ) ,CRS ) ,PN ) ) ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) )", "obj1": 0.9880478087649402, "obj2": 0.003765047324444275}, {"determining": "( ( ( ( Min( Min( ARS ,( AMS / ( CRS / Const ) ) ) ,FirstVNF_Mem ) - MRS ) - ACS ) / FirstVNF_CPU_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( ( CS + Min( MUM ,DS ) ) * Min( ( RRSe - CS ) ,MLU ) ) - ( ( ( CS - Max( MUR,MLU ) ) * RRSe ) / ( MLU - MUR ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5845814126194544}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( MLU + CS ),( Max( MUR,RCSe ) * RRSe ) ) )", "obj1": 0.952191235059761, "obj2": 0.01944307155899847}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) - ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + CRS ) ) - ( ( DDR - ARS ) - Const ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( CS * CS ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.9760956175298805, "obj2": 0.010541038649873796}, {"determining": "( ( FirstVNF_Mem + BR ) + ( FirstVNF_CPU + BR ) )", "choosing": "Min( ( ( RRSe * Min( MUR ,RRSe ) ) / Min( RCSe ,DS ) ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.34860557768924305, "obj2": 0.5289705336347388}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) - ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( DDR - ARS ) - ( ( DDR / ( PN + ACS ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( MUC ,( ( RCSe + MUM ) + Max( CS,MLU ) ) ) + ( RCSe - ( CS + CS ) ) )", "obj1": 0.9721115537848606, "obj2": 0.013485478430133499}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS + ARS ) * ( ( Min( FirstVNF_RAM_Server ,MRS ) * BR ) + FirstVNF_CPU ) ) ) ) + AMS ) )", "choosing": "( Min( CS ,Max( ( CS - ( ( Min( RCSe ,MUC ) / ( RRSe * ( DS / MUR ) ) ) * RRSe ) ),Max( ( ( ( MUC - MLU ) + RCSe ) * RCSe ),MLU ) ) ) + ( MUR / CS ) )", "obj1": 0.9741035856573705, "obj2": 0.010985216468863133}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( BR + RRS ) )", "choosing": "( ( RRSe - ( MUC / DS ) ) - ( ( RRSe + CS ) + ( RRSe * Max( MUR,( MUC / ( RMSe + ( RRSe + ( MUR - RCSe ) ) ) ) ) ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007127122959462304}, {"determining": "( ( FirstVNF_Mem + Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) + BR ) )", "choosing": "( ( ( ( MLU / ( ( ( MUR + CS ) - ( MUR - RMSe ) ) * MLU ) ) / ( MUC / ( CS * ( MLU + MLU ) ) ) ) / Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,RRSe ) ) / Min( RCSe ,( ( MUC * MUC ) / ( Max( ( Max( MLU,Min( MUM ,DS ) ) - RRSe ),Min( RRSe ,MLU ) ) - MUM ) ) ) )", "obj1": 0.30876494023904383, "obj2": 0.5679021574118321}, {"determining": "( ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( Const + PN ) ) ) + ( ( Const + PN ) - FirstVNF_CPU ) )", "choosing": "( Min( CS ,RRSe ) + ( ( ( ( RCSe - CS ) / MUR ) - ( CS + CS ) ) / CS ) )", "obj1": 0.9641434262948207, "obj2": 0.016640449414190385}, {"determining": "Min( ( ( FirstVNF_RAM + FirstVNF_Mem ) + ( FirstVNF_CPU + BR ) ) ,( ( ARS / PN ) * Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( Max( ( MUC + RMSe ),MLU ) + ( ( MUC + CS ) + RCSe ) ) * RRSe ) ,( Min( RMSe ,RRSe ) + Max( MUC,RMSe ) ) )", "obj1": 0.27091633466135456, "obj2": 0.5999702145028862}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ),MRS ) / ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),( ( RMSe / MUR ) * ( RRSe * MUC ) ) ) )", "obj1": 0.9701195219123506, "obj2": 0.013951918008428156}, {"determining": "( ( ( Const + PN ) - Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( RRS + FirstVNF_CPU ) ) ) + ( Max( MRS,MRS ) / ( Min( RRS ,RRS ) + ( ( Const + PN ) - FirstVNF_CPU ) ) ) )", "choosing": "( DS + Min( ( MUR - RMSe ) ,MUM ) )", "obj1": 0.9661354581673307, "obj2": 0.015418964931575161}, {"determining": "( ( Max( MRS,CRS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) + ( ( PN / BR ) + Const ) ) ) + ( FirstVNF_CPU - ( Const + PN ) ) )", "choosing": "( ( ( ( DS / ( RCSe / RMSe ) ) * Max( CS,MUM ) ) - RRSe ) + ( MUC * Max( CS,MUM ) ) )", "obj1": 0.9681274900398407, "obj2": 0.015121944725652491}, {"determining": "( ( ( Max( ARS,DDR ) - FirstVNF_RAM_Server ) / Min( MDR ,MDR ) ) - Const )", "choosing": "( ( MLU + Min( RMSe ,RCSe ) ) - ( ( ( MUM * DS ) / ( RRSe + Min( MUC ,DS ) ) ) * MLU ) )", "obj1": 0.9900398406374502, "obj2": 0.003585170042550125}], "11": [{"determining": "( ( CRS + Max( ( BR / FirstVNF_CPU ),MRS ) ) / ( ARS * PN ) )", "choosing": "( Min( RRSe ,( ( ( Max( ( RRSe / Min( RMSe ,CS ) ),MUR ) / MUM ) / DS ) * ( RMSe / ( ( ( DS / Min( RRSe ,RRSe ) ) + Max( MLU,CS ) ) + Min( MUC ,( RMSe + ( CS * RRSe ) ) ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( ( DDR - Max( CRS,MDR ) ) + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) ) + AMS ) )", "choosing": "( Max( ( CS + Max( RCSe,( Max( ( CS * DS ),RCSe ) - ( RMSe / MUC ) ) ) ),Min( DS ,MLU ) ) - ( Max( Max( ( Min( MUM ,MUR ) + DS ),( RCSe + ( RCSe + RCSe ) ) ),DS ) + Max( MUR,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( Const,BR ) ) ) ) ) ) - ( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( MUR + DS ) + Min( CS ,( ( MLU * DS ) / Min( ( ( CS - ( MLU * RRSe ) ) * MUR ) ,( MUR * ( DS * RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( ( ACS + ( ( ( Min( Max( DDR,ACS ) ,FirstVNF_Mem ) + Max( MRS,( DDR + FirstVNF_CPU_Server ) ) ) * MDR ) + ( FirstVNF_CPU_Server - PN ) ) ) + BR ) - ( PN / FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( CS ,Min( Max( MLU,( Min( CS ,( MLU - MUR ) ) / Max( MLU,DS ) ) ) ,( RCSe * ( MUC / MLU ) ) ) ) ) - Max( ( MLU + CS ),Min( DS ,RCSe ) ) )", "obj1": 0.6055776892430279, "obj2": 0.2675831356670546}, {"determining": "( ( ( ( PN / ( ( ( BR - BR ) / FirstVNF_CPU_Server ) * DDR ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( RCSe + MUC ) ) - RRSe ) / Max( RRSe,Min( MUM ,MUR ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.50199203187251, "obj2": 0.3516785946348392}, {"determining": "Min( Min( FirstVNF_CPU ,ACS ) ,( ( ( ( Const - ( Min( ACS ,FirstVNF_CPU_Server ) + ( RRS + ARS ) ) ) - ( Const / ( DDR / ACS ) ) ) * FirstVNF_Mem_Server ) + CRS ) )", "choosing": "Min( ( ( ( MUC + Max( MLU,RCSe ) ) - MLU ) - RRSe ) ,( Min( ( CS - RMSe ) ,DS ) - ( ( MUC + ( Max( ( MUR + MUM ),( ( MLU / CS ) * MLU ) ) / Max( ( Max( RRSe,MUR ) + RCSe ),Max( ( DS - DS ),( MUR - MUC ) ) ) ) ) + CS ) ) )", "obj1": 0.7211155378486056, "obj2": 0.17658845486204966}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7545905761175521}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( Max( Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,ACS ),( ( DDR * FirstVNF_CPU_Server ) + ARS ) ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "( ( RRSe * Min( MUM ,Max( ( RRSe / CS ),Min( Min( RMSe ,( RMSe / RRSe ) ) ,MUR ) ) ) ) / Min( DS ,DS ) )", "obj1": 0.7609561752988048, "obj2": 0.15532902259775172}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) + BR ) )", "choosing": "( ( ( ( MLU / ( ( ( MUR + CS ) - ( MUR - RMSe ) ) * MLU ) ) / ( MUC / ( CS * ( MLU + ( ( MUM * MUC ) * ( CS * MUR ) ) ) ) ) ) / Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,RRSe ) ) / Min( RCSe ,( ( MUC * MUC ) / ( Max( ( Max( MLU,Min( MUM ,DS ) ) - RRSe ),Min( RRSe ,MLU ) ) - MUM ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4540756593616091}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( ARS + RRS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( CRS / ACS ) - FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,RRSe ) ,( ( MUR * RRSe ) - Min( ( CS * MUR ) ,Max( MUM,RMSe ) ) ) )", "obj1": 0.5438247011952191, "obj2": 0.3251072904412896}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( AMS + ( CRS * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( MDR - ( MRS / RRS ) ) ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) * RMSe ) - Min( ( RCSe + RMSe ) ,Min( MUC ,( RRSe * MUR ) ) ) )", "obj1": 0.6314741035856574, "obj2": 0.2633478259400984}, {"determining": "( ( FirstVNF_Mem + Max( ( ACS / BR ),Max( FirstVNF_RAM_Server,BR ) ) ) + ( ( BR / ( FirstVNF_Mem / ( ( FirstVNF_CPU / RRS ) * FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Max( CS,( MUR + MUM ) ) / ( ( DS / Max( RCSe,( ( RCSe * ( MUC / DS ) ) - Min( CS ,RMSe ) ) ) ) * RRSe ) )", "obj1": 0.17330677290836655, "obj2": 0.7380880723871411}, {"determining": "( ( ( ( BR / ( FirstVNF_Mem / Min( FirstVNF_Mem ,Max( ( Const * ARS ),Min( ACS ,MDR ) ) ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( ACS / ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem ,Min( CRS ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - ( MRS * AMS ) ) )", "choosing": "( Max( ( MLU / MUM ),Max( RMSe,( RMSe + RMSe ) ) ) + ( MUR / Max( ( ( ( ( CS + ( CS - MUM ) ) + MUR ) + DS ) - DS ),( Min( ( RCSe + RCSe ) ,MLU ) / RCSe ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.3137394800069238}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( ( RRSe - RMSe ) * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.426607348550332}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ),( FirstVNF_RAM_Server * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( PN / ( ( Const + Max( ARS,( BR - CRS ) ) ) / DDR ) ) - DDR ) - FirstVNF_CPU ) )", "choosing": "Min( Min( MLU ,Min( ( RMSe + ( CS - CS ) ) ,( DS - DS ) ) ) ,Min( ( ( ( ( MUR / MUR ) + ( MUC + Max( RRSe,( MUR - MUC ) ) ) ) / Min( RRSe ,MUM ) ) * RRSe ) ,Min( CS ,Max( ( MUM + Max( CS,DS ) ),CS ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.37812045835368646}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + Max( MRS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) + ( ( Max( DDR,Max( ARS,Const ) ) * ( PN * ACS ) ) - PN ) ) + ( ( FirstVNF_CPU / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM * FirstVNF_CPU ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MUM ) * ( RMSe / MUM ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.49865653294254103}, {"determining": "( ( CRS * Max( Const,BR ) ) / ( ( ( ARS - Const ) / ( DDR - ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / MDR ) ) * ( ( MDR * RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe * ( ( RMSe / ( RRSe * ( MUR + CS ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( ( MUM * MLU ) ,DS ) )", "obj1": 0.22310756972111553, "obj2": 0.6674760271796291}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.6733067729083665, "obj2": 0.259635600201141}, {"determining": "( ( FirstVNF_CPU + ( RRS * Max( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,( ACS + Min( MRS ,FirstVNF_Mem ) ) ) ),( AMS * FirstVNF_Mem_Server ) ) ) ) + PN )", "choosing": "( ( RRSe * Min( ( Min( MUC ,CS ) + Min( DS ,MUR ) ) ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.24701195219123506, "obj2": 0.650987942236107}, {"determining": "( ( MRS / ( FirstVNF_RAM + CRS ) ) + Min( Min( MDR ,FirstVNF_CPU_Server ) ,AMS ) )", "choosing": "( ( CS * ( ( RMSe / ( RRSe * DS ) ) * ( RMSe / ( ( RMSe - ( RMSe / ( RRSe - RRSe ) ) ) * RMSe ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1752988047808765, "obj2": 0.7180890140711713}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR - ( PN / ( Max( ARS,Min( Const ,DDR ) ) * Min( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) ) ) + ( ( ( Max( ( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) * FirstVNF_RAM ),ARS ) + CRS ) / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( Max( ( MLU - Max( MUC,RRSe ) ),DS ) * RCSe ) - ( CS * ( RCSe - ( CS / RRSe ) ) ) ) ) ) + ( RCSe / Min( MLU ,MUR ) ) )", "obj1": 0.39243027888446214, "obj2": 0.4660131155585617}, {"determining": "( ( ( ( BR / ( FirstVNF_Mem / Min( FirstVNF_Mem ,Max( ( Const * ARS ),Min( ACS ,MDR ) ) ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( ACS / ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem ,Min( CRS ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - ( MRS * AMS ) ) )", "choosing": "( Max( ( MLU / MUM ),Max( RMSe,( RMSe + RMSe ) ) ) + ( MUR / Max( ( ( ( ( CS + ( CS - MUM ) ) + MUR ) + DS ) - DS ),( Min( ( RCSe + RCSe ) ,MLU ) / RCSe ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.3137394800069238}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem - ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( Min( ( MUR + ( RRSe + CS ) ) ,( Max( DS,RCSe ) * CS ) ) ,RCSe ),( Min( RMSe ,Max( RCSe,MUR ) ) * ( ( MLU / MLU ) / RCSe ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.40039840637450197, "obj2": 0.4585389494064436}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU ) - ( PN - ( ( AMS - BR ) - Const ) ) )", "choosing": "( Min( Min( Min( ( RRSe + ( Max( Min( DS ,MUM ),Min( CS ,MUC ) ) / ( MUR + Min( DS ,MLU ) ) ) ) ,( RRSe - Min( MLU ,Min( ( CS - DS ) ,CS ) ) ) ) ,( Max( CS,( ( RRSe - RRSe ) + DS ) ) - MLU ) ) ,MUR ) / ( MUM + MUC ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( ( ( PN / ( DDR * Min( ( Max( ARS,MDR ) + Max( FirstVNF_Mem_Server,MRS ) ) ,RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + MUM ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( MUM / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.4760956175298805, "obj2": 0.38630731125021645}, {"determining": "( ( FirstVNF_CPU_Server - BR ) - ( ACS * FirstVNF_Mem ) )", "choosing": "Min( MUM ,( MUM - ( Max( RMSe,DS ) * Min( MUC ,RRSe ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.21122472393024286}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) * ( ( FirstVNF_RAM - Max( MDR,ARS ) ) * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( RRS + FirstVNF_CPU ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( Max( CS,( MUC * ( Min( MUC ,( CS + MUR ) ) - CS ) ) ) + MUC ) ,( ( RCSe - DS ) / Min( ( MUC / ( CS / Min( RRSe ,DS ) ) ) ,RRSe ) ) ) ,( RCSe - ( CS + RCSe ) ) )", "obj1": 0.4581673306772908, "obj2": 0.42026888279740704}, {"determining": "( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / ( MUM + Max( CS,DS ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.32270916334661354, "obj2": 0.5444982532559801}, {"determining": "( Max( ( ARS * ( Min( ARS ,FirstVNF_RAM_Server ) * ( Max( ( MDR * ( FirstVNF_RAM - FirstVNF_RAM ) ),MRS ) + ( MRS / FirstVNF_CPU ) ) ) ),RRS ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUC / DS ),( Min( Min( RMSe ,MUM ) ,RCSe ) - CS ) )", "obj1": 0.13545816733067728, "obj2": 0.78446544779515}, {"determining": "( ( FirstVNF_CPU_Server + Const ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( Max( CRS,Min( RRS ,DDR ) ) / PN ) * ( FirstVNF_RAM - ( RRS / ( FirstVNF_RAM_Server + BR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * RRSe ) ,( ( MUR * RRSe ) - Min( CS ,Max( MUM,RMSe ) ) ) )", "obj1": 0.8067729083665338, "obj2": 0.10958087500993277}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( CRS * ( BR * ( ( FirstVNF_CPU - ( RRS / ( ARS - ACS ) ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( MLU - Min( ( ( Min( CS ,RRSe ) * Max( ( Min( RCSe ,CS ) / Max( MUR,MUC ) ),MUR ) ) - RRSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.6932270916334662, "obj2": 0.24331250623386766}, {"determining": "( ( ( ( Max( MDR,Min( ARS ,FirstVNF_RAM_Server ) ) * DDR ) - PN ) + BR ) - ( ( ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS - ACS ) ) ) ) - CRS ) + AMS ) )", "choosing": "Min( MUM ,Min( ( MUR - ( ( Min( MLU ,Min( Min( DS ,CS ) ,Min( MUC ,RRSe ) ) ) / ( DS + ( CS - Max( RRSe,RCSe ) ) ) ) + MUR ) ) ,MUM ) )", "obj1": 0.8824701195219123, "obj2": 0.061718485736243965}, {"determining": "Min( ( ( CRS - FirstVNF_CPU ) + Max( ( Max( ARS,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) * FirstVNF_CPU_Server ),( Const - FirstVNF_CPU_Server ) ) ) ,Max( ( ( Const / FirstVNF_Mem ) / ( DDR * MRS ) ),Min( RRS ,MDR ) ) )", "choosing": "( ( MUC / ( CS * Min( RRSe ,DS ) ) ) / ( MUM + Max( ( ( ( ( MUR + MLU ) * MLU ) - RRSe ) / RRSe ),RRSe ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6980012356159689}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS + PN ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) + FirstVNF_CPU ) ) ) ) + AMS ) )", "choosing": "( Min( RCSe ,MUC ) / ( RRSe * ( DS / MUR ) ) )", "obj1": 0.9223107569721115, "obj2": 0.03996797762884658}, {"determining": "( Min( MDR ,RRS ) * Min( Max( MRS,BR ) ,( ( ( FirstVNF_Mem + Min( FirstVNF_CPU ,( ACS + ARS ) ) ) + ( FirstVNF_CPU + BR ) ) / ARS ) ) )", "choosing": "Max( ( MUC / DS ),Min( ( MUM + ( ( Min( RRSe ,MLU ) - ( ( DS / ( RMSe * DS ) ) + MUR ) ) + ( DS * MLU ) ) ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7875932292237727}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + Min( PN ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) + FirstVNF_RAM_Server ) ) ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / Min( DS ,MLU ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.20916334661354583, "obj2": 0.6887152548747284}, {"determining": "( ( FirstVNF_CPU_Server - BR ) - Min( FirstVNF_CPU ,ARS ) )", "choosing": "( ( ( RMSe - MUR ) * RMSe ) - ( ( MLU + CS ) / Min( DS ,( ( Min( Min( DS ,MLU ) ,MLU ) - MUR ) - Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.7768924302788844, "obj2": 0.14012111973153982}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ),MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.7151394422310757, "obj2": 0.20300957127230623}, {"determining": "( ( AMS * ( RRS + Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ) ) / Max( Const,FirstVNF_RAM ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( Min( ( DS / ( ( MUR / MUR ) / Min( DS ,RRSe ) ) ) ,RCSe ) * RCSe ) ) * RRSe ) ,( RCSe - ( MLU + CS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.5322163381271875}, {"determining": "( ( FirstVNF_Mem + ( Const + PN ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.34860557768924305, "obj2": 0.5289705336347388}, {"determining": "( ( MRS * BR ) + Max( MRS,BR ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe - ( Min( CS ,Min( ( RCSe - ( DS - ( MUR + MUC ) ) ) ,MUR ) ) - MUR ) ) )", "obj1": 0.37649402390438247, "obj2": 0.4968801628585156}, {"determining": "( ( FirstVNF_Mem + Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.19322709163346613, "obj2": 0.6971260082863238}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( BR / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( MUM * MUC ) * ( ( ( Min( MUC ,( MUR / CS ) ) / Min( MLU ,( MUR * MUR ) ) ) / RCSe ) * MUR ) ) ,Min( Max( ( MLU + RMSe ),RCSe ) ,MLU ) ) )", "obj1": 0.796812749003984, "obj2": 0.13529753591207364}, {"determining": "Min( Max( CRS,MRS ) ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) - ( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - RMSe ) * RMSe ) - Max( ( MUR + ( MLU / ( Min( MUM ,( RRSe - MUC ) ) * DS ) ) ),Min( DS ,MLU ) ) )", "obj1": 0.250996015936255, "obj2": 0.6414461930023828}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( RRS + FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / ( DDR - ( ( ( ARS + FirstVNF_Mem ) / ( ( DDR / FirstVNF_RAM ) + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( ( CS - Min( Max( ( ( RRSe / ( MUM + MUC ) ) - RRSe ),CS ) ,DS ) ) ,( ( ( ( MLU - MUR ) * RMSe ) - Max( ( MUR + CS ),Min( DS ,MLU ) ) ) - ( ( Min( ( RCSe * RMSe ) ,RCSe ) + RMSe ) + RCSe ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6090516733343485}, {"determining": "( ( FirstVNF_Mem + ( ( ( ARS / PN ) * ( FirstVNF_CPU - ( ( FirstVNF_RAM / BR ) / Max( Const,BR ) ) ) ) / PN ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( Min( MUM ,( MLU - MUR ) ) - ( Max( MUC,Min( ( Min( ( MUM * Min( RMSe ,RRSe ) ) ,( ( MLU - CS ) + ( CS - RRSe ) ) ) + MLU ) ,RCSe ) ) - RRSe ) )", "obj1": 0.2908366533864542, "obj2": 0.5778596637997631}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) * ( ( FirstVNF_RAM - Max( MDR,ARS ) ) * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * AMS ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - CS )", "obj1": 0.4721115537848606, "obj2": 0.4082506562685497}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU + CRS ) / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MDR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( RMSe / RCSe ) )", "obj1": 0.7749003984063745, "obj2": 0.1516806354319358}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( PN / RRS ) / ( FirstVNF_CPU - ( RRS / Max( PN,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.8187250996015937, "obj2": 0.10511940605934705}, {"determining": "( ( ( ( PN + ( Min( Min( ARS ,Max( BR,BR ) ) ,AMS ) * ( FirstVNF_Mem - ( ACS - MDR ) ) ) ) - DDR ) - FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( Min( Max( RCSe,( RCSe / ( Max( ( Max( RRSe,MUR ) / Min( MUM ,MUC ) ),( ( RMSe - RRSe ) - CS ) ) * RMSe ) ) ) ,( MUR + ( Min( MUM ,Max( MUC,MUC ) ) * MUC ) ) ) / ( ( RCSe + CS ) / ( MUM * RRSe ) ) )", "obj1": 0.545816733067729, "obj2": 0.3207415421456932}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MUR + CS ),Min( DS ,MLU ) ) )", "obj1": 0.6792828685258964, "obj2": 0.2540133974553082}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - Max( ( ( FirstVNF_CPU_Server * RRS ) - Min( FirstVNF_RAM_Server ,Const ) ),( Min( PN ,ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( RRSe,( ( ( ( ( DS / Max( MUM,RRSe ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( MUR,( RRSe - MUM ) ) + CS ) ) ) / Max( RCSe,MUR ) )", "obj1": 0.900398406374502, "obj2": 0.04337855149274016}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / AMS ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( DS + Min( RMSe ,MUM ) ),RRSe ) ) + CS ) ) )", "obj1": 0.8645418326693227, "obj2": 0.0677550436766621}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) * ( ( FirstVNF_RAM - Max( MDR,ARS ) ) * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * AMS ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - CS )", "obj1": 0.47410358565737054, "obj2": 0.40458154492560156}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.3047808764940239, "obj2": 0.5680887136600884}, {"determining": "( ( BR + Min( PN ,RRS ) ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) ) + AMS ) )", "choosing": "( Max( ( CS + Max( RCSe,( Max( ( CS * DS ),RCSe ) - ( RMSe / MUC ) ) ) ),Min( DS ,DS ) ) - ( Max( Max( ( DS / Min( ( ( RMSe / RRSe ) / MUR ) ,MUM ) ),( RCSe + ( RCSe + RCSe ) ) ),DS ) + Max( MUR,CS ) ) )", "obj1": 0.8047808764940239, "obj2": 0.13077273048368152}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - PN ) ) )", "choosing": "( ( Min( RRSe ,Min( ( MUR - ( ( CS + CS ) + MUR ) ) ,MUM ) ) - ( MUR / DS ) ) / ( ( ( MLU - MUR ) * Min( RCSe ,DS ) ) * ( MUR / MUM ) ) )", "obj1": 0.8386454183266933, "obj2": 0.0998541757144512}, {"determining": "( Min( MDR ,FirstVNF_RAM_Server ) - ( ( CRS * ( ( FirstVNF_RAM_Server / CRS ) * ( ( ARS / FirstVNF_RAM ) * RRS ) ) ) + AMS ) )", "choosing": "( ( RRSe * ( MUR / MUM ) ) / ( ( MLU * DS ) - Max( MUR,Max( ( ( ( MUM + ( MUR / CS ) ) - MLU ) - MLU ),( MUM + ( RRSe / DS ) ) ) ) ) )", "obj1": 0.8924302788844621, "obj2": 0.05557852266637949}, {"determining": "( Max( CRS,( AMS * ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) ) ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( RRSe - MUM ) - Max( ( MLU + CS ),( Max( MUR,( MUR * MUC ) ) * RRSe ) ) )", "obj1": 0.6872509960159362, "obj2": 0.2450330467630041}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / AMS ) ) ) ) ) + AMS ) )", "choosing": "( ( ( ( MLU / ( ( ( MUR + CS ) - ( MUR - RMSe ) ) * MLU ) ) / ( MUC / ( CS * ( MLU + ( ( MUM * MUC ) * ( CS * MUR ) ) ) ) ) ) / Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,RRSe ) ) / Min( RCSe ,( ( MUC * MUC ) / ( Max( ( Max( MLU,Min( MUM ,DS ) ) - RRSe ),Min( RRSe ,MLU ) ) - MUM ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.10345299819232504}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( ( MRS + RRS ) ,( CRS / DDR ) ),( Min( FirstVNF_Mem ,Max( PN,CRS ) ) + ( Const - AMS ) ) ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - CS )", "obj1": 0.2549800796812749, "obj2": 0.6237708818577267}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( BR,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( RRSe - Max( ( MUC - RCSe ),Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.8545816733067729, "obj2": 0.07526857573674611}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5872507144768632}, {"determining": "Min( ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( Max( PN,ARS ) + FirstVNF_RAM_Server ) ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ( Max( Const,BR ) * CRS ) - Const ) / Min( MDR ,RRS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( ( ( ( ( MUC / CS ) * CS ) * ( RCSe + MLU ) ) * RRSe ) + CS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6256958098445391}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( BR * FirstVNF_RAM ) ) / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,BR ) ) ) ) ) ) + AMS ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.20645375017193585}, {"determining": "( ( FirstVNF_Mem + Min( ( ( Const * FirstVNF_RAM_Server ) * ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) ) ,( ACS + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / MUC ) * ( RRSe / MUC ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6769686864582808}, {"determining": "Min( ( ( Max( FirstVNF_RAM_Server,PN ) / FirstVNF_Mem ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,( ( Max( Const,BR ) * ( Min( BR ,PN ) + Const ) ) + ( FirstVNF_CPU * CRS ) ) ) ) ) )", "choosing": "Min( ( CS / RRSe ) ,( MUM + ( DS / Min( RRSe ,Max( ( MUR - Min( MUC ,RMSe ) ),CS ) ) ) ) )", "obj1": 0.27091633466135456, "obj2": 0.5999702145028862}, {"determining": "( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - BR ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Min( ( ( AMS * AMS ) + BR ) ,FirstVNF_Mem_Server ) ) ) ) + ( ACS * BR ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( ( Min( MUM ,( RMSe - ( RMSe / MLU ) ) ) / MUM ) / MUM ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6003092773078749}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS + PN ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) + FirstVNF_CPU ) ) ) ) + AMS ) )", "choosing": "( ( ( RMSe - ( CS + MUR ) ) * Max( Min( MUR ,MLU ),( ( MLU / MUM ) / DS ) ) ) - CS )", "obj1": 0.9422310756972112, "obj2": 0.027221423283271144}, {"determining": "Min( Min( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + Max( ( FirstVNF_RAM + ACS ),ARS ) ) ),Max( MDR,FirstVNF_CPU_Server ) ) ,( ( AMS - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( ( FirstVNF_RAM + PN ),( ( Const - ( Max( Const,BR ) * ( Min( FirstVNF_RAM ,DDR ) / ACS ) ) ) / Max( ARS,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( ( CS * RRSe ) + ( ( ( Max( ( RCSe + CS ),RMSe ) + Min( MUC ,Min( RRSe ,CS ) ) ) - CS ) / DS ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5586796427433535}, {"determining": "( ( FirstVNF_Mem + Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,( RRS + FirstVNF_CPU ) ) ) ,( Max( Min( PN ,Const ),CRS ) * PN ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MUM - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MUR ) ) * ( MUC / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21115537848605578, "obj2": 0.6770035627298239}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_RAM_Server ) ) ,Const ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( MLU - MUR ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.3207171314741036, "obj2": 0.5550331230486278}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS + PN ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) + FirstVNF_CPU ) ) ) ) + AMS ) )", "choosing": "( Min( CS ,( ( CS - ( MLU * RRSe ) ) + Max( CS,MLU ) ) ) + ( MUR / CS ) )", "obj1": 0.9302788844621513, "obj2": 0.03179629375863903}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( ( ( MLU / ( ( ( MUR + CS ) - ( MUR - RMSe ) ) * MLU ) ) / ( MUC / ( CS * ( MLU + MLU ) ) ) ) / Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,RRSe ) ) / Min( RCSe ,( ( MUC * MUC ) / ( Max( ( Max( MLU,Min( MUM ,DS ) ) - RRSe ),Min( RRSe ,MLU ) ) - MUM ) ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5668322161798964}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / AMS ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( DS + Min( RMSe ,MUM ) ),RRSe ) ) + CS ) ) )", "obj1": 0.8625498007968128, "obj2": 0.06977583978924709}, {"determining": "( ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / FirstVNF_RAM_Server ) + ( BR / Max( FirstVNF_RAM,( FirstVNF_Mem + Const ) ) ) ) ) ) + Max( Const,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( MUR + DS ) + Min( CS ,( ( ( RRSe + RRSe ) - RMSe ) / ( MLU * DS ) ) ) )", "obj1": 0.896414342629482, "obj2": 0.05018595979812172}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ),MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.7131474103585658, "obj2": 0.20349691383510463}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,Min( ( ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( ( MRS / FirstVNF_Mem ) / ( MDR / PN ) ) ) ) * CRS ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( CS,( Min( RRSe ,MUM ) * DS ) ) ,MUM ) - Max( ( CS + MLU ),Min( CS ,MLU ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5787261828048798}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( ( ( ARS / PN ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "Min( ( ( ( MUM + Max( Min( RCSe ,MUC ),DS ) ) * ( MUC * MUR ) ) * MUM ) ,( MLU - MUR ) )", "obj1": 0.8406374501992032, "obj2": 0.08619867141469234}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( ( ( ARS / PN ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR * MUM ) ,( MLU - MUR ) )", "obj1": 0.9282868525896414, "obj2": 0.03191603194094198}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.8466135458167331, "obj2": 0.07720733500877655}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS - PN ) * ( FirstVNF_CPU - ( AMS / FirstVNF_RAM ) ) ) ) ) + AMS ) )", "choosing": "Min( ( RCSe * Max( ( MUC / DS ),Min( ( DS + MUC ) ,Min( Min( ( MUC / Max( MUC,RRSe ) ) ,RRSe ) ,MLU ) ) ) ) ,( MLU / MUR ) )", "obj1": 0.8027888446215139, "obj2": 0.13138857985764454}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.8446215139442231, "obj2": 0.0807388047468004}, {"determining": "( ( ( ( Max( BR,BR ) / ( DDR * Min( ( ARS + ( MRS * FirstVNF_RAM_Server ) ) ,Const ) ) ) - FirstVNF_Mem ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( RCSe * CS ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS * CS ) - Max( RRSe,( ( MLU - MUR ) * ( MLU / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.31673306772908366, "obj2": 0.5566955109012031}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,MDR ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( DS + Min( ( MUR - ( MLU + CS ) ) ,MUM ) )", "obj1": 0.9581673306772909, "obj2": 0.016854565898730963}, {"determining": "( ( AMS * ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) ) / ( Const / FirstVNF_RAM ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5302114482949509}, {"determining": "( ( ( ( FirstVNF_Mem + Min( BR ,FirstVNF_RAM ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - FirstVNF_Mem ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( Max( RRSe,DS ) * ( DS + ( ( Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) * ( RRSe / ( MLU - CS ) ) ) / MUM ) ) ) ) / ( RCSe + DS ) )", "obj1": 0.898406374501992, "obj2": 0.04456079545844847}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,MDR ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( Min( CS ,RRSe ) + ( ( ( ( RCSe - CS ) / MUR ) - ( CS + CS ) ) / CS ) )", "obj1": 0.9482071713147411, "obj2": 0.020811985386751032}, {"determining": "( ( ( ( Min( Min( ARS ,( AMS / ( CRS / Const ) ) ) ,FirstVNF_Mem ) - MRS ) - ACS ) / FirstVNF_CPU_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( ( CS + Min( MUM ,DS ) ) * Min( ( RRSe - CS ) ,MLU ) ) - ( ( ( CS - Max( MUR,MLU ) ) * RRSe ) / ( MLU - MUR ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5845814126194544}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * AMS ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5854684200882512}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( CRS * ( BR * ( ( FirstVNF_CPU - ( RRS / ( ARS - ACS ) ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( MLU - Min( ( ( Min( CS ,RRSe ) * Max( ( Min( RCSe ,CS ) / Max( MUR,MUC ) ),MUR ) ) - RRSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.8426294820717132, "obj2": 0.08498949578095476}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) - ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( ( ( ( Min( ACS ,ACS ) + CRS ) - ( ( RRS * FirstVNF_Mem ) * Min( FirstVNF_RAM_Server ,MRS ) ) ) - ( ( DDR - FirstVNF_CPU_Server ) - Const ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Min( RRSe ,( CS / ( RRSe - MUR ) ) ),MUC ) + Min( RMSe ,MUM ) )", "obj1": 0.9800796812749004, "obj2": 0.009264707865540588}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( ( ACS / PN ) * ( ( ( FirstVNF_RAM - ( FirstVNF_RAM - Const ) ) + ( CRS * DDR ) ) * ( FirstVNF_CPU - ( RRS / Max( Const,BR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( Max( MUM,DS ) - ( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) )", "obj1": 0.9840637450199203, "obj2": 0.006359064623229089}, {"determining": "( ( Max( MRS,MRS ) / ( FirstVNF_Mem_Server + ( Const + PN ) ) ) + ( ( Const + PN ) - FirstVNF_CPU ) )", "choosing": "( Min( CS ,RRSe ) + ( ( ( ( RCSe - CS ) / MUR ) - ( CS + CS ) ) / CS ) )", "obj1": 0.9641434262948207, "obj2": 0.016640449414190385}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( ( BR - FirstVNF_CPU ),CRS ) ,CRS ) ,PN ) ) ) )", "choosing": "Min( ( Max( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ),( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.952191235059761, "obj2": 0.019079279543863892}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),CRS ) ,CRS ) ,PN ) ) ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,MDR ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( Min( RRSe ,Min( ( MUR - ( RMSe + MUR ) ) ,MUM ) ) - ( MUR / DS ) ) / ( ( ( MLU - MUR ) * Min( RCSe ,DS ) ) * ( MUR / MUM ) ) )", "obj1": 0.9462151394422311, "obj2": 0.024054891874278193}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( CRS * ( BR * ( ( FirstVNF_CPU - ( RRS / ( ARS - ACS ) ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( MLU - Min( ( ( Min( CS ,RRSe ) * Max( ( Min( RCSe ,CS ) / Max( MUR,MUC ) ),MUR ) ) - RRSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.6932270916334662, "obj2": 0.24331250623386766}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( FirstVNF_CPU_Server,MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( RRSe - MUM ) - MLU )", "obj1": 0.9442231075697212, "obj2": 0.024607242081871265}], "12": [{"determining": "( ( CRS + Max( ( BR / FirstVNF_CPU ),MRS ) ) / ( ARS * PN ) )", "choosing": "( Min( RRSe ,( ( ( Max( ( RRSe / Min( RMSe ,CS ) ),MUR ) / MUM ) / DS ) * ( RMSe / ( ( ( DS / Min( RRSe ,RRSe ) ) + Max( MLU,CS ) ) + Min( MUC ,( RMSe + ( CS * RRSe ) ) ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( ( DDR - Max( CRS,MDR ) ) + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) ) + AMS ) )", "choosing": "( Max( ( CS + Max( RCSe,( Max( ( CS * DS ),RCSe ) - ( RMSe / MUC ) ) ) ),Min( DS ,MLU ) ) - ( Max( Max( ( Min( MUM ,MUR ) + DS ),( RCSe + ( RCSe + RCSe ) ) ),DS ) + Max( MUR,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - Max( CRS,MDR ) ) + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) ) + AMS ) )", "choosing": "( Max( ( CS + Max( RCSe,( Max( ( CS * DS ),RCSe ) - ( RMSe / MUC ) ) ) ),Min( DS ,MLU ) ) - ( Max( Max( ( Min( MUM ,MUR ) + DS ),( RCSe + ( RCSe + RCSe ) ) ),DS ) + Max( MUR,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "( ( ( RMSe - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( MLU - Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.30696109918848297}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7545905761175521}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) + BR ) )", "choosing": "( ( ( ( MLU / ( ( ( MUR + CS ) - ( MUR - RMSe ) ) * MLU ) ) / ( MUC / ( CS * ( MLU + ( ( MUM * MUC ) * ( CS * MUR ) ) ) ) ) ) / Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,RRSe ) ) / Min( RCSe ,( ( MUC * MUC ) / ( Max( ( Max( MLU,Min( MUM ,DS ) ) - RRSe ),Min( RRSe ,MLU ) ) - MUM ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4540756593616091}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( FirstVNF_RAM_Server ,Const ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( MUR,( RRSe - MUM ) ) + CS ) ) ) / Max( MUR,RCSe ) )", "obj1": 0.647410358565737, "obj2": 0.23051075708330848}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "( ( RRSe * Min( MUM ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.6872509960159362, "obj2": 0.22028049389761428}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( PN / ( DDR * ( FirstVNF_Mem + Max( ACS,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - FirstVNF_CPU ) )", "choosing": "Min( ( CS * RRSe ) ,( ( MUR * RRSe ) - Min( CS ,Max( MUM,RMSe ) ) ) )", "obj1": 0.5199203187250996, "obj2": 0.34860495722110746}, {"determining": "( ( ( ACS + ( ( ( Min( Max( DDR,ACS ) ,FirstVNF_Mem ) + Max( MRS,( DDR + FirstVNF_CPU_Server ) ) ) * MDR ) + ( FirstVNF_CPU_Server - PN ) ) ) + BR ) - ( PN / FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( CS ,Min( Max( MLU,( Min( CS ,( MLU - MUR ) ) / Max( MLU,DS ) ) ) ,( RCSe * ( MUC / MLU ) ) ) ) ) - Max( ( MLU + CS ),Min( DS ,RCSe ) ) )", "obj1": 0.6055776892430279, "obj2": 0.2675831356670546}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( ( RRSe - RMSe ) * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.426607348550332}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( Max( Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,ACS ),( ( DDR * FirstVNF_CPU_Server ) + ARS ) ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "( ( RRSe * Min( MUM ,Max( ( RRSe / CS ),Min( Min( RMSe ,( RMSe / RRSe ) ) ,MUR ) ) ) ) / Min( DS ,DS ) )", "obj1": 0.7609561752988048, "obj2": 0.15532902259775172}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + Max( MRS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) + ( ( Max( DDR,Max( ARS,Const ) ) * ( PN * ACS ) ) - PN ) ) + ( ( FirstVNF_CPU / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM * FirstVNF_CPU ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MUM ) * ( RMSe / MUM ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.49865653294254103}, {"determining": "( ( ( ( PN / ( ( FirstVNF_Mem + DDR ) * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - DS ) ) )", "obj1": 0.7310756972111554, "obj2": 0.169002152136757}, {"determining": "( ( ( ( PN / ( ( ( BR - BR ) / FirstVNF_CPU_Server ) * DDR ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( RCSe + MUC ) ) - RRSe ) / Max( RRSe,Min( MUM ,MUR ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.50199203187251, "obj2": 0.3516785946348392}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ),( FirstVNF_RAM_Server * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( PN / ( ( Const + Max( ARS,( BR - CRS ) ) ) / DDR ) ) - DDR ) - FirstVNF_CPU ) )", "choosing": "Min( Min( MLU ,Min( ( RMSe + ( CS - CS ) ) ,( DS - DS ) ) ) ,Min( ( ( ( ( MUR / MUR ) + ( MUC + Max( RRSe,( MUR - MUC ) ) ) ) / Min( RRSe ,MUM ) ) * RRSe ) ,Min( CS ,Max( ( MUM + Max( CS,DS ) ),CS ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.37812045835368646}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( ARS + RRS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( CRS / ACS ) - FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,RRSe ) ,( ( MUR * RRSe ) - Min( ( CS * MUR ) ,Max( MUM,RMSe ) ) ) )", "obj1": 0.5438247011952191, "obj2": 0.3251072904412896}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR - ( PN / ( Max( ARS,Min( Const ,DDR ) ) * Min( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) ) ) + ( ( ( Max( ( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) * FirstVNF_RAM ),ARS ) + CRS ) / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( Max( ( MLU - Max( MUC,RRSe ) ),DS ) * RCSe ) - ( CS * ( RCSe - ( CS / RRSe ) ) ) ) ) ) + ( RCSe / Min( MLU ,MUR ) ) )", "obj1": 0.39243027888446214, "obj2": 0.4660131155585617}, {"determining": "Min( Min( FirstVNF_CPU ,ACS ) ,( ( ( ( Const - ( Min( ACS ,FirstVNF_CPU_Server ) + ( RRS + ARS ) ) ) - ( Const / ( DDR / ACS ) ) ) * FirstVNF_Mem_Server ) + CRS ) )", "choosing": "Min( ( ( ( MUC + Max( MLU,RCSe ) ) - MLU ) - RRSe ) ,( Min( ( CS - RMSe ) ,DS ) - ( ( MUC + ( Max( ( MUR + MUM ),( ( MLU / CS ) * MLU ) ) / Max( ( Max( RRSe,MUR ) + RCSe ),Max( ( DS - DS ),( MUR - MUC ) ) ) ) ) + CS ) ) )", "obj1": 0.7211155378486056, "obj2": 0.17658845486204966}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + Min( FirstVNF_Mem ,( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - ARS ) ) ) ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( CS,( RRSe - MUM ) ) + CS ) * ( ( ( Min( DS ,( MLU / CS ) ) * ( RRSe / Min( DS ,MLU ) ) ) / MUM ) / DS ) ) ) / Min( ( RMSe / MLU ) ,DS ) )", "obj1": 0.1693227091633466, "obj2": 0.7381063570979611}, {"determining": "( ( MRS / ( FirstVNF_RAM + CRS ) ) + Min( Min( MDR ,FirstVNF_CPU_Server ) ,AMS ) )", "choosing": "( ( CS * ( ( RMSe / ( RRSe * DS ) ) * ( RMSe / ( ( RMSe - ( RMSe / ( RRSe - RRSe ) ) ) * RMSe ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1752988047808765, "obj2": 0.7180890140711713}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem - ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( Min( ( MUR + ( RRSe + CS ) ) ,( Max( DS,RCSe ) * CS ) ) ,RCSe ),( Min( RMSe ,Max( RCSe,MUR ) ) * ( ( MLU / MLU ) / RCSe ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.40039840637450197, "obj2": 0.4585389494064436}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU ) - ( PN - ( ( AMS - BR ) - Const ) ) )", "choosing": "( Min( Min( Min( ( RRSe + ( Max( Min( DS ,MUM ),Min( CS ,MUC ) ) / ( MUR + Min( DS ,MLU ) ) ) ) ,( RRSe - Min( MLU ,Min( ( CS - DS ) ,CS ) ) ) ) ,( Max( CS,( ( RRSe - RRSe ) + DS ) ) - MLU ) ) ,MUR ) / ( MUM + MUC ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) * ( ( FirstVNF_RAM - Max( MDR,ARS ) ) * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( RRS + FirstVNF_CPU ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( Max( CS,( MUC * ( Min( MUC ,( CS + MUR ) ) - CS ) ) ) + MUC ) ,( ( RCSe - DS ) / Min( ( MUC / ( CS / Min( RRSe ,DS ) ) ) ,RRSe ) ) ) ,( RCSe - ( CS + RCSe ) ) )", "obj1": 0.4581673306772908, "obj2": 0.42026888279740704}, {"determining": "( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / ( MUM + Max( CS,DS ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.32270916334661354, "obj2": 0.5444982532559801}, {"determining": "( ( CRS * Max( Const,BR ) ) / ( ( ( ARS - Const ) / ( DDR - ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / MDR ) ) * ( ( MDR * RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe * ( ( RMSe / ( RRSe * ( MUR + CS ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( ( MUM * MLU ) ,DS ) )", "obj1": 0.22310756972111553, "obj2": 0.6674760271796291}, {"determining": "( ( ( ( BR / ( FirstVNF_Mem / Min( FirstVNF_Mem ,Max( ( Const * ARS ),Min( ACS ,MDR ) ) ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( ACS / ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem ,Min( CRS ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - ( MRS * AMS ) ) )", "choosing": "( Max( ( MLU / MUM ),Max( RMSe,( RMSe + RMSe ) ) ) + ( MUR / Max( ( ( ( ( CS + ( CS - MUM ) ) + MUR ) + DS ) - DS ),( Min( ( RCSe + RCSe ) ,MLU ) / RCSe ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.3137394800069238}, {"determining": "( ( FirstVNF_CPU_Server + Const ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( ( RRS / Max( MDR,FirstVNF_RAM ) ) - FirstVNF_CPU ) ) ) ) + AMS ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( RCSe * ( Min( MUR ,Max( MUM,MUM ) ) / Min( Max( MUM,MUM ) ,MLU ) ) ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS * CS ) - Max( RRSe,( ( MLU - MUR ) * ( MLU / MUC ) ) ) ) ) ) ,( RRSe - ( CS + CS ) ) ) )", "obj1": 0.8386454183266933, "obj2": 0.08482374463293005}, {"determining": "( ( FirstVNF_Mem + ( Const + PN ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.34860557768924305, "obj2": 0.5289705336347388}, {"determining": "Min( Max( CRS,MRS ) ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) - ( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - RMSe ) * RMSe ) - Max( ( MUR + ( MLU / ( Min( MUM ,( RRSe - MUC ) ) * DS ) ) ),Min( DS ,MLU ) ) )", "obj1": 0.250996015936255, "obj2": 0.6414461930023828}, {"determining": "( Max( ( ARS * ( Min( ARS ,FirstVNF_RAM_Server ) * ( Max( ( MDR * ( FirstVNF_RAM - FirstVNF_RAM ) ),MRS ) + ( MRS / FirstVNF_CPU ) ) ) ),RRS ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUC / DS ),( Min( Min( RMSe ,MUM ) ,RCSe ) - CS ) )", "obj1": 0.13545816733067728, "obj2": 0.78446544779515}, {"determining": "( Min( PN ,MDR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS * PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) ) + AMS ) )", "choosing": "( ( ( RMSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RMSe ) - Min( CS ,Min( ( MLU / RRSe ) ,RMSe ) ) )", "obj1": 0.8207171314741036, "obj2": 0.10241013525007592}, {"determining": "Min( Min( Max( ( ( Max( MRS,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - BR ) ) - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + Max( PN,ARS ) ) ),Max( MDR,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,Max( ( FirstVNF_RAM + PN ),( ( Const - ( Max( Const,BR ) * ( Min( FirstVNF_RAM ,DDR ) / ACS ) ) ) / Max( ARS,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( ( RRSe * CS ) + ( DS / ( ( MLU + Max( MLU,( RRSe / MUR ) ) ) - CS ) ) ) ) )", "obj1": 0.2410358565737052, "obj2": 0.654388850020039}, {"determining": "( ( ( ( Max( MDR,Min( ARS ,FirstVNF_RAM_Server ) ) * DDR ) - PN ) + BR ) - ( ( ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS - ACS ) ) ) ) - CRS ) + AMS ) )", "choosing": "Min( MUM ,Min( ( MUR - ( ( Min( MLU ,Min( Min( DS ,CS ) ,Min( MUC ,RRSe ) ) ) / ( DS + ( CS - Max( RRSe,RCSe ) ) ) ) + MUR ) ) ,MUM ) )", "obj1": 0.8824701195219123, "obj2": 0.061718485736243965}, {"determining": "( ( Max( ( AMS - MRS ),BR ) * CRS ) / ( Min( PN ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) )", "choosing": "( ( RRSe - ( RRSe * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / ( RCSe * Min( MLU ,Max( MUR,Min( MUR ,CS ) ) ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2051792828685259, "obj2": 0.6833645145869394}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( AMS + ( CRS * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( MDR - ( MRS / RRS ) ) ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) * RMSe ) - Min( ( RCSe + RMSe ) ,Min( MUC ,( RRSe * MUR ) ) ) )", "obj1": 0.6314741035856574, "obj2": 0.2633478259400984}, {"determining": "( ( FirstVNF_CPU_Server - BR ) - Min( FirstVNF_CPU ,ARS ) )", "choosing": "( ( ( RMSe - MUR ) * RMSe ) - ( ( MLU + CS ) / Min( DS ,( ( Min( Min( DS ,MLU ) ,MLU ) - MUR ) - Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.7768924302788844, "obj2": 0.14012111973153982}, {"determining": "( ( FirstVNF_Mem + Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.19322709163346613, "obj2": 0.6971260082863238}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ),MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.7151394422310757, "obj2": 0.20300957127230623}, {"determining": "( ( AMS * ( RRS + Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ) ) / Max( Const,FirstVNF_RAM ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( Min( ( DS / ( ( MUR / MUR ) / Min( DS ,RRSe ) ) ) ,RCSe ) * RCSe ) ) * RRSe ) ,( RCSe - ( MLU + CS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.5322163381271875}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - Max( ( ( FirstVNF_CPU_Server * RRS ) - Min( FirstVNF_RAM_Server ,Const ) ),( Min( PN ,ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( RRSe,( ( ( ( ( DS / Max( MUM,RRSe ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( MUR,( RRSe - MUM ) ) + CS ) ) ) / Max( RCSe,MUR ) )", "obj1": 0.6354581673306773, "obj2": 0.24077250276020615}, {"determining": "( ( MRS * BR ) + Max( MRS,BR ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe - ( Min( CS ,Min( ( RCSe - ( DS - ( MUR + MUC ) ) ) ,MUR ) ) - MUR ) ) )", "obj1": 0.37649402390438247, "obj2": 0.4968801628585156}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU / Min( ( MDR / MDR ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( ( MLU * ( Max( ( ( MUC * Max( ( MUM + RRSe ),MLU ) ) * Min( RRSe ,CS ) ),MUR ) + RCSe ) ) - Max( ( MLU + CS ),( DS / MUC ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6159046627296558}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( BR / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( MUM * MUC ) * ( ( ( Min( MUC ,( MUR / CS ) ) / Min( MLU ,( MUR * MUR ) ) ) / RCSe ) * MUR ) ) ,Min( Max( ( MLU + RMSe ),RCSe ) ,MLU ) ) )", "obj1": 0.796812749003984, "obj2": 0.13529753591207364}, {"determining": "( ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( DDR / Max( BR,MRS ) ) ) ) ) ) + AMS ) - ( FirstVNF_CPU_Server + BR ) )", "choosing": "( CS - ( Max( CS,DS ) * RCSe ) )", "obj1": 0.8067729083665338, "obj2": 0.10958087500993277}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) * ( ( FirstVNF_RAM - Max( MDR,ARS ) ) * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * AMS ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - CS )", "obj1": 0.4721115537848606, "obj2": 0.4082506562685497}, {"determining": "( ( ( FirstVNF_RAM_Server + ARS ) * CRS ) / ( Min( ( ARS * FirstVNF_Mem ) ,MRS ) * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( CS - ( RRSe - MUC ) ) ) / RMSe ) / DS ) ) * RRSe ) / Min( Min( CS ,Max( MUM,RMSe ) ) ,DS ) )", "obj1": 0.12350597609561753, "obj2": 0.7883038445162912}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU + CRS ) / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MDR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.7749003984063745, "obj2": 0.15015056127111204}, {"determining": "( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - BR ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Min( ( ( AMS * AMS ) + BR ) ,FirstVNF_Mem_Server ) ) ) ) + ( ACS * BR ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( ( Min( MUM ,( RMSe - ( RMSe / MLU ) ) ) / MUM ) / MUM ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6003092773078749}, {"determining": "( ( ( ( Max( BR,BR ) / ( DDR * Min( ( ARS + ( MRS * FirstVNF_RAM_Server ) ) ,Const ) ) ) - FirstVNF_Mem ) - FirstVNF_CPU ) / ( Const / FirstVNF_RAM ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RRSe ) ,( RCSe - ( ( CS * ( RCSe - ( RCSe / RRSe ) ) ) + CS ) ) )", "obj1": 0.9800796812749004, "obj2": 0.008865041293570089}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( MDR * RRS ) - Min( Min( Max( FirstVNF_CPU_Server,MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( CS - MLU )", "obj1": 0.9422310756972112, "obj2": 0.02712578634057732}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Max( DDR,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( ( RRS + ( AMS * ( CRS + FirstVNF_CPU ) ) ) ,CRS ) ,PN ) ) ) )", "choosing": "( Min( CS ,RRSe ) + ( ( ( ( Min( MUM ,MUR ) + Min( ( DS / MUR ) ,Max( Max( DS,MUC ),RMSe ) ) ) / MUR ) - ( CS + CS ) ) / CS ) )", "obj1": 0.9621513944223108, "obj2": 0.015273301348765157}, {"determining": "( Max( ( ( ( ( PN * DDR ) - Min( PN ,CRS ) ) / FirstVNF_RAM ) + FirstVNF_CPU ),( FirstVNF_RAM_Server - ( BR - FirstVNF_Mem ) ) ) + Max( ARS,PN ) )", "choosing": "Min( ( RRSe * CS ) ,( ( MUR * RRSe ) - Min( CS ,Max( ( ( RCSe - CS ) - Max( CS,Max( RCSe,Min( MUR ,MLU ) ) ) ),RMSe ) ) ) )", "obj1": 0.6235059760956175, "obj2": 0.26525057931541923}, {"determining": "( ( ( ( PN + ( Min( Min( ARS ,Max( BR,BR ) ) ,AMS ) * ( FirstVNF_Mem - ( ACS - MDR ) ) ) ) - DDR ) - FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( Min( Max( RCSe,( RCSe / ( Max( ( Max( RRSe,MUR ) / Min( MUM ,MUC ) ),( ( RMSe - RRSe ) - CS ) ) * RMSe ) ) ) ,( MUR + ( Min( MUM ,Max( MUC,MUC ) ) * MUC ) ) ) / ( ( RCSe + CS ) / ( MUM * RRSe ) ) )", "obj1": 0.545816733067729, "obj2": 0.3207415421456932}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS + PN ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) + FirstVNF_CPU ) ) ) ) + AMS ) )", "choosing": "( Min( RCSe ,MUC ) / ( RRSe * ( DS / MUR ) ) )", "obj1": 0.9203187250996016, "obj2": 0.04164345206530688}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( ( FirstVNF_CPU_Server - BR ) - ( ACS * FirstVNF_Mem ) )", "choosing": "Min( MUM ,( MUM - ( Max( RMSe,DS ) * Min( MUC ,RRSe ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.21122472393024286}, {"determining": "( ( ( ( PN / ( DDR * Min( ( Max( ARS,MDR ) + Max( FirstVNF_Mem_Server,MRS ) ) ,RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + MUM ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( MUM / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.4760956175298805, "obj2": 0.38630731125021645}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / AMS ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( DS + Min( RMSe ,MUM ) ),RRSe ) ) + CS ) ) )", "obj1": 0.8645418326693227, "obj2": 0.0677550436766621}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) * ( ( FirstVNF_RAM - Max( MDR,ARS ) ) * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * AMS ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - CS )", "obj1": 0.47410358565737054, "obj2": 0.40458154492560156}, {"determining": "( ( FirstVNF_Mem + Max( ( ACS / BR ),Max( FirstVNF_RAM_Server,BR ) ) ) + ( ( BR / ( FirstVNF_Mem / ( ( FirstVNF_CPU / RRS ) * FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Max( CS,( MUR + MUM ) ) / ( ( DS / Max( RCSe,( ( RCSe * ( MUC / DS ) ) - Min( CS ,RMSe ) ) ) ) * RRSe ) )", "obj1": 0.17330677290836655, "obj2": 0.7380880723871411}, {"determining": "( ( BR + Min( PN ,RRS ) ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) ) + AMS ) )", "choosing": "( Max( ( CS + Max( RCSe,( Max( ( CS * DS ),RCSe ) - ( RMSe / MUC ) ) ) ),Min( DS ,DS ) ) - ( Max( Max( ( DS / Min( ( ( RMSe / RRSe ) / MUR ) ,MUM ) ),( RCSe + ( RCSe + RCSe ) ) ),DS ) + Max( MUR,CS ) ) )", "obj1": 0.8047808764940239, "obj2": 0.13077273048368152}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.3819435577119115}, {"determining": "( Min( MDR ,FirstVNF_RAM_Server ) - ( ( CRS * ( ( FirstVNF_RAM_Server / CRS ) * ( ( ARS / FirstVNF_RAM ) * RRS ) ) ) + AMS ) )", "choosing": "( ( RRSe * ( MUR / MUM ) ) / ( ( MLU * DS ) - Max( MUR,Max( ( ( ( MUM + ( MUR / CS ) ) - MLU ) - MLU ),( MUM + ( RRSe / DS ) ) ) ) ) )", "obj1": 0.8924302788844621, "obj2": 0.05557852266637949}, {"determining": "Min( ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( Max( PN,ARS ) + FirstVNF_RAM_Server ) ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( FirstVNF_CPU + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ( Max( Const,BR ) * CRS ) - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( ( CS * Max( ( MUR + CS ),Min( DS ,MLU ) ) ) + CS ) ) )", "obj1": 0.300796812749004, "obj2": 0.5676918268782152}, {"determining": "Min( ( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) + ( Max( PN,ARS ) + BR ) ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Max( FirstVNF_CPU,( Max( ACS,AMS ) / Const ) ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ( Max( Const,BR ) * CRS ) - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( CS + CS ),( DS - Max( CS,MUM ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5890567764986324}, {"determining": "( ( ( ( BR / ( FirstVNF_Mem / Min( FirstVNF_Mem ,Max( ( Const * ARS ),Min( ACS ,MDR ) ) ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( ACS / ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem ,Min( CRS ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - ( MRS * AMS ) ) )", "choosing": "( Max( ( MLU / MUM ),Max( RMSe,( RMSe + RMSe ) ) ) + ( MUR / Max( ( ( ( ( CS + ( CS - MUM ) ) + MUR ) + DS ) - DS ),( Min( ( RCSe + RCSe ) ,MLU ) / RCSe ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.3137394800069238}, {"determining": "( ( ( ( Max( BR,BR ) / ( ( Max( FirstVNF_CPU,DDR ) * FirstVNF_Mem ) * Min( ( ARS + ( MRS * FirstVNF_RAM_Server ) ) ,Const ) ) ) - FirstVNF_Mem ) - FirstVNF_CPU ) + ( ( ( ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / AMS ) ) ) + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( RCSe * CS ) * ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS * CS ) - Max( RRSe,( ( DS - MUR ) * ( MUM / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.2968127490039841, "obj2": 0.5754668226131088}, {"determining": "( ( FirstVNF_CPU_Server + Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,FirstVNF_RAM_Server ) ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( FirstVNF_RAM_Server / AMS ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( MUR,( MUR * MUC ) ) * RRSe ) ,Max( RMSe,( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + Min( MUR ,RMSe ) ) ) )", "obj1": 0.9920318725099602, "obj2": 0.0025431885204270136}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( BR * FirstVNF_RAM ) ) / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,BR ) ) ) ) ) ) + AMS ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.20645375017193585}, {"determining": "( ( FirstVNF_Mem + Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2151394422310757, "obj2": 0.6724487615987617}, {"determining": "( ( FirstVNF_Mem + Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,( RRS + FirstVNF_CPU ) ) ) ,( Max( Min( PN ,Const ),CRS ) * PN ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MUM - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MUR ) ) * ( MUC / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21115537848605578, "obj2": 0.6770035627298239}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * ( ( Min( ARS ,PN ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( MLU - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( ( RRSe * MUR ),DS ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.3047808764940239, "obj2": 0.5601356701770743}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( PN / RRS ) / ( FirstVNF_CPU - ( RRS / Max( PN,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.8187250996015937, "obj2": 0.10511940605934705}, {"determining": "( ( DDR * FirstVNF_RAM ) - ( ( Min( PN ,ACS ) - Min( DDR ,MRS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( FirstVNF_CPU_Server,MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( MUC / ( MUM / MLU ) ) / ( ( CS * ( MUC / CS ) ) * Min( RCSe ,MLU ) ) )", "obj1": 0.9043824701195219, "obj2": 0.04173859119837973}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( RRS + FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / ( DDR - ( ( ( ARS + FirstVNF_Mem ) / ( ( DDR / FirstVNF_RAM ) + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( ( CS - Min( Max( ( ( RRSe / ( MUM + MUC ) ) - RRSe ),CS ) ,DS ) ) ,( ( ( ( MLU - MUR ) * RMSe ) - Max( ( MUR + CS ),Min( DS ,MLU ) ) ) - ( ( Min( ( RCSe * RMSe ) ,RCSe ) + RMSe ) + RCSe ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6090516733343485}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) / PN ) * ( FirstVNF_CPU - Max( RRS,Max( MRS,FirstVNF_RAM_Server ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ),( ( MUM * Max( CS,DS ) ) + ( ( ( DS / ( RMSe * MUM ) ) - RMSe ) * MUR ) ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.8545816733067729, "obj2": 0.0741546876192399}, {"determining": "( Min( Max( ( PN * Const ),( FirstVNF_CPU_Server * AMS ) ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUM,( RRSe - MUM ) ) + CS ) * ( ( MUM * DS ) / ( MUM + Max( RMSe,DS ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3187250996015936, "obj2": 0.5542942438841949}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( ( ACS / PN ) * ( ( ( FirstVNF_RAM - ( FirstVNF_RAM - Const ) ) + ( CRS * DDR ) ) * ( FirstVNF_CPU - ( RRS / Max( Const,BR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( Max( MUM,DS ) - ( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) )", "obj1": 0.9840637450199203, "obj2": 0.006359064623229089}, {"determining": "( ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / FirstVNF_RAM_Server ) + ( BR / Max( FirstVNF_RAM,( FirstVNF_Mem + Const ) ) ) ) ) ) + Max( Const,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( MUR + DS ) + Min( CS ,( ( ( RRSe + RRSe ) - RMSe ) / ( MLU * DS ) ) ) )", "obj1": 0.896414342629482, "obj2": 0.05018595979812172}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ),MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.7131474103585658, "obj2": 0.20349691383510463}, {"determining": "( ( Max( FirstVNF_Mem_Server,ACS ) * BR ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RMSe * ( MLU - MUR ) ) - Max( ( CS + CS ),Min( ( RRSe - CS ) ,MLU ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5778551416925044}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.8466135458167331, "obj2": 0.07720733500877655}, {"determining": "( ( FirstVNF_CPU + ( RRS * Max( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,( ACS + Min( MRS ,FirstVNF_Mem ) ) ) ),( AMS * FirstVNF_Mem_Server ) ) ) ) + PN )", "choosing": "( ( RRSe * Min( ( Min( MUC ,CS ) + Min( DS ,MUR ) ) ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.24701195219123506, "obj2": 0.650987942236107}, {"determining": "( Min( MDR ,RRS ) * Min( Max( MRS,BR ) ,( ( ( FirstVNF_Mem + Min( FirstVNF_CPU ,( ACS + ARS ) ) ) + ( FirstVNF_CPU + BR ) ) / ARS ) ) )", "choosing": "Max( ( MUC / DS ),Min( ( MUM + ( ( Min( RRSe ,MLU ) - ( ( DS / ( RMSe * DS ) ) + MUR ) ) + ( DS * MLU ) ) ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7875932292237727}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,Min( ( ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( ( MRS / FirstVNF_Mem ) / ( MDR / PN ) ) ) ) * CRS ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( CS,( Min( RRSe ,MUM ) * DS ) ) ,MUM ) - Max( ( CS + MLU ),Min( CS ,MLU ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5787261828048798}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - Max( ( ( FirstVNF_CPU_Server * RRS ) - Min( FirstVNF_RAM_Server ,Const ) ),( Min( PN ,ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( RRSe,( ( ( ( ( DS / Max( MUM,RRSe ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( MUR,( RRSe - MUM ) ) + CS ) ) ) / Max( RCSe,MUR ) )", "obj1": 0.6354581673306773, "obj2": 0.24077250276020615}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5872507144768632}, {"determining": "( ( AMS / ( CRS * FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( ( MLU - MUR ) / ( ( MLU + MUC ) / RMSe ) ) - Max( ( MLU + ( RCSe / DS ) ),Min( DS ,MUC ) ) )", "obj1": 0.2549800796812749, "obj2": 0.6126773818715257}, {"determining": "Min( ( ( CRS - FirstVNF_CPU ) + Max( ( Max( ARS,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) * FirstVNF_CPU_Server ),( Const - FirstVNF_CPU_Server ) ) ) ,Max( ( ( Const / FirstVNF_Mem ) / ( DDR * MRS ) ),Min( RRS ,MDR ) ) )", "choosing": "( ( MUC / ( CS * Min( RRSe ,DS ) ) ) / ( MUM + Max( ( ( ( ( MUR + MLU ) * MLU ) - RRSe ) / RRSe ),RRSe ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6980012356159689}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS - PN ) * ( FirstVNF_CPU - ( AMS / FirstVNF_RAM ) ) ) ) ) + AMS ) )", "choosing": "Min( ( RCSe * Max( ( MUC / DS ),Min( ( DS + MUC ) ,Min( Min( ( MUC / Max( MUC,RRSe ) ) ,RRSe ) ,MLU ) ) ) ) ,( MLU / MUR ) )", "obj1": 0.8027888446215139, "obj2": 0.13138857985764454}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( CRS * ( ( ( ARS / PN ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( ( ( MRS + ( RRS + MDR ) ) * CRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( ( CS * RRSe ) + ( ( ( ( ( MLU + RMSe ) / ( MLU + DS ) ) + ( ( RCSe + CS ) * RMSe ) ) - CS ) / DS ) ) ) )", "obj1": 0.9442231075697212, "obj2": 0.022525852856633596}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),CRS ) ,CRS ) * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / AMS ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( DS + MUR ),RRSe ) ) + CS ) ) )", "obj1": 0.8605577689243028, "obj2": 0.0714290988561308}, {"determining": "( ( AMS * ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) ) / ( Const / FirstVNF_RAM ) )", "choosing": "Min( ( Max( ( MUR * MUC ),( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5302114482949509}, {"determining": "( ( ( ( FirstVNF_Mem + Min( BR ,FirstVNF_RAM ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - FirstVNF_Mem ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( Max( RRSe,DS ) * ( DS + ( ( Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) * ( RRSe / ( MLU - CS ) ) ) / MUM ) ) ) ) / ( RCSe + DS ) )", "obj1": 0.898406374501992, "obj2": 0.04456079545844847}, {"determining": "( ( ( ( Min( Min( ARS ,( AMS / ( CRS / Const ) ) ) ,FirstVNF_Mem ) - MRS ) - ACS ) / FirstVNF_CPU_Server ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( ( CS + Min( MUM ,DS ) ) * Min( ( RRSe - CS ) ,MLU ) ) - ( ( ( CS - Max( MUR,MLU ) ) * RRSe ) / ( MLU - MUR ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5845814126194544}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,MDR ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( DS + Min( ( MUR - ( MLU + CS ) ) ,MUM ) )", "obj1": 0.9581673306772909, "obj2": 0.016854565898730963}, {"determining": "Min( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( FirstVNF_CPU_Server * AMS ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5854684200882512}], "13": [{"determining": "( Min( MDR ,FirstVNF_RAM_Server ) - ( ( CRS * ( ( FirstVNF_RAM_Server / CRS ) * ( ( ( RRS - BR ) / FirstVNF_RAM ) * RRS ) ) ) + AMS ) )", "choosing": "( ( RRSe * ( MUR / MUM ) ) / ( ( MLU * DS ) - Max( MUR,Max( ( ( ( MUM + ( MUR / CS ) ) - MLU ) - MLU ),( RMSe + ( ( Max( CS,RCSe ) / MUC ) * ( ( MUC * RRSe ) / ( DS + MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - Max( CRS,MDR ) ) + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,FirstVNF_CPU_Server ) ) ) ) ) ) + AMS ) )", "choosing": "( Max( ( CS + Max( RCSe,( Max( ( CS * DS ),RCSe ) - ( RMSe / MUC ) ) ) ),Min( DS ,MLU ) ) - ( Max( Max( ( Min( MUM ,MUR ) + DS ),( RCSe + ( RCSe + RCSe ) ) ),DS ) + Max( MUR,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( Max( Const,BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,BR ) ) ,AMS ) ) ) - DDR ) ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * RMSe ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.29351684822305674}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) ) + AMS ) )", "choosing": "( DS + Min( ( MUR - ( MLU + CS ) ) ,MUM ) )", "obj1": 0.7569721115537849, "obj2": 0.14936179660385798}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * ( ( ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - ARS ) ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( MLU - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( Max( CS,( RRSe - MUM ) ),DS ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.3346613545816733, "obj2": 0.52344846769943}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) + BR ) )", "choosing": "( ( ( ( MLU / ( ( ( MUR + CS ) - ( MUR - RMSe ) ) * MLU ) ) / ( MUC / ( CS * ( MLU + ( ( MUM * MUC ) * ( CS * MUR ) ) ) ) ) ) / Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,RRSe ) ) / Min( RCSe ,( ( MUC * MUC ) / ( Max( ( Max( MLU,Min( MUM ,DS ) ) - RRSe ),Min( RRSe ,MLU ) ) - MUM ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4540756593616091}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "( ( ( RMSe - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.7191235059760956, "obj2": 0.1687058459461212}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( PN / ( DDR * ( FirstVNF_Mem + Max( ACS,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - FirstVNF_CPU ) )", "choosing": "Min( ( CS * RRSe ) ,( ( MUR * RRSe ) - Min( CS ,Max( MUM,RMSe ) ) ) )", "obj1": 0.5557768924302788, "obj2": 0.3124158961096815}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + Max( MRS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) + ( ( Max( DDR,Max( ARS,Const ) ) * ( PN * ACS ) ) - PN ) ) + ( ( FirstVNF_CPU / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM * FirstVNF_CPU ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MUM ) * ( RMSe / MUM ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.49865653294254103}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( ( RRSe - RMSe ) * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.426607348550332}, {"determining": "( ( ( ACS + ( ( ( Min( Max( DDR,ACS ) ,FirstVNF_Mem ) + Max( MRS,( DDR + FirstVNF_CPU_Server ) ) ) * MDR ) + ( FirstVNF_CPU_Server - PN ) ) ) + BR ) - ( PN / FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( CS ,Min( Max( MLU,( Min( CS ,( MLU - MUR ) ) / Max( MLU,DS ) ) ) ,( RCSe * ( MUC / MLU ) ) ) ) ) - Max( ( MLU + CS ),Min( DS ,RCSe ) ) )", "obj1": 0.6055776892430279, "obj2": 0.2675831356670546}, {"determining": "( ( ( ( Max( DDR,( Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( ACS,CRS ) ) + RRS ) ) / PN ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM / MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( CS / RCSe ) ) ) ) ) ) ,( ( Min( MLU ,( CS * RRSe ) ) + ( RRSe / ( ( ( MUR / MUC ) + RCSe ) + Min( MUC ,( MUC + DS ) ) ) ) ) - ( CS + CS ) ) ) )", "obj1": 0.4601593625498008, "obj2": 0.39423349274819447}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR - ( PN / ( Max( ARS,Min( Const ,DDR ) ) * Min( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) ) ) + ( ( ( Max( ( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) * FirstVNF_RAM ),ARS ) + CRS ) / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( Max( ( MLU - Max( MUC,RRSe ) ),DS ) * RCSe ) - ( CS * ( RCSe - ( CS / RRSe ) ) ) ) ) ) + ( RCSe / Min( MLU ,MUR ) ) )", "obj1": 0.39243027888446214, "obj2": 0.4660131155585617}, {"determining": "( ( ( ( PN + ( Min( Min( ARS ,Max( BR,BR ) ) ,AMS ) * ( FirstVNF_Mem - ( ACS - MDR ) ) ) ) - DDR ) - FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( Min( Max( RCSe,( RCSe / ( Max( ( Max( RRSe,MUR ) / Min( MUM ,MUC ) ),( ( RMSe - RRSe ) - CS ) ) * RMSe ) ) ) ,( MUR + ( Min( MUM ,Max( MUC,MUC ) ) * MUC ) ) ) / ( ( RCSe + CS ) / ( MUM * RRSe ) ) )", "obj1": 0.5338645418326693, "obj2": 0.33397693523632505}, {"determining": "( Min( MDR ,RRS ) * Min( Max( MRS,BR ) ,( ( ( FirstVNF_Mem + ( PN - FirstVNF_RAM_Server ) ) + ( BR + Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) / ARS ) ) )", "choosing": "Max( Max( MUR,MUM ),Min( ( MUM + ( ( Min( RRSe ,MLU ) - ( ( DS / ( RMSe * DS ) ) - ( MUR * RRSe ) ) ) + ( DS * MLU ) ) ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7835773299904639}, {"determining": "Min( ( ( FirstVNF_RAM - ( RRS + FirstVNF_CPU ) ) * ( ( FirstVNF_RAM - Max( MDR,ARS ) ) * FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( RRS + FirstVNF_CPU ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( Max( CS,( MUC * ( Min( MUC ,( CS + MUR ) ) - CS ) ) ) + MUC ) ,( ( RCSe - DS ) / Min( ( MUC / ( CS / Min( RRSe ,DS ) ) ) ,RRSe ) ) ) ,( RCSe - ( CS + RCSe ) ) )", "obj1": 0.4581673306772908, "obj2": 0.42026888279740704}, {"determining": "( Max( ( ( PN / ( Max( CRS,( CRS - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) * Min( ( MRS - DDR ) ,AMS ) ) ) - DDR ),FirstVNF_CPU ) + ( ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RCSe / ( ( MUM / RMSe ) - CS ) ) * RCSe ) + CS ) - ( MUM * RRSe ) ) / Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe + Min( Max( Min( DS ,MUM ),Min( RRSe ,DS ) ) ,DS ) ) ,( RRSe - Min( MLU ,Min( ( CS - DS ) ,( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.5139442231075697, "obj2": 0.34647163525536}, {"determining": "( ( MRS / ( FirstVNF_RAM + CRS ) ) + Min( Min( MDR ,FirstVNF_CPU_Server ) ,AMS ) )", "choosing": "( ( CS * ( ( RMSe / ( RRSe * DS ) ) * ( RMSe / ( ( RMSe - ( RMSe / ( RRSe - RRSe ) ) ) * RMSe ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1752988047808765, "obj2": 0.7180890140711713}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem - ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( Min( ( MUR + ( RRSe + CS ) ) ,( Max( DS,RCSe ) * CS ) ) ,RCSe ),( Min( RMSe ,Max( RCSe,MUR ) ) * ( ( MLU / MLU ) / RCSe ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.40039840637450197, "obj2": 0.4585389494064436}, {"determining": "( ( FirstVNF_CPU_Server + Const ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( ( RRS / Max( MDR,FirstVNF_RAM ) ) - FirstVNF_CPU ) ) ) ) + AMS ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( RCSe * ( Min( MUR ,Max( MUM,MUM ) ) / Min( Max( MUM,MUM ) ,MLU ) ) ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS * CS ) - Max( RRSe,( ( MLU - MUR ) * ( MLU / MUC ) ) ) ) ) ) ,( RRSe - ( CS + CS ) ) ) )", "obj1": 0.8386454183266933, "obj2": 0.08482374463293005}, {"determining": "( Max( ( MRS / ARS ),FirstVNF_CPU ) - ( PN - ( ( AMS - BR ) - Const ) ) )", "choosing": "( Min( Min( Min( ( RRSe + ( Max( Min( DS ,MUM ),Min( CS ,MUC ) ) / ( MUR + Min( DS ,MLU ) ) ) ) ,( RRSe - Min( MLU ,Min( ( CS - DS ) ,CS ) ) ) ) ,( Max( CS,( ( RRSe - RRSe ) + DS ) ) - MLU ) ) ,MUR ) / ( MUM + MUC ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / ( MUM + Max( CS,DS ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.32270916334661354, "obj2": 0.5444982532559801}, {"determining": "( ( Max( ( Max( Const,( Max( CRS,ACS ) - MRS ) ) * CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RCSe * DS ) ) * ( ( RCSe * ( RRSe * ( Max( MLU,MLU ) + ( MUM - DS ) ) ) ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7545905761175521}, {"determining": "Min( Max( CRS,MRS ) ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) - ( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - RMSe ) * RMSe ) - Max( ( MUR + ( MLU / ( Min( MUM ,( RRSe - MUC ) ) * DS ) ) ),Min( DS ,MLU ) ) )", "obj1": 0.250996015936255, "obj2": 0.6414461930023828}, {"determining": "( ( ( ( PN / ( ( FirstVNF_Mem + DDR ) * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.18269044081545496}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server - ( ( PN / ARS ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MDR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( ( ( ( ( DS / ( CS / MLU ) ) / ( RRSe / RRSe ) ) / MUM ) / DS ),( ( MUM + Max( CS,DS ) ) + ( ( ( MUC * Max( CS,MUM ) ) + ( MUC * CS ) ) * MUR ) ) ) * RRSe ) ,( RCSe - ( CS / MLU ) ) )", "obj1": 0.8824701195219123, "obj2": 0.056937742440292365}, {"determining": "( ( ( ( PN / ( Max( MDR,DDR ) * ( Min( ( CRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + RRS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * MUR ) ,( MUC - ( ( ( ( MUC - Min( ( MUR * RMSe ) ,RMSe ) ) - Min( DS ,MUC ) ) - ( Max( ( ( RMSe / MUR ) * Min( MUC ,CS ) ),MUR ) * MUR ) ) + CS ) ) )", "obj1": 0.4860557768924303, "obj2": 0.3694928367611208}, {"determining": "( Min( Max( Min( FirstVNF_Mem ,( ( AMS * Min( BR ,PN ) ) + MDR ) ),MDR ) ,( RRS + FirstVNF_CPU ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( DS ,MLU ) * ( DS / ( CS / MLU ) ) ) / ( MUM * CS ) ) / DS ) ) ) / Min( ( RCSe * MLU ) ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.6811622624365571}, {"determining": "( ( FirstVNF_CPU + BR ) + ( RRS + Min( ( BR - FirstVNF_CPU ) ,( ACS + Min( PN ,( Max( FirstVNF_RAM,( FirstVNF_RAM * Const ) ) / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( CS,( RRSe - MUM ) ) * CS ) * ( ( Max( MUR,( ( CS / MLU ) / DS ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1553784860557769, "obj2": 0.7519080534792741}, {"determining": "( ( FirstVNF_CPU_Server - BR ) - Min( FirstVNF_CPU ,ARS ) )", "choosing": "( ( ( RMSe - MUR ) * RMSe ) - ( ( MLU + CS ) / Min( DS ,( ( Min( Min( DS ,MLU ) ,MLU ) - MUR ) - Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.7768924302788844, "obj2": 0.14012111973153982}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / AMS ) ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( MLU - ( ( ( CS * MUR ) + CS ) * Min( MUC ,RRSe ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.10195324346470083}, {"determining": "( ( ( FirstVNF_RAM_Server + ARS ) * CRS ) / ( Min( ( ARS * FirstVNF_Mem ) ,MRS ) * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( CS - ( RRSe - MUC ) ) ) / RMSe ) / DS ) ) * RRSe ) / Min( Min( CS ,Max( MUM,RMSe ) ) ,DS ) )", "obj1": 0.12350597609561753, "obj2": 0.7883038445162912}, {"determining": "( ( MRS * BR ) + Max( MRS,BR ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe - ( Min( CS ,Min( ( RCSe - ( DS - ( MUR + MUC ) ) ) ,MUR ) ) - MUR ) ) )", "obj1": 0.37649402390438247, "obj2": 0.4968801628585156}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / AMS ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( DS + Min( RMSe ,MUM ) ),RRSe ) ) + CS ) ) )", "obj1": 0.8645418326693227, "obj2": 0.0677550436766621}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "( ( RRSe * Min( MUM ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.6872509960159362, "obj2": 0.22028049389761428}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( RCSe * RMSe ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.49800796812749004, "obj2": 0.3630764640758648}, {"determining": "( ( FirstVNF_Mem + Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,( Max( Min( FirstVNF_Mem ,DDR ),MDR ) + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( MUR - MUC ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.25298804780876494, "obj2": 0.615478456635947}, {"determining": "( ( DDR * FirstVNF_RAM ) - ( ( Min( PN ,ACS ) - Min( DDR ,MRS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( FirstVNF_CPU_Server,MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( MUC / ( MUM / MLU ) ) / ( ( CS * ( MUC / CS ) ) * Min( RCSe ,MLU ) ) )", "obj1": 0.9043824701195219, "obj2": 0.04173859119837973}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - ( RMSe * ( MLU - MUR ) ) ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.6733067729083665, "obj2": 0.2228033173334431}, {"determining": "( Min( Max( ( PN * Const ),( FirstVNF_CPU_Server * AMS ) ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUM,( RRSe - MUM ) ) + CS ) * ( ( MUM * DS ) / ( MUM + Max( RMSe,DS ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3187250996015936, "obj2": 0.5542942438841949}, {"determining": "( ( ( ( PN / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( ( ( FirstVNF_Mem + ARS ) / Max( FirstVNF_RAM_Server,ARS ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) + ( ( RMSe * MUM ) - MUM ) ) / ( RCSe + MUC ) )", "obj1": 0.6553784860557769, "obj2": 0.2231300181971354}, {"determining": "( ( ( ( PN / ( ( ( BR - BR ) / FirstVNF_CPU_Server ) * DDR ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( RCSe + MUC ) ) - RRSe ) / Max( RRSe,Min( MUM ,MUR ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.50199203187251, "obj2": 0.3516785946348392}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - Max( ( ( FirstVNF_CPU_Server * RRS ) - Min( FirstVNF_RAM_Server ,Const ) ),( Min( PN ,ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( RRSe,( ( ( ( ( DS / Max( MUM,RRSe ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( MUR,( RRSe - MUM ) ) + CS ) ) ) / Max( RCSe,MUR ) )", "obj1": 0.6354581673306773, "obj2": 0.24077250276020615}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( AMS + ( CRS * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( MDR - ( MRS / RRS ) ) ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) * RMSe ) - Min( ( RCSe + RMSe ) ,Min( MUC ,( RRSe * MUR ) ) ) )", "obj1": 0.6314741035856574, "obj2": 0.2633478259400984}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * ( ( Min( ARS ,PN ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( MLU - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( ( RRSe * MUR ),DS ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.3047808764940239, "obj2": 0.5601356701770743}, {"determining": "( ( FirstVNF_Mem + Min( ( ( Max( Const,BR ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.23107569721115537, "obj2": 0.6621671537038124}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Max( DDR,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( ( RRS + ( AMS * ( CRS + FirstVNF_CPU ) ) ) ,CRS ) ,PN ) ) ) )", "choosing": "( Min( CS ,RRSe ) + ( ( ( ( Min( MUM ,MUR ) + Min( ( DS / MUR ) ,Max( Max( DS,MUC ),RMSe ) ) ) / MUR ) - ( CS + CS ) ) / CS ) )", "obj1": 0.9621513944223108, "obj2": 0.015273301348765157}, {"determining": "( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - BR ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Min( ( ( AMS * AMS ) + BR ) ,FirstVNF_Mem_Server ) ) ) ) + ( ACS * BR ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( ( Min( MUM ,( RMSe - ( RMSe / MLU ) ) ) / MUM ) / MUM ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6003092773078749}, {"determining": "( ( ( ( PN / ( DDR * Min( ( Max( ARS,MDR ) + Max( FirstVNF_Mem_Server,MRS ) ) ,RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + MUM ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( MUM / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.4760956175298805, "obj2": 0.38630731125021645}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( BR / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( MUM * MUC ) * ( ( ( Min( MUC ,( MUR / CS ) ) / Min( MLU ,( MUR * MUR ) ) ) / RCSe ) * MUR ) ) ,Min( Max( ( MLU + RMSe ),RCSe ) ,MLU ) ) )", "obj1": 0.796812749003984, "obj2": 0.13529753591207364}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( MDR * RRS ) - Min( Min( Max( FirstVNF_CPU_Server,MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( CS - MLU )", "obj1": 0.9422310756972112, "obj2": 0.02712578634057732}, {"determining": "( Max( ( ( ( ( PN * DDR ) - Min( PN ,CRS ) ) / FirstVNF_RAM ) + FirstVNF_CPU ),( FirstVNF_RAM_Server - ( BR - FirstVNF_Mem ) ) ) + Max( ARS,PN ) )", "choosing": "Min( ( RRSe * CS ) ,( ( MUR * RRSe ) - Min( CS ,Max( ( ( RCSe - CS ) - Max( CS,Max( RCSe,Min( MUR ,MLU ) ) ) ),RMSe ) ) ) )", "obj1": 0.6235059760956175, "obj2": 0.26525057931541923}, {"determining": "( ( ( ( MDR + MRS ) - ( ( ARS / FirstVNF_CPU_Server ) * ( AMS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) + AMS ) - Max( FirstVNF_CPU_Server,BR ) )", "choosing": "Min( Max( RCSe,( DS + MUC ) ) ,( Max( ( MUM / ( MUR + Max( ( RRSe * Min( RMSe ,MLU ) ),CS ) ) ),RRSe ) * MUM ) )", "obj1": 0.9800796812749004, "obj2": 0.007736285462954932}, {"determining": "( ( FirstVNF_Mem + Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.19322709163346613, "obj2": 0.6971260082863238}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * ( MUR + CS ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9203187250996016, "obj2": 0.032439207820077615}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( ( FirstVNF_Mem + Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,( RRS + FirstVNF_CPU ) ) ) ,( Max( Min( PN ,Const ),CRS ) * PN ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MUM - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MUR ) ) * ( MUC / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21115537848605578, "obj2": 0.6770035627298239}, {"determining": "( ( Const + BR ) + ( FirstVNF_Mem + ( Min( Const ,FirstVNF_Mem ) / DDR ) ) )", "choosing": "( Max( Max( ( RCSe - MLU ),( Min( Min( ( DS * DS ) ,DS ) ,DS ) / RMSe ) ),( ( ( Min( ( RRSe * ( RMSe + RRSe ) ) ,DS ) + MUM ) / DS ) / Max( DS,( MUC / ( RMSe + MUC ) ) ) ) ) / Min( ( RMSe / MLU ) ,DS ) )", "obj1": 0.16533864541832669, "obj2": 0.7420027705100096}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ),MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - CRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RCSe ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.7131474103585658, "obj2": 0.20349691383510463}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.3819435577119115}, {"determining": "Min( Min( Max( ( ( Max( MRS,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - BR ) ) - FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + Max( PN,ARS ) ) ),Max( MDR,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ,Max( ( FirstVNF_RAM + PN ),( ( Const - ( Max( Const,BR ) * ( Min( FirstVNF_RAM ,DDR ) / ACS ) ) ) / Max( ARS,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( ( RRSe * CS ) + ( DS / ( ( MLU + Max( MLU,( RRSe / MUR ) ) ) - CS ) ) ) ) )", "obj1": 0.2410358565737052, "obj2": 0.654388850020039}, {"determining": "( ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( DDR / Max( BR,MRS ) ) ) ) ) ) + AMS ) - ( FirstVNF_CPU_Server + BR ) )", "choosing": "( CS - ( Max( CS,DS ) * RCSe ) )", "obj1": 0.8067729083665338, "obj2": 0.10958087500993277}, {"determining": "( ( FirstVNF_Mem + Max( ( ACS / BR ),Max( FirstVNF_RAM_Server,BR ) ) ) + ( ( BR / ( FirstVNF_Mem / ( ( FirstVNF_CPU / RRS ) * FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Max( CS,( MUR + MUM ) ) / ( ( DS / Max( RCSe,( ( RCSe * ( MUC / DS ) ) - Min( CS ,RMSe ) ) ) ) * RRSe ) )", "obj1": 0.17330677290836655, "obj2": 0.7380880723871411}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.8466135458167331, "obj2": 0.07720733500877655}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( ARS + RRS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( CRS / ACS ) - FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,RRSe ) ,( ( MUR * RRSe ) - Min( ( CS * MUR ) ,Max( MUM,RMSe ) ) ) )", "obj1": 0.5438247011952191, "obj2": 0.3251072904412896}, {"determining": "( ( ( ( PN + ( Min( Min( ARS ,Max( BR,BR ) ) ,AMS ) * ( FirstVNF_Mem - ( ACS - MDR ) ) ) ) - DDR ) - FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( Min( Max( RCSe,( RCSe / ( Max( ( Max( RRSe,MUR ) / Min( MUM ,MUC ) ),( ( RMSe - RRSe ) - CS ) ) * RMSe ) ) ) ,( MUR + ( Min( MUM ,Max( MUC,MUC ) ) * MUC ) ) ) / ( ( RCSe + CS ) / ( MUM * RRSe ) ) )", "obj1": 0.545816733067729, "obj2": 0.3207415421456932}, {"determining": "( ( ACS + BR ) - ( ( MDR - ACS ) + ACS ) )", "choosing": "Min( ( CS * MUM ) ,( RMSe - ( MUR + DS ) ) )", "obj1": 0.7808764940239044, "obj2": 0.13621786342598824}, {"determining": "Min( ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( Max( PN,ARS ) + FirstVNF_RAM_Server ) ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( FirstVNF_CPU + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ( Max( Const,BR ) * CRS ) - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( ( CS * Max( ( MUR + CS ),Min( DS ,MLU ) ) ) + CS ) ) )", "obj1": 0.300796812749004, "obj2": 0.5676918268782152}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( Max( MRS,BR ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),( ( MUR * MUC ) * MUC ) ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.798804780876494, "obj2": 0.12417061076297471}, {"determining": "Min( ( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) + ( Max( PN,ARS ) + BR ) ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Max( FirstVNF_CPU,( Max( ACS,AMS ) / Const ) ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ( Max( Const,BR ) * CRS ) - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( CS + CS ),( DS - Max( CS,MUM ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5890567764986324}, {"determining": "( ( FirstVNF_CPU + ( RRS * Max( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,( ACS + Min( MRS ,FirstVNF_Mem ) ) ) ),( AMS * FirstVNF_Mem_Server ) ) ) ) + PN )", "choosing": "( ( RRSe * Min( ( Min( MUC ,CS ) + Min( DS ,MUR ) ) ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.24701195219123506, "obj2": 0.650987942236107}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS + ( DDR / FirstVNF_CPU_Server ) ) + AMS ) )", "choosing": "( ( Min( MUM ,RRSe ) * RMSe ) / ( MUC - MUC ) )", "obj1": 0.8047808764940239, "obj2": 0.12034430844553205}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( FirstVNF_RAM_Server ,Const ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( MUR,( RRSe - MUM ) ) + CS ) ) ) / Max( MUR,RCSe ) )", "obj1": 0.6434262948207171, "obj2": 0.23486812979786206}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) / PN ) * ( FirstVNF_CPU - Max( RRS,Max( MRS,FirstVNF_RAM_Server ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ),( ( MUM * Max( CS,DS ) ) + ( ( ( DS / ( RMSe * MUM ) ) - RMSe ) * MUR ) ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.8545816733067729, "obj2": 0.0741546876192399}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( BR * FirstVNF_RAM ) ) / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,BR ) ) ) ) ) ) + AMS ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.21231723542187267}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( CRS * ( ( ( ARS / PN ) * ( ( Min( FirstVNF_RAM_Server ,DDR ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( ( ( MRS + ( RRS + MDR ) ) * CRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( ( CS * RRSe ) + ( ( ( ( ( MLU + RMSe ) / ( MLU + DS ) ) + ( ( RCSe + CS ) * RMSe ) ) - CS ) / DS ) ) ) )", "obj1": 0.9442231075697212, "obj2": 0.022525852856633596}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) ) ,Max( Min( Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( RRS + FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / ( DDR - ( ( ( ARS + FirstVNF_Mem ) / ( ( DDR / FirstVNF_RAM ) + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( ( CS - Min( Max( ( ( RRSe / ( MUM + MUC ) ) - RRSe ),CS ) ,DS ) ) ,( ( ( ( MLU - MUR ) * RMSe ) - Max( ( MUR + CS ),Min( DS ,MLU ) ) ) - ( ( Min( ( RCSe * RMSe ) ,RCSe ) + RMSe ) + RCSe ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6090516733343485}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,ACS ) - Min( DDR ,ACS ) ) / ( ( AMS / CRS ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) ) ) + Min( DDR ,ARS ) ) + ( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe * MLU ) * ( MLU / DS ) ) ) / ( DS + RCSe ) )", "obj1": 0.8884462151394422, "obj2": 0.050243154090234145}, {"determining": "( ( CRS * Max( Const,BR ) ) / ( ( ( ARS - Const ) / ( DDR - ( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / MDR ) ) * ( ( MDR * RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe * ( ( RMSe / ( RRSe * ( MUR + CS ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( ( MUM * MLU ) ,DS ) )", "obj1": 0.22310756972111553, "obj2": 0.6674760271796291}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,MDR ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( ( RMSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( MLU - Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( BR * FirstVNF_RAM ) ) / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,BR ) ) ) ) ) ) + AMS ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.20645375017193585}, {"determining": "( ( CRS + Max( ( BR / FirstVNF_CPU ),MRS ) ) / ( ARS * PN ) )", "choosing": "( Min( RRSe ,( ( ( Max( ( RRSe / Min( RMSe ,CS ) ),MUR ) / MUM ) / DS ) * ( RMSe / ( ( ( DS / Min( RRSe ,RRSe ) ) + Max( MLU,CS ) ) + Min( MUC ,( RMSe + ( CS * RRSe ) ) ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ),MRS ) / ( FirstVNF_Mem_Server + ( ( ( Const - ( Min( ACS ,ACS ) + MRS ) ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RCSe ,DS ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.9820717131474104, "obj2": 0.005651714073685307}, {"determining": "( ( ( ( FirstVNF_Mem + Min( BR ,FirstVNF_RAM ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - FirstVNF_Mem ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( Max( RRSe,DS ) * ( DS + ( ( Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) * ( RRSe / ( MLU - CS ) ) ) / MUM ) ) ) ) / ( RCSe + DS ) )", "obj1": 0.898406374501992, "obj2": 0.04456079545844847}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( FirstVNF_CPU_Server + Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) )", "choosing": "( ( RRSe * ( Max( RRSe,DS ) * ( ( ( Max( ( MUM / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / ( RCSe + DS ) )", "obj1": 0.8605577689243028, "obj2": 0.06929394777634172}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / ARS ) ) ) ) ) + AMS ) )", "choosing": "( ( ( CS - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( RRSe + RRSe ) ) ) )", "obj1": 0.8167330677290837, "obj2": 0.105634015500137}, {"determining": "( ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / FirstVNF_RAM_Server ) + ( BR / Max( FirstVNF_RAM,( FirstVNF_Mem + Const ) ) ) ) ) ) + Max( Const,Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( MUR + DS ) + Min( CS ,( ( ( RRSe + RRSe ) - RMSe ) / ( MLU * DS ) ) ) )", "obj1": 0.896414342629482, "obj2": 0.05018595979812172}, {"determining": "( ( FirstVNF_CPU_Server + Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,FirstVNF_RAM_Server ) ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( FirstVNF_RAM_Server / AMS ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( MUR,( MUR * MUC ) ) * RRSe ) ,Max( RMSe,( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + Min( MUR ,RMSe ) ) ) )", "obj1": 0.9920318725099602, "obj2": 0.0025431885204270136}, {"determining": "( ( ( ( Max( BR,BR ) / ( ( Max( FirstVNF_CPU,DDR ) * FirstVNF_Mem ) * Min( ( ARS + ( MRS * FirstVNF_RAM_Server ) ) ,Const ) ) ) - FirstVNF_Mem ) - FirstVNF_CPU ) + ( ( ( ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / AMS ) ) ) + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( RCSe * CS ) * ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS * CS ) - Max( RRSe,( ( DS - MUR ) * ( MUM / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.2968127490039841, "obj2": 0.5754668226131088}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,Min( ( ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( ( MRS / FirstVNF_Mem ) / ( MDR / PN ) ) ) ) * CRS ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( CS,( Min( RRSe ,MUM ) * DS ) ) ,MUM ) - Max( ( CS + MLU ),Min( CS ,MLU ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5787261828048798}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( ( ARS / PN ) * ( ( ARS / PN ) * ( FirstVNF_CPU - ( PN / Max( Const,BR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( MUM ,( MLU - ( ( ( CS * MUR ) + CS ) * Min( MUC ,RRSe ) ) ) )", "obj1": 0.7091633466135459, "obj2": 0.20355754004763696}, {"determining": "( ( FirstVNF_Mem + Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2151394422310757, "obj2": 0.6724487615987617}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5872507144768632}, {"determining": "( ( PN + FirstVNF_Mem ) + ( DDR / ACS ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * Max( ( ( ( DS / ( RMSe / MLU ) ) * ( RRSe / RRSe ) ) / MUM ),DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6686407471310237}, {"determining": "Min( ( ( CRS - FirstVNF_CPU ) + Max( ( Max( ARS,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) * FirstVNF_CPU_Server ),( Const - FirstVNF_CPU_Server ) ) ) ,Max( ( ( Const / FirstVNF_Mem ) / ( DDR * MRS ) ),Min( RRS ,MDR ) ) )", "choosing": "( ( MUC / ( CS * Min( RRSe ,DS ) ) ) / ( MUM + Max( ( ( ( ( MUR + MLU ) * MLU ) - RRSe ) / RRSe ),RRSe ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6980012356159689}, {"determining": "( ( AMS / ( CRS * FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM + ARS ) )", "choosing": "( ( ( MLU - MUR ) / ( ( MLU + MUC ) / RMSe ) ) - Max( ( MLU + ( RCSe / DS ) ),Min( DS ,MUC ) ) )", "obj1": 0.2549800796812749, "obj2": 0.6126773818715257}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,( DDR * ( FirstVNF_CPU_Server + Max( ACS,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( FirstVNF_RAM_Server ,( BR * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUM / ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) ) / DS ) / ( ( RRSe / ( MLU * ( RCSe * MLU ) ) ) + MUM ) ) ) / Max( MUR,RCSe ) )", "obj1": 0.647410358565737, "obj2": 0.23051075708330848}], "14": [{"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU_Server + BR ) + AMS ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( MUM * MUC ) * ( ( ( Min( MUC ,( MUR / CS ) ) / Min( MLU ,( MUR * MUR ) ) ) / RCSe ) * MUR ) ) ,( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_RAM_Server ) - ( ( CRS * ( ( FirstVNF_RAM_Server / CRS ) * ( ( ( RRS - BR ) / FirstVNF_RAM ) * RRS ) ) ) + AMS ) )", "choosing": "( ( RRSe * ( MUR / MUM ) ) / ( ( MLU * DS ) - Max( MUR,Max( ( ( ( MUM + ( MUR / CS ) ) - MLU ) - MLU ),( RMSe + ( ( Max( CS,RCSe ) / MUC ) * ( ( MUC * RRSe ) / ( DS + MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( Max( Const,BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,BR ) ) ,AMS ) ) ) - DDR ) ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * RMSe ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.29351684822305674}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.43824701195219123, "obj2": 0.4128604817198128}, {"determining": "( ( FirstVNF_Mem + Min( ( BR - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( Min( PN ,( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) + FirstVNF_RAM_Server ) ) - ( ARS * ( BR * AMS ) ) ) + BR ) )", "choosing": "( ( ( ( MLU / ( ( ( MUR + CS ) - ( MUR - RMSe ) ) * MLU ) ) / ( MUC / ( CS * ( MLU + ( ( MUM * MUC ) * ( CS * MUR ) ) ) ) ) ) / Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,RRSe ) ) / Min( RCSe ,( ( MUC * MUC ) / ( Max( ( Max( MLU,Min( MUM ,DS ) ) - RRSe ),Min( RRSe ,MLU ) ) - MUM ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.4540756593616091}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( ( RRSe - RMSe ) * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.1846386318798677}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,DDR ) ) ,AMS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ( FirstVNF_RAM * Const ) ) ) ) ) ) )", "choosing": "( Min( MUR ,( ( MUR - ( RCSe * RMSe ) ) + Min( ( RRSe + Min( Max( ( CS / MLU ),Min( MUM ,MUC ) ) ,DS ) ) ,( CS - Min( MLU ,Min( ( CS - DS ) ,CS ) ) ) ) ) ) / ( MUM + MUC ) )", "obj1": 0.6593625498007968, "obj2": 0.2096423553338499}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + Max( MRS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) + ( ( Max( DDR,Max( ARS,Const ) ) * ( PN * ACS ) ) - PN ) ) + ( ( FirstVNF_CPU / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM * FirstVNF_CPU ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MUM ) * ( RMSe / MUM ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.49865653294254103}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ,PN ) ) ) )", "choosing": "( ( ( RMSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) ) - Max( ( MLU + CS ),Min( DS ,( MLU - Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.7191235059760956, "obj2": 0.15977881847772077}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( ( PN / ( DDR * ( FirstVNF_Mem + Max( ACS,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) ) - DDR ) - FirstVNF_CPU ) )", "choosing": "Min( ( CS * RRSe ) ,( ( MUR * RRSe ) - Min( CS ,Max( MUM,RMSe ) ) ) )", "obj1": 0.5557768924302788, "obj2": 0.3124158961096815}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * ( ( ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - ARS ) ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( MLU - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( Max( CS,( RRSe - MUM ) ),DS ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.3346613545816733, "obj2": 0.52344846769943}, {"determining": "( ( ( ACS + ( ( ( Min( Max( DDR,ACS ) ,FirstVNF_Mem ) + Max( MRS,( DDR + FirstVNF_CPU_Server ) ) ) * MDR ) + ( FirstVNF_CPU_Server - PN ) ) ) + BR ) - ( PN / FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( CS ,Min( Max( MLU,( Min( CS ,( MLU - MUR ) ) / Max( MLU,DS ) ) ) ,( RCSe * ( MUC / MLU ) ) ) ) ) - Max( ( MLU + CS ),Min( DS ,RCSe ) ) )", "obj1": 0.6055776892430279, "obj2": 0.2675831356670546}, {"determining": "( ( ( ( PN / ( DDR / Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - MRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_RAM_Server ) ) * ( ( Min( FirstVNF_Mem ,ACS ) - ( FirstVNF_RAM_Server + ARS ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( Min( ( RRSe / ( MUR + MUC ) ) ,RRSe ) - Max( RRSe,( ( CS + MLU ) * Min( MUC ,RRSe ) ) ) ) ) ) ,Min( CS ,( MUM * MLU ) ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6317526071052565}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem - ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( Min( ( MUR + ( RRSe + CS ) ) ,( Max( DS,RCSe ) * CS ) ) ,RCSe ),( Min( RMSe ,Max( RCSe,MUR ) ) * ( ( MLU / MLU ) / RCSe ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.40039840637450197, "obj2": 0.4585389494064436}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) ) ) ) )", "obj1": 0.38247011952191234, "obj2": 0.479956916364848}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( BR / ARS ) ) ) ) ) + AMS ) )", "choosing": "( ( ( Max( RRSe,DS ) - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.7529880478087649, "obj2": 0.1535586408549594}, {"determining": "( ( ( ( PN / ( ( FirstVNF_Mem + DDR ) * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.18269044081545496}, {"determining": "( ( MRS * BR ) + Max( MRS,BR ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe - ( Min( CS ,Min( ( RCSe - ( DS - ( MUR + MUC ) ) ) ,MUR ) ) - MUR ) ) )", "obj1": 0.37649402390438247, "obj2": 0.4968801628585156}, {"determining": "( Min( MDR ,RRS ) * Min( Max( MRS,BR ) ,( ( ( FirstVNF_Mem + ( PN - FirstVNF_RAM_Server ) ) + ( BR + Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) / ARS ) ) )", "choosing": "Max( Max( MUR,MUM ),Min( ( MUM + ( ( Min( RRSe ,MLU ) - ( ( DS / ( RMSe * DS ) ) - ( MUR * RRSe ) ) ) + ( DS * MLU ) ) ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7835773299904639}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - Max( ( ( FirstVNF_CPU_Server * RRS ) - Min( FirstVNF_RAM_Server ,Const ) ),( Min( PN ,ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( RRSe,( ( ( ( ( DS / Max( MUM,RRSe ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( MUR,( RRSe - MUM ) ) + CS ) ) ) / Max( RCSe,MUR ) )", "obj1": 0.6354581673306773, "obj2": 0.24077250276020615}, {"determining": "( ( FirstVNF_CPU - ( ( PN / ( DDR * ( Const + Max( MRS,ACS ) ) ) ) - DDR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) + ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( DS,MUC ) * ( CS * Min( RRSe ,RMSe ) ) ) - Min( CS ,Max( ( DS + ( RMSe - Min( RMSe ,RRSe ) ) ),RMSe ) ) ) ,( CS * RRSe ) )", "obj1": 0.4581673306772908, "obj2": 0.3988149133565261}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR - ( PN / ( Max( ARS,Min( Const ,DDR ) ) * Min( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) ) ) + ( ( ( Max( ( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) * FirstVNF_RAM ),ARS ) + CRS ) / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( Max( ( MLU - Max( MUC,RRSe ) ),DS ) * RCSe ) - ( CS * ( RCSe - ( CS / RRSe ) ) ) ) ) ) + ( RCSe / Min( MLU ,MUR ) ) )", "obj1": 0.39243027888446214, "obj2": 0.4660131155585617}, {"determining": "( ( ( ( PN / ( Max( MDR,DDR ) * ( Min( ( CRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + RRS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * MUR ) ,( MUC - ( ( ( ( MUC - Min( ( MUR * RMSe ) ,RMSe ) ) - Min( DS ,MUC ) ) - ( Max( ( ( RMSe / MUR ) * Min( MUC ,CS ) ),MUR ) * MUR ) ) + CS ) ) )", "obj1": 0.4860557768924303, "obj2": 0.3694928367611208}, {"determining": "( Min( ( ( ( MRS + ( RRS + MDR ) ) * CRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( MLU + DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.13545816733067728, "obj2": 0.7567906357414853}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( AMS + ( CRS * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( MDR - ( MRS / RRS ) ) ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) * RMSe ) - Min( ( RCSe + RMSe ) ,Min( MUC ,( RRSe * MUR ) ) ) )", "obj1": 0.6314741035856574, "obj2": 0.2633478259400984}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) ) + AMS ) )", "choosing": "( DS + Min( ( MUR - ( MLU + CS ) ) ,MUM ) )", "obj1": 0.7569721115537849, "obj2": 0.14936179660385798}, {"determining": "( ( FirstVNF_CPU_Server - BR ) - Min( FirstVNF_CPU ,ARS ) )", "choosing": "( ( ( RMSe - MUR ) * RMSe ) - ( ( MLU + CS ) / Min( DS ,( ( Min( Min( DS ,MLU ) ,MLU ) - MUR ) - Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.7768924302788844, "obj2": 0.14012111973153982}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( RMSe - Max( ( MUC / RMSe ),Max( RRSe,RMSe ) ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.3596847854317509}, {"determining": "( Min( Max( ( PN * Const ),( FirstVNF_CPU_Server * AMS ) ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUM,( RRSe - MUM ) ) + CS ) * ( ( MUM * DS ) / ( MUM + Max( RMSe,DS ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3187250996015936, "obj2": 0.5542942438841949}, {"determining": "( ( ( ( PN / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( ( ( FirstVNF_Mem + ARS ) / Max( FirstVNF_RAM_Server,ARS ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) + ( ( RMSe * MUM ) - MUM ) ) / ( RCSe + MUC ) )", "obj1": 0.6553784860557769, "obj2": 0.2231300181971354}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server - ( ( PN / ARS ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MDR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( ( ( ( ( DS / ( CS / MLU ) ) / ( RRSe / RRSe ) ) / MUM ) / DS ),( ( MUM + Max( CS,DS ) ) + ( ( ( MUC * Max( CS,MUM ) ) + ( MUC * CS ) ) * MUR ) ) ) * RRSe ) ,( RCSe - ( CS / MLU ) ) )", "obj1": 0.8824701195219123, "obj2": 0.056937742440292365}, {"determining": "( ( ( ( PN / ( ( ( BR - BR ) / FirstVNF_CPU_Server ) * DDR ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( RCSe + MUC ) ) - RRSe ) / Max( RRSe,Min( MUM ,MUR ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.50199203187251, "obj2": 0.3516785946348392}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,BR ) ) ,AMS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe + Min( Max( Min( DS ,MUM ),Min( CS ,DS ) ) ,DS ) ) ,( RRSe - Min( MLU ,Min( ( CS - DS ) ,CS ) ) ) ) ) ) / ( ( RCSe + CS ) / ( MUM * RRSe ) ) )", "obj1": 0.5318725099601593, "obj2": 0.3402885223039551}, {"determining": "( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - BR ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Min( ( ( AMS * AMS ) + BR ) ,FirstVNF_Mem_Server ) ) ) ) + ( ACS * BR ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( ( Min( MUM ,( RMSe - ( RMSe / MLU ) ) ) / MUM ) / MUM ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6003092773078749}, {"determining": "( Min( Max( Min( FirstVNF_Mem ,( ( AMS * Min( BR ,PN ) ) + MDR ) ),MDR ) ,( RRS + FirstVNF_CPU ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( DS ,MLU ) * ( DS / ( CS / MLU ) ) ) / ( MUM * CS ) ) / DS ) ) ) / Min( ( RCSe * MLU ) ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.6811622624365571}, {"determining": "( ( ( ( Max( DDR,( Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( ACS,CRS ) ) + RRS ) ) / PN ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM / MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( CS / RCSe ) ) ) ) ) ) ,( ( Min( MLU ,( CS * RRSe ) ) + ( RRSe / ( ( ( MUR / MUC ) + RCSe ) + Min( MUC ,( MUC + DS ) ) ) ) ) - ( CS + CS ) ) ) )", "obj1": 0.4601593625498008, "obj2": 0.39423349274819447}, {"determining": "( ( ( ( PN / ( DDR * Min( ( Max( ARS,MDR ) + Max( FirstVNF_Mem_Server,MRS ) ) ,RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + MUM ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( MUM / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.4760956175298805, "obj2": 0.38630731125021645}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( Max( MRS,BR ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),( ( MUR * MUC ) * MUC ) ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.7868525896414342, "obj2": 0.13130638603644582}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( MDR * RRS ) - Min( Min( Max( FirstVNF_CPU_Server,MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( CS - MLU )", "obj1": 0.9422310756972112, "obj2": 0.02712578634057732}, {"determining": "( Max( ( ( ( ( PN * DDR ) - Min( PN ,CRS ) ) / FirstVNF_RAM ) + FirstVNF_CPU ),( FirstVNF_RAM_Server - ( BR - FirstVNF_Mem ) ) ) + Max( ARS,PN ) )", "choosing": "Min( ( RRSe * CS ) ,( ( MUR * RRSe ) - Min( CS ,Max( ( ( RCSe - CS ) - Max( CS,Max( RCSe,Min( MUR ,MLU ) ) ) ),RMSe ) ) ) )", "obj1": 0.6235059760956175, "obj2": 0.26525057931541923}, {"determining": "( ( FirstVNF_Mem + Max( ( ACS / BR ),Max( FirstVNF_RAM_Server,BR ) ) ) + ( ( BR / ( FirstVNF_Mem / ( ( FirstVNF_CPU / RRS ) * FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Max( CS,( MUR + MUM ) ) / ( ( DS / Max( RCSe,( ( RCSe * ( MUC / DS ) ) - Min( CS ,RMSe ) ) ) ) * RRSe ) )", "obj1": 0.17330677290836655, "obj2": 0.7380880723871411}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1852589641434263, "obj2": 0.6943736152985586}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( Max( MRS,BR ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),( ( MUR * MUC ) * MUC ) ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.798804780876494, "obj2": 0.12417061076297471}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) ) + AMS ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.8705179282868526, "obj2": 0.06547424491546144}, {"determining": "( ( FirstVNF_Mem + ( CRS * ( FirstVNF_CPU_Server * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( BR * FirstVNF_RAM ) ) / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,BR ) ) ) ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( ( RRSe / ( MUM + MUC ) ) - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.22709163346613545, "obj2": 0.659724601614263}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,Min( ( ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( ( MRS / FirstVNF_Mem ) / ( MDR / PN ) ) ) ) * CRS ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( CS,( Min( RRSe ,MUM ) * DS ) ) ,MUM ) - Max( ( CS + MLU ),Min( CS ,MLU ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5787261828048798}, {"determining": "( ( ( ( PN + ( Min( Min( ARS ,Max( BR,BR ) ) ,AMS ) * ( FirstVNF_Mem - ( ACS - MDR ) ) ) ) - DDR ) - FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( Min( Max( RCSe,( RCSe / ( Max( ( Max( RRSe,MUR ) / Min( MUM ,MUC ) ),( ( RMSe - RRSe ) - CS ) ) * RMSe ) ) ) ,( MUR + ( Min( MUM ,Max( MUC,MUC ) ) * MUC ) ) ) / ( ( RCSe + CS ) / ( MUM * RRSe ) ) )", "obj1": 0.5338645418326693, "obj2": 0.33397693523632505}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * ( ( Min( ARS ,PN ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( MLU - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( ( RRSe * MUR ),DS ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.3047808764940239, "obj2": 0.5601356701770743}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.3819435577119115}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( Max( ( FirstVNF_Mem - FirstVNF_Mem ),RRS ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU - ( FirstVNF_Mem_Server / Max( FirstVNF_RAM_Server,MRS ) ) ) * ( ARS / PN ) ) ) ) + AMS ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( MUC * MUM ) * ( ( ( Min( MUC ,( RRSe / RMSe ) ) / Min( MLU ,( MUR * MUR ) ) ) / RCSe ) * MUR ) ) ,Min( Max( ( MLU + RMSe ),RCSe ) ,MLU ) ) )", "obj1": 0.8346613545816733, "obj2": 0.1013554600615447}, {"determining": "( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / ( MUM + Max( CS,DS ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.32270916334661354, "obj2": 0.5444982532559801}, {"determining": "( Max( BR,FirstVNF_Mem ) + Min( ( FirstVNF_RAM + PN ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Max( RCSe,DS ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1752988047808765, "obj2": 0.7180890140711713}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( FirstVNF_Mem + Min( ( ( Max( Const,BR ) / PN ) - FirstVNF_CPU ) ,( CRS * ( ( FirstVNF_RAM_Server / CRS ) * ( ( ARS / FirstVNF_RAM ) * RRS ) ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUM / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.23904382470119523, "obj2": 0.6471463112156347}, {"determining": "( ( FirstVNF_CPU + BR ) + ( RRS + Min( ( BR - FirstVNF_CPU ) ,( ACS + Min( PN ,( Max( FirstVNF_RAM,( FirstVNF_RAM * Const ) ) / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( CS,( RRSe - MUM ) ) * CS ) * ( ( Max( MUR,( ( CS / MLU ) / DS ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1553784860557769, "obj2": 0.7519080534792741}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( ARS + RRS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( CRS / ACS ) - FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,RRSe ) ,( ( MUR * RRSe ) - Min( ( CS * MUR ) ,Max( MUM,RMSe ) ) ) )", "obj1": 0.5438247011952191, "obj2": 0.3251072904412896}, {"determining": "( ( Const + BR ) + ( FirstVNF_Mem + ( Min( Const ,FirstVNF_Mem ) / DDR ) ) )", "choosing": "( Max( Max( ( RCSe - MLU ),( Min( Min( ( DS * DS ) ,DS ) ,DS ) / RMSe ) ),( ( ( Min( ( RRSe * ( RMSe + RRSe ) ) ,DS ) + MUM ) / DS ) / Max( DS,( MUC / ( RMSe + MUC ) ) ) ) ) / Min( ( RMSe / MLU ) ,DS ) )", "obj1": 0.16533864541832669, "obj2": 0.7420027705100096}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ),MRS ) / ( FirstVNF_Mem_Server + Min( ARS ,Max( ARS,BR ) ) ) ) )", "choosing": "( Min( RCSe ,Max( Min( DS ,MUM ),Min( CS ,DS ) ) ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.9721115537848606, "obj2": 0.012702568252888407}, {"determining": "( ( FirstVNF_Mem + Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2350597609561753, "obj2": 0.6479005307979707}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5872507144768632}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,( DDR * ( FirstVNF_CPU_Server + Max( ACS,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( FirstVNF_RAM_Server ,( BR * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUM / ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) ) / DS ) / ( ( RRSe / ( MLU * ( RCSe * MLU ) ) ) + MUM ) ) ) / Max( MUR,RCSe ) )", "obj1": 0.647410358565737, "obj2": 0.23051075708330848}, {"determining": "( Max( Max( ARS,Const ),ACS ) + ( RRS + MRS ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * Min( RMSe ,Min( ( MUC + Max( DS,MUM ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5658336645247385}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,ACS ) - Min( DDR ,ACS ) ) / ( ( AMS / CRS ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) ) ) + Min( DDR ,ARS ) ) + ( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe * MLU ) * ( MLU / DS ) ) ) / ( DS + RCSe ) )", "obj1": 0.8884462151394422, "obj2": 0.050243154090234145}, {"determining": "Min( ( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) + ( Max( PN,ARS ) + BR ) ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Max( FirstVNF_CPU,( Max( ACS,AMS ) / Const ) ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ( Max( Const,BR ) * CRS ) - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( CS + CS ),( DS - Max( CS,MUM ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5890567764986324}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Max( DDR,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( ( RRS + ( AMS * ( CRS + FirstVNF_CPU ) ) ) ,CRS ) ,PN ) ) ) )", "choosing": "( Min( CS ,RRSe ) + ( ( ( ( Min( MUM ,MUR ) + Min( ( DS / MUR ) ,Max( Max( DS,MUC ),RMSe ) ) ) / MUR ) - ( CS + CS ) ) / CS ) )", "obj1": 0.9621513944223108, "obj2": 0.015273301348765157}, {"determining": "( ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( AMS - DDR ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "Min( Min( ( Max( CS,( ( MUM - ( Max( MUC,CS ) * MUC ) ) * ( Min( MUC ,( CS + MUR ) ) - CS ) ) ) + MUC ) ,( ( RCSe - DS ) / Min( ( MUC / ( CS / Min( DS ,RRSe ) ) ) ,RRSe ) ) ) ,( CS - ( CS + RCSe ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5752779618971147}, {"determining": "( ( CRS + Max( ( BR / FirstVNF_CPU ),MRS ) ) / ( ARS * PN ) )", "choosing": "( Min( RRSe ,( ( ( Max( ( RRSe / Min( RMSe ,CS ) ),MUR ) / MUM ) / DS ) * ( RMSe / ( ( ( DS / Min( RRSe ,RRSe ) ) + Max( MLU,CS ) ) + Min( MUC ,( RMSe + ( CS * RRSe ) ) ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( ( ( ( ( Max( Const,BR ) * CRS ) - FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) - Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) * CRS ) / ( FirstVNF_CPU * Min( Min( ( ( DDR - CRS ) * ARS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,Min( RRS ,RRS ) ) ) )", "choosing": "( Min( Max( Min( RMSe ,( MUM / Min( Max( RRSe,( MUR / MUC ) ) ,MUM ) ) ),MLU ) ,RRSe ) / Min( Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,Max( MUM,MUM ) ) ,( Min( RCSe ,( MLU - Min( RRSe ,RCSe ) ) ) * Min( RMSe ,Min( MLU ,CS ) ) ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7908951734942623}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( FirstVNF_RAM_Server ,Max( ARS,BR ) ) ,AMS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe + CS ) ,( RRSe - Min( MLU ,Min( ( CS - DS ) ,( DS / MUR ) ) ) ) ) ) ) / ( ( RCSe + CS ) / ( MUM * RRSe ) ) )", "obj1": 0.5139442231075697, "obj2": 0.34647163525536}, {"determining": "( ( MRS / ( FirstVNF_RAM + CRS ) ) + Min( Min( MDR ,FirstVNF_CPU_Server ) ,AMS ) )", "choosing": "( ( CS * ( ( RMSe / ( RRSe * DS ) ) * ( RMSe / ( ( RMSe - ( RMSe / ( RRSe - RRSe ) ) ) * RMSe ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1752988047808765, "obj2": 0.7180890140711713}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( FirstVNF_RAM_Server ,Const ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( MUR,( RRSe - MUM ) ) + CS ) ) ) / Max( MUR,RCSe ) )", "obj1": 0.6434262948207171, "obj2": 0.23486812979786206}, {"determining": "( Max( CRS,FirstVNF_RAM ) - ( ( BR / FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( ( FirstVNF_CPU_Server + ACS ),( FirstVNF_RAM / FirstVNF_Mem ) ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( ( Min( ( MUM - DS ) ,MLU ) / ( ( ( ( MUM - ( MLU / RRSe ) ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) / MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03713461683870236}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) / PN ) * ( FirstVNF_CPU - Max( RRS,Max( MRS,FirstVNF_RAM_Server ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ),( ( MUM * Max( CS,DS ) ) + ( ( ( DS / ( RMSe * MUM ) ) - RMSe ) * MUR ) ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.8545816733067729, "obj2": 0.0741546876192399}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( RRS,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "( ( Max( CS,( RRSe - MUM ) ) * RCSe ) - CS )", "obj1": 0.8366533864541833, "obj2": 0.0889042527544715}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * Min( ( ( ( Max( FirstVNF_CPU_Server,BR ) - FirstVNF_CPU ) + ( FirstVNF_RAM - ARS ) ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / BR ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( ( ( AMS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS - ( ( RMSe - ( CS + ( Max( MUM,( ( MUM / DS ) + MLU ) ) + ( RMSe * MUC ) ) ) ) * RCSe ) )", "obj1": 0.3286852589641434, "obj2": 0.5358115450422984}, {"determining": "( ( FirstVNF_Mem + Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,( RRS + FirstVNF_CPU ) ) ) ,( Max( Min( PN ,Const ),CRS ) * PN ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MUM - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MUR ) ) * ( MUC / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21115537848605578, "obj2": 0.6770035627298239}, {"determining": "( ( FirstVNF_Mem + Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( Max( Min( Min( ACS ,MDR ) ,FirstVNF_RAM_Server ),FirstVNF_CPU ) + FirstVNF_CPU ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( ( ( Min( MUM ,MUR ) + DS ) / MUR ),( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.20119521912350596, "obj2": 0.6792864404252769}, {"determining": "( ( FirstVNF_Mem + Min( ( ( Max( Const,BR ) / PN ) - FirstVNF_CPU ) ,( ACS + Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( Min( DS ,MLU ) ,DS ) )", "obj1": 0.22310756972111553, "obj2": 0.6635464158402051}, {"determining": "( ( Max( ( Max( Const,( Max( CRS,ACS ) - MRS ) ) * CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RCSe * DS ) ) * ( ( RCSe * ( RRSe * ( Max( MLU,MLU ) + ( MUM - DS ) ) ) ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7545905761175521}, {"determining": "( ( ACS + BR ) - ( ( MDR - ACS ) + ACS ) )", "choosing": "Min( ( CS * MUM ) ,( RMSe - ( MUR + DS ) ) )", "obj1": 0.7808764940239044, "obj2": 0.13621786342598824}, {"determining": "( ( Max( Const,BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,FirstVNF_CPU ) ) ,AMS ) ) ) - DDR ) ) / ( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,Const ) ) * Min( Max( Min( CRS ,FirstVNF_RAM_Server ),MDR ) ,( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe * ( ( MUM / ( RRSe * ( DS - ( ( CS - RMSe ) / MLU ) ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.549800796812749, "obj2": 0.31562900256749604}, {"determining": "( ( Max( MDR,MDR ) + Min( Max( Min( Min( MDR ,ACS ) ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ,CRS ) ) + Max( FirstVNF_CPU,BR ) )", "choosing": "( ( RRSe * ( ( ( DS / MUM ) / DS ) * ( Max( MUR,( RRSe - MUM ) ) + Max( ( ( ( MUM * RRSe ) + CS ) - MLU ),RMSe ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.15139442231075698, "obj2": 0.7534621065530839}, {"determining": "( Max( ( ( PN / ( Max( CRS,( CRS - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) * Min( ( MRS - DDR ) ,AMS ) ) ) - DDR ),FirstVNF_CPU ) + ( ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RCSe / ( ( MUM / RMSe ) - CS ) ) * RCSe ) + CS ) - ( MUM * RRSe ) ) / Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe + Min( Max( Min( DS ,MUM ),Min( RRSe ,DS ) ) ,DS ) ) ,( RRSe - Min( MLU ,Min( ( CS - DS ) ,( DS / RMSe ) ) ) ) ) ) ) )", "obj1": 0.5139442231075697, "obj2": 0.34647163525536}, {"determining": "( ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( DDR / Max( BR,MRS ) ) ) ) ) ) + AMS ) - ( FirstVNF_CPU_Server + BR ) )", "choosing": "( CS - ( Max( CS,DS ) * RCSe ) )", "obj1": 0.8067729083665338, "obj2": 0.10958087500993277}, {"determining": "( Max( ( CRS + BR ),ACS ) + ( ( BR / ( FirstVNF_Mem / ( ( FirstVNF_CPU - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( ( ( RMSe - ( DS + RMSe ) ) * RCSe ) - CS )", "obj1": 0.300796812749004, "obj2": 0.5638181054837724}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS + ( DDR / FirstVNF_CPU_Server ) ) + AMS ) )", "choosing": "( ( Min( MUM ,RRSe ) * RMSe ) / ( MUC - MUC ) )", "obj1": 0.8047808764940239, "obj2": 0.12034430844553205}, {"determining": "( ( PN + FirstVNF_Mem ) + ( DDR / ACS ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * Max( ( ( ( DS / ( RMSe / MLU ) ) * ( RRSe / RRSe ) ) / MUM ),DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6686407471310237}, {"determining": "( ( ( ( MDR + MRS ) - ( ( ARS / FirstVNF_CPU_Server ) * ( AMS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) + AMS ) - Max( FirstVNF_CPU_Server,BR ) )", "choosing": "Min( Max( RCSe,( DS + MUC ) ) ,( Max( ( MUM / ( MUR + Max( ( RRSe * Min( RMSe ,MLU ) ),CS ) ) ),RRSe ) * MUM ) )", "obj1": 0.9800796812749004, "obj2": 0.007736285462954932}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / ARS ) ) ) ) ) + AMS ) )", "choosing": "( ( ( CS - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( RRSe + RRSe ) ) ) )", "obj1": 0.8167330677290837, "obj2": 0.105634015500137}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,MDR ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( ( RMSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( MLU - Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * ( MUR + CS ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9203187250996016, "obj2": 0.03230905862033639}, {"determining": "( ( ( ( PN + ( Min( Min( ARS ,Max( BR,BR ) ) ,AMS ) * ( FirstVNF_Mem - ( ACS - MDR ) ) ) ) - DDR ) - FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( Min( Max( RCSe,( RCSe / ( Max( ( Max( RRSe,MUR ) / Min( MUM ,MUC ) ),( ( RMSe - RRSe ) - CS ) ) * RMSe ) ) ) ,( MUR + ( Min( MUM ,Max( MUC,MUC ) ) * MUC ) ) ) / ( ( RCSe + CS ) / ( MUM * RRSe ) ) )", "obj1": 0.545816733067729, "obj2": 0.3207415421456932}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( CRS * ( RRS + FirstVNF_CPU ) ) ) ) + ( FirstVNF_CPU_Server + Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) )", "choosing": "( ( RRSe * ( Max( RRSe,DS ) * ( ( MUC * ( Min( MUC ,( CS + MUR ) ) - CS ) ) / DS ) ) ) / ( RCSe + DS ) )", "obj1": 0.896414342629482, "obj2": 0.0473363593199471}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / AMS ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.10190875445535333}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( FirstVNF_CPU_Server + Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) )", "choosing": "( ( RRSe * ( Max( RRSe,DS ) * ( ( ( Max( ( MUM / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / ( RCSe + DS ) )", "obj1": 0.8605577689243028, "obj2": 0.0692273324955561}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / ARS ) ) ) ) ) + AMS ) )", "choosing": "( ( ( RMSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.8087649402390438, "obj2": 0.10727250691032156}], "15": [{"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( ( PN / ( DDR * ( Min( ( CRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + RRS ) ) ) * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) ) + AMS ) )", "choosing": "( DS + Min( ( MUR - ( ( ( RMSe / MUR ) * Min( MUC ,CS ) ) + CS ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU_Server + BR ) + AMS ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( MUM * MUC ) * ( ( ( Min( MUC ,( MUR / CS ) ) / Min( MLU ,( MUR * MUR ) ) ) / RCSe ) * MUR ) ) ,( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),MUR ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( ( RRSe - RMSe ) * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.1846386318798677}, {"determining": "( ( ( ( Max( RRS,( AMS / FirstVNF_RAM ) ) / ( DDR * ( FirstVNF_Mem + BR ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem - ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ARS + FirstVNF_Mem ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RMSe * RMSe ) ) ,Min( ( RRSe + Min( Max( ( CS / MUM ),Min( CS ,MUC ) ) ,DS ) ) ,( RRSe - DS ) ) ) ) / ( MUM + MUC ) )", "obj1": 0.6573705179282868, "obj2": 0.20746192345080144}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + Max( MRS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) + ( ( Max( DDR,Max( ARS,Const ) ) * ( PN * ACS ) ) - PN ) ) + ( ( FirstVNF_CPU / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM * FirstVNF_CPU ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MUM ) * ( RMSe / MUM ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.49865653294254103}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ,PN ) ) ) )", "choosing": "( ( ( RMSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) ) - Max( ( MLU + CS ),Min( DS ,( MLU - Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.7191235059760956, "obj2": 0.15977881847772077}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * ( ( Max( MDR,( ( RRS * FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * MRS ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / MUM ) - ( ( MUR * RMSe ) / ( MLU / RMSe ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5225051866233799}, {"determining": "( ( MRS + MRS ) + ( Max( DDR,FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( ( ( ( MUR * ( ( MUR + DS ) / ( MLU * ( RCSe - ( MUM * CS ) ) ) ) ) * ( MUM * Min( ( ( MLU / ( DS * DS ) ) * MUR ) ,MUR ) ) ) - CS ) + Min( Max( Min( Min( DS ,DS ) ,Max( MUR,MUR ) ),DS ) ,Max( Max( Min( ( MLU / RRSe ) ,RMSe ),MLU ),MLU ) ) )", "obj1": 0.43227091633466136, "obj2": 0.4283848650156988}, {"determining": "( ( Max( Const,BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,BR ) ) ,AMS ) ) ) - DDR ) ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * RMSe ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.29351684822305674}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_CPU_Server - ( CRS * CRS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( CS * RCSe ) - ( CS * ( RCSe - ( RRSe / RRSe ) ) ) ) / MUR ) ) + ( RCSe * ( Min( ( ( MLU / MLU ) + ( ( ( CS + RMSe ) * ( RCSe / RCSe ) ) * Max( MUC,Max( CS,RRSe ) ) ) ) ,MLU ) * RMSe ) ) )", "obj1": 0.4063745019920319, "obj2": 0.44427829321322815}, {"determining": "( ( ( ( PN / ( DDR / Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - MRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_RAM_Server ) ) * ( ( Min( FirstVNF_Mem ,ACS ) - ( FirstVNF_RAM_Server + ARS ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( Min( ( RRSe / ( MUR + MUC ) ) ,RRSe ) - Max( RRSe,( ( CS + MLU ) * Min( MUC ,RRSe ) ) ) ) ) ) ,Min( CS ,( MUM * MLU ) ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6317526071052565}, {"determining": "( ( ( ( PN / ( DDR * ( MDR + Const ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + RRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( MUR / ( DS + RCSe ) ) - Max( RRSe,( RMSe / ( RCSe * DS ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.3120324842683448}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.43824701195219123, "obj2": 0.4128604817198128}, {"determining": "( ( ( ( ( ( Max( Const,BR ) * CRS ) - FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) - Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) * CRS ) / ( FirstVNF_CPU * Min( Min( ( ( DDR - CRS ) * ARS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,Min( RRS ,RRS ) ) ) )", "choosing": "( Min( Max( Min( RMSe ,( MUM / Min( Max( RRSe,( MUR / MUC ) ) ,MUM ) ) ),MLU ) ,RRSe ) / Min( Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,Max( MUM,MUM ) ) ,( Min( RCSe ,( MLU - Min( RRSe ,RCSe ) ) ) * Min( RMSe ,Min( MLU ,CS ) ) ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7908951734942623}, {"determining": "( ( Max( ( Max( Const,BR ) * CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.13147410358565736, "obj2": 0.7665548655804789}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( ( ACS + ( ( ( Min( Max( DDR,ACS ) ,FirstVNF_Mem ) + Max( MRS,( DDR + FirstVNF_CPU_Server ) ) ) * MDR ) + ( FirstVNF_CPU_Server - PN ) ) ) + BR ) - ( PN / FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( CS ,Min( Max( MLU,( Min( CS ,( MLU - MUR ) ) / Max( MLU,DS ) ) ) ,( RCSe * ( MUC / MLU ) ) ) ) ) - Max( ( MLU + CS ),Min( DS ,RCSe ) ) )", "obj1": 0.6055776892430279, "obj2": 0.2675831356670546}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) ) ) ) )", "obj1": 0.38247011952191234, "obj2": 0.479956916364848}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( BR / ARS ) ) ) ) ) + AMS ) )", "choosing": "( ( ( Max( RRSe,DS ) - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.7529880478087649, "obj2": 0.1535586408549594}, {"determining": "( ( ( ( PN / ( ( FirstVNF_Mem + DDR ) * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.18269044081545496}, {"determining": "( ( MRS * BR ) + Max( MRS,BR ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe - ( Min( CS ,Min( ( RCSe - ( DS - ( MUR + MUC ) ) ) ,MUR ) ) - MUR ) ) )", "obj1": 0.37649402390438247, "obj2": 0.4968801628585156}, {"determining": "( ( ( ( Const / ( DDR * ( Min( FirstVNF_Mem ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( FirstVNF_CPU - ARS ) + Max( RRS,CRS ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( Max( ( Min( Max( ( Max( MLU,MUM ) + DS ),MLU ) ,Max( ( RCSe + Min( DS ,RMSe ) ),MUM ) ) * MUC ),( RMSe / Min( RCSe ,MLU ) ) ),CS ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( RCSe / RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.47410358565737054, "obj2": 0.37993737339430544}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR - ( PN / ( Max( ARS,Min( Const ,DDR ) ) * Min( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) ) ) + ( ( ( Max( ( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) * FirstVNF_RAM ),ARS ) + CRS ) / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( Max( ( MLU - Max( MUC,RRSe ) ),DS ) * RCSe ) - ( CS * ( RCSe - ( CS / RRSe ) ) ) ) ) ) + ( RCSe / Min( MLU ,MUR ) ) )", "obj1": 0.39243027888446214, "obj2": 0.4660131155585617}, {"determining": "( ( FirstVNF_CPU - ( ( PN / ( DDR * ( Const + Max( MRS,ACS ) ) ) ) - DDR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) + ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( DS,MUC ) * ( CS * Min( RRSe ,RMSe ) ) ) - Min( CS ,Max( ( DS + ( RMSe - Min( RMSe ,RRSe ) ) ),RMSe ) ) ) ,( CS * RRSe ) )", "obj1": 0.4581673306772908, "obj2": 0.3988149133565261}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( DS * MUC ) / Max( RCSe,DS ) )", "obj1": 0.22310756972111553, "obj2": 0.6595385100069121}, {"determining": "( ( Max( ( Const * BR ),BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( BR,ARS ) ) ,AMS ) ) ) - ( DDR + FirstVNF_Mem ) ) ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( ( RMSe * ( ( Min( ( RRSe * ( RMSe + RRSe ) ) ,DS ) / ( Max( ( DS + RRSe ),RCSe ) * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( ( RCSe * RMSe ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.603585657370518, "obj2": 0.2926328907873046}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Max( ( CRS / ( RRS / Const ) ),AMS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( RCSe * MUR ) - Min( DS ,MUC ) ) ) + CS ) ) ,( CS * Max( CS,Min( Min( RRSe ,MUM ) ,DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.34189778521614395}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( AMS + ( CRS * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( MDR - ( MRS / RRS ) ) ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) * RMSe ) - Min( ( RCSe + RMSe ) ,Min( MUC ,( RRSe * MUR ) ) ) )", "obj1": 0.6314741035856574, "obj2": 0.2633478259400984}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) ) + AMS ) )", "choosing": "( DS + Min( ( MUR - ( MLU + CS ) ) ,MUM ) )", "obj1": 0.7569721115537849, "obj2": 0.14936179660385798}, {"determining": "( ( FirstVNF_CPU_Server - BR ) - Min( FirstVNF_CPU ,ARS ) )", "choosing": "( ( ( RMSe - MUR ) * RMSe ) - ( ( MLU + CS ) / Min( DS ,( ( Min( Min( DS ,MLU ) ,MLU ) - MUR ) - Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.7768924302788844, "obj2": 0.14012111973153982}, {"determining": "( ( ( ( PN / ( DDR * ( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU ) + ( BR * PN ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUR + ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( Min( RCSe ,DS ) - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.40039840637450197, "obj2": 0.45658013537015923}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( MDR * RRS ) - Min( Min( Max( FirstVNF_CPU_Server,MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( CS - MLU )", "obj1": 0.9422310756972112, "obj2": 0.02712578634057732}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_Mem * Max( Max( AMS,( Max( ARS,PN ) - Min( ACS ,AMS ) ) ),( CRS + FirstVNF_CPU_Server ) ) ) ,( MDR + Max( FirstVNF_Mem,( Const / Min( ARS ,( FirstVNF_RAM / ARS ) ) ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RCSe - CS ) / MUR ) + Min( MUC ,MUC ) ) ,( Min( RCSe ,MUM ) - ( ( MUM + Max( CS,DS ) ) + ( MUC * Min( MUR ,( RRSe - CS ) ) ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.08816899349785991}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( RMSe - Max( ( MUC / RMSe ),Max( RRSe,RMSe ) ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.3596847854317509}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - Max( ( ( FirstVNF_CPU_Server * RRS ) - Min( FirstVNF_RAM_Server ,Const ) ),( Min( PN ,ACS ) - ( MDR * ARS ) ) ) )", "choosing": "( Max( RRSe,( ( ( ( ( DS / Max( MUM,RRSe ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( MUR,( RRSe - MUM ) ) + CS ) ) ) / Max( RCSe,MUR ) )", "obj1": 0.6354581673306773, "obj2": 0.24077250276020615}, {"determining": "( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - BR ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Min( ( ( AMS * AMS ) + BR ) ,FirstVNF_Mem_Server ) ) ) ) + ( ACS * BR ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( ( Min( MUM ,( RMSe - ( RMSe / MLU ) ) ) / MUM ) / MUM ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6003092773078749}, {"determining": "( Max( CRS,FirstVNF_RAM ) - ( ( BR / FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( ( FirstVNF_CPU_Server + ACS ),( FirstVNF_RAM / FirstVNF_Mem ) ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( ( Min( ( MUM - DS ) ,MLU ) / ( ( ( ( MUM - ( MLU / RRSe ) ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) / MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03713461683870236}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1852589641434263, "obj2": 0.6943736152985586}, {"determining": "( Min( Max( Min( FirstVNF_Mem ,( ( AMS * Min( BR ,PN ) ) + MDR ) ),MDR ) ,( RRS + FirstVNF_CPU ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( DS ,MLU ) * ( DS / ( CS / MLU ) ) ) / ( MUM * CS ) ) / DS ) ) ) / Min( ( RCSe * MLU ) ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.6811622624365571}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,BR ) ) ,AMS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe + Min( Max( Min( DS ,MUM ),Min( CS ,DS ) ) ,DS ) ) ,( RRSe - Min( MLU ,Min( ( CS - DS ) ,CS ) ) ) ) ) ) / ( ( RCSe + CS ) / ( MUM * RRSe ) ) )", "obj1": 0.5318725099601593, "obj2": 0.3402885223039551}, {"determining": "( Max( ( ( ( ( PN * DDR ) - Min( PN ,CRS ) ) / FirstVNF_RAM ) + FirstVNF_CPU ),( FirstVNF_RAM_Server - ( BR - FirstVNF_Mem ) ) ) + Max( ARS,PN ) )", "choosing": "Min( ( RRSe * CS ) ,( ( MUR * RRSe ) - Min( CS ,Max( ( ( RCSe - CS ) - Max( CS,Max( RCSe,Min( MUR ,MLU ) ) ) ),RMSe ) ) ) )", "obj1": 0.6235059760956175, "obj2": 0.26525057931541923}, {"determining": "( ( FirstVNF_Mem + Min( ( Min( Min( ACS ,Max( FirstVNF_RAM,( FirstVNF_CPU_Server + ARS ) ) ) ,FirstVNF_RAM_Server ) / FirstVNF_CPU ) ,CRS ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( ( ( MUM - MUR ) - Min( CS ,MLU ) ) - ( MUR / ( MLU - RMSe ) ) ) ) + CS ) * ( ( DS / MUM ) / DS ) ) ) / ( RCSe * DS ) )", "obj1": 0.16733067729083664, "obj2": 0.7320255530739409}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3938915936663898}, {"determining": "( ( FirstVNF_Mem + Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2350597609561753, "obj2": 0.6479005307979707}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,Min( ( ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( ( MRS / FirstVNF_Mem ) / ( MDR / PN ) ) ) ) * CRS ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( CS,( Min( RRSe ,MUM ) * DS ) ) ,MUM ) - Max( ( CS + MLU ),Min( CS ,MLU ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5787261828048798}, {"determining": "( ( ( ( PN + ( Min( Min( ARS ,Max( BR,BR ) ) ,AMS ) * ( FirstVNF_Mem - ( ACS - MDR ) ) ) ) - DDR ) - FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( Min( Max( RCSe,( RCSe / ( Max( ( Max( RRSe,MUR ) / Min( MUM ,MUC ) ),( ( RMSe - RRSe ) - CS ) ) * RMSe ) ) ) ,( MUR + ( Min( MUM ,Max( MUC,MUC ) ) * MUC ) ) ) / ( ( RCSe + CS ) / ( MUM * RRSe ) ) )", "obj1": 0.5338645418326693, "obj2": 0.33397693523632505}, {"determining": "( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / ( MUM + Max( CS,DS ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.32270916334661354, "obj2": 0.5444982532559801}, {"determining": "( ( FirstVNF_Mem + Min( ( ( Max( Const,BR ) / PN ) - FirstVNF_CPU ) ,( CRS * ( ( FirstVNF_RAM_Server / CRS ) * ( ( ARS / FirstVNF_RAM ) * RRS ) ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUM / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.23904382470119523, "obj2": 0.6471463112156347}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( Min( Max( ( PN * Const ),( FirstVNF_CPU_Server * AMS ) ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUM,( RRSe - MUM ) ) + CS ) * ( ( MUM * DS ) / ( MUM + Max( RMSe,DS ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3187250996015936, "obj2": 0.5542942438841949}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server - ( ( PN / ARS ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MDR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( ( ( ( ( DS / ( CS / MLU ) ) / ( RRSe / RRSe ) ) / MUM ) / DS ),( ( MUM + Max( CS,DS ) ) + ( ( ( MUC * Max( CS,MUM ) ) + ( MUC * CS ) ) * MUR ) ) ) * RRSe ) ,( RCSe - ( CS / MLU ) ) )", "obj1": 0.8824701195219123, "obj2": 0.056937742440292365}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( ARS + RRS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( CRS / ACS ) - FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,RRSe ) ,( ( MUR * RRSe ) - Min( ( CS * MUR ) ,Max( MUM,RMSe ) ) ) )", "obj1": 0.5438247011952191, "obj2": 0.3251072904412896}, {"determining": "( ( PN + FirstVNF_Mem ) + ( DDR / ACS ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * Max( ( ( ( DS / ( RMSe / MLU ) ) * ( RRSe / RRSe ) ) / MUM ),DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6686407471310237}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5872507144768632}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / AMS ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.8247011952191236, "obj2": 0.10009938301963014}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( ( FirstVNF_Mem_Server + ARS ) * ( ( ARS / PN ) * ( ( RRS - ARS ) - FirstVNF_CPU ) ) ) ) + AMS ) )", "choosing": "( ( ( RMSe - ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * RMSe ) ) ) / ( MLU * CS ) ) ) * RMSe ) - Max( ( MLU + CS ),( DS / ( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.08577834902056759}, {"determining": "( ( ( ( PN / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( ( ( FirstVNF_Mem + ARS ) / Max( FirstVNF_RAM_Server,ARS ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) + ( ( RMSe * MUM ) - MUM ) ) / ( RCSe + MUC ) )", "obj1": 0.6553784860557769, "obj2": 0.2231300181971354}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS + ( DDR / FirstVNF_CPU_Server ) ) + AMS ) )", "choosing": "( ( Min( MUM ,RRSe ) * RMSe ) / ( MUC - MUC ) )", "obj1": 0.8047808764940239, "obj2": 0.12034430844553205}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) / PN ) * ( FirstVNF_CPU - Max( RRS,Max( MRS,FirstVNF_RAM_Server ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ),( ( MUM * Max( CS,DS ) ) + ( ( ( DS / ( RMSe * MUM ) ) - RMSe ) * MUR ) ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.8545816733067729, "obj2": 0.0741546876192399}, {"determining": "Min( ( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) + ( Max( PN,ARS ) + BR ) ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Max( FirstVNF_CPU,( Max( ACS,AMS ) / Const ) ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ( Max( Const,BR ) * CRS ) - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( CS + CS ),( DS - Max( CS,MUM ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5890567764986324}, {"determining": "( ( FirstVNF_CPU + BR ) + ( RRS + Min( ( BR - FirstVNF_CPU ) ,( ACS + Min( PN ,( Max( FirstVNF_RAM,( FirstVNF_RAM * Const ) ) / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( CS,( RRSe - MUM ) ) * CS ) * ( ( Max( MUR,( ( CS / MLU ) / DS ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1553784860557769, "obj2": 0.7519080534792741}, {"determining": "( ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( AMS - DDR ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "Min( Min( ( Max( CS,( ( MUM - ( Max( MUC,CS ) * MUC ) ) * ( Min( MUC ,( CS + MUR ) ) - CS ) ) ) + MUC ) ,( ( RCSe - DS ) / Min( ( MUC / ( CS / Min( DS ,RRSe ) ) ) ,RRSe ) ) ) ,( CS - ( CS + RCSe ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5752779618971147}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( Max( BR,FirstVNF_Mem ) + Min( ( FirstVNF_RAM + PN ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Max( RCSe,DS ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1752988047808765, "obj2": 0.7180890140711713}, {"determining": "( ( FirstVNF_Mem + ( CRS * ( FirstVNF_CPU_Server * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( BR * FirstVNF_RAM ) ) / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,BR ) ) ) ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( DS / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.17330677290836655, "obj2": 0.7219920237722419}, {"determining": "( ( ( ( PN / ( Max( MDR,DDR ) * ( Min( ( CRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + RRS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * MUR ) ,( MUC - ( ( ( ( MUC - Min( ( MUR * RMSe ) ,RMSe ) ) - Min( DS ,MUC ) ) - ( Max( ( ( RMSe / MUR ) * Min( MUC ,CS ) ),MUR ) * MUR ) ) + CS ) ) )", "obj1": 0.4860557768924303, "obj2": 0.3694928367611208}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / ARS ) ) ) ) ) + AMS ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( MUM * MUC ) * ( ( ( Min( MUC ,( MUR / CS ) ) / Min( MLU ,( MUR * MUR ) ) ) / RCSe ) * MUR ) ) ,Min( Max( ( MLU + RMSe ),RCSe ) ,MLU ) ) )", "obj1": 0.850597609561753, "obj2": 0.08189705408891658}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,MDR ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( ( RMSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( MLU - Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.9482071713147411, "obj2": 0.021048590576649415}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / ARS ) ) ) ) ) + AMS ) )", "choosing": "( ( RRSe * ( MUR / MUM ) ) / ( ( MLU * DS ) - Max( MUR,Max( ( ( ( MUM + ( MUR / CS ) ) - MLU ) - MLU ),( MUM + ( RRSe / DS ) ) ) ) ) )", "obj1": 0.8784860557768924, "obj2": 0.06545605820520839}, {"determining": "( Min( ( ( ( MRS + ( RRS + MDR ) ) * CRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( MLU + DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.13545816733067728, "obj2": 0.7567906357414853}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( ARS / PN ) ) ) ) + AMS ) )", "choosing": "( ( RRSe * Min( Min( MUM ,( MLU * MUM ) ) ,RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.9900398406374502, "obj2": 0.003755206519467867}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( Max( MRS,BR ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),( ( MUR * MUC ) * MUC ) ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.7868525896414342, "obj2": 0.13130638603644582}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( ( ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - ARS ) ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / BR ) + FirstVNF_CPU ) ) ,Const ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUC / MUM ) / DS ) / ( Max( MUR,( RRSe - MUM ) ) + CS ) ) ) / Max( MUR,RCSe ) )", "obj1": 0.16334661354581673, "obj2": 0.7423095680641134}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * Min( ( ( ( Max( FirstVNF_CPU_Server,BR ) - FirstVNF_CPU ) + ( FirstVNF_RAM - ARS ) ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / BR ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( ( ( AMS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS - ( ( RMSe - ( CS + ( Max( MUM,( ( MUM / DS ) + MLU ) ) + ( RMSe * MUC ) ) ) ) * RCSe ) )", "obj1": 0.3286852589641434, "obj2": 0.5358115450422984}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( MUR - ( RCSe * RMSe ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.35095225299273275}, {"determining": "( ( FirstVNF_Mem + Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( Max( Min( Min( ACS ,MDR ) ,FirstVNF_RAM_Server ),FirstVNF_CPU ) + FirstVNF_CPU ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( ( ( Min( MUM ,MUR ) + DS ) / MUR ),( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.20119521912350596, "obj2": 0.6792864404252769}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( Min( ACS ,Const ) - ( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( Max( ( FirstVNF_Mem * FirstVNF_RAM ),( ACS * FirstVNF_CPU_Server ) ) + AMS ) ) ) + ( FirstVNF_CPU_Server + Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) )", "choosing": "( Max( RRSe,( Max( RRSe,DS ) * ( ( ( Max( ( DS / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / ( RCSe + DS ) )", "obj1": 0.8605577689243028, "obj2": 0.06877641369397051}, {"determining": "( Max( Max( ARS,Const ),ACS ) + ( RRS + MRS ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * Min( RMSe ,Min( ( MUC + Max( DS,MUM ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5658336645247385}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5579801884209764}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( BR / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "( ( ( RMSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.796812749003984, "obj2": 0.12297992547457107}, {"determining": "( ( Max( ( Max( Const,( Max( CRS,ACS ) - MRS ) ) * CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RCSe * DS ) ) * ( ( RCSe * ( RRSe * ( Max( MLU,MLU ) + ( MUM - DS ) ) ) ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7545905761175521}, {"determining": "( ( ACS + BR ) - ( ( MDR - ACS ) + ACS ) )", "choosing": "Min( ( CS * MUM ) ,( RMSe - ( MUR + DS ) ) )", "obj1": 0.7808764940239044, "obj2": 0.13621786342598824}, {"determining": "( ( ( ( PN / ( ( ( BR - BR ) / FirstVNF_CPU_Server ) * DDR ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( RCSe + MUC ) ) - RRSe ) / Max( RRSe,Min( MUM ,MUR ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.50199203187251, "obj2": 0.3516785946348392}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( CS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.4860557768924303, "obj2": 0.3694928367611208}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ),MRS ) / ( FirstVNF_Mem_Server + Min( ARS ,Max( ARS,BR ) ) ) ) )", "choosing": "( Min( RCSe ,Max( Min( DS ,MUM ),Min( CS ,DS ) ) ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.9721115537848606, "obj2": 0.012702568252888407}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( BR / ARS ) ) ) ) ) + AMS ) )", "choosing": "( ( ( Max( RRSe,DS ) - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.7888446215139442, "obj2": 0.12432965189868549}, {"determining": "( ( Max( Const,BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,FirstVNF_CPU ) ) ,AMS ) ) ) - DDR ) ) / ( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,Const ) ) * Min( Max( Min( CRS ,FirstVNF_RAM_Server ),MDR ) ,( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe * ( ( MUM / ( RRSe * ( DS - ( ( CS - RMSe ) / MLU ) ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.549800796812749, "obj2": 0.31562900256749604}, {"determining": "( ( Max( MDR,MDR ) + Min( Max( Min( Min( MDR ,ACS ) ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ,CRS ) ) + Max( FirstVNF_CPU,BR ) )", "choosing": "( ( RRSe * ( ( ( DS / MUM ) / DS ) * ( Max( MUR,( RRSe - MUM ) ) + Max( ( ( ( MUM * RRSe ) + CS ) - MLU ),RMSe ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.15139442231075698, "obj2": 0.7534621065530839}, {"determining": "( ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( DDR / Max( BR,MRS ) ) ) ) ) ) + AMS ) - ( FirstVNF_CPU_Server + BR ) )", "choosing": "( CS - ( Max( CS,DS ) * RCSe ) )", "obj1": 0.8067729083665338, "obj2": 0.10958087500993277}, {"determining": "( ( ( ( MDR + MRS ) - ( ( ARS / FirstVNF_CPU_Server ) * ( AMS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) + AMS ) - Max( FirstVNF_CPU_Server,BR ) )", "choosing": "Min( Max( RCSe,( DS + MUC ) ) ,( Max( ( MUM / ( MUR + Max( ( RRSe * Min( RMSe ,MLU ) ),CS ) ) ),RRSe ) * MUM ) )", "obj1": 0.9800796812749004, "obj2": 0.007736285462954932}, {"determining": "( ( FirstVNF_Mem + Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,( RRS + FirstVNF_CPU ) ) ) ,( Max( Min( PN ,Const ),CRS ) * PN ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MUM - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MUR ) ) * ( MUC / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21115537848605578, "obj2": 0.6770035627298239}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / ARS ) ) ) ) ) + AMS ) )", "choosing": "( ( ( CS - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( RRSe + RRSe ) ) ) )", "obj1": 0.8167330677290837, "obj2": 0.105634015500137}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( BR * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * ( MUR + CS ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RCSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9203187250996016, "obj2": 0.03218887920832928}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * ( ( Min( ARS ,PN ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( MLU - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( ( RRSe * MUR ),DS ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.3047808764940239, "obj2": 0.5601356701770743}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( CRS * ( RRS + FirstVNF_CPU ) ) ) ) + ( FirstVNF_CPU_Server + Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) )", "choosing": "( ( RRSe * ( Max( RRSe,DS ) * ( ( MUC * ( Min( MUC ,( CS + MUR ) ) - CS ) ) / DS ) ) ) / ( RCSe + DS ) )", "obj1": 0.896414342629482, "obj2": 0.0473363593199471}, {"determining": "( ( ( ( PN + ( Min( Min( ARS ,Max( BR,BR ) ) ,AMS ) * ( FirstVNF_Mem - ( ACS - MDR ) ) ) ) - DDR ) - FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( Min( Max( RCSe,( RCSe / ( Max( ( Max( RRSe,MUR ) / Min( MUM ,MUC ) ),( ( RMSe - RRSe ) - CS ) ) * RMSe ) ) ) ,( MUR + ( Min( MUM ,Max( MUC,MUC ) ) * MUC ) ) ) / ( ( RCSe + CS ) / ( MUM * RRSe ) ) )", "obj1": 0.545816733067729, "obj2": 0.3207415421456932}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,( DDR * ( ( ( ARS / FirstVNF_RAM ) * RRS ) + Max( ACS,( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( FirstVNF_RAM_Server ,Const ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( RRSe / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( MUR,( RRSe - CS ) ) + CS ) ) ) / Max( MUR,RCSe ) )", "obj1": 0.6533864541832669, "obj2": 0.22640229406027348}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,ACS ) - Min( DDR ,ACS ) ) / ( ( AMS / CRS ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) ) ) + Min( DDR ,ARS ) ) + ( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe * MLU ) * ( MLU / DS ) ) ) / ( DS + RCSe ) )", "obj1": 0.8884462151394422, "obj2": 0.050243154090234145}], "16": [{"determining": "( Min( FirstVNF_CPU ,ARS ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( FirstVNF_CPU / Max( FirstVNF_Mem_Server,MRS ) ) ) ) ) ) - BR ) )", "choosing": "( ( ( ( ( ( RRSe + MUM ) * ( RRSe + MLU ) ) - Max( RCSe,MUR ) ) / MLU ) + ( MUC * MUR ) ) - ( ( MLU + CS ) / Min( MUR ,( ( Min( Min( DS ,MLU ) ,MLU ) - MUR ) - Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( ( PN / ( DDR * ( Min( ( CRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + RRS ) ) ) * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) ) + AMS ) )", "choosing": "( DS + Min( ( MUR - ( ( ( RMSe / MUR ) * Min( MUC ,CS ) ) + CS ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.647410358565737, "obj2": 0.18930484609684192}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_Mem + BR ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe + Min( Max( ( CS / MLU ),Min( CS ,MUC ) ) ,DS ) ) ,( RRSe - DS ) ) ) ) / MUR )", "obj1": 0.6314741035856574, "obj2": 0.23801662576279442}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ,PN ) ) ) )", "choosing": "( ( ( RMSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) ) - Max( ( MLU + CS ),Min( DS ,( MLU - Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.7191235059760956, "obj2": 0.15977881847772077}, {"determining": "( ( MRS + MRS ) + ( Max( DDR,FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( ( ( ( MUR * ( ( MUR + DS ) / ( MLU * ( RCSe - ( MUM * CS ) ) ) ) ) * ( MUM * Min( ( ( MLU / ( DS * DS ) ) * MUR ) ,MUR ) ) ) - CS ) + Min( Max( Min( Min( DS ,DS ) ,Max( MUR,MUR ) ),DS ) ,Max( Max( Min( ( MLU / RRSe ) ,RMSe ),MLU ),MLU ) ) )", "obj1": 0.43227091633466136, "obj2": 0.4283848650156988}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + Max( MRS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) + ( ( Max( DDR,Max( ARS,Const ) ) * ( PN * ACS ) ) - PN ) ) + ( ( FirstVNF_CPU / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM * FirstVNF_CPU ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MUM ) * ( RMSe / MUM ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.49865653294254103}, {"determining": "( ( Max( ( Const + BR ),BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,BR ) ) ,AMS ) ) ) - DDR ) ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( Max( RRSe,( ( ( ( ( DS / Max( MUM,RRSe ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( MUR,( RRSe - MUM ) ) + CS ) ) ) / Max( RCSe,MUR ) )", "obj1": 0.6215139442231076, "obj2": 0.2590278425923966}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_CPU * Const ),FirstVNF_RAM ) * MRS ) )", "choosing": "( Max( ( ( MUM * MUC ) * MUC ),CS ) + Min( ( ( RRSe - RMSe ) * ( RCSe * ( ( ( RRSe / ( MUM + RRSe ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RRSe / RCSe ) ) )", "obj1": 0.6912350597609562, "obj2": 0.18754947200816732}, {"determining": "( ( ( ACS + ( ( ( Min( Max( DDR,ACS ) ,FirstVNF_Mem ) + Max( MRS,( DDR + FirstVNF_CPU_Server ) ) ) * MDR ) + ( FirstVNF_CPU_Server - PN ) ) ) + BR ) - ( PN / FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( CS ,Min( Max( MLU,( Min( CS ,( MLU - MUR ) ) / Max( MLU,DS ) ) ) ,( RCSe * ( MUC / MLU ) ) ) ) ) - Max( ( MLU + CS ),Min( DS ,RCSe ) ) )", "obj1": 0.6055776892430279, "obj2": 0.2675831356670546}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,BR ) ) ,AMS ) ) ) - DDR ) ) / ( PN * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( ( RRSe * ( ( Min( ( RRSe * ( RMSe + RRSe ) ) ,DS ) / ( RRSe * DS ) ) * ( ( MUM - ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * RMSe ) ) ) ) / DS ) ) ) / ( RRSe * RMSe ) )", "obj1": 0.5856573705179283, "obj2": 0.30159271364930423}, {"determining": "( ( ( ( PN / ( DDR / Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - MRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_RAM_Server ) ) * ( ( Min( FirstVNF_Mem ,ACS ) - ( FirstVNF_RAM_Server + ARS ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( Min( ( RRSe / ( MUR + MUC ) ) ,RRSe ) - Max( RRSe,( ( CS + MLU ) * Min( MUC ,RRSe ) ) ) ) ) ) ,Min( CS ,( MUM * MLU ) ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6317526071052565}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_CPU_Server - ( CRS * CRS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( CS * RCSe ) - ( CS * ( RCSe - ( RRSe / RRSe ) ) ) ) / MUR ) ) + ( RCSe * ( Min( ( ( MLU / MLU ) + ( ( ( CS + RMSe ) * ( RCSe / RCSe ) ) * Max( MUC,Max( CS,RRSe ) ) ) ) ,MLU ) * RMSe ) ) )", "obj1": 0.4063745019920319, "obj2": 0.44427829321322815}, {"determining": "( ( ( ( PN / ( DDR * ( MDR + Const ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + RRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( MUR / ( DS + RCSe ) ) - Max( RRSe,( RMSe / ( RCSe * DS ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.3120324842683448}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( BR / ARS ) ) ) ) ) + AMS ) )", "choosing": "( ( ( Max( RRSe,DS ) - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.7529880478087649, "obj2": 0.1535586408549594}, {"determining": "( ( ( ( PN / ( ( FirstVNF_Mem + DDR ) * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.18269044081545496}, {"determining": "( ( ( ( ACS / ( Min( RRS ,FirstVNF_Mem ) * Min( ( FirstVNF_CPU_Server + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( BR - FirstVNF_Mem_Server ) ) + ( ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS + RCSe ) - ( ( DS * RCSe ) + Max( RCSe,DS ) ) ) / ( ( MLU - MUM ) + MUR ) ) / DS ) ) * RRSe ) / CS )", "obj1": 0.3386454183266932, "obj2": 0.5212920590980682}, {"determining": "( ( ( ( Const / ( DDR * ( Min( FirstVNF_Mem ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( FirstVNF_CPU - ARS ) + Max( RRS,CRS ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( Max( ( Min( Max( ( Max( MLU,MUM ) + DS ),MLU ) ,Max( ( RCSe + Min( DS ,RMSe ) ),MUM ) ) * MUC ),( RMSe / Min( RCSe ,MLU ) ) ),CS ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( RCSe / RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.47410358565737054, "obj2": 0.37993737339430544}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.28286852589641437, "obj2": 0.5716025074141267}, {"determining": "( ( MRS * BR ) + Max( MRS,BR ) )", "choosing": "Min( ( CS * MUC ) ,( RCSe - ( Min( CS ,Min( ( RCSe - ( DS - ( MUR + MUC ) ) ) ,MUR ) ) - MUR ) ) )", "obj1": 0.37649402390438247, "obj2": 0.4968801628585156}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( Max( CRS,FirstVNF_RAM ) - ( ( BR / FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( ( FirstVNF_CPU_Server + ACS ),( FirstVNF_RAM / FirstVNF_Mem ) ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( ( Min( ( MUM - DS ) ,MLU ) / ( ( ( ( MUM - ( MLU / RRSe ) ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) / MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03713461683870236}, {"determining": "( ( ( ( ( ( Max( Const,BR ) * CRS ) - FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) - Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) * CRS ) / ( FirstVNF_CPU * Min( Min( ( ( DDR - CRS ) * ARS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,Min( RRS ,RRS ) ) ) )", "choosing": "( Min( Max( Min( RMSe ,( MUM / Min( Max( RRSe,( MUR / MUC ) ) ,MUM ) ) ),MLU ) ,RRSe ) / Min( Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,Max( MUM,MUM ) ) ,( Min( RCSe ,( MLU - Min( RRSe ,RCSe ) ) ) * Min( RMSe ,Min( MLU ,CS ) ) ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7908951734942623}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.43824701195219123, "obj2": 0.4128604817198128}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( CRS * ( RRS + FirstVNF_CPU ) ) ) ) + ( FirstVNF_CPU_Server + Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) )", "choosing": "( ( RRSe * ( Max( RRSe,DS ) * ( ( MUC * ( Min( MUC ,( CS + MUR ) ) - CS ) ) / DS ) ) ) / ( RCSe + DS ) )", "obj1": 0.896414342629482, "obj2": 0.0473363593199471}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ),( FirstVNF_RAM_Server + ( BR - FirstVNF_Mem ) ) ) + Max( ARS,PN ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.15139442231075698, "obj2": 0.7444826419123457}, {"determining": "( ( Max( ( Const * BR ),BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( BR,ARS ) ) ,AMS ) ) ) - ( DDR + FirstVNF_Mem ) ) ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( ( RMSe * ( ( Min( ( RRSe * ( RMSe + RRSe ) ) ,DS ) / ( Max( ( DS + RRSe ),RCSe ) * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( ( RCSe * RMSe ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.603585657370518, "obj2": 0.2926328907873046}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( DS * MUC ) / Max( RCSe,DS ) )", "obj1": 0.22310756972111553, "obj2": 0.6595385100069121}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_Mem * Max( Max( AMS,( Max( ARS,PN ) - Min( ACS ,AMS ) ) ),( CRS + FirstVNF_CPU_Server ) ) ) ,( MDR + Max( FirstVNF_Mem,( Const / Min( ARS ,( FirstVNF_RAM / ARS ) ) ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RCSe - CS ) / MUR ) + Min( MUC ,MUC ) ) ,( Min( RCSe ,MUM ) - ( ( MUM + Max( CS,DS ) ) + ( MUC * Min( MUR ,( RRSe - CS ) ) ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.08816899349785991}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( RMSe - Max( ( MUC / RMSe ),Max( RRSe,RMSe ) ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.3596847854317509}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_Mem + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / CS ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.450199203187251, "obj2": 0.40969141987247687}, {"determining": "( ( FirstVNF_CPU - ( ( PN / ( DDR * ( Const + Max( MRS,ACS ) ) ) ) - DDR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) + ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( DS,MUC ) * ( CS * Min( RRSe ,RMSe ) ) ) - Min( CS ,Max( ( DS + ( RMSe - Min( RMSe ,RRSe ) ) ),RMSe ) ) ) ,( CS * RRSe ) )", "obj1": 0.4581673306772908, "obj2": 0.3988149133565261}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * Min( ( ( ( Max( FirstVNF_CPU_Server,BR ) - FirstVNF_CPU ) + ( FirstVNF_RAM - ARS ) ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / BR ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( ( ( AMS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS - ( ( RMSe - ( CS + ( Max( MUM,( ( MUM / DS ) + MLU ) ) + ( RMSe * MUC ) ) ) ) * RCSe ) )", "obj1": 0.3286852589641434, "obj2": 0.5358115450422984}, {"determining": "( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - BR ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Min( ( ( AMS * AMS ) + BR ) ,FirstVNF_Mem_Server ) ) ) ) + ( ACS * BR ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( ( Min( MUM ,( RMSe - ( RMSe / MLU ) ) ) / MUM ) / MUM ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6003092773078749}, {"determining": "( Max( BR,FirstVNF_Mem ) + Min( ( FirstVNF_RAM + PN ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Max( RCSe,DS ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1752988047808765, "obj2": 0.7180890140711713}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5872507144768632}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / AMS ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.8247011952191236, "obj2": 0.10009938301963014}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1852589641434263, "obj2": 0.6943736152985586}, {"determining": "( ( ( ( PN + ( Min( Min( ARS ,Max( BR,BR ) ) ,AMS ) * ( FirstVNF_Mem - ( ACS - MDR ) ) ) ) - DDR ) - FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,AMS ) )", "choosing": "( Min( Max( RCSe,( RCSe / ( Max( ( Max( RRSe,MUR ) / Min( MUM ,MUC ) ),( ( RMSe - RRSe ) - CS ) ) * RMSe ) ) ) ,( MUR + ( Min( MUM ,Max( MUC,MUC ) ) * MUC ) ) ) / ( ( RCSe + CS ) / ( MUM * RRSe ) ) )", "obj1": 0.5338645418326693, "obj2": 0.33397693523632505}, {"determining": "( Min( Max( Min( FirstVNF_Mem ,( ( AMS * Min( BR ,PN ) ) + MDR ) ),MDR ) ,( RRS + FirstVNF_CPU ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( DS ,MLU ) * ( DS / ( CS / MLU ) ) ) / ( MUM * CS ) ) / DS ) ) ) / Min( ( RCSe * MLU ) ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.6811622624365571}, {"determining": "( ( FirstVNF_Mem + Min( ( Min( Min( ACS ,Max( FirstVNF_RAM,( FirstVNF_CPU_Server + ARS ) ) ) ,FirstVNF_RAM_Server ) / FirstVNF_CPU ) ,CRS ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( ( ( MUM - MUR ) - Min( CS ,MLU ) ) - ( MUR / ( MLU - RMSe ) ) ) ) + CS ) * ( ( DS / MUM ) / DS ) ) ) / ( RCSe * DS ) )", "obj1": 0.16733067729083664, "obj2": 0.7320255530739409}, {"determining": "( ( Max( ( Max( Const,( Max( CRS,ACS ) - MRS ) ) * CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RCSe * DS ) ) * ( ( RCSe * ( RRSe * ( Max( MLU,MLU ) + ( MUM - DS ) ) ) ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7545905761175521}, {"determining": "( ( PN + FirstVNF_Mem ) + ( DDR / ACS ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * Max( ( ( ( DS / ( RMSe / MLU ) ) * ( RRSe / RRSe ) ) / MUM ),DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6686407471310237}, {"determining": "( ( ( ( PN / ( DDR * ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) + ( Min( ARS ,MDR ) - FirstVNF_Mem_Server ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_Mem + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( ( MLU - MUR ) / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / CS ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.5239043824701195, "obj2": 0.336727015734142}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( BR / FirstVNF_RAM_Server ) ) ) ) ) + AMS ) )", "choosing": "( Min( Max( ( CS / MLU ),Min( CS ,MUC ) ) ,DS ) - Max( ( MLU + CS ),Min( DS ,( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.7649402390438247, "obj2": 0.14841491378137087}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( Min( ACS ,Const ) - ( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( Max( ( FirstVNF_Mem * FirstVNF_RAM ),( ACS * FirstVNF_CPU_Server ) ) + AMS ) ) ) + ( FirstVNF_CPU_Server + Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) )", "choosing": "( Max( RRSe,( Max( RRSe,DS ) * ( ( ( Max( ( DS / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / ( RCSe + DS ) )", "obj1": 0.8605577689243028, "obj2": 0.06877641369397051}, {"determining": "( ( ACS + ( Min( DDR ,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_Mem_Server / Const ) / BR ) * ( FirstVNF_CPU + AMS ) ) ) ) + Min( ACS ,MRS ) )", "choosing": "( ( RRSe * ( ( ( RRSe * ( Min( MUM ,( CS - RMSe ) ) - CS ) ) / RMSe ) * ( DS - RCSe ) ) ) / ( CS / Max( MUM,RCSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7380843293312602}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( ( RRSe - RMSe ) * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.1846386318798677}, {"determining": "( ( ( ( PN / ( DDR * ( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU ) + ( BR * PN ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUR + ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( Min( RCSe ,DS ) - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.40039840637450197, "obj2": 0.45658013537015923}, {"determining": "( ( FirstVNF_CPU_Server - ( DDR - ( PN / ( Max( ARS,Min( Const ,DDR ) ) * Min( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) ) ) + ( ( ( Max( ( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) * FirstVNF_RAM ),ARS ) + CRS ) / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( Max( ( MLU - Max( MUC,RRSe ) ),DS ) * RCSe ) - ( CS * ( RCSe - ( CS / RRSe ) ) ) ) ) ) + ( RCSe / Min( MLU ,MUR ) ) )", "obj1": 0.39243027888446214, "obj2": 0.4660131155585617}, {"determining": "( ( Max( ( Max( Const,BR ) * CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.13147410358565736, "obj2": 0.7665548655804789}, {"determining": "( ( Max( Const,BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,BR ) ) ,AMS ) ) ) - DDR ) ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * RMSe ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.29351684822305674}, {"determining": "( ( ( ( MDR + MRS ) - ( ( ARS / FirstVNF_CPU_Server ) * ( AMS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) + AMS ) - Max( FirstVNF_CPU_Server,BR ) )", "choosing": "Min( Max( RCSe,( DS + MUC ) ) ,( Max( ( MUM / ( MUR + Max( ( RRSe * Min( RMSe ,MLU ) ),CS ) ) ),RRSe ) * MUM ) )", "obj1": 0.9800796812749004, "obj2": 0.007736285462954932}, {"determining": "( ( FirstVNF_Mem + Min( ( RRS - FirstVNF_CPU ) ,( ( Min( CRS ,FirstVNF_Mem_Server ) / ( DDR + FirstVNF_Mem ) ) - Max( BR,( BR / ARS ) ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( RCSe / MUM ),MUC ) * ( RRSe / MLU ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / ( RMSe + DS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.23705179282868527, "obj2": 0.6393395150082117}, {"determining": "( ( FirstVNF_Mem + Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,( RRS + FirstVNF_CPU ) ) ) ,( Max( Min( PN ,Const ),CRS ) * PN ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MUM - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MUR ) ) * ( MUC / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21115537848605578, "obj2": 0.6770035627298239}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,( FirstVNF_Mem + ARS ) ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( FirstVNF_CPU_Server + Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) )", "choosing": "( ( RRSe * ( Max( RRSe,DS ) * ( ( ( Max( ( MUM / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / ( MUC * MUC ) )", "obj1": 0.8725099601593626, "obj2": 0.06303431791786979}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,Const ) - Min( ACS ,DDR ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( ( Const / MRS ) ,PN ) ) ) )", "choosing": "Min( Min( ( Min( MUC ,MUC ) + Min( ( RCSe - CS ) ,MUR ) ) ,( RCSe - ( MUR - DS ) ) ) ,( MLU - MUR ) )", "obj1": 0.9661354581673307, "obj2": 0.014618587496227011}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS + PN ) * Min( ACS ,ARS ) ) ) ) + AMS ) )", "choosing": "( ( ( Max( RRSe,DS ) - ( ( MUM + Max( CS,DS ) ) + Min( DS ,Max( ( ( RCSe / MUM ) / ( MUM / RCSe ) ),Min( RMSe ,MUR ) ) ) ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.7709163346613546, "obj2": 0.1343277453824454}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * ( ( Min( ARS ,PN ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( MLU - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( ( RRSe * MUR ),DS ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.3047808764940239, "obj2": 0.5601356701770743}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( ARS + RRS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) + ( ( CRS / ACS ) - FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,RRSe ) ,( ( MUR * RRSe ) - Min( ( CS * MUR ) ,Max( MUM,RMSe ) ) ) )", "obj1": 0.5438247011952191, "obj2": 0.3251072904412896}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Max( ( CRS / ( RRS / Const ) ),AMS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( RCSe * MUR ) - Min( DS ,MUC ) ) ) + CS ) ) ,( CS * Max( CS,Min( Min( RRSe ,MUM ) ,DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.34189778521614395}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * ( ( Max( MDR,( ( RRS * FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * MRS ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / MUM ) - ( ( MUR * RMSe ) / ( MLU / RMSe ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5225051866233799}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3938915936663898}, {"determining": "( ( ( ( PN / ( DDR * Min( ( FirstVNF_CPU_Server + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( DS / ( CS / MLU ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.3904382470119522, "obj2": 0.473671870138105}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( ( FirstVNF_Mem_Server + ARS ) * ( ( ARS / PN ) * ( ( RRS - ARS ) - FirstVNF_CPU ) ) ) ) + AMS ) )", "choosing": "( ( ( RMSe - ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * RMSe ) ) ) / ( MLU * CS ) ) ) * RMSe ) - Max( ( MLU + CS ),( DS / ( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.08577834902056759}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( Max( Const,BR ) * CRS ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9342629482071713, "obj2": 0.02635535790648498}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( FirstVNF_CPU * ( ( Min( ARS ,PN ) * ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( CS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,Min( RCSe ,MLU ) ) )", "obj1": 0.23306772908366533, "obj2": 0.650261559813404}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,ACS ) - Min( DDR ,ACS ) ) / ( ( AMS / CRS ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) ) ) + Min( DDR ,ARS ) ) + ( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe * MLU ) * ( MLU / DS ) ) ) / ( DS + RCSe ) )", "obj1": 0.8884462151394422, "obj2": 0.050243154090234145}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( ARS ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( Max( MLU,MLU ) + ( MUM - DS ) ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Max( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ),( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),( ( DS * MUM ) + Max( ( MUC + MLU ),CS ) ) ) ) ) ) )", "obj1": 0.3804780876494024, "obj2": 0.48315411613040915}, {"determining": "( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / ( MUM + Max( CS,DS ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.32270916334661354, "obj2": 0.5444982532559801}, {"determining": "( Max( BR,MRS ) + ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - ( DS / ( CS / ( ( ( MUC * MUM ) + ( ( Min( DS ,RMSe ) * MUR ) - ( Min( MUR ,CS ) - RMSe ) ) ) - Min( DS ,Min( ( MLU - ( RCSe + MUR ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5889308446954941}, {"determining": "( ( Max( Const,BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,FirstVNF_CPU ) ) ,AMS ) ) ) - DDR ) ) / ( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,Const ) ) * Min( Max( Min( CRS ,FirstVNF_RAM_Server ),MDR ) ,( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe * ( ( MUM / ( RRSe * ( DS - ( ( CS - RMSe ) / MLU ) ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.549800796812749, "obj2": 0.31562900256749604}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( Max( MRS,BR ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),( ( MUR * MUC ) * MUC ) ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.7868525896414342, "obj2": 0.13130638603644582}, {"determining": "( ( FirstVNF_Mem + ( CRS * ( FirstVNF_CPU_Server * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( BR * FirstVNF_RAM ) ) / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,BR ) ) ) ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( DS / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.17330677290836655, "obj2": 0.7219920237722419}, {"determining": "( ( ( ( PN / ( Max( MDR,DDR ) * ( Min( ( CRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + RRS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * MUR ) ,( MUC - ( ( ( ( MUC - Min( ( MUR * RMSe ) ,RMSe ) ) - Min( DS ,MUC ) ) - ( Max( ( ( RMSe / MUR ) * Min( MUC ,CS ) ),MUR ) * MUR ) ) + CS ) ) )", "obj1": 0.4860557768924303, "obj2": 0.3694928367611208}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( BR * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( RRSe / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( MUR,( RRSe - CS ) ) + CS ) ) ) / Max( MUR,RCSe ) )", "obj1": 0.952191235059761, "obj2": 0.019073435711173106}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( Min( ARS ,Max( ARS,BR ) ) * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / ARS ) ) ) ) ) + AMS ) )", "choosing": "( ( ( RMSe - ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * RMSe ) ) ) / MUM ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.8027888446215139, "obj2": 0.11645600437695774}, {"determining": "( ( ( Const + PN ) - FirstVNF_CPU ) + ( Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ACS ),MRS ) / ( FirstVNF_Mem_Server + Min( ARS ,Max( ARS,BR ) ) ) ) )", "choosing": "( Min( RCSe ,Max( Min( DS ,MUM ),Min( CS ,DS ) ) ) - Max( ( MLU + CS ),Min( DS ,MUC ) ) )", "obj1": 0.9721115537848606, "obj2": 0.012702568252888407}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server - ( ( PN / ARS ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MDR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( ( ( ( ( DS / ( CS / MLU ) ) / ( RRSe / RRSe ) ) / MUM ) / DS ),( ( MUM + Max( CS,DS ) ) + ( ( ( MUC * Max( CS,MUM ) ) + ( MUC * CS ) ) * MUR ) ) ) * RRSe ) ,( RCSe - ( CS / MLU ) ) )", "obj1": 0.8824701195219123, "obj2": 0.056937742440292365}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.8167330677290837, "obj2": 0.10359692791078744}, {"determining": "( ( FirstVNF_Mem + Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( Max( Min( Min( ACS ,MDR ) ,FirstVNF_RAM_Server ),FirstVNF_CPU ) + FirstVNF_CPU ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( ( ( Min( MUM ,MUR ) + DS ) / MUR ),( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.20119521912350596, "obj2": 0.6792864404252769}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5579801884209764}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) ) ) ) )", "obj1": 0.38247011952191234, "obj2": 0.479956916364848}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( Min( ACS ,MDR ) ,FirstVNF_RAM_Server ),MDR ) ,( Max( Const,BR ) * CRS ) ) ,PN ) ) ) )", "choosing": "( ( ( RMSe - ( ( MUM + Max( ( DS - Max( CS,MUM ) ),DS ) ) + ( MUC * MUR ) ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( MLU - Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.9402390438247012, "obj2": 0.024479106630727318}, {"determining": "( ( ( ( PN / ( ( ( BR - BR ) / FirstVNF_CPU_Server ) * DDR ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( RCSe + MUC ) ) - RRSe ) / Max( RRSe,Min( MUM ,MUR ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.50199203187251, "obj2": 0.3516785946348392}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ) ) * DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * MUR ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( ( RCSe * ( ( CS + CS ) - Max( ( Min( RCSe ,DS ) - ( CS - CS ) ),Min( RRSe ,MUC ) ) ) ) * CS ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.4043824701195219, "obj2": 0.45026915838694315}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( CS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.4860557768924303, "obj2": 0.3694928367611208}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) / PN ) * ( FirstVNF_CPU - Max( RRS,Max( MRS,FirstVNF_RAM_Server ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ),( ( MUM * Max( CS,DS ) ) + ( ( ( DS / ( RMSe * MUM ) ) - RMSe ) * MUR ) ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.8545816733067729, "obj2": 0.0741546876192399}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( BR / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) ) ) + AMS ) )", "choosing": "( ( ( RMSe - ( ( RCSe + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.7749003984063745, "obj2": 0.13293942999517244}, {"determining": "( ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( DDR / Max( BR,MRS ) ) ) ) ) ) + AMS ) - ( FirstVNF_CPU_Server + BR ) )", "choosing": "( CS - ( Max( CS,DS ) * RCSe ) )", "obj1": 0.8067729083665338, "obj2": 0.10958087500993277}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( CRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / Max( ( MUM / RCSe ),MUC ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( Min( RCSe ,DS ) - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.796812749003984, "obj2": 0.1203653996736226}, {"determining": "( Max( Max( ARS,Const ),ACS ) + ( RRS + MRS ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * Min( RMSe ,Min( ( MUC + Max( DS,MUM ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5657803926494337}, {"determining": "( Min( Max( ( PN * Const ),( FirstVNF_CPU_Server * AMS ) ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUM,( RRSe - MUM ) ) + CS ) * ( ( MUM * DS ) / ( MUM + Max( RMSe,DS ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3187250996015936, "obj2": 0.5542942438841949}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.5079681274900398, "obj2": 0.3458500801583967}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) ) + AMS ) )", "choosing": "( DS + Min( ( MUR - ( MLU + CS ) ) ,MUM ) )", "obj1": 0.7569721115537849, "obj2": 0.14936179660385798}], "17": [{"determining": "( ( Max( Const,BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,FirstVNF_CPU ) ) ,( ( MRS * Const ) - FirstVNF_RAM_Server ) ) ) ) - DDR ) ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( ( MUM / CS ) + MLU ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,ARS ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( FirstVNF_CPU / Max( FirstVNF_Mem_Server,MRS ) ) ) ) ) ) - BR ) )", "choosing": "( ( ( ( ( ( RRSe + MUM ) * ( RRSe + MLU ) ) - Max( RCSe,MUR ) ) / MLU ) + ( MUC * MUR ) ) - ( ( MLU + CS ) / Min( MUR ,( ( Min( Min( DS ,MLU ) ,MLU ) - MUR ) - Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.647410358565737, "obj2": 0.18930484609684192}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_Mem + BR ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe + Min( Max( ( CS / MLU ),Min( CS ,MUC ) ) ,DS ) ) ,( RRSe - DS ) ) ) ) / MUR )", "obj1": 0.6314741035856574, "obj2": 0.23801662576279442}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7111553784860558, "obj2": 0.15191794179637277}, {"determining": "( ( ( ( MRS / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ( FirstVNF_Mem + ARS ) / ( ( ACS * MRS ) + ARS ) ) ) )", "choosing": "( CS / ( RRSe * ( ( ( ( RRSe * RRSe ) + Max( CS,( Max( RRSe,CS ) * ( MLU / MUR ) ) ) ) / Max( RRSe,DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.41832669322709165, "obj2": 0.42235747213588654}, {"determining": "( ( Max( ( Const + BR ),BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,BR ) ) ,AMS ) ) ) - DDR ) ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( Max( RRSe,( ( ( ( ( DS / Max( MUM,RRSe ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( MUR,( RRSe - MUM ) ) + CS ) ) ) / Max( RCSe,MUR ) )", "obj1": 0.6215139442231076, "obj2": 0.2590278425923966}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) ) + AMS ) )", "choosing": "( DS + Min( ( MUR - ( MLU + CS ) ) ,MUM ) )", "obj1": 0.7569721115537849, "obj2": 0.14936179660385798}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_CPU * Const ),FirstVNF_RAM ) * MRS ) )", "choosing": "( Max( ( ( MUM * MUC ) * MUC ),CS ) + Min( ( ( RRSe - RMSe ) * ( RCSe * ( ( ( RRSe / ( MUM + RRSe ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RRSe / RCSe ) ) )", "obj1": 0.6912350597609562, "obj2": 0.18754947200816732}, {"determining": "( ( Max( Const,BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,FirstVNF_CPU ) ) ,AMS ) ) ) - DDR ) ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,( ARS / PN ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * ( MUM + Max( CS,DS ) ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5717131474103586, "obj2": 0.29912309142265386}, {"determining": "( ( ( ACS + ( ( ( Min( Max( DDR,ACS ) ,FirstVNF_Mem ) + Max( MRS,( DDR + FirstVNF_CPU_Server ) ) ) * MDR ) + ( FirstVNF_CPU_Server - PN ) ) ) + BR ) - ( PN / FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( CS ,Min( Max( MLU,( Min( CS ,( MLU - MUR ) ) / Max( MLU,DS ) ) ) ,( RCSe * ( MUC / MLU ) ) ) ) ) - Max( ( MLU + CS ),Min( DS ,RCSe ) ) )", "obj1": 0.6055776892430279, "obj2": 0.2675831356670546}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + Max( MRS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) + ( ( Max( DDR,Max( ARS,Const ) ) * ( PN * ACS ) ) - PN ) ) + ( ( FirstVNF_CPU / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM * FirstVNF_CPU ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MUM ) * ( RMSe / MUM ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.49865653294254103}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ( RRS * ACS ) ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ( FirstVNF_Mem - FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( ( RRSe - RMSe ) * ( RCSe * ( ( Max( RRSe,( MUM + MUC ) ) - RRSe ) - Max( ( MLU / DS ),( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.18251123746814452}, {"determining": "( ( ( ( ACS / ( Min( RRS ,FirstVNF_Mem ) * Min( ( FirstVNF_CPU_Server + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( BR - FirstVNF_Mem_Server ) ) + ( ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS + RCSe ) - ( ( DS * RCSe ) + Max( RCSe,DS ) ) ) / ( ( MLU - MUM ) + MUR ) ) / DS ) ) * RRSe ) / CS )", "obj1": 0.3386454183266932, "obj2": 0.5212920590980682}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.43824701195219123, "obj2": 0.4128604817198128}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_CPU_Server - ( CRS * CRS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( CS * RCSe ) - ( CS * ( RCSe - ( RRSe / RRSe ) ) ) ) / MUR ) ) + ( RCSe * ( Min( ( ( MLU / MLU ) + ( ( ( CS + RMSe ) * ( RCSe / RCSe ) ) * Max( MUC,Max( CS,RRSe ) ) ) ) ,MLU ) * RMSe ) ) )", "obj1": 0.4063745019920319, "obj2": 0.44427829321322815}, {"determining": "( ( Max( ( Max( Const,( Max( CRS,ACS ) - MRS ) ) * CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RCSe * DS ) ) * ( ( RCSe * ( RRSe * ( Max( MLU,MLU ) + ( MUM - DS ) ) ) ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7545905761175521}, {"determining": "( ( FirstVNF_CPU - ( ( PN / ( DDR * ( Const + Max( MRS,ACS ) ) ) ) - DDR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) + ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( DS,MUC ) * ( CS * Min( RRSe ,RMSe ) ) ) - Min( CS ,Max( ( DS + ( RMSe - Min( RMSe ,RRSe ) ) ),RMSe ) ) ) ,( CS * RRSe ) )", "obj1": 0.4581673306772908, "obj2": 0.3988149133565261}, {"determining": "( Max( CRS,FirstVNF_RAM ) - ( ( BR / FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( ( FirstVNF_CPU_Server + ACS ),( FirstVNF_RAM / FirstVNF_Mem ) ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( ( Min( ( MUM - DS ) ,MLU ) / ( ( ( ( MUM - ( MLU / RRSe ) ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) / MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03713461683870236}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( ( Max( ( Const * BR ),BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( BR,ARS ) ) ,AMS ) ) ) - ( DDR + FirstVNF_Mem ) ) ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( ( RMSe * ( ( Min( ( RRSe * ( RMSe + RRSe ) ) ,DS ) / ( Max( ( DS + RRSe ),RCSe ) * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( ( RCSe * RMSe ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.603585657370518, "obj2": 0.2926328907873046}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( FirstVNF_RAM_Server,ARS ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( FirstVNF_CPU + BR ) )", "choosing": "( Max( ( Max( MLU,MLU ) + MLU ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) ) ) ) )", "obj1": 0.5577689243027888, "obj2": 0.3106635066023604}, {"determining": "( ( ( ( ( ( Max( Const,BR ) * CRS ) - FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) - Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) * CRS ) / ( FirstVNF_CPU * Min( Min( ( ( DDR - CRS ) * ARS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,Min( RRS ,RRS ) ) ) )", "choosing": "( Min( Max( Min( RMSe ,( MUM / Min( Max( RRSe,( MUR / MUC ) ) ,MUM ) ) ),MLU ) ,RRSe ) / Min( Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,Max( MUM,MUM ) ) ,( Min( RCSe ,( MLU - Min( RRSe ,RCSe ) ) ) * Min( RMSe ,Min( MLU ,CS ) ) ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7908951734942623}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( Max( Const,BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,BR ) ) ,AMS ) ) ) - DDR ) ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * RMSe ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.29351684822305674}, {"determining": "( ( ( ( Const / ( DDR * ( Min( FirstVNF_Mem ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( FirstVNF_CPU - ARS ) + Max( RRS,CRS ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( Max( ( Min( Max( ( Max( MLU,MUM ) + DS ),MLU ) ,Max( ( RCSe + Min( DS ,RMSe ) ),MUM ) ) * MUC ),( RMSe / Min( RCSe ,MLU ) ) ),CS ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( RCSe / RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.47410358565737054, "obj2": 0.37993737339430544}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( ACS ,DDR ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( ( FirstVNF_CPU_Server + ACS ),FirstVNF_CPU ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MUM - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MUR ) ) * ( MUC / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.896414342629482, "obj2": 0.04518621160130885}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( CRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( Min( RCSe ,DS ) - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) )", "obj1": 0.5358565737051793, "obj2": 0.31704331989593815}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( RMSe - Max( ( MUC / RMSe ),Max( RRSe,RMSe ) ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.3596847854317509}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.28286852589641437, "obj2": 0.5716025074141267}, {"determining": "( ( Max( ( Max( Const,BR ) * CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.13147410358565736, "obj2": 0.7665548655804789}, {"determining": "( ( ( ( MDR + MRS ) - ( ( ARS / FirstVNF_CPU_Server ) * ( AMS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) + AMS ) - Max( FirstVNF_CPU_Server,BR ) )", "choosing": "Min( Max( RCSe,( DS + MUC ) ) ,( Max( ( MUM / ( MUR + Max( ( RRSe * Min( RMSe ,MLU ) ),CS ) ) ),RRSe ) * MUM ) )", "obj1": 0.9800796812749004, "obj2": 0.007736285462954932}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4641434262948207, "obj2": 0.3850811387849671}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( DS * MUC ) / Max( RCSe,DS ) )", "obj1": 0.22310756972111553, "obj2": 0.6595385100069121}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( FirstVNF_CPU * ( ( Min( ARS ,PN ) * ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( CS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,Min( RCSe ,MLU ) ) )", "obj1": 0.23306772908366533, "obj2": 0.650261559813404}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( Max( MRS,BR ) / Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( CS * MUR ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( RRSe * MUC ) ),( ( MUR * MUC ) * MUC ) ) * MUR ) - Max( ( MUC - RCSe ),RRSe ) ) + CS ) ) )", "obj1": 0.7868525896414342, "obj2": 0.13130638603644582}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_Mem * Max( Max( AMS,( Max( ARS,PN ) - Min( ACS ,AMS ) ) ),( CRS + FirstVNF_CPU_Server ) ) ) ,( MDR + Max( FirstVNF_Mem,( Const / Min( ARS ,( FirstVNF_RAM / ARS ) ) ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RCSe - CS ) / MUR ) + Min( MUC ,MUC ) ) ,( Min( RCSe ,MUM ) - ( ( MUM + Max( CS,DS ) ) + ( MUC * Min( MUR ,( RRSe - CS ) ) ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.08816899349785991}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( ( RMSe / MUR ) * ( MUM + MUR ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.448207171314741, "obj2": 0.40908253170221176}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + Min( ARS ,Max( AMS,BR ) ) )", "choosing": "Min( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.5258964143426295, "obj2": 0.32853960076305}, {"determining": "( Max( Max( ARS,Const ),ACS ) + ( RRS + MRS ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * Min( RMSe ,Min( ( MUC + Max( DS,MUM ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5657803926494337}, {"determining": "( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / ( MUM + Max( CS,DS ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.32270916334661354, "obj2": 0.5444982532559801}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * Min( ( ( ( Max( FirstVNF_CPU_Server,BR ) - FirstVNF_CPU ) + ( FirstVNF_RAM - ARS ) ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / BR ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( ( ( AMS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS - ( ( RMSe - ( CS + ( Max( MUM,( ( MUM / DS ) + MLU ) ) + ( RMSe * MUC ) ) ) ) * RCSe ) )", "obj1": 0.3286852589641434, "obj2": 0.5358115450422984}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - BR ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Min( ( ( AMS * AMS ) + BR ) ,FirstVNF_Mem_Server ) ) ) ) + ( ACS * BR ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( ( Min( MUM ,( RMSe - ( RMSe / MLU ) ) ) / MUM ) / MUM ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6003092773078749}, {"determining": "( ( FirstVNF_CPU * ( ACS + FirstVNF_RAM_Server ) ) / ( Max( Min( ( FirstVNF_CPU_Server + ( MDR + BR ) ) ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) * CRS ) )", "choosing": "( ( RRSe * ( ( RMSe - ( ( RMSe / ( ( MUC * MUM ) * RMSe ) ) - CS ) ) * ( ( ( Min( RCSe ,DS ) * Max( MLU,( MUR - CS ) ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1752988047808765, "obj2": 0.7130042765718382}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( ( RRSe - RMSe ) * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ) )", "obj1": 0.8247011952191236, "obj2": 0.09990411025931492}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1852589641434263, "obj2": 0.6943736152985586}, {"determining": "( Min( Max( Min( FirstVNF_Mem ,( ( AMS * Min( BR ,PN ) ) + MDR ) ),MDR ) ,( RRS + FirstVNF_CPU ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( DS ,MLU ) * ( DS / ( CS / MLU ) ) ) / ( MUM * CS ) ) / DS ) ) ) / Min( ( RCSe * MLU ) ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.6811622624365571}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( FirstVNF_RAM_Server,ARS ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( Max( MLU,MLU ) + ( MUM - DS ) ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) ) ) ) )", "obj1": 0.3884462151394422, "obj2": 0.46175685085323714}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( CRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / Max( ( MUM / RCSe ),MUC ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( Min( RCSe ,DS ) - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.796812749003984, "obj2": 0.1203653996736226}, {"determining": "( ( FirstVNF_Mem + Min( ( RRS - FirstVNF_CPU ) ,( ( Min( CRS ,FirstVNF_Mem_Server ) / ( DDR + FirstVNF_Mem ) ) - Max( BR,( BR / ARS ) ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( RCSe / MUM ),MUC ) * ( RRSe / MLU ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / ( RMSe + DS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.23705179282868527, "obj2": 0.6393395150082117}, {"determining": "( ( FirstVNF_Mem + Min( ( Min( Min( ACS ,Max( FirstVNF_RAM,( FirstVNF_CPU_Server + ARS ) ) ) ,FirstVNF_RAM_Server ) / FirstVNF_CPU ) ,CRS ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( ( ( MUM - MUR ) - Min( CS ,MLU ) ) - ( MUR / ( MLU - RMSe ) ) ) ) + CS ) * ( ( DS / MUM ) / DS ) ) ) / ( RCSe * DS ) )", "obj1": 0.16733067729083664, "obj2": 0.7320255530739409}, {"determining": "( ( PN + FirstVNF_Mem ) + ( DDR / ACS ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * Max( ( ( ( DS / ( RMSe / MLU ) ) * ( RRSe / RRSe ) ) / MUM ),DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6686407471310237}, {"determining": "( ( ( ( PN / ( DDR * Min( ( FirstVNF_CPU_Server + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( DS / ( CS / MLU ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.49347176579993896}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( BR / FirstVNF_RAM_Server ) ) ) ) ) + AMS ) )", "choosing": "( Min( Max( ( CS / MLU ),Min( CS ,MUC ) ) ,DS ) - Max( ( MLU + CS ),Min( DS ,( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.7649402390438247, "obj2": 0.14841491378137087}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_RAM_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.50199203187251, "obj2": 0.34942891536913206}, {"determining": "( ( Max( Const,BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,FirstVNF_CPU ) ) ,AMS ) ) ) - DDR ) ) / ( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,Const ) ) * Min( Max( Min( CRS ,FirstVNF_RAM_Server ),MDR ) ,( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe * ( ( MUM / ( RRSe * ( DS - ( ( CS - RMSe ) / MLU ) ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.549800796812749, "obj2": 0.31562900256749604}, {"determining": "( ( FirstVNF_Mem + ( CRS * ( FirstVNF_CPU_Server * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( BR * FirstVNF_RAM ) ) / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,BR ) ) ) ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( DS / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.17330677290836655, "obj2": 0.7219920237722419}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.8167330677290837, "obj2": 0.10359692791078744}, {"determining": "( ( ( ( PN / ( DDR * ( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU ) + ( BR * PN ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUR + ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( Min( RCSe ,DS ) - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.40039840637450197, "obj2": 0.45658013537015923}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) / PN ) * ( FirstVNF_CPU - Max( RRS,Max( MRS,FirstVNF_RAM_Server ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ),( ( MUM * Max( CS,DS ) ) + ( ( ( DS / ( RMSe * MUM ) ) - RMSe ) * MUR ) ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.8545816733067729, "obj2": 0.0741546876192399}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,ACS ) - Min( ( ( ( BR * MDR ) / FirstVNF_CPU_Server ) * DDR ) ,ACS ) ) / ( ( ARS * ( FirstVNF_Mem + Min( ( PN - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / BR ) / Min( BR ,ACS ) ) + Max( DDR,( FirstVNF_CPU - ( Min( DDR ,FirstVNF_CPU_Server ) * ( AMS * ACS ) ) ) ) ) ) ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( DS + DS ) * ( ( ( MUC + MUC ) + ( RRSe / ( MUM + MUC ) ) ) / DS ) ) ) / ( DS + RCSe ) )", "obj1": 0.99800796812749, "obj2": 0.0018962984458456432}, {"determining": "( ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( DDR / Max( BR,MRS ) ) ) ) ) ) + AMS ) - ( FirstVNF_CPU_Server + BR ) )", "choosing": "( CS - ( Max( CS,DS ) * RCSe ) )", "obj1": 0.8067729083665338, "obj2": 0.10958087500993277}, {"determining": "( ( FirstVNF_Mem + Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,( RRS + FirstVNF_CPU ) ) ) ,( Max( Min( PN ,Const ),CRS ) * PN ) ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MUM - MUM ) ) + CS ) * ( ( ( ( DS / ( CS / MUR ) ) * ( MUC / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21115537848605578, "obj2": 0.6770035627298239}, {"determining": "( ( FirstVNF_Mem + Min( ( ARS - BR ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Min( ( ( AMS * PN ) + BR ) ,( FirstVNF_RAM - FirstVNF_RAM ) ) ) ) ) + ( ACS * BR ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( ( ( MUC + Min( Max( RRSe,CS ) ,CS ) ) * Min( DS ,RRSe ) ) ,( ( Min( MUM ,( RMSe - ( RMSe / MLU ) ) ) / MUM ) / ( RRSe - MUM ) ) ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5853453110647829}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS + PN ) * Min( ACS ,ARS ) ) ) ) + AMS ) )", "choosing": "( ( ( Max( RRSe,DS ) - ( ( MUM + Max( CS,DS ) ) + Min( DS ,Max( ( ( RCSe / MUM ) / ( MUM / RCSe ) ),Min( RMSe ,MUR ) ) ) ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.7709163346613546, "obj2": 0.1343277453824454}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,ACS ) - Min( DDR ,ACS ) ) / ( ( AMS / CRS ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) ) ) + Min( DDR ,ARS ) ) + ( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe * MLU ) * ( MLU / DS ) ) ) / ( DS + RCSe ) )", "obj1": 0.8884462151394422, "obj2": 0.050243154090234145}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( Max( BR,FirstVNF_Mem ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.31274900398406374, "obj2": 0.552495631536939}, {"determining": "( ( ACS + ( Min( DDR ,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_Mem_Server / Const ) / BR ) * ( FirstVNF_CPU + AMS ) ) ) ) + Min( ACS ,MRS ) )", "choosing": "( ( RRSe * ( ( ( RRSe * ( Min( MUM ,( CS - RMSe ) ) - CS ) ) / RMSe ) * ( DS - RCSe ) ) ) / ( CS / Max( MUM,RCSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7380843293312602}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * ( ( Min( ARS ,PN ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( MLU - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( ( RRSe * MUR ),DS ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.3047808764940239, "obj2": 0.5601356701770743}, {"determining": "( ( MRS + MRS ) + ( Max( DDR,FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( ( ( ( MUR * ( ( MUR + DS ) / ( MLU * ( RCSe - ( MUM * CS ) ) ) ) ) * ( MUM * Min( ( ( MLU / ( DS * DS ) ) * MUR ) ,MUR ) ) ) - CS ) + Min( Max( Min( Min( DS ,DS ) ,Max( MUR,MUR ) ),DS ) ,Max( Max( Min( ( MLU / RRSe ) ,RMSe ),MLU ),MLU ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6272215552082994}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ),( FirstVNF_RAM_Server + ( BR - FirstVNF_Mem ) ) ) + Max( ARS,PN ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.15139442231075698, "obj2": 0.7444826419123457}, {"determining": "( ( Max( ( PN / ( DDR * ( Max( MDR,( FirstVNF_Mem / MDR ) ) + ( FirstVNF_Mem_Server - Min( ARS ,MDR ) ) ) ) ),DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_Mem + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( Max( MLU,RMSe ) ,( RMSe - ( MUC + CS ) ) ) )", "obj1": 0.5219123505976095, "obj2": 0.33628798638048824}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.38645418326693226, "obj2": 0.4733645177698631}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * ( ( Max( MDR,( ( RRS * FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * MRS ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / MUM ) - ( ( MUR * RMSe ) / ( MLU / RMSe ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5225051866233799}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( ARS ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( Max( MLU,MLU ) + ( MUM - DS ) ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Max( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ),( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),( ( DS * MUM ) + Max( ( MUC + MLU ),CS ) ) ) ) ) ) )", "obj1": 0.3804780876494024, "obj2": 0.48315411613040915}, {"determining": "( Max( BR,MRS ) + ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - ( DS / ( CS / ( ( ( MUC * MUM ) + ( ( Min( DS ,RMSe ) * MUR ) - ( Min( MUR ,CS ) - RMSe ) ) ) - Min( DS ,Min( ( MLU - ( RCSe + MUR ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5889308446954941}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) ) ) ) )", "obj1": 0.3645418326693227, "obj2": 0.49685397419801136}, {"determining": "( ( ( ( PN / ( DDR / Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - MRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_RAM_Server ) ) * ( ( Min( FirstVNF_Mem ,ACS ) - ( FirstVNF_RAM_Server + ARS ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( Min( ( RRSe / ( MUR + MUC ) ) ,RRSe ) - Max( RRSe,( ( CS + MLU ) * Min( MUC ,RRSe ) ) ) ) ) ) ,Min( CS ,( MUM * MLU ) ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6317526071052565}, {"determining": "( ( ( ( PN / ( Max( MDR,DDR ) * ( Min( ( CRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + RRS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * MUR ) ,( MUC - ( ( ( ( MUC - Min( ( MUR * RMSe ) ,RMSe ) ) - Min( DS ,MUC ) ) - ( Max( ( ( RMSe / MUR ) * Min( MUC ,CS ) ),MUR ) * MUR ) ) + CS ) ) )", "obj1": 0.4860557768924303, "obj2": 0.3694928367611208}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,( FirstVNF_Mem + ARS ) ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( FirstVNF_CPU_Server + Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ,PN ) ) )", "choosing": "( ( RRSe * ( Max( RRSe,DS ) * ( ( ( Max( ( MUM / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / ( MUC * ( ( Max( MUR,( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.848605577689243, "obj2": 0.08386143672355684}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server - ( ( PN / ARS ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MDR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( ( ( ( ( DS / ( CS / MLU ) ) / ( RRSe / RRSe ) ) / MUM ) / DS ),( ( MUM + Max( CS,DS ) ) + ( ( ( MUC * Max( CS,MUM ) ) + ( MUC * CS ) ) * MUR ) ) ) * RRSe ) ,( RCSe - ( CS / MLU ) ) )", "obj1": 0.8824701195219123, "obj2": 0.056937742440292365}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( Min( ARS ,Max( ARS,BR ) ) * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / ARS ) ) ) ) ) + AMS ) )", "choosing": "( ( ( RMSe - ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * RMSe ) ) ) / MUM ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.8027888446215139, "obj2": 0.11645600437695774}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( ( FirstVNF_Mem_Server + ARS ) * ( ( ARS / PN ) * ( ( RRS - ARS ) - FirstVNF_CPU ) ) ) ) + AMS ) )", "choosing": "( ( ( RMSe - ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * RMSe ) ) ) / ( MLU * CS ) ) ) * RMSe ) - Max( ( MLU + CS ),( DS / ( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.08577834902056759}, {"determining": "( ( FirstVNF_Mem + Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( Max( Min( Min( ACS ,MDR ) ,FirstVNF_RAM_Server ),FirstVNF_CPU ) + FirstVNF_CPU ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( ( ( Min( MUM ,MUR ) + DS ) / MUR ),( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.20119521912350596, "obj2": 0.6792864404252769}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( Min( ACS ,Const ) - ( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( Max( ( FirstVNF_Mem * FirstVNF_RAM ),( ACS * FirstVNF_CPU_Server ) ) + AMS ) ) ) + ( FirstVNF_CPU_Server + Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) )", "choosing": "( Max( RRSe,( Max( RRSe,DS ) * ( ( ( Max( ( DS / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / ( RCSe + DS ) )", "obj1": 0.8605577689243028, "obj2": 0.06877641369397051}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( BR * ARS ) ) ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( MUR,( RRSe - CS ) ) + CS ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.9661354581673307, "obj2": 0.01273373269674033}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( Max( Const,BR ) * CRS ) ) )", "choosing": "( Min( RCSe ,DS ) / ( RRSe * ( ( RMSe / ( RRSe - DS ) ) * ( ( ( ( ( CS / MLU ) / ( CS / MLU ) ) * ( MUC - RCSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.011768756113513568}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ) ) * DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * MUR ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( ( RCSe * ( ( CS + CS ) - Max( ( Min( RCSe ,DS ) - ( CS - CS ) ),Min( RRSe ,MUC ) ) ) ) * CS ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.4043824701195219, "obj2": 0.45026915838694315}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( CS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.4860557768924303, "obj2": 0.3694928367611208}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( BR / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) ) ) + AMS ) )", "choosing": "( ( ( RMSe - ( ( RCSe + Max( CS,DS ) ) + ( MUC * MUR ) ) ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.7749003984063745, "obj2": 0.13293942999517244}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.5079681274900398, "obj2": 0.3458500801583967}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( BR ,DDR ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( ( Const * AMS ) ,Const ),FirstVNF_CPU ) ,CRS ) ,PN ) ) ) )", "choosing": "Min( Min( ( RCSe - ( ( ( RCSe - RRSe ) + ( RMSe - DS ) ) + ( ( ( MUR + ( RRSe - MLU ) ) + CS ) * MUR ) ) ) ,( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ) ,( MLU - MUR ) )", "obj1": 0.9581673306772909, "obj2": 0.016916229274362708}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) ) ) ) )", "obj1": 0.38247011952191234, "obj2": 0.479956916364848}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5579801884209764}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,BR ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ( ( ( PN + MRS ) - Max( MDR,MRS ) ) - MRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( RMSe ,( CS + ( Max( MUM,CS ) + ( Min( MLU ,( RCSe * RCSe ) ) + MUM ) ) ) ) * RCSe ) - CS )", "obj1": 0.5139442231075697, "obj2": 0.3412726895290807}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( BR * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( RRSe / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( MUR,( RRSe - CS ) ) + CS ) ) ) / Max( MUR,RCSe ) )", "obj1": 0.952191235059761, "obj2": 0.019073435711173106}], "18": [{"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( ( ARS + ( MRS * PN ) ) * ( FirstVNF_Mem - ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / CRS ) * ( Min( ( FirstVNF_CPU + BR ) ,FirstVNF_CPU ) / Max( FirstVNF_Mem_Server,RRS ) ) ) ) ) + AMS ) )", "choosing": "( Max( CS,( ( MUR * RRSe ) * MUC ) ) + ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,Min( MUM ,RRSe ) ) * ( MUM - Max( MUC,MLU ) ) ) / MUM ) / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,FirstVNF_CPU ) ) ,( ( MRS * Const ) - FirstVNF_RAM_Server ) ) ) ) - DDR ) ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( ( MUM / CS ) + MLU ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( ( ( Max( Const,BR ) * CRS ) - Const ) / Max( FirstVNF_Mem,ACS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - Min( RRSe ,RCSe ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5517928286852589, "obj2": 0.25992597623891434}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( RCSe * CS ),( MUC * MUC ) ) )", "obj1": 0.7709163346613546, "obj2": 0.10163506432695721}, {"determining": "( ( Max( Const,BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,FirstVNF_CPU ) ) ,Max( MRS,FirstVNF_RAM_Server ) ) ) ) - DDR ) ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6155378486055777, "obj2": 0.2587287276197747}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7111553784860558, "obj2": 0.15191794179637277}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.647410358565737, "obj2": 0.18930484609684192}, {"determining": "( ( Max( Const,BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,FirstVNF_CPU ) ) ,AMS ) ) ) - DDR ) ) / ( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,Const ) ) * Min( Max( Min( CRS ,FirstVNF_RAM_Server ),MDR ) ,( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe * ( ( MUM / ( RRSe * ( DS - ( ( CS - RMSe ) / MLU ) ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.549800796812749, "obj2": 0.31562900256749604}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_Mem + BR ) ) ) - DDR ) - FirstVNF_CPU ) + ( ACS * Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe * DS ) ,( RRSe - DS ) ) ) ) / MUR )", "obj1": 0.6434262948207171, "obj2": 0.221012639507083}, {"determining": "( ( ( ( MRS / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ( FirstVNF_Mem + ARS ) / ( ( ACS * MRS ) + ARS ) ) ) )", "choosing": "( CS / ( RRSe * ( ( ( ( RRSe * RRSe ) + Max( CS,( Max( RRSe,CS ) * ( MLU / MUR ) ) ) ) / Max( RRSe,DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.41832669322709165, "obj2": 0.42235747213588654}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( BR / FirstVNF_RAM_Server ) ) ) ) ) + AMS ) )", "choosing": "( Min( Max( ( CS / MLU ),Min( CS ,MUC ) ) ,DS ) - Max( ( MLU + CS ),Min( DS ,( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.7649402390438247, "obj2": 0.14841491378137087}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_CPU * Const ),FirstVNF_RAM ) * MRS ) )", "choosing": "( Max( ( ( MUM * MUC ) * MUC ),CS ) + Min( ( ( RRSe - RMSe ) * ( RCSe * ( ( ( RRSe / ( MUM + RRSe ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RRSe / RCSe ) ) )", "obj1": 0.6912350597609562, "obj2": 0.18754947200816732}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) ) + AMS ) )", "choosing": "( DS + Min( ( MUR - ( MLU + CS ) ) ,MUM ) )", "obj1": 0.7569721115537849, "obj2": 0.14936179660385798}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.10058612117444105}, {"determining": "( ( Max( ( Max( Const,( Max( CRS,ACS ) - MRS ) ) * CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RCSe * DS ) ) * ( ( RCSe * ( RRSe * ( Max( MLU,MLU ) + ( MUM - DS ) ) ) ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7545905761175521}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server - ( ( PN / ARS ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MDR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( ( ( ( ( DS / ( CS / MLU ) ) / ( RRSe / RRSe ) ) / MUM ) / DS ),( ( MUM + Max( CS,DS ) ) + ( ( ( MUC * Max( CS,MUM ) ) + ( MUC * CS ) ) * MUR ) ) ) * RRSe ) ,( RCSe - ( CS / MLU ) ) )", "obj1": 0.8824701195219123, "obj2": 0.056937742440292365}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,( ( MUR * ( CS * Min( RRSe ,DS ) ) ) - Min( CS ,Max( ( DS + ( RMSe - Min( RMSe ,RRSe ) ) ),RMSe ) ) ) )", "obj1": 0.703187250996016, "obj2": 0.1820548519314463}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.43824701195219123, "obj2": 0.4128604817198128}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_CPU_Server - ( CRS * CRS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( CS * RCSe ) - ( CS * ( RCSe - ( RRSe / RRSe ) ) ) ) / MUR ) ) + ( RCSe * ( Min( ( ( MLU / MLU ) + ( ( ( CS + RMSe ) * ( RCSe / RCSe ) ) * Max( MUC,Max( CS,RRSe ) ) ) ) ,MLU ) * RMSe ) ) )", "obj1": 0.4063745019920319, "obj2": 0.44427829321322815}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "( ( FirstVNF_CPU - ( ( PN / ( DDR * ( Const + Max( MRS,ACS ) ) ) ) - DDR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) + ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( DS,MUC ) * ( CS * Min( RRSe ,RMSe ) ) ) - Min( CS ,Max( ( DS + ( RMSe - Min( RMSe ,RRSe ) ) ),RMSe ) ) ) ,( CS * RRSe ) )", "obj1": 0.4581673306772908, "obj2": 0.3988149133565261}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * Min( ( ( ( Max( FirstVNF_CPU_Server,BR ) - FirstVNF_CPU ) + ( FirstVNF_RAM - ARS ) ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / BR ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( ( ( AMS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS - ( ( RMSe - ( CS + ( Max( MUM,( ( MUM / DS ) + MLU ) ) + ( RMSe * MUC ) ) ) ) * RCSe ) )", "obj1": 0.3286852589641434, "obj2": 0.5358115450422984}, {"determining": "( Min( FirstVNF_RAM ,CRS ) + Max( ( ( DDR / RRS ) / Min( FirstVNF_Mem ,PN ) ),FirstVNF_RAM ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( MUR * RCSe ) / RRSe ) / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( RMSe - ( RMSe + ( ( Max( MUC,CS ) / MUR ) - Max( ( ( CS - MUR ) * CS ),( ( CS * DS ) * DS ) ) ) ) ) ,( ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),Min( ( RRSe / MUC ) ,( CS / MUM ) ) ) ) ) * CS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5090781083032475}, {"determining": "( ( ( ( ( ( Max( Const,BR ) * CRS ) - FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) - Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) * CRS ) / ( FirstVNF_CPU * Min( Min( ( ( DDR - CRS ) * ARS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,Min( RRS ,RRS ) ) ) )", "choosing": "( Min( Max( Min( RMSe ,( MUM / Min( Max( RRSe,( MUR / MUC ) ) ,MUM ) ) ),MLU ) ,RRSe ) / Min( Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,Max( MUM,MUM ) ) ,( Min( RCSe ,( MLU - Min( RRSe ,RCSe ) ) ) * Min( RMSe ,Min( MLU ,CS ) ) ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7908951734942623}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( Min( ACS ,Const ) - ( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( Max( ( FirstVNF_Mem * FirstVNF_RAM ),( ACS * FirstVNF_CPU_Server ) ) + AMS ) ) ) + ( FirstVNF_CPU_Server + Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) )", "choosing": "( Max( RRSe,( Max( RRSe,DS ) * ( ( ( Max( ( DS / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / ( RCSe + DS ) )", "obj1": 0.8605577689243028, "obj2": 0.06877641369397051}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( ( ( Const / ( DDR * ( Min( FirstVNF_Mem ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( FirstVNF_CPU - ARS ) + Max( RRS,CRS ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( Max( ( Min( Max( ( Max( MLU,MUM ) + DS ),MLU ) ,Max( ( RCSe + Min( DS ,RMSe ) ),MUM ) ) * MUC ),( RMSe / Min( RCSe ,MLU ) ) ),CS ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( RCSe / RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.47410358565737054, "obj2": 0.37993737339430544}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_Mem + BR ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe + Min( Max( ( CS / MLU ),Min( CS ,MUC ) ) ,DS ) ) ,( RRSe - DS ) ) ) ) / MUR )", "obj1": 0.6235059760956175, "obj2": 0.23802302223772084}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_Mem + BR ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe + Min( Max( ( CS / MLU ),Min( CS ,MUC ) ) ,DS ) ) ,( RRSe - DS ) ) ) ) / MUR )", "obj1": 0.6314741035856574, "obj2": 0.23801662576279442}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( CRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( Min( RCSe ,DS ) - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) )", "obj1": 0.5358565737051793, "obj2": 0.31704331989593815}, {"determining": "( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / DS ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RCSe * RMSe ) ,DS ) )", "obj1": 0.14940239043824702, "obj2": 0.7420392987954237}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( RMSe - Max( ( MUC / RMSe ),Max( RRSe,RMSe ) ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.3596847854317509}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.28286852589641437, "obj2": 0.5716025074141267}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ),( FirstVNF_RAM_Server + ( BR - FirstVNF_Mem ) ) ) + Max( ARS,PN ) )", "choosing": "( Max( RRSe,( Max( RRSe,DS ) * ( ( ( Max( ( DS / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / ( RCSe + DS ) )", "obj1": 0.1254980079681275, "obj2": 0.7657971004329583}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4641434262948207, "obj2": 0.3850811387849671}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( DS * MUC ) / Max( RCSe,DS ) )", "obj1": 0.22310756972111553, "obj2": 0.6595385100069121}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( FirstVNF_CPU * ( ( Min( ARS ,PN ) * ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( CS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,Min( RCSe ,MLU ) ) )", "obj1": 0.23306772908366533, "obj2": 0.650261559813404}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( ( RMSe / MUR ) * ( MUM + MUR ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.448207171314741, "obj2": 0.40908253170221176}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + Min( ARS ,Max( AMS,BR ) ) )", "choosing": "Min( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.5258964143426295, "obj2": 0.32853960076305}, {"determining": "( Max( Max( ARS,Const ),ACS ) + ( RRS + MRS ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * Min( RMSe ,Min( ( MUC + Max( DS,MUM ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5657803926494337}, {"determining": "( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - BR ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Min( ( ( AMS * AMS ) + BR ) ,FirstVNF_Mem_Server ) ) ) ) + ( ACS * BR ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( DS ,( ( Min( MUM ,( RMSe - ( RMSe / MLU ) ) ) / MUM ) / MUM ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6003092773078749}, {"determining": "( ( FirstVNF_CPU * ( ACS + FirstVNF_RAM_Server ) ) / ( Max( Min( ( FirstVNF_CPU_Server + ( MDR + BR ) ) ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) * CRS ) )", "choosing": "( ( RRSe * ( ( RMSe - ( ( RMSe / ( ( MUC * MUM ) * RMSe ) ) - CS ) ) * ( ( ( Min( RCSe ,DS ) * Max( MLU,( MUR - CS ) ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1752988047808765, "obj2": 0.7130042765718382}, {"determining": "( Max( CRS,FirstVNF_RAM ) - ( ( BR / FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( ( FirstVNF_CPU_Server + ACS ),( FirstVNF_RAM / FirstVNF_Mem ) ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( ( Min( ( MUM - DS ) ,MLU ) / ( ( ( ( MUM - ( MLU / RRSe ) ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) / MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03713461683870236}, {"determining": "( ( FirstVNF_Mem + Min( ( ARS - BR ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Min( ( ( AMS * PN ) + BR ) ,( FirstVNF_RAM - FirstVNF_RAM ) ) ) ) ) + ( ACS * BR ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( ( ( MUC + Min( Max( RRSe,CS ) ,CS ) ) * Min( DS ,RRSe ) ) ,( ( Min( MUM ,( RMSe - ( RMSe / MLU ) ) ) / MUM ) / ( RRSe - MUM ) ) ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5853453110647829}, {"determining": "( ( ( ( PN / ( DDR * Min( ( FirstVNF_CPU_Server + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( DS / ( CS / MLU ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.49347176579993896}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( FirstVNF_RAM_Server,ARS ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( Max( MLU,MLU ) + ( MUM - DS ) ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) ) ) ) )", "obj1": 0.3884462151394422, "obj2": 0.46175685085323714}, {"determining": "( ( FirstVNF_Mem + Min( ( RRS - FirstVNF_CPU ) ,( ( Min( CRS ,FirstVNF_Mem_Server ) / ( DDR + FirstVNF_Mem ) ) - Max( BR,( BR / ARS ) ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( RCSe / MUM ),MUC ) * ( RRSe / MLU ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / ( RMSe + DS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.23705179282868527, "obj2": 0.6393395150082117}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + Max( MRS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) + ( ( Max( DDR,Max( ARS,Const ) ) * ( PN * ACS ) ) - PN ) ) + ( ( FirstVNF_CPU / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM * FirstVNF_CPU ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MUM ) * ( RMSe / MUM ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.49865653294254103}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( BR * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( BR ,ACS ) ) + ARS ) ) ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( RRSe / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( MUR,( RRSe - CS ) ) + CS ) ) ) / Max( MUR,RCSe ) )", "obj1": 0.952191235059761, "obj2": 0.019073435711173106}, {"determining": "( ( PN + FirstVNF_Mem ) + ( DDR / ACS ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * Max( ( ( ( DS / ( RMSe / MLU ) ) * ( RRSe / RRSe ) ) / MUM ),DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6686407471310237}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( Max( BR,MRS ) + ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - ( DS / ( CS / ( ( ( MUC * MUM ) + ( ( Min( DS ,RMSe ) * MUR ) - ( Min( MUR ,CS ) - RMSe ) ) ) - Min( DS ,Min( ( MLU - ( RCSe + MUR ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5889308446954941}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_RAM_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.50199203187251, "obj2": 0.34942891536913206}, {"determining": "( ( FirstVNF_Mem + ( CRS * ( FirstVNF_CPU_Server * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( BR * FirstVNF_RAM ) ) / PN ) * ( FirstVNF_CPU - ( RRS / Max( MRS,BR ) ) ) ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + CS ) * ( ( DS / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.17330677290836655, "obj2": 0.7219920237722419}, {"determining": "( ( ( ( PN / ( DDR * ( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU ) + ( BR * PN ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUR + ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( Min( RCSe ,DS ) - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.40039840637450197, "obj2": 0.45658013537015923}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5579801884209764}, {"determining": "( ( DDR - Max( FirstVNF_Mem_Server,( AMS / FirstVNF_CPU ) ) ) / ( AMS * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( RRSe / ( DS + DS ) ) ) / CS )", "obj1": 0.2051792828685259, "obj2": 0.671239862153384}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,ACS ) - Min( DDR ,ACS ) ) / ( ( AMS / CRS ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) ) ) + Min( DDR ,ARS ) ) + ( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe * MLU ) * ( MLU / DS ) ) ) / ( DS + RCSe ) )", "obj1": 0.8884462151394422, "obj2": 0.050243154090234145}, {"determining": "( ( ( ( ACS / ( Min( RRS ,FirstVNF_Mem ) * Min( ( FirstVNF_CPU_Server + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( BR - FirstVNF_Mem_Server ) ) + ( ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS + RCSe ) - ( ( DS * RCSe ) + Max( RCSe,DS ) ) ) / ( ( MLU - MUM ) + MUR ) ) / DS ) ) * RRSe ) / CS )", "obj1": 0.3386454183266932, "obj2": 0.5212920590980682}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * ( ( Min( ARS ,PN ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( MLU - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( ( RRSe * MUR ),DS ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.3047808764940239, "obj2": 0.5601356701770743}, {"determining": "( ( MRS + MRS ) + ( Max( DDR,FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( ( ( ( MUR * ( ( MUR + DS ) / ( MLU * ( RCSe - ( MUM * CS ) ) ) ) ) * ( MUM * Min( ( ( MLU / ( DS * DS ) ) * MUR ) ,MUR ) ) ) - CS ) + Min( Max( Min( Min( DS ,DS ) ,Max( MUR,MUR ) ),DS ) ,Max( Max( Min( ( MLU / RRSe ) ,RMSe ),MLU ),MLU ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6272215552082994}, {"determining": "( ( Max( ( PN / ( DDR * ( Max( MDR,( FirstVNF_Mem / MDR ) ) + ( FirstVNF_Mem_Server - Min( ARS ,MDR ) ) ) ) ),DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_Mem + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( Max( MLU,RMSe ) ,( RMSe - ( MUC + CS ) ) ) )", "obj1": 0.5219123505976095, "obj2": 0.33628798638048824}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * ( ( Max( MDR,( ( RRS * FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * MRS ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / MUM ) - ( ( MUR * RMSe ) / ( MLU / RMSe ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5225051866233799}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( BR * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( ( DS / ( CS / RRSe ) ) + Max( CS,DS ) ) + ( MUC * Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.9920318725099602, "obj2": 0.0027326918561058856}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_Mem * Max( Max( AMS,( Max( ARS,PN ) - Min( ACS ,AMS ) ) ),( CRS + FirstVNF_CPU_Server ) ) ) ,( MDR + Max( FirstVNF_Mem,( Const / Min( ARS ,( FirstVNF_RAM / ARS ) ) ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RCSe - CS ) / MUR ) + Min( MUC ,MUC ) ) ,( Min( RCSe ,MUM ) - ( ( MUM + Max( CS,DS ) ) + ( MUC * Min( MUR ,( RRSe - CS ) ) ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.08816899349785991}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) / PN ) * ( FirstVNF_CPU - Max( RRS,Max( MRS,FirstVNF_RAM_Server ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ),( ( MUM * Max( CS,DS ) ) + ( ( ( DS / ( RMSe * MUM ) ) - RMSe ) * MUR ) ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.8545816733067729, "obj2": 0.0741546876192399}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( ARS ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( Max( MLU,MLU ) + ( MUM - DS ) ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Max( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ),( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),( ( DS * MUM ) + Max( ( MUC + MLU ),CS ) ) ) ) ) ) )", "obj1": 0.3804780876494024, "obj2": 0.48315411613040915}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,BR ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ( ( ( PN + MRS ) - Max( MDR,MRS ) ) - MRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( RMSe ,( CS + ( Max( MUM,CS ) + ( Min( MLU ,( RCSe * RCSe ) ) + MUM ) ) ) ) * RCSe ) - CS )", "obj1": 0.5139442231075697, "obj2": 0.3412726895290807}, {"determining": "( ( Max( MDR,BR ) * CRS ) / ( FirstVNF_CPU * Min( Max( RRS,( AMS / FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Max( CS,Max( MUC,RMSe ) ) )", "obj1": 0.19123505976095617, "obj2": 0.6896596656719088}, {"determining": "( ( ( ( MDR + MRS ) - ( ( ARS / FirstVNF_CPU_Server ) * ( AMS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) + AMS ) - Max( FirstVNF_CPU_Server,BR ) )", "choosing": "Min( Max( RCSe,( DS + MUC ) ) ,( Max( ( MUM / ( MUR + Max( ( RRSe * Min( RMSe ,MLU ) ),CS ) ) ),RRSe ) * MUM ) )", "obj1": 0.9800796812749004, "obj2": 0.007736285462954932}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( ( RMSe - ( CS - CS ) ) * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.4947057490246106}, {"determining": "( ( ( ( PN / ( DDR / Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - MRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_RAM_Server ) ) * ( ( Min( FirstVNF_Mem ,ACS ) - ( FirstVNF_RAM_Server + ARS ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( Min( ( RRSe / ( MUR + MUC ) ) ,RRSe ) - Max( RRSe,( ( CS + MLU ) * Min( MUC ,RRSe ) ) ) ) ) ) ,Min( CS ,( MUM * MLU ) ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6317526071052565}, {"determining": "( ( ( ( PN / ( Max( MDR,DDR ) * ( Min( ( CRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + RRS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * MUR ) ,( MUC - ( ( ( ( MUC - Min( ( MUR * RMSe ) ,RMSe ) ) - Min( DS ,MUC ) ) - ( Max( ( ( RMSe / MUR ) * Min( MUC ,CS ) ),MUR ) * MUR ) ) + CS ) ) )", "obj1": 0.4860557768924303, "obj2": 0.3694928367611208}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.8466135458167331, "obj2": 0.0830454198779616}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.38645418326693226, "obj2": 0.4733645177698631}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) - ( ( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,DDR ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( FirstVNF_RAM_Server ,( ( Max( FirstVNF_RAM,AMS ) * AMS ) + RRS ) ) ) ) )", "choosing": "( ( RRSe * ( Max( RRSe,Max( Min( MUM ,MUC ),RCSe ) ) * Max( ( ( RRSe + RCSe ) - Min( RMSe ,RMSe ) ),RMSe ) ) ) / ( MUC / RMSe ) )", "obj1": 0.9023904382470119, "obj2": 0.04319858264982739}, {"determining": "( Min( Max( Min( FirstVNF_Mem ,( ( AMS * Min( BR ,PN ) ) + MDR ) ),MDR ) ,( RRS + FirstVNF_CPU ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( DS ,MLU ) * ( DS / ( CS / MLU ) ) ) / ( MUM * CS ) ) / DS ) ) ) / Min( ( RCSe * MLU ) ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.6811622624365571}, {"determining": "( ( ACS + ( Min( DDR ,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_Mem_Server / Const ) / BR ) * ( FirstVNF_CPU + AMS ) ) ) ) + Min( ACS ,MRS ) )", "choosing": "( ( RRSe * ( ( ( RRSe * ( Min( MUM ,( CS - RMSe ) ) - CS ) ) / RMSe ) * ( DS - RCSe ) ) ) / ( CS / Max( MUM,RCSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7380843293312602}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.5079681274900398, "obj2": 0.3458500801583967}, {"determining": "( ( FirstVNF_Mem + Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( Max( Min( Min( ACS ,MDR ) ,FirstVNF_RAM_Server ),FirstVNF_CPU ) + FirstVNF_CPU ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( ( ( Min( MUM ,MUR ) + DS ) / MUR ),( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.20119521912350596, "obj2": 0.6792864404252769}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.09587606474341594}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( ( FirstVNF_Mem_Server + ARS ) * ( ( ARS / PN ) * ( ( RRS - ARS ) - FirstVNF_CPU ) ) ) ) + AMS ) )", "choosing": "( ( ( RMSe - ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * RMSe ) ) ) / ( MLU * CS ) ) ) * RMSe ) - Max( ( MLU + CS ),( DS / ( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.08577834902056759}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1852589641434263, "obj2": 0.6943736152985586}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ) ) * DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * MUR ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( ( RCSe * ( ( CS + CS ) - Max( ( Min( RCSe ,DS ) - ( CS - CS ) ),Min( RRSe ,MUC ) ) ) ) * CS ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.4043824701195219, "obj2": 0.45026915838694315}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( CS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.4860557768924303, "obj2": 0.3694928367611208}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ( RRS * ACS ) ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ( FirstVNF_Mem - FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( ( RRSe - RMSe ) * ( RCSe * ( ( Max( RRSe,( MUM + MUC ) ) - RRSe ) - Max( ( MLU / DS ),( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.18251123746814452}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( BR * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( Max( RRS,Max( MRS,FirstVNF_RAM_Server ) ) + ARS ) ) ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( RRSe / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( MUR,( RRSe - CS ) ) + CS ) ) ) / ( RMSe * MUM ) )", "obj1": 0.952191235059761, "obj2": 0.019073435711173106}, {"determining": "( ( FirstVNF_Mem + Min( Max( Min( ( Min( PN ,ACS ) - Min( ACS ,DDR ) ) ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ,CRS ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( CS - MUM ) ) + CS ) * ( ( DS / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.16533864541832669, "obj2": 0.737280278733892}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( BR * ARS ) ) ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( MUR,( RRSe - CS ) ) + CS ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.9661354581673307, "obj2": 0.01273373269674033}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( ( RRSe - RMSe ) * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ) )", "obj1": 0.8247011952191236, "obj2": 0.09990411025931492}, {"determining": "( ( FirstVNF_Mem + Min( ( Min( Min( ACS ,Max( FirstVNF_RAM,( FirstVNF_CPU_Server + ARS ) ) ) ,FirstVNF_RAM_Server ) / FirstVNF_CPU ) ,CRS ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( ( ( MUM - MUR ) - Min( CS ,MLU ) ) - ( MUR / ( MLU - RMSe ) ) ) ) + CS ) * ( ( DS / MUM ) / DS ) ) ) / ( RCSe * DS ) )", "obj1": 0.16733067729083664, "obj2": 0.7320255530739409}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) - DDR ) - FirstVNF_CPU ) + Min( ACS ,( FirstVNF_RAM + FirstVNF_Mem ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe - MLU ) ,( ( MUM * RMSe ) + Min( Max( ( CS / MLU ),Min( CS ,MUC ) ) ,DS ) ) ) ) ) / MUR )", "obj1": 0.9641434262948207, "obj2": 0.016635727261102923}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( Max( Const,BR ) * CRS ) ) )", "choosing": "( Min( RCSe ,DS ) / ( RRSe * ( ( RMSe / ( RRSe - DS ) ) * ( ( ( ( ( CS / MLU ) / ( CS / MLU ) ) * ( MUC - RCSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9721115537848606, "obj2": 0.011768756113513568}, {"determining": "( ( ACS / AMS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,( ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( ( RMSe * ( ( Min( ( RRSe * ( RMSe + RRSe ) ) ,DS ) / ( ( CS + CS ) - Max( ( Min( RCSe ,DS ) - ( CS - CS ) ),Min( ( MUM * MUM ) ,MUM ) ) ) ) * ( ( ( Min( DS ,( CS / MLU ) ) * ( ( RCSe * RMSe ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9760956175298805, "obj2": 0.010423964517962285}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.8585657370517928, "obj2": 0.07113147476932836}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( BR ,DDR ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( ( Const * AMS ) ,Const ),FirstVNF_CPU ) ,CRS ) ,PN ) ) ) )", "choosing": "Min( Min( ( RCSe - ( ( ( RCSe - RRSe ) + ( RMSe - DS ) ) + ( ( ( MUR + ( RRSe - MLU ) ) + CS ) * MUR ) ) ) ,( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ) ,( MLU - MUR ) )", "obj1": 0.9581673306772909, "obj2": 0.016916229274362708}], "19": [{"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( ( ARS + ( CRS * PN ) ) * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( ( DS / ( CS / RRSe ) ) + Max( CS,DS ) ) + ( MUC * ( RRSe / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( ( ARS + ( MRS * PN ) ) * ( FirstVNF_Mem - ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / CRS ) * ( Min( ( FirstVNF_CPU + BR ) ,FirstVNF_CPU ) / Max( FirstVNF_Mem_Server,RRS ) ) ) ) ) + AMS ) )", "choosing": "( Max( CS,( ( MUR * RRSe ) * MUC ) ) + ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,Min( MUM ,RRSe ) ) * ( MUM - Max( MUC,MLU ) ) ) / MUM ) / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( ( ( Max( Const,BR ) * CRS ) - Const ) / Max( FirstVNF_Mem,ACS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - Min( RRSe ,RCSe ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5517928286852589, "obj2": 0.25992597623891434}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( BR,AMS ) ) ,( ( FirstVNF_Mem_Server / CRS ) + RRS ) ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( RRSe * MUR ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUC / ( MLU / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7569721115537849, "obj2": 0.12700874178239002}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( RCSe * CS ),( MUC * MUC ) ) )", "obj1": 0.7709163346613546, "obj2": 0.10163506432695721}, {"determining": "( ( ( ( MRS / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ( FirstVNF_Mem + ARS ) / ( ( ACS * MRS ) + ARS ) ) ) )", "choosing": "( CS / ( RRSe * ( ( ( ( RRSe * RRSe ) + Max( CS,( Max( RRSe,CS ) * ( MLU / MUR ) ) ) ) / Max( RRSe,DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.41832669322709165, "obj2": 0.42235747213588654}, {"determining": "( Min( FirstVNF_CPU_Server ,( AMS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) ) + Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) + CS ) ) + Min( ( CS + ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Max( RRSe,MLU ) * ( CS * MUM ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM - RRSe ) ) + ( RCSe / ( Max( CS,Max( MUM,DS ) ) / MLU ) ) ) - ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.43227091633466136, "obj2": 0.38774836598608503}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.647410358565737, "obj2": 0.18930484609684192}, {"determining": "( ( Max( Const,BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,FirstVNF_CPU ) ) ,AMS ) ) ) - DDR ) ) / ( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,Const ) ) * Min( Max( Min( CRS ,FirstVNF_RAM_Server ),MDR ) ,( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe * ( ( MUM / ( RRSe * ( DS - ( ( CS - RMSe ) / MLU ) ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.549800796812749, "obj2": 0.31562900256749604}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7111553784860558, "obj2": 0.15191794179637277}, {"determining": "( ( Max( Const,BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,FirstVNF_CPU ) ) ,Max( MRS,FirstVNF_RAM_Server ) ) ) ) - DDR ) ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ,Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6155378486055777, "obj2": 0.2587287276197747}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_CPU * Const ),FirstVNF_RAM ) * MRS ) )", "choosing": "( Max( ( ( MUM * MUC ) * MUC ),CS ) + Min( ( ( RRSe - RMSe ) * ( RCSe * ( ( ( RRSe / ( MUM + RRSe ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RRSe / RCSe ) ) )", "obj1": 0.6912350597609562, "obj2": 0.18754947200816732}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.10058612117444105}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4641434262948207, "obj2": 0.3850811387849671}, {"determining": "( ( FirstVNF_Mem + BR ) + Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) ) / Min( ( RCSe * RMSe ) ,DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7537839155937476}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server - ( ( PN / ARS ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MDR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( ( ( ( ( DS / ( CS / MLU ) ) / ( RRSe / RRSe ) ) / MUM ) / DS ),( ( MUM + Max( CS,DS ) ) + ( ( ( MUC * Max( CS,MUM ) ) + ( MUC * CS ) ) * MUR ) ) ) * RRSe ) ,( RCSe - ( CS / MLU ) ) )", "obj1": 0.8824701195219123, "obj2": 0.056937742440292365}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_CPU_Server - ( CRS * CRS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( CS * RCSe ) - ( CS * ( RCSe - ( RRSe / RRSe ) ) ) ) / MUR ) ) + ( RCSe * ( Min( ( ( MLU / MLU ) + ( ( ( CS + RMSe ) * ( RCSe / RCSe ) ) * Max( MUC,Max( CS,RRSe ) ) ) ) ,MLU ) * RMSe ) ) )", "obj1": 0.4063745019920319, "obj2": 0.44427829321322815}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,( ( MUR * ( CS * Min( RRSe ,DS ) ) ) - Min( CS ,Max( ( DS + ( RMSe - Min( RMSe ,RRSe ) ) ),RMSe ) ) ) )", "obj1": 0.703187250996016, "obj2": 0.1820548519314463}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * Min( ( ( ( Max( FirstVNF_CPU_Server,BR ) - FirstVNF_CPU ) + ( FirstVNF_RAM - ARS ) ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / BR ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( ( ( AMS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS - ( ( RMSe - ( CS + ( Max( MUM,( ( MUM / DS ) + MLU ) ) + ( RMSe * MUC ) ) ) ) * RCSe ) )", "obj1": 0.3286852589641434, "obj2": 0.5358115450422984}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Min( ( DS * RRSe ) ,MLU ) / ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.7071713147410359, "obj2": 0.15225076938103102}, {"determining": "( Min( FirstVNF_RAM ,CRS ) + Max( ( ( DDR / RRS ) / Min( FirstVNF_Mem ,PN ) ),FirstVNF_RAM ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( MUR * RCSe ) / RRSe ) / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( RMSe - ( RMSe + ( ( Max( MUC,CS ) / MUR ) - Max( ( ( CS - MUR ) * CS ),( ( CS * DS ) * DS ) ) ) ) ) ,( ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),Min( ( RRSe / MUC ) ,( CS / MUM ) ) ) ) ) * CS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5090781083032475}, {"determining": "( ( ( ( ( ( Max( Const,BR ) * CRS ) - FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) - Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) * CRS ) / ( FirstVNF_CPU * Min( Min( ( ( DDR - CRS ) * ARS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,Min( RRS ,RRS ) ) ) )", "choosing": "( Min( Max( Min( RMSe ,( MUM / Min( Max( RRSe,( MUR / MUC ) ) ,MUM ) ) ),MLU ) ,RRSe ) / Min( Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,Max( MUM,MUM ) ) ,( Min( RCSe ,( MLU - Min( RRSe ,RCSe ) ) ) * Min( RMSe ,Min( MLU ,CS ) ) ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7908951734942623}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( ( Min( ACS ,Const ) - ( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( ACS * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( Max( ( FirstVNF_Mem * FirstVNF_RAM ),( ACS * FirstVNF_CPU_Server ) ) + AMS ) ) ) + ( FirstVNF_CPU_Server + Min( Min( Max( Min( Min( ACS ,Const ) ,FirstVNF_RAM_Server ),MDR ) ,CRS ) ,PN ) ) )", "choosing": "( Max( RRSe,( Max( RRSe,DS ) * ( ( ( Max( ( DS / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / ( RCSe + DS ) )", "obj1": 0.8605577689243028, "obj2": 0.06877641369397051}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) - ( ( Min( PN ,ACS ) - Min( ACS ,DDR ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( ( FirstVNF_CPU_Server * AMS ) ,Max( FirstVNF_CPU,Const ) ),FirstVNF_CPU ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( ( MUR - ( CS + ( Max( MUM,( ( MUM / CS ) + MLU ) ) + Max( ( RCSe * ( CS * RCSe ) ),MUC ) ) ) ) * RCSe ) - CS )", "obj1": 0.9422310756972112, "obj2": 0.023115575798475674}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_Mem + BR ) ) ) - DDR ) - FirstVNF_CPU ) + ( ACS * Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe * DS ) ,( RRSe - DS ) ) ) ) / MUR )", "obj1": 0.6454183266932271, "obj2": 0.2192744038248081}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_Mem + BR ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe + Min( Max( ( CS / MLU ),Min( CS ,MUC ) ) ,DS ) ) ,( RRSe - DS ) ) ) ) / MUR )", "obj1": 0.6314741035856574, "obj2": 0.23801662576279442}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ),( FirstVNF_RAM_Server + ( BR - FirstVNF_Mem ) ) ) + Max( ARS,PN ) )", "choosing": "( Max( RRSe,( Max( RRSe,DS ) * ( ( ( Max( ( DS / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / ( RCSe + DS ) )", "obj1": 0.1254980079681275, "obj2": 0.7657971004329583}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.28286852589641437, "obj2": 0.5716025074141267}, {"determining": "( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / DS ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RCSe * RMSe ) ,DS ) )", "obj1": 0.14940239043824702, "obj2": 0.7420392987954237}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( Min( ( FirstVNF_Mem + BR ) ,Const ) ,FirstVNF_RAM_Server ) ) * CRS ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe * RMSe ) / ( RRSe * DS ) ) * ( MUR - ( RCSe * RMSe ) ) ) ) / CS )", "obj1": 0.22111553784860558, "obj2": 0.6543324125956602}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_Mem + BR ) ) ) - DDR ) - FirstVNF_CPU ) + ( ACS * Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe * DS ) ,( RRSe - DS ) ) ) ) / MUR )", "obj1": 0.6434262948207171, "obj2": 0.221012639507083}, {"determining": "( ( PN + FirstVNF_Mem ) + ( DDR / ACS ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * Max( ( ( ( DS / ( RMSe / MLU ) ) * ( RRSe / RRSe ) ) / MUM ),DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6686407471310237}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( RMSe - Max( ( MUC / RMSe ),Max( RRSe,RMSe ) ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.3596847854317509}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( Max( CRS,FirstVNF_RAM ) - ( ( BR / FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( ( FirstVNF_CPU_Server + ACS ),( FirstVNF_RAM / FirstVNF_Mem ) ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( ( Min( ( MUM - DS ) ,MLU ) / ( ( ( ( MUM - ( MLU / RRSe ) ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) / MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03713461683870236}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( ( FirstVNF_Mem + Min( ( ARS - BR ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Min( ( ( AMS * PN ) + BR ) ,( FirstVNF_RAM - FirstVNF_RAM ) ) ) ) ) + ( ACS * BR ) )", "choosing": "( ( ( MLU - MUR ) * RMSe ) - Max( ( MLU + CS ),Min( ( ( MUC + Min( Max( RRSe,CS ) ,CS ) ) * Min( DS ,RRSe ) ) ,( ( Min( MUM ,( RMSe - ( RMSe / MLU ) ) ) / MUM ) / ( RRSe - MUM ) ) ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5853453110647829}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( FirstVNF_CPU * ( ( Min( ARS ,PN ) * ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / BR ) + FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( CS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,Min( RCSe ,MLU ) ) )", "obj1": 0.23306772908366533, "obj2": 0.650261559813404}, {"determining": "( ( FirstVNF_Mem + Min( ( RRS - FirstVNF_CPU ) ,( ( Min( CRS ,FirstVNF_Mem_Server ) / ( DDR + FirstVNF_Mem ) ) - Max( BR,( BR / ARS ) ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( RCSe / MUM ),MUC ) * ( RRSe / MLU ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / ( RMSe + DS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.23705179282868527, "obj2": 0.6393395150082117}, {"determining": "( ( MRS / BR ) + ( ARS + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( CS * MUC ) ,( ( CS * ( MUR * MUM ) ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( CS,DS ) / CS ) ) ) ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5521367462724568}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( FirstVNF_RAM_Server,ARS ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( Max( MLU,MLU ) + ( MUM - DS ) ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) ) ) ) )", "obj1": 0.3884462151394422, "obj2": 0.46175685085323714}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + Max( MRS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) + ( ( Max( DDR,Max( ARS,Const ) ) * ( PN * ACS ) ) - PN ) ) + ( ( FirstVNF_CPU / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM * FirstVNF_CPU ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MUM ) * ( RMSe / MUM ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.49865653294254103}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_Mem + BR ) ) ) - DDR ) - Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ) + ( ACS * Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( ( RMSe / ( RRSe * DS ) ) * DS ) ,( RRSe - DS ) ) ) ) / MUR )", "obj1": 0.6195219123505976, "obj2": 0.25623231724763096}, {"determining": "( Max( Max( ARS,Const ),ACS ) + ( RRS + MRS ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * Min( RMSe ,Min( ( MUC + Max( DS,MUM ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5657803926494337}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( FirstVNF_RAM_Server,ARS ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + Min( ARS ,Max( AMS,BR ) ) ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( Max( MLU,MLU ) + ( MUM - DS ) ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( DS / ( CS / MLU ) ) ) ) ,( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) ) ) ) )", "obj1": 0.3784860557768924, "obj2": 0.47839060934662186}, {"determining": "( ( ( ( Const / ( DDR * ( Min( FirstVNF_Mem ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( FirstVNF_CPU - ARS ) + Max( RRS,CRS ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( Max( ( Min( Max( ( Max( MLU,MUM ) + DS ),MLU ) ,Max( ( RCSe + Min( DS ,RMSe ) ),MUM ) ) * MUC ),( RMSe / Min( RCSe ,MLU ) ) ),CS ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( RCSe / RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.47410358565737054, "obj2": 0.37993737339430544}, {"determining": "( ( FirstVNF_CPU * ( ACS + FirstVNF_RAM_Server ) ) / ( Max( Min( ( FirstVNF_CPU_Server + ( MDR + BR ) ) ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) * CRS ) )", "choosing": "( ( RRSe * ( ( RMSe - ( ( RMSe / ( ( MUC * MUM ) * RMSe ) ) - CS ) ) * ( ( ( Min( RCSe ,DS ) * Max( MLU,( MUR - CS ) ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1752988047808765, "obj2": 0.7130042765718382}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,ACS ) - Min( DDR ,ACS ) ) / ( ( AMS / CRS ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) ) ) + Min( DDR ,ARS ) ) + ( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe * MLU ) * ( MLU / DS ) ) ) / ( DS + RCSe ) )", "obj1": 0.8884462151394422, "obj2": 0.050243154090234145}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_RAM_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( MUC * CS ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.49800796812749004, "obj2": 0.34899616607181433}, {"determining": "( ( FirstVNF_Mem + BR ) + Min( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) ) / Min( ( RCSe * RMSe ) ,DS ) )", "obj1": 0.17330677290836655, "obj2": 0.7181884460227008}, {"determining": "( ( ( ( PN / ( DDR * ( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU ) + ( BR * PN ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUR + ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( Min( RCSe ,DS ) - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.40039840637450197, "obj2": 0.45658013537015923}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( ( RMSe - ( CS - CS ) ) * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) ) ) ) )", "obj1": 0.3844621513944223, "obj2": 0.4711796977230265}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_Mem + BR ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe + Min( Max( ( CS / MLU ),Min( CS ,MUC ) ) ,DS ) ) ,( RRSe - DS ) ) ) ) / MUR )", "obj1": 0.6235059760956175, "obj2": 0.23802302223772084}, {"determining": "( ( ( ( ACS / ( Min( RRS ,FirstVNF_Mem ) * Min( ( FirstVNF_CPU_Server + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( BR - FirstVNF_Mem_Server ) ) + ( ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS + RCSe ) - ( ( DS * RCSe ) + Max( RCSe,DS ) ) ) / ( ( MLU - MUM ) + MUR ) ) / DS ) ) * RRSe ) / CS )", "obj1": 0.3386454183266932, "obj2": 0.5212920590980682}, {"determining": "( ( MRS + MRS ) + ( Max( DDR,FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( ( ( ( MUR * ( ( MUR + DS ) / ( MLU * ( RCSe - ( MUM * CS ) ) ) ) ) * ( MUM * Min( ( ( MLU / ( DS * DS ) ) * MUR ) ,MUR ) ) ) - CS ) + Min( Max( Min( Min( DS ,DS ) ,Max( MUR,MUR ) ),DS ) ,Max( Max( Min( ( MLU / RRSe ) ,RMSe ),MLU ),MLU ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6272215552082994}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * ( ( Max( MDR,( ( RRS * FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * MRS ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / MUM ) - ( ( MUR * RMSe ) / ( MLU / RMSe ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5225051866233799}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( CRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( RRSe / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( MUR,( RRSe - CS ) ) + CS ) ) ) / ( RMSe * MUM ) )", "obj1": 0.5258964143426295, "obj2": 0.3254248977664088}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) / PN ) * ( FirstVNF_CPU - Max( RRS,Max( MRS,FirstVNF_RAM_Server ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ),( ( MUM * Max( CS,DS ) ) + ( ( ( DS / ( RMSe * MUM ) ) - RMSe ) * MUR ) ) ) * RRSe ) ,( RCSe - ( CS + CS ) ) )", "obj1": 0.8545816733067729, "obj2": 0.0741546876192399}, {"determining": "( ( DDR - Max( FirstVNF_Mem_Server,( AMS / FirstVNF_CPU ) ) ) / ( AMS * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( RRSe / ( DS + DS ) ) ) / CS )", "obj1": 0.2051792828685259, "obj2": 0.671239862153384}, {"determining": "( Max( BR,MRS ) + ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - ( DS / ( CS / ( ( ( MUC * MUM ) + ( ( Min( DS ,RMSe ) * MUR ) - ( Min( MUR ,CS ) - RMSe ) ) ) - Min( DS ,Min( ( MLU - ( RCSe + MUR ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5889308446954941}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,BR ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ( ( ( PN + MRS ) - Max( MDR,MRS ) ) - MRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( RMSe ,( CS + ( Max( MUM,CS ) + ( Min( MLU ,( RCSe * RCSe ) ) + MUM ) ) ) ) * RCSe ) - CS )", "obj1": 0.5139442231075697, "obj2": 0.3412726895290807}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.5079681274900398, "obj2": 0.3458500801583967}, {"determining": "( ( ( ( MDR + MRS ) - ( ( ARS / FirstVNF_CPU_Server ) * ( AMS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) + AMS ) - Max( FirstVNF_CPU_Server,BR ) )", "choosing": "Min( Max( RCSe,( DS + MUC ) ) ,( Max( ( MUM / ( MUR + Max( ( RRSe * Min( RMSe ,MLU ) ),CS ) ) ),RRSe ) * MUM ) )", "obj1": 0.9800796812749004, "obj2": 0.007736285462954932}, {"determining": "( Min( Max( Min( FirstVNF_Mem ,( ( AMS * Min( BR ,PN ) ) + MDR ) ),MDR ) ,( RRS + FirstVNF_CPU ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( DS ,MLU ) * ( DS / ( CS / MLU ) ) ) / ( MUM * CS ) ) / DS ) ) ) / Min( ( RCSe * MLU ) ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.6811622624365571}, {"determining": "( ( ( Min( PN ,( DDR * ( AMS / Min( ( CRS * DDR ) ,( FirstVNF_RAM_Server / ARS ) ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( DDR / ARS ) * ( ( FirstVNF_Mem - FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( ( RMSe * DS ),Min( Min( ( ( DS - MUR ) + RRSe ) ,( MUR + MLU ) ) ,( RRSe / Min( Max( DS,RMSe ) ,Min( MLU ,Min( MUM ,MUR ) ) ) ) ) ) - ( ( MUM + Max( ( CS + MUR ),( ( CS * MUR ) + CS ) ) ) + ( MUM * RMSe ) ) ) ,( MUM - MUM ) )", "obj1": 0.47808764940239046, "obj2": 0.3704843820046037}, {"determining": "( ( ( ( PN / ( DDR / Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - MRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_RAM_Server ) ) * ( ( Min( FirstVNF_Mem ,ACS ) - ( FirstVNF_RAM_Server + ARS ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( Min( ( RRSe / ( MUR + MUC ) ) ,RRSe ) - Max( RRSe,( ( CS + MLU ) * Min( MUC ,RRSe ) ) ) ) ) ) ,Min( CS ,( MUM * MLU ) ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6317526071052565}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( CRS * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) )", "obj1": 0.5358565737051793, "obj2": 0.31704331989593815}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.8466135458167331, "obj2": 0.0830454198779616}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( BR * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( ( DS / ( CS / RRSe ) ) + Max( CS,DS ) ) + ( MUC * Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.9920318725099602, "obj2": 0.0027326918561058856}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( FirstVNF_RAM_Server,ARS ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.3705179282868526, "obj2": 0.4859269299266485}, {"determining": "( ( Max( MDR,BR ) * CRS ) / ( FirstVNF_CPU * Min( Max( RRS,( AMS / FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Max( CS,Max( MUC,RMSe ) ) )", "obj1": 0.19123505976095617, "obj2": 0.6896596656719088}, {"determining": "( ( ACS + ( Min( DDR ,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_Mem_Server / Const ) / BR ) * ( FirstVNF_CPU + AMS ) ) ) ) + Min( ACS ,MRS ) )", "choosing": "( ( RRSe * ( ( ( RRSe * ( Min( MUM ,( CS - RMSe ) ) - CS ) ) / RMSe ) * ( DS - RCSe ) ) ) / ( CS / Max( MUM,RCSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7380843293312602}, {"determining": "( ( CRS * Max( Const,BR ) ) / Max( ( BR / MRS ),PN ) )", "choosing": "( ( RRSe * ( Max( RMSe,( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( ( RCSe - MUR ) ,( CS + RMSe ) ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.199203187250996, "obj2": 0.6747917844320955}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( MUM + Max( CS,DS ) ) + ( MUC * Min( MUR ,( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.09587606474341594}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) - ( ( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,DDR ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( FirstVNF_RAM_Server ,( ( Max( FirstVNF_RAM,AMS ) * AMS ) + RRS ) ) ) ) )", "choosing": "( ( RRSe * ( Max( RRSe,Max( Min( MUM ,MUC ),RCSe ) ) * Max( ( ( RRSe + RCSe ) - Min( RMSe ,RMSe ) ),RMSe ) ) ) / ( MUC / RMSe ) )", "obj1": 0.9023904382470119, "obj2": 0.04319858264982739}, {"determining": "( ( Max( Min( ARS ,CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( Min( ( ( RCSe / MUC ) + RCSe ) ,( RCSe * ( ( RCSe - MLU ) / MUR ) ) ) + CS ) ) ) / CS )", "obj1": 0.18326693227091634, "obj2": 0.6897589377809513}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ) ) * DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * MUR ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( ( RCSe * ( ( CS + CS ) - Max( ( Min( RCSe ,DS ) - ( CS - CS ) ),Min( RRSe ,MUC ) ) ) ) * CS ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.4043824701195219, "obj2": 0.45026915838694315}, {"determining": "( ( ( ( PN / ( Max( MDR,DDR ) * ( Min( ( CRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + RRS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * MUR ) ,( MUC - ( ( ( ( MUC - Min( ( MUR * RMSe ) ,RMSe ) ) - Min( DS ,MUC ) ) - ( Max( ( ( RMSe / MUR ) * Min( MUC ,CS ) ),MUR ) * MUR ) ) + CS ) ) )", "obj1": 0.4860557768924303, "obj2": 0.3694928367611208}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( ACS ,DDR ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( ( FirstVNF_CPU_Server + RRS ),FirstVNF_CPU ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( RRSe * ( ( ( DS / MUM ) / DS ) * ( ( DS / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.898406374501992, "obj2": 0.04459829356062807}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( ( RMSe - ( CS - CS ) ) * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.4947057490246106}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ( RRS * ACS ) ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ( FirstVNF_Mem - FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( ( RRSe - RMSe ) * ( RCSe * ( ( Max( RRSe,( MUM + MUC ) ) - RRSe ) - Max( ( MLU / DS ),( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.18251123746814452}, {"determining": "( ( FirstVNF_Mem + Min( ( Min( Min( ACS ,Max( FirstVNF_RAM,( FirstVNF_CPU_Server + ARS ) ) ) ,FirstVNF_RAM_Server ) / FirstVNF_CPU ) ,CRS ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( ( ( MUM - MUR ) - Min( CS ,MLU ) ) - ( MUR / ( MLU - RMSe ) ) ) ) + CS ) * ( ( DS / MUM ) / DS ) ) ) / ( RCSe * DS ) )", "obj1": 0.16733067729083664, "obj2": 0.7320255530739409}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_Mem * Max( Max( AMS,( Max( ARS,PN ) - Min( ACS ,AMS ) ) ),( CRS + FirstVNF_CPU_Server ) ) ) ,( MDR + Max( FirstVNF_Mem,( Const / Min( ARS ,( FirstVNF_RAM / ARS ) ) ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RCSe - CS ) / MUR ) + Min( MUC ,MUC ) ) ,( Min( RCSe ,MUM ) - ( ( MUM + Max( CS,DS ) ) + ( MUC * Min( MUR ,( RRSe - CS ) ) ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.08816899349785991}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + Min( ARS ,Max( AMS,BR ) ) )", "choosing": "( Max( ( Max( MLU,MLU ) + ( MUM - DS ) ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) ) ) ) )", "obj1": 0.5239043824701195, "obj2": 0.3296068097443333}, {"determining": "( ( Max( ( PN / ( DDR * ( Max( MDR,( FirstVNF_Mem / MDR ) ) + ( FirstVNF_Mem_Server - Min( ARS ,MDR ) ) ) ) ),DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_Mem + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( Max( MLU,RMSe ) ,( RMSe - ( MUC + CS ) ) ) )", "obj1": 0.5219123505976095, "obj2": 0.33628798638048824}, {"determining": "( ( FirstVNF_Mem + Min( Max( Min( ( Min( PN ,ACS ) - Min( ACS ,DDR ) ) ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ,CRS ) ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( CS - MUM ) ) + CS ) * ( ( DS / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.16533864541832669, "obj2": 0.737280278733892}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ) ) * DDR ) - FirstVNF_CPU ) + ( ( PN / ( DDR * ( FirstVNF_Mem + BR ) ) ) - DDR ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * MUR ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( ( RCSe * Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe * DS ) ,( RRSe - DS ) ) ) ) ) * CS ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.8386454183266933, "obj2": 0.0880514938292228}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,FirstVNF_RAM_Server ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( BR * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( Max( RRS,Max( MRS,FirstVNF_RAM_Server ) ) + ARS ) ) ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( RRSe / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ),( RRSe - CS ) ) + CS ) ) ) / ( RMSe * MUM ) )", "obj1": 0.950199203187251, "obj2": 0.020463939226296447}, {"determining": "( ( ( DDR * PN ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + MRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( MLU * ( RCSe - ( ( CS + RMSe ) / RRSe ) ) ) ) ) ) + Min( ( CS * ( DS / ( CS / MLU ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.3645418326693227, "obj2": 0.4907013427470067}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( ( FirstVNF_Mem_Server + ARS ) * ( ( ARS / PN ) * ( ( RRS - ARS ) - FirstVNF_CPU ) ) ) ) + AMS ) )", "choosing": "( ( ( RMSe - ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * RMSe ) ) ) / ( MLU * CS ) ) ) * RMSe ) - Max( ( MLU + CS ),( DS / ( Max( ( MUR / MUM ),CS ) / ( RRSe * ( DS / MUR ) ) ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.08577834902056759}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( BR * ARS ) ) ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( MUR,( RRSe - CS ) ) + CS ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.9661354581673307, "obj2": 0.01273373269674033}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( ( RRSe - RMSe ) * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ) )", "obj1": 0.8247011952191236, "obj2": 0.09990411025931492}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) - DDR ) - FirstVNF_CPU ) + Min( ACS ,( FirstVNF_RAM + FirstVNF_Mem ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe - MLU ) ,( ( MUM * RMSe ) + Min( Max( ( CS / MLU ),Min( CS ,MUC ) ) ,DS ) ) ) ) ) / MUR )", "obj1": 0.9641434262948207, "obj2": 0.016635727261102923}], "20": [{"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( MDR / PN ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( BR * ARS ) ) ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( ( ARS + ( CRS * PN ) ) * ( FirstVNF_CPU_Server * ( ( ARS / PN ) * ( FirstVNF_CPU - ( RRS / FirstVNF_CPU_Server ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Min( MUC ,MUC ) + ( ( RCSe - CS ) / MUR ) ) ,( RCSe - ( ( ( DS / ( CS / RRSe ) ) + Max( CS,DS ) ) + ( MUC * ( RRSe / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( AMS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / Min( RMSe ,MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8286852589641435, "obj2": 0.06687613995289568}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( BR,AMS ) ) ,( ( FirstVNF_Mem_Server / CRS ) + RRS ) ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( RRSe * MUR ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUC / ( MLU / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7569721115537849, "obj2": 0.12700874178239002}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Min( AMS ,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( Max( MUM,( Max( ( MUM + RRSe ),( MUC / MUC ) ) + MUC ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( Max( MUC,MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( RCSe + MLU ) ) ) ) ) + CS ) ) )", "obj1": 0.7808764940239044, "obj2": 0.08981874283050993}, {"determining": "( Min( FirstVNF_CPU_Server ,( AMS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) ) + Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) + CS ) ) + Min( ( CS + ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Max( RRSe,MLU ) * ( CS * MUM ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM - RRSe ) ) + ( RCSe / ( Max( CS,Max( MUM,DS ) ) / MLU ) ) ) - ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3844621513944223, "obj2": 0.44343746999273026}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_CPU * Const ),FirstVNF_RAM ) * MRS ) )", "choosing": "( Max( ( ( MUM * MUC ) * MUC ),CS ) + Min( ( ( RRSe - RMSe ) * ( RCSe * ( ( ( RRSe / ( MUM + RRSe ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RRSe / RCSe ) ) )", "obj1": 0.6912350597609562, "obj2": 0.18754947200816732}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.41832669322709165, "obj2": 0.41995831176196624}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.647410358565737, "obj2": 0.18930484609684192}, {"determining": "( ( Max( Const,BR ) * ( ( PN / ( DDR * Min( Min( ARS ,Max( ARS,FirstVNF_CPU ) ) ,AMS ) ) ) - DDR ) ) / ( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,Const ) ) * Min( Max( Min( CRS ,FirstVNF_RAM_Server ),MDR ) ,( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe * ( ( MUM / ( RRSe * ( DS - ( ( CS - RMSe ) / MLU ) ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.549800796812749, "obj2": 0.31562900256749604}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server - ( ( PN / ARS ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MDR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( ( ( ( ( DS / ( CS / MLU ) ) / ( RRSe / RRSe ) ) / MUM ) / DS ),( ( MUM + Max( CS,DS ) ) + ( ( ( MUC * Max( CS,MUM ) ) + ( MUC * CS ) ) * MUR ) ) ) * RRSe ) ,( RCSe - ( CS / MLU ) ) )", "obj1": 0.8824701195219123, "obj2": 0.056937742440292365}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7111553784860558, "obj2": 0.15191794179637277}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( ( ( Max( Const,BR ) * CRS ) - Const ) / Max( FirstVNF_Mem,ACS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - Min( RRSe ,RCSe ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5517928286852589, "obj2": 0.25992597623891434}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( RCSe * CS ),( MUC * MUC ) ) )", "obj1": 0.5876494023904383, "obj2": 0.2336216180049552}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_Mem + BR ) ) ) - DDR ) - FirstVNF_CPU ) + ( ACS * Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - ( DS / ( CS / MLU ) ) )", "obj1": 0.6354581673306773, "obj2": 0.22254506516053568}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.2562124860131587}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( Max( ACS,DDR ) ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( Min( RCSe ,DS ) * ( MUM - Max( MUC,MLU ) ) ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7709163346613546, "obj2": 0.10141937822699769}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_CPU + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( FirstVNF_RAM_Server * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( ( DS * RRSe ) ,MLU ) - ( Min( ( ( ( MLU / RRSe ) - MUM ) - ( MUM / ( RRSe * RCSe ) ) ) ,MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.6992031872509961, "obj2": 0.16080185943635017}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4701195219123506, "obj2": 0.3791835152954171}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - ( MUM * MUR ) ),( RMSe - RMSe ) ) ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.40165724241651085}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( ( CS + ( MUM + DS ) ) + ( MUC + ( RMSe / MUR ) ) ) / ( CS / CS ) ) + MUM ) + ( ( ( MLU * Min( Min( MLU ,MUM ) ,Max( MUC,RCSe ) ) ) - CS ) * MUR ) ) ) )", "obj1": 0.43824701195219123, "obj2": 0.3837673171534224}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( ( ( BR + Min( MDR ,CRS ) ) * Const ) / FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( ( RMSe - ( CS - CS ) ) * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MLU ) * ( DS / MUC ) ) ) ) ) ) ,( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUR + MUM ) ),MUR ) ) ) ) )", "obj1": 0.3705179282868526, "obj2": 0.4793966948538195}, {"determining": "( ( ACS + ( Min( DDR ,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_Mem_Server / Const ) / BR ) * ( FirstVNF_CPU + AMS ) ) ) ) + Min( ACS ,MRS ) )", "choosing": "( ( RRSe * ( ( ( RRSe * ( Min( MUM ,( CS - RMSe ) ) - CS ) ) / RMSe ) * ( DS - RCSe ) ) ) / ( CS / Max( MUM,RCSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7380843293312602}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * Min( ( ( ( Max( FirstVNF_CPU_Server,BR ) - FirstVNF_CPU ) + ( FirstVNF_RAM - ARS ) ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / BR ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( ( ( AMS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS - ( ( RMSe - ( CS + ( Max( MUM,( ( MUM / DS ) + MLU ) ) + ( RMSe * MUC ) ) ) ) * RCSe ) )", "obj1": 0.3286852589641434, "obj2": 0.5358115450422984}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( RCSe * CS ),( MUC * MUC ) ) )", "obj1": 0.5876494023904383, "obj2": 0.2336216180049552}, {"determining": "( ( ( ( ( ( Max( Const,BR ) * CRS ) - FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) - Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) * CRS ) / ( FirstVNF_CPU * Min( Min( ( ( DDR - CRS ) * ARS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,Min( RRS ,RRS ) ) ) )", "choosing": "( Min( Max( Min( RMSe ,( MUM / Min( Max( RRSe,( MUR / MUC ) ) ,MUM ) ) ),MLU ) ,RRSe ) / Min( Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,Max( MUM,MUM ) ) ,( Min( RCSe ,( MLU - Min( RRSe ,RCSe ) ) ) * Min( RMSe ,Min( MLU ,CS ) ) ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7908951734942623}, {"determining": "( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / DS ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RCSe * RMSe ) ,DS ) )", "obj1": 0.14940239043824702, "obj2": 0.7420392987954237}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( Min( ( FirstVNF_Mem + BR ) ,Const ) ,FirstVNF_RAM_Server ) ) * CRS ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe * RMSe ) / ( RRSe * DS ) ) * ( MUR - ( RCSe * RMSe ) ) ) ) / CS )", "obj1": 0.22111553784860558, "obj2": 0.6543324125956602}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_Mem + BR ) ) ) - DDR ) - FirstVNF_CPU ) + ( ACS * Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe * DS ) ,( RRSe - DS ) ) ) ) / MUR )", "obj1": 0.6454183266932271, "obj2": 0.2192744038248081}, {"determining": "( ( ( FirstVNF_CPU - ( PN / ( DDR * ( ( ARS * FirstVNF_CPU_Server ) + RRS ) ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + Min( FirstVNF_RAM ,( AMS * FirstVNF_CPU ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ( FirstVNF_Mem - FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( RMSe ,Max( RRSe,( MUM + RCSe ) ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),Max( RCSe,RCSe ) ) ) + Min( MUM ,MUR ) ) ) )", "obj1": 0.5079681274900398, "obj2": 0.3408769013812399}, {"determining": "( Min( FirstVNF_CPU_Server ,( AMS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) ) + Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) + CS ) ) + Min( ( CS + ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Max( RRSe,MLU ) * ( CS * MUM ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM - RRSe ) ) + ( RCSe / ( Max( CS,Max( MUM,DS ) ) / MLU ) ) ) - ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.43227091633466136, "obj2": 0.38774836598608503}, {"determining": "( ( MRS + MRS ) + ( Max( DDR,FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( ( ( ( MUR * ( ( MUR + DS ) / ( MLU * ( RCSe - ( MUM * CS ) ) ) ) ) * ( MUM * Min( ( ( MLU / ( DS * DS ) ) * MUR ) ,MUR ) ) ) - CS ) + Min( Max( Min( Min( DS ,DS ) ,Max( MUR,MUR ) ),DS ) ,Max( Max( Min( ( MLU / RRSe ) ,RMSe ),MLU ),MLU ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6272215552082994}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ),( FirstVNF_RAM_Server + ( BR - FirstVNF_Mem ) ) ) + Max( ARS,PN ) )", "choosing": "( Max( RRSe,( Max( RRSe,DS ) * ( ( ( Max( ( DS / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / ( RCSe + DS ) )", "obj1": 0.1254980079681275, "obj2": 0.7657971004329583}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( CRS * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) )", "obj1": 0.5358565737051793, "obj2": 0.31704331989593815}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_RAM_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( MUC * CS ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.49800796812749004, "obj2": 0.34899616607181433}, {"determining": "( ( PN + FirstVNF_Mem ) + ( DDR / ACS ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * Max( ( ( ( DS / ( RMSe / MLU ) ) * ( RRSe / RRSe ) ) / MUM ),DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6686407471310237}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( RMSe - Max( ( MUC / RMSe ),Max( RRSe,RMSe ) ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.3596847854317509}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( Max( CRS,FirstVNF_RAM ) - ( ( BR / FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( ( FirstVNF_CPU_Server + ACS ),( FirstVNF_RAM / FirstVNF_Mem ) ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( ( Min( ( MUM - DS ) ,MLU ) / ( ( ( ( MUM - ( MLU / RRSe ) ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) / MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03713461683870236}, {"determining": "( ( Max( Min( ( ( PN * ( Max( BR,FirstVNF_CPU ) + ( MRS + MRS ) ) ) + ARS ) ,( AMS - DDR ) ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( Max( DS,RMSe ) / ( RMSe / ( RRSe * ( ( MUR + MUM ) * CS ) ) ) ) ) / CS )", "obj1": 0.16533864541832669, "obj2": 0.7172039047370908}, {"determining": "( Min( FirstVNF_CPU_Server ,( AMS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) ) + Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) + CS ) ) + Min( ( CS + ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Max( RRSe,MLU ) * ( CS * MUM ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM - RRSe ) ) + ( RCSe / ( Max( CS,Max( MUM,DS ) ) / MLU ) ) ) - ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3745019920318725, "obj2": 0.45858960619231165}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + ( Max( ( Min( MDR ,FirstVNF_RAM ) * FirstVNF_CPU ),FirstVNF_RAM ) * MRS ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6415179762939426}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( Max( Max( ARS,Const ),ACS ) + ( RRS + MRS ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * Min( RMSe ,Min( ( MUC + Max( DS,MUM ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5657803926494337}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,ACS ) - Min( DDR ,ACS ) ) / ( ( AMS / CRS ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) ) ) + Min( DDR ,ARS ) ) + ( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe * MLU ) * ( MLU / DS ) ) ) / ( DS + RCSe ) )", "obj1": 0.8884462151394422, "obj2": 0.050243154090234145}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( FirstVNF_Mem + Min( ( RRS - FirstVNF_CPU ) ,( ( Min( CRS ,FirstVNF_Mem_Server ) / ( DDR + FirstVNF_Mem ) ) - Max( BR,( BR / ARS ) ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( RCSe / MUM ),MUC ) * ( RRSe / MLU ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / ( RMSe + DS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.23705179282868527, "obj2": 0.6393395150082117}, {"determining": "( ( Max( ( PN / ( DDR * ( Max( MDR,( FirstVNF_Mem / MDR ) ) + ( FirstVNF_Mem_Server - Min( ARS ,MDR ) ) ) ) ),DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_Mem + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( Max( MLU,RMSe ) ,( RMSe - ( MUC + CS ) ) ) )", "obj1": 0.5219123505976095, "obj2": 0.33628798638048824}, {"determining": "( ( ( ( PN / ( Max( MDR,DDR ) * ( Min( ( CRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + RRS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * MUR ) ,( MUC - ( ( ( ( MUC - Min( ( MUR * RMSe ) ,RMSe ) ) - Min( DS ,MUC ) ) - ( Max( ( ( RMSe / MUR ) * Min( MUC ,CS ) ),MUR ) * MUR ) ) + CS ) ) )", "obj1": 0.4860557768924303, "obj2": 0.3694928367611208}, {"determining": "( ( ( Min( PN ,( DDR * ( AMS / Min( ( CRS * DDR ) ,( FirstVNF_RAM_Server / ARS ) ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( DDR / ARS ) * ( ( FirstVNF_Mem - FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( ( RMSe * DS ),Min( Min( ( ( DS - MUR ) + RRSe ) ,( MUR + MLU ) ) ,( RRSe / Min( Max( DS,RMSe ) ,Min( MLU ,Min( MUM ,MUR ) ) ) ) ) ) - ( ( MUM + Max( ( CS + MUR ),( ( CS * MUR ) + CS ) ) ) + ( MUM * RMSe ) ) ) ,( MUM - MUM ) )", "obj1": 0.47808764940239046, "obj2": 0.3704843820046037}, {"determining": "( ( ( DDR * PN ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + MRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( MLU * ( RCSe - ( ( CS + RMSe ) / RRSe ) ) ) ) ) ) + Min( ( CS * ( DS / ( CS / MLU ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.3645418326693227, "obj2": 0.4907013427470067}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.28286852589641437, "obj2": 0.5716025074141267}, {"determining": "( ( ( ( MDR + MRS ) - ( ( ARS / FirstVNF_CPU_Server ) * ( AMS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) + AMS ) - Max( FirstVNF_CPU_Server,BR ) )", "choosing": "Min( Max( RCSe,( DS + MUC ) ) ,( Max( ( MUM / ( MUR + Max( ( RRSe * Min( RMSe ,MLU ) ),CS ) ) ),RRSe ) * MUM ) )", "obj1": 0.9800796812749004, "obj2": 0.007736285462954932}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * ( ( Max( MDR,( ( RRS * FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * MRS ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / MUM ) - ( ( MUR * RMSe ) / ( MLU / RMSe ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5225051866233799}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( CRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( RRSe / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( MUR,( RRSe - CS ) ) + CS ) ) ) / ( RMSe * MUM ) )", "obj1": 0.5258964143426295, "obj2": 0.3254248977664088}, {"determining": "( ( DDR - Max( FirstVNF_Mem_Server,( AMS / FirstVNF_CPU ) ) ) / ( AMS * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( RRSe / ( DS + DS ) ) ) / CS )", "obj1": 0.2051792828685259, "obj2": 0.671239862153384}, {"determining": "( ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) / ( Max( Max( MDR,PN ),BR ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( Max( ( MUC - MUM ),DS ) - ( ( MUM + Max( ( CS * MUR ),( ( CS * MUR ) + CS ) ) ) + ( ( ( RRSe / DS ) * ( ( ( CS * RMSe ) * RRSe ) - ( Max( RMSe,MUR ) / ( RRSe + RMSe ) ) ) ) * MUR ) ) ) ,( MUM - MUM ) )", "obj1": 0.28087649402390436, "obj2": 0.5788256534246077}, {"determining": "( Min( Max( ( FirstVNF_Mem + ( Min( ( Max( MRS,DDR ) / DDR ) ,FirstVNF_Mem_Server ) * ( DDR / MRS ) ) ),CRS ) ,( RRS + FirstVNF_CPU ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( ( ( RCSe / RCSe ) - MUM ) * RRSe ) / Min( ( RRSe * MLU ) ,DS ) )", "obj1": 0.19322709163346613, "obj2": 0.6797569610945424}, {"determining": "( ( ( ( PN / ( DDR / Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - MRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_RAM_Server ) ) * ( ( Min( FirstVNF_Mem ,ACS ) - ( FirstVNF_RAM_Server + ARS ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( Min( ( RRSe / ( MUR + MUC ) ) ,RRSe ) - Max( RRSe,( ( CS + MLU ) * Min( MUC ,RRSe ) ) ) ) ) ) ,Min( CS ,( MUM * MLU ) ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6317526071052565}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + Max( MRS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) + ( ( Max( DDR,Max( ARS,Const ) ) * ( PN * ACS ) ) - PN ) ) + ( ( FirstVNF_CPU / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM * FirstVNF_CPU ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MUM ) * ( RMSe / MUM ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.49865653294254103}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) - ( ( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,DDR ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( FirstVNF_RAM_Server ,( ( Max( FirstVNF_RAM,AMS ) * AMS ) + RRS ) ) ) ) )", "choosing": "( ( RRSe * ( Max( RRSe,Max( Min( MUM ,MUC ),RCSe ) ) * Max( ( ( RRSe + RCSe ) - Min( RMSe ,RMSe ) ),RMSe ) ) ) / ( MUC / RMSe ) )", "obj1": 0.9023904382470119, "obj2": 0.04319858264982739}, {"determining": "( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - BR ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Min( ( ( AMS * PN ) + BR ) ,FirstVNF_Mem_Server ) ) ) ) + ( ACS * BR ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) ) / Min( ( RCSe * RMSe ) ,DS ) )", "obj1": 0.17729083665338646, "obj2": 0.7128749270061254}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Min( ( DS * RRSe ) ,MLU ) / ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.7071713147410359, "obj2": 0.15225076938103102}, {"determining": "( ( PN / ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ) ) - ( ( Min( PN ,ACS ) - Min( ACS ,DDR ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( ( FirstVNF_CPU_Server + RRS ),FirstVNF_CPU ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( RRSe * ( ( ( DS / MUM ) / DS ) * ( ( Max( ( Min( RCSe ,DS ) - ( CS - CS ) ),Min( RRSe ,MUC ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.898406374501992, "obj2": 0.04459829356062806}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),ARS ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),( RMSe / MUR ) ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.35258964143426297, "obj2": 0.5083821518185606}, {"determining": "( ( CRS * Max( Const,BR ) ) / Max( ( BR / MRS ),PN ) )", "choosing": "( ( RRSe * ( Max( RMSe,( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( ( RCSe - MUR ) ,( CS + RMSe ) ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.199203187250996, "obj2": 0.6747917844320955}, {"determining": "( ( Max( MDR,BR ) * CRS ) / ( FirstVNF_CPU * Min( Max( RRS,( AMS / FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Max( CS,Max( MUC,RMSe ) ) )", "obj1": 0.19123505976095617, "obj2": 0.6896596656719088}, {"determining": "( Max( BR,MRS ) + ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - ( DS / ( CS / ( ( ( MUC * MUM ) + ( ( Min( DS ,RMSe ) * MUR ) - ( Min( MUR ,CS ) - RMSe ) ) ) - Min( DS ,Min( ( MLU - ( RCSe + MUR ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5889308446954941}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) - ( ( Min( PN ,ACS ) - Min( ACS ,DDR ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( ( FirstVNF_CPU_Server * AMS ) ,Max( FirstVNF_CPU,Const ) ),FirstVNF_CPU ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( ( MUR - ( CS + ( Max( MUM,( ( MUM / CS ) + MLU ) ) + Max( ( RCSe * ( CS * RCSe ) ),MUC ) ) ) ) * RCSe ) - CS )", "obj1": 0.9422310756972112, "obj2": 0.023115575798475674}, {"determining": "( Min( FirstVNF_CPU_Server ,( AMS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) ) + Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) + CS ) ) + Min( ( CS + ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Max( RRSe,MLU ) * ( CS * MUM ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM - RRSe ) ) + ( RCSe / ( Max( CS,Max( MUM,DS ) ) / MLU ) ) ) - ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3745019920318725, "obj2": 0.45858960619231165}, {"determining": "( ( Max( Min( ARS ,CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( Min( ( ( RCSe / MUC ) + RCSe ) ,( RCSe * ( ( RCSe - MLU ) / MUR ) ) ) + CS ) ) ) / CS )", "obj1": 0.18326693227091634, "obj2": 0.6897589377809513}, {"determining": "( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( ACS ,DDR ) ) / ( ( RRS * MRS ) - Min( Min( Max( ( FirstVNF_CPU_Server + BR ),FirstVNF_CPU ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( RRSe * ( ( ( DS / MUM ) / DS ) * ( ( ( RCSe + RMSe ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.01071261762924124}, {"determining": "( ( ( ( PN / ( ( ACS * AMS ) * ( Min( ( FirstVNF_Mem * Const ) ,RRS ) * RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_Mem + Const ) * Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - PN ) ) ) )", "choosing": "Min( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) * Max( CS,( Min( MUM ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( ( Max( RMSe,RCSe ) * ( MUM + MUR ) ),MUR ) * RMSe ) - ( ( MUC - RCSe ) - Min( DS ,Min( Min( RRSe ,RMSe ) ,RRSe ) ) ) ) + CS ) ) )", "obj1": 0.3426294820717131, "obj2": 0.5167606391735924}, {"determining": "( Min( FirstVNF_RAM ,CRS ) + Max( ( ( DDR / RRS ) / Min( FirstVNF_Mem ,PN ) ),FirstVNF_RAM ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( MUR * RCSe ) / RRSe ) / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( RMSe - ( RMSe + ( ( Max( MUC,CS ) / MUR ) - Max( ( ( CS - MUR ) * CS ),( ( CS * DS ) * DS ) ) ) ) ) ,( ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),Min( ( RRSe / MUC ) ,( CS / MUM ) ) ) ) ) * CS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5090781083032475}, {"determining": "( Max( BR,ACS ) + ( DDR * ( Min( ARS ,FirstVNF_RAM_Server ) + RRS ) ) )", "choosing": "Min( ( MUM - ( MUC * CS ) ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.30876494023904383, "obj2": 0.5540891888097728}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( FirstVNF_RAM_Server,ARS ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ACS ,FirstVNF_Mem ) ) + ( ( ( FirstVNF_Mem + Min( ARS ,( ( MRS + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( Max( MLU,MLU ) + ( MUM - DS ) ),( MUR / ( ( CS * RCSe ) - ( CS * ( MUR * MLU ) ) ) ) ) + ( ( ( ( DS * ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) )", "obj1": 0.3605577689243028, "obj2": 0.4944877297071132}, {"determining": "( Min( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) ,( Max( AMS,Max( FirstVNF_CPU,MRS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + Min( ( Min( PN ,ACS ) - Min( ACS ,DDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( MUR + ( RRSe - RMSe ) ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) + ( ( RRSe * ( ( Max( MUR,( CS - MUM ) ) + CS ) * ( ( DS / MUM ) / DS ) ) ) / Min( RCSe ,MUR ) ) )", "obj1": 0.9900398406374502, "obj2": 0.003473211201590067}, {"determining": "( ( MRS / BR ) + ( ARS + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( CS * MUC ) ,( ( CS * ( MUR * MUM ) ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( CS,DS ) / CS ) ) ) ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5521367462724568}, {"determining": "( ( ( ( ACS / ( Min( RRS ,FirstVNF_Mem ) * Min( ( FirstVNF_CPU_Server + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( BR - FirstVNF_Mem_Server ) ) + ( ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS + RCSe ) - ( ( DS * RCSe ) + Max( RCSe,DS ) ) ) / ( ( MLU - MUM ) + MUR ) ) / DS ) ) * RRSe ) / CS )", "obj1": 0.3386454183266932, "obj2": 0.5212920590980682}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + Min( ARS ,Max( AMS,BR ) ) )", "choosing": "( Max( ( Max( MLU,MLU ) + ( MUM - DS ) ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),( ( CS / MUM ) * ( RRSe / MUC ) ) ) ) ) ) ,( RMSe - ( CS + Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) ) ) ) )", "obj1": 0.5239043824701195, "obj2": 0.3296068097443333}, {"determining": "( ( BR + FirstVNF_Mem ) + Min( Max( Min( FirstVNF_Mem ,( ACS / Max( Max( FirstVNF_RAM,FirstVNF_CPU ),FirstVNF_CPU ) ) ),MDR ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / RMSe ) ) * Min( MLU ,MLU ) ) / MUM ) / DS ) ) ) / Min( ( RCSe * RMSe ) ,DS ) )", "obj1": 0.16733067729083664, "obj2": 0.7149307235189746}, {"determining": "( ( ( ( Min( PN ,ACS ) - Min( DDR ,FirstVNF_RAM_Server ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( BR * ARS ) ) ) ) ) ) + Min( ( BR - FirstVNF_CPU ) ,( Max( RRS,Max( MRS,FirstVNF_RAM_Server ) ) + ARS ) ) ) + ( BR + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( RRSe / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) / ( Max( Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ),( RRSe - CS ) ) + CS ) ) ) / ( RMSe * MUM ) )", "obj1": 0.950199203187251, "obj2": 0.020463939226296447}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( BR * ARS ) ) ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( MUR,( RRSe - CS ) ) + CS ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.9661354581673307, "obj2": 0.012733732696740328}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_Mem + BR ) ) ) - DDR ) - FirstVNF_CPU ) + ( ACS * Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe * DS ) ,( RRSe - DS ) ) ) ) / MUR )", "obj1": 0.6434262948207171, "obj2": 0.221012639507083}, {"determining": "( ( FirstVNF_CPU * ( ACS + FirstVNF_RAM_Server ) ) / ( Max( Min( ( FirstVNF_CPU_Server + ( MDR + BR ) ) ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) * CRS ) )", "choosing": "( ( RRSe * ( ( RMSe - ( ( RMSe / ( ( MUC * MUM ) * RMSe ) ) - CS ) ) * ( ( ( Min( RCSe ,DS ) * Max( MLU,( MUR - CS ) ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1752988047808765, "obj2": 0.7130042765718382}, {"determining": "( Max( ( ( RRS / Max( FirstVNF_RAM_Server,MDR ) ) - FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) - ( ( Min( ACS ,DDR ) - Min( PN ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( ( ( FirstVNF_CPU - CRS ) + ACS ),FirstVNF_CPU ) ,PN ) ,PN ) ) ) )", "choosing": "( Max( Min( Min( ( Min( ( RMSe - RRSe ) ,CS ) + MLU ) ,RCSe ) ,( CS + MUM ) ),( ( Max( MUR,( RRSe - MUM ) ) + CS ) * Max( RRSe,Max( ( MUM + MUC ),RCSe ) ) ) ) / ( MUM + Max( CS,DS ) ) )", "obj1": 0.9601593625498008, "obj2": 0.017994743444672907}, {"determining": "( ( ( ( PN / ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) - DDR ) - FirstVNF_CPU ) + Min( ACS ,( FirstVNF_RAM + FirstVNF_Mem ) ) )", "choosing": "( Min( MUR ,Min( ( MUR - ( RCSe * RMSe ) ) ,Min( ( RRSe - MLU ) ,( ( MUM * RMSe ) + Min( Max( ( CS / MLU ),Min( CS ,MUC ) ) ,DS ) ) ) ) ) / MUR )", "obj1": 0.9641434262948207, "obj2": 0.016635727261102923}, {"determining": "( Max( CRS,FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Max( MRS,Const ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( FirstVNF_CPU,Min( ( FirstVNF_CPU_Server * AMS ) ,FirstVNF_CPU ) ) ,CRS ) ,PN ) ) ) )", "choosing": "( CS - ( ( MLU - ( CS + ( ( CS + MUR ) + Max( RMSe,MUC ) ) ) ) * RCSe ) )", "obj1": 0.9442231075697212, "obj2": 0.02250620481698289}, {"determining": "( ( ( ( PN / ( DDR * ( Max( MDR,( FirstVNF_Mem + Const ) ) + ( FirstVNF_Mem_Server - Min( ARS ,MDR ) ) ) ) ) - ( ARS + ( MRS * PN ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_Mem + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( ( MLU - MLU ) / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / CS ) * ( RRSe / MLU ) ) ) ) ) ) ,( RMSe - ( CS + ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) ) ) ) )", "obj1": 0.9960159362549801, "obj2": 0.0012240655236769433}, {"determining": "( BR - ( ( Min( PN ,ACS ) - Min( ACS ,DDR ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( ( FirstVNF_CPU_Server * AMS ) ,Const ),FirstVNF_CPU ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( ( RMSe - ( CS + ( Max( MUM,( ( MUM / CS ) + MLU ) ) + Max( RMSe,Min( ( CS + DS ) ,CS ) ) ) ) ) * RCSe ) - CS )", "obj1": 0.9422310756972112, "obj2": 0.023115575798475674}, {"determining": "( ACS - ( ( Min( PN ,ACS ) - Min( ACS ,DDR ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( ( FirstVNF_CPU_Server * AMS ) ,Const ),FirstVNF_CPU ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( RMSe - ( CS + CS ) ) - CS )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( ( ( Min( PN ,( DDR * ( AMS / Min( ( CRS * DDR ) ,( FirstVNF_RAM_Server / ARS ) ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( DDR / ARS ) * ( ( FirstVNF_Mem - FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( ( RMSe * DS ),Min( Min( ( ( DS - MUR ) + RRSe ) ,( MUR + MLU ) ) ,( RRSe / Min( Max( DS,RMSe ) ,Min( MLU ,Min( MUM ,MUR ) ) ) ) ) ) - ( ( MUM + Max( ( CS + MUR ),( ( CS * MUR ) + CS ) ) ) + ( MUM * RMSe ) ) ) ,( MUM - MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0025431885204270136}], "21": [{"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( BR * ARS ) ) ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,Min( ( ( ( ( RCSe * ( CS * RCSe ) ) / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + ( MDR / PN ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( BR * ARS ) ) ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( MRS / MDR ) )", "choosing": "( Max( CS,( MUC + MUC ) ) + Max( MUR,CS ) )", "obj1": 0.6354581673306773, "obj2": 0.19777089357152827}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ( PN / ( DDR * Min( ( FirstVNF_CPU_Server + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) ) )", "choosing": "Min( ( ( MUM * ( DS * DS ) ) - MUM ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.5159362549800797, "obj2": 0.3237057234826972}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5338645418326693, "obj2": 0.2754082422755769}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Min( AMS ,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( Max( MUM,( Max( ( MUM + RRSe ),( MUC / MUC ) ) + MUC ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( Max( MUC,MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( RCSe + MLU ) ) ) ) ) + CS ) ) )", "obj1": 0.7808764940239044, "obj2": 0.08981874283050993}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( ( CS + ( MUM + DS ) ) + ( MUC + ( RMSe / MUR ) ) ) / ( CS / CS ) ) + MUM ) + ( ( ( MLU * Min( Min( MLU ,MUM ) ,Max( MUC,RCSe ) ) ) - CS ) * MUR ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06650790249943811}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( CRS * ( FirstVNF_CPU_Server - ( ( PN / ARS ) * ( FirstVNF_CPU - ( RRS / Max( FirstVNF_RAM_Server,MDR ) ) ) ) ) ) + AMS ) )", "choosing": "Min( ( Max( ( ( ( ( DS / ( CS / MLU ) ) / ( RRSe / RRSe ) ) / MUM ) / DS ),( ( MUM + Max( CS,DS ) ) + ( ( ( MUC * Max( CS,MUM ) ) + ( MUC * CS ) ) * MUR ) ) ) * RRSe ) ,( RCSe - ( CS / MLU ) ) )", "obj1": 0.8824701195219123, "obj2": 0.056937742440292365}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + ( Max( ( FirstVNF_CPU * Const ),FirstVNF_RAM ) * MRS ) )", "choosing": "( Max( ( ( MUM * MUC ) * MUC ),CS ) + Min( ( ( RRSe - RMSe ) * ( RCSe * ( ( ( RRSe / ( MUM + RRSe ) ) - RRSe ) - Max( RRSe,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) ) ) ,( RRSe / RCSe ) ) )", "obj1": 0.6912350597609562, "obj2": 0.18754947200816732}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_Mem ,DDR ) ) * Min( Max( DDR,ACS ) ,FirstVNF_CPU ) ) * Min( Min( ( FirstVNF_Mem - ARS ) ,( AMS * BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( RRSe,( ( ( ( MUC / CS ) * Min( DS ,MUM ) ) * ( ( Max( RMSe,RRSe ) - MUC ) / RCSe ) ) / DS ) ) * ( ( RMSe / ( RCSe / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MLU * CS ) ) + ( ( RCSe * CS ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.749003984063745, "obj2": 0.1124581940753405}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) - ( ( Min( PN ,ACS ) - Min( ACS ,DDR ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( Min( ( FirstVNF_CPU_Server * AMS ) ,Max( FirstVNF_CPU,Const ) ),FirstVNF_CPU ) ,ACS ) ,PN ) ) ) )", "choosing": "( ( ( MUR - ( CS + ( Max( MUM,( ( MUM / CS ) + MLU ) ) + Max( ( RCSe * ( CS * RCSe ) ),MUC ) ) ) ) * RRSe ) - CS )", "obj1": 0.7330677290836654, "obj2": 0.14423072334002318}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.647410358565737, "obj2": 0.18930484609684192}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.2562124860131587}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_CPU + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( FirstVNF_RAM_Server * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( ( DS * RRSe ) ,MLU ) - ( Min( ( ( ( MLU / RRSe ) - MUM ) - ( MUM / ( RRSe * RCSe ) ) ) ,MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.6992031872509961, "obj2": 0.16080185943635017}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5856573705179283, "obj2": 0.23503847767297287}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( ( CS + ( MUM + DS ) ) + ( MUC + ( RMSe / MUR ) ) ) / ( CS / CS ) ) + MUM ) + ( ( ( MLU * Min( Min( MLU ,MUM ) ,Max( MUC,RCSe ) ) ) - CS ) * MUR ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06650790249943811}, {"determining": "( Min( FirstVNF_CPU_Server ,( AMS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) ) + Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) + CS ) ) + Min( ( CS + ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Max( RRSe,MLU ) * ( CS * MUM ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM - RRSe ) ) + ( RCSe / ( Max( CS,Max( MUM,DS ) ) / MLU ) ) ) - ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3844621513944223, "obj2": 0.44343746999273026}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.39641434262948205, "obj2": 0.4310350990277014}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( RCSe * CS ),( MUC * MUC ) ) )", "obj1": 0.5876494023904383, "obj2": 0.2336216180049552}, {"determining": "( ( ( FirstVNF_CPU - ( PN / ( DDR * ( ( ARS * FirstVNF_CPU_Server ) + RRS ) ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + Min( FirstVNF_RAM ,( AMS * FirstVNF_CPU ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ( FirstVNF_Mem - FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( RMSe ,Max( RRSe,( MUM + RCSe ) ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),Max( RCSe,RCSe ) ) ) + Min( MUM ,MUR ) ) ) )", "obj1": 0.5079681274900398, "obj2": 0.3408769013812399}, {"determining": "Min( ( FirstVNF_CPU_Server * RRS ) ,( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( ( FirstVNF_CPU - DDR ),ARS ) ) ,( ACS - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( ( CS + ( MUM + DS ) ) + ( MUC + ( RMSe / MUR ) ) ) / ( CS / CS ) ) + MUM ) + ( ( ( MLU * Min( Min( MLU ,MUM ) ,Max( MUC,RCSe ) ) ) - CS ) * MUR ) ) ) )", "obj1": 0.3665338645418327, "obj2": 0.4751280964737322}, {"determining": "( ( ACS + ( Min( DDR ,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_Mem_Server / Const ) / BR ) * ( FirstVNF_CPU + AMS ) ) ) ) + Min( ACS ,MRS ) )", "choosing": "( ( RRSe * ( ( ( RRSe * ( Min( MUM ,( CS - RMSe ) ) - CS ) ) / RMSe ) * ( DS - RCSe ) ) ) / ( CS / Max( MUM,RCSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7380843293312602}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( RCSe * CS ),( MUC * MUC ) ) )", "obj1": 0.5876494023904383, "obj2": 0.2336216180049552}, {"determining": "( ( ( ( ( ( Max( Const,BR ) * CRS ) - FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) - Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) * CRS ) / ( FirstVNF_CPU * Min( Min( ( ( DDR - CRS ) * ARS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,Min( RRS ,RRS ) ) ) )", "choosing": "( Min( Max( Min( RMSe ,( MUM / Min( Max( RRSe,( MUR / MUC ) ) ,MUM ) ) ),MLU ) ,RRSe ) / Min( Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,Max( MUM,MUM ) ) ,( Min( RCSe ,( MLU - Min( RRSe ,RCSe ) ) ) * Min( RMSe ,Min( MLU ,CS ) ) ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7908951734942623}, {"determining": "( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / DS ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RCSe * RMSe ) ,DS ) )", "obj1": 0.14940239043824702, "obj2": 0.7420392987954237}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( Min( ( FirstVNF_Mem + BR ) ,Const ) ,FirstVNF_RAM_Server ) ) * CRS ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe * RMSe ) / ( RRSe * DS ) ) * ( MUR - ( RCSe * RMSe ) ) ) ) / CS )", "obj1": 0.22111553784860558, "obj2": 0.6543324125956602}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( RMSe - Max( ( MUC / RMSe ),Max( RRSe,RMSe ) ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.3596847854317509}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( Max( ( ( RRSe + RCSe ) / Min( RMSe ,RMSe ) ),RMSe ) * Max( RRSe,Max( Min( MUM ,MUC ),RCSe ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4601593625498008, "obj2": 0.37938191490877954}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4362549800796813, "obj2": 0.38307209213042365}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( PN / ( DDR * Min( ( ARS + Max( MRS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.7629482071713147, "obj2": 0.10577103387526342}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MUM ) * ( RMSe / MUM ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7689243027888446, "obj2": 0.09760187676756585}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_RAM_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( MUC * CS ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.49800796812749004, "obj2": 0.34899616607181433}, {"determining": "( ( PN + FirstVNF_Mem ) + ( DDR / ACS ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( MLU - MUR ) ) + ( DS / ( CS / MLU ) ) ) * Max( ( ( ( DS / ( RMSe / MLU ) ) * ( RRSe / RRSe ) ) / MUM ),DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6686407471310237}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / Min( RCSe ,Max( ( DS - MLU ),RCSe ) ) ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.41434262948207173, "obj2": 0.4244454926865346}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( Max( CRS,FirstVNF_RAM ) - ( ( BR / FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( ( FirstVNF_CPU_Server + ACS ),( FirstVNF_RAM / FirstVNF_Mem ) ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( ( Min( ( MUM - DS ) ,MLU ) / ( ( ( ( MUM - ( MLU / RRSe ) ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) / MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03713461683870236}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - ( MUM * MUR ) ),( RMSe - RMSe ) ) ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.40165724241651085}, {"determining": "( ( Max( Min( ( ( PN * ( Max( BR,FirstVNF_CPU ) + ( MRS + MRS ) ) ) + ARS ) ,( AMS - DDR ) ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( Max( DS,RMSe ) / ( RMSe / ( RRSe * ( ( MUR + MUM ) * CS ) ) ) ) ) / CS )", "obj1": 0.16533864541832669, "obj2": 0.7172039047370908}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + ( Max( ( Min( MDR ,FirstVNF_RAM ) * FirstVNF_CPU ),FirstVNF_RAM ) * MRS ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6415179762939426}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * Min( ( ( ( Max( FirstVNF_CPU_Server,BR ) - FirstVNF_CPU ) + ( FirstVNF_RAM - ARS ) ) * ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / BR ) + FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( ( ( AMS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS - ( ( RMSe - ( CS + ( Max( MUM,( ( MUM / DS ) + MLU ) ) + ( RMSe * MUC ) ) ) ) * RCSe ) )", "obj1": 0.3286852589641434, "obj2": 0.5358115450422984}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.41832669322709165, "obj2": 0.41995831176196624}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Min( ( DS * RRSe ) ,MLU ) / ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.7171314741035857, "obj2": 0.1476281245365381}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,ACS ) - Min( DDR ,ACS ) ) / ( ( AMS / CRS ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) ) ) + Min( DDR ,ARS ) ) + ( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe * MLU ) * ( MLU / DS ) ) ) / ( DS + RCSe ) )", "obj1": 0.8884462151394422, "obj2": 0.050243154090234145}, {"determining": "( ( FirstVNF_Mem + Min( ( RRS - FirstVNF_CPU ) ,( ( Min( CRS ,FirstVNF_Mem_Server ) / ( DDR + FirstVNF_Mem ) ) - Max( BR,( BR / ARS ) ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( RCSe / MUM ),MUC ) * ( RRSe / MLU ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / ( RMSe + DS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.23705179282868527, "obj2": 0.6393395150082117}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) + Min( ( CRS * ( Max( MDR,MDR ) + ARS ) ) ,DDR ) )", "choosing": "( Min( MLU ,RCSe ) + ( ( Min( Max( DS,RRSe ) ,MLU ) / ( RRSe * Max( MUC,DS ) ) ) + MUR ) )", "obj1": 0.9402390438247012, "obj2": 0.02482510431966823}, {"determining": "( Min( FirstVNF_CPU_Server ,( AMS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) ) + Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) + CS ) ) + Min( ( CS + ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Max( RRSe,MLU ) * ( CS * MUM ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM - RRSe ) ) + ( RCSe / ( Max( CS,Max( MUM,DS ) ) / MLU ) ) ) - ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3745019920318725, "obj2": 0.45858960619231165}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_RAM_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( RMSe - Max( ( MUC / RMSe ),Max( RRSe,RMSe ) ) ) ) )", "obj1": 0.4800796812749004, "obj2": 0.36778003211870947}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( ( MLU - MLU ) / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / CS ) * ( RRSe / MLU ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.40040107520568247}, {"determining": "( ( ( DDR * PN ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + MRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( MLU * ( RCSe - ( ( CS + RMSe ) / RRSe ) ) ) ) ) ) + Min( ( CS * ( DS / ( CS / MLU ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.3645418326693227, "obj2": 0.4907013427470067}, {"determining": "( Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ),( FirstVNF_RAM_Server + ( BR - FirstVNF_Mem ) ) ) + Max( ARS,PN ) )", "choosing": "( Max( RRSe,( Max( RRSe,DS ) * ( ( ( Max( ( DS / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / ( RCSe + DS ) )", "obj1": 0.1254980079681275, "obj2": 0.7657971004329583}, {"determining": "( ( MRS + MRS ) + ( Max( DDR,FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( ( ( ( MUR * ( ( MUR + DS ) / ( MLU * ( RCSe - ( MUM * CS ) ) ) ) ) * ( MUM * Min( ( ( MLU / ( DS * DS ) ) * MUR ) ,MUR ) ) ) - CS ) + Min( Max( Min( Min( DS ,DS ) ,Max( MUR,MUR ) ),DS ) ,Max( Max( Min( ( MLU / RRSe ) ,RMSe ),MLU ),MLU ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6272215552082994}, {"determining": "( ( ( ( MDR + MRS ) - ( ( ARS / FirstVNF_CPU_Server ) * ( AMS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) + AMS ) - Max( FirstVNF_CPU_Server,BR ) )", "choosing": "Min( Max( RCSe,( DS + MUC ) ) ,( Max( ( MUM / ( MUR + Max( ( RRSe * Min( RMSe ,MLU ) ),CS ) ) ),RRSe ) * MUM ) )", "obj1": 0.9800796812749004, "obj2": 0.007736285462954932}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * ( ( Max( MDR,( ( RRS * FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * MRS ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / MUM ) - ( ( MUR * RMSe ) / ( MLU / RMSe ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5225051866233799}, {"determining": "( Min( FirstVNF_CPU_Server ,( AMS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) ) + Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) + CS ) ) + Min( ( CS + ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Max( RRSe,MLU ) * ( CS * MUM ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM - RRSe ) ) + ( RCSe / ( Max( CS,Max( MUM,DS ) ) / MLU ) ) ) - ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.43227091633466136, "obj2": 0.38774836598608503}, {"determining": "( ( DDR - Max( FirstVNF_Mem_Server,( AMS / FirstVNF_CPU ) ) ) / ( AMS * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( RRSe / ( DS + DS ) ) ) / CS )", "obj1": 0.2051792828685259, "obj2": 0.671239862153384}, {"determining": "( ( Max( BR,( ( ARS + ( CRS - ( Max( BR,ACS ) + ( MRS + PN ) ) ) ) / FirstVNF_CPU_Server ) ) * CRS ) / ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * ( FirstVNF_RAM_Server * MDR ) ) * Min( ( DDR + ( ( AMS / FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,ACS ) ) )", "choosing": "( ( ( MLU * RRSe ) * ( Min( MUC ,( ( ( MLU + CS ) * DS ) * MLU ) ) * ( ( ( Min( ( CS * MLU ) ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1294820717131474, "obj2": 0.754782503769634}, {"determining": "( ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) / ( Max( Max( MDR,PN ),BR ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( Max( ( MUC - MUM ),DS ) - ( ( MUM + Max( ( CS * MUR ),( ( CS * MUR ) + CS ) ) ) + ( ( ( RRSe / DS ) * ( ( ( CS * RMSe ) * RRSe ) - ( Max( RMSe,MUR ) / ( RRSe + RMSe ) ) ) ) * MUR ) ) ) ,( MUM - MUM ) )", "obj1": 0.28087649402390436, "obj2": 0.5788256534246077}, {"determining": "( Min( FirstVNF_CPU_Server ,( AMS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) ) + Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) + CS ) ) + Min( ( CS + ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Max( RRSe,MLU ) * ( CS * MUM ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM - RRSe ) ) + ( RCSe / ( Max( CS,Max( MUM,DS ) ) / MLU ) ) ) - ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3745019920318725, "obj2": 0.45858960619231165}, {"determining": "( Min( Max( ( FirstVNF_Mem + ( Min( ( Max( MRS,DDR ) / DDR ) ,FirstVNF_Mem_Server ) * ( DDR / MRS ) ) ),CRS ) ,( RRS + FirstVNF_CPU ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( ( ( RCSe / RCSe ) - MUM ) * RRSe ) / Min( ( RRSe * MLU ) ,DS ) )", "obj1": 0.19322709163346613, "obj2": 0.6797569610945424}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( ( ( Max( Const,BR ) * CRS ) - Const ) / Max( FirstVNF_Mem,ACS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - Min( RRSe ,RCSe ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5517928286852589, "obj2": 0.25992597623891434}, {"determining": "( ( ( ( PN / ( DDR / Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - MRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_RAM_Server ) ) * ( ( Min( FirstVNF_Mem ,ACS ) - ( FirstVNF_RAM_Server + ARS ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( Min( ( RRSe / ( MUR + MUC ) ) ,RRSe ) - Max( RRSe,( ( CS + MLU ) * Min( MUC ,RRSe ) ) ) ) ) ) ,Min( CS ,( MUM * MLU ) ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6317526071052565}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + Max( MRS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) + ( ( Max( DDR,Max( ARS,Const ) ) * ( PN * ACS ) ) - PN ) ) + ( ( FirstVNF_CPU / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM * FirstVNF_CPU ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MUM ) * ( RMSe / MUM ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.49865653294254103}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5384909009666634}, {"determining": "( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - BR ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,Min( ( ( AMS * PN ) + BR ) ,FirstVNF_Mem_Server ) ) ) ) + ( ACS * BR ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) ) / Min( ( RCSe * RMSe ) ,DS ) )", "obj1": 0.17729083665338646, "obj2": 0.7128749270061254}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Min( ( DS * RRSe ) ,MLU ) / ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.7071713147410359, "obj2": 0.15225076938103102}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),ARS ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),( RMSe / MUR ) ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.35258964143426297, "obj2": 0.5083821518185606}, {"determining": "( ( CRS * Max( Const,BR ) ) / Max( ( BR / MRS ),PN ) )", "choosing": "( ( RRSe * ( Max( RMSe,( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( ( RCSe - MUR ) ,( CS + RMSe ) ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.199203187250996, "obj2": 0.6747917844320955}, {"determining": "( ( Max( MDR,BR ) * CRS ) / ( FirstVNF_CPU * Min( Max( RRS,( AMS / FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Max( CS,Max( MUC,RMSe ) ) )", "obj1": 0.19123505976095617, "obj2": 0.6896596656719088}, {"determining": "( Max( BR,MRS ) + ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - ( DS / ( CS / ( ( ( MUC * MUM ) + ( ( Min( DS ,RMSe ) * MUR ) - ( Min( MUR ,CS ) - RMSe ) ) ) - Min( DS ,Min( ( MLU - ( RCSe + MUR ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5889308446954941}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) - ( ( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,DDR ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( FirstVNF_RAM_Server ,( ( Max( FirstVNF_RAM,AMS ) * AMS ) + RRS ) ) ) ) )", "choosing": "( ( RRSe * ( Max( RRSe,Max( Min( MUM ,MUC ),RCSe ) ) * Max( ( ( RRSe + RCSe ) - Min( RMSe ,RMSe ) ),RMSe ) ) ) / ( MUC / RMSe ) )", "obj1": 0.9023904382470119, "obj2": 0.04319858264982739}, {"determining": "( ( Max( Min( ARS ,CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( Min( ( ( RCSe / MUC ) + RCSe ) ,( RCSe * ( ( RCSe - MLU ) / MUR ) ) ) + CS ) ) ) / CS )", "obj1": 0.18326693227091634, "obj2": 0.6897589377809513}, {"determining": "( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( ACS ,DDR ) ) / ( ( RRS * MRS ) - Min( Min( Max( ( FirstVNF_CPU_Server + BR ),FirstVNF_CPU ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( RRSe * ( ( ( DS / MUM ) / DS ) * ( ( ( RCSe + RMSe ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.01071261762924124}, {"determining": "( ( ( ( PN / ( ( ACS * AMS ) * ( Min( ( FirstVNF_Mem * Const ) ,RRS ) * RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_Mem + Const ) * Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - PN ) ) ) )", "choosing": "Min( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) * Max( CS,( Min( MUM ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( ( Max( RMSe,RCSe ) * ( MUM + MUR ) ),MUR ) * RMSe ) - ( ( MUC - RCSe ) - Min( DS ,Min( Min( RRSe ,RMSe ) ,RRSe ) ) ) ) + CS ) ) )", "obj1": 0.3426294820717131, "obj2": 0.5167606391735924}, {"determining": "( Min( FirstVNF_RAM ,CRS ) + Max( ( ( DDR / RRS ) / Min( FirstVNF_Mem ,PN ) ),FirstVNF_RAM ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( MUR * RCSe ) / RRSe ) / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( RMSe - ( RMSe + ( ( Max( MUC,CS ) / MUR ) - Max( ( ( CS - MUR ) * CS ),( ( CS * DS ) * DS ) ) ) ) ) ,( ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),Min( ( RRSe / MUC ) ,( CS / MUM ) ) ) ) ) * CS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5090781083032475}, {"determining": "( Max( Max( ARS,Const ),ACS ) + ( RRS + MRS ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * Min( RMSe ,Min( ( MUC + Max( DS,MUM ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5657803926494337}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( FirstVNF_RAM_Server,ARS ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ACS ,FirstVNF_Mem ) ) + ( ( ( FirstVNF_Mem + Min( ARS ,( ( MRS + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( Max( MLU,MLU ) + ( MUM - DS ) ),( MUR / ( ( CS * RCSe ) - ( CS * ( MUR * MLU ) ) ) ) ) + ( ( ( ( DS * ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) )", "obj1": 0.3605577689243028, "obj2": 0.4944877297071132}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.28286852589641437, "obj2": 0.5716025074141267}, {"determining": "( ( ( Min( PN ,( DDR * ( AMS / Min( ( CRS * DDR ) ,( FirstVNF_RAM_Server / ARS ) ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( DDR / ARS ) * ( ( FirstVNF_Mem - FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( ( RMSe * DS ),Min( Min( ( ( DS - MUR ) + RRSe ) ,( MUR + MLU ) ) ,( RRSe / Min( Max( DS,RMSe ) ,Min( MLU ,Min( MUM ,MUR ) ) ) ) ) ) - ( ( MUM + Max( ( CS + MUR ),( ( CS * MUR ) + CS ) ) ) + ( MUM * RMSe ) ) ) ,( MUM - MUM ) )", "obj1": 0.47808764940239046, "obj2": 0.3704843820046037}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3770016070760884}, {"determining": "( ( MRS / BR ) + ( ARS + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( CS * MUC ) ,( ( CS * ( MUR * MUM ) ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( CS,DS ) / CS ) ) ) ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5521367462724568}, {"determining": "( ( ( ( ACS / ( Min( RRS ,FirstVNF_Mem ) * Min( ( FirstVNF_CPU_Server + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( BR - FirstVNF_Mem_Server ) ) + ( ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( ACS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS + RCSe ) - ( ( DS * RCSe ) + Max( RCSe,DS ) ) ) / ( ( MLU - MUM ) + MUR ) ) / DS ) ) * RRSe ) / CS )", "obj1": 0.3386454183266932, "obj2": 0.5212920590980682}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7111553784860558, "obj2": 0.15191794179637277}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4701195219123506, "obj2": 0.3791835152954171}, {"determining": "( ( BR + FirstVNF_Mem ) + Min( Max( Min( FirstVNF_Mem ,( ACS / Max( Max( FirstVNF_RAM,FirstVNF_CPU ),FirstVNF_CPU ) ) ),MDR ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / RMSe ) ) * Min( MLU ,MLU ) ) / MUM ) / DS ) ) ) / Min( ( RCSe * RMSe ) ,DS ) )", "obj1": 0.16733067729083664, "obj2": 0.7149307235189746}, {"determining": "( ( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) / ( DDR * ( FirstVNF_Mem + BR ) ) ) - DDR ) - FirstVNF_CPU ) + ( ACS * Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / ( CS / MLU ) ) )", "obj1": 0.30278884462151395, "obj2": 0.5579276941464577}, {"determining": "( Max( BR,ACS ) + ( DDR * ( Min( ARS ,FirstVNF_RAM_Server ) + RRS ) ) )", "choosing": "Min( ( MUM - ( MUC * CS ) ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.30876494023904383, "obj2": 0.5540891888097728}, {"determining": "( ( FirstVNF_CPU * ( ACS + FirstVNF_RAM_Server ) ) / ( Max( Min( ( FirstVNF_CPU_Server + ( MDR + BR ) ) ,FirstVNF_CPU_Server ),Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) * CRS ) )", "choosing": "( ( RRSe * ( ( RMSe - ( ( RMSe / ( ( MUC * MUM ) * RMSe ) ) - CS ) ) * ( ( ( Min( RCSe ,DS ) * Max( MLU,( MUR - CS ) ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1752988047808765, "obj2": 0.7130042765718382}, {"determining": "( Max( ( ( RRS / Max( FirstVNF_RAM_Server,MDR ) ) - FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) - ( ( Min( ACS ,DDR ) - Min( PN ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( ( ( FirstVNF_CPU - CRS ) + ACS ),FirstVNF_CPU ) ,PN ) ,PN ) ) ) )", "choosing": "( Max( Min( Min( ( Min( ( RMSe - RRSe ) ,CS ) + MLU ) ,RCSe ) ,( CS + MUM ) ),( ( Max( MUR,( RRSe - MUM ) ) + CS ) * Max( RRSe,Max( ( MUM + MUC ),RCSe ) ) ) ) / ( MUM + Max( CS,DS ) ) )", "obj1": 0.9601593625498008, "obj2": 0.017994743444672907}], "22": [{"determining": "( ( ( ( PN / ( ( FirstVNF_Mem + ARS ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( MRS / MDR ) )", "choosing": "( Max( CS,( MUC + DS ) ) + Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / ( DDR * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Max( FirstVNF_CPU_Server,CRS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( Min( PN ,ACS ) - Min( DDR ,ACS ) ) / ( Min( Min( ACS ,Const ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) - ( ARS * ( FirstVNF_Mem + Min( ( BR - FirstVNF_Mem ) ,( BR * ARS ) ) ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,Min( ( ( ( ( RCSe * ( CS * RCSe ) ) / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.8685258964143426, "obj2": 0.054984794474022984}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( ( Max( CRS,FirstVNF_Mem_Server ) + ( FirstVNF_CPU + BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( CS,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.599601593625498, "obj2": 0.2250157807472341}, {"determining": "( ( ( FirstVNF_CPU - ( PN / ( DDR * ( ( ARS * FirstVNF_CPU_Server ) + RRS ) ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + Min( FirstVNF_RAM ,( AMS * FirstVNF_CPU ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ( FirstVNF_Mem - FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( RMSe ,Max( RRSe,( MUM + RCSe ) ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),Max( RCSe,RCSe ) ) ) + Min( MUM ,MUR ) ) ) )", "obj1": 0.5079681274900398, "obj2": 0.3408769013812399}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) ) / Min( ( RCSe * RMSe ) ,DS ) )", "obj1": 0.7270916334661355, "obj2": 0.13716003339759897}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_Mem ,DDR ) ) * Min( Max( DDR,ACS ) ,FirstVNF_CPU ) ) * Min( Min( ( FirstVNF_Mem - ARS ) ,( AMS * BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( RRSe,( ( ( ( MUC / CS ) * Min( DS ,MUM ) ) * ( ( Max( RMSe,RRSe ) - MUC ) / RCSe ) ) / DS ) ) * ( ( RMSe / ( RCSe / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MLU * CS ) ) + ( ( RCSe * CS ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.749003984063745, "obj2": 0.1124581940753405}, {"determining": "( ( ( DDR - ( ( ( FirstVNF_CPU_Server - MRS ) + RRS ) / ( FirstVNF_CPU_Server * Min( Min( ( CRS * PN ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( RRS - FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( DS / ( MUM + MUC ) ) - RRSe ) - Max( ( RRSe / ( MUR + MUM ) ),( ( DS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe + MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( ( MLU + ( MUC / Min( MUR ,MUC ) ) ) + CS ),( MUC * MUC ) ) )", "obj1": 0.8047808764940239, "obj2": 0.08068917858023049}, {"determining": "( ( Max( Const,BR ) * CRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + RRSe )", "obj1": 0.6733067729083665, "obj2": 0.1735892801540867}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + ( MUM * MUR ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06650790249943811}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - Min( BR ,FirstVNF_RAM ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( Min( ( CS + Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2971544817997995}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5338645418326693, "obj2": 0.2754082422755769}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - ( MUM * MUR ) ),( RMSe - RMSe ) ) ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4701195219123506, "obj2": 0.3601918480045496}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.2562124860131587}, {"determining": "( ( ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) - ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_CPU ) ) ) - DDR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( ( MLU * RRSe ) + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) * ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) ) ) )", "obj1": 0.5856573705179283, "obj2": 0.23434918800446122}, {"determining": "( Min( FirstVNF_CPU_Server ,( AMS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) ) + Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) + CS ) ) + Min( ( CS + ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Max( RRSe,MLU ) * ( CS * MUM ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM - RRSe ) ) + ( RCSe / ( Max( CS,Max( MUM,DS ) ) / MLU ) ) ) - ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3844621513944223, "obj2": 0.44343746999273026}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( Min( ( FirstVNF_Mem + BR ) ,Const ) ,FirstVNF_RAM_Server ) ) * CRS ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe * RMSe ) / ( RRSe * DS ) ) * ( MUR - ( RCSe * RMSe ) ) ) ) / CS )", "obj1": 0.22111553784860558, "obj2": 0.6543324125956602}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.39641434262948205, "obj2": 0.4310350990277014}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,ACS ) - Min( DDR ,ACS ) ) / ( ( AMS / CRS ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) ) ) + Min( DDR ,ARS ) ) + ( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe * MLU ) * ( MLU / DS ) ) ) / ( DS + RCSe ) )", "obj1": 0.8884462151394422, "obj2": 0.050243154090234145}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5139442231075697, "obj2": 0.2901901291772171}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( MRS / MDR ) )", "choosing": "( Max( CS,( MUC + MUC ) ) + Max( MUR,CS ) )", "obj1": 0.6354581673306773, "obj2": 0.19777089357152827}, {"determining": "Min( ( FirstVNF_CPU_Server * RRS ) ,( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( ( FirstVNF_CPU - DDR ),ARS ) ) ,( ACS - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( ( CS + ( MUM + DS ) ) + ( MUC + ( RMSe / MUR ) ) ) / ( CS / CS ) ) + MUM ) + ( ( ( MLU * Min( Min( MLU ,MUM ) ,Max( MUC,RCSe ) ) ) - CS ) * MUR ) ) ) )", "obj1": 0.3665338645418327, "obj2": 0.4751280964737322}, {"determining": "( Min( Min( RRS ,ACS ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU + ( DDR + FirstVNF_RAM_Server ) ) )", "choosing": "( CS / ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( Max( MLU,RRSe ) ,Min( MUR ,MUC ) ) + RRSe ) / MUM ) / RCSe ) ) ) )", "obj1": 0.20119521912350596, "obj2": 0.6645076012460394}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_Mem + ARS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,DS ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - Max( Min( MUM ,MUC ),RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.18381035713514135}, {"determining": "( ( ACS + ( Min( DDR ,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_Mem_Server / Const ) / BR ) * ( FirstVNF_CPU + AMS ) ) ) ) + Min( ACS ,MRS ) )", "choosing": "( ( RRSe * ( ( ( RRSe * ( Min( MUM ,( CS - RMSe ) ) - CS ) ) / RMSe ) * ( DS - RCSe ) ) ) / ( CS / Max( MUM,RCSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7380843293312602}, {"determining": "( ( ( DDR / ( FirstVNF_RAM / DDR ) ) - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server + AMS ) / ( FirstVNF_RAM_Server / ( FirstVNF_Mem - ( ( Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ),AMS ) * FirstVNF_RAM_Server ) + DDR ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe * ( DS + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( RRSe ,MUC ) ) ) ) ) ) ,( ( Max( MUR,( RRSe * MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( CS * MUC ) + MUC ) ) ) + Max( ( CS + ( ( MUR + MUC ) - Max( RMSe,Max( ( MUM * ( MUR * MLU ) ),MUC ) ) ) ),( MUC * MUC ) ) )", "obj1": 0.6354581673306773, "obj2": 0.19777089357152827}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( ACS * ACS ) + ( ( ( MDR - ( ACS * FirstVNF_Mem_Server ) ) / ARS ) / Min( AMS ,( ( ( FirstVNF_CPU + RRS ) + ( ACS - FirstVNF_RAM_Server ) ) + ACS ) ) ) )", "choosing": "Min( ( CS * Max( ( RRSe * MUR ),RMSe ) ) ,( ( RMSe * RRSe ) - ( CS * ( Max( Max( DS,MLU ),( Max( RMSe,CS ) + ( ( DS - DS ) + Max( CS,RMSe ) ) ) ) * CS ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5357735856526976}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( RCSe * CS ),( MUC * MUC ) ) )", "obj1": 0.44621513944223107, "obj2": 0.368030979778416}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( RMSe - Max( ( MUC / RMSe ),Max( RRSe,RMSe ) ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.3596847854317509}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,MDR ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( Min( FirstVNF_RAM_Server ,( ( ( FirstVNF_CPU_Server - AMS ) * FirstVNF_RAM_Server ) / ( FirstVNF_CPU - Const ) ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),Max( ( MUC + MUR ),MUR ) ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + DS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / MUM ) / DS ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.16429834816950442}, {"determining": "( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / DS ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RCSe * RMSe ) ,DS ) )", "obj1": 0.14940239043824702, "obj2": 0.7420392987954237}, {"determining": "( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8010900586499444}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) + Min( ( CRS * ( Max( MDR,MDR ) + ARS ) ) ,DDR ) )", "choosing": "( Min( MLU ,RCSe ) + ( ( Min( Max( DS,RRSe ) ,MLU ) / ( RRSe * Max( MUC,DS ) ) ) + MUR ) )", "obj1": 0.9402390438247012, "obj2": 0.02482510431966823}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) - ( ( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,DDR ) ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( FirstVNF_RAM_Server ,( ( Max( FirstVNF_RAM,AMS ) * AMS ) + RRS ) ) ) ) )", "choosing": "( ( RRSe * ( Max( RRSe,Max( Min( MUM ,MUC ),RCSe ) ) * Max( ( ( RRSe + RCSe ) - Min( RMSe ,RMSe ) ),RMSe ) ) ) / ( MUC / RMSe ) )", "obj1": 0.9023904382470119, "obj2": 0.04319858264982739}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * ( ( Max( MDR,( ( RRS * FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * MRS ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / MUM ) - ( ( MUR * RMSe ) / ( MLU / RMSe ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5225051866233799}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.647410358565737, "obj2": 0.18930484609684192}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_RAM_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( MUC * CS ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.49800796812749004, "obj2": 0.34899616607181433}, {"determining": "( ( ( ( MDR + MRS ) - ( ( ARS / FirstVNF_CPU_Server ) * ( AMS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) + AMS ) - Max( FirstVNF_CPU_Server,BR ) )", "choosing": "Min( Max( RCSe,( DS + MUC ) ) ,( Max( ( MUM / ( MUR + Max( ( RRSe * Min( RMSe ,MLU ) ),CS ) ) ),RRSe ) * MUM ) )", "obj1": 0.9800796812749004, "obj2": 0.007736285462954932}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / Min( RCSe ,Max( ( DS - MLU ),RCSe ) ) ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.41434262948207173, "obj2": 0.4244454926865346}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.7828685258964143, "obj2": 0.0891474300877562}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( Max( CRS,FirstVNF_RAM ) - ( ( BR / FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( ( FirstVNF_CPU_Server + ACS ),( FirstVNF_RAM / FirstVNF_Mem ) ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( ( Min( ( MUM - DS ) ,MLU ) / ( ( ( ( MUM - ( MLU / RRSe ) ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) / MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03713461683870236}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - ( MUM * MUR ) ),( RMSe - RMSe ) ) ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.40165724241651085}, {"determining": "( ( Max( Min( ( ( PN * ( Max( BR,FirstVNF_CPU ) + ( MRS + MRS ) ) ) + ARS ) ,( AMS - DDR ) ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( Max( DS,RMSe ) / ( RMSe / ( RRSe * ( ( MUR + MUM ) * CS ) ) ) ) ) / CS )", "obj1": 0.16533864541832669, "obj2": 0.7172039047370908}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + ( Max( ( Min( MDR ,FirstVNF_RAM ) * FirstVNF_CPU ),FirstVNF_RAM ) * MRS ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6415179762939426}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7171314741035857, "obj2": 0.14445209301912462}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( ( FirstVNF_Mem + Min( ( FirstVNF_Mem - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( DDR / FirstVNF_RAM ) ) / ( FirstVNF_CPU * Min( Max( RRS,( AMS / FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Max( CS,Max( MUC,RMSe ) ) )", "obj1": 0.1752988047808765, "obj2": 0.7108018583387119}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.41832669322709165, "obj2": 0.41995831176196624}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( ( CS + ( MUM + DS ) ) + ( MUC + ( RMSe / MUR ) ) ) / ( CS / CS ) ) + MUM ) + ( ( ( MLU * Min( Min( MLU ,MUM ) ,Max( MUC,RCSe ) ) ) - CS ) * MUR ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06650790249943811}, {"determining": "( Max( Max( ARS,Const ),ACS ) + ( RRS + MRS ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * Min( RMSe ,Min( ( MUC + Max( DS,MUM ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5657803926494337}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + CS ) - Max( RRSe,( ( CS / MUM ) * ( RMSe / MUM ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7689243027888446, "obj2": 0.09760187676756585}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( FirstVNF_Mem + Min( ( RRS - FirstVNF_CPU ) ,( ( Min( CRS ,FirstVNF_Mem_Server ) / ( DDR + FirstVNF_Mem ) ) - Max( BR,( BR / ARS ) ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( RCSe / MUM ),MUC ) * ( RRSe / MLU ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / ( RMSe + DS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.23705179282868527, "obj2": 0.6393395150082117}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) )", "choosing": "( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015219793752598647}, {"determining": "( ( ( ( PN / ( DDR / Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - MRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_RAM_Server ) ) * ( ( Max( Max( FirstVNF_RAM,FirstVNF_CPU ),FirstVNF_CPU ) - ( FirstVNF_RAM_Server + ARS ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( Min( ( RRSe / ( RRSe + MUC ) ) ,RRSe ) - Max( RRSe,( ( CS + MLU ) * Min( MUC ,RRSe ) ) ) ) ) ) ,Min( CS ,( MUM * MLU ) ) ) )", "obj1": 0.9960159362549801, "obj2": 0.0012746339874025617}, {"determining": "( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) - ( ( Min( PN ,ACS ) - Min( ACS ,DDR ) ) / ( ( RRS * MRS ) - Min( Min( Max( ( FirstVNF_CPU_Server + BR ),FirstVNF_CPU ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( RRSe * ( ( ( DS / MUM ) / DS ) * ( ( ( RCSe + RMSe ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9721115537848606, "obj2": 0.01071261762924124}, {"determining": "( Min( FirstVNF_CPU_Server ,( AMS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) ) + Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) + CS ) ) + Min( ( CS + ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Max( RRSe,MLU ) * ( CS * MUM ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM - RRSe ) ) + ( RCSe / ( Max( CS,Max( MUM,DS ) ) / MLU ) ) ) - ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3745019920318725, "obj2": 0.45858960619231165}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( ( MLU - MLU ) / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / CS ) * ( RRSe / MLU ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.40040107520568247}, {"determining": "( ( ( DDR * PN ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + MRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( MLU * ( RCSe - ( ( CS + RMSe ) / RRSe ) ) ) ) ) ) + Min( ( CS * ( DS / ( CS / MLU ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.3645418326693227, "obj2": 0.4907013427470067}, {"determining": "( ( Max( Min( ( ARS + Min( DDR ,FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ),DDR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / Max( RRSe,DS ) ) * ( ( ( Min( ( CS * CS ) ,Min( CS ,MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1254980079681275, "obj2": 0.7624712958089915}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.28286852589641437, "obj2": 0.5716025074141267}, {"determining": "( ( MRS + MRS ) + ( Max( DDR,FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( ( ( ( MUR * ( ( MUR + DS ) / ( MLU * ( RCSe - ( MUM * CS ) ) ) ) ) * ( MUM * Min( ( ( MLU / ( DS * DS ) ) * MUR ) ,MUR ) ) ) - CS ) + Min( Max( Min( Min( DS ,DS ) ,Max( MUR,MUR ) ),DS ) ,Max( Max( Min( ( MLU / RRSe ) ,RMSe ),MLU ),MLU ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6272215552082994}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "( Min( FirstVNF_CPU_Server ,( AMS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) ) + Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) + CS ) ) + Min( ( CS + ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Max( RRSe,MLU ) * ( CS * MUM ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM - RRSe ) ) + ( RCSe / ( Max( CS,Max( MUM,DS ) ) / MLU ) ) ) - ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.43227091633466136, "obj2": 0.38774836598608503}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( MRS - Max( ARS,AMS ) ) * CRS ) )", "choosing": "( ( ( ( ( RRSe + ( MLU * MUR ) ) / ( ( ( ( CS / CS ) * ( MLU - CS ) ) * MUR ) * DS ) ) * ( ( RRSe - MUM ) + RRSe ) ) * RRSe ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7888757897041578}, {"determining": "( ( CRS * Max( Const,BR ) ) / Max( ( BR / MRS ),PN ) )", "choosing": "( ( RRSe * ( Max( RMSe,( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( ( RCSe - MUR ) ,( CS + RMSe ) ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.199203187250996, "obj2": 0.6747917844320955}, {"determining": "( ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) / ( Max( Max( MDR,PN ),BR ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( Max( ( MUC - MUM ),DS ) - ( ( MUM + Max( ( CS * MUR ),( ( CS * MUR ) + CS ) ) ) + ( ( ( RRSe / DS ) * ( ( ( CS * RMSe ) * RRSe ) - ( Max( RMSe,MUR ) / ( RRSe + RMSe ) ) ) ) * MUR ) ) ) ,( MUM - MUM ) )", "obj1": 0.28087649402390436, "obj2": 0.5788256534246077}, {"determining": "( Min( FirstVNF_CPU_Server ,( AMS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) ) + Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) + CS ) ) + Min( ( CS + ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Max( RRSe,MLU ) * ( CS * MUM ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM - RRSe ) ) + ( RCSe / ( Max( CS,Max( MUM,DS ) ) / MLU ) ) ) - ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3745019920318725, "obj2": 0.45858960619231165}, {"determining": "( Min( Max( ( FirstVNF_Mem + ( Min( ( Max( MRS,DDR ) / DDR ) ,FirstVNF_Mem_Server ) * ( DDR / MRS ) ) ),CRS ) ,( RRS + FirstVNF_CPU ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( ( ( RCSe / RCSe ) - MUM ) * RRSe ) / Min( ( RRSe * MLU ) ,DS ) )", "obj1": 0.19322709163346613, "obj2": 0.6797569610945424}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),ARS ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) * Max( CS,( Min( RRSe ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),( RMSe / MUR ) ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) )", "obj1": 0.35258964143426297, "obj2": 0.5083821518185606}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Min( AMS ,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( Max( MUM,( Max( ( MUM + RRSe ),( MUC / MUC ) ) + MUC ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( Max( MUC,MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( RCSe + MLU ) ) ) ) ) + CS ) ) )", "obj1": 0.7808764940239044, "obj2": 0.08981874283050993}, {"determining": "( ( ( ( PN / ( DDR / Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - MRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_RAM_Server ) ) * ( ( Min( FirstVNF_Mem ,ACS ) - ( FirstVNF_RAM_Server + ARS ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( Min( ( RRSe / ( MUR + MUC ) ) ,RRSe ) - Max( RRSe,( ( CS + MLU ) * Min( MUC ,RRSe ) ) ) ) ) ) ,Min( CS ,( MUM * MLU ) ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6317526071052565}, {"determining": "( FirstVNF_Mem + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.49657156682559017}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_CPU + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( FirstVNF_RAM_Server * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( ( DS * RRSe ) ,MLU ) - ( Min( ( ( ( MLU / RRSe ) - MUM ) - ( MUM / ( RRSe * RCSe ) ) ) ,MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.6992031872509961, "obj2": 0.16080185943635017}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Min( ( DS * RRSe ) ,MLU ) / ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.7071713147410359, "obj2": 0.15225076938103102}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / DS ) ) ) + RRSe )", "obj1": 0.5956175298804781, "obj2": 0.22806279446383154}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - CRS ) + ( ( ( PN / Max( DDR,FirstVNF_Mem ) ) - DDR ) - ( FirstVNF_Mem / ( DDR * Min( ( ( ( MDR / PN ) - FirstVNF_CPU ) + Max( DDR,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM + ( ( Min( ( Max( RCSe,MLU ) + RRSe ) ,Max( ( CS - MLU ),RMSe ) ) / RMSe ) - CS ) ) ,( ( ( DS / Min( Max( ( DS - MLU ),RCSe ) ,RCSe ) ) + ( ( CS / MLU ) / MUR ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( Max( ( RRSe / RRSe ),( MLU * DS ) ) ,MLU ) ) ) + CS ) ) )", "obj1": 0.7609561752988048, "obj2": 0.10766315126064974}, {"determining": "( ( Max( BR,( ( ARS + ( CRS - ( Max( BR,ACS ) + ( MRS + PN ) ) ) ) / FirstVNF_CPU_Server ) ) * CRS ) / ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * ( FirstVNF_RAM_Server * MDR ) ) * Min( ( DDR + ( ( AMS / FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,ACS ) ) )", "choosing": "( ( ( MLU * RRSe ) * ( Min( MUC ,( ( ( MLU + CS ) * DS ) * MLU ) ) * ( ( ( Min( ( CS * MLU ) ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1294820717131474, "obj2": 0.754782503769634}, {"determining": "( Max( BR,MRS ) + ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - ( DS / ( CS / ( ( ( MUC * MUM ) + ( ( Min( DS ,RMSe ) * MUR ) - ( Min( MUR ,CS ) - RMSe ) ) ) - Min( DS ,Min( ( MLU - ( RCSe + MUR ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5889308446954941}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4362549800796813, "obj2": 0.38307209213042365}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( ( ( ( ( Max( Const,BR ) * CRS ) - FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) - Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) * CRS ) / ( FirstVNF_CPU * Min( Min( ( ( DDR - CRS ) * ARS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,Min( RRS ,RRS ) ) ) )", "choosing": "( Min( Max( Min( RMSe ,( MUM / Min( Max( RRSe,( MUR / MUC ) ) ,MUM ) ) ),MLU ) ,RRSe ) / Min( Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,Max( MUM,MUM ) ) ,( Min( RCSe ,( MLU - Min( RRSe ,RCSe ) ) ) * Min( RMSe ,Min( MLU ,CS ) ) ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7908951734942623}, {"determining": "( ( ( ( PN / ( ( ACS * AMS ) * ( Min( ( FirstVNF_Mem * Const ) ,RRS ) * RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_Mem + Const ) * Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - PN ) ) ) )", "choosing": "Min( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) * Max( CS,( Min( MUM ,MUM ) * DS ) ) ) ,( RMSe - ( ( ( Max( ( Max( RMSe,RCSe ) * ( MUM + MUR ) ),MUR ) * RMSe ) - ( ( MUC - RCSe ) - Min( DS ,Min( Min( RRSe ,RMSe ) ,RRSe ) ) ) ) + CS ) ) )", "obj1": 0.3426294820717131, "obj2": 0.5167606391735924}, {"determining": "( Min( FirstVNF_RAM ,CRS ) + Max( ( ( DDR / RRS ) / Min( FirstVNF_Mem ,PN ) ),FirstVNF_RAM ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( MUR * RCSe ) / RRSe ) / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( RMSe - ( RMSe + ( ( Max( MUC,CS ) / MUR ) - Max( ( ( CS - MUR ) * CS ),( ( CS * DS ) * DS ) ) ) ) ) ,( ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),Min( ( RRSe / MUC ) ,( CS / MUM ) ) ) ) ) * CS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5090781083032475}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_RAM_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( Const / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + Min( RRSe ,RCSe ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.952191235059761, "obj2": 0.022276013079281932}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( RCSe * CS ),( MUC * MUC ) ) )", "obj1": 0.44621513944223107, "obj2": 0.368030979778416}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7111553784860558, "obj2": 0.15191794179637277}, {"determining": "( ( Max( Min( ARS ,CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( Min( ( ( RCSe / MUC ) + RCSe ) ,( RCSe * ( ( RCSe - MLU ) / MUR ) ) ) + CS ) ) ) / CS )", "obj1": 0.18326693227091634, "obj2": 0.6897589377809513}, {"determining": "( ( MRS / BR ) + ( ARS + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( CS * MUC ) ,( ( CS * ( MUR * MUM ) ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( CS,DS ) / CS ) ) ) ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5521367462724568}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.549800796812749, "obj2": 0.2597297141186364}, {"determining": "( ( BR + FirstVNF_Mem ) + Min( Max( Min( FirstVNF_Mem ,( ACS / Max( Max( FirstVNF_RAM,FirstVNF_CPU ),FirstVNF_CPU ) ) ),MDR ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / RMSe ) ) * Min( MLU ,MLU ) ) / MUM ) / DS ) ) ) / Min( ( RCSe * RMSe ) ,DS ) )", "obj1": 0.16733067729083664, "obj2": 0.7149307235189746}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( FirstVNF_RAM_Server,ARS ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ACS ,FirstVNF_Mem ) ) + ( ( ( FirstVNF_Mem + Min( ARS ,( ( MRS + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( Max( MLU,MLU ) + ( MUM - DS ) ),( MUR / ( ( CS * RCSe ) - ( CS * ( MUR * MLU ) ) ) ) ) + ( ( ( ( DS * ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) )", "obj1": 0.3605577689243028, "obj2": 0.4944877297071132}], "23": [{"determining": "( PN - ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) + ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Min( Min( ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + ( ( MUM - RCSe ) - Max( CS,Min( ( CS + Max( MUR,RRSe ) ) ,CS ) ) ) ) ,( RCSe - ( ( ( RCSe - RRSe ) + ( RMSe - DS ) ) + ( MUC * MUR ) ) ) ) ,( MLU - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / ( ( FirstVNF_Mem + ARS ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( MRS / MDR ) )", "choosing": "( Max( CS,( MUC + DS ) ) + Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ( BR / MRS ) / Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( Max( AMS,( FirstVNF_RAM - Min( ( MRS + ( Max( AMS,FirstVNF_Mem ) + FirstVNF_RAM ) ) ,( AMS + FirstVNF_CPU_Server ) ) ) ) + MDR ) )", "choosing": "( Max( CS,( MUC * MUC ) ) + ( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) / ( RMSe + MUR ) ) )", "obj1": 0.6294820717131474, "obj2": 0.2130329152271694}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( Max( Const,BR ) * CRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + RRSe )", "obj1": 0.6733067729083665, "obj2": 0.1735892801540867}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + ( MUM * MUR ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06630501652956762}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - Min( BR ,FirstVNF_RAM ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( Min( ( CS + Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2971544817997995}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5338645418326693, "obj2": 0.2754082422755769}, {"determining": "( ( ( FirstVNF_CPU - ( PN / ( DDR * ( ( ARS * FirstVNF_CPU_Server ) + RRS ) ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + Min( FirstVNF_RAM ,( AMS * FirstVNF_CPU ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ( FirstVNF_Mem - FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( RMSe ,Max( RRSe,( MUM + RCSe ) ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),Max( RCSe,RCSe ) ) ) + Min( MUM ,MUR ) ) ) )", "obj1": 0.5079681274900398, "obj2": 0.3408769013812399}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - ( MUM * MUR ) ),( RMSe - RMSe ) ) ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4701195219123506, "obj2": 0.3601918480045496}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( Min( ( FirstVNF_Mem + BR ) ,Const ) ,FirstVNF_RAM_Server ) ) * CRS ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe * RMSe ) / ( RRSe * DS ) ) * ( MUR - ( RCSe * RMSe ) ) ) ) / CS )", "obj1": 0.22111553784860558, "obj2": 0.6543324125956602}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( BR + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_CPU + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) / Min( RCSe ,DS ) )", "obj1": 0.7470119521912351, "obj2": 0.13429909396190004}, {"determining": "( ( ACS + ( Min( DDR ,FirstVNF_RAM_Server ) / ( ( ( FirstVNF_Mem_Server / Const ) / BR ) * ( FirstVNF_CPU + AMS ) ) ) ) + Min( ACS ,MRS ) )", "choosing": "( ( RRSe * ( ( ( RRSe * ( Min( MUM ,( CS - RMSe ) ) - CS ) ) / RMSe ) * ( DS - RCSe ) ) ) / ( CS / Max( MUM,RCSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7380843293312602}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.8685258964143426, "obj2": 0.054984794474022984}, {"determining": "( Min( FirstVNF_CPU_Server ,( AMS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) ) + Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) + CS ) ) + Min( ( CS + ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Max( RRSe,MLU ) * ( CS * MUM ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM - RRSe ) ) + ( RCSe / ( Max( CS,Max( MUM,DS ) ) / MLU ) ) ) - ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3844621513944223, "obj2": 0.44343746999273026}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5139442231075697, "obj2": 0.2901901291772171}, {"determining": "Min( ( FirstVNF_CPU_Server * RRS ) ,( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( ( FirstVNF_CPU - DDR ),ARS ) ) ,( ACS - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( ( CS + ( MUM + DS ) ) + ( MUC + ( RMSe / MUR ) ) ) / ( CS / CS ) ) + MUM ) + ( ( ( MLU * Min( Min( MLU ,MUM ) ,Max( MUC,RCSe ) ) ) - CS ) * MUR ) ) ) )", "obj1": 0.3665338645418327, "obj2": 0.4751280964737322}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( ( CRS * ( ( Max( MDR,( ( RRS * FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * Min( ( Max( FirstVNF_RAM_Server,RRS ) * MRS ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / MUM ) - ( ( MUR * RMSe ) / ( MLU / RMSe ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5225051866233799}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_Mem ,DDR ) ) * Min( Max( DDR,ACS ) ,FirstVNF_CPU ) ) * Min( Min( ( FirstVNF_Mem - ARS ) ,( AMS * BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( RRSe,( ( ( ( MUC / CS ) * Min( DS ,MUM ) ) * ( ( Max( RMSe,RRSe ) - MUC ) / RCSe ) ) / DS ) ) * ( ( RMSe / ( RCSe / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MLU * CS ) ) + ( ( RCSe * CS ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.749003984063745, "obj2": 0.1124581940753405}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( ( ACS * ACS ) + ( ( ( MDR - ( ACS * FirstVNF_Mem_Server ) ) / ARS ) / Min( AMS ,( ( ( FirstVNF_CPU + RRS ) + ( ACS - FirstVNF_RAM_Server ) ) + ACS ) ) ) )", "choosing": "Min( ( CS * Max( ( RRSe * MUR ),RMSe ) ) ,( ( RMSe * RRSe ) - ( CS * ( Max( Max( DS,MLU ),( Max( RMSe,CS ) + ( ( DS - DS ) + Max( CS,RMSe ) ) ) ) * CS ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5357735856526976}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,MDR ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( Min( FirstVNF_RAM_Server ,( ( ( FirstVNF_CPU_Server - AMS ) * FirstVNF_RAM_Server ) / ( FirstVNF_CPU - Const ) ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),Max( ( MUC + MUR ),MUR ) ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + DS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / MUM ) / DS ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.16429834816950442}, {"determining": "( ( ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) - ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_CPU ) ) ) - DDR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( ( MLU * RRSe ) + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) * ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) ) ) )", "obj1": 0.5856573705179283, "obj2": 0.23434918800446122}, {"determining": "( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / DS ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RCSe * RMSe ) ,DS ) )", "obj1": 0.14940239043824702, "obj2": 0.7420392987954237}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + RRSe ) - Max( RRSe,( ( CS / MUM ) * ( RMSe / MUM ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7689243027888446, "obj2": 0.09662272150145818}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( Const / ARS ) ) * ( Max( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / DDR ) ) - ( AMS / AMS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) / Min( RCSe ,Max( ( DS - MLU ),RCSe ) ) ) - ( ( Max( Max( MUC,DS ),( MLU / MUM ) ) - RCSe ) - Min( MUC ,MLU ) ) ) + CS ) ) + Min( ( CS * ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Min( MUC ,RRSe ) * ( MLU + CS ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUC ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / ( ( ( DS / RRSe ) - ( MUR / MLU ) ) * MUC ) ) / DS ) ) ) )", "obj1": 0.8944223107569721, "obj2": 0.04262469879892163}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - CRS ) + ( ( ( PN / Max( DDR,FirstVNF_Mem ) ) - DDR ) - ( FirstVNF_Mem / ( DDR * Min( ( ( ( MDR / PN ) - FirstVNF_CPU ) + Max( DDR,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM + ( ( Min( ( Max( RCSe,MLU ) + RRSe ) ,Max( ( CS - MLU ),RMSe ) ) / RMSe ) - CS ) ) ,( ( ( DS / Min( Max( ( DS - MLU ),RCSe ) ,RCSe ) ) + ( ( CS / MLU ) / MUR ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( Max( ( RRSe / RRSe ),( MLU * DS ) ) ,MLU ) ) ) + CS ) ) )", "obj1": 0.7609561752988048, "obj2": 0.10766315126064974}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,ACS ) - Min( DDR ,ACS ) ) / ( ( AMS / CRS ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) ) ) + Min( DDR ,ARS ) ) + ( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe * MLU ) * ( MLU / DS ) ) ) / ( DS + RCSe ) )", "obj1": 0.8884462151394422, "obj2": 0.050243154090234145}, {"determining": "( ( ( DDR - ( ( ( FirstVNF_CPU_Server - MRS ) + RRS ) / ( FirstVNF_CPU_Server * Min( Min( ( CRS * PN ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( RRS - FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( DS / ( MUM + MUC ) ) - RRSe ) - Max( ( RRSe / ( MUR + MUM ) ),( ( DS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe + MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( ( MLU + ( MUC / Min( MUR ,MUC ) ) ) + CS ),( MUC * MUC ) ) )", "obj1": 0.8047808764940239, "obj2": 0.08068917858023049}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_RAM_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_CPU * RRS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( MUC ,MUC ) ,( RCSe - ( ( MUM + ( MUC * CS ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.5059760956175299, "obj2": 0.3450057849648161}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( RCSe * CS ),( MUC * MUC ) ) )", "obj1": 0.47808764940239046, "obj2": 0.34576043549770047}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( ( Max( ARS,FirstVNF_Mem_Server ) + ( FirstVNF_CPU + BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * RRSe ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( CS,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.599601593625498, "obj2": 0.22501578074723405}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_Mem + ARS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,DS ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - Max( Min( MUM ,MUC ),RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.18381035713514135}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + ( Max( ( Min( MDR ,FirstVNF_RAM ) * FirstVNF_CPU ),FirstVNF_RAM ) * MRS ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6415179762939426}, {"determining": "( ( Max( Min( ARS ,CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( Min( ( ( RCSe / MUC ) + RCSe ) ,( RCSe * ( ( RCSe - MLU ) / MUR ) ) ) + CS ) ) ) / CS )", "obj1": 0.18326693227091634, "obj2": 0.6897589377809513}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( MRS / BR ) + ( ARS + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( CS * MUC ) ,( ( CS * ( MUR * MUM ) ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( CS,DS ) / CS ) ) ) ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5521367462724568}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.20119521912350596, "obj2": 0.6644567269549355}, {"determining": "( ( ( ( ( FirstVNF_CPU + ACS ) / ( FirstVNF_CPU_Server * Min( Min( ARS ,Max( AMS,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( Max( RRSe,( ( DS + CS ) * Min( MUC ,RRSe ) ) ) - ( ( RRSe / ( MUM + MUC ) ) - RRSe ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * Min( ( ( MUM / RRSe ) - Max( MUM,( CS * ( DS - MUC ) ) ) ) ,MUC ) ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MUM + MUM ) ) ) ) ) + CS ) ) )", "obj1": 0.7948207171314741, "obj2": 0.08814886152697994}, {"determining": "( Max( CRS,FirstVNF_RAM ) - ( ( BR / FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( ( FirstVNF_CPU_Server + ACS ),( FirstVNF_RAM / FirstVNF_Mem ) ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( ( Min( ( MUM - DS ) ,MLU ) / ( ( ( ( MUM - ( MLU / RRSe ) ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) / MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03713461683870236}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( Min( AMS ,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( Min( MUC ,MUC ),CS ) + Min( ( CS * ( RCSe * ( ( DS / Min( RRSe ,( MUM * MUR ) ) ) * MUM ) ) ) ,( ( ( MLU - CS ) + Max( MUR,( MUC - MUM ) ) ) * ( ( RRSe * CS ) / DS ) ) ) )", "obj1": 0.5756972111553785, "obj2": 0.2460415935975065}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( MUM / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.40479366875772504}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( ( MUR * MUC ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( ( MLU - MLU ) / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS / CS ) * ( RRSe / MLU ) ) ) ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.40040107520568247}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) ) / Min( ( RCSe * RMSe ) ,DS ) )", "obj1": 0.7270916334661355, "obj2": 0.13716003339759897}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / Max( AMS,BR ) ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MLU ) / MUR ) / DS ) ) ) + Max( ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.40836653386454186, "obj2": 0.41812312098891324}, {"determining": "( Min( FirstVNF_CPU_Server ,( AMS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) ) + Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) + CS ) ) + Min( ( CS + ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Max( RRSe,MLU ) * ( CS * MUM ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM - RRSe ) ) + ( RCSe / ( Max( CS,Max( MUM,DS ) ) / MLU ) ) ) - ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3745019920318725, "obj2": 0.45858960619231165}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4362549800796813, "obj2": 0.38307209213042365}, {"determining": "( ( ( DDR * PN ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + MRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( MLU * ( RCSe - ( ( CS + RMSe ) / RRSe ) ) ) ) ) ) + Min( ( CS * ( DS / ( CS / MLU ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.3645418326693227, "obj2": 0.4907013427470067}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7171314741035857, "obj2": 0.14445209301912462}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( Min( ARS ,FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,BR ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.8167330677290837, "obj2": 0.07535711916890597}, {"determining": "( Min( Max( ( FirstVNF_Mem + ( Min( ( Max( MRS,DDR ) / DDR ) ,FirstVNF_Mem_Server ) * ( DDR / MRS ) ) ),CRS ) ,( RRS + FirstVNF_CPU ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( ( ( RCSe / RCSe ) - MUM ) * RRSe ) / Min( ( RRSe * MLU ) ,DS ) )", "obj1": 0.19322709163346613, "obj2": 0.6797569610945424}, {"determining": "( FirstVNF_Mem + ( ( ( FirstVNF_Mem + ARS ) / Max( ARS,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3386454183266932, "obj2": 0.513719102582011}, {"determining": "( ( Max( Min( ( ARS + Min( DDR ,FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ),DDR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / Max( RRSe,DS ) ) * ( ( ( Min( ( CS * CS ) ,Min( CS ,MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1254980079681275, "obj2": 0.7624712958089915}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ( FirstVNF_RAM_Server + MDR ) / ( FirstVNF_Mem + ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / ACS ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( MUM + RRSe ) - Max( RRSe,( ( MLU / CS ) * Min( DS ,RRSe ) ) ) ) ) ) ,( ( Max( ( MUC * CS ),( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( RCSe * CS ),( ( DS / RMSe ) * MUC ) ) )", "obj1": 0.44223107569721115, "obj2": 0.3694104158059036}, {"determining": "( Min( FirstVNF_RAM ,CRS ) + Max( ( ( DDR / RRS ) / Min( FirstVNF_Mem ,PN ) ),FirstVNF_RAM ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( MUR * RCSe ) / RRSe ) / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( RMSe - ( RMSe + ( ( Max( MUC,CS ) / MUR ) - Max( ( ( CS - MUR ) * CS ),( ( CS * DS ) * DS ) ) ) ) ) ,( ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),Min( ( RRSe / MUC ) ,( CS / MUM ) ) ) ) ) * CS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5090781083032475}, {"determining": "( ( MRS + MRS ) + ( Max( DDR,FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( ( ( ( MUR * ( ( MUR + DS ) / ( MLU * ( RCSe - ( MUM * CS ) ) ) ) ) * ( MUM * Min( ( ( MLU / ( DS * DS ) ) * MUR ) ,MUR ) ) ) - CS ) + Min( Max( Min( Min( DS ,DS ) ,Max( MUR,MUR ) ),DS ) ,Max( Max( Min( ( MLU / RRSe ) ,RMSe ),MLU ),MLU ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6272215552082994}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( DDR / ( RRS + FirstVNF_CPU ) ) ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / Min( RCSe ,Max( ( DS - MLU ),RCSe ) ) ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) * MUM ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( ( MUR + RMSe ) / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.39243027888446214, "obj2": 0.4329687159419511}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( RCSe * CS ),( MUC * MUC ) ) )", "obj1": 0.44621513944223107, "obj2": 0.368030979778416}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( Min( FirstVNF_Mem_Server ,DDR ) ,ARS ) ) * ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( PN + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( Min( RRSe ,CS ) / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8705179282868526, "obj2": 0.054067232895682875}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.43227091633466136, "obj2": 0.3859432266057935}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( MRS - Max( ARS,AMS ) ) * CRS ) )", "choosing": "( ( ( ( ( RRSe + ( MLU * MUR ) ) / ( ( ( ( CS / CS ) * ( MLU - CS ) ) * MUR ) * DS ) ) * ( ( RRSe - MUM ) + RRSe ) ) * RRSe ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7888757897041578}, {"determining": "( ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) / ( Max( Max( MDR,PN ),BR ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( Max( ( MUC - MUM ),DS ) - ( ( MUM + Max( ( CS * MUR ),( ( CS * MUR ) + CS ) ) ) + ( ( ( RRSe / DS ) * ( ( ( CS * RMSe ) * RRSe ) - ( Max( RMSe,MUR ) / ( RRSe + RMSe ) ) ) ) * MUR ) ) ) ,( MUM - MUM ) )", "obj1": 0.28087649402390436, "obj2": 0.5788256534246077}, {"determining": "( Min( FirstVNF_CPU_Server ,( AMS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) ) + Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) + CS ) ) + Min( ( CS + ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Max( RRSe,MLU ) * ( CS * MUM ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM - RRSe ) ) + ( RCSe / ( Max( CS,Max( MUM,DS ) ) / MLU ) ) ) - ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3745019920318725, "obj2": 0.45858960619231165}, {"determining": "( ( DDR * ARS ) + ( ( PN / ( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_RAM_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) )", "choosing": "( Max( ( MUC * Min( RCSe ,( RMSe - RRSe ) ) ),CS ) + ( ( ( Min( ( ( ( MLU / RRSe ) - RRSe ) + Max( Max( MLU,MLU ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) / Min( ( DS * RRSe ) ,MLU ) ) + MUR ) )", "obj1": 0.9322709163346613, "obj2": 0.02808028582759954}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / DS ) ) ) + RRSe )", "obj1": 0.5956175298804781, "obj2": 0.22806279446383154}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + Min( ACS ,Const ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4760956175298805, "obj2": 0.3482476326492675}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( ( CS * RCSe ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( CS,DS ) + CS ) ) ) ) ) )", "obj1": 0.34860557768924305, "obj2": 0.4988195079425182}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_CPU + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Min( ( DS * RRSe ) ,MLU ) / ( Min( ( ( ( MLU / RRSe ) - MUM ) - ( MUM / CS ) ) ,MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.6992031872509961, "obj2": 0.16074418970757548}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Min( AMS ,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( Max( MUM,( Max( ( MUM + RRSe ),( MUC / MUC ) ) + MUC ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( Max( MUC,MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( RCSe + MLU ) ) ) ) ) + CS ) ) )", "obj1": 0.7808764940239044, "obj2": 0.08981874283050993}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Min( ( DS * RRSe ) ,MLU ) / ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.7071713147410359, "obj2": 0.15225076938103102}, {"determining": "( Max( Max( ARS,Const ),ACS ) + ( RRS + MRS ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * Min( RMSe ,Min( ( MUC + Max( DS,MUM ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5657803926494337}, {"determining": "( ( Max( BR,( ( ARS + ( CRS - ( Max( BR,ACS ) + ( MRS + PN ) ) ) ) / FirstVNF_CPU_Server ) ) * CRS ) / ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * ( FirstVNF_RAM_Server * MDR ) ) * Min( ( DDR + ( ( AMS / FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,ACS ) ) )", "choosing": "( ( ( MLU * RRSe ) * ( Min( MUC ,( ( ( MLU + CS ) * DS ) * MLU ) ) * ( ( ( Min( ( CS * MLU ) ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1294820717131474, "obj2": 0.754782503769634}, {"determining": "( Max( BR,MRS ) + ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - ( DS / ( CS / ( ( ( MUC * MUM ) + ( ( Min( DS ,RMSe ) * MUR ) - ( Min( MUR ,CS ) - RMSe ) ) ) - Min( DS ,Min( ( MLU - ( RCSe + MUR ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5889308446954941}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - ( MUM * MUR ) ),( RMSe - RMSe ) ) ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.40165724241651085}, {"determining": "( ( FirstVNF_Mem + Min( ( RRS - FirstVNF_CPU ) ,( ( Min( CRS ,FirstVNF_Mem_Server ) / ( DDR + FirstVNF_Mem ) ) - Max( BR,( BR / ARS ) ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( RCSe / MUM ),MUC ) * ( RRSe / MLU ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / ( RMSe + DS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.23705179282868527, "obj2": 0.6393395150082117}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) + Min( ( CRS * ( Max( MDR,MDR ) + ARS ) ) ,DDR ) )", "choosing": "( Min( MLU ,RCSe ) + ( ( Min( Max( DS,RRSe ) ,MLU ) / ( RRSe * Max( MUC,DS ) ) ) + MUR ) )", "obj1": 0.9402390438247012, "obj2": 0.02482510431966823}, {"determining": "( ( CRS * Max( Const,BR ) ) / Max( ( BR / MRS ),PN ) )", "choosing": "( ( RRSe * ( Max( RMSe,( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( ( RCSe - MUR ) ,( CS + RMSe ) ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.199203187250996, "obj2": 0.6747917844320955}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.28286852589641437, "obj2": 0.5716025074141267}, {"determining": "( ( ( ( ( ( Max( Const,BR ) * CRS ) - FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) - Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) * CRS ) / ( FirstVNF_CPU * Min( Min( ( ( DDR - CRS ) * ARS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,Min( RRS ,RRS ) ) ) )", "choosing": "( Min( Max( Min( RMSe ,( MUM / Min( Max( RRSe,( MUR / MUC ) ) ,MUM ) ) ),MLU ) ,RRSe ) / Min( Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,Max( MUM,MUM ) ) ,( Min( RCSe ,( MLU - Min( RRSe ,RCSe ) ) ) * Min( RMSe ,Min( MLU ,CS ) ) ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7908951734942623}, {"determining": "( ( ( DDR / ( FirstVNF_RAM / DDR ) ) - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server + AMS ) / ( FirstVNF_RAM_Server / ( FirstVNF_Mem - ( ( Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ),AMS ) * FirstVNF_RAM_Server ) + DDR ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe * ( DS + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( RRSe ,MUC ) ) ) ) ) ) ,( ( Max( MUR,( RRSe * MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( CS * MUC ) + MUC ) ) ) + Max( ( CS + ( ( MUR + MUC ) - Max( RMSe,Max( ( MUM * ( MUR * MLU ) ),MUC ) ) ) ),( MUC * MUC ) ) )", "obj1": 0.6354581673306773, "obj2": 0.19777089357152827}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( Max( AMS,( Max( Const,BR ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.398406374501992, "obj2": 0.42547730511161375}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server - PN ) / Max( ACS,AMS ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Min( RCSe ,Max( ( DS - MLU ),RCSe ) ) / DS ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( RRSe - ( RCSe * ( DS + CS ) ) ) ) + ( DS / Max( CS,MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6454183266932271, "obj2": 0.19340270903636383}, {"determining": "( ( ( ( PN / ( DDR / Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - MRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_RAM_Server ) ) * ( ( Max( Max( FirstVNF_RAM,FirstVNF_CPU ),FirstVNF_CPU ) - ( FirstVNF_RAM_Server + ARS ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9880478087649402, "obj2": 0.004046347008945229}, {"determining": "( ( FirstVNF_CPU_Server * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - MDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) + MUR ) / DS ) ) ) + Max( Max( ( MUM + MUM ),MUC ),( MUC * MUC ) ) )", "obj1": 0.4063745019920319, "obj2": 0.4231801590998816}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + ( MUM * MUR ) ) ) )", "obj1": 0.7231075697211156, "obj2": 0.13812871229038634}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.2562124860131587}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_RAM_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( Const / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUC ,Min( ( ( ( CS * Min( ( RRSe / MUM ) ,MUR ) ) * MUC ) + CS ) ,Max( ( ( RRSe - MUM ) / MUC ),MUC ) ) ) - ( DS / ( CS / MLU ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03603269936352351}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( ( ( FirstVNF_CPU + BR ) + Max( CRS,FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MDR + Min( PN ,AMS ) ) * AMS ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MUR + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( ( CS - RCSe ),( DS - DS ) ) ) ) ) + CS ) ) )", "obj1": 0.599601593625498, "obj2": 0.22501578074723405}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( Min( AMS ,( DDR - ARS ) ) / ( ( ACS * AMS ) * ( Min( ( FirstVNF_Mem * Const ) ,RRS ) * RRS ) ) ) ) + Max( ( ( BR / Const ) / Const ),AMS ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RMSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUR ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( RMSe + RCSe ) / MUR ) / CS ) ) ) + Max( ( ( Min( Min( ( ( MLU / RRSe ) - MUM ) ,Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * ( ( RCSe + Min( ( ( CS * MLU ) * CS ) ,( MUM - RRSe ) ) ) / RMSe ) ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24723257559049175}], "24": [{"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_RAM + ARS ) / ( FirstVNF_RAM_Server * ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_CPU - BR ) + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server - Max( RRS,( FirstVNF_CPU / Min( FirstVNF_CPU ,MRS ) ) ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS / ( DS / CS ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( MUR * MUR ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) + ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Min( Min( ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + ( ( MUM - RCSe ) - Max( CS,Min( ( CS + Max( MUR,RRSe ) ) ,CS ) ) ) ) ,( RCSe - ( ( ( RCSe - RRSe ) + ( RMSe - DS ) ) + ( MUC * MUR ) ) ) ) ,( MLU - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.46613545816733065, "obj2": 0.33741629310632343}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( DS / ( CS / MLU ) ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + ( MUM * MUR ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.32892893587648425}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + ( MUM * MUR ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06630501652956762}, {"determining": "( ( Max( Const,BR ) * CRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + RRSe )", "obj1": 0.6733067729083665, "obj2": 0.1735892801540867}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - Min( BR ,FirstVNF_RAM ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( Min( ( CS + Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2971544817997995}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.8685258964143426, "obj2": 0.054984794474022984}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( RCSe * CS ),( MUC * MUC ) ) )", "obj1": 0.44621513944223107, "obj2": 0.368030979778416}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe * DS ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ),( MUC * MUC ) ) )", "obj1": 0.4243027888446215, "obj2": 0.3790989403785338}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_Mem ,DDR ) ) * Min( Max( DDR,ACS ) ,FirstVNF_CPU ) ) * Min( Min( ( FirstVNF_Mem - ARS ) ,( AMS * BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( RRSe,( ( ( ( MUC / CS ) * Min( DS ,MUM ) ) * ( ( Max( RMSe,RRSe ) - MUC ) / RCSe ) ) / DS ) ) * ( ( RMSe / ( RCSe / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MLU * CS ) ) + ( ( RCSe * CS ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.749003984063745, "obj2": 0.1124581940753405}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_Mem + ARS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,DS ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - Max( Min( MUM ,MUC ),RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.18381035713514135}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.1269690469071632}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "Min( ( FirstVNF_CPU_Server * RRS ) ,( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( ( FirstVNF_CPU - DDR ),ARS ) ) ,( ACS - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( ( CS + ( MUM + DS ) ) + ( MUC + ( RMSe / MUR ) ) ) / ( CS / CS ) ) + MUM ) + ( ( ( MLU * Min( Min( MLU ,MUM ) ,Max( MUC,RCSe ) ) ) - CS ) * MUR ) ) ) )", "obj1": 0.3665338645418327, "obj2": 0.4751280964737322}, {"determining": "( FirstVNF_Mem + ( ( ( FirstVNF_Mem + ARS ) / Max( ARS,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / DS ) ) ) + RRSe )", "obj1": 0.33266932270916333, "obj2": 0.5211464912066245}, {"determining": "( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / DS ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RCSe * RMSe ) ,DS ) )", "obj1": 0.14940239043824702, "obj2": 0.7420392987954237}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( ACS * ACS ) + ( ( ( MDR - ( ACS * FirstVNF_Mem_Server ) ) / ARS ) / Min( AMS ,( ( ( FirstVNF_CPU + RRS ) + ( ACS - FirstVNF_RAM_Server ) ) + ACS ) ) ) )", "choosing": "Min( ( CS * Max( ( RRSe * MUR ),RMSe ) ) ,( ( RMSe * RRSe ) - ( CS * ( Max( Max( DS,MLU ),( Max( RMSe,CS ) + ( ( DS - DS ) + Max( CS,RMSe ) ) ) ) * CS ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5357735856526976}, {"determining": "( ( MRS + MRS ) + ( Max( DDR,FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( ( ( ( MUR * ( ( MUR + DS ) / ( MLU * ( RCSe - ( MUM * CS ) ) ) ) ) * ( MUM * Min( ( ( MLU / ( DS * DS ) ) * MUR ) ,MUR ) ) ) - CS ) + Min( Max( Min( Min( DS ,DS ) ,Max( MUR,MUR ) ),DS ) ,Max( Max( Min( ( MLU / RRSe ) ,RMSe ),MLU ),MLU ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6272215552082994}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,MDR ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( Min( FirstVNF_RAM_Server ,( ( ( FirstVNF_CPU_Server - AMS ) * FirstVNF_RAM_Server ) / ( FirstVNF_CPU - Const ) ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),Max( ( MUC + MUR ),MUR ) ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + DS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / MUM ) / DS ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.16429834816950442}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( Max( AMS,( Max( Const,BR ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( ( ( MLU + CS ) * Min( MUC ,RRSe ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.38247011952191234, "obj2": 0.44240460663727377}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( CS + RRSe ) - Max( RRSe,( ( CS / MUM ) * ( RMSe / MUM ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7689243027888446, "obj2": 0.09662272150145818}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( Const / ARS ) ) * ( Max( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / DDR ) ) - ( AMS / AMS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) / Min( RCSe ,Max( ( DS - MLU ),RCSe ) ) ) - ( ( Max( Max( MUC,DS ),( MLU / MUM ) ) - RCSe ) - Min( MUC ,MLU ) ) ) + CS ) ) + Min( ( CS * ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Min( MUC ,RRSe ) * ( MLU + CS ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUC ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / ( ( ( DS / RRSe ) - ( MUR / MLU ) ) * MUC ) ) / DS ) ) ) )", "obj1": 0.8944223107569721, "obj2": 0.04262469879892163}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ( PN / ( DDR * ( Min( ARS ,FirstVNF_CPU ) + RRS ) ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - ( MUM * MUR ) ),( RMSe - RMSe ) ) ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.40165724241651085}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.20119521912350596, "obj2": 0.6644567269549355}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - CRS ) + ( ( ( PN / Max( DDR,FirstVNF_Mem ) ) - DDR ) - ( FirstVNF_Mem / ( DDR * Min( ( ( ( MDR / PN ) - FirstVNF_CPU ) + Max( DDR,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM + ( ( Min( ( Max( RCSe,MLU ) + RRSe ) ,Max( ( CS - MLU ),RMSe ) ) / RMSe ) - CS ) ) ,( ( ( DS / Min( Max( ( DS - MLU ),RCSe ) ,RCSe ) ) + ( ( CS / MLU ) / MUR ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( Max( ( RRSe / RRSe ),( MLU * DS ) ) ,MLU ) ) ) + CS ) ) )", "obj1": 0.7609561752988048, "obj2": 0.10766315126064974}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,ACS ) - Min( DDR ,ACS ) ) / ( ( AMS / CRS ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM - RRS ) * ACS ) ) ) ) + Min( DDR ,ARS ) ) + ( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe * MLU ) * ( MLU / DS ) ) ) / ( DS + RCSe ) )", "obj1": 0.8884462151394422, "obj2": 0.050243154090234145}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5139442231075697, "obj2": 0.2901901291772171}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,Min( ACS ,MDR ) ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( RRSe - MUM ) - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5258964143426295, "obj2": 0.2766061127379034}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server / Const ) / BR ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( DS / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / MUM ) / DS ) ) ) )", "obj1": 0.703187250996016, "obj2": 0.15101123216035273}, {"determining": "( ( FirstVNF_Mem + Min( ( RRS - FirstVNF_CPU ) ,( ( Min( CRS ,FirstVNF_Mem_Server ) / ( DDR + FirstVNF_Mem ) ) - Max( BR,( BR / ARS ) ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( RCSe / MUM ),MUC ) * ( RRSe / MLU ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / ( RMSe + DS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.23705179282868527, "obj2": 0.6393395150082117}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server - PN ) / Max( ACS,AMS ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Min( RCSe ,Max( ( DS - MLU ),RCSe ) ) / DS ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( RRSe - ( RCSe * ( DS + CS ) ) ) ) + ( DS / Max( CS,MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6454183266932271, "obj2": 0.19340270903636383}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ( FirstVNF_RAM_Server + MDR ) / ( FirstVNF_Mem + ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / ACS ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( MUM + RRSe ) - Max( RRSe,( ( MLU / CS ) * Min( DS ,RRSe ) ) ) ) ) ) ,( ( Max( ( MUC * CS ),( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( RCSe * CS ),( ( DS / RMSe ) * MUC ) ) )", "obj1": 0.44223107569721115, "obj2": 0.3694104158059036}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) + Min( ( CRS * ( Max( MDR,MDR ) + ARS ) ) ,DDR ) )", "choosing": "( Min( MLU ,RCSe ) + ( ( Min( Max( DS,RRSe ) ,MLU ) / ( RRSe * Max( MUC,DS ) ) ) + MUR ) )", "obj1": 0.9402390438247012, "obj2": 0.02482510431966823}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5338645418326693, "obj2": 0.2754082422755769}, {"determining": "( ( ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) - ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_CPU ) ) ) - DDR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( ( MLU * RRSe ) + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) * ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) ) ) )", "obj1": 0.5856573705179283, "obj2": 0.23434918800446122}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + ( Max( ( Min( MDR ,FirstVNF_RAM ) * FirstVNF_CPU ),FirstVNF_RAM ) * MRS ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6415179762939426}, {"determining": "( ( Max( Min( ARS ,CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( Min( ( ( RCSe / MUC ) + RCSe ) ,( RCSe * ( ( RCSe - MLU ) / MUR ) ) ) + CS ) ) ) / CS )", "obj1": 0.18326693227091634, "obj2": 0.6897589377809513}, {"determining": "( Min( Max( ( FirstVNF_Mem + ( Min( ( Max( MRS,DDR ) / DDR ) ,FirstVNF_Mem_Server ) * ( DDR / MRS ) ) ),CRS ) ,( RRS + FirstVNF_CPU ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( ( ( RCSe / RCSe ) - MUM ) * RRSe ) / Min( ( RRSe * MLU ) ,DS ) )", "obj1": 0.19322709163346613, "obj2": 0.6797569610945424}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Min( AMS ,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( Max( MUM,( Max( ( MUM + RRSe ),( MUC / MUC ) ) + MUC ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( Max( MUC,MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( RCSe + MLU ) ) ) ) ) + CS ) ) )", "obj1": 0.7808764940239044, "obj2": 0.08981874283050993}, {"determining": "( ( ( DDR * PN ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + MRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( MLU * ( RCSe - ( ( CS + RMSe ) / RRSe ) ) ) ) ) ) + Min( ( CS * ( DS / ( CS / MLU ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.3645418326693227, "obj2": 0.4907013427470067}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7171314741035857, "obj2": 0.14445209301912462}, {"determining": "( Max( CRS,FirstVNF_RAM ) - ( ( BR / FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU_Server * RRS ) - Min( Min( Max( ( FirstVNF_CPU_Server + ACS ),( FirstVNF_RAM / FirstVNF_Mem ) ) ,CRS ) ,PN ) ) ) )", "choosing": "( ( ( Min( ( MUM - DS ) ,MLU ) / ( ( ( ( MUM - ( MLU / RRSe ) ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) / MUC ) - RMSe ) ) + MUR ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03713461683870236}, {"determining": "( ( FirstVNF_Mem + BR ) + Max( DDR,ARS ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( ( MUC / RRSe ) * ( MLU / RRSe ) ) ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RCSe * RMSe ) ,( Max( RCSe,MUC ) / Max( RMSe,MLU ) ) ) )", "obj1": 0.1752988047808765, "obj2": 0.710370588176065}, {"determining": "( ( Max( MDR,RRS ) + FirstVNF_Mem ) + Min( ( ( MDR / AMS ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( ( MUC * MLU ),Min( MUR ,RCSe ) ) ) / DS ) / DS ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RMSe * RCSe ) ,( Min( CS ,RMSe ) + ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) ) ) ) )", "obj1": 0.21713147410358566, "obj2": 0.656778127748607}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( Min( ARS ,FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,BR ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.8167330677290837, "obj2": 0.07535711916890597}, {"determining": "( Max( Max( ARS,Const ),ACS ) + ( RRS + MRS ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * Min( RMSe ,Min( ( MUC + Max( DS,MUM ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5657803926494337}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( MUM / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.40479366875772504}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( ( DDR / ( FirstVNF_RAM / DDR ) ) - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server + AMS ) / ( FirstVNF_RAM_Server / ( FirstVNF_Mem - ( ( Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ),AMS ) * FirstVNF_RAM_Server ) + DDR ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe * ( DS + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( RRSe ,MUC ) ) ) ) ) ) ,( ( Max( MUR,( RRSe * MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( CS * MUC ) + MUC ) ) ) + Max( ( CS + ( ( MUR + MUC ) - Max( RMSe,Max( ( MUM * ( MUR * MLU ) ),MUC ) ) ) ),( MUC * MUC ) ) )", "obj1": 0.6354581673306773, "obj2": 0.19777089357152827}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / Max( AMS,BR ) ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MLU ) / MUR ) / DS ) ) ) + Max( ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.40836653386454186, "obj2": 0.41812312098891324}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( ( CS * RCSe ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( CS,DS ) + CS ) ) ) ) ) )", "obj1": 0.34860557768924305, "obj2": 0.4988195079425182}, {"determining": "( ( ( ( PN / ( DDR / Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - MRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_RAM_Server ) ) * ( ( Max( Max( FirstVNF_RAM,FirstVNF_CPU ),FirstVNF_CPU ) - ( FirstVNF_RAM_Server + ARS ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9880478087649402, "obj2": 0.004046347008945229}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( Min( ( FirstVNF_Mem + BR ) ,Const ) ,FirstVNF_RAM_Server ) ) * CRS ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe * RMSe ) / ( RRSe * DS ) ) * ( MUR - ( RCSe * RMSe ) ) ) ) / CS )", "obj1": 0.22111553784860558, "obj2": 0.6543324125956602}, {"determining": "( ( Max( Min( ( ARS + Min( DDR ,FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ),DDR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / Max( RRSe,DS ) ) * ( ( ( Min( ( CS * CS ) ,Min( CS ,MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1254980079681275, "obj2": 0.7624712958089915}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_RAM_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( Const / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( RMSe / MUC ) ) ) ) + MUM ) + ( ( ( MLU * Min( Min( MLU ,DS ) ,Max( MUC,RCSe ) ) ) - CS ) * MUR ) ) ) )", "obj1": 0.9561752988047809, "obj2": 0.01989854183567455}, {"determining": "( Min( FirstVNF_RAM ,CRS ) + Max( ( ( DDR / RRS ) / Min( FirstVNF_Mem ,PN ) ),FirstVNF_RAM ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( MUR * RCSe ) / RRSe ) / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( RMSe - ( RMSe + ( ( Max( MUC,CS ) / MUR ) - Max( ( ( CS - MUR ) * CS ),( ( CS * DS ) * DS ) ) ) ) ) ,( ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),Min( ( RRSe / MUC ) ,( CS / MUM ) ) ) ) ) * CS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5090781083032475}, {"determining": "( Min( FirstVNF_CPU_Server ,( AMS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) ) + Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) + CS ) ) + Min( ( CS + ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Max( RRSe,MLU ) * ( CS * MUM ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM - RRSe ) ) + ( RCSe / ( Max( CS,Max( MUM,DS ) ) / MLU ) ) ) - ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3745019920318725, "obj2": 0.45858960619231165}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "( Min( FirstVNF_CPU_Server ,( AMS - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) ) + Min( FirstVNF_Mem ,AMS ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) + CS ) ) + Min( ( CS + ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( Max( RRSe,MLU ) * ( CS * MUM ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM - RRSe ) ) + ( RCSe / ( Max( CS,Max( MUM,DS ) ) / MLU ) ) ) - ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3745019920318725, "obj2": 0.45858960619231165}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8705179282868526, "obj2": 0.054067232895682854}, {"determining": "( FirstVNF_Mem + ( ( ( FirstVNF_Mem + ARS ) / Max( ARS,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3386454183266932, "obj2": 0.513719102582011}, {"determining": "Min( ( FirstVNF_CPU_Server * RRS ) ,( ( ( FirstVNF_Mem + ARS ) / ( ( MDR * ARS ) + ARS ) ) * ( ( FirstVNF_Mem_Server - CRS ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUM + MUM ) ) ) ) + ( RRSe * Max( Min( MUM ,MLU ),RRSe ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.3565737051792829, "obj2": 0.494696523118932}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( MRS - Max( ARS,AMS ) ) * CRS ) )", "choosing": "( ( ( ( ( RRSe + ( MLU * MUR ) ) / ( ( ( ( CS / CS ) * ( MLU - CS ) ) * MUR ) * DS ) ) * ( ( RRSe - MUM ) + RRSe ) ) * RRSe ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7888757897041578}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( Min( AMS ,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( Min( MUC ,MUC ),CS ) + Min( ( CS * ( RCSe * ( ( DS / Min( RRSe ,( MUM * MUR ) ) ) * MUM ) ) ) ,( ( ( MLU - CS ) + Max( MUR,( MUC - MUM ) ) ) * ( ( RRSe * CS ) / DS ) ) ) )", "obj1": 0.5537848605577689, "obj2": 0.2577209664504852}, {"determining": "( ( CRS * Max( Const,BR ) ) / Max( ( BR / MRS ),PN ) )", "choosing": "( ( RRSe * ( Max( RMSe,( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( ( RCSe - MUR ) ,( CS + RMSe ) ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.199203187250996, "obj2": 0.6747917844320955}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( Min( ( ( MLU + MUM ) - ( Min( Min( MUM ,Max( RMSe,Max( RRSe,MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5729953760405737}, {"determining": "( ( DDR * ARS ) + ( ( PN / ( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_RAM_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) )", "choosing": "( Max( ( MUC * Min( RCSe ,( RMSe - RRSe ) ) ),CS ) + ( ( ( Min( ( ( ( MLU / RRSe ) - RRSe ) + Max( Max( MLU,MLU ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) / Min( ( DS * RRSe ) ,MLU ) ) + MUR ) )", "obj1": 0.9322709163346613, "obj2": 0.02808028582759954}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( MUM / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUM + ( DS - DS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9741035856573705, "obj2": 0.010686238891842462}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( ( Max( CRS,FirstVNF_Mem_Server ) + ( FirstVNF_CPU + BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5796812749003984, "obj2": 0.24346261572567549}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( MRS / BR ) + ( ARS + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( CS * MUC ) ,( ( CS * ( MUR * MUM ) ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( CS,DS ) / CS ) ) ) ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5521367462724568}, {"determining": "( ( ( ( ( FirstVNF_CPU + ACS ) / ( FirstVNF_CPU_Server * Min( Min( ARS ,Max( AMS,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( Max( RRSe,( ( DS + CS ) * Min( MUC ,RRSe ) ) ) - ( ( RRSe / ( MUM + MUC ) ) - RRSe ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * Min( ( ( MUM / RRSe ) - Max( MUM,( CS * ( DS - MUC ) ) ) ) ,MUC ) ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MUM + MUM ) ) ) ) ) + CS ) ) )", "obj1": 0.7948207171314741, "obj2": 0.08814886152697994}, {"determining": "( ( Max( BR,( ( ARS + ( CRS - ( Max( BR,ACS ) + ( MRS + PN ) ) ) ) / FirstVNF_CPU_Server ) ) * CRS ) / ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * ( FirstVNF_RAM_Server * MDR ) ) * Min( ( DDR + ( ( AMS / FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,ACS ) ) )", "choosing": "( ( ( MLU * RRSe ) * ( Min( MUC ,( ( ( MLU + CS ) * DS ) * MLU ) ) * ( ( ( Min( ( CS * MLU ) ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1294820717131474, "obj2": 0.754782503769634}, {"determining": "( ( ( DDR - ( ( ( FirstVNF_CPU_Server - MRS ) + RRS ) / ( FirstVNF_CPU_Server * Min( Min( ( CRS * PN ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( RRS - FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( DS / ( MUM + MUC ) ) - RRSe ) - Max( ( RRSe / ( MUR + MUM ) ),( ( DS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe + MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( ( MLU + ( MUC / Min( MUR ,MUC ) ) ) + CS ),( MUC * MUC ) ) )", "obj1": 0.8047808764940239, "obj2": 0.08068917858023049}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / MUM ) / DS ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.16062636726931406}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / Min( RCSe ,Max( ( DS - MLU ),RCSe ) ) ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3904382470119522, "obj2": 0.4366464293692317}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server * ARS ) ) ) + Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUR * ( Max( DS,MUC ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( DS + CS ) * Min( MUC ,MUM ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.21216210323844933}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,FirstVNF_RAM_Server ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_CPU * RRS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( MUC ,MUC ) ,( RCSe - ( ( MUM + ( MUC * CS ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.9661354581673307, "obj2": 0.01273373269674033}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( DS ,MLU ) ) / MUM ) / DS ) ) ) / Min( ( RCSe * RMSe ) ,DS ) )", "obj1": 0.7270916334661355, "obj2": 0.13716003339759897}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.28286852589641437, "obj2": 0.5716025074141267}, {"determining": "( ( ( ( ( ( Max( Const,BR ) * CRS ) - FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) - Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) * CRS ) / ( FirstVNF_CPU * Min( Min( ( ( DDR - CRS ) * ARS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,Min( RRS ,RRS ) ) ) )", "choosing": "( Min( Max( Min( RMSe ,( MUM / Min( Max( RRSe,( MUR / MUC ) ) ,MUM ) ) ),MLU ) ,RRSe ) / Min( Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,Max( MUM,MUM ) ) ,( Min( RCSe ,( MLU - Min( RRSe ,RCSe ) ) ) * Min( RMSe ,Min( MLU ,CS ) ) ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7908951734942623}, {"determining": "( ( BR / MRS ) + ( Const / ( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "Min( ( CS * MUC ) ,( ( CS * RCSe ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( MUM,DS ) + CS ) ) ) ) ) )", "obj1": 0.30278884462151395, "obj2": 0.553108174434542}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( Min( ( FirstVNF_Mem_Server * Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,( FirstVNF_RAM_Server / DDR ) ),( FirstVNF_Mem * DDR ) ) ) * ( FirstVNF_RAM_Server + ( MDR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Max( ( ( DS * RCSe ) + RMSe ),( ( Min( ( MLU - CS ) ,CS ) - Max( Min( MUR ,CS ),Max( ( MLU + Min( RCSe ,MUR ) ),MLU ) ) ) / ( DS + RMSe ) ) ) )", "obj1": 0.5637450199203188, "obj2": 0.250587880261412}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( Max( AMS,( Max( Const,BR ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.398406374501992, "obj2": 0.42547730511161375}, {"determining": "( ( FirstVNF_CPU_Server * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - MDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) + MUR ) / DS ) ) ) + Max( Max( ( MUM + MUM ),MUC ),( MUC * MUC ) ) )", "obj1": 0.4063745019920319, "obj2": 0.4231801590998816}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( BR / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6314741035856574, "obj2": 0.21022860477421726}, {"determining": "( Max( BR,MRS ) + ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - ( DS / ( CS / ( ( ( MUC * MUM ) + ( ( Min( DS ,RMSe ) * MUR ) - ( Min( MUR ,CS ) - RMSe ) ) ) - Min( DS ,Min( ( MLU - ( RCSe + MUR ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5889308446954941}, {"determining": "( ( ( ( PN / ( FirstVNF_CPU_Server * Min( Min( ARS ,Max( AMS,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( DS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MUM + MUM ) ) ) ) ) + CS ) ) )", "obj1": 0.8067729083665338, "obj2": 0.08000737257718171}], "25": [{"determining": "( ( ( DDR - ( ( ( FirstVNF_CPU_Server - MRS ) + RRS ) / ( FirstVNF_CPU_Server * Min( Min( ( CRS * PN ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( RRS - FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( DS / ( MUM + MUC ) ) - RRSe ) - Max( ( RRSe / ( MUR + MUM ) ),( ( DS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe + MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( ( MLU + ( MUC / Min( MUR ,MUC ) ) ) + CS ),( MUC * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_RAM + ARS ) / ( FirstVNF_RAM_Server * ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( ( FirstVNF_CPU - BR ) + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server - Max( RRS,( FirstVNF_CPU / Min( FirstVNF_CPU ,MRS ) ) ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS / ( DS / CS ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( MUR * MUR ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + ( MUM * MUR ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06630501652956762}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.46613545816733065, "obj2": 0.33741629310632343}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.8685258964143426, "obj2": 0.054984794474022984}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( DS / ( CS / MLU ) ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + ( MUM * MUR ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.32892893587648425}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ( FirstVNF_RAM_Server + MDR ) / ( FirstVNF_Mem + ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / ACS ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( MUM + RRSe ) - Max( RRSe,( ( MLU / CS ) * Min( DS ,RRSe ) ) ) ) ) ) ,( ( Max( ( MUC * CS ),( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( RCSe * CS ),( ( DS / RMSe ) * MUC ) ) )", "obj1": 0.44223107569721115, "obj2": 0.3694104158059036}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe * DS ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ),( MUC * MUC ) ) )", "obj1": 0.4243027888446215, "obj2": 0.3790989403785338}, {"determining": "( ( ( ( PN / ( FirstVNF_CPU_Server * Min( Min( ARS ,Max( MRS,AMS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( ( Const / RRS ) / PN ) - DDR ) ,Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( DS + CS ) - Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + Min( ( MLU * MUC ) ,CS ) ) * ( ( Max( ( MUC - RCSe ),MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MUM + MUM ) ) ) ) ) + CS ) ) )", "obj1": 0.8884462151394422, "obj2": 0.041676883728254704}, {"determining": "Min( ( FirstVNF_CPU_Server * RRS ) ,( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( ( FirstVNF_CPU - DDR ),ARS ) ) ,( ACS - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( ( CS + ( MUM + DS ) ) + ( MUC + ( RMSe / MUR ) ) ) / ( CS / CS ) ) + MUM ) + ( ( ( MLU * Min( Min( MLU ,MUM ) ,Max( MUC,RCSe ) ) ) - CS ) * MUR ) ) ) )", "obj1": 0.3665338645418327, "obj2": 0.4751280964737322}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,Min( ACS ,MDR ) ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( ( DDR - ARS ) / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( CS - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6175298804780877, "obj2": 0.21116205168634442}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( MDR + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( RRSe,( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.4960159362549801, "obj2": 0.3132214911840967}, {"determining": "( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / DS ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RCSe * RMSe ) ,DS ) )", "obj1": 0.14940239043824702, "obj2": 0.7420392987954237}, {"determining": "( ( ( ( PN / Min( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( RCSe * CS ),( MUC * MUC ) ) )", "obj1": 0.5637450199203188, "obj2": 0.2487121629935821}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( MRS + MRS ) + ( Max( DDR,FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( ( ( ( MUR * ( ( MUR + DS ) / ( MLU * ( RCSe - ( MUM * CS ) ) ) ) ) * ( MUM * Min( ( ( MLU / ( DS * DS ) ) * MUR ) ,MUR ) ) ) - CS ) + Min( Max( Min( Min( DS ,DS ) ,Max( MUR,MUR ) ),DS ) ,Max( Max( Min( ( MLU / RRSe ) ,RMSe ),MLU ),MLU ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6272215552082994}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( DS - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.6075697211155379, "obj2": 0.22058517137276612}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( ACS * ACS ) + ( ( ( MDR - ( ACS * FirstVNF_Mem_Server ) ) / ARS ) / Min( AMS ,( ( ( FirstVNF_CPU + RRS ) + ( ACS - FirstVNF_RAM_Server ) ) + ACS ) ) ) )", "choosing": "Min( ( CS * Max( ( RRSe * MUR ),RMSe ) ) ,( ( RMSe * RRSe ) - ( CS * ( Max( Max( DS,MLU ),( Max( RMSe,CS ) + ( ( DS - DS ) + Max( CS,RMSe ) ) ) ) * CS ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5357735856526976}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( ( Max( CRS,FirstVNF_Mem_Server ) + ( FirstVNF_CPU + BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5796812749003984, "obj2": 0.24346261572567549}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.20119521912350596, "obj2": 0.6644567269549355}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ( FirstVNF_RAM / MRS ) * FirstVNF_RAM ) - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,Min( ( DS - RMSe ) ,MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - MUM ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.45212168947440057}, {"determining": "( ( ( ( PN / ( FirstVNF_CPU * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Max( Min( FirstVNF_CPU_Server ,BR ),RRS ) ),Min( ( FirstVNF_Mem_Server * Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,ACS ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe + MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / Max( CS,MUC ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5936254980079682, "obj2": 0.22735582120491193}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server - PN ) / Max( ACS,AMS ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Min( RCSe ,Max( ( DS - MLU ),RCSe ) ) / DS ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( RRSe - ( RCSe * ( DS + CS ) ) ) ) + ( DS / Max( CS,MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6454183266932271, "obj2": 0.19340270903636383}, {"determining": "( ( FirstVNF_Mem + Min( ( RRS - FirstVNF_CPU ) ,( ( Min( CRS ,FirstVNF_Mem_Server ) / ( DDR + FirstVNF_Mem ) ) - Max( BR,( BR / ARS ) ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( RCSe / MUM ),MUC ) * ( RRSe / MLU ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / ( RMSe + DS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.23705179282868527, "obj2": 0.6393395150082117}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( FirstVNF_Mem,ARS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( DS / Min( RCSe ,Max( ( DS - MLU ),RCSe ) ) ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) ) )", "obj1": 0.5517928286852589, "obj2": 0.2572207146672479}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - CRS ) + ( ( ( PN / Max( DDR,FirstVNF_Mem ) ) - DDR ) - ( FirstVNF_Mem / ( DDR * Min( ( ( ( MDR / PN ) - FirstVNF_CPU ) + Max( DDR,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM + ( ( Min( ( Max( RCSe,MLU ) + RRSe ) ,Max( ( CS - MLU ),RMSe ) ) / RMSe ) - CS ) ) ,( ( ( DS / Min( Max( ( DS - MLU ),RCSe ) ,RCSe ) ) + ( ( CS / MLU ) / MUR ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( Max( ( RRSe / RRSe ),( MLU * DS ) ) ,MLU ) ) ) + CS ) ) )", "obj1": 0.7609561752988048, "obj2": 0.10766315126064974}, {"determining": "( ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUR ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( RCSe * CS ),( MUC * MUC ) ) )", "obj1": 0.4203187250996016, "obj2": 0.3975682232311548}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( DS / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / ( MUC + ( RMSe / MUC ) ) ) / DS ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.18289051813898421}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.1269690469071632}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7171314741035857, "obj2": 0.14445209301912462}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( ( DDR * Min( ARS ,FirstVNF_CPU ) ) / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + ( CS / MUM ) )", "obj1": 0.7450199203187251, "obj2": 0.1184032185860654}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,AMS ) ) ) - Min( BR ,FirstVNF_RAM ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( CS + ( MLU - CS ) ) * ( Min( ( CS + Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5079681274900398, "obj2": 0.30186746511709195}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5338645418326693, "obj2": 0.2754082422755769}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + RRSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5199015596021972}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + ( Max( ( Min( MDR ,FirstVNF_RAM ) * FirstVNF_CPU ),FirstVNF_RAM ) * MRS ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6415179762939426}, {"determining": "( ( Max( Min( ARS ,CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( Min( ( ( RCSe / MUC ) + RCSe ) ,( RCSe * ( ( RCSe - MLU ) / MUR ) ) ) + CS ) ) ) / CS )", "obj1": 0.18326693227091634, "obj2": 0.6897589377809513}, {"determining": "( Min( Max( ( FirstVNF_Mem + ( Min( ( Max( MRS,DDR ) / DDR ) ,FirstVNF_Mem_Server ) * ( DDR / MRS ) ) ),CRS ) ,( RRS + FirstVNF_CPU ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( ( ( RCSe / RCSe ) - MUM ) * RRSe ) / Min( ( RRSe * MLU ) ,DS ) )", "obj1": 0.19322709163346613, "obj2": 0.6797569610945424}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) - ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_CPU ) ) ) - DDR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( ( MLU * RRSe ) + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) * ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) ) ) )", "obj1": 0.5856573705179283, "obj2": 0.23434918800446122}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8725099601593626, "obj2": 0.05325412748846893}, {"determining": "( ( ( DDR * PN ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + MRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( ( Max( Const,BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( MLU * ( RCSe - ( ( CS + RMSe ) / RRSe ) ) ) ) ) ) + Min( ( CS * ( DS / ( CS / MLU ) ) ) ,( RMSe - ( CS + CS ) ) ) )", "obj1": 0.3645418326693227, "obj2": 0.4907013427470067}, {"determining": "( ( FirstVNF_Mem + BR ) + Max( DDR,ARS ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( ( MUC / RRSe ) * ( MLU / RRSe ) ) ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RCSe * RMSe ) ,( Max( RCSe,MUC ) / Max( RMSe,MLU ) ) ) )", "obj1": 0.1752988047808765, "obj2": 0.710370588176065}, {"determining": "( ( Max( MDR,RRS ) + FirstVNF_Mem ) + Min( ( ( MDR / AMS ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( ( MUC * MLU ),Min( MUR ,RCSe ) ) ) / DS ) / DS ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RMSe * RCSe ) ,( Min( CS ,RMSe ) + ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) ) ) ) )", "obj1": 0.21713147410358566, "obj2": 0.656778127748607}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) + ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( FirstVNF_Mem / ( ( ACS + FirstVNF_CPU_Server ) * Min( ACS ,CRS ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( Max( ( ( MUC * MUC ) - MLU ),MUC ) ,( Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * MUM ) ) ,( Max( MUM,MUM ) + CS ) ) - RCSe ) ) ,( MUR - MUR ) )", "obj1": 0.7848605577689243, "obj2": 0.08758618088651295}, {"determining": "( Max( Max( ARS,Const ),ACS ) + ( RRS + MRS ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * Min( RMSe ,Min( ( MUC + Max( DS,MUM ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5657803926494337}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server / Const ) / BR ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( DS / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / MUM ) / DS ) ) ) )", "obj1": 0.703187250996016, "obj2": 0.15101123216035273}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) - MDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * BR ) )", "choosing": "( Max( RRSe,( Max( RRSe,DS ) * ( ( ( Max( ( RCSe / RMSe ),MUC ) * ( RCSe / RRSe ) ) / MUM ) / DS ) ) ) / Max( Min( ( CS - Max( MUC,MUM ) ) ,MUR ),( MUR / MUR ) ) )", "obj1": 0.9083665338645418, "obj2": 0.04020716509323726}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( Max( AMS,( Max( Const,BR ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( ( ( MLU + CS ) * Min( MUC ,RRSe ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.38247011952191234, "obj2": 0.44240460663727377}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6633466135458167, "obj2": 0.17807461778245437}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / Max( AMS,BR ) ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MLU ) / MUR ) / DS ) ) ) + Max( ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.40836653386454186, "obj2": 0.41812312098891324}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_Mem ,DDR ) ) * Min( Max( DDR,ACS ) ,FirstVNF_CPU ) ) * Min( Min( ( FirstVNF_Mem - ARS ) ,( AMS * BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( RRSe,( ( ( ( MUC / CS ) * Min( DS ,MUM ) ) * ( ( Max( RMSe,RRSe ) - MUC ) / RCSe ) ) / DS ) ) * ( ( RMSe / ( RCSe / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MLU * CS ) ) + ( ( RCSe * CS ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.749003984063745, "obj2": 0.1124581940753405}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( ( CS * RCSe ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( CS,DS ) + CS ) ) ) ) ) )", "obj1": 0.34860557768924305, "obj2": 0.4988195079425182}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,MDR ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( Min( FirstVNF_RAM_Server ,( ( ( FirstVNF_CPU_Server - AMS ) * FirstVNF_RAM_Server ) / ( FirstVNF_CPU - Const ) ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),Max( ( MUC + MUR ),MUR ) ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + DS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / MUM ) / DS ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.16429834816950442}, {"determining": "( ( ( ( PN / ( FirstVNF_CPU_Server * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( DS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.8027888446215139, "obj2": 0.08152938154380227}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5219123505976095, "obj2": 0.2851687662023218}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( Min( ( FirstVNF_Mem + BR ) ,Const ) ,FirstVNF_RAM_Server ) ) * CRS ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe * RMSe ) / ( RRSe * DS ) ) * ( MUR - ( RCSe * RMSe ) ) ) ) / CS )", "obj1": 0.22111553784860558, "obj2": 0.6543324125956602}, {"determining": "( ( Max( Min( ( ARS + Min( DDR ,FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ),DDR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / Max( RRSe,DS ) ) * ( ( ( Min( ( CS * CS ) ,Min( CS ,MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1254980079681275, "obj2": 0.7624712958089915}, {"determining": "( Min( FirstVNF_RAM ,CRS ) + Max( ( ( DDR / RRS ) / Min( FirstVNF_Mem ,PN ) ),FirstVNF_RAM ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( MUR * RCSe ) / RRSe ) / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( RMSe - ( RMSe + ( ( Max( MUC,CS ) / MUR ) - Max( ( ( CS - MUR ) * CS ),( ( CS * DS ) * DS ) ) ) ) ) ,( ( RCSe * ( ( CS + CS ) - Max( ( RMSe - ( CS - CS ) ),Min( ( RRSe / MUC ) ,( CS / MUM ) ) ) ) ) * CS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5090781083032475}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "Min( ( FirstVNF_CPU_Server * RRS ) ,( ( ( FirstVNF_Mem + ARS ) / ( ( MDR * ARS ) + ARS ) ) * ( ( FirstVNF_Mem_Server - CRS ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUM + MUM ) ) ) ) + ( RRSe * Max( Min( MUM ,MLU ),RRSe ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.3565737051792829, "obj2": 0.494696523118932}, {"determining": "( ( Max( Const,BR ) * CRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + RRSe )", "obj1": 0.6733067729083665, "obj2": 0.1735892801540867}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( MRS - Max( ARS,AMS ) ) * CRS ) )", "choosing": "( ( ( ( ( RRSe + ( MLU * MUR ) ) / ( ( ( ( CS / CS ) * ( MLU - CS ) ) * MUR ) * DS ) ) * ( ( RRSe - MUM ) + RRSe ) ) * RRSe ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7888757897041578}, {"determining": "( ( CRS * Max( Const,BR ) ) / Max( ( BR / MRS ),PN ) )", "choosing": "( ( RRSe * ( Max( RMSe,( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( ( RCSe - MUR ) ,( CS + RMSe ) ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.199203187250996, "obj2": 0.6747917844320955}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) + Min( ( CRS * ( Max( MDR,MDR ) + ARS ) ) ,DDR ) )", "choosing": "( Min( MLU ,RCSe ) + ( ( Min( Max( DS,RRSe ) ,MLU ) / ( RRSe * Max( MUC,DS ) ) ) + MUR ) )", "obj1": 0.9402390438247012, "obj2": 0.02482510431966823}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( Min( ( ( MLU + MUM ) - ( Min( Min( MUM ,Max( RMSe,Max( RRSe,MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5729953760405737}, {"determining": "( ( DDR * ARS ) + ( ( PN / ( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_RAM_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) )", "choosing": "( Max( ( MUC * Min( RCSe ,( RMSe - RRSe ) ) ),CS ) + ( ( ( Min( ( ( ( MLU / RRSe ) - RRSe ) + Max( Max( MLU,MLU ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) / Min( ( DS * RRSe ) ,MLU ) ) + MUR ) )", "obj1": 0.9322709163346613, "obj2": 0.02808028582759954}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( Max( DDR,Min( FirstVNF_CPU_Server ,CRS ) ) * CRS ) + ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( DDR / FirstVNF_RAM_Server ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( ( Min( MUM ,( RRSe / RMSe ) ) / RMSe ),( RRSe * MUM ) ) + ( ( CS / MLU ) / DS ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + RRSe )", "obj1": 0.6812749003984063, "obj2": 0.16942035236994973}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( ( ( PN / ( ( ( ( DDR + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server * ARS ) ) ) + Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUR * ( Max( DS,MUC ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( DS + CS ) * Min( MUC ,MUM ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015811727717053723}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( MUM / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.40479366875772504}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5139442231075697, "obj2": 0.2901901291772171}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,Min( ACS ,MDR ) ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( RRSe - MUM ) - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5258964143426295, "obj2": 0.2766061127379034}, {"determining": "( FirstVNF_Mem + ( ( ( FirstVNF_Mem + ARS ) / Max( ARS,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3386454183266932, "obj2": 0.513719102582011}, {"determining": "( ( MRS / BR ) + ( ARS + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( CS * MUC ) ,( ( CS * ( MUR * MUM ) ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( CS,DS ) / CS ) ) ) ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5521367462724568}, {"determining": "( ( Max( BR,( ( ARS + ( CRS - ( Max( BR,ACS ) + ( MRS + PN ) ) ) ) / FirstVNF_CPU_Server ) ) * CRS ) / ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * ( FirstVNF_RAM_Server * MDR ) ) * Min( ( DDR + ( ( AMS / FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,ACS ) ) )", "choosing": "( ( ( MLU * RRSe ) * ( Min( MUC ,( ( ( MLU + CS ) * DS ) * MLU ) ) * ( ( ( Min( ( CS * MLU ) ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1294820717131474, "obj2": 0.754782503769634}, {"determining": "( ( ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) * ( Max( AMS,( Max( Const,( CRS * FirstVNF_Mem_Server ) ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / MDR ) ) - Max( MRS,Min( FirstVNF_CPU ,( RRS / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Min( ( CS * ( ( ( MLU + CS ) * Min( MUC ,RRSe ) ) * ( ( ( RRSe / Min( MUM ,MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( RCSe / ( Max( CS,Max( MUM,MUR ) ) / ( ( ( RRSe - CS ) + ( MLU + MUM ) ) - ( MUC - CS ) ) ) ) ) ) + ( MLU * RRSe ) )", "obj1": 0.3784860557768924, "obj2": 0.4518565150723269}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( ( ( PN / ( ( ( PN * PN ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( ( CRS * FirstVNF_Mem_Server ) / DDR ) ) - Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS - ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,Max( ( ( ( RCSe * DS ) * ( MUC + CS ) ) - ( CS * ( MUM - CS ) ) ),RCSe ) ) - ( MUC - RCSe ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.09664930127956925}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.28286852589641437, "obj2": 0.5716025074141267}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( AMS + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( ACS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( FirstVNF_Mem + ( AMS / FirstVNF_RAM ) ) * Min( RRS ,( AMS - FirstVNF_RAM ) ) ) ,( ACS / DDR ) ) - Min( ( Max( ( RRS * AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Min( DS ,RMSe ) * MUC ),Min( ( RRSe - MUC ) ,( DS / Min( ( MUM + MUM ) ,MUR ) ) ) ) + Min( ( CS * ( ( CS * CS ) / ( ( CS + MUC ) + ( ( MUC * ( MUC / RRSe ) ) / ( ( MUM * MUR ) / MUC ) ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7768924302788844, "obj2": 0.09285637938224871}, {"determining": "( ( ( ( ( ( Max( Const,BR ) * CRS ) - FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) - Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) * CRS ) / ( FirstVNF_CPU * Min( Min( ( ( DDR - CRS ) * ARS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,Min( RRS ,RRS ) ) ) )", "choosing": "( Min( Max( Min( RMSe ,( MUM / Min( Max( RRSe,( MUR / MUC ) ) ,MUM ) ) ),MLU ) ,RRSe ) / Min( Min( Max( ( MUR + CS ),Min( DS ,MLU ) ) ,Max( MUM,MUM ) ) ,( Min( RCSe ,( MLU - Min( RRSe ,RCSe ) ) ) * Min( RMSe ,Min( MLU ,CS ) ) ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7908951734942623}, {"determining": "( FirstVNF_Mem + ( ( ( FirstVNF_Mem + ARS ) / Max( ARS,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( MUC * ( RRSe / RRSe ) ) / MUR ) / DS ) ) ) + RRSe )", "obj1": 0.33266932270916333, "obj2": 0.5186250498805545}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - Min( BR ,FirstVNF_RAM ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( Min( ( CS + Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2971544817997995}, {"determining": "( ( BR / MRS ) + ( Const / ( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "Min( ( CS * MUC ) ,( ( CS * RCSe ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( MUM,DS ) + CS ) ) ) ) ) )", "obj1": 0.30278884462151395, "obj2": 0.553108174434542}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( MUM / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUM + ( DS - DS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9741035856573705, "obj2": 0.010686238891842462}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( Min( ARS ,FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,BR ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.8167330677290837, "obj2": 0.07535711916890597}, {"determining": "( ( FirstVNF_CPU_Server * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - MDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) + MUR ) / DS ) ) ) + Max( Max( ( MUM + MUM ),MUC ),( MUC * MUC ) ) )", "obj1": 0.4063745019920319, "obj2": 0.4231801590998816}, {"determining": "( Max( BR,MRS ) + ( FirstVNF_CPU + DDR ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) * RCSe ) - ( DS / ( CS / ( ( ( MUC * MUM ) + ( ( Min( DS ,RMSe ) * MUR ) - ( Min( MUR ,CS ) - RMSe ) ) ) - Min( DS ,Min( ( MLU - ( RCSe + MUR ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5889308446954941}, {"determining": "( ( ( ( PN / ( FirstVNF_CPU_Server * Min( Min( ARS ,Max( AMS,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( DS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MUM + MUM ) ) ) ) ) + CS ) ) )", "obj1": 0.8067729083665338, "obj2": 0.08000737257718171}], "26": [{"determining": "( Min( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) ,( Max( AMS,( DDR - ARS ) ) / ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( RCSe / ( ( ( RRSe / ( MUM + MUC ) ) - DS ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( DS / ( RRSe - MUM ) ) + Max( MUR,( RRSe - MUM ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( ( ( FirstVNF_CPU_Server - MRS ) + RRS ) / ( FirstVNF_CPU_Server * Min( Min( ( CRS * PN ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( RRS - FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( DS / ( MUM + MUC ) ) - RRSe ) - Max( ( RRSe / ( MUR + MUM ) ),( ( DS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe + MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( ( MLU + ( MUC / Min( MUR ,MUC ) ) ) + CS ),( MUC * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + ( MUM * MUR ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06630501652956762}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.8685258964143426, "obj2": 0.054984794474022984}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,Min( ACS ,MDR ) ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( ( DDR - ARS ) / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( CS - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6175298804780877, "obj2": 0.21116205168634442}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / FirstVNF_RAM ) - ( FirstVNF_CPU_Server * MRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( MUR / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( RRSe + ( MUR / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.4820717131474104, "obj2": 0.3297798953738958}, {"determining": "( ( FirstVNF_CPU_Server * ( BR - ( FirstVNF_Mem - RRS ) ) ) + ( ( FirstVNF_RAM_Server + ( Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_Mem ) ) * ( ( ( FirstVNF_Mem / ( ( ARS / BR ) * Const ) ) + ARS ) / ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( RCSe * Min( RCSe ,MUR ) ) * CS ) ,Min( ( ( MLU - CS ) + Max( MUR,( RRSe - ( ( MLU + MUR ) / MUM ) ) ) ) ,( ( MUM + RRSe ) / Max( ( Min( RCSe ,MUM ) * RCSe ),RRSe ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.4945228237051121}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_CPU_Server + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU ,ARS ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - ( ( Min( FirstVNF_CPU ,( ( MRS / FirstVNF_CPU ) + AMS ) ) - BR ) * DDR ) ) - ( ( FirstVNF_RAM_Server + ARS ) / Max( AMS,( DDR - AMS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( PN + ACS ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) * ( ( MUM - ( RMSe - CS ) ) - Max( CS,Min( ( CS + Max( MUR,RCSe ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * Min( Min( RMSe ,MUC ) ,MUM ) ) ) ,( Max( MUM,MUM ) / ( Min( MUM ,( MUC * MLU ) ) + Max( RMSe,RMSe ) ) ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.4940239043824701, "obj2": 0.3044021123163963}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server - PN ) / Max( ACS,AMS ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Min( RCSe ,Max( ( DS - MLU ),RCSe ) ) / DS ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( ( ( ( RRSe / ( MUM + MUC ) ) - MLU ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( RRSe - ( RCSe * ( DS + CS ) ) ) ) + ( DS / Max( CS,MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6454183266932271, "obj2": 0.19340270903636383}, {"determining": "Min( ( FirstVNF_CPU_Server * RRS ) ,( ( ( FirstVNF_Mem + ARS ) / ( ( Min( DDR ,BR ) / DDR ) + ARS ) ) * ( ( FirstVNF_Mem_Server - CRS ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) + MUR ) / DS ) ) ) + Max( Max( ( MUM + MUM ),MUC ),( MUC * MUC ) ) )", "obj1": 0.36254980079681276, "obj2": 0.48812125329961953}, {"determining": "( ( ( ( PN / ( FirstVNF_CPU_Server * Min( Min( ARS ,Max( MRS,AMS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( ( Const / RRS ) / PN ) - DDR ) ,Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( DS + CS ) - Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + Min( ( MLU * MUC ) ,CS ) ) * ( ( Max( ( MUC - RCSe ),MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MUM + MUM ) ) ) ) ) + CS ) ) )", "obj1": 0.8884462151394422, "obj2": 0.041676883728254704}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Min( ( FirstVNF_RAM + DDR ) ,FirstVNF_RAM ) + ( ( ( BR / FirstVNF_RAM_Server ) / ARS ) * BR ) ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( ACS + FirstVNF_CPU_Server ) ,( FirstVNF_CPU - ( MDR / PN ) ) ) ) ) * ( PN / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RRSe - ( Min( CS ,( Min( Min( MLU ,( MUM / MUR ) ) ,RRSe ) - ( Max( Min( MUC ,DS ),( RMSe / CS ) ) - ( MUR - MLU ) ) ) ) + CS ) ) )", "obj1": 0.9741035856573705, "obj2": 0.008020213757594985}, {"determining": "Min( ( FirstVNF_CPU_Server * RRS ) ,( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( ( FirstVNF_CPU - DDR ),ARS ) ) ,( ACS - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( ( CS + ( MUM + DS ) ) + ( MUC + ( RMSe / MUR ) ) ) / ( CS / CS ) ) + MUM ) + ( ( ( MLU * Min( Min( MLU ,MUM ) ,Max( MUC,RCSe ) ) ) - CS ) * MUR ) ) ) )", "obj1": 0.3665338645418327, "obj2": 0.4751280964737322}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) - MDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * BR ) )", "choosing": "( Max( RRSe,( Max( RRSe,DS ) * ( ( ( Max( ( RCSe / RMSe ),MUC ) * ( RCSe / RRSe ) ) / MUM ) / DS ) ) ) / Max( Min( ( CS - Max( MUC,MUM ) ) ,MUR ),( MUR / MUR ) ) )", "obj1": 0.9083665338645418, "obj2": 0.04020716509323726}, {"determining": "( ( Max( MDR,RRS ) + FirstVNF_Mem ) + Min( ( ( MDR / AMS ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( ( MUC * MLU ),Min( MUR ,RCSe ) ) ) / DS ) / DS ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RMSe * RCSe ) ,( Min( CS ,RMSe ) + ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) ) ) ) )", "obj1": 0.21713147410358566, "obj2": 0.656778127748607}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,MDR ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( Min( FirstVNF_RAM_Server ,( ( ( FirstVNF_CPU_Server - AMS ) * FirstVNF_RAM_Server ) / ( FirstVNF_CPU - Const ) ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),Max( ( MUC + MUR ),MUR ) ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + DS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / MUM ) / DS ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.16429834816950442}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( MUM / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.40479366875772504}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) + ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( FirstVNF_Mem / ( ( ACS + FirstVNF_CPU_Server ) * Min( ACS ,CRS ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( Max( ( ( MUC * MUC ) - MLU ),MUC ) ,( Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * MUM ) ) ,( Max( MUM,MUM ) + CS ) ) - RCSe ) ) ,( MUR - MUR ) )", "obj1": 0.7848605577689243, "obj2": 0.08758618088651295}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( AMS / ( Min( Const ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( RMSe + RRSe ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.39017701656130627}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) / DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / DDR ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe * MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( RCSe * CS ) / MUM ) / DS ) ) ) )", "obj1": 0.7211155378486056, "obj2": 0.1387615461627087}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ARS ) / Min( RRS ,DDR ) ) - Min( ( MRS / FirstVNF_Mem_Server ) ,ACS ) ) - Min( FirstVNF_Mem_Server ,( Const / ( ( FirstVNF_RAM / ( CRS * ( CRS - FirstVNF_Mem ) ) ) + MRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( ( ACS + PN ) / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS * DS ) + Max( ( MUC * ( ( MUC - ( Max( RRSe,CS ) / MUC ) ) - ( ( RRSe - Max( ( DS / MUC ),( MUC - MLU ) ) ) + RMSe ) ) ),Max( MUC,MUC ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5124358274969616}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.20119521912350596, "obj2": 0.6644567269549355}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ( FirstVNF_RAM / MRS ) * FirstVNF_RAM ) - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,Min( ( DS - RMSe ) ,MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - MUM ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.45212168947440057}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - CRS ) + ( ( ( PN / Max( DDR,FirstVNF_Mem ) ) - DDR ) - ( FirstVNF_Mem / ( DDR * Min( ( ( ( MDR / PN ) - FirstVNF_CPU ) + Max( DDR,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM + ( ( Min( ( Max( RCSe,MLU ) + RRSe ) ,Max( ( CS - MLU ),RMSe ) ) / RMSe ) - CS ) ) ,( ( ( DS / Min( Max( ( DS - MLU ),RCSe ) ,RCSe ) ) + ( ( CS / MLU ) / MUR ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( Max( ( RRSe / RRSe ),( MLU * DS ) ) ,MLU ) ) ) + CS ) ) )", "obj1": 0.7609561752988048, "obj2": 0.10766315126064974}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) - ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_CPU ) ) ) - DDR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( ( MLU * RRSe ) + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) * ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) ) ) )", "obj1": 0.5856573705179283, "obj2": 0.23434918800446122}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) + Min( ( CRS * ( Max( MDR,MDR ) + ARS ) ) ,DDR ) )", "choosing": "( Min( MLU ,RCSe ) + ( ( Min( Max( DS,RRSe ) ,MLU ) / ( RRSe * Max( MUC,DS ) ) ) + MUR ) )", "obj1": 0.9402390438247012, "obj2": 0.02482510431966823}, {"determining": "( ( ( ( PN / ( DDR * Min( FirstVNF_CPU_Server ,Min( ( PN / MRS ) ,Max( AMS,BR ) ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server - ARS ) ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) / RRSe ) - Max( RRSe,( MUC * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( DS * ( MUM + ( MLU + RRSe ) ) ) / ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.14702996962103082}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,( RRS / AMS ) ) ) * ( ( BR - FirstVNF_CPU ) + ( PN - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + RRS ) ) ) + ( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( ( MUR * RRSe ) / RCSe ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / RCSe ) / DS ) ) ) )", "obj1": 0.8725099601593626, "obj2": 0.053254127488468916}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( Max( AMS,( Max( Const,BR ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( ( ( MLU + CS ) * Min( MUC ,RRSe ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.38247011952191234, "obj2": 0.44240460663727377}, {"determining": "( ( ( RRS - PN ) - ( Max( AMS,Max( DDR,ARS ) ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / Min( PN ,DDR ) ) - ARS ) ,( ( ( Const * FirstVNF_CPU_Server ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe + ( RMSe - ( ( Max( MLU,MUM ) * Max( RRSe,DS ) ) + DS ) ) ) + Max( MUC,( MUC * MUR ) ) )", "obj1": 0.4601593625498008, "obj2": 0.3434644245378344}, {"determining": "( ( ( ( PN / ( DDR * ( ( AMS / FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_RAM ,BR ) ) - FirstVNF_CPU ) + ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( DS,MUM ) + ( ( Min( DS ,( MUR - CS ) ) / ( MLU / RCSe ) ) / MUR ) ) + Min( ( CS * ( RCSe * ( Max( RRSe,( ( MLU + CS ) * DS ) ) - ( ( RRSe / ( RMSe + RCSe ) ) - RRSe ) ) ) ) ,( ( CS + ( CS - MLU ) ) * ( Min( ( CS + Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5338645418326693, "obj2": 0.2730147915915507}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem * ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( Max( AMS,FirstVNF_CPU ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( ( CRS * FirstVNF_Mem_Server ) / DDR ) ) - Min( ( ( MDR / Min( RRS ,ACS ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * MUC ) - ( CS * ( RCSe - ( RCSe / Max( RCSe,MLU ) ) ) ) ) ) ) + ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - ( ( MUM / MUC ) + RCSe ) ) ) - ( Min( Min( RMSe ,MUC ) ,MUC ) - ( MUC - RCSe ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.09550747951967455}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe * DS ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ),( MUC * MUC ) ) )", "obj1": 0.4243027888446215, "obj2": 0.3790989403785338}, {"determining": "( ( FirstVNF_Mem + BR ) + Max( DDR,ARS ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( ( MUC / RRSe ) * ( MLU / RRSe ) ) ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RCSe * RMSe ) ,( Max( RCSe,MUC ) / Max( RMSe,MLU ) ) ) )", "obj1": 0.1752988047808765, "obj2": 0.710370588176065}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( Min( ARS ,FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,BR ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.8167330677290837, "obj2": 0.07535711916890597}, {"determining": "( Max( Max( ARS,Const ),ACS ) + ( RRS + MRS ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * Min( RMSe ,Min( ( MUC + Max( DS,MUM ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5657803926494337}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( ( MRS + MRS ) + ( Max( DDR,FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( ( ( ( MUR * ( ( MUR + DS ) / ( MLU * ( RCSe - ( MUM * CS ) ) ) ) ) * ( MUM * Min( ( ( MLU / ( DS * DS ) ) * MUR ) ,MUR ) ) ) - CS ) + Min( Max( Min( Min( DS ,DS ) ,Max( MUR,MUR ) ),DS ) ,Max( Max( Min( ( MLU / RRSe ) ,RMSe ),MLU ),MLU ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6272215552082994}, {"determining": "( ( ( ( PN / ( FirstVNF_CPU_Server * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( DS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.8027888446215139, "obj2": 0.08152938154380227}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( ( ( PN / ( DDR * Min( ( FirstVNF_CPU + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + ( ARS + ( ( Max( DDR,PN ) * ( DDR - BR ) ) - ARS ) ) ) * BR ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( MUR * RCSe ) / RRSe ) / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( RMSe - ( RMSe + ( ( MUR / Max( MUC,CS ) ) - Max( ( ( CS - MUR ) * CS ),( ( CS * DS ) * ( DS * MLU ) ) ) ) ) ) ,( ( RCSe * ( ( CS * CS ) - Max( ( RMSe - ( CS - CS ) ),Min( ( RRSe / MUC ) ,( CS / MUM ) ) ) ) ) * CS ) ) )", "obj1": 0.9561752988047809, "obj2": 0.018196270108767336}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + RRSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5199015596021972}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( DS / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / ( MUC + ( RMSe / MUC ) ) ) / DS ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.18289051813898421}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ( FirstVNF_RAM_Server + MDR ) / ( FirstVNF_Mem + ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / ACS ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( MUM + RRSe ) - Max( RRSe,( ( MLU / CS ) * Min( DS ,RRSe ) ) ) ) ) ) ,( ( Max( ( MUC * CS ),( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( RCSe * CS ),( ( DS / RMSe ) * MUC ) ) )", "obj1": 0.44223107569721115, "obj2": 0.3694104158059036}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( FirstVNF_Mem,ARS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( DS / Min( RCSe ,Max( ( DS - MLU ),RCSe ) ) ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) ) )", "obj1": 0.5517928286852589, "obj2": 0.2572207146672479}, {"determining": "( ( ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) - ( ( AMS * ( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server / Const ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( CS / MLU ) ) ,( ( Max( MUR,( RRSe - ( Min( MUC ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * Min( RRSe ,RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5756972111553785, "obj2": 0.2430814914789655}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( ARS + BR ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) ) )", "obj1": 0.39641434262948205, "obj2": 0.437859572368521}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6633466135458167, "obj2": 0.17807461778245437}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_Mem ,DDR ) ) * Min( Max( DDR,ACS ) ,FirstVNF_CPU ) ) * Min( Min( ( FirstVNF_Mem - ARS ) ,( AMS * BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( RRSe,( ( ( ( MUC / CS ) * Min( DS ,MUM ) ) * ( ( Max( RMSe,RRSe ) - MUC ) / RCSe ) ) / DS ) ) * ( ( RMSe / ( RCSe / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MLU * CS ) ) + ( ( RCSe * CS ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.749003984063745, "obj2": 0.1124581940753405}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( ( ( PN / ( FirstVNF_CPU * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Max( Min( FirstVNF_CPU_Server ,BR ),RRS ) ),Min( ( FirstVNF_Mem_Server * Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,ACS ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe + MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / Max( CS,MUC ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5936254980079682, "obj2": 0.22735582120491193}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5219123505976095, "obj2": 0.2851687662023218}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( Min( ( FirstVNF_Mem + BR ) ,Const ) ,FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ARS ) ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe * RMSe ) / ( RRSe * DS ) ) * ( MUR - ( RCSe * RMSe ) ) ) ) / ( Max( MUM,DS ) + CS ) )", "obj1": 0.22111553784860558, "obj2": 0.6419533427558984}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( AMS + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( ACS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( FirstVNF_Mem + ( AMS / FirstVNF_RAM ) ) * Min( RRS ,( AMS - FirstVNF_RAM ) ) ) ,( ACS / DDR ) ) - Min( ( Max( ( RRS * AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Min( DS ,RMSe ) * MUC ),Min( ( RRSe - MUC ) ,( DS / Min( ( MUM + MUM ) ,MUR ) ) ) ) + Min( ( CS * ( ( CS * CS ) / ( ( CS + MUC ) + ( ( MUC * ( MUC / RRSe ) ) / ( ( MUM * MUR ) / MUC ) ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7768924302788844, "obj2": 0.09285637938224871}, {"determining": "( ( Max( Min( ( ARS + Min( DDR ,FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ),DDR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / Max( RRSe,DS ) ) * ( ( ( Min( ( CS * CS ) ,Min( CS ,MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1254980079681275, "obj2": 0.7624712958089915}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,AMS ) ) ) - Min( BR ,FirstVNF_RAM ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( CS + ( MLU - CS ) ) * ( Min( ( CS + Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5079681274900398, "obj2": 0.30186746511709195}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.1269690469071632}, {"determining": "( ( FirstVNF_CPU_Server * ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5322691322596936}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,Min( ACS ,MDR ) ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( RRSe - MUM ) - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5258964143426295, "obj2": 0.2766061127379034}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( MRS - Max( ARS,AMS ) ) * CRS ) )", "choosing": "( ( ( ( ( RRSe + ( MLU * MUR ) ) / ( ( ( ( CS / CS ) * ( MLU - CS ) ) * MUR ) * DS ) ) * ( ( RRSe - MUM ) + RRSe ) ) * RRSe ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7888757897041578}, {"determining": "( ( CRS * Max( Const,BR ) ) / Max( ( BR / MRS ),PN ) )", "choosing": "( ( RRSe * ( Max( RMSe,( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( ( RCSe - MUR ) ,( CS + RMSe ) ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.199203187250996, "obj2": 0.6747917844320955}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( Min( ( ( MLU + MUM ) - ( Min( Min( MUM ,Max( RMSe,Max( RRSe,MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5729953760405737}, {"determining": "( ( FirstVNF_Mem + Min( ( RRS - FirstVNF_CPU ) ,( ( Min( CRS ,FirstVNF_Mem_Server ) / ( DDR + FirstVNF_Mem ) ) - Max( BR,( BR / ARS ) ) ) ) ) + ( DDR / FirstVNF_RAM ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( RCSe / MUM ),MUC ) * ( RRSe / MLU ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / ( RMSe + DS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.23705179282868527, "obj2": 0.6393395150082117}, {"determining": "( ( DDR * ARS ) + ( ( PN / ( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_RAM_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) )", "choosing": "( Max( ( MUC * Min( RCSe ,( RMSe - RRSe ) ) ),CS ) + ( ( ( Min( ( ( ( MLU / RRSe ) - RRSe ) + Max( Max( MLU,MLU ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) / Min( ( DS * RRSe ) ,MLU ) ) + MUR ) )", "obj1": 0.9322709163346613, "obj2": 0.02808028582759954}, {"determining": "( ( Max( DDR,Min( FirstVNF_CPU_Server ,CRS ) ) * CRS ) + ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( DDR / FirstVNF_RAM_Server ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( ( Min( MUM ,( RRSe / RMSe ) ) / RMSe ),( RRSe * MUM ) ) + ( ( CS / MLU ) / DS ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + RRSe )", "obj1": 0.6812749003984063, "obj2": 0.16942035236994973}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const + FirstVNF_CPU_Server ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( Max( ( DS / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) / DS ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.4681274900398406, "obj2": 0.33471126878481133}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( Max( Min( ARS ,CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( Min( ( ( RCSe / MUC ) + RCSe ) ,( RCSe * ( ( RCSe - MLU ) / MUR ) ) ) + CS ) ) ) / CS )", "obj1": 0.18326693227091634, "obj2": 0.6897589377809513}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.23904382470119523, "obj2": 0.6301328295187397}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5139442231075697, "obj2": 0.2901901291772171}, {"determining": "( ( ( ( PN / ( ( DDR * ( FirstVNF_Mem + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ACS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * ( RCSe * CS ) ),( MUR / ( ( CS * ( RCSe - ( RCSe / RRSe ) ) ) - ( CS * RCSe ) ) ) ) + Min( ( MUM / MUM ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7290836653386454, "obj2": 0.1271940309837095}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( Max( Const,BR ) * CRS ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + ( ( Min( ( DS * DS ) ,MLU ) / ( ( ( Max( ( DS / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) - RMSe ) ) + MUR ) )", "obj1": 0.9661354581673307, "obj2": 0.014601531331218907}, {"determining": "( ( MRS / BR ) + ( ARS + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( CS * MUC ) ,( ( CS * ( MUR * MUM ) ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( CS,DS ) / CS ) ) ) ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5521367462724568}, {"determining": "( ( ACS * ACS ) + ( ( ( MDR - ( ACS * FirstVNF_Mem_Server ) ) / ARS ) / Min( AMS ,( ( ( FirstVNF_CPU + RRS ) + ( ACS - FirstVNF_RAM_Server ) ) + ACS ) ) ) )", "choosing": "Min( ( CS * Max( ( RRSe * MUR ),RMSe ) ) ,( ( RMSe * RRSe ) - ( CS * ( Max( Max( DS,MLU ),( Max( RMSe,CS ) + ( ( DS - DS ) + Max( CS,RMSe ) ) ) ) * CS ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5357735856526976}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / Max( AMS,BR ) ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( ( MLU * DS ) / MLU ) ) ) * ( ( Max( RRSe,MLU ) / MUR ) / DS ) ) ) + Max( ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.398406374501992, "obj2": 0.4312007880243671}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + FirstVNF_RAM_Server ) * ( Const + FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server / Const ) / BR ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( DS / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( RRSe + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / MUM ) / DS ) ) ) )", "obj1": 0.647410358565737, "obj2": 0.19034547507221253}, {"determining": "( ( FirstVNF_CPU_Server * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( RRS / PN ) - ( ( BR / FirstVNF_CPU_Server ) + CRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( Max( DS,( ( ( ( MUC / MLU ) * Min( Min( MUM ,CS ) ,( DS - MUC ) ) ) * RMSe ) - Max( DS,( ( ( CS * MUC ) / RMSe ) / Max( Max( MUC,MLU ),RMSe ) ) ) ) ) - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + ( RRSe * Max( Min( MUM ,MLU ),RRSe ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.2532952780167702}, {"determining": "( ( Max( BR,( ( ARS + ( CRS - ( Max( BR,ACS ) + ( MRS + PN ) ) ) ) / FirstVNF_CPU_Server ) ) * CRS ) / ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * ( FirstVNF_RAM_Server * MDR ) ) * Min( ( DDR + ( ( AMS / FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,ACS ) ) )", "choosing": "( ( ( MLU * RRSe ) * ( Min( MUC ,( ( ( MLU + CS ) * DS ) * MLU ) ) * ( ( ( Min( ( CS * MLU ) ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1294820717131474, "obj2": 0.754782503769634}, {"determining": "( ( Const + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Max( BR,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Max( ( FirstVNF_RAM / MRS ),FirstVNF_Mem ) ) / ( FirstVNF_RAM / ARS ) ) ) ) ) + ( ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * DS ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) / Max( ( ( DS / MUR ) + ( MLU * Max( RRSe,MUM ) ) ),RRSe ) )", "obj1": 0.18725099601593626, "obj2": 0.6817292305118411}, {"determining": "( ( ( ( PN / ( FirstVNF_CPU_Server * Min( Min( ARS ,Max( AMS,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( DS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MUM + MUM ) ) ) ) ) + CS ) ) )", "obj1": 0.8067729083665338, "obj2": 0.08000737257718171}, {"determining": "( ( ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) * ( Max( AMS,( Max( Const,( CRS * FirstVNF_Mem_Server ) ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / MDR ) ) - Max( MRS,Min( FirstVNF_CPU ,( RRS / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Min( ( CS * ( ( ( MLU + CS ) * Min( MUC ,RRSe ) ) * ( ( ( RRSe / Min( MUM ,MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( RCSe / ( Max( CS,Max( MUM,MUR ) ) / ( ( ( RRSe - CS ) + ( MLU + MUM ) ) - ( MUC - CS ) ) ) ) ) ) + ( MLU * RRSe ) )", "obj1": 0.3784860557768924, "obj2": 0.4518565150723269}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( Max( AMS,( ( BR / Const ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / Max( AMS,BR ) ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ACS ) ) ) ) ) )", "choosing": "( Min( ( MUR + MUC ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MLU ) / MUR ) / DS ) ) ) + Max( ( MUM * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.4103585657370518, "obj2": 0.41630986272000586}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( ( DDR * Min( ARS ,FirstVNF_CPU ) ) / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + ( CS / MUM ) )", "obj1": 0.7450199203187251, "obj2": 0.1184032185860654}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7071713147410359, "obj2": 0.14164177789044294}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.28286852589641437, "obj2": 0.5716025074141267}, {"determining": "( Min( Max( ( FirstVNF_Mem + ( Min( ( Max( MRS,DDR ) / DDR ) ,FirstVNF_Mem_Server ) * ( DDR / MRS ) ) ),CRS ) ,( RRS + FirstVNF_CPU ) ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( ( ( RCSe / RCSe ) - MUM ) * RRSe ) / Min( ( RRSe * MLU ) ,DS ) )", "obj1": 0.19322709163346613, "obj2": 0.6797569610945424}], "27": [{"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( ( BR - FirstVNF_CPU ) + ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) ,( Max( AMS,( DDR - ARS ) ) / ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( RCSe / ( ( ( RRSe / ( MUM + MUC ) ) - DS ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( DS / ( RRSe - MUM ) ) + Max( MUR,( RRSe - MUM ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ( FirstVNF_Mem + BR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + Max( RCSe,MUC ) ) ) )", "obj1": 0.8545816733067729, "obj2": 0.05468814164015639}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,Min( ACS ,MDR ) ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( ( DDR - ARS ) / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( CS - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6175298804780877, "obj2": 0.21116205168634442}, {"determining": "( ( ( ( PN / ( FirstVNF_CPU_Server * Min( Min( ARS ,Max( MRS,AMS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( ( Const / RRS ) / PN ) - DDR ) ,Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( DS + CS ) - Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + Min( ( MLU * MUC ) ,CS ) ) * ( ( Max( ( MUC - RCSe ),MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MUM + MUM ) ) ) ) ) + CS ) ) )", "obj1": 0.8884462151394422, "obj2": 0.041676883728254704}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( ( ( PN / ( DDR * ( ( AMS / FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ) - ( ARS + ( MRS * PN ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) ) ,( ( CS + ( MLU - CS ) ) * ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) ) ) )", "obj1": 0.6394422310756972, "obj2": 0.19571569424167487}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ( FirstVNF_RAM_Server + MDR ) / ( FirstVNF_Mem + ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / ACS ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( MUM + RRSe ) - Max( RRSe,( ( MLU / CS ) * Min( DS ,RRSe ) ) ) ) ) ) ,( ( Max( ( MUC * CS ),( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( ( RCSe * CS ),( ( DS / RMSe ) * MUC ) ) )", "obj1": 0.44223107569721115, "obj2": 0.3694104158059036}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( Max( CRS,( FirstVNF_Mem + ACS ) ) + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( RRSe * DS ) ) + MUM ) + ( MUM * MUR ) ) ) )", "obj1": 0.8286852589641435, "obj2": 0.06502405201726108}, {"determining": "( ( Max( MDR,RRS ) + FirstVNF_Mem ) + Min( ( ( MDR / AMS ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( ( MUC * MLU ),Min( MUR ,RCSe ) ) ) / DS ) / DS ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RMSe * RCSe ) ,( Min( CS ,RMSe ) + ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) ) ) ) )", "obj1": 0.21713147410358566, "obj2": 0.656778127748607}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( ( RRS - PN ) - ( Max( AMS,Max( DDR,ARS ) ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / Min( PN ,DDR ) ) - ARS ) ,( ( ( Const * FirstVNF_CPU_Server ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe + ( RMSe - ( ( Max( MLU,MUM ) * Max( RRSe,DS ) ) + DS ) ) ) + Max( MUC,( MUC * MUR ) ) )", "obj1": 0.4601593625498008, "obj2": 0.3434644245378344}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( Min( ( FirstVNF_Mem + BR ) ,Const ) ,FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ARS ) ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe * RMSe ) / ( RRSe * DS ) ) * ( MUR - ( RCSe * RMSe ) ) ) ) / ( Max( MUM,DS ) + CS ) )", "obj1": 0.22111553784860558, "obj2": 0.6419533427558984}, {"determining": "( ( FirstVNF_CPU_Server * ( BR - ( FirstVNF_Mem - RRS ) ) ) + ( ( FirstVNF_RAM_Server + ( Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_Mem ) ) * ( ( ( FirstVNF_Mem / ( ( ARS / BR ) * Const ) ) + ARS ) / ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( RCSe * Min( RCSe ,MUR ) ) * CS ) ,Min( ( ( MLU - CS ) + Max( MUR,( RRSe - ( ( MLU + MUR ) / MUM ) ) ) ) ,( ( MUM + RRSe ) / Max( ( Min( RCSe ,MUM ) * RCSe ),RRSe ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.4945228237051121}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,Min( ACS ,MDR ) ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( ( DDR - ARS ) / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( CS - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6075697211155379, "obj2": 0.21740540273304693}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_CPU_Server + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU ,ARS ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - ( ( Min( FirstVNF_CPU ,( ( MRS / FirstVNF_CPU ) + AMS ) ) - BR ) * DDR ) ) - ( ( FirstVNF_RAM_Server + ARS ) / Max( AMS,( DDR - AMS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( PN + ACS ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) * ( ( MUM - ( RMSe - CS ) ) - Max( CS,Min( ( CS + Max( MUR,RCSe ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * Min( Min( RMSe ,MUC ) ,MUM ) ) ) ,( Max( MUM,MUM ) / ( Min( MUM ,( MUC * MLU ) ) + Max( RMSe,RMSe ) ) ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.4940239043824701, "obj2": 0.3044021123163963}, {"determining": "( ( ( ( PN / ( FirstVNF_CPU * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Max( Min( FirstVNF_CPU_Server ,BR ),RRS ) ),Min( ( FirstVNF_Mem_Server * Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,ACS ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe + MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / Max( CS,MUC ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5936254980079682, "obj2": 0.22735582120491193}, {"determining": "( ( FirstVNF_CPU_Server * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( RRS / PN ) - ( ( BR / FirstVNF_CPU_Server ) + CRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( Max( DS,( ( ( ( MUC / MLU ) * Min( Min( MUM ,CS ) ,( DS - MUC ) ) ) * RMSe ) - Max( DS,( ( ( CS * MUC ) / RMSe ) / Max( Max( MUC,MLU ),RMSe ) ) ) ) ) - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + ( RRSe * Max( Min( MUM ,MLU ),RRSe ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.2532952780167702}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( MRS - Max( ARS,AMS ) ) * CRS ) )", "choosing": "( ( ( ( ( RRSe + ( MLU * MUR ) ) / ( ( ( ( CS / CS ) * ( MLU - CS ) ) * MUR ) * DS ) ) * ( ( RRSe - MUM ) + RRSe ) ) * RRSe ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7888757897041578}, {"determining": "( ( FirstVNF_CPU_Server * ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.4940485095244952}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( MUM / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.40479366875772504}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( AMS / ( Min( Const ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( RMSe + RRSe ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.39017701656130627}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( Max( FirstVNF_RAM,CRS ) - FirstVNF_RAM ) ) * ( ( Min( ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * Min( MUM ,DS ) ) + Min( ( MLU / ( Max( ( Min( ( MUM / RMSe ) ,RMSe ) + ( ( CS + CS ) * MUC ) ),RCSe ) * ( RMSe / ( MUM - RRSe ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7151394422310757, "obj2": 0.13793892355310597}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,MDR ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( Min( FirstVNF_RAM_Server ,( ( ( FirstVNF_CPU_Server - AMS ) * FirstVNF_RAM_Server ) / ( FirstVNF_CPU - Const ) ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),Max( ( MUC + MUR ),MUR ) ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + DS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / MUM ) / DS ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.16429834816950442}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.20119521912350596, "obj2": 0.6644567269549355}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - CRS ) + ( ( ( PN / Max( DDR,FirstVNF_Mem ) ) - DDR ) - ( FirstVNF_Mem / ( DDR * Min( ( ( ( MDR / PN ) - FirstVNF_CPU ) + Max( DDR,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM + ( ( Min( ( Max( RCSe,MLU ) + RRSe ) ,Max( ( CS - MLU ),RMSe ) ) / RMSe ) - CS ) ) ,( ( ( DS / Min( Max( ( DS - MLU ),RCSe ) ,RCSe ) ) + ( ( CS / MLU ) / MUR ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( Max( ( RRSe / RRSe ),( MLU * DS ) ) ,MLU ) ) ) + CS ) ) )", "obj1": 0.7609561752988048, "obj2": 0.10766315126064974}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( CRS + AMS ) ) ) + ( Max( ( FirstVNF_Mem + ARS ),( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( Min( MUR ,( RCSe - RCSe ) ) - Min( ( ( RMSe + CS ) + CS ) ,MUC ) ) )", "obj1": 0.5059760956175299, "obj2": 0.3011656631330037}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) + Min( ( CRS * ( Max( MDR,MDR ) + ARS ) ) ,DDR ) )", "choosing": "( Min( MLU ,RCSe ) + ( ( Min( Max( DS,RRSe ) ,MLU ) / ( RRSe * Max( MUC,DS ) ) ) + MUR ) )", "obj1": 0.9402390438247012, "obj2": 0.02482510431966823}, {"determining": "( ( ( ( PN / ( DDR * Min( FirstVNF_CPU_Server ,Min( ( PN / MRS ) ,Max( AMS,BR ) ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server - ARS ) ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) / RRSe ) - Max( RRSe,( MUC * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( DS * ( MUM + ( MLU + RRSe ) ) ) / ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.14702996962103082}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( ( DDR * Min( ARS ,FirstVNF_CPU ) ) / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + ( CS / MUM ) )", "obj1": 0.7450199203187251, "obj2": 0.1184032185860654}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ARS ) / Min( RRS ,DDR ) ) - DDR ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( MRS + Max( FirstVNF_RAM,( CRS * FirstVNF_Mem_Server ) ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_Mem ) * ( ( FirstVNF_Mem - Min( ( BR * MRS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RRSe + MLU ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( MLU * MUR ) ) ) * ( ( ( Min( MUC ,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.36254980079681276, "obj2": 0.4830382513243168}, {"determining": "( ( ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) - ( ( AMS * ( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server / Const ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( CS / MLU ) ) ,( ( Max( MUR,( RRSe - ( Min( MUC ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * Min( RRSe ,RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5756972111553785, "obj2": 0.2430814914789655}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( ( MUC / RRSe ) * ( MLU / RRSe ) ) ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RCSe * RMSe ) ,( Max( RCSe,MUC ) / Max( RMSe,MLU ) ) ) )", "obj1": 0.48804780876494025, "obj2": 0.32237205364225097}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem * ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( Max( AMS,FirstVNF_CPU ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( ( CRS * FirstVNF_Mem_Server ) / DDR ) ) - Min( ( ( MDR / Min( RRS ,ACS ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * MUC ) - ( CS * ( RCSe - ( RCSe / Max( RCSe,MLU ) ) ) ) ) ) ) + ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - ( ( MUM / MUC ) + RCSe ) ) ) - ( Min( Min( RMSe ,MUC ) ,MUC ) - ( MUC - RCSe ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.09550747951967455}, {"determining": "Min( ( FirstVNF_CPU_Server * RRS ) ,( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( ( FirstVNF_CPU - DDR ),ARS ) ) ,( ACS - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( ( CS + ( MUM + DS ) ) + ( MUC + ( RMSe / MUR ) ) ) / ( CS / CS ) ) + MUM ) + ( ( ( MLU * Min( Min( MLU ,MUM ) ,Max( MUC,RCSe ) ) ) - CS ) * MUR ) ) ) )", "obj1": 0.3665338645418327, "obj2": 0.4751280964737322}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( MRS / BR ) + ( ARS + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( CS * MUC ) ,( ( CS * ( MUR * MUM ) ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( CS,DS ) / CS ) ) ) ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5521367462724568}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( ( AMS + ( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( PN + MDR ) * ( Min( CRS ,FirstVNF_CPU ) - AMS ) ) / FirstVNF_RAM ) )", "choosing": "( ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) + ( RMSe / CS ) )", "obj1": 0.3705179282868526, "obj2": 0.46093277895774953}, {"determining": "( ( FirstVNF_Mem + BR ) + Max( DDR,ARS ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( ( MUC / RRSe ) * ( MLU / RRSe ) ) ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RCSe * RMSe ) ,( Max( RCSe,MUC ) / Max( RMSe,MLU ) ) ) )", "obj1": 0.1752988047808765, "obj2": 0.710370588176065}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( ( PN + CRS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( PN + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC - RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) + ( CS * ( RCSe * ( Min( ( RRSe / ( MUM + MUC ) ) ,RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) )", "obj1": 0.23705179282868527, "obj2": 0.6363547091433022}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,( RRS / AMS ) ) ) * ( ( BR - FirstVNF_CPU ) + ( PN - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + RRS ) ) ) + ( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( ( MUR * RRSe ) / RCSe ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / RCSe ) / DS ) ) ) )", "obj1": 0.8725099601593626, "obj2": 0.053254127488468916}, {"determining": "( Max( Max( ARS,Const ),ACS ) + ( RRS + MRS ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * Min( RMSe ,Min( ( MUC + Max( DS,MUM ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5657803926494337}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( ( MRS + MRS ) + ( Max( DDR,FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( ( ( ( MUR * ( ( MUR + DS ) / ( MLU * ( RCSe - ( MUM * CS ) ) ) ) ) * ( MUM * Min( ( ( MLU / ( DS * DS ) ) * MUR ) ,MUR ) ) ) - CS ) + Min( Max( Min( Min( DS ,DS ) ,Max( MUR,MUR ) ),DS ) ,Max( Max( Min( ( MLU / RRSe ) ,RMSe ),MLU ),MLU ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6272215552082994}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( DS / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / ( MUC + ( RMSe / MUC ) ) ) / DS ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.18289051813898421}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + ( ( DS / ( Min( ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0033410316151173953}, {"determining": "( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU - ACS ) - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( Max( ( FirstVNF_Mem + ARS ),( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( MUC / RRSe ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + RRSe )", "obj1": 0.4262948207171315, "obj2": 0.37891765415740997}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ARS ) / Min( RRS ,DDR ) ) - Min( ( MRS / FirstVNF_Mem_Server ) ,ACS ) ) - Min( FirstVNF_Mem_Server ,( Const / ( ( FirstVNF_RAM / ( CRS * ( CRS - FirstVNF_Mem ) ) ) + MRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( ( ACS + PN ) / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS * DS ) + Max( ( MUC * ( ( MUC - ( Max( RRSe,CS ) / MUC ) ) - ( ( RRSe - Max( ( DS / MUC ),( MUC - MLU ) ) ) + RMSe ) ) ),Max( MUC,MUC ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5124358274969616}, {"determining": "Min( ( Max( ( MDR / Min( FirstVNF_RAM_Server ,MDR ) ),ACS ) * RRS ) ,( ( ( ( Min( RRS ,BR ) / DDR ) + ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( Max( MUC,MUM ) / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,Max( ( Max( MUR,( RRSe - MUM ) ) + MLU ),( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) + MUR ) / DS ) ) ) + Max( Max( ( MUM + MUM ),MUC ),( MUC * MUC ) ) )", "obj1": 0.40836653386454186, "obj2": 0.42479570095431823}, {"determining": "( ( ( ( PN / ( ( DDR * ( FirstVNF_Mem + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ACS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * ( RCSe * CS ) ),( MUR / ( ( CS * ( RCSe - ( RCSe / RRSe ) ) ) - ( CS * RCSe ) ) ) ) + Min( ( MUM / MUM ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7290836653386454, "obj2": 0.1271940309837095}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( Max( AMS,( ( BR / Const ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / Max( AMS,BR ) ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ACS ) ) ) ) ) )", "choosing": "( Min( ( MUR + MUC ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MLU ) / MUR ) / DS ) ) ) + Max( ( MUM * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.4103585657370518, "obj2": 0.41630986272000586}, {"determining": "( ( ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) - ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_CPU ) ) ) - DDR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( ( MLU * RRSe ) + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) * ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) ) ) )", "obj1": 0.5856573705179283, "obj2": 0.23434918800446122}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_Mem ,DDR ) ) * Min( Max( DDR,ACS ) ,FirstVNF_CPU ) ) * Min( Min( ( FirstVNF_Mem - ARS ) ,( AMS * BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( RRSe,( ( ( ( MUC / CS ) * Min( DS ,MUM ) ) * ( ( Max( RMSe,RRSe ) - MUC ) / RCSe ) ) / DS ) ) * ( ( RMSe / ( RCSe / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MLU * CS ) ) + ( ( RCSe * CS ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.749003984063745, "obj2": 0.1124581940753405}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RRSe - ( ( CS * Max( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ),Max( RRSe,MUC ) ) ) + CS ) ) )", "obj1": 0.8147410358565738, "obj2": 0.06880979549502522}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) + ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( FirstVNF_Mem / ( ( ACS + FirstVNF_CPU_Server ) * Min( ACS ,CRS ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( Max( ( ( MUC * MUC ) - MLU ),MUC ) ,( Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * MUM ) ) ,( Max( MUM,MUM ) + CS ) ) - RCSe ) ) ,( MUR - MUR ) )", "obj1": 0.7848605577689243, "obj2": 0.08758618088651295}, {"determining": "( ( FirstVNF_CPU_Server * ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5322691322596936}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) - MDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * BR ) )", "choosing": "( Max( RRSe,( Max( RRSe,DS ) * ( ( ( Max( ( RCSe / RMSe ),MUC ) * ( RCSe / RRSe ) ) / MUM ) / DS ) ) ) / Max( Min( ( CS - Max( MUC,MUM ) ) ,MUR ),( MUR / MUR ) ) )", "obj1": 0.9083665338645418, "obj2": 0.04020716509323726}, {"determining": "( ( Max( Min( ( ARS + Min( DDR ,FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ),DDR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / Max( RRSe,DS ) ) * ( ( ( Min( ( CS * CS ) ,Min( CS ,MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1254980079681275, "obj2": 0.7624712958089915}, {"determining": "( ( ( ( PN / ( DDR * ( ( AMS / FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_RAM ,BR ) ) - FirstVNF_CPU ) + ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( DS,MUM ) + ( ( Min( DS ,( MUR - CS ) ) / ( MLU / RCSe ) ) / MUR ) ) + Min( ( CS * ( RCSe * ( Max( RRSe,( ( MLU + CS ) * DS ) ) - ( ( RRSe / ( RMSe + RCSe ) ) - RRSe ) ) ) ) ,( ( CS + ( CS - MLU ) ) * ( Min( ( CS + Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5338645418326693, "obj2": 0.2730147915915507}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ( FirstVNF_RAM / MRS ) * FirstVNF_RAM ) - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,Min( ( DS - RMSe ) ,MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - MUM ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.45212168947440057}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5139442231075697, "obj2": 0.2901901291772171}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7071713147410359, "obj2": 0.14164177789044294}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.8047808764940239, "obj2": 0.07788308834024947}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.1269690469071632}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ( FirstVNF_RAM * DDR ) ) ) * ( ( FirstVNF_Mem - Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ARS ) ,( ( FirstVNF_RAM + RRS ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) + Max( DDR,ARS ) )", "choosing": "( ( ( RCSe * ( ( Min( RRSe ,( Max( CS,MUM ) + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + MUM ) * Min( MUC ,RRSe ) ) ) ) ) + ( MUC + ( Max( MUC,MUC ) * MUC ) ) ) / ( Min( MLU ,MUC ) / MUR ) )", "obj1": 0.32669322709163345, "obj2": 0.5180801089363457}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / Max( AMS,BR ) ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( ( MLU * DS ) / MLU ) ) ) * ( ( Max( RRSe,MLU ) / MUR ) / DS ) ) ) + Max( ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.398406374501992, "obj2": 0.4312007880243671}, {"determining": "( ( CRS * Max( Const,BR ) ) / Max( ( BR / MRS ),PN ) )", "choosing": "( ( RRSe * ( Max( RMSe,( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( ( RCSe - MUR ) ,( CS + RMSe ) ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.199203187250996, "obj2": 0.6747917844320955}, {"determining": "( ( DDR * ARS ) + ( ( PN / ( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_RAM_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) )", "choosing": "( Max( ( MUC * Min( RCSe ,( RMSe - RRSe ) ) ),CS ) + ( ( ( Min( ( ( ( MLU / RRSe ) - RRSe ) + Max( Max( MLU,MLU ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) / Min( ( DS * RRSe ) ,MLU ) ) + MUR ) )", "obj1": 0.9322709163346613, "obj2": 0.02808028582759954}, {"determining": "( ( Max( Min( ARS ,CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( Min( ( ( RCSe / MUC ) + RCSe ) ,( RCSe * ( ( RCSe - MLU ) / MUR ) ) ) + CS ) ) ) / CS )", "obj1": 0.18326693227091634, "obj2": 0.6897589377809513}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( AMS + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( ACS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( FirstVNF_Mem + ( AMS / FirstVNF_RAM ) ) * Min( RRS ,( AMS - FirstVNF_RAM ) ) ) ,( ACS / DDR ) ) - Min( ( Max( ( RRS * AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Min( DS ,RMSe ) * MUC ),Min( ( RRSe - MUC ) ,( DS / Min( ( MUM + MUM ) ,MUR ) ) ) ) + Min( ( CS * ( ( CS * CS ) / ( ( CS + MUC ) + ( ( MUC * ( MUC / RRSe ) ) / ( ( MUM * MUR ) / MUC ) ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7768924302788844, "obj2": 0.09285637938224871}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( Max( Const,BR ) * CRS ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + ( ( Min( ( DS * DS ) ,MLU ) / ( ( ( Max( ( DS / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) - RMSe ) ) + MUR ) )", "obj1": 0.9661354581673307, "obj2": 0.014302868034152932}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( Max( AMS,( Max( Const,BR ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( ( ( MLU + CS ) * Min( MUC ,RRSe ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.39641434262948205, "obj2": 0.4364728110149162}, {"determining": "( ( FirstVNF_CPU_Server * ( PN * ( ( BR + Const ) - Min( MRS ,ARS ) ) ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( RRSe,( Max( RRSe,DS ) * ( ( MUM / ( Max( ( RMSe / RCSe ),MUM ) * ( RRSe / RRSe ) ) ) / DS ) ) ) ,( RRSe - ( ( CS * Max( Min( DS ,MLU ),( CS / DS ) ) ) + CS ) ) )", "obj1": 0.9741035856573705, "obj2": 0.008020213757594985}, {"determining": "( ( ACS * ACS ) + ( ( ( MDR - ( ACS * FirstVNF_Mem_Server ) ) / ARS ) / Min( AMS ,( ( ( FirstVNF_CPU + RRS ) + ( ACS - FirstVNF_RAM_Server ) ) + ACS ) ) ) )", "choosing": "Min( ( CS * Max( ( RRSe * MUR ),RMSe ) ) ,( ( RMSe * RRSe ) - ( CS * ( Max( Max( DS,MLU ),( Max( RMSe,CS ) + ( ( DS - DS ) + Max( CS,RMSe ) ) ) ) * CS ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5357735856526976}, {"determining": "( ( ( ( PN / ( FirstVNF_CPU_Server * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( DS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.8027888446215139, "obj2": 0.08152938154380227}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / FirstVNF_RAM ) - ( FirstVNF_CPU_Server * MRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( MUR / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( RRSe + ( MUR / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.4820717131474104, "obj2": 0.3297798953738958}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + FirstVNF_RAM_Server ) * ( Const + FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server / Const ) / BR ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( MUR / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( RRSe + ( MUR / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.647410358565737, "obj2": 0.19017109389031214}, {"determining": "( ( Max( BR,( ( ARS + ( CRS - ( Max( BR,ACS ) + ( MRS + PN ) ) ) ) / FirstVNF_CPU_Server ) ) * CRS ) / ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * ( FirstVNF_RAM_Server * MDR ) ) * Min( ( DDR + ( ( AMS / FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,ACS ) ) )", "choosing": "( ( ( MLU * RRSe ) * ( Min( MUC ,( ( ( MLU + CS ) * DS ) * MLU ) ) * ( ( ( Min( ( CS * MLU ) ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1294820717131474, "obj2": 0.754782503769634}, {"determining": "( ( Const + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Max( BR,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Max( ( FirstVNF_RAM / MRS ),FirstVNF_Mem ) ) / ( FirstVNF_RAM / ARS ) ) ) ) ) + ( ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * DS ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) / Max( ( ( DS / MUR ) + ( MLU * Max( RRSe,MUM ) ) ),RRSe ) )", "obj1": 0.18725099601593626, "obj2": 0.6817292305118411}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * Min( RMSe ,Min( ( MUC + Max( DS,MUM ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5854519029494382}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),RRS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - ( ( Min( MLU ,RRSe ) - MUC ) + MUM ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) + ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3784860557768924, "obj2": 0.44397816549502916}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / Max( ( DS / RCSe ),MUC ) ) ) + Min( ( CS * ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( RMSe / MUC ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.6832669322709163, "obj2": 0.16689712168561752}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_CPU_Server ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( FirstVNF_RAM_Server + ARS ) + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,CS ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( Max( MUC,RRSe ) * ( ( RMSe / ( MUR * ( ( CS * MUR ) - Max( RCSe,RRSe ) ) ) ) - Min( ( ( DS / RRSe ) + Min( ( CS * RRSe ) ,Max( MUR,RMSe ) ) ) ,( ( RMSe / ( RCSe - MUM ) ) / MLU ) ) ) ) ) )", "obj1": 0.38645418326693226, "obj2": 0.4411665110287367}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6633466135458167, "obj2": 0.17807461778245437}, {"determining": "( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.23904382470119523, "obj2": 0.6301328295187397}], "28": [{"determining": "( ( ( ( PN / ( FirstVNF_CPU_Server * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( DS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( MUC + MUC ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( Max( Max( ARS,Const ),ACS ) + ( RRS + MRS ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * Min( RMSe ,Min( ( MUC + Max( DS,MUM ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5657803926494337}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( Max( Const,BR ) * CRS ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + ( ( Min( ( DS * DS ) ,MLU ) / ( ( ( Max( ( DS / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) - RMSe ) ) + MUR ) )", "obj1": 0.9661354581673307, "obj2": 0.014302868034152932}, {"determining": "( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU - ACS ) - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( Max( ( FirstVNF_Mem + ARS ),( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( MUC / RRSe ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + RRSe )", "obj1": 0.4262948207171315, "obj2": 0.37891765415740997}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) + Min( ( CRS * ( Max( MDR,MDR ) + ARS ) ) ,DDR ) )", "choosing": "( Min( MLU ,RCSe ) + ( ( Min( Max( DS,RRSe ) ,MLU ) / ( RRSe * Max( MUC,DS ) ) ) + MUR ) )", "obj1": 0.9402390438247012, "obj2": 0.02482510431966823}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ( FirstVNF_Mem + BR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + Max( RCSe,MUC ) ) ) )", "obj1": 0.8545816733067729, "obj2": 0.05468814164015639}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) - MDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * BR ) )", "choosing": "( Max( RRSe,( Max( RRSe,DS ) * ( ( ( Max( ( RCSe / RMSe ),MUC ) * ( RCSe / RRSe ) ) / MUM ) / DS ) ) ) / Max( Min( ( CS - Max( MUC,MUM ) ) ,MUR ),( MUR / MUR ) ) )", "obj1": 0.9083665338645418, "obj2": 0.04020716509323726}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ( ( ( MDR / PN ) - ( MRS - FirstVNF_RAM_Server ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( Max( DS,Max( CS,DS ) ) + RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( ( ( ( MLU + RCSe ) * RMSe ) * DS ),( DS / RCSe ) ) ) ) ) )", "obj1": 0.44223107569721115, "obj2": 0.36495586478386455}, {"determining": "( ( FirstVNF_CPU_Server * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( RRS / PN ) - ( ( BR / FirstVNF_CPU_Server ) + CRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( Max( DS,( ( ( ( MUC / MLU ) * Min( Min( MUM ,CS ) ,( DS - MUC ) ) ) * RMSe ) - Max( DS,( ( ( CS * MUC ) / RMSe ) / Max( Max( MUC,MLU ),RMSe ) ) ) ) ) - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + ( RRSe * Max( Min( MUM ,MLU ),RRSe ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.2532952780167702}, {"determining": "( ( Max( MDR,RRS ) + FirstVNF_Mem ) + Min( ( ( MDR / AMS ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( ( MUC * MLU ),Min( MUR ,RCSe ) ) ) / DS ) / DS ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RMSe * RCSe ) ,( Min( CS ,RMSe ) + ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) ) ) ) )", "obj1": 0.21713147410358566, "obj2": 0.656778127748607}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( ( MUC / RRSe ) * ( MLU / RRSe ) ) ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RCSe * RMSe ) ,( Max( RCSe,MUC ) / Max( RMSe,MLU ) ) ) )", "obj1": 0.48804780876494025, "obj2": 0.32237205364225097}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( ( RRS - PN ) - ( Max( AMS,Max( DDR,ARS ) ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / Min( PN ,DDR ) ) - ARS ) ,( ( ( Const * FirstVNF_CPU_Server ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe + ( RMSe - ( ( Max( MLU,MUM ) * Max( RRSe,DS ) ) + DS ) ) ) + Max( MUC,( MUC * MUR ) ) )", "obj1": 0.4601593625498008, "obj2": 0.3434644245378344}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( Min( ( FirstVNF_Mem + BR ) ,Const ) ,FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ARS ) ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe * RMSe ) / ( RRSe * DS ) ) * ( MUR - ( RCSe * RMSe ) ) ) ) / ( Max( MUM,DS ) + CS ) )", "obj1": 0.22111553784860558, "obj2": 0.6419533427558984}, {"determining": "( ( FirstVNF_CPU_Server * ( BR - ( FirstVNF_Mem - RRS ) ) ) + ( ( FirstVNF_RAM_Server + ( Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_Mem ) ) * ( ( ( FirstVNF_Mem / ( ( ARS / BR ) * Const ) ) + ARS ) / ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( RCSe * Min( RCSe ,MUR ) ) * CS ) ,Min( ( ( MLU - CS ) + Max( MUR,( RRSe - ( ( MLU + MUR ) / MUM ) ) ) ) ,( ( MUM + RRSe ) / Max( ( Min( RCSe ,MUM ) * RCSe ),RRSe ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.4945228237051121}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_CPU_Server + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU ,ARS ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - ( ( Min( FirstVNF_CPU ,( ( MRS / FirstVNF_CPU ) + AMS ) ) - BR ) * DDR ) ) - ( ( FirstVNF_RAM_Server + ARS ) / Max( AMS,( DDR - AMS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( PN + ACS ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) * ( ( MUM - ( RMSe - CS ) ) - Max( CS,Min( ( CS + Max( MUR,RCSe ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * Min( Min( RMSe ,MUC ) ,MUM ) ) ) ,( Max( MUM,MUM ) / ( Min( MUM ,( MUC * MLU ) ) + Max( RMSe,RMSe ) ) ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.4940239043824701, "obj2": 0.3044021123163963}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( AMS / ( Min( Const ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( RMSe + RRSe ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.39017701656130627}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( ( ( ( FirstVNF_CPU + RRS ) / PN ) - FirstVNF_CPU ),Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( ( ( MLU + MUM ) - ( Min( MUR ,( MUM * Max( RMSe,Max( RRSe,MUM ) ) ) ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( ( RMSe * Max( DS,MUM ) ) - ( ( MUM + Max( ( ( ( RCSe * RRSe ) / ( DS + RMSe ) ) * MUR ),( Max( DS,MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42916702762323905}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( MRS - Max( ARS,AMS ) ) * CRS ) )", "choosing": "( ( ( ( ( RRSe + ( MLU * MUR ) ) / ( ( ( ( CS / CS ) * ( MLU - CS ) ) * MUR ) * DS ) ) * ( ( RRSe - MUM ) + RRSe ) ) * RRSe ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7888757897041578}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU ) * RRS ) - FirstVNF_CPU ) + ( ( ARS - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( Max( Const,Const ) + CRS ) ) )", "choosing": "( Min( ( ( RCSe * ( ( ( MLU / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MUC * Min( MUC ,RRSe ) ) ) ) ) * ( RRSe * MLU ) ) ,( ( Max( RMSe,( RRSe - MUM ) ) + ( ( CS * MLU ) / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) + ( MLU + MUR ) )", "obj1": 0.6633466135458167, "obj2": 0.17513969504593271}, {"determining": "( ( FirstVNF_CPU_Server * ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.4940485095244952}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,MDR ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( Min( FirstVNF_RAM_Server ,( ( ( FirstVNF_CPU_Server - AMS ) * FirstVNF_RAM_Server ) / ( FirstVNF_CPU - Const ) ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),Max( ( MUC + MUR ),MUR ) ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + DS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / MUM ) / DS ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.16429834816950442}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.20119521912350596, "obj2": 0.6644567269549355}, {"determining": "( ( ( ( PN / ( ( FirstVNF_CPU_Server - Max( MRS,ACS ) ) - Min( MDR ,( ( ACS * RRS ) - BR ) ) ) ) - ( ARS + Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( MLU,( ( MUC + CS ) * DS ) ) ) ) ) ,( ( CS + ( MLU - CS ) ) * ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) ) ) )", "obj1": 0.8346613545816733, "obj2": 0.06250066838732515}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( MUM / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.40479366875772504}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - CRS ) + ( ( ( PN / Max( DDR,FirstVNF_Mem ) ) - DDR ) - ( FirstVNF_Mem / ( DDR * Min( ( ( ( MDR / PN ) - FirstVNF_CPU ) + Max( DDR,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM + ( ( Min( ( Max( RCSe,MLU ) + RRSe ) ,Max( ( CS - MLU ),RMSe ) ) / RMSe ) - CS ) ) ,( ( ( DS / Min( Max( ( DS - MLU ),RCSe ) ,RCSe ) ) + ( ( CS / MLU ) / MUR ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( Max( ( RRSe / RRSe ),( MLU * DS ) ) ,MLU ) ) ) + CS ) ) )", "obj1": 0.7609561752988048, "obj2": 0.10766315126064974}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ARS ) / Min( RRS ,DDR ) ) - Min( ( MRS / FirstVNF_Mem_Server ) ,ACS ) ) - Min( FirstVNF_Mem_Server ,( Const / ( ( FirstVNF_RAM / ( CRS * ( CRS - FirstVNF_Mem ) ) ) + MRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( ( ACS + PN ) / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS * DS ) + Max( ( MUC * ( ( MUC - ( Max( RRSe,CS ) / MUC ) ) - ( ( RRSe - Max( ( DS / MUC ),( MUC - MLU ) ) ) + RMSe ) ) ),Max( MUC,MUC ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5124358274969616}, {"determining": "( ( ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) - ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_CPU ) ) ) - DDR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( ( MLU * RRSe ) + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) * ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) ) ) )", "obj1": 0.5856573705179283, "obj2": 0.23434918800446122}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( ( ( ( PN / ( DDR * Min( FirstVNF_CPU_Server ,Min( ( PN / MRS ) ,Max( AMS,BR ) ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server - ARS ) ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) / RRSe ) - Max( RRSe,( MUC * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( DS * ( MUM + ( MLU + RRSe ) ) ) / ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.14702996962103082}, {"determining": "( ( ( ( PN / ( DDR * ( ( AMS / FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_RAM ,BR ) ) - FirstVNF_CPU ) + ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( DS,MUM ) + ( ( Min( DS ,( MUR - CS ) ) / ( MLU / RCSe ) ) / MUR ) ) + Min( ( CS * ( RCSe * ( Max( RRSe,( ( MLU + CS ) * DS ) ) - ( ( RRSe / ( RMSe + RCSe ) ) - RRSe ) ) ) ) ,( ( CS + ( CS - MLU ) ) * ( Min( ( CS + Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5338645418326693, "obj2": 0.2730147915915507}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( FirstVNF_CPU_Server * ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - MDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUM ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4043824701195219, "obj2": 0.4237309781566681}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( CRS * Max( Const,BR ) ) / Max( ( BR / MRS ),PN ) )", "choosing": "( ( RRSe * ( Max( RMSe,( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( ( RCSe - MUR ) ,( CS + RMSe ) ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.199203187250996, "obj2": 0.6747917844320955}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ARS ) / Min( RRS ,DDR ) ) - DDR ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( MRS + Max( FirstVNF_RAM,( CRS * FirstVNF_Mem_Server ) ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_Mem ) * ( ( FirstVNF_Mem - Min( ( BR * MRS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RRSe + MLU ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( MLU * MUR ) ) ) * ( ( ( Min( MUC ,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.36254980079681276, "obj2": 0.4830382513243168}, {"determining": "( ( ( ( PN / ( FirstVNF_CPU_Server * Min( Min( ARS ,Max( AMS,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8884462151394422, "obj2": 0.041676883728254704}, {"determining": "( ( Const + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Max( BR,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Max( ( FirstVNF_RAM / MRS ),FirstVNF_Mem ) ) / ( FirstVNF_RAM / ARS ) ) ) ) ) + ( ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * DS ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) / Max( ( ( DS / MUR ) + ( MLU * Max( RRSe,MUM ) ) ),RRSe ) )", "obj1": 0.18725099601593626, "obj2": 0.6817292305118411}, {"determining": "Min( ( FirstVNF_CPU_Server * RRS ) ,( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( ( FirstVNF_CPU - DDR ),ARS ) ) ,( ACS - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( ( CS + ( MUM + DS ) ) + ( MUC + ( RMSe / MUR ) ) ) / ( CS / CS ) ) + MUM ) + ( ( ( MLU * Min( Min( MLU ,MUM ) ,Max( MUC,RCSe ) ) ) - CS ) * MUR ) ) ) )", "obj1": 0.3665338645418327, "obj2": 0.4751280964737322}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( MRS / BR ) + ( ARS + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( CS * MUC ) ,( ( CS * ( MUR * MUM ) ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( CS,DS ) / CS ) ) ) ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5521367462724568}, {"determining": "( ( ( ( PN / ( DDR * ( ( FirstVNF_RAM * AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ) - Min( BR ,FirstVNF_RAM ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_CPU * Min( DDR ,DDR ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) ) ,( ( CS + ( MLU - CS ) ) * ( Min( RCSe ,MLU ) / DS ) ) ) )", "obj1": 0.5278884462151394, "obj2": 0.2798634284078463}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( ( AMS + ( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( PN + MDR ) * ( Min( CRS ,FirstVNF_CPU ) - AMS ) ) / FirstVNF_RAM ) )", "choosing": "( ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) + ( RMSe / CS ) )", "obj1": 0.3705179282868526, "obj2": 0.46093277895774953}, {"determining": "( ( FirstVNF_Mem + BR ) + Max( DDR,ARS ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( ( MUC / RRSe ) * ( MLU / RRSe ) ) ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RCSe * RMSe ) ,( Max( RCSe,MUC ) / Max( RMSe,MLU ) ) ) )", "obj1": 0.1752988047808765, "obj2": 0.710370588176065}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ARS - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( AMS - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( Max( Max( RCSe,( MUM + DS ) ),( DS / ( CS / MLU ) ) ) * ( Max( RRSe,MUM ) - DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.40836653386454186, "obj2": 0.4133094918520881}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,( RRS / AMS ) ) ) * ( ( BR - FirstVNF_CPU ) + ( PN - Max( FirstVNF_RAM_Server,CRS ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + RRS ) ) ) + ( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( ( MUR * RRSe ) / RCSe ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / RCSe ) / DS ) ) ) )", "obj1": 0.8725099601593626, "obj2": 0.053254127488468916}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( MRS + MRS ) + ( Max( DDR,FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( ( ( ( MUR * ( ( MUR + DS ) / ( MLU * ( RCSe - ( MUM * CS ) ) ) ) ) * ( MUM * Min( ( ( MLU / ( DS * DS ) ) * MUR ) ,MUR ) ) ) - CS ) + Min( Max( Min( Min( DS ,DS ) ,Max( MUR,MUR ) ),DS ) ,Max( Max( Min( ( MLU / RRSe ) ,RMSe ),MLU ),MLU ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6272215552082994}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( FirstVNF_Mem + ACS ) ) ) ) ) ) )", "choosing": "( Min( ( ( MUC + MUC ) + ( ( MUM - DS ) - Max( CS,Min( ( CS + Max( MUR,RRSe ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * MUM ) ) ,( Max( MUM,MUM ) + CS ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.38247011952191234, "obj2": 0.43992521938633633}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ( FirstVNF_RAM * DDR ) ) ) * ( ( FirstVNF_Mem - Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ARS ) ,( ( FirstVNF_RAM + RRS ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) + Max( DDR,ARS ) )", "choosing": "( ( ( RCSe * ( ( Min( RRSe ,( Max( CS,MUM ) + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + MUM ) * Min( MUC ,RRSe ) ) ) ) ) + ( MUC + ( Max( MUC,MUC ) * MUC ) ) ) / ( Min( MLU ,MUC ) / MUR ) )", "obj1": 0.32669322709163345, "obj2": 0.5180801089363457}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / Max( ( DS / RCSe ),MUC ) ) ) + Min( ( CS * ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( RMSe / MUC ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.6812749003984063, "obj2": 0.17091079653337363}, {"determining": "( ( ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) - ( ( AMS * ( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server / Const ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( CS / MLU ) ) ,( ( Max( MUR,( RRSe - ( Min( MUC ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * Min( RRSe ,RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5756972111553785, "obj2": 0.2430814914789655}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_Mem ,DDR ) ) * Min( Max( DDR,ACS ) ,FirstVNF_CPU ) ) * Min( Min( ( FirstVNF_Mem - ARS ) ,( AMS * BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( RRSe,( ( ( ( MUC / CS ) * Min( DS ,MUM ) ) * ( ( Max( RMSe,RRSe ) - MUC ) / RCSe ) ) / DS ) ) * ( ( RMSe / ( RCSe / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MLU * CS ) ) + ( ( RCSe * CS ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.749003984063745, "obj2": 0.1124581940753405}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( ( ( PN / ( FirstVNF_CPU * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Max( Min( FirstVNF_CPU_Server ,BR ),RRS ) ),Min( ( FirstVNF_Mem_Server * Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,ACS ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe + MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / Max( CS,MUC ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5936254980079682, "obj2": 0.22735582120491193}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( FirstVNF_CPU_Server * ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5322691322596936}, {"determining": "( ( Max( Min( ( ARS + Min( DDR ,FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ),DDR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / Max( RRSe,DS ) ) * ( ( ( Min( ( CS * CS ) ,Min( CS ,MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1254980079681275, "obj2": 0.7624712958089915}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ( FirstVNF_RAM / MRS ) * FirstVNF_RAM ) - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,Min( ( DS - RMSe ) ,MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - MUM ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.45212168947440057}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7071713147410359, "obj2": 0.14164177789044294}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "( ( FirstVNF_CPU_Server * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - MDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( ( ( MLU + MUM ) - ( Min( Min( MUM ,Max( RMSe,Max( RRSe,MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.5717131474103586, "obj2": 0.24746449722395136}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( MRS + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( ( FirstVNF_RAM_Server * ARS ),FirstVNF_RAM ) / CRS ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ACS + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( Max( Min( DS ,( MLU / MUM ) ),Max( ( DS + Max( RMSe,MUR ) ),( DS / ( CS / MUR ) ) ) ) * ( ( ( MUR - ( MLU / MUC ) ) - RRSe ) - Max( ( ( MLU + CS ) * Min( MUC ,RRSe ) ),RRSe ) ) ) ) ,( RRSe + ( MUR / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.601593625498008, "obj2": 0.2238663962764161}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,Min( ACS ,MDR ) ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( ( DDR - ARS ) / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( CS - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6075697211155379, "obj2": 0.21740540273304693}, {"determining": "( ( DDR * ARS ) + ( ( PN / ( ( ( Max( RRS,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_RAM_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) )", "choosing": "( Max( ( MUC * Min( RCSe ,( RMSe - RRSe ) ) ),CS ) + ( ( ( Min( ( ( ( MLU / RRSe ) - RRSe ) + Max( Max( MLU,MLU ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) / Min( ( DS * RRSe ) ,MLU ) ) + MUR ) )", "obj1": 0.9322709163346613, "obj2": 0.02808028582759954}, {"determining": "( ( Max( Min( ARS ,CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( Min( ( ( RCSe / MUC ) + RCSe ) ,( RCSe * ( ( RCSe - MLU ) / MUR ) ) ) + CS ) ) ) / CS )", "obj1": 0.18326693227091634, "obj2": 0.6897589377809513}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),RRS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - ( ( Min( MLU ,RRSe ) - MUC ) + MUM ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) + ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3784860557768924, "obj2": 0.44397816549502916}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / Max( ( DS / RCSe ),MUC ) ) ) + Min( ( CS * ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( RMSe / MUC ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.6832669322709163, "obj2": 0.16689712168561752}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5179282868525896, "obj2": 0.28731438680164006}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( ( PN + CRS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( PN + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC - RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) + ( CS * ( RCSe * ( Min( ( RRSe / ( MUM + MUC ) ) ,RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) )", "obj1": 0.23705179282868527, "obj2": 0.6363547091433022}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( ( CRS * FirstVNF_Mem_Server ) / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RCSe - ( RCSe / RRSe ) ) ) ) ) ) + ( ( DS / ( Min( RMSe ,Min( MUR ,DS ) ) - Max( ( MUM / MUC ),RCSe ) ) ) - ( Min( DS ,MUC ) - ( MUC - RCSe ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.09534319384557471}, {"determining": "( ( ACS * ACS ) + ( ( ( MDR - ( ACS * FirstVNF_Mem_Server ) ) / ARS ) / Min( AMS ,( ( ( FirstVNF_CPU + RRS ) + ( ACS - FirstVNF_RAM_Server ) ) + ACS ) ) ) )", "choosing": "Min( ( CS * Max( ( RRSe * MUR ),RMSe ) ) ,( ( RMSe * RRSe ) - ( CS * ( Max( Max( DS,MLU ),( Max( RMSe,CS ) + ( ( DS - DS ) + Max( CS,RMSe ) ) ) ) * CS ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5357735856526976}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( Max( FirstVNF_RAM,CRS ) - FirstVNF_RAM ) ) * ( ( Min( ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * Min( MUM ,DS ) ) + Min( ( MLU / ( Max( ( Min( ( MUM / RMSe ) ,RMSe ) + ( ( CS + CS ) * MUC ) ),RCSe ) * ( RMSe / ( MUM - RRSe ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7151394422310757, "obj2": 0.13793892355310597}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( CRS + AMS ) ) ) + ( Max( ( FirstVNF_Mem + ARS ),( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( Min( MUR ,( RCSe - RCSe ) ) - Min( ( ( RMSe + CS ) + CS ) ,MUC ) ) )", "obj1": 0.5059760956175299, "obj2": 0.3011656631330037}, {"determining": "( ( ( ( PN / ( FirstVNF_CPU_Server * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( MUM - DS ) - Max( CS,Min( ( CS + Max( MUR,RRSe ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * MUM ) ) ,( Max( MUM,MUM ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.798804780876494, "obj2": 0.08420674925027016}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( Max( Const,BR ) * CRS ) )", "choosing": "( ( RRSe * ( DS * MLU ) ) / MLU )", "obj1": 0.9860557768924303, "obj2": 0.0055222854720850196}, {"determining": "( ( Max( BR,( ( ARS + ( CRS - ( Max( BR,ACS ) + ( MRS + PN ) ) ) ) / FirstVNF_CPU_Server ) ) * CRS ) / ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * ( FirstVNF_RAM_Server * MDR ) ) * Min( ( DDR + ( ( AMS / FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ,ACS ) ) )", "choosing": "( ( ( MLU * RRSe ) * ( Min( MUC ,( ( ( MLU + CS ) * DS ) * MLU ) ) * ( ( ( Min( ( CS * MLU ) ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.1294820717131474, "obj2": 0.754782503769634}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( AMS + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( ACS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( FirstVNF_Mem + ( AMS / FirstVNF_RAM ) ) * Min( RRS ,( AMS - FirstVNF_RAM ) ) ) ,( ACS / DDR ) ) - Min( ( Max( ( RRS * AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Min( DS ,RMSe ) * MUC ),Min( ( RRSe - MUC ) ,( DS / Min( ( MUM + MUM ) ,MUR ) ) ) ) + Min( ( CS * ( ( CS * CS ) / ( ( CS + MUC ) + ( ( MUC * ( MUC / RRSe ) ) / ( ( MUM * MUR ) / MUC ) ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7768924302788844, "obj2": 0.09285637938224871}, {"determining": "( ( ( ( PN + Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( Const / FirstVNF_Mem ) )", "choosing": "( Min( ( CS * Min( ( MUR - RCSe ) ,MLU ) ) ,( ( Max( RCSe,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) ) )", "obj1": 0.4760956175298805, "obj2": 0.3279490572005449}, {"determining": "( Min( MRS ,CRS ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( MRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,Min( DS ,Max( RCSe,MUC ) ) ) ) ) ) - ( ( Max( MUR,( RRSe - MUM ) ) + MLU ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) + MUR ) / DS ) ) ) + Max( Max( ( MUM + MUM ),MUC ),( MUC * MUC ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11981424633240732}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( DS / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / ( MUC + ( RMSe / MUC ) ) ) / DS ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.18289051813898421}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.1269690469071632}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5099601593625498, "obj2": 0.298974035396847}, {"determining": "( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.23904382470119523, "obj2": 0.6301328295187397}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7211155378486056, "obj2": 0.13432063703543323}, {"determining": "( ( FirstVNF_CPU_Server * ( PN * ( ( BR + Const ) - Min( MRS ,ARS ) ) ) ) + ( ( Max( FirstVNF_Mem_Server,CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ARS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server / ( ARS + Min( ARS ,RRS ) ) ) ) )", "choosing": "Min( Max( RRSe,( Max( RRSe,DS ) * ( DS / ( MUM / ( Max( ( RMSe / RCSe ),MUM ) * ( RRSe / RRSe ) ) ) ) ) ) ,( RRSe - ( ( RCSe * ( ( RRSe - MUC ) * MUR ) ) + CS ) ) )", "obj1": 0.6254980079681275, "obj2": 0.2111278089240208}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "( ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.9741035856573705, "obj2": 0.008020213757594985}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06660103002297858}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) * RRSe ) - Max( RRSe,( ( MUM + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe + MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / Max( CS,RMSe ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7868525896414342, "obj2": 0.08642503152354203}], "29": [{"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * ( ( ARS + ( CRS - ( Max( BR,ACS ) + ( MRS + PN ) ) ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / ( ( MLU + CS ) * DS ) ) / DS ) ) ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / ( FirstVNF_CPU_Server * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( DS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( MUC + MUC ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( FirstVNF_CPU_Server * ( PN * ( ( BR + Const ) - Min( MRS ,ARS ) ) ) ) + ( ( Max( FirstVNF_Mem_Server,CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ARS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server / ( ARS + Min( ARS ,RRS ) ) ) ) )", "choosing": "Min( Max( RRSe,( Max( RRSe,DS ) * ( DS / ( MUM / ( Max( ( RMSe / RCSe ),MUM ) * ( RRSe / RRSe ) ) ) ) ) ) ,( RRSe - ( ( RCSe * ( ( RRSe - MUC ) * MUR ) ) + CS ) ) )", "obj1": 0.6254980079681275, "obj2": 0.2111278089240208}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.6533864541832669, "obj2": 0.18173103224480452}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) + Min( ( CRS * ( Max( MDR,MDR ) + ARS ) ) ,DDR ) )", "choosing": "( Min( MLU ,RCSe ) + ( ( Min( Max( DS,RRSe ) ,MLU ) / ( RRSe * Max( MUC,DS ) ) ) + MUR ) )", "obj1": 0.9402390438247012, "obj2": 0.02482510431966823}, {"determining": "( ( Max( MDR,RRS ) + FirstVNF_Mem ) + Min( ( ( MDR / AMS ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( ( MUC * MLU ),Min( MUR ,RCSe ) ) ) / DS ) / DS ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RMSe * RCSe ) ,( Min( CS ,RMSe ) + ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) ) ) ) )", "obj1": 0.21713147410358566, "obj2": 0.656778127748607}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( AMS / ( Min( Const ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( RMSe + RRSe ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.39017701656130627}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( ( MUC / RRSe ) * ( MLU / RRSe ) ) ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RCSe * RMSe ) ,( Max( RCSe,MUC ) / Max( RMSe,MLU ) ) ) )", "obj1": 0.48804780876494025, "obj2": 0.32237205364225097}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( Max( Const,BR ) * CRS ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + ( ( Min( ( DS * DS ) ,MLU ) / ( ( ( Max( ( DS / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) - RMSe ) ) + MUR ) )", "obj1": 0.9661354581673307, "obj2": 0.014302868034152932}, {"determining": "( ( FirstVNF_RAM * ( Max( MDR,FirstVNF_CPU_Server ) + RRS ) ) + ( ( ( ( Min( ACS ,CRS ) + AMS ) / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( DDR,FirstVNF_RAM_Server ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "( ( ( ( CS - ( RCSe - CS ) ) * DS ) - Min( MUM ,CS ) ) + Min( ( MLU / ( RCSe * ( RMSe / ( RMSe + RRSe ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.8107569721115537, "obj2": 0.0741476763505501}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,RRS ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) * MUC ),( ( ( Max( ( ( DS / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / ( MUC + ( RMSe / MUC ) ) ) / DS ) ) ) )", "obj1": 0.8665338645418327, "obj2": 0.051020700020957654}, {"determining": "( ( ( RRS - PN ) - ( Max( AMS,Max( DDR,ARS ) ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / Min( PN ,DDR ) ) - ARS ) ,( ( ( Const * FirstVNF_CPU_Server ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe + ( RMSe - ( ( Max( MLU,MUM ) * Max( RRSe,DS ) ) + DS ) ) ) + Max( MUC,( MUC * MUR ) ) )", "obj1": 0.4601593625498008, "obj2": 0.3434644245378344}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( Min( ( FirstVNF_Mem + BR ) ,Const ) ,FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ARS ) ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe * RMSe ) / ( RRSe * DS ) ) * ( MUR - ( RCSe * RMSe ) ) ) ) / ( Max( MUM,DS ) + CS ) )", "obj1": 0.22111553784860558, "obj2": 0.6419533427558984}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_CPU_Server + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU ,ARS ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - ( ( Min( FirstVNF_CPU ,( ( MRS / FirstVNF_CPU ) + AMS ) ) - BR ) * DDR ) ) - ( ( FirstVNF_RAM_Server + ARS ) / Max( AMS,( DDR - AMS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( PN + ACS ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) * ( ( MUM - ( RMSe - CS ) ) - Max( CS,Min( ( CS + Max( MUR,RCSe ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * Min( Min( RMSe ,MUC ) ,MUM ) ) ) ,( Max( MUM,MUM ) / ( Min( MUM ,( MUC * MLU ) ) + Max( RMSe,RMSe ) ) ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.4940239043824701, "obj2": 0.3044021123163963}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( ( ( ( FirstVNF_CPU + RRS ) / PN ) - FirstVNF_CPU ),Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( ( ( MLU + MUM ) - ( Min( MUR ,( MUM * Max( RMSe,Max( RRSe,MUM ) ) ) ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( ( RMSe * Max( DS,MUM ) ) - ( ( MUM + Max( ( ( ( RCSe * RRSe ) / ( DS + RMSe ) ) * MUR ),( Max( DS,MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42916702762323905}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.20119521912350596, "obj2": 0.6644567269549355}, {"determining": "( ( ( ( PN / ( FirstVNF_CPU_Server * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( MUM - DS ) - Max( CS,Min( ( CS + Max( MUR,RRSe ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * MUM ) ) ,( Max( MUM,MUM ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.798804780876494, "obj2": 0.08420674925027016}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Max( ( MUM / RCSe ),MUC ) * ( RRSe / RRSe ) ) / MUM ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4103585657370518, "obj2": 0.4046453008815455}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,MDR ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,MDR ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( Min( FirstVNF_RAM_Server ,( ( ( FirstVNF_CPU_Server - AMS ) * FirstVNF_RAM_Server ) / ( FirstVNF_CPU - Const ) ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( Max( ( ( RMSe / MUR ) * ( MUM + MUR ) ),Max( ( MUC + MUR ),MUR ) ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + DS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / MUM ) / DS ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.16429834816950442}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06660103002297858}, {"determining": "( ( FirstVNF_CPU_Server * ( BR - ( FirstVNF_Mem - RRS ) ) ) + ( ( FirstVNF_RAM_Server + ( Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_Mem ) ) * ( ( ( FirstVNF_Mem / ( ( ARS / BR ) * Const ) ) + ARS ) / ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( RCSe * Min( RCSe ,MUR ) ) * CS ) ,Min( ( ( MLU - CS ) + Max( MUR,( RRSe - ( ( MLU + MUR ) / MUM ) ) ) ) ,( ( MUM + RRSe ) / Max( ( Min( RCSe ,MUM ) * RCSe ),RRSe ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.4945228237051121}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5179282868525896, "obj2": 0.28731438680164006}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ARS ) / Min( RRS ,DDR ) ) - Min( ( MRS / FirstVNF_Mem_Server ) ,ACS ) ) - Min( FirstVNF_Mem_Server ,( Const / ( ( FirstVNF_RAM / ( CRS * ( CRS - FirstVNF_Mem ) ) ) + MRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( ( ACS + PN ) / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS * DS ) + Max( ( MUC * ( ( MUC - ( Max( RRSe,CS ) / MUC ) ) - ( ( RRSe - Max( ( DS / MUC ),( MUC - MLU ) ) ) + RMSe ) ) ),Max( MUC,MUC ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5124358274969616}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) - ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_CPU ) ) ) - DDR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( ( MLU * RRSe ) + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) * ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) ) ) )", "obj1": 0.5856573705179283, "obj2": 0.23434918800446122}, {"determining": "( ( ( ( PN / ( DDR * Min( FirstVNF_CPU_Server ,Min( ( PN / MRS ) ,Max( AMS,BR ) ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server - ARS ) ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) / RRSe ) - Max( RRSe,( MUC * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( DS * ( MUM + ( MLU + RRSe ) ) ) / ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.14702996962103082}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.40039840637450197, "obj2": 0.41992961550706764}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_Mem ,DDR ) ) * Min( Max( DDR,ACS ) ,FirstVNF_CPU ) ) * Min( Min( ( FirstVNF_Mem - ARS ) ,( AMS * BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( RRSe,( ( ( ( MUC / CS ) * Min( DS ,MUM ) ) * ( ( Max( RMSe,RRSe ) - MUC ) / RCSe ) ) / DS ) ) * ( ( RMSe / ( RCSe / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MLU * CS ) ) + ( ( RCSe * CS ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.749003984063745, "obj2": 0.1124581940753405}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( CRS * Max( Const,BR ) ) / Max( ( BR / MRS ),PN ) )", "choosing": "( ( RRSe * ( Max( RMSe,( RRSe * DS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * Min( ( RCSe - MUR ) ,( CS + RMSe ) ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.199203187250996, "obj2": 0.6747917844320955}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ARS ) / Min( RRS ,DDR ) ) - DDR ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( MRS + Max( FirstVNF_RAM,( CRS * FirstVNF_Mem_Server ) ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_Mem ) * ( ( FirstVNF_Mem - Min( ( BR * MRS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RRSe + MLU ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( MLU * MUR ) ) ) * ( ( ( Min( MUC ,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.36254980079681276, "obj2": 0.4830382513243168}, {"determining": "( ( FirstVNF_CPU_Server * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( ( ARS + ( FirstVNF_Mem_Server - ARS ) ) / BR ) + ( Const + BR ) ) ) ) )", "choosing": "Min( Min( ( ( MLU + MUM ) - ( Min( Min( MUM ,Max( RMSe,Min( DS ,MLU ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5722478418860397}, {"determining": "( ( Const + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Max( BR,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Max( ( FirstVNF_RAM / MRS ),FirstVNF_Mem ) ) / ( FirstVNF_RAM / ARS ) ) ) ) ) + ( ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * DS ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) / Max( ( ( DS / MUR ) + ( MLU * Max( RRSe,MUM ) ) ),RRSe ) )", "obj1": 0.18725099601593626, "obj2": 0.6817292305118411}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,DDR ) ) ) - Min( Const ,Const ) ) - ( ( FirstVNF_RAM_Server + ARS ) / Max( AMS,( DDR - AMS ) ) ) ) + ( FirstVNF_CPU / ( FirstVNF_RAM_Server / CRS ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( DS - CS ) ) ,( RCSe - Min( ( MUR + ( ( MUC + ( MUR / MUC ) ) * Min( MUM ,Min( CS ,MUC ) ) ) ) ,( Max( MUM,MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( CS,RMSe ) ) ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.8864541832669323, "obj2": 0.044745489828611484}, {"determining": "Min( ( FirstVNF_CPU_Server * RRS ) ,( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( ( FirstVNF_CPU - DDR ),ARS ) ) ,( ACS - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( ( CS + ( MUM + DS ) ) + ( MUC + ( RMSe / MUR ) ) ) / ( CS / CS ) ) + MUM ) + ( ( ( MLU * Min( Min( MLU ,MUM ) ,Max( MUC,RCSe ) ) ) - CS ) * MUR ) ) ) )", "obj1": 0.3665338645418327, "obj2": 0.4751280964737322}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ( FirstVNF_Mem + BR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + Max( RCSe,MUC ) ) ) )", "obj1": 0.8545816733067729, "obj2": 0.054688141640156375}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + ( MRS * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) - MDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * BR ) )", "choosing": "( Max( RRSe,( Max( RRSe,DS ) * ( ( ( Max( ( RCSe / RMSe ),MUC ) * ( RCSe / RRSe ) ) / MUM ) / DS ) ) ) / Max( Min( ( CS - Max( MUC,MUM ) ) ,MUR ),( MUR / MUR ) ) )", "obj1": 0.9083665338645418, "obj2": 0.04020716509323726}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( ( AMS + ( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( PN + MDR ) * ( Min( CRS ,FirstVNF_CPU ) - AMS ) ) / FirstVNF_RAM ) )", "choosing": "( ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) + ( RMSe / CS ) )", "obj1": 0.3705179282868526, "obj2": 0.46093277895774953}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,PN ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS ) / CS )", "obj1": 0.17330677290836655, "obj2": 0.7012972613864342}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( ( PN + CRS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( PN + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC - RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) + ( CS * ( RCSe * ( Min( ( RRSe / ( MUM + MUC ) ) ,RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) )", "obj1": 0.23705179282868527, "obj2": 0.6363547091433022}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ARS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( RRSe,( Max( RRSe,DS ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ) ) ,( RRSe - ( ( RCSe * RMSe ) + CS ) ) )", "obj1": 0.6394422310756972, "obj2": 0.1995076546148216}, {"determining": "( ( MRS + MRS ) + ( Max( DDR,FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( ( ( ( MUR * ( ( MUR + DS ) / ( MLU * ( RCSe - ( MUM * CS ) ) ) ) ) * ( MUM * Min( ( ( MLU / ( DS * DS ) ) * MUR ) ,MUR ) ) ) - CS ) + Min( Max( Min( Min( DS ,DS ) ,Max( MUR,MUR ) ),DS ) ,Max( Max( Min( ( MLU / RRSe ) ,RMSe ),MLU ),MLU ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6272215552082994}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( FirstVNF_Mem + ACS ) ) ) ) ) ) )", "choosing": "( Min( ( ( MUC + MUC ) + ( ( MUM - DS ) - Max( CS,Min( ( CS + Max( MUR,RRSe ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * MUM ) ) ,( Max( MUM,MUM ) + CS ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.38247011952191234, "obj2": 0.43992521938633633}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR / MRS ) + ( Const + BR ) ) * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ARS / PN ) - FirstVNF_CPU ) ,( FirstVNF_Mem_Server * PN ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( Min( Max( MUR,( RRSe - MUM ) ) ,( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( ( MUR + DS ) / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5845196996347067}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ( FirstVNF_RAM * DDR ) ) ) * ( ( FirstVNF_Mem - Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ARS ) ,( ( FirstVNF_RAM + RRS ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) + Max( DDR,ARS ) )", "choosing": "( ( ( RCSe * ( ( Min( RRSe ,( Max( CS,MUM ) + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + MUM ) * Min( MUC ,RRSe ) ) ) ) ) + ( MUC + ( Max( MUC,MUC ) * MUC ) ) ) / ( Min( MLU ,MUC ) / MUR ) )", "obj1": 0.32669322709163345, "obj2": 0.5180801089363457}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( ( ( PN / ( ( FirstVNF_CPU_Server - Max( MRS,ACS ) ) - Min( MDR ,( ( ACS * RRS ) - BR ) ) ) ) - ( ARS + Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( MLU,( ( MUC + CS ) * DS ) ) ) ) ) ,( ( CS + ( MLU - CS ) ) * ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) ) ) )", "obj1": 0.8346613545816733, "obj2": 0.06250066838732515}, {"determining": "( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU - ACS ) - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( Max( ( FirstVNF_Mem + ARS ),( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( MUC / RRSe ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + RRSe )", "obj1": 0.4262948207171315, "obj2": 0.37891765415740997}, {"determining": "( ( ( ( PN + Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( Const / FirstVNF_Mem ) )", "choosing": "( Min( ( CS * Min( ( MUR - RCSe ) ,MLU ) ) ,( ( Max( RCSe,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) ) )", "obj1": 0.4760956175298805, "obj2": 0.3279490572005449}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ( FirstVNF_Mem + BR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( RMSe,RMSe ) ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06001830986605443}, {"determining": "( ( ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) - ( ( AMS * ( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server / Const ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( CS / MLU ) ) ,( ( Max( MUR,( RRSe - ( Min( MUC ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * Min( RRSe ,RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5756972111553785, "obj2": 0.2430814914789655}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( MRS - Max( ARS,AMS ) ) * CRS ) )", "choosing": "( ( ( ( ( RRSe + ( MLU * MUR ) ) / ( ( ( ( CS / CS ) * ( MLU - CS ) ) * MUR ) * DS ) ) * ( ( RRSe - MUM ) + RRSe ) ) * RRSe ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7888757897041578}, {"determining": "( ( ( ( PN / ( DDR * ( ( AMS / FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_RAM ,BR ) ) - FirstVNF_CPU ) + ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( DS,MUM ) + ( ( Min( DS ,( MUR - CS ) ) / ( MLU / RCSe ) ) / MUR ) ) + Min( ( CS * ( RCSe * ( Max( RRSe,( ( MLU + CS ) * DS ) ) - ( ( RRSe / ( RMSe + RCSe ) ) - RRSe ) ) ) ) ,( ( CS + ( CS - MLU ) ) * ( Min( ( CS + Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5338645418326693, "obj2": 0.2730147915915507}, {"determining": "( Min( MRS ,CRS ) + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( MRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,Min( DS ,Max( RCSe,MUC ) ) ) ) ) ) - ( ( Max( MUR,( RRSe - MUM ) ) + MLU ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) + MUR ) / DS ) ) ) + Max( Max( ( MUM + MUM ),MUC ),( MUC * MUC ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11981424633240732}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU ) * RRS ) - FirstVNF_CPU ) + ( ( ARS - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( Max( Const,Const ) + CRS ) ) )", "choosing": "( Min( ( ( RCSe * ( ( ( MLU / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MUC * Min( MUC ,RRSe ) ) ) ) ) * ( RRSe * MLU ) ) ,( ( Max( RMSe,( RRSe - MUM ) ) + ( ( CS * MLU ) / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) + ( MLU + MUR ) )", "obj1": 0.6633466135458167, "obj2": 0.17513969504593271}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( FirstVNF_CPU_Server * ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5322691322596936}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5099601593625498, "obj2": 0.298974035396847}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ARS - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( AMS - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( Max( Max( RCSe,( MUM + DS ) ),( DS / ( CS / MLU ) ) ) * ( Max( RRSe,MUM ) - DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.40836653386454186, "obj2": 0.4133094918520881}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ( FirstVNF_RAM / MRS ) * FirstVNF_RAM ) - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,Min( ( DS - RMSe ) ,MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - MUM ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.45212168947440057}, {"determining": "( ( FirstVNF_CPU_Server * ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.4940485095244952}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7071713147410359, "obj2": 0.14164177789044294}, {"determining": "( Max( Max( ARS,Const ),ACS ) + ( RRS + MRS ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( MUM + ( ( MUM * ( MLU * CS ) ) / MLU ) ) + ( MUM * Min( RMSe ,Min( ( MUC + Max( DS,MUM ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5657803926494337}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,( MRS * ACS ) ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( ( DDR - ARS ) / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( CS - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / DS ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6075697211155379, "obj2": 0.21740540273304693}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / Max( ( DS / RCSe ),MUC ) ) ) + Min( ( CS * ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( RMSe / MUC ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.6832669322709163, "obj2": 0.16621980692284904}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ( ( ( MDR / PN ) - ( MRS - FirstVNF_RAM_Server ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( Max( DS,Max( CS,DS ) ) + RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( ( ( ( MLU + RCSe ) * RMSe ) * DS ),( DS / RCSe ) ) ) ) ) )", "obj1": 0.44223107569721115, "obj2": 0.36495586478386455}, {"determining": "( ( ( ( PN / ( DDR * ( ( AMS / FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ) - Min( BR ,FirstVNF_RAM ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) ) ,( ( CS + ( MLU - CS ) ) * ( Min( ( CS + Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2790298218119666}, {"determining": "( ( Max( Min( ARS ,CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( Min( ( ( RCSe / MUC ) + RCSe ) ,( RCSe * ( ( RCSe - MLU ) / MUR ) ) ) + CS ) ) ) / CS )", "obj1": 0.18326693227091634, "obj2": 0.6897589377809513}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( ( ( PN / ( ACS * Min( Min( ARS ,Max( AMS,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( ( Max( MUM,MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( RMSe,RMSe ) ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8884462151394422, "obj2": 0.041676883728254704}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),RRS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - ( ( Min( MLU ,RRSe ) - MUC ) + MUM ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) + ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3784860557768924, "obj2": 0.44397816549502916}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - CRS ) + ( ( ( PN / Max( DDR,FirstVNF_Mem ) ) - DDR ) - ( FirstVNF_Mem / ( DDR * Min( ( ( ( MDR / PN ) - FirstVNF_CPU ) + Max( DDR,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM + ( ( Min( ( Max( RCSe,MLU ) + RRSe ) ,Max( ( CS - MLU ),RMSe ) ) / RMSe ) - CS ) ) ,( ( ( DS / Min( Max( ( DS - MLU ),RCSe ) ,RCSe ) ) + ( ( CS / MLU ) / MUR ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( Max( ( RRSe / RRSe ),( MLU * DS ) ) ,MLU ) ) ) + CS ) ) )", "obj1": 0.7609561752988048, "obj2": 0.10766315126064974}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( Min( ( FirstVNF_Mem + BR ) ,Const ) ,( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ARS ) ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) )", "choosing": "( Max( MUR,( RRSe - MUM ) ) / ( Max( MUM,DS ) + CS ) )", "obj1": 0.3047808764940239, "obj2": 0.554629935036637}, {"determining": "( ( ACS * ACS ) + ( ( ( MDR - ( ACS * FirstVNF_Mem_Server ) ) / ARS ) / Min( AMS ,( ( ( FirstVNF_CPU + RRS ) + ( ACS - FirstVNF_RAM_Server ) ) + ACS ) ) ) )", "choosing": "Min( ( CS * Max( ( RRSe * MUR ),RMSe ) ) ,( ( RMSe * RRSe ) - ( CS * ( Max( Max( DS,MLU ),( Max( RMSe,CS ) + ( ( DS - DS ) + Max( CS,RMSe ) ) ) ) * CS ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5357735856526976}, {"determining": "( Min( ( Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + Min( AMS ,FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) + ( ( ARS * MDR ) + MRS ) ) ,( MRS + PN ) ) + ( MRS * FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS * ( ( ( RMSe + MUR ) * MUC ) * Min( MUC ,( MLU + ( RMSe / RMSe ) ) ) ) ) ,( RMSe - ( Max( ( ( DS - MLU ) + ( RMSe - DS ) ),DS ) * CS ) ) )", "obj1": 0.30876494023904383, "obj2": 0.546755539140311}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( Max( FirstVNF_RAM,CRS ) - FirstVNF_RAM ) ) * ( ( Min( ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * Min( MUM ,DS ) ) + Min( ( MLU / ( Max( ( Min( ( MUM / RMSe ) ,RMSe ) + ( ( CS + CS ) * MUC ) ),RCSe ) * ( RMSe / ( MUM - RRSe ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7151394422310757, "obj2": 0.13793892355310597}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( CRS + AMS ) ) ) + ( Max( ( FirstVNF_Mem + ARS ),( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( Min( MUR ,( RCSe - RCSe ) ) - Min( ( ( RMSe + CS ) + CS ) ,MUC ) ) )", "obj1": 0.5059760956175299, "obj2": 0.3011656631330037}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( AMS + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( ACS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( FirstVNF_Mem + ( AMS / FirstVNF_RAM ) ) * Min( RRS ,( AMS - FirstVNF_RAM ) ) ) ,( ACS / DDR ) ) - Min( ( Max( ( RRS * AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Min( DS ,RMSe ) * MUC ),Min( ( RRSe - MUC ) ,( DS / Min( ( MUM + MUM ) ,MUR ) ) ) ) + Min( ( CS * ( ( CS * CS ) / ( ( CS + MUC ) + ( ( MUC * ( MUC / RRSe ) ) / ( ( MUM * MUR ) / MUC ) ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7768924302788844, "obj2": 0.09285637938224871}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6713147410358565, "obj2": 0.17295089240635778}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( Max( AMS,RRS ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( CS + MLU ) ) + RRSe )", "obj1": 0.4402390438247012, "obj2": 0.37304029981846554}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) * RRSe ) - Max( RRSe,( ( MUM + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe + MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / Max( CS,RMSe ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.43227091633466136, "obj2": 0.37466242495637975}, {"determining": "( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.23904382470119523, "obj2": 0.6301328295187397}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( MRS + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( ( FirstVNF_RAM_Server * ARS ),FirstVNF_RAM ) / CRS ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ACS + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( Max( Min( DS ,( MLU / MUM ) ),Max( ( DS + Max( RMSe,MUR ) ),( DS / ( CS / MUR ) ) ) ) * ( ( ( MUR - ( MLU / MUC ) ) - RRSe ) - Max( ( ( MLU + CS ) * Min( MUC ,RRSe ) ),RRSe ) ) ) ) ,( RRSe + ( MUR / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.6414342629482072, "obj2": 0.1979506969304761}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) + Min( ( Max( AMS,( ARS - ( FirstVNF_CPU - RRS ) ) ) / Min( PN ,FirstVNF_Mem ) ) ,( ( PN / Max( PN,AMS ) ) - DDR ) ) )", "choosing": "( ( ( CS * ( ( ( CS + CS ) + ( MUC + ( ( MUR * DS ) / MUC ) ) ) * ( CS * MUR ) ) ) * ( RMSe - ( DS + MLU ) ) ) + Max( ( MUC * MUC ),( MUR / Max( ( DS / ( MUC - ( ( DS * RCSe ) + ( RCSe * MUM ) ) ) ),MUC ) ) ) )", "obj1": 0.7629482071713147, "obj2": 0.10431631016243494}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( MUM + MUC ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6772908366533864, "obj2": 0.16881435560528388}], "30": [{"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ( FirstVNF_Mem + BR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * ( ( ARS + ( CRS - ( Max( BR,ACS ) + ( MRS + PN ) ) ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / ( ( MLU + CS ) * DS ) ) / DS ) ) ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,( RRSe / RRSe ) ) )", "obj1": 0.7948207171314741, "obj2": 0.07798445136903648}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.6533864541832669, "obj2": 0.18173103224480452}, {"determining": "( ( ( Max( RRS,DDR ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / Max( ( DS / RCSe ),MUC ) ) ) + Min( ( CS * ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( ( RRSe * DS ) / ( RRSe / RRSe ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7350597609561753, "obj2": 0.12612630838656708}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) + Min( ( CRS * ( Max( MDR,MDR ) + ARS ) ) ,DDR ) )", "choosing": "( Min( MLU ,RCSe ) + ( ( Min( Max( DS,RRSe ) ,MLU ) / ( RRSe * Max( MUC,DS ) ) ) + MUR ) )", "obj1": 0.9402390438247012, "obj2": 0.02482510431966823}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( Max( FirstVNF_RAM,CRS ) - FirstVNF_RAM ) ) * ( ( Min( ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * Min( MUM ,DS ) ) + Min( ( MLU / ( Max( ( Min( ( MUM / RMSe ) ,RMSe ) + ( ( CS + CS ) * MUC ) ),RCSe ) * ( RMSe / ( MUM - RRSe ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7151394422310757, "obj2": 0.13793892355310597}, {"determining": "( ( Max( MDR,RRS ) + FirstVNF_Mem ) + Min( ( ( MDR / AMS ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( ( MUC * MLU ),Min( MUR ,RCSe ) ) ) / DS ) / DS ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RMSe * RCSe ) ,( Min( CS ,RMSe ) + ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) ) ) ) )", "obj1": 0.21713147410358566, "obj2": 0.656778127748607}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( ( RRS - PN ) - ( Max( AMS,Max( DDR,ARS ) ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / Min( PN ,DDR ) ) - ARS ) ,( ( ( Const * FirstVNF_CPU_Server ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe + ( RMSe - ( ( Max( MLU,MUM ) * Max( RRSe,DS ) ) + DS ) ) ) + Max( MUC,( MUC * MUR ) ) )", "obj1": 0.4601593625498008, "obj2": 0.3434644245378344}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( Min( ( FirstVNF_Mem + BR ) ,Const ) ,FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ARS ) ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe * RMSe ) / ( RRSe * DS ) ) * ( MUR - ( RCSe * RMSe ) ) ) ) / ( Max( MUM,DS ) + CS ) )", "obj1": 0.22111553784860558, "obj2": 0.6419533427558984}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( FirstVNF_CPU_Server * ( BR - ( FirstVNF_Mem - RRS ) ) ) + ( ( FirstVNF_RAM_Server + ( Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_Mem ) ) * ( ( ( FirstVNF_Mem / ( ( ARS / BR ) * Const ) ) + ARS ) / ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( RCSe * Min( RCSe ,MUR ) ) * CS ) ,Min( ( ( MLU - CS ) + Max( MUR,( RRSe - ( ( MLU + MUR ) / MUM ) ) ) ) ,( ( MUM + RRSe ) / Max( ( Min( RCSe ,MUM ) * RCSe ),RRSe ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.4945228237051121}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - ( AMS * BR ) ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) * ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( FirstVNF_RAM_Server / DDR ) ,( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( MUM + CS ) * Min( MUC ,RRSe ) ) / ( ( CS * RCSe ) - ( Min( ( Max( RMSe,MUC ) / MLU ) ,RRSe ) * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( DS + RRSe ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.9043824701195219, "obj2": 0.03724407229988874}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( ( ( ( FirstVNF_CPU + RRS ) / PN ) - FirstVNF_CPU ),Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( ( ( MLU + MUM ) - ( Min( MUR ,( MUM * Max( RMSe,Max( RRSe,MUM ) ) ) ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( ( RMSe * Max( DS,MUM ) ) - ( ( MUM + Max( ( ( ( RCSe * RRSe ) / ( DS + RMSe ) ) * MUR ),( Max( DS,MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42916702762323905}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( MRS - Max( ARS,AMS ) ) * CRS ) )", "choosing": "( ( ( ( ( RRSe + ( MLU * MUR ) ) / ( ( ( ( CS / CS ) * ( MLU - CS ) ) * MUR ) * DS ) ) * ( ( RRSe - MUM ) + RRSe ) ) * RRSe ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7888757897041578}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.20119521912350596, "obj2": 0.6644567269549355}, {"determining": "( ( FirstVNF_CPU_Server * ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.4940485095244952}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ARS ) / Min( RRS ,DDR ) ) - Min( ( MRS / FirstVNF_Mem_Server ) ,ACS ) ) - Min( FirstVNF_Mem_Server ,( Const / ( ( FirstVNF_RAM / ( CRS * ( CRS - FirstVNF_Mem ) ) ) + MRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( ( ACS + PN ) / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS * DS ) + Max( ( MUC * ( ( MUC - ( Max( RRSe,CS ) / MUC ) ) - ( ( RRSe - Max( ( DS / MUC ),( MUC - MLU ) ) ) + RMSe ) ) ),Max( MUC,MUC ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5124358274969616}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) - ( ( AMS * ( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server / Const ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( CS / MLU ) ) ,( ( Max( MUR,( RRSe - ( Min( MUC ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * Min( RRSe ,RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5756972111553785, "obj2": 0.2430814914789655}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( MRS + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( ( FirstVNF_RAM_Server * ARS ),FirstVNF_RAM ) / CRS ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ACS + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( Max( Min( DS ,( MLU / MUM ) ),Max( ( DS + Max( RMSe,MUR ) ),( DS / ( CS / MUR ) ) ) ) * ( ( ( MUR - ( MLU / MUC ) ) - RRSe ) - Max( ( ( MLU + CS ) * Min( MUC ,RRSe ) ),RRSe ) ) ) ) ,( RRSe + ( MUR / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.6414342629482072, "obj2": 0.1979506969304761}, {"determining": "( ( ( ( PN / ( DDR * Min( FirstVNF_CPU_Server ,Min( ( PN / MRS ) ,Max( AMS,BR ) ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server - ARS ) ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) / RRSe ) - Max( RRSe,( MUC * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( DS * ( MUM + ( MLU + RRSe ) ) ) / ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.14702996962103082}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( MUM + MUC ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7808764940239044, "obj2": 0.09049424746231201}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( ( FirstVNF_RAM * MRS ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( MLU + MUR ) + ( RCSe * ( RMSe * ( RMSe + MUC ) ) ) ) ,DS ) + Min( ( CS * Min( RCSe ,( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( RRSe / RRSe ) * ( DS / ( CS / DS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.601593625498008, "obj2": 0.2238663962764161}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,ARS ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) * MUC ),( ( ( Max( ( ( DS / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + RRSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / ( MUC + ( RMSe / MUC ) ) ) / DS ) ) ) )", "obj1": 0.954183266932271, "obj2": 0.018537867445763804}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( AMS + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( ACS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( FirstVNF_Mem + ( AMS / FirstVNF_RAM ) ) * Min( RRS ,( AMS - FirstVNF_RAM ) ) ) ,( ACS / DDR ) ) - Min( ( Max( ( RRS * AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Min( DS ,RMSe ) * MUC ),Min( ( RRSe - MUC ) ,( DS / Min( ( MUM + MUM ) ,MUR ) ) ) ) + Min( ( CS * ( ( CS * CS ) / ( ( CS + MUC ) + ( ( MUC * ( MUC / RRSe ) ) / ( ( MUM * MUR ) / MUC ) ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7768924302788844, "obj2": 0.09285637938224871}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( ( MUC / RRSe ) * ( MLU / RRSe ) ) ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RCSe * RMSe ) ,( Max( RCSe,MUC ) / Max( RMSe,MLU ) ) ) )", "obj1": 0.48804780876494025, "obj2": 0.32237205364225097}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,RRS ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) * MUC ),( ( ( Max( ( ( DS / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / ( MUC + ( RMSe / MUC ) ) ) / DS ) ) ) )", "obj1": 0.8665338645418327, "obj2": 0.05072468652754668}, {"determining": "( ( FirstVNF_CPU * ( ACS / AMS ) ) / ( CRS * ( ( DDR / BR ) - BR ) ) )", "choosing": "( Max( CS,( MUR - ( RMSe - CS ) ) ) / RCSe )", "obj1": 0.19721115537848605, "obj2": 0.6743618390841017}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ARS ) / Min( RRS ,DDR ) ) - DDR ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( MRS + Max( FirstVNF_RAM,( CRS * FirstVNF_Mem_Server ) ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_Mem ) * ( ( FirstVNF_Mem - Min( ( BR * MRS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RRSe + MLU ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( MLU * MUR ) ) ) * ( ( ( Min( MUC ,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.36254980079681276, "obj2": 0.4830382513243168}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_CPU_Server + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU ,ARS ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - ( ( Min( FirstVNF_CPU ,( ( MRS / FirstVNF_CPU ) + AMS ) ) - BR ) * DDR ) ) - ( ( FirstVNF_RAM_Server + ARS ) / Max( AMS,( DDR - AMS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( PN + ACS ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) * ( ( MUM - ( RMSe - CS ) ) - Max( CS,Min( ( CS + Max( MUR,RCSe ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * Min( Min( RMSe ,MUC ) ,MUM ) ) ) ,( Max( MUM,MUM ) / ( Min( MUM ,( MUC * MLU ) ) + Max( RMSe,RMSe ) ) ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.4940239043824701, "obj2": 0.3044021123163963}, {"determining": "( ( FirstVNF_CPU_Server * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( ( ARS + ( FirstVNF_Mem_Server - ARS ) ) / BR ) + ( Const + BR ) ) ) ) )", "choosing": "Min( Min( ( ( MLU + MUM ) - ( Min( Min( MUM ,Max( RMSe,Min( DS ,MLU ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5722478418860397}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) + Min( ( Max( AMS,( ARS - ( FirstVNF_CPU - RRS ) ) ) / Min( PN ,FirstVNF_Mem ) ) ,( ( PN / Max( PN,AMS ) ) - DDR ) ) )", "choosing": "( ( ( CS * ( ( ( CS + CS ) + ( MUC + ( ( MUR * DS ) / MUC ) ) ) * ( CS * MUR ) ) ) * ( RMSe - ( DS + MLU ) ) ) + Max( ( MUC * MUC ),( MUR / Max( ( DS / ( MUC - ( ( DS * RCSe ) + ( RCSe * MUM ) ) ) ),MUC ) ) ) )", "obj1": 0.7629482071713147, "obj2": 0.10431631016243494}, {"determining": "Min( ( FirstVNF_CPU_Server * RRS ) ,( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( ( FirstVNF_CPU - DDR ),ARS ) ) ,( ACS - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( ( CS + ( MUM + DS ) ) + ( MUC + ( RMSe / MUR ) ) ) / ( CS / CS ) ) + MUM ) + ( ( ( MLU * Min( Min( MLU ,MUM ) ,Max( MUC,RCSe ) ) ) - CS ) * MUR ) ) ) )", "obj1": 0.3665338645418327, "obj2": 0.4751280964737322}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( ( ( PN / ( ACS * Min( Min( ARS ,Max( AMS,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( ( Max( MUM,MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( RMSe,RMSe ) ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.042561575701173984}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( ( AMS + ( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( PN + MDR ) * ( Min( CRS ,FirstVNF_CPU ) - AMS ) ) / FirstVNF_RAM ) )", "choosing": "( ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) + ( RMSe / CS ) )", "obj1": 0.3705179282868526, "obj2": 0.46093277895774953}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,PN ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS ) / CS )", "obj1": 0.17330677290836655, "obj2": 0.7012972613864342}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( ( PN + CRS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( PN + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC - RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) + ( CS * ( RCSe * ( Min( ( RRSe / ( MUM + MUC ) ) ,RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) )", "obj1": 0.23705179282868527, "obj2": 0.6363547091433022}, {"determining": "( ( Const + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Max( BR,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Max( ( FirstVNF_RAM / MRS ),FirstVNF_Mem ) ) / ( FirstVNF_RAM / ARS ) ) ) ) ) + ( ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * DS ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) / Max( ( ( DS / MUR ) + ( MLU * Max( RRSe,MUM ) ) ),RRSe ) )", "obj1": 0.18725099601593626, "obj2": 0.6817292305118411}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_Mem ,DDR ) ) * Min( Max( DDR,ACS ) ,FirstVNF_CPU ) ) * Min( Min( ( FirstVNF_Mem - ARS ) ,( AMS * BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( RRSe,( ( ( ( MUC / CS ) * Min( DS ,MUM ) ) * ( ( Max( RMSe,RRSe ) - MUC ) / RCSe ) ) / DS ) ) * ( ( RMSe / ( RCSe / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MLU * CS ) ) + ( ( RCSe * CS ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.749003984063745, "obj2": 0.1124581940753405}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5179282868525896, "obj2": 0.28731438680164006}, {"determining": "( ( MRS + MRS ) + ( Max( DDR,FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( ( ( ( MUR * ( ( MUR + DS ) / ( MLU * ( RCSe - ( MUM * CS ) ) ) ) ) * ( MUM * Min( ( ( MLU / ( DS * DS ) ) * MUR ) ,MUR ) ) ) - CS ) + Min( Max( Min( Min( DS ,DS ) ,Max( MUR,MUR ) ),DS ) ,Max( Max( Min( ( MLU / RRSe ) ,RMSe ),MLU ),MLU ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6272215552082994}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( FirstVNF_Mem + ACS ) ) ) ) ) ) )", "choosing": "( Min( ( ( MUC + MUC ) + ( ( MUM - DS ) - Max( CS,Min( ( CS + Max( MUR,RRSe ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * MUM ) ) ,( Max( MUM,MUM ) + CS ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.38247011952191234, "obj2": 0.43992521938633633}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR / MRS ) + ( Const + BR ) ) * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ARS / PN ) - FirstVNF_CPU ) ,( FirstVNF_Mem_Server * PN ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( Min( Max( MUR,( RRSe - MUM ) ) ,( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( ( MUR + DS ) / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5845196996347067}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ( FirstVNF_RAM * DDR ) ) ) * ( ( FirstVNF_Mem - Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ARS ) ,( ( FirstVNF_RAM + RRS ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) + Max( DDR,ARS ) )", "choosing": "( ( ( RCSe * ( ( Min( RRSe ,( Max( CS,MUM ) + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + MUM ) * Min( MUC ,RRSe ) ) ) ) ) + ( MUC + ( Max( MUC,MUC ) * MUC ) ) ) / ( Min( MLU ,MUC ) / MUR ) )", "obj1": 0.32669322709163345, "obj2": 0.5180801089363457}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( ( ( PN / ( ( FirstVNF_CPU_Server - Max( MRS,ACS ) ) - Min( MDR ,( ( ACS * RRS ) - BR ) ) ) ) - ( ARS + Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( MLU,( ( MUC + CS ) * DS ) ) ) ) ) ,( ( CS + ( MLU - CS ) ) * ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) ) ) )", "obj1": 0.8346613545816733, "obj2": 0.06250066838732515}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ( FirstVNF_Mem + BR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( RMSe,RMSe ) ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06001830986605443}, {"determining": "( ( FirstVNF_RAM * ( Max( MDR,FirstVNF_CPU_Server ) + RRS ) ) + ( ( ( ( Min( ACS ,CRS ) + AMS ) / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( DDR,FirstVNF_RAM_Server ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "( ( ( ( CS - ( RCSe - CS ) ) * DS ) - Min( MUM ,CS ) ) + Min( ( MLU / ( RCSe * ( RMSe / ( RMSe + RRSe ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.8107569721115537, "obj2": 0.0741476763505501}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ( FirstVNF_Mem + BR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + Max( RCSe,MUC ) ) ) )", "obj1": 0.8545816733067729, "obj2": 0.054688141640156375}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU ) * RRS ) - FirstVNF_CPU ) + ( ( ARS - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( Max( Const,Const ) + CRS ) ) )", "choosing": "( Min( ( ( RCSe * ( ( ( MLU / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MUC * Min( MUC ,RRSe ) ) ) ) ) * ( RRSe * MLU ) ) ,( ( Max( RMSe,( RRSe - MUM ) ) + ( ( CS * MLU ) / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) + ( MLU + MUR ) )", "obj1": 0.6633466135458167, "obj2": 0.17513969504593271}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( ( DS / ( CS / MLU ) ),( MUR - DS ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5916334661354582, "obj2": 0.23332651911324614}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5079681274900398, "obj2": 0.29218353754939214}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( CRS + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * Const ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( MLU / MUM ) / DS ) ) ) / CS )", "obj1": 0.9820717131474104, "obj2": 0.0077128264310630515}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( AMS * FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem * Min( ( ( FirstVNF_RAM - PN ) - ( MDR / PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( ( ( MLU / CS ) * RCSe ) + RCSe ) * MUC ) * Min( MUC ,( MUM + Min( MUR ,DS ) ) ) ) ) ,( ( CS * RCSe ) - ( Min( CS ,Min( ( MUR * RMSe ) ,MUC ) ) * ( CS * Max( Min( DS ,MLU ),( Max( DS,( CS - MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.15513931977158193}, {"determining": "( ( ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) - ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_CPU ) ) ) - DDR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( ( MLU * RRSe ) + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) * ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) ) ) )", "obj1": 0.5856573705179283, "obj2": 0.23434918800446122}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ( FirstVNF_RAM / MRS ) * FirstVNF_RAM ) - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,Min( ( DS - RMSe ) ,MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - MUM ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.45212168947440057}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( AMS / ( Min( Const ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( RMSe + RRSe ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.39017701656130627}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7071713147410359, "obj2": 0.14164177789044294}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( CRS + BR ) + ( ACS - Max( Const,Max( DDR,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Max( FirstVNF_Mem,ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Max( ( FirstVNF_CPU - PN ),PN ) ) ) ) ) )", "choosing": "( ( RMSe * ( ( Max( RCSe,( MUM + DS ) ) / ( MLU / Max( MUM,DS ) ) ) * Max( RMSe,RRSe ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.40256334247266556}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( ( MRS * RRS ) + FirstVNF_CPU_Server ) + ( FirstVNF_CPU * Min( ( Min( ( ( MDR / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( DS / ( CS / MLU ) ) - Max( CS,Min( ( CS + Max( RRSe,MUR ) ) ,CS ) ) ) ) ,( RCSe / Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * MUM ) ) ,( Max( ( RRSe + RMSe ),MUM ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9203187250996016, "obj2": 0.03396753158886602}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) * ( ( RRS / ( PN + RRS ) ) / FirstVNF_Mem ) ) ) - DDR ) - ( RRS * ACS ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Max( ( MUR / Max( ( DS / RCSe ),MUC ) ),( MUC * MUC ) ) * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( Max( ( MLU * CS ),MLU ),( ( MLU + CS ) * ( RRSe / MUC ) ) ) ) ) ) ,( RCSe / RRSe ) ) )", "obj1": 0.6274900398406374, "obj2": 0.20510978283282133}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ( ( ( MDR / PN ) - ( MRS - FirstVNF_RAM_Server ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( Max( DS,Max( CS,DS ) ) + RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( ( ( ( MLU + RCSe ) * RMSe ) * DS ),( DS / RCSe ) ) ) ) ) )", "obj1": 0.44223107569721115, "obj2": 0.36495586478386455}, {"determining": "( ( Max( Min( ARS ,CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( Min( ( ( RCSe / MUC ) + RCSe ) ,( RCSe * ( ( RCSe - MLU ) / MUR ) ) ) + CS ) ) ) / CS )", "obj1": 0.18326693227091634, "obj2": 0.6897589377809513}, {"determining": "( ( ( ( PN / ( ACS * Min( Min( ARS ,Max( AMS,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( ( Max( MUM,MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( RMSe,RMSe ) ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8884462151394422, "obj2": 0.041676883728254704}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),RRS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - ( ( Min( MLU ,RRSe ) - MUC ) + MUM ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) + ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3784860557768924, "obj2": 0.44397816549502916}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.40039840637450197, "obj2": 0.41992961550706764}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - CRS ) + ( ( ( PN / Max( DDR,FirstVNF_Mem ) ) - DDR ) - ( FirstVNF_Mem / ( DDR * Min( ( ( ( MDR / PN ) - FirstVNF_CPU ) + Max( DDR,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( RCSe + ( ( MLU - CS ) * RCSe ) ) * MUC ) * Min( MUC ,( MUM + Min( MUR ,MLU ) ) ) ) ) ,( ( CS * RCSe ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( DS,CS ) + CS ) ) ) ) ) )", "obj1": 0.9741035856573705, "obj2": 0.0126623387342731}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - CRS ) + ( ( ( PN / Max( DDR,FirstVNF_Mem ) ) - DDR ) - ( FirstVNF_Mem / ( DDR * Min( ( ( ( MDR / PN ) - FirstVNF_CPU ) + Max( DDR,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM + ( ( Min( ( Max( RCSe,MLU ) + RRSe ) ,Max( ( CS - MLU ),RMSe ) ) / RMSe ) - CS ) ) ,( ( ( DS / Min( Max( ( DS - MLU ),RCSe ) ,RCSe ) ) + ( ( CS / MLU ) / MUR ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( Max( ( RRSe / RRSe ),( MLU * DS ) ) ,MLU ) ) ) + CS ) ) )", "obj1": 0.7609561752988048, "obj2": 0.10766315126064974}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( Min( ( FirstVNF_Mem + BR ) ,Const ) ,( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ARS ) ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) )", "choosing": "( Max( MUR,( RRSe - MUM ) ) / ( Max( MUM,DS ) + CS ) )", "obj1": 0.3047808764940239, "obj2": 0.554629935036637}, {"determining": "( ( ACS * ACS ) + ( ( ( MDR - ( ACS * FirstVNF_Mem_Server ) ) / ARS ) / Min( AMS ,( ( ( FirstVNF_CPU + RRS ) + ( ACS - FirstVNF_RAM_Server ) ) + ACS ) ) ) )", "choosing": "Min( ( CS * Max( ( RRSe * MUR ),RMSe ) ) ,( ( RMSe * RRSe ) - ( CS * ( Max( Max( DS,MLU ),( Max( RMSe,CS ) + ( ( DS - DS ) + Max( CS,RMSe ) ) ) ) * CS ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5357735856526976}, {"determining": "( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU - ACS ) - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( Max( ( FirstVNF_Mem + ARS ),( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( MUC / RRSe ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + RRSe )", "obj1": 0.4262948207171315, "obj2": 0.37891765415740997}, {"determining": "( Min( ( Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + Min( AMS ,FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) + ( ( ARS * MDR ) + MRS ) ) ,( MRS + PN ) ) + ( MRS * FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS * ( ( ( RMSe + MUR ) * MUC ) * Min( MUC ,( MLU + ( RMSe / RMSe ) ) ) ) ) ,( RMSe - ( Max( ( ( DS - MLU ) + ( RMSe - DS ) ),DS ) * CS ) ) )", "obj1": 0.30876494023904383, "obj2": 0.546755539140311}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( BR + FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + MRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( RRSe,( Max( RRSe,DS ) * ( ( MUM / ( ( CS * Min( RMSe ,CS ) ) * ( RRSe * RRSe ) ) ) / DS ) ) ) ,( RRSe - ( ( RCSe * RMSe ) + CS ) ) )", "obj1": 0.6374501992031872, "obj2": 0.19918010590341828}, {"determining": "( ( FirstVNF_CPU_Server * ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5322691322596936}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ARS - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( AMS - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( Max( Max( RCSe,( MUM + DS ) ),( DS / ( CS / MLU ) ) ) * ( Max( RRSe,MUM ) - DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.40836653386454186, "obj2": 0.4133094918520881}, {"determining": "( ( ( ( PN + Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( Const / FirstVNF_Mem ) )", "choosing": "( Min( ( CS * Min( ( MUR - RCSe ) ,MLU ) ) ,( ( Max( RCSe,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) ) )", "obj1": 0.4760956175298805, "obj2": 0.3279490572005449}, {"determining": "( ( ( ( PN / ( DDR * ( ( AMS / FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ) - Min( BR ,FirstVNF_RAM ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) ) ,( ( CS + ( MLU - CS ) ) * ( Min( ( CS + Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2790298218119666}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( Max( AMS,RRS ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( CS + MLU ) ) + RRSe )", "obj1": 0.4402390438247012, "obj2": 0.37304029981846554}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( CRS + AMS ) ) ) + ( Max( ( FirstVNF_Mem + ARS ),( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( Min( MUR ,( RCSe - RCSe ) ) - Min( ( ( RMSe + CS ) + CS ) ,MUC ) ) )", "obj1": 0.5059760956175299, "obj2": 0.3011656631330037}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) * RRSe ) - Max( RRSe,( ( MUM + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe + MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( RRSe / Max( CS,RMSe ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.43227091633466136, "obj2": 0.37466242495637975}], "31": [{"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / ( MRS + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( ( FirstVNF_RAM_Server * ARS ),FirstVNF_RAM ) / CRS ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ACS + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + RRS ) ) )", "choosing": "( Min( ( CS * ( Max( Min( DS ,( MLU / MUM ) ),Max( ( DS + Max( RMSe,MUR ) ),( DS / ( CS / MUR ) ) ) ) * ( ( Max( MUR,( MLU / MUC ) ) - RRSe ) - Max( ( ( MLU + CS ) * Min( MUC ,RRSe ) ),RRSe ) ) ) ) ,( RRSe + ( MUR / DS ) ) ) + Max( MUC,( ( MUM / RMSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ( FirstVNF_Mem + BR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( FirstVNF_CPU_Server * ( BR - ( FirstVNF_Mem - RRS ) ) ) + ( ( FirstVNF_RAM_Server + ( Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_Mem ) ) * ( ( ( FirstVNF_Mem / ( ( ARS / BR ) * Const ) ) + ARS ) / ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( RCSe * Min( RCSe ,MUR ) ) * CS ) ,Min( ( ( MLU - CS ) + Max( MUR,( RRSe - ( ( MLU + MUR ) / MUM ) ) ) ) ,( ( MUM + RRSe ) / Max( ( Min( RCSe ,MUM ) * RCSe ),RRSe ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.4945228237051121}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUC ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.4795657848546178}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( ( FirstVNF_RAM * MRS ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( MLU + MUR ) + ( RCSe * ( RMSe * ( RMSe + MUC ) ) ) ) ,DS ) + Min( ( CS * Min( RCSe ,( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( RRSe / RRSe ) * ( DS / ( CS / DS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.601593625498008, "obj2": 0.2238663962764161}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_CPU_Server + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU ,ARS ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - ( ( Min( FirstVNF_CPU ,( ( MRS / FirstVNF_CPU ) + AMS ) ) - BR ) * DDR ) ) - ( ( FirstVNF_RAM_Server + ARS ) / Max( AMS,( DDR - AMS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( PN + ACS ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) * ( ( MUM - ( RMSe - CS ) ) - Max( CS,Min( ( CS + Max( MUR,RCSe ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * Min( Min( RMSe ,MUC ) ,MUM ) ) ) ,( Max( MUM,MUM ) / ( Min( MUM ,( MUC * MLU ) ) + Max( RMSe,RMSe ) ) ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.4940239043824701, "obj2": 0.3044021123163963}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7948207171314741, "obj2": 0.07783824817819668}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.21316065332757966}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server * Min( ARS ,FirstVNF_RAM_Server ) ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ARS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( RRSe,( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ) ) ,( RRSe - ( ( RCSe * RMSe ) + CS ) ) )", "obj1": 0.6812749003984063, "obj2": 0.168982172371999}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,RRS ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) * MUC ),( ( ( Max( ( ( DS / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RCSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * MUR ) / ( MUC + ( RMSe / MUC ) ) ) / DS ) ) ) )", "obj1": 0.8665338645418327, "obj2": 0.05072468652754668}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( Max( FirstVNF_RAM,CRS ) - FirstVNF_RAM ) ) * ( ( Min( ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * Min( MUM ,DS ) ) + Min( ( MLU / ( Max( ( Min( ( MUM / RMSe ) ,RMSe ) + ( ( CS + CS ) * MUC ) ),RCSe ) * ( RMSe / ( MUM - RRSe ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7151394422310757, "obj2": 0.13793892355310597}, {"determining": "( ( Max( MDR,RRS ) + FirstVNF_Mem ) + Min( ( ( MDR / AMS ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( ( MUC * MLU ),Min( MUR ,RCSe ) ) ) / DS ) / DS ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RMSe * RCSe ) ,( Min( CS ,RMSe ) + ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) ) ) ) )", "obj1": 0.21713147410358566, "obj2": 0.656778127748607}, {"determining": "( ( ( ( PN / Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( ( MUC / RRSe ) * ( MLU / RRSe ) ) ) * ( MLU / ( RRSe * DS ) ) ) ) / Min( ( RCSe * RMSe ) ,( Max( RCSe,MUC ) / Max( RMSe,MLU ) ) ) )", "obj1": 0.48804780876494025, "obj2": 0.32237205364225097}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( ( RRS - PN ) - ( Max( AMS,Max( DDR,ARS ) ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / Min( PN ,DDR ) ) - ARS ) ,( ( ( Const * FirstVNF_CPU_Server ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe + ( RMSe - ( ( Max( MLU,MUM ) * Max( RRSe,DS ) ) + DS ) ) ) + Max( MUC,( MUC * MUR ) ) )", "obj1": 0.4601593625498008, "obj2": 0.3434644245378344}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( Min( ( FirstVNF_Mem + BR ) ,Const ) ,FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ARS ) ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe * RMSe ) / ( RRSe * DS ) ) * ( MUR - ( RCSe * RMSe ) ) ) ) / ( Max( MUM,DS ) + CS ) )", "obj1": 0.22111553784860558, "obj2": 0.6419533427558984}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( ( PN + CRS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( PN + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC - RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) + ( CS * ( RCSe * ( Min( ( RRSe / ( MUM + MUC ) ) ,RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) )", "obj1": 0.23705179282868527, "obj2": 0.6363547091433022}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( ( Max( RRS,DDR ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / Max( ( DS / RCSe ),MUC ) ) ) + Min( ( CS * ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( ( RRSe * DS ) / ( RRSe / RRSe ) ) ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7350597609561753, "obj2": 0.12612630838656708}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( AMS * FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem * Min( ( ( FirstVNF_RAM - PN ) - ( MDR / PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( ( ( MLU / CS ) * RCSe ) + RCSe ) * MUC ) * Min( MUC ,( MUM + Min( MUR ,DS ) ) ) ) ) ,( ( CS * RCSe ) - ( Min( CS ,Min( ( MUR * RMSe ) ,MUC ) ) * ( CS * Max( Min( DS ,MLU ),( Max( DS,( CS - MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.15513931977158193}, {"determining": "( ( ( ( ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Max( CRS,MDR ) ) - DDR ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_Mem ) * ( ( FirstVNF_Mem - Min( ( ARS - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + DS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( MUM / CS ) ) ) * ( ( ( Max( ( MUR - RCSe ),MLU ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.3665338645418327, "obj2": 0.47269759719517507}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.6533864541832669, "obj2": 0.18173103224480452}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( MRS - Max( ARS,AMS ) ) * CRS ) )", "choosing": "( ( ( ( ( RRSe + ( MLU * MUR ) ) / ( ( ( ( CS / CS ) * ( MLU - CS ) ) * MUR ) * DS ) ) * ( ( RRSe - MUM ) + RRSe ) ) * RRSe ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7888757897041578}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) + Min( ( CRS * ( Max( MDR,MDR ) + ARS ) ) ,DDR ) )", "choosing": "( Min( MLU ,RCSe ) + ( ( Min( Max( DS,RRSe ) ,MLU ) / ( RRSe * Max( MUC,DS ) ) ) + MUR ) )", "obj1": 0.9402390438247012, "obj2": 0.02482510431966823}, {"determining": "( ( MRS + MRS ) + ( Max( DDR,FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( ( ( ( MUR * ( ( MUR + DS ) / ( MLU * ( RCSe - ( MUM * CS ) ) ) ) ) * ( MUM * Min( ( ( MLU / ( DS * DS ) ) * MUR ) ,MUR ) ) ) - CS ) + Min( Max( Min( Min( DS ,DS ) ,Max( MUR,MUR ) ),DS ) ,Max( Max( Min( ( MLU / RRSe ) ,RMSe ),MLU ),MLU ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6272215552082994}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( ( ( ( PN / ( DDR * ( ( AMS / FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ) - Min( BR ,FirstVNF_RAM ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) ) ,( ( CS + ( MLU - CS ) ) * ( Min( ( CS + Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2790298218119666}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( AMS / ( Min( Const ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( RMSe + RRSe ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.39017701656130627}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( CRS + BR ) + ( ACS - Max( Const,Max( DDR,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Max( FirstVNF_Mem,ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Max( ( FirstVNF_CPU - PN ),PN ) ) ) ) ) )", "choosing": "( ( RMSe * ( ( Max( RCSe,( MUM + DS ) ) / ( MLU / Max( MUM,DS ) ) ) * Max( RMSe,RRSe ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.40256334247266556}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( DDR + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( BR ,BR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) + ( FirstVNF_RAM_Server + ( BR + ( ( ( ( FirstVNF_Mem_Server - PN ) / PN ) - FirstVNF_CPU ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS - MLU ) / CS )", "obj1": 0.7450199203187251, "obj2": 0.11245176865923623}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.20119521912350596, "obj2": 0.6644567269549355}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ARS ) / Min( RRS ,DDR ) ) - Min( ( MRS / FirstVNF_Mem_Server ) ,ACS ) ) - Min( FirstVNF_Mem_Server ,( Const / ( ( FirstVNF_RAM / ( CRS * ( CRS - FirstVNF_Mem ) ) ) + MRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( ( ACS + PN ) / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS * DS ) + Max( ( MUC * ( ( MUC - ( Max( RRSe,CS ) / MUC ) ) - ( ( RRSe - Max( ( DS / MUC ),( MUC - MLU ) ) ) + RMSe ) ) ),Max( MUC,MUC ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5124358274969616}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( ( ( PN / ( DDR * Min( FirstVNF_CPU_Server ,Min( ( PN / MRS ) ,Max( AMS,BR ) ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server - ARS ) ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) / RRSe ) - Max( RRSe,( MUC * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( DS * ( MUM + ( MLU + RRSe ) ) ) / ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.14702996962103082}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - CRS ) + ( ( ( PN / Max( DDR,FirstVNF_Mem ) ) - DDR ) - ( FirstVNF_Mem / ( DDR * Min( ( ( ( MDR / PN ) - FirstVNF_CPU ) + Max( DDR,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( RCSe + ( ( MLU - CS ) * RCSe ) ) * MUC ) * Min( MUC ,( MUM + Min( MUR ,MLU ) ) ) ) ) ,( ( CS * RCSe ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( DS,CS ) + CS ) ) ) ) ) )", "obj1": 0.9741035856573705, "obj2": 0.0126623387342731}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) * ( ( RRS / ( PN + RRS ) ) / FirstVNF_Mem ) ) ) - DDR ) - ( RRS * ACS ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Max( ( MUR / Max( ( DS / RCSe ),MUC ) ),( MUC * MUC ) ) * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( Max( ( MLU * CS ),MLU ),( ( MLU + CS ) * ( RRSe / MUC ) ) ) ) ) ) ,( RCSe / RRSe ) ) )", "obj1": 0.6274900398406374, "obj2": 0.20510978283282133}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,ARS ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RMSe + RRSe ) ) ) ) ,( RMSe - ( CS + ( DS / ( CS / DS ) ) ) ) ) )", "obj1": 0.8167330677290837, "obj2": 0.07141834239251736}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( FirstVNF_CPU_Server * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( ( ARS + ( FirstVNF_Mem_Server - ARS ) ) / BR ) + ( Const + BR ) ) ) ) )", "choosing": "Min( Min( ( ( MLU + MUM ) - ( Min( Min( MUM ,Max( RMSe,Min( DS ,MLU ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5722478418860397}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) + Min( ( Max( AMS,( ARS - ( FirstVNF_CPU - RRS ) ) ) / Min( PN ,FirstVNF_Mem ) ) ,( ( PN / Max( PN,AMS ) ) - DDR ) ) )", "choosing": "( ( ( CS * ( ( ( CS + CS ) + ( MUC + ( ( MUR * DS ) / MUC ) ) ) * ( CS * MUR ) ) ) * ( RMSe - ( DS + MLU ) ) ) + Max( ( MUC * MUC ),( MUR / Max( ( DS / ( MUC - ( ( DS * RCSe ) + ( RCSe * MUM ) ) ) ),MUC ) ) ) )", "obj1": 0.7629482071713147, "obj2": 0.10431631016243494}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,PN ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS ) / CS )", "obj1": 0.17330677290836655, "obj2": 0.7012972613864342}, {"determining": "( ( Const + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Max( BR,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Max( ( FirstVNF_RAM / MRS ),FirstVNF_Mem ) ) / ( FirstVNF_RAM / ARS ) ) ) ) ) + ( ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * DS ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) / Max( ( ( DS / MUR ) + ( MLU * Max( RRSe,MUM ) ) ),RRSe ) )", "obj1": 0.18725099601593626, "obj2": 0.6817292305118411}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( ( ( ( FirstVNF_CPU + RRS ) / PN ) - FirstVNF_CPU ),Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( ( ( MLU + MUM ) - ( Min( MUR ,( MUM * Max( RMSe,Max( RRSe,MUM ) ) ) ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( ( RMSe * Max( DS,MUM ) ) - ( ( MUM + Max( ( ( ( RCSe * RRSe ) / ( DS + RMSe ) ) * MUR ),( Max( DS,MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42916702762323905}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR / MRS ) + ( Const + BR ) ) * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ARS / PN ) - FirstVNF_CPU ) ,( FirstVNF_Mem_Server * PN ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( Min( Max( MUR,( RRSe - MUM ) ) ,( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( ( MUR + DS ) / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5845196996347067}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ARS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( RRSe,( Max( RRSe,DS ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ) ) ,( RRSe - ( ( RCSe * RMSe ) + CS ) ) )", "obj1": 0.6434262948207171, "obj2": 0.1965165778071913}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ( FirstVNF_RAM * DDR ) ) ) * ( ( FirstVNF_Mem - Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ARS ) ,( ( FirstVNF_RAM + RRS ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) + Max( DDR,ARS ) )", "choosing": "( ( ( RCSe * ( ( Min( RRSe ,( Max( CS,MUM ) + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + MUM ) * Min( MUC ,RRSe ) ) ) ) ) + ( MUC + ( Max( MUC,MUC ) * MUC ) ) ) / ( Min( MLU ,MUC ) / MUR ) )", "obj1": 0.32669322709163345, "obj2": 0.5180801089363457}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( AMS + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( ACS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( FirstVNF_Mem + ( AMS / FirstVNF_RAM ) ) * Min( RRS ,( AMS - FirstVNF_RAM ) ) ) ,( ACS / DDR ) ) - Min( ( Max( ( RRS * AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Min( DS ,RMSe ) * MUC ),Min( ( RRSe - MUC ) ,( DS / Min( ( MUM + MUM ) ,MUR ) ) ) ) + Min( ( CS * ( ( CS * CS ) / ( ( CS + MUC ) + ( ( MUC * ( MUC / RRSe ) ) / ( ( MUM * MUR ) / MUC ) ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7768924302788844, "obj2": 0.09285637938224871}, {"determining": "( ( FirstVNF_RAM * ( Max( MDR,FirstVNF_CPU_Server ) + RRS ) ) + ( ( ( ( Min( ACS ,CRS ) + AMS ) / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( DDR,FirstVNF_RAM_Server ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "( ( ( ( CS - ( RCSe - CS ) ) * DS ) - Min( MUM ,CS ) ) + Min( ( MLU / ( RCSe * ( RMSe / ( RMSe + RRSe ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.8107569721115537, "obj2": 0.0741476763505501}, {"determining": "( ( ( ( PN + Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( Const / FirstVNF_Mem ) )", "choosing": "( Min( ( CS * Min( ( MUR - RCSe ) ,MLU ) ) ,( ( Max( RCSe,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) ) )", "obj1": 0.4760956175298805, "obj2": 0.3279490572005449}, {"determining": "( ( FirstVNF_CPU / RRS ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( Min( ( PN / MDR ) ,FirstVNF_CPU ) * ( ACS + ( FirstVNF_Mem + Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) * ( ( FirstVNF_RAM_Server / ARS ) / ( ( PN * FirstVNF_Mem_Server ) + PN ) ) ) )", "choosing": "( ( CS / ( DS * RMSe ) ) / ( MUM * Min( RCSe ,( ( Max( DS,( ( RRSe / RMSe ) / MUM ) ) * Min( MUM ,RRSe ) ) + RRSe ) ) ) )", "obj1": 0.3705179282868526, "obj2": 0.4569284859109998}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU ) * RRS ) - FirstVNF_CPU ) + ( ( ARS - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( Max( Const,Const ) + CRS ) ) )", "choosing": "( Min( ( ( RCSe * ( ( ( MLU / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MUC * Min( MUC ,RRSe ) ) ) ) ) * ( RRSe * MLU ) ) ,( ( Max( RMSe,( RRSe - MUM ) ) + ( ( CS * MLU ) / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) + ( MLU + MUR ) )", "obj1": 0.6633466135458167, "obj2": 0.17513969504593271}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( ( RRS + FirstVNF_Mem ) / FirstVNF_CPU ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( ( DS / Max( RCSe,RCSe ) ) + Min( MUC ,MLU ) ) / MUM ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( MUM + MUC ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.06389560706987188}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5059760956175299, "obj2": 0.293392734423858}, {"determining": "( ( FirstVNF_CPU_Server * ( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5322691322596936}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.40039840637450197, "obj2": 0.41992961550706764}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( MUM + CS ) * Min( MUC ,RRSe ) ) / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RMSe + RRSe ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.9043824701195219, "obj2": 0.03679095980278054}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - CRS ) + ( ( ( PN / Max( DDR,FirstVNF_Mem ) ) - DDR ) - ( FirstVNF_Mem / ( DDR * Min( ( ( ( MDR / PN ) - FirstVNF_CPU ) + Max( DDR,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MUM + ( ( Min( ( Max( RCSe,MLU ) + RRSe ) ,Max( ( CS - MLU ),RMSe ) ) / RMSe ) - CS ) ) ,( ( ( DS / Min( Max( ( DS - MLU ),RCSe ) ,RCSe ) ) + ( ( CS / MLU ) / MUR ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + Max( ( MUC * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( Max( ( RRSe / RRSe ),( MLU * DS ) ) ,MLU ) ) ) + CS ) ) )", "obj1": 0.7609561752988048, "obj2": 0.10766315126064974}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( MUM + CS ) * Min( MUC ,RRSe ) ) / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ) )", "obj1": 0.9561752988047809, "obj2": 0.01545669187710215}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7071713147410359, "obj2": 0.14164177789044294}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ( FirstVNF_Mem + BR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( RMSe,RMSe ) ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.06001830986605443}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) / ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( FirstVNF_Mem - PN ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( RCSe ,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( MLU + ( Max( Min( MLU ,MUR ),Max( DS,Max( MLU,RRSe ) ) ) / Max( MUM,( RCSe * RRSe ) ) ) ) ) ) / MLU )", "obj1": 0.2948207171314741, "obj2": 0.567363879821579}, {"determining": "( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU - ACS ) - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( Max( ( FirstVNF_Mem + ARS ),( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( MUC / RRSe ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + RRSe )", "obj1": 0.4262948207171315, "obj2": 0.37891765415740997}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( CRS,PN ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( Max( RMSe,Max( RRSe,MUM ) ) + RRSe ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7390438247011952, "obj2": 0.12146621895263349}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( ( MRS * RRS ) + FirstVNF_CPU_Server ) + ( FirstVNF_CPU * Min( ( Min( ( ( MDR / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( DS / ( CS / MLU ) ) - Max( CS,Min( ( CS + Max( RRSe,MUR ) ) ,CS ) ) ) ) ,( RCSe / Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * MUM ) ) ,( Max( ( RRSe + RMSe ),MUM ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9203187250996016, "obj2": 0.03396753158886602}, {"determining": "( ( Max( Min( ARS ,CRS ),BR ) * CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( Min( ( ( RCSe / MUC ) + RCSe ) ,( RCSe * ( ( RCSe - MLU ) / MUR ) ) ) + CS ) ) ) / CS )", "obj1": 0.18326693227091634, "obj2": 0.6897589377809513}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + MRS ) ) * Min( ARS ,FirstVNF_CPU ) ) - Min( Min( ARS ,Max( BR,AMS ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUC ) ) - RRSe ) - Max( MUC,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( MUM / ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) ) / DS ) ) ) )", "obj1": 0.5916334661354582, "obj2": 0.23305573349015532}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ARS - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( AMS - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( Max( Max( RCSe,( MUM + DS ) ),( DS / ( CS / MLU ) ) ) * ( Max( RRSe,MUM ) - DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.40836653386454186, "obj2": 0.4133094918520881}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),RRS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - ( ( Min( MLU ,RRSe ) - MUC ) + MUM ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) + ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3784860557768924, "obj2": 0.44397816549502916}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( CRS + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * Const ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( MLU / MUM ) / DS ) ) ) / CS )", "obj1": 0.9820717131474104, "obj2": 0.0077128264310630515}, {"determining": "( ( CRS * Max( FirstVNF_RAM_Server,BR ) ) / ( Min( PN ,( Min( FirstVNF_CPU_Server ,ARS ) / MDR ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( DS / ( MUM / MLU ) ),Min( MUR ,RCSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.18127490039840638, "obj2": 0.6983984053878833}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( Min( ( FirstVNF_Mem + BR ) ,Const ) ,( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ARS ) ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) )", "choosing": "( Max( MUR,( RRSe - MUM ) ) / ( Max( MUM,DS ) + CS ) )", "obj1": 0.3047808764940239, "obj2": 0.554629935036637}, {"determining": "( ( ACS * ACS ) + ( ( ( MDR - ( ACS * FirstVNF_Mem_Server ) ) / ARS ) / Min( AMS ,( ( ( FirstVNF_CPU + RRS ) + ( ACS - FirstVNF_RAM_Server ) ) + ACS ) ) ) )", "choosing": "Min( ( CS * Max( ( RRSe * MUR ),RMSe ) ) ,( ( RMSe * RRSe ) - ( CS * ( Max( Max( DS,MLU ),( Max( RMSe,CS ) + ( ( DS - DS ) + Max( CS,RMSe ) ) ) ) * CS ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5357735856526976}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ( FirstVNF_RAM / MRS ) * FirstVNF_RAM ) - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,Min( ( DS - RMSe ) ,MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - MUM ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.45212168947440057}, {"determining": "( Min( ( Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + Min( AMS ,FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) + ( ( ARS * MDR ) + MRS ) ) ,( MRS + PN ) ) + ( MRS * FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS * ( ( ( RMSe + MUR ) * MUC ) * Min( MUC ,( MLU + ( RMSe / RMSe ) ) ) ) ) ,( RMSe - ( Max( ( ( DS - MLU ) + ( RMSe - DS ) ),DS ) * CS ) ) )", "obj1": 0.30876494023904383, "obj2": 0.546755539140311}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ( ( ( MDR / PN ) - ( MRS - FirstVNF_RAM_Server ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( Max( DS,Max( CS,DS ) ) + RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( ( ( ( MLU + RCSe ) * RMSe ) * DS ),( DS / RCSe ) ) ) ) ) )", "obj1": 0.44223107569721115, "obj2": 0.36495586478386455}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( BR + FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + MRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( RRSe,( Max( RRSe,DS ) * ( ( MUM / ( ( CS * Min( RMSe ,CS ) ) * ( RRSe * RRSe ) ) ) / DS ) ) ) ,( RRSe - ( ( RCSe * RMSe ) + CS ) ) )", "obj1": 0.6374501992031872, "obj2": 0.19918010590341828}, {"determining": "( ( ( FirstVNF_RAM - BR ) * Max( FirstVNF_RAM_Server,( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) )", "choosing": "Min( ( RCSe - ( ( MUM + Max( ( Max( RCSe,Max( RRSe,DS ) ) / Max( RMSe,MLU ) ),( ( DS * MUR ) + MUR ) ) ) + ( MUM * MUR ) ) ) ,Min( ( ( MLU + MUM ) - ( Min( Min( MUM ,Max( RMSe,Max( RRSe,MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) )", "obj1": 0.3844621513944223, "obj2": 0.43341081050407304}, {"determining": "( ( FirstVNF_CPU * ( ACS / AMS ) ) / ( CRS * ( ( DDR / BR ) - BR ) ) )", "choosing": "( Max( CS,( MUR - ( RMSe - CS ) ) ) / RCSe )", "obj1": 0.19721115537848605, "obj2": 0.6743618390841017}, {"determining": "( ( ( ( Min( ( MRS / ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_CPU_Server ,Min( ARS ,Max( AMS,FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( BR,Min( ( ( ARS * DDR ) * AMS ) ,MRS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Max( CRS,BR ) )", "choosing": "( ( MUR / Min( MUR ,MUR ) ) + Min( ( CS * Min( RMSe ,( MUR * ( RMSe + MLU ) ) ) ) ,( MUC - ( CS + ( MUR * Min( ( MUR * Max( MLU,DS ) ) ,Max( RMSe,( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.03864135116696866}, {"determining": "( ( ( ( PN / ( ACS * Min( Min( ARS ,Max( AMS,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( ( Max( MUM,MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( RMSe,RMSe ) ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.042561575701173984}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( ( ( AMS + ( DDR - ARS ) ) + Min( PN ,MRS ) ) - ( ( PN / Min( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ,DDR ) ) - DDR ) ) + ( ( ( PN + MDR ) * ( Min( CRS ,FirstVNF_CPU ) - AMS ) ) / FirstVNF_RAM ) )", "choosing": "( ( RCSe * ( ( ( MUC / ( MUM + ( CS - CS ) ) ) - RRSe ) - ( ( MLU - ( DS / ( Max( RCSe,MLU ) + ( MUM - RRSe ) ) ) ) * ( DS / ( RCSe - DS ) ) ) ) ) + ( RMSe / CS ) )", "obj1": 0.950199203187251, "obj2": 0.020211195597307594}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( MUC * ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) ) ) + RRSe )", "obj1": 0.43824701195219123, "obj2": 0.36876123141150297}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) + CS ) ) )", "obj1": 0.5836653386454184, "obj2": 0.23787662158374387}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ( FirstVNF_Mem + BR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( RCSe - ( ( ( ( CS * CS ) / ( ( CS + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ) + Max( RCSe,MUC ) ) ) )", "obj1": 0.8545816733067729, "obj2": 0.054688141640156375}], "32": [{"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem - ( MDR / PN ) ) ,( ACS + ( ( BR - RRS ) / ( CRS * FirstVNF_Mem_Server ) ) ) ) ) ) * ( ( FirstVNF_Mem + ( FirstVNF_Mem * BR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( MUC / Max( ( CS - ( RCSe / ( MUC * MLU ) ) ),Max( Min( ( MUM * CS ) ,( ( MUR - ( MUC + RCSe ) ) / ( ( CS / MUM ) + RCSe ) ) ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / ( MRS + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( ( FirstVNF_RAM_Server * ARS ),FirstVNF_RAM ) / CRS ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ACS + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + RRS ) ) )", "choosing": "( Min( ( CS * ( Max( Min( DS ,( MLU / MUM ) ),Max( ( DS + Max( RMSe,MUR ) ),( DS / ( CS / MUR ) ) ) ) * ( ( Max( MUR,( MLU / MUC ) ) - RRSe ) - Max( ( ( MLU + CS ) * Min( MUC ,RRSe ) ),RRSe ) ) ) ) ,( RRSe + ( MUR / DS ) ) ) + Max( MUC,( ( MUM / RMSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( ( ( ( PN / ( DDR * ( ( AMS / FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ) - Min( BR ,FirstVNF_RAM ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / Max( ( DDR * Min( Min( FirstVNF_CPU_Server ,BR ) ,RRS ) ),Min( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) ) ,( ( CS + ( MLU - CS ) ) * ( Min( ( CS + Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2790298218119666}, {"determining": "( ( FirstVNF_CPU_Server * ( BR - ( FirstVNF_Mem - RRS ) ) ) + ( ( FirstVNF_RAM_Server + ( Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_Mem ) ) * ( ( ( FirstVNF_Mem / ( ( ARS / BR ) * Const ) ) + ARS ) / ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( RCSe * Min( RCSe ,MUR ) ) * CS ) ,Min( ( ( MLU - CS ) + Max( MUR,( RRSe - ( ( MLU + MUR ) / MUM ) ) ) ) ,( ( MUM + RRSe ) / Max( ( Min( RCSe ,MUM ) * RCSe ),RRSe ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.4945228237051121}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( AMS + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( ACS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( FirstVNF_Mem + ( AMS / FirstVNF_RAM ) ) * Min( RRS ,( AMS - FirstVNF_RAM ) ) ) ,( ACS / DDR ) ) - Min( ( Max( ( RRS * AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Min( DS ,RMSe ) * MUC ),Min( ( RRSe - MUC ) ,( DS / Min( ( MUM + MUM ) ,MUR ) ) ) ) + Min( ( CS * ( ( CS * CS ) / ( ( CS + MUC ) + ( ( MUC * ( MUC / RRSe ) ) / ( ( MUM * MUR ) / MUC ) ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7768924302788844, "obj2": 0.09285637938224871}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUC ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.4795657848546178}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_CPU_Server + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU ,ARS ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - ( ( Min( FirstVNF_CPU ,( ( MRS / FirstVNF_CPU ) + AMS ) ) - BR ) * DDR ) ) - ( ( FirstVNF_RAM_Server + ARS ) / Max( AMS,( DDR - AMS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( PN + ACS ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) * ( ( MUM - ( RMSe - CS ) ) - Max( CS,Min( ( CS + Max( MUR,RCSe ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * Min( Min( RMSe ,MUC ) ,MUM ) ) ) ,( Max( MUM,MUM ) / ( Min( MUM ,( MUC * MLU ) ) + Max( RMSe,RMSe ) ) ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.4940239043824701, "obj2": 0.3044021123163963}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server * Min( ARS ,FirstVNF_RAM_Server ) ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ARS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( RRSe,( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ) ) ,( RRSe - ( ( RCSe * RMSe ) + CS ) ) )", "obj1": 0.6812749003984063, "obj2": 0.168982172371999}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( MDR / PN ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4820717131474104, "obj2": 0.32106790856157896}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( ( RRS - PN ) - ( Max( AMS,Max( DDR,ARS ) ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / Min( PN ,DDR ) ) - ARS ) ,( ( ( Const * FirstVNF_CPU_Server ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe + ( RMSe - ( ( Max( MLU,MUM ) * Max( RRSe,DS ) ) + DS ) ) ) + Max( MUC,( MUC * MUR ) ) )", "obj1": 0.4601593625498008, "obj2": 0.3434644245378344}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( AMS * FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem * Min( ( ( FirstVNF_RAM - PN ) - ( MDR / PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( ( ( MLU / CS ) * RCSe ) + RCSe ) * MUC ) * Min( MUC ,( MUM + Min( MUR ,DS ) ) ) ) ) ,( ( CS * RCSe ) - ( Min( CS ,Min( ( MUR * RMSe ) ,MUC ) ) * ( CS * Max( Min( DS ,MLU ),( Max( DS,( CS - MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.15513931977158193}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU ) * RRS ) - FirstVNF_CPU ) + ( ( ARS - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( Max( Const,Const ) + CRS ) ) )", "choosing": "( Min( ( ( RCSe * ( ( ( MLU / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MUC * Min( MUC ,RRSe ) ) ) ) ) * ( RRSe * MLU ) ) ,( ( Max( RMSe,( RRSe - MUM ) ) + ( ( CS * MLU ) / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) + ( MLU + MUR ) )", "obj1": 0.6633466135458167, "obj2": 0.17513969504593271}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( ( FirstVNF_RAM * MRS ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( MLU + MUR ) + ( RCSe * ( RMSe * ( RMSe + MUC ) ) ) ) ,DS ) + Min( ( CS * Min( RCSe ,( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( RRSe / RRSe ) * ( DS / ( CS / DS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.601593625498008, "obj2": 0.2238663962764161}, {"determining": "( ( ( ( ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Max( CRS,MDR ) ) - DDR ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) + MRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_Mem ) * ( ( FirstVNF_Mem - Min( ( ARS - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + DS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( MUM / CS ) ) ) * ( ( ( Max( ( MUR - RCSe ),MLU ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.3665338645418327, "obj2": 0.47269759719517507}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( MRS - Max( ARS,AMS ) ) * CRS ) )", "choosing": "( ( ( ( ( RRSe + ( MLU * MUR ) ) / ( ( ( ( CS / CS ) * ( MLU - CS ) ) * MUR ) * DS ) ) * ( ( RRSe - MUM ) + RRSe ) ) * RRSe ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7888757897041578}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.20119521912350596, "obj2": 0.6644567269549355}, {"determining": "( ( MRS + MRS ) + ( Max( DDR,FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( ( ( ( MUR * ( ( MUR + DS ) / ( MLU * ( RCSe - ( MUM * CS ) ) ) ) ) * ( MUM * Min( ( ( MLU / ( DS * DS ) ) * MUR ) ,MUR ) ) ) - CS ) + Min( Max( Min( Min( DS ,DS ) ,Max( MUR,MUR ) ),DS ) ,Max( Max( Min( ( MLU / RRSe ) ,RMSe ),MLU ),MLU ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6272215552082994}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( ( PN + CRS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( PN + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC - RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) + ( CS * ( RCSe * ( Min( ( RRSe / ( MUM + MUC ) ) ,RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) )", "obj1": 0.23705179282868527, "obj2": 0.6363547091433022}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( AMS / ( Min( Const ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( RMSe + RRSe ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.39017701656130627}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,PN ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS ) / CS )", "obj1": 0.17330677290836655, "obj2": 0.7012972613864342}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.5059760956175299, "obj2": 0.293392734423858}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ARS ) / Min( RRS ,DDR ) ) - Min( ( MRS / FirstVNF_Mem_Server ) ,ACS ) ) - Min( FirstVNF_Mem_Server ,( Const / ( ( FirstVNF_RAM / ( CRS * ( CRS - FirstVNF_Mem ) ) ) + MRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( ( ACS + PN ) / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS * DS ) + Max( ( MUC * ( ( MUC - ( Max( RRSe,CS ) / MUC ) ) - ( ( RRSe - Max( ( DS / MUC ),( MUC - MLU ) ) ) + RMSe ) ) ),Max( MUC,MUC ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5124358274969616}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( CRS + BR ) + ( ACS - Max( Const,Max( DDR,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Max( FirstVNF_Mem,ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Max( ( FirstVNF_CPU - PN ),PN ) ) ) ) ) )", "choosing": "( ( RMSe * ( ( Max( RCSe,( MUM + DS ) ) / ( MLU / Max( MUM,DS ) ) ) * Max( RMSe,RRSe ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.40256334247266556}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( Max( FirstVNF_RAM,CRS ) - FirstVNF_RAM ) ) * ( ( Min( ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * Min( MUM ,DS ) ) + Min( ( MLU / ( Max( ( Min( ( MUM / RMSe ) ,RMSe ) + ( ( CS + CS ) * MUC ) ),RCSe ) * ( RMSe / ( MUM - RRSe ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7151394422310757, "obj2": 0.13793892355310597}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) + Min( ( Max( AMS,( ARS - ( FirstVNF_CPU - RRS ) ) ) / Min( PN ,FirstVNF_Mem ) ) ,( ( PN / Max( PN,AMS ) ) - DDR ) ) )", "choosing": "( ( ( CS * ( ( ( CS + CS ) + ( MUC + ( ( MUR * DS ) / MUC ) ) ) * ( CS * MUR ) ) ) * ( RMSe - ( DS + MLU ) ) ) + Max( ( MUC * MUC ),( MUR / Max( ( DS / ( MUC - ( ( DS * RCSe ) + ( RCSe * MUM ) ) ) ),MUC ) ) ) )", "obj1": 0.7629482071713147, "obj2": 0.10431631016243494}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.40039840637450197, "obj2": 0.41992961550706764}, {"determining": "( ( ( ( PN / ( ( Min( Max( DDR,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) * DDR ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,Min( AMS ,CRS ) ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * ( MUR - ( ( MUC / CS ) / MUR ) ) ) - ( CS * ( RRSe - ( MUR + DS ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.1468063192535561}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( Max( AMS,BR ) ,FirstVNF_CPU_Server ) ,( MDR - MRS ) ) ) ) - DDR ) - ( ( ( ( RRS + FirstVNF_Mem ) / FirstVNF_CPU ) + FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + Min( AMS ,FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( Max( ( MUC / ( CS / DS ) ),MLU ) + Min( MUC ,MLU ) ),MUM ) ),MUM ) + Min( ( CS * ( ( ( RCSe - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM + MUC ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7928286852589641, "obj2": 0.08206510451714924}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - AMS ),MDR ) ,( ( ( RRS + MRS ) - FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( MDR / PN ) ,( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Min( RCSe ,DS ) / ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * RRSe ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4043824701195219, "obj2": 0.4080064897042111}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( FirstVNF_CPU * ( ACS / AMS ) ) / ( CRS * ( ( DDR / BR ) - BR ) ) )", "choosing": "( Max( CS,( MUR - ( RMSe - CS ) ) ) / RCSe )", "obj1": 0.19721115537848605, "obj2": 0.6743618390841017}, {"determining": "( ( BR * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( ( ARS + ( FirstVNF_Mem_Server - ARS ) ) / BR ) + ( Const + BR ) ) ) ) )", "choosing": "Min( Min( ( Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) - ( Min( Min( MUM ,Max( RMSe,Min( DS ,MLU ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5722478418860395}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),RRS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - ( ( Min( MLU ,RRSe ) - MUC ) + MUM ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) + ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3784860557768924, "obj2": 0.44397816549502916}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( Const + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Max( BR,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Max( ( FirstVNF_RAM / MRS ),FirstVNF_Mem ) ) / ( FirstVNF_RAM / ARS ) ) ) ) ) + ( ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * DS ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) / Max( ( ( DS / MUR ) + ( MLU * Max( RRSe,MUM ) ) ),RRSe ) )", "obj1": 0.18725099601593626, "obj2": 0.6817292305118411}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server - CRS ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ARS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( RRSe,( Max( RRSe,DS ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ) ) ,( RRSe - ( ( RCSe * RMSe ) + CS ) ) )", "obj1": 0.6434262948207171, "obj2": 0.1965165778071913}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( ( ( ( FirstVNF_CPU + RRS ) / PN ) - FirstVNF_CPU ),Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( ( ( MLU + MUM ) - ( Min( MUR ,( MUM * Max( RMSe,Max( RRSe,MUM ) ) ) ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( ( RMSe * Max( DS,MUM ) ) - ( ( MUM + Max( ( ( ( RCSe * RRSe ) / ( DS + RMSe ) ) * MUR ),( Max( DS,MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42916702762323905}, {"determining": "( ( ACS / ACS ) + ( ( ( ARS / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) / Min( FirstVNF_CPU ,Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( ( CS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( MUC,MLU ) - ( ( RCSe * RCSe ) + DS ) ) ) ) * ( ( ( ( DS / ( MUC / DS ) ) * ( MUR - ( RCSe * CS ) ) ) / RCSe ) / ( MUM - MUC ) ) ) ) / Max( RCSe,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6531633830271687}, {"determining": "( ( ( FirstVNF_RAM - BR ) * Max( FirstVNF_RAM_Server,( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) )", "choosing": "Min( ( RCSe - ( ( MUM + Max( ( Max( RCSe,Max( RRSe,DS ) ) / Max( RMSe,MLU ) ),( ( DS * MUR ) + MUR ) ) ) + ( MUM * MUR ) ) ) ,Min( ( ( MLU + MUM ) - ( Min( Min( MUM ,Max( RMSe,Max( RRSe,MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) )", "obj1": 0.3844621513944223, "obj2": 0.43341081050407304}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * FirstVNF_RAM ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( CS + MUC ) + ( MUC + ( ( MUR * DS ) / MUC ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) + CS ) ) )", "obj1": 0.5776892430278885, "obj2": 0.23990483108676347}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) * ( ( RRS / ( PN + RRS ) ) / FirstVNF_Mem ) ) ) - DDR ) - ( RRS * ACS ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Max( ( MUR / Max( ( DS / RCSe ),MUC ) ),( MUC * MUC ) ) * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( Max( ( MLU * CS ),MLU ),( ( MLU + CS ) * ( RRSe / MUC ) ) ) ) ) ) ,( RCSe / RRSe ) ) )", "obj1": 0.6274900398406374, "obj2": 0.20510978283282133}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( ( FirstVNF_CPU * Min( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( Max( CRS,FirstVNF_RAM_Server ) + ACS ) ) + ( Const - PN ) ) ) ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( ( RRSe - MLU ) * DS ) - Max( CS,Min( ( CS + Max( MUR,CS ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MUR ) * RRSe ) * MUM ) ) ,( Min( ( DS - DS ) ,Min( MLU ,( RRSe * DS ) ) ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.030650129899253264}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR / MRS ) + ( Const + BR ) ) * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ARS / PN ) - FirstVNF_CPU ) ,( FirstVNF_Mem_Server * PN ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( Min( Max( MUR,( RRSe - MUM ) ) ,( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( ( MUR + DS ) / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5845196996347067}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6135458167330677, "obj2": 0.215504571463029}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - Min( Const ,Const ) ) - ( ( FirstVNF_RAM_Server + ARS ) / Max( AMS,( DDR - AMS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Max( Max( ( MDR + DDR ),( ACS * FirstVNF_CPU_Server ) ),( PN * ( RRS + FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( MUR,( RRSe - MUM ) ) / ( Max( MUM,DS ) + CS ) )", "obj1": 0.7290836653386454, "obj2": 0.12950382589483425}, {"determining": "( ( ( ( PN / ( ( ( Max( FirstVNF_Mem,ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( ( RRS + FirstVNF_Mem ) / FirstVNF_CPU ) + Max( BR,PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( MUM / ( ( DS / Max( RCSe,RCSe ) ) + Min( MUC ,MLU ) ) ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe * ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MUC / MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( MUM + MUC ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.06369272110000138}, {"determining": "( ( FirstVNF_CPU / RRS ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( Min( ( PN / MDR ) ,FirstVNF_CPU ) * ( ACS + ( FirstVNF_Mem + Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) * ( ( FirstVNF_RAM_Server / ARS ) / ( ( PN * FirstVNF_Mem_Server ) + PN ) ) ) )", "choosing": "( ( CS / ( DS * RMSe ) ) / ( MUM * Min( RCSe ,( ( Max( DS,( ( RRSe / RMSe ) / MUM ) ) * Min( MUM ,RRSe ) ) + RRSe ) ) ) )", "obj1": 0.3705179282868526, "obj2": 0.4569284859109998}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + MRS ) ) * Min( ARS ,FirstVNF_CPU ) ) - Min( Min( ARS ,Max( BR,AMS ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUC ) ) - RRSe ) - Max( MUC,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( MUM / ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) ) / DS ) ) ) )", "obj1": 0.5916334661354582, "obj2": 0.23305573349015532}, {"determining": "( ( ACS * ACS ) + ( ( ( MDR - ( ACS * FirstVNF_Mem_Server ) ) / ARS ) / Min( AMS ,( ( ( FirstVNF_CPU + RRS ) + ( ACS - FirstVNF_RAM_Server ) ) + ACS ) ) ) )", "choosing": "Min( ( CS * Max( ( RRSe * MUR ),RMSe ) ) ,( ( RMSe * RRSe ) - ( CS * ( Max( Max( DS,MLU ),( Max( RMSe,CS ) + ( ( DS - DS ) + Max( CS,RMSe ) ) ) ) * CS ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5357735856526976}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) + Min( ( CRS * ( Max( MDR,MDR ) + ARS ) ) ,DDR ) )", "choosing": "( Min( MLU ,RCSe ) + ( ( Min( Max( DS,RRSe ) ,MLU ) / ( RRSe * Max( MUC,DS ) ) ) + MUR ) )", "obj1": 0.9402390438247012, "obj2": 0.02482510431966823}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - RRS ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( MDR / PN ) )", "choosing": "( ( MUC / MUM ) / CS )", "obj1": 0.3207171314741036, "obj2": 0.5235624695434501}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( MUM + CS ) * Min( MUC ,RRSe ) ) / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RMSe + RRSe ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.9043824701195219, "obj2": 0.03679095980278054}, {"determining": "( ( FirstVNF_Mem - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) + Min( ( CS * ( ( Max( MUM,MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( RMSe,RMSe ) ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7569721115537849, "obj2": 0.10678144297495787}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7948207171314741, "obj2": 0.07783824817819668}, {"determining": "( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU - ACS ) - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( Max( ( FirstVNF_Mem + ARS ),( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( MUC / RRSe ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + RRSe )", "obj1": 0.4262948207171315, "obj2": 0.37891765415740997}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.651394422310757, "obj2": 0.1830725582909572}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7071713147410359, "obj2": 0.14164177789044294}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( DDR + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( BR ,BR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) + ( FirstVNF_RAM_Server + ( BR + ( ( ( ( FirstVNF_Mem_Server - PN ) / PN ) - FirstVNF_CPU ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS - MLU ) / CS )", "obj1": 0.7450199203187251, "obj2": 0.11245176865923623}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.6195219123505976, "obj2": 0.21311020399086392}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) / ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( FirstVNF_Mem - PN ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( RCSe ,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( MLU + ( Max( Min( MLU ,MUR ),Max( DS,Max( MLU,RRSe ) ) ) / Max( MUM,( RCSe * RRSe ) ) ) ) ) ) / MLU )", "obj1": 0.2948207171314741, "obj2": 0.567363879821579}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( ( MRS * RRS ) + FirstVNF_CPU_Server ) + ( FirstVNF_CPU * Min( ( Min( ( ( MDR / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( DS / ( CS / MLU ) ) - Max( CS,Min( ( CS + Max( RRSe,MUR ) ) ,CS ) ) ) ) ,( RCSe / Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * MUM ) ) ,( Max( ( RRSe + RMSe ),MUM ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9203187250996016, "obj2": 0.03396753158886602}, {"determining": "( ( ( ( PN / Max( PN,AMS ) ) - DDR ) - ( Max( AMS,( ( ACS + ( ACS + FirstVNF_CPU_Server ) ) - ARS ) ) / ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server * ACS ) )", "choosing": "( Min( ( CS * ( ( CS * MUR ) * ( ( CS + MUC ) + ( MUC + ( ( MUR * DS ) / MUC ) ) ) ) ) ,( RMSe - ( DS + MLU ) ) ) + Max( ( MUC * ( ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) + CS ) ),( MUR / Max( ( DS / ( MUC - Max( ( MUC / MLU ),RRSe ) ) ),MUC ) ) ) )", "obj1": 0.9820717131474104, "obj2": 0.00648853408205146}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( AMS + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,RRS ) ) + RRS ) ) ) ) ) + ( BR - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) * MUC ),( ( ( Max( ( ( DS / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RRSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( RMSe - CS ) - RCSe ) ) )", "obj1": 0.8665338645418327, "obj2": 0.05072468652754668}, {"determining": "( ( ( ( Min( ( MRS / ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_CPU_Server ,Min( ARS ,Max( AMS,FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( BR,Min( ( ( ARS * DDR ) * AMS ) ,MRS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Max( CRS,BR ) )", "choosing": "( ( MUR / Min( MUR ,MUR ) ) + Min( ( CS * Min( RMSe ,( MUR * ( RMSe + MLU ) ) ) ) ,( MUC - ( CS + ( MUR * Min( ( MUR * Max( MLU,DS ) ) ,Max( RMSe,( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.03864135116696866}, {"determining": "( ( ( ( PN / ( ACS * Min( Min( ARS ,Max( AMS,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( ( Max( MUM,MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( RMSe,RMSe ) ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.042561575701173984}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( ( ( PN + Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( Const / FirstVNF_Mem ) )", "choosing": "( Min( ( CS * Min( ( MUR - RCSe ) ,MLU ) ) ,( ( Max( RCSe,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) ) )", "obj1": 0.4760956175298805, "obj2": 0.3279490572005449}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ( FirstVNF_RAM * DDR ) ) ) * ( ( FirstVNF_Mem - Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ARS ) ,( ( FirstVNF_RAM + RRS ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) + Max( DDR,ARS ) )", "choosing": "( ( ( RCSe * ( ( Min( RRSe ,( Max( CS,MUM ) + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + MUM ) * Min( MUC ,RRSe ) ) ) ) ) + ( MUC + ( Max( MUC,MUC ) * MUC ) ) ) / ( Min( MLU ,MUC ) / MUR ) )", "obj1": 0.32669322709163345, "obj2": 0.5180801089363457}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( ( ( AMS + ( DDR - ARS ) ) + Min( PN ,MRS ) ) - ( ( PN / Min( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ,DDR ) ) - DDR ) ) + ( ( ( PN + MDR ) * ( Min( CRS ,FirstVNF_CPU ) - AMS ) ) / FirstVNF_RAM ) )", "choosing": "( ( RCSe * ( ( ( MUC / ( MUM + ( CS - CS ) ) ) - RRSe ) - ( ( MLU - ( DS / ( Max( RCSe,MLU ) + ( MUM - RRSe ) ) ) ) * ( DS / ( RCSe - DS ) ) ) ) ) + ( RMSe / CS ) )", "obj1": 0.950199203187251, "obj2": 0.020211195597307594}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( MUC * ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) ) ) + RRSe )", "obj1": 0.43824701195219123, "obj2": 0.36876123141150297}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + RRSe )", "obj1": 0.43227091633466136, "obj2": 0.3769789073406824}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( MUM + CS ) * Min( MUC ,RRSe ) ) / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ) )", "obj1": 0.9561752988047809, "obj2": 0.01545669187710215}, {"determining": "( Max( Max( BR,Min( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MRS * ( Max( DDR,BR ) + ( MRS / MRS ) ) ) ) ,FirstVNF_CPU ) ),CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe - ( ( RMSe / ( RRSe * RRSe ) ) * Min( ( MLU / CS ) ,( ( DS + ( RRSe * ( RCSe / RRSe ) ) ) / Max( MUC,Min( MLU ,( MUC + MUM ) ) ) ) ) ) ) / CS )", "obj1": 0.17928286852589642, "obj2": 0.6911326379223992}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( Min( ( FirstVNF_Mem + BR ) ,Const ) ,( DDR * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ARS ) ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_RAM_Server ,ARS ) ) ) ) ) )", "choosing": "( Max( MUR,( RRSe - MUM ) ) / ( Max( MUM,DS ) + CS ) )", "obj1": 0.3047808764940239, "obj2": 0.554629935036637}, {"determining": "( ( FirstVNF_RAM * ( Max( MDR,FirstVNF_CPU_Server ) + RRS ) ) + ( ( ( ( Min( ACS ,CRS ) + AMS ) / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( DDR,FirstVNF_RAM_Server ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "( ( ( ( CS - ( RCSe - CS ) ) * DS ) - Min( MUM ,CS ) ) + Min( ( MLU / ( RCSe * ( RMSe / ( RMSe + RRSe ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.8107569721115537, "obj2": 0.0741476763505501}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ( FirstVNF_RAM / MRS ) * FirstVNF_RAM ) - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,Min( ( DS - RMSe ) ,MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - MUM ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.45212168947440057}, {"determining": "( ( Max( Min( Min( ( FirstVNF_Mem + BR ) ,MDR ) ,FirstVNF_RAM_Server ),Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server + ARS ) ) / ( FirstVNF_CPU + ( DDR * ( ( ( FirstVNF_Mem + ARS ) / Min( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ARS ) ,( FirstVNF_Mem_Server - CRS ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( ( RRSe * DS ) / ( RCSe - RMSe ) ) * ( MUR / ( RCSe * RMSe ) ) ) ) / ( MLU + Max( ( ( ( CS * CS ) / ( ( ( MUC / RCSe ) + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ),( RMSe / ( MLU + Max( ( Max( MUC,RCSe ) + MUM ),( MUR / RRSe ) ) ) ) ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6406036595083153}, {"determining": "( Min( ( Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + Min( AMS ,FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) + ( ( ARS * MDR ) + MRS ) ) ,( MRS + PN ) ) + ( MRS * FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS * ( ( ( RMSe + MUR ) * MUC ) * Min( MUC ,( MLU + ( RMSe / RMSe ) ) ) ) ) ,( RMSe - ( Max( ( ( DS - MLU ) + ( RMSe - DS ) ),DS ) * CS ) ) )", "obj1": 0.30876494023904383, "obj2": 0.546755539140311}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ( ( ( MDR / PN ) - ( MRS - FirstVNF_RAM_Server ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( Max( DS,Max( CS,DS ) ) + RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( ( ( ( MLU + RCSe ) * RMSe ) * DS ),( DS / RCSe ) ) ) ) ) )", "obj1": 0.44223107569721115, "obj2": 0.36495586478386455}, {"determining": "( ( Max( Min( Max( ARS,( ( BR - ACS ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,FirstVNF_CPU_Server ),BR ) * ( MRS - FirstVNF_CPU_Server ) ) / ( MDR * ( Min( DDR ,FirstVNF_Mem_Server ) - DDR ) ) )", "choosing": "( RCSe / ( CS + Max( MLU,CS ) ) )", "obj1": 0.9661354581673307, "obj2": 0.013818350554828766}, {"determining": "( ( ( ( PN / ( DDR * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( ( MLU + MUM ) - ( Min( Min( MUM ,Max( RMSe,Max( RRSe,MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.2649402390438247, "obj2": 0.5939754206824407}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( Min( ARS ,Max( FirstVNF_CPU,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( CS - MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Max( MUR,RMSe ) )", "obj1": 0.8864541832669323, "obj2": 0.042561575701173984}], "33": [{"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem - ( MDR / PN ) ) ,( ACS + ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) ) ) ) ) * ( ( FirstVNF_Mem + ( FirstVNF_Mem + BR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem - ( MDR / PN ) ) ,( ACS + ( ( BR - RRS ) / ( CRS * FirstVNF_Mem_Server ) ) ) ) ) ) * ( ( FirstVNF_Mem + ( FirstVNF_Mem * BR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "Min( ( MUM - MUM ) ,( MUC / Max( ( CS - ( RCSe / ( MUC * MLU ) ) ),Max( Min( ( MUM * CS ) ,( ( MUR - ( MUC + RCSe ) ) / ( ( CS / MUM ) + RCSe ) ) ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( AMS + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,RRS ) ) + RRS ) ) ) ) ) + ( BR - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) * MUC ),( ( ( Max( ( ( DS / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RRSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( RMSe - CS ) - RCSe ) ) )", "obj1": 0.8665338645418327, "obj2": 0.05072468652754668}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( ( ( Max( PN,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) - ARS ) + ( ( ( Const + AMS ) / ( ( ( FirstVNF_CPU_Server - Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) - MDR ) + MDR ) ) * ( FirstVNF_Mem + RRS ) ) )", "choosing": "( ( Min( MUR ,Min( RRSe ,( ( ( MUM + RCSe ) + ( RRSe + DS ) ) / MUR ) ) ) * MUM ) + Min( RRSe ,Max( DS,MUM ) ) )", "obj1": 0.7231075697211156, "obj2": 0.12526447140843247}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( AMS + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( ACS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( FirstVNF_Mem + ( AMS / FirstVNF_RAM ) ) * Min( RRS ,( AMS - FirstVNF_RAM ) ) ) ,( ACS / DDR ) ) - Min( ( Max( ( RRS * AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Min( DS ,RMSe ) * MUC ),Min( ( RRSe - MUC ) ,( DS / Min( ( MUM + MUM ) ,MUR ) ) ) ) + Min( ( CS * ( ( CS * CS ) / ( ( CS + MUC ) + ( ( MUC * ( MUC / RRSe ) ) / ( ( MUM * MUR ) / MUC ) ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7768924302788844, "obj2": 0.09285637938224871}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( DDR + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( BR ,BR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) + ( FirstVNF_RAM_Server + ( BR + ( ( ( ( FirstVNF_Mem_Server - PN ) / PN ) - FirstVNF_CPU ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS - MLU ) / CS )", "obj1": 0.7450199203187251, "obj2": 0.11245176865923623}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( FirstVNF_RAM * ( Max( MDR,FirstVNF_CPU_Server ) + RRS ) ) + ( ( ( ( Min( ACS ,CRS ) + AMS ) / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( DDR,FirstVNF_RAM_Server ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "( ( ( ( CS - ( RCSe - CS ) ) * DS ) - Min( MUM ,CS ) ) + Min( ( MLU / ( RCSe * ( RMSe / ( RMSe + RRSe ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.8107569721115537, "obj2": 0.0741476763505501}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( FirstVNF_Mem + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,RRS ) ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.8426294820717132, "obj2": 0.06290405668690524}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( ACS / ACS ) + ( ( ( ARS / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) / Min( FirstVNF_CPU ,Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( ( CS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( MUC,MLU ) - ( ( RCSe * RCSe ) + DS ) ) ) ) * ( ( ( ( DS / ( MUC / DS ) ) * ( MUR - ( RCSe * CS ) ) ) / RCSe ) / ( MUM - MUC ) ) ) ) / Max( RCSe,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6531633830271687}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU ) * RRS ) - FirstVNF_CPU ) + ( ( ARS - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( Max( Const,Const ) + CRS ) ) )", "choosing": "( Min( ( ( RCSe * ( ( ( MLU / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MUC * Min( MUC ,RRSe ) ) ) ) ) * ( RRSe * MLU ) ) ,( ( Max( RMSe,( RRSe - MUM ) ) + ( ( CS * MLU ) / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) + ( MLU + MUR ) )", "obj1": 0.6633466135458167, "obj2": 0.17513969504593271}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server * Min( ARS ,FirstVNF_RAM_Server ) ) + ( RRS / ACS ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ),RRSe ) ,( MUR + RRSe ) )", "obj1": 0.6812749003984063, "obj2": 0.16840896744200037}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( ( RRS - PN ) - ( Max( AMS,Max( DDR,ARS ) ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / Min( PN ,DDR ) ) - ARS ) ,( ( ( Const * FirstVNF_CPU_Server ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe + ( RMSe - ( ( Max( MLU,MUM ) * Max( RRSe,DS ) ) + DS ) ) ) + Max( MUC,( MUC * MUR ) ) )", "obj1": 0.4601593625498008, "obj2": 0.3434644245378344}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * FirstVNF_RAM ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( CS + MUC ) + ( MUC + ( ( MUR * DS ) / MUC ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) + CS ) ) )", "obj1": 0.5776892430278885, "obj2": 0.23990483108676347}, {"determining": "( ( Max( Min( Min( ( FirstVNF_Mem + BR ) ,MDR ) ,FirstVNF_RAM_Server ),Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server + ARS ) ) / ( FirstVNF_CPU + ( DDR * ( ( ( FirstVNF_Mem + ARS ) / Min( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ARS ) ,( FirstVNF_Mem_Server - CRS ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( ( RRSe * DS ) / ( RCSe - RMSe ) ) * ( MUR / ( RCSe * RMSe ) ) ) ) / ( MLU + Max( ( ( ( CS * CS ) / ( ( ( MUC / RCSe ) + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ),( RMSe / ( MLU + Max( ( Max( MUC,RCSe ) + MUM ),( MUR / RRSe ) ) ) ) ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6406036595083153}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( AMS * FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem * Min( ( ( FirstVNF_RAM - PN ) - ( MDR / PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( ( ( MLU / CS ) * RCSe ) + RCSe ) * MUC ) * Min( MUC ,( MUM + Min( MUR ,DS ) ) ) ) ) ,( ( CS * RCSe ) - ( Min( CS ,Min( ( MUR * RMSe ) ,MUC ) ) * ( CS * Max( Min( DS ,MLU ),( Max( DS,( CS - MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.15513931977158193}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( ( PN + CRS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( PN + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC - RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) + ( CS * ( RCSe * ( Min( ( RRSe / ( MUM + MUC ) ) ,RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) )", "obj1": 0.23705179282868527, "obj2": 0.6363547091433022}, {"determining": "( ( FirstVNF_CPU_Server * ( MDR - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Max( CRS,MDR ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( ( RRSe - RRSe ) / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( ( MUR * CS ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3605577689243028, "obj2": 0.4724077857920532}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) * ( ( RRS / ( PN + RRS ) ) / FirstVNF_Mem ) ) ) - DDR ) - ( RRS * ACS ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Max( ( MUR / Max( ( DS / RCSe ),MUC ) ),( MUC * MUC ) ) * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( Max( ( MLU * CS ),MLU ),( ( MLU + CS ) * ( RRSe / MUC ) ) ) ) ) ) ,( RCSe / RRSe ) ) )", "obj1": 0.6274900398406374, "obj2": 0.20510978283282133}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( MRS - Max( ARS,AMS ) ) * CRS ) )", "choosing": "( ( ( ( ( RRSe + ( MLU * MUR ) ) / ( ( ( ( CS / CS ) * ( MLU - CS ) ) * MUR ) * DS ) ) * ( ( RRSe - MUM ) + RRSe ) ) * RRSe ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7888757897041578}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.20119521912350596, "obj2": 0.6644567269549355}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( ( ( FirstVNF_Mem + BR ) + ( ( FirstVNF_RAM_Server * ( MDR + ACS ) ) + ( FirstVNF_Mem - BR ) ) ) ,FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * MDR ) + ARS ) ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem * ARS ) / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe * RRSe ) / ( RRSe * DS ) ) * ( MUR - ( DS * ( ( RRSe / ( RMSe / RRSe ) ) * Max( ( RMSe - MUM ),MLU ) ) ) ) ) ) / ( Max( ( ( ( CS * CS ) / ( ( ( MUR * RRSe ) - ( RRSe - DS ) ) + ( MUC + ( RCSe / MUC ) ) ) ) + MUM ),DS ) + CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6246100382508564}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,PN ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS ) / CS )", "obj1": 0.17330677290836655, "obj2": 0.7012972613864342}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUC ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.4795657848546178}, {"determining": "( ( Const + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Max( BR,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Max( ( FirstVNF_RAM / MRS ),FirstVNF_Mem ) ) / ( FirstVNF_RAM / ARS ) ) ) ) ) + ( ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * DS ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) / Max( ( ( DS / MUR ) + ( MLU * Max( RRSe,MUM ) ) ),RRSe ) )", "obj1": 0.18725099601593626, "obj2": 0.6817292305118411}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + MRS ) ) * Min( ARS ,FirstVNF_CPU ) ) - Min( Min( ARS ,Max( BR,AMS ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUC ) ) - RRSe ) - Max( MUC,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( MUM / ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) ) / DS ) ) ) )", "obj1": 0.5916334661354582, "obj2": 0.23305573349015532}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ARS ) / Min( RRS ,DDR ) ) - Min( ( MRS / FirstVNF_Mem_Server ) ,ACS ) ) - Min( FirstVNF_Mem_Server ,( Const / ( ( FirstVNF_RAM / ( CRS * ( CRS - FirstVNF_Mem ) ) ) + MRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( ( ACS + PN ) / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS * DS ) + Max( ( MUC * ( ( MUC - ( Max( RRSe,CS ) / MUC ) ) - ( ( RRSe - Max( ( DS / MUC ),( MUC - MLU ) ) ) + RMSe ) ) ),Max( MUC,MUC ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5124358274969616}, {"determining": "( Max( Max( BR,Min( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MRS * ( Max( DDR,BR ) + ( MRS / MRS ) ) ) ) ,FirstVNF_CPU ) ),CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe - ( ( RMSe / ( RRSe * RRSe ) ) * Min( ( MLU / CS ) ,( ( DS + ( RRSe * ( RCSe / RRSe ) ) ) / Max( MUC,Min( MLU ,( MUC + MUM ) ) ) ) ) ) ) / CS )", "obj1": 0.17928286852589642, "obj2": 0.6911326379223992}, {"determining": "( ( FirstVNF_CPU_Server * ( BR - ( FirstVNF_Mem - RRS ) ) ) + ( ( FirstVNF_RAM_Server + ( Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_Mem ) ) * ( ( ( FirstVNF_Mem / ( ( ARS / BR ) * Const ) ) + ARS ) / ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( RCSe * Min( RCSe ,MUR ) ) * CS ) ,Min( ( ( MLU - CS ) + Max( MUR,( RRSe - ( ( MLU + MUR ) / MUM ) ) ) ) ,( ( MUM + RRSe ) / Max( ( Min( RCSe ,MUM ) * RCSe ),RRSe ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.4945228237051121}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) + Min( ( Max( AMS,( ARS - ( FirstVNF_CPU - RRS ) ) ) / Min( PN ,FirstVNF_Mem ) ) ,( ( PN / Max( PN,AMS ) ) - DDR ) ) )", "choosing": "( ( ( CS * ( ( ( CS + CS ) + ( MUC + ( ( MUR * DS ) / MUC ) ) ) * ( CS * MUR ) ) ) * ( RMSe - ( DS + MLU ) ) ) + Max( ( MUC * MUC ),( MUR / Max( ( DS / ( MUC - ( ( DS * RCSe ) + ( RCSe * MUM ) ) ) ),MUC ) ) ) )", "obj1": 0.7629482071713147, "obj2": 0.10431631016243494}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.40039840637450197, "obj2": 0.41992961550706764}, {"determining": "( ( ( ( PN / ( ( Min( Max( DDR,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) * DDR ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,Min( AMS ,CRS ) ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * ( MUR - ( ( MUC / CS ) / MUR ) ) ) - ( CS * ( RRSe - ( MUR + DS ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.1468063192535561}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( Max( AMS,BR ) ,FirstVNF_CPU_Server ) ,( MDR - MRS ) ) ) ) - DDR ) - ( ( ( ( RRS + FirstVNF_Mem ) / FirstVNF_CPU ) + FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + Min( AMS ,FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( Max( ( MUC / ( CS / DS ) ),MLU ) + Min( MUC ,MLU ) ),MUM ) ),MUM ) + Min( ( CS * ( ( ( RCSe - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM + MUC ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7928286852589641, "obj2": 0.08206510451714924}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( Max( DS,RCSe ) + CS ) * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3466135458167331, "obj2": 0.4929774284522182}, {"determining": "( ( FirstVNF_CPU / RRS ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( Min( ( PN / MDR ) ,FirstVNF_CPU ) * ( ACS + ( FirstVNF_Mem + Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) * ( ( FirstVNF_RAM_Server / ARS ) / ( ( PN * FirstVNF_Mem_Server ) + PN ) ) ) )", "choosing": "( ( CS / ( DS * RMSe ) ) / ( MUM * Min( RCSe ,( ( Max( DS,( ( RRSe / RMSe ) / MUM ) ) * Min( MUM ,RRSe ) ) + RRSe ) ) ) )", "obj1": 0.3705179282868526, "obj2": 0.4569284859109998}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( Max( FirstVNF_RAM,CRS ) - FirstVNF_RAM ) ) * ( ( Min( ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * Min( MUM ,DS ) ) + Min( ( MLU / ( Max( ( Min( ( MUM / RMSe ) ,RMSe ) + ( ( CS + CS ) * MUC ) ),RCSe ) * ( RMSe / ( MUM - RRSe ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7151394422310757, "obj2": 0.13793892355310597}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( ( RRS + FirstVNF_Mem ) / FirstVNF_CPU ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( ( DS / Max( RCSe,RCSe ) ) + Min( MUC ,MLU ) ) / MUM ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( MUM + MUC ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06461028267834149}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( AMS / ( Min( Const ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( RMSe + RRSe ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.39017701656130627}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( MDR / PN ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4820717131474104, "obj2": 0.32106790856157896}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - AMS ),MDR ) ,( ( ( RRS + MRS ) - FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( MDR / PN ) ,( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Min( RCSe ,DS ) / ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * RRSe ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4043824701195219, "obj2": 0.4080064897042111}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( FirstVNF_CPU * ( ACS / AMS ) ) / ( CRS * ( ( DDR / BR ) - BR ) ) )", "choosing": "( Max( CS,( MUR - ( RMSe - CS ) ) ) / RCSe )", "obj1": 0.19721115537848605, "obj2": 0.6743618390841017}, {"determining": "( ( BR * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( ( ARS + ( FirstVNF_Mem_Server - ARS ) ) / BR ) + ( Const + BR ) ) ) ) )", "choosing": "Min( Min( ( Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) - ( Min( Min( MUM ,Max( RMSe,Min( DS ,MLU ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5722478418860395}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_CPU_Server + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU ,ARS ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - ( ( Min( FirstVNF_CPU ,( ( MRS / FirstVNF_CPU ) + AMS ) ) - BR ) * DDR ) ) - ( ( FirstVNF_RAM_Server + ARS ) / Max( AMS,( DDR - AMS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( PN + ACS ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) * ( ( MUM - ( RMSe - CS ) ) - Max( CS,Min( ( CS + Max( MUR,RCSe ) ) ,CS ) ) ) ) ,( RCSe - Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * Min( Min( RMSe ,MUC ) ,MUM ) ) ) ,( Max( MUM,MUM ) / ( Min( MUM ,( MUC * MLU ) ) + Max( RMSe,RMSe ) ) ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.4940239043824701, "obj2": 0.3044021123163963}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.651394422310757, "obj2": 0.1830725582909572}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( ( ( ( FirstVNF_CPU + RRS ) / PN ) - FirstVNF_CPU ),Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( ( ( MLU + MUM ) - ( Min( MUR ,( MUM * Max( RMSe,Max( RRSe,MUM ) ) ) ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( ( RMSe * Max( DS,MUM ) ) - ( ( MUM + Max( ( ( ( RCSe * RRSe ) / ( DS + RMSe ) ) * MUR ),( Max( DS,MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42916702762323905}, {"determining": "( ( ( ( PN / AMS ) - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( ( MLU / RRSe ) * Max( ( MUM + DS ),CS ) ) / MUR ) / DS ) ) ) + Max( MUC,( Min( RRSe ,( MUM + MLU ) ) * MUC ) ) )", "obj1": 0.4900398406374502, "obj2": 0.31056407020399246}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR / MRS ) + ( Const + BR ) ) * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ARS / PN ) - FirstVNF_CPU ) ,( FirstVNF_Mem_Server * PN ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( Min( Max( MUR,( RRSe - MUM ) ) ,( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( ( MUR + DS ) / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5845196996347067}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( ACS * ACS ) + ( ( ( MDR - ( ACS * FirstVNF_Mem_Server ) ) / ARS ) / Min( AMS ,( ( ( FirstVNF_CPU + RRS ) + ( ACS - FirstVNF_RAM_Server ) ) + ACS ) ) ) )", "choosing": "Min( ( CS * Max( ( RRSe * MUR ),RMSe ) ) ,( ( RMSe * RRSe ) - ( CS * ( Max( Max( DS,MLU ),( Max( RMSe,CS ) + ( ( DS - DS ) + Max( CS,RMSe ) ) ) ) * CS ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5357735856526976}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),RRS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - ( ( Min( MLU ,RRSe ) - MUC ) + MUM ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) + ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3784860557768924, "obj2": 0.44397816549502916}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - RRS ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( MDR / PN ) )", "choosing": "( ( MUC / MUM ) / CS )", "obj1": 0.3207171314741036, "obj2": 0.5235624695434501}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( FirstVNF_Mem - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) + Min( ( CS * ( ( Max( MUM,MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( RMSe,RMSe ) ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - RMSe ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7569721115537849, "obj2": 0.10677279617483663}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7948207171314741, "obj2": 0.07783824817819668}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) + Min( ( CRS * ( Max( MDR,MDR ) + ARS ) ) ,DDR ) )", "choosing": "( Min( MLU ,RCSe ) + ( ( Min( Max( DS,RRSe ) ,MLU ) / ( RRSe * Max( MUC,DS ) ) ) + MUR ) )", "obj1": 0.9402390438247012, "obj2": 0.02482510431966823}, {"determining": "( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU - ACS ) - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( Max( ( FirstVNF_Mem + ARS ),( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( MUC / RRSe ) ) ) * ( ( Max( MUC,MLU ) / MUR ) / DS ) ) ) + RRSe )", "obj1": 0.4262948207171315, "obj2": 0.37891765415740997}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( ( FirstVNF_RAM * MRS ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( MLU + MUR ) + ( RCSe * ( RMSe * ( RMSe + MUC ) ) ) ) ,DS ) + Min( ( CS * Min( RCSe ,( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( RRSe / RRSe ) * ( DS / ( CS / DS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.601593625498008, "obj2": 0.2238663962764161}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7071713147410359, "obj2": 0.14164177789044294}, {"determining": "( ( ( ( PN / ( DDR * ( ( AMS / FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ) - Min( BR ,FirstVNF_RAM ) ) - FirstVNF_CPU ) + ( ( ( ( Const + PN ) + ARS ) / ( DDR + ( BR * ( ACS / ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS * FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( Min( RRSe ,RCSe ) * DS ) ) ) ) ) ,( ( CS + ( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5318725099601593, "obj2": 0.2780456827026255}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + ACS ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server - ( AMS - Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,Max( BR,Const ) ) ) ) ) + Min( PN ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ARS + FirstVNF_CPU_Server ) ) ) ) * ( Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( RRSe,Min( ( ( Max( MLU,( MUR - MLU ) ) * ( RMSe * ( RRSe - MUM ) ) ) + ( ( MUR / Min( MLU ,( MLU / DS ) ) ) * RRSe ) ) ,( MUC * MUC ) ) ) ,( MUM + MUM ) )", "obj1": 0.6414342629482072, "obj2": 0.19689054253219093}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) / ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( FirstVNF_Mem - PN ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( RCSe ,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( MLU + ( Max( Min( MLU ,MUR ),Max( DS,Max( MLU,RRSe ) ) ) / Max( MUM,( RCSe * RRSe ) ) ) ) ) ) / MLU )", "obj1": 0.2948207171314741, "obj2": 0.567363879821579}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6135458167330677, "obj2": 0.215504571463029}, {"determining": "( ( ( ( PN / ( ACS * Min( Min( ARS ,Max( AMS,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( ( Max( MUM,MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( RMSe,RMSe ) ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.042561575701173984}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( ( ( PN + Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( Const / FirstVNF_Mem ) )", "choosing": "( Min( ( CS * Min( ( MUR - RCSe ) ,MLU ) ) ,( ( Max( RCSe,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) ) )", "obj1": 0.4760956175298805, "obj2": 0.3279490572005449}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ( FirstVNF_RAM * DDR ) ) ) * ( ( FirstVNF_Mem - Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ARS ) ,( ( FirstVNF_RAM + RRS ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) + Max( DDR,ARS ) )", "choosing": "( ( ( RCSe * ( ( Min( RRSe ,( Max( CS,MUM ) + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + MUM ) * Min( MUC ,RRSe ) ) ) ) ) + ( MUC + ( Max( MUC,MUC ) * MUC ) ) ) / ( Min( MLU ,MUC ) / MUR ) )", "obj1": 0.32669322709163345, "obj2": 0.5180801089363457}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( Max( Min( Max( ARS,( ( BR - ACS ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,FirstVNF_CPU_Server ),BR ) * ( MRS - FirstVNF_CPU_Server ) ) / ( MDR * ( Min( DDR ,FirstVNF_Mem_Server ) - DDR ) ) )", "choosing": "( RCSe / ( CS + Max( MLU,CS ) ) )", "obj1": 0.9661354581673307, "obj2": 0.013818350554828766}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( MUC * ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) ) ) + RRSe )", "obj1": 0.43824701195219123, "obj2": 0.36876123141150297}, {"determining": "( ( RRS * ( FirstVNF_Mem_Server - Min( ( ( MDR / PN ) - Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) + ( CRS / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / MUC ) * ( MUR - ( MUR * MLU ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4302788844621514, "obj2": 0.3751583826060303}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ( FirstVNF_RAM / MRS ) * FirstVNF_RAM ) - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,Min( ( DS - RMSe ) ,MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - MUM ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.45212168947440057}, {"determining": "( Min( ( Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + Min( AMS ,FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) + ( ( ARS * MDR ) + MRS ) ) ,( MRS + PN ) ) + ( MRS * FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS * ( ( ( RMSe + MUR ) * MUC ) * Min( MUC ,( MLU + ( RMSe / RMSe ) ) ) ) ) ,( RMSe - ( Max( ( ( DS - MLU ) + ( RMSe - DS ) ),DS ) * CS ) ) )", "obj1": 0.30876494023904383, "obj2": 0.546755539140311}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ( ( ( MDR / PN ) - ( MRS - FirstVNF_RAM_Server ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( Max( DS,Max( CS,DS ) ) + RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( ( ( ( MLU + RCSe ) * RMSe ) * DS ),( DS / RCSe ) ) ) ) ) )", "obj1": 0.44223107569721115, "obj2": 0.36495586478386455}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( MUR + MUC ) - Max( RMSe,Min( MLU ,Max( RRSe,( MLU * DS ) ) ) ) ) + CS ) ) )", "obj1": 0.6195219123505976, "obj2": 0.21311020399086392}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( ( MRS * RRS ) + FirstVNF_CPU_Server ) + ( FirstVNF_CPU * Min( ( Min( ( ( MDR / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( DS / ( CS / MLU ) ) - Max( CS,Min( ( CS + Max( RRSe,MUR ) ) ,CS ) ) ) ) ,( RCSe / Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * MUM ) ) ,( Max( ( RRSe + RMSe ),MUM ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9203187250996016, "obj2": 0.03396753158886602}, {"determining": "( ( ( ( Min( ( MRS / ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_CPU_Server ,Min( ARS ,Max( AMS,FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( BR,Min( ( ( ARS * DDR ) * AMS ) ,MRS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Max( CRS,BR ) )", "choosing": "( ( MUR / Min( MUR ,MUR ) ) + Min( ( CS * Min( RMSe ,( MUR * ( RMSe + MLU ) ) ) ) ,( MUC - ( CS + ( MUR * Min( ( MUR * Max( MLU,DS ) ) ,Max( RMSe,( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.03864135116696866}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( Min( ARS ,Max( FirstVNF_CPU,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( CS - MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Max( MUR,RMSe ) )", "obj1": 0.8864541832669323, "obj2": 0.042561575701173984}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( CRS + BR ) + ( ACS - Max( Const,Max( DDR,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Max( FirstVNF_Mem,ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Max( ( FirstVNF_CPU - PN ),PN ) ) ) ) ) )", "choosing": "( ( RMSe * ( ( Max( RCSe,( MUM + DS ) ) / ( MLU / Max( MUM,DS ) ) ) * Max( RMSe,RRSe ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.40256334247266556}, {"determining": "( ( FirstVNF_Mem - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe * Max( ( ( MLU + CS ) * Min( MUC ,RRSe ) ),RRSe ) ) + Min( ( CS * ( ( Max( MUM,MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( RMSe,RMSe ) ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.649402390438247, "obj2": 0.19051968628895463}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( MRS,Min( DDR ,ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ACS - ( ACS * AMS ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + ( ( MUC * ( RMSe / ( CS * ( Min( RRSe ,MUM ) * RCSe ) ) ) ) * RRSe ) )", "obj1": 0.5976095617529881, "obj2": 0.2249786333232724}, {"determining": "( ( FirstVNF_CPU_Server * ( ( MDR * FirstVNF_CPU ) - ( ( FirstVNF_Mem + BR ) + Min( ( FirstVNF_Mem + BR ) ,Const ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( MLU / ( RMSe - ( MUM * ( MUM * ( ( RCSe + MUR ) + RRSe ) ) ) ) ) * ( ( Max( RCSe,( MUM + CS ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( MUC / ( MUC / MLU ) ) * ( MUR - ( CS * MUC ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41832669322709165, "obj2": 0.40198263328497047}, {"determining": "( ( ( ( AMS + ( DDR - ARS ) ) + Min( PN ,MRS ) ) - ( ( PN / Min( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ,DDR ) ) - DDR ) ) + ( ( ( PN + MDR ) * ( Min( CRS ,FirstVNF_CPU ) - AMS ) ) / FirstVNF_RAM ) )", "choosing": "( ( RCSe * ( ( ( MUC / ( MUM + ( CS - CS ) ) ) - RRSe ) - ( ( MLU - ( DS / ( Max( RCSe,MLU ) + ( MUM - RRSe ) ) ) ) * ( DS / ( RCSe - DS ) ) ) ) ) + ( RMSe / CS ) )", "obj1": 0.950199203187251, "obj2": 0.020211195597307594}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.03573954834675411}, {"determining": "( ( ( Const - Const ) + ( ( ( FirstVNF_RAM + ( FirstVNF_CPU * Const ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) / ( Max( PN,( DDR * ( FirstVNF_CPU + MDR ) ) ) - PN ) )", "choosing": "( ( CS * Min( DS ,( RRSe / RRSe ) ) ) / RCSe )", "obj1": 0.9760956175298805, "obj2": 0.009880452621462255}], "34": [{"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( ( DDR * ( BR / FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( Min( MRS ,BR ) * ( ( ( PN * CRS ) - Min( ( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ,Min( ( MDR / PN ) ,ARS ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( MLU * RMSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + ( ( Min( Max( ( CS - Min( ( RCSe * DS ) ,MLU ) ),MUR ) ,RMSe ) - RRSe ) * ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR + Const ) - FirstVNF_CPU ) - PN ) ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem - ( MDR / PN ) ) ,( ACS + ( FirstVNF_RAM / ( CRS * FirstVNF_Mem_Server ) ) ) ) ) ) * ( ( FirstVNF_Mem + ( FirstVNF_Mem + BR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( ( ( ( FirstVNF_CPU + RRS ) / PN ) - FirstVNF_CPU ),Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( ( ( MLU + MUM ) - ( Min( MUR ,( MUM * Max( RMSe,Max( RRSe,MUM ) ) ) ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( ( RMSe * Max( DS,MUM ) ) - ( ( MUM + Max( ( ( ( RCSe * RRSe ) / ( DS + RMSe ) ) * MUR ),( Max( DS,MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42916702762323905}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( AMS + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,RRS ) ) + RRS ) ) ) ) ) + ( BR - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) * MUC ),( ( ( Max( ( ( DS / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RRSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( RMSe - CS ) - RCSe ) ) )", "obj1": 0.8665338645418327, "obj2": 0.05072468652754668}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( ACS / ACS ) + ( ( ( ARS / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) / Min( FirstVNF_CPU ,Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( ( CS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( MUC,MLU ) - ( ( RCSe * RCSe ) + DS ) ) ) ) * ( ( ( ( DS / ( MUC / DS ) ) * ( MUR - ( RCSe * CS ) ) ) / RCSe ) / ( MUM - MUC ) ) ) ) / Max( RCSe,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6531633830271687}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),RRS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - ( ( Min( MLU ,RRSe ) - MUC ) + MUM ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) + ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3784860557768924, "obj2": 0.44397816549502916}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( AMS + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( ACS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( FirstVNF_Mem + ( AMS / FirstVNF_RAM ) ) * Min( RRS ,( AMS - FirstVNF_RAM ) ) ) ,( ACS / DDR ) ) - Min( ( Max( ( RRS * AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Min( DS ,RMSe ) * MUC ),Min( ( RRSe - MUC ) ,( DS / Min( ( MUM + MUM ) ,MUR ) ) ) ) + Min( ( CS * ( ( CS * CS ) / ( ( CS + MUC ) + ( ( MUC * ( MUC / RRSe ) ) / ( ( MUM * MUR ) / MUC ) ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7768924302788844, "obj2": 0.09285637938224871}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2835036582248788}, {"determining": "( ( ( RRS - PN ) - ( Max( AMS,Max( DDR,ARS ) ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / Min( PN ,DDR ) ) - ARS ) ,( ( ( Const * FirstVNF_CPU_Server ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe + ( RMSe - ( ( Max( MLU,MUM ) * Max( RRSe,DS ) ) + DS ) ) ) + Max( MUC,( MUC * MUR ) ) )", "obj1": 0.4601593625498008, "obj2": 0.3434644245378344}, {"determining": "( ( Max( Min( Min( ( FirstVNF_Mem + BR ) ,MDR ) ,FirstVNF_RAM_Server ),Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server + ARS ) ) / ( FirstVNF_CPU + ( DDR * ( ( ( FirstVNF_Mem + ARS ) / Min( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ARS ) ,( FirstVNF_Mem_Server - CRS ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( ( RRSe * DS ) / ( RCSe - RMSe ) ) * ( MUR / ( RCSe * RMSe ) ) ) ) / ( MLU + Max( ( ( ( CS * CS ) / ( ( ( MUC / RCSe ) + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ),( RMSe / ( MLU + Max( ( Max( MUC,RCSe ) + MUM ),( MUR / RRSe ) ) ) ) ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6406036595083153}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( ( Max( PN,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) - ARS ) + ( ( ( Const + AMS ) / ( ( ( FirstVNF_CPU_Server - Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) - MDR ) + MDR ) ) * ( FirstVNF_Mem + RRS ) ) )", "choosing": "( ( Min( MUR ,Min( RRSe ,( ( ( MUM + RCSe ) + ( RRSe + DS ) ) / MUR ) ) ) * MUM ) + Min( RRSe ,Max( DS,MUM ) ) )", "obj1": 0.7231075697211156, "obj2": 0.12526447140843247}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( AMS * FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem * Min( ( ( FirstVNF_RAM - PN ) - ( MDR / PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( ( ( MLU / CS ) * RCSe ) + RCSe ) * MUC ) * Min( MUC ,( MUM + Min( MUR ,DS ) ) ) ) ) ,( ( CS * RCSe ) - ( Min( CS ,Min( ( MUR * RMSe ) ,MUC ) ) * ( CS * Max( Min( DS ,MLU ),( Max( DS,( CS - MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.15513931977158193}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( ( PN + CRS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( PN + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC - RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) + ( CS * ( RCSe * ( Min( ( RRSe / ( MUM + MUC ) ) ,RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) )", "obj1": 0.23705179282868527, "obj2": 0.6363547091433022}, {"determining": "( ( FirstVNF_CPU_Server * ( MDR - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Max( CRS,MDR ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( ( RRSe - RRSe ) / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( ( MUR * CS ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3605577689243028, "obj2": 0.4724077857920532}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( MRS - Max( ARS,AMS ) ) * CRS ) )", "choosing": "( ( ( ( ( RRSe + ( MLU * MUR ) ) / ( ( ( ( CS / CS ) * ( MLU - CS ) ) * MUR ) * DS ) ) * ( ( RRSe - MUM ) + RRSe ) ) * RRSe ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7888757897041578}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU ) * RRS ) - FirstVNF_CPU ) + ( ( ARS - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( Max( Const,Const ) + CRS ) ) )", "choosing": "( Min( ( ( RCSe * ( ( ( MLU / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MUC * Min( MUC ,RRSe ) ) ) ) ) * ( RRSe * MLU ) ) ,( ( Max( RMSe,( RRSe - MUM ) ) + ( ( CS * MLU ) / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) + ( MLU + MUR ) )", "obj1": 0.6633466135458167, "obj2": 0.17513969504593271}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.20119521912350596, "obj2": 0.6644567269549355}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( ( ( FirstVNF_Mem + BR ) + ( ( FirstVNF_RAM_Server * ( MDR + ACS ) ) + ( FirstVNF_Mem - BR ) ) ) ,FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * MDR ) + ARS ) ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem * ARS ) / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe * RRSe ) / ( RRSe * DS ) ) * ( MUR - ( DS * ( ( RRSe / ( RMSe / RRSe ) ) * Max( ( RMSe - MUM ),MLU ) ) ) ) ) ) / ( Max( ( ( ( CS * CS ) / ( ( ( MUR * RRSe ) - ( RRSe - DS ) ) + ( MUC + ( RCSe / MUC ) ) ) ) + MUM ),DS ) + CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6246100382508564}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) * ( ( RRS / ( PN + RRS ) ) / FirstVNF_Mem ) ) ) - DDR ) - ( RRS * ACS ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Max( ( MUR / Max( ( DS / RCSe ),MUC ) ),( MUC * MUC ) ) * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( Max( ( MLU * CS ),MLU ),( ( MLU + CS ) * ( RRSe / MUC ) ) ) ) ) ) ,( RCSe / RRSe ) ) )", "obj1": 0.6274900398406374, "obj2": 0.20510978283282133}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU ,ARS ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - ( ( Min( FirstVNF_CPU ,( ( MRS / FirstVNF_CPU ) + AMS ) ) - BR ) * DDR ) ) - ( ( FirstVNF_RAM_Server + ARS ) / Max( AMS,( DDR - AMS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( CRS * BR ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Max( Max( ( MDR + DDR ),( ACS * FirstVNF_CPU_Server ) ),( PN * ( RRS + FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( Max( RRSe,( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ) ) ,( RRSe - ( ( RCSe * RMSe ) + CS ) ) )", "obj1": 0.9760956175298805, "obj2": 0.009419008828288233}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,PN ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS ) / CS )", "obj1": 0.17330677290836655, "obj2": 0.7012972613864342}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUC ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.4795657848546178}, {"determining": "( ( Const + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Max( BR,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Max( ( FirstVNF_RAM / MRS ),FirstVNF_Mem ) ) / ( FirstVNF_RAM / ARS ) ) ) ) ) + ( ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * DS ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) / Max( ( ( DS / MUR ) + ( MLU * Max( RRSe,MUM ) ) ),RRSe ) )", "obj1": 0.18725099601593626, "obj2": 0.6817292305118411}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * FirstVNF_RAM ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( CS + MUC ) + ( MUC + ( ( MUR * DS ) / MUC ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) + CS ) ) )", "obj1": 0.5776892430278885, "obj2": 0.23990483108676347}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ARS ) / Min( RRS ,DDR ) ) - Min( ( MRS / FirstVNF_Mem_Server ) ,ACS ) ) - Min( FirstVNF_Mem_Server ,( Const / ( ( FirstVNF_RAM / ( CRS * ( CRS - FirstVNF_Mem ) ) ) + MRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( ( ACS + PN ) / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS * DS ) + Max( ( MUC * ( ( MUC - ( Max( RRSe,CS ) / MUC ) ) - ( ( RRSe - Max( ( DS / MUC ),( MUC - MLU ) ) ) + RMSe ) ) ),Max( MUC,MUC ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5124358274969616}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( Max( Max( BR,Min( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MRS * ( Max( DDR,BR ) + ( MRS / MRS ) ) ) ) ,FirstVNF_CPU ) ),CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe - ( ( RMSe / ( RRSe * RRSe ) ) * Min( ( MLU / CS ) ,( ( DS + ( RRSe * ( RCSe / RRSe ) ) ) / Max( MUC,Min( MLU ,( MUC + MUM ) ) ) ) ) ) ) / CS )", "obj1": 0.17928286852589642, "obj2": 0.6911326379223992}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( FirstVNF_CPU_Server * ( BR - ( FirstVNF_Mem - RRS ) ) ) + ( ( FirstVNF_RAM_Server + ( Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_Mem ) ) * ( ( ( FirstVNF_Mem / ( ( ARS / BR ) * Const ) ) + ARS ) / ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( RCSe * Min( RCSe ,MUR ) ) * CS ) ,Min( ( ( MLU - CS ) + Max( MUR,( RRSe - ( ( MLU + MUR ) / MUM ) ) ) ) ,( ( MUM + RRSe ) / Max( ( Min( RCSe ,MUM ) * RCSe ),RRSe ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.4945228237051121}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.40039840637450197, "obj2": 0.410109461985853}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( AMS / ( Min( Const ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( RMSe + RRSe ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.39017701656130627}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( Max( AMS,BR ) ,FirstVNF_CPU_Server ) ,( MDR - MRS ) ) ) ) - DDR ) - ( ( ( ( RRS + FirstVNF_Mem ) / FirstVNF_CPU ) + FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + Min( AMS ,FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( Max( ( MUC / ( CS / DS ) ),MLU ) + Min( MUC ,MLU ) ),MUM ) ),MUM ) + Min( ( CS * ( ( ( RCSe - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( MUM + MUC ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7928286852589641, "obj2": 0.08206510451714924}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( Max( DS,RCSe ) + CS ) * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3466135458167331, "obj2": 0.4929774284522182}, {"determining": "( ( FirstVNF_RAM * ( Max( MDR,FirstVNF_CPU_Server ) + RRS ) ) + ( ( ( ( Min( ACS ,CRS ) + AMS ) / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( DDR,FirstVNF_RAM_Server ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "( ( ( ( CS - ( RCSe - CS ) ) * DS ) - Min( MUM ,CS ) ) + Min( ( MLU / ( RCSe * ( RMSe / ( RMSe + RRSe ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.8107569721115537, "obj2": 0.0741476763505501}, {"determining": "( ( FirstVNF_CPU / RRS ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( Min( ( PN / MDR ) ,FirstVNF_CPU ) * ( ACS + ( FirstVNF_Mem + Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) * ( ( FirstVNF_RAM_Server / ARS ) / ( ( PN * FirstVNF_Mem_Server ) + PN ) ) ) )", "choosing": "( ( CS / ( DS * RMSe ) ) / ( MUM * Min( RCSe ,( ( Max( DS,( ( RRSe / RMSe ) / MUM ) ) * Min( MUM ,RRSe ) ) + RRSe ) ) ) )", "obj1": 0.3705179282868526, "obj2": 0.4569284859109998}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,Max( ARS,AMS ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( MDR / PN ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * ( ( CS / CS ) * ( MLU - CS ) ) ),CS ) + ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4800796812749004, "obj2": 0.32031831772361663}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( FirstVNF_CPU * ( ACS / AMS ) ) / ( CRS * ( ( DDR / BR ) - BR ) ) )", "choosing": "( Max( CS,( MUR - ( RMSe - CS ) ) ) / RCSe )", "obj1": 0.19721115537848605, "obj2": 0.6743618390841017}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - Max( AMS,( DDR - ARS ) ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RCSe / RRSe ) ) / MUM ) / DS ) ) ) / CS ) / CS )", "obj1": 0.7410358565737052, "obj2": 0.11702884086276823}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( Min( ( Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + Min( AMS ,FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) + ( ( ARS * MDR ) + MRS ) ) ,( MRS + PN ) ) + ( MRS * FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS * ( ( ( RMSe + MUR ) * MUC ) * Min( MUC ,( MLU + ( RMSe / RMSe ) ) ) ) ) ,( RMSe - ( Max( ( ( DS - MLU ) + ( RMSe - DS ) ),DS ) * CS ) ) )", "obj1": 0.30876494023904383, "obj2": 0.546755539140311}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,Min( ARS ,( ACS + FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.848605577689243, "obj2": 0.05957516637759811}, {"determining": "( ( ( ( PN / AMS ) - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( ( MLU / RRSe ) * Max( ( MUM + DS ),CS ) ) / MUR ) / DS ) ) ) + Max( MUC,( Min( RRSe ,( MUM + MLU ) ) * MUC ) ) )", "obj1": 0.4900398406374502, "obj2": 0.31056407020399246}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.651394422310757, "obj2": 0.1830725582909572}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR / MRS ) + ( Const + BR ) ) * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ARS / PN ) - FirstVNF_CPU ) ,( FirstVNF_Mem_Server * PN ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( Min( Max( MUR,( RRSe - MUM ) ) ,( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( ( MUR + DS ) / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5845196996347067}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( ACS * ACS ) + ( ( ( MDR - ( ACS * FirstVNF_Mem_Server ) ) / ARS ) / Min( AMS ,( ( ( FirstVNF_CPU + RRS ) + ( ACS - FirstVNF_RAM_Server ) ) + ACS ) ) ) )", "choosing": "Min( ( CS * Max( ( RRSe * MUR ),RMSe ) ) ,( ( RMSe * RRSe ) - ( CS * ( Max( Max( DS,MLU ),( Max( RMSe,CS ) + ( ( DS - DS ) + Max( CS,RMSe ) ) ) ) * CS ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5357735856526976}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( Min( DDR ,ARS ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server - DDR ) / CRS ) ) ) ) ) )", "choosing": "( Max( ( Min( Min( Max( MUC,Max( DS,Max( RCSe,RCSe ) ) ) ,MUR ) ,Max( ( RRSe / RMSe ),Max( ( RMSe * MUC ),DS ) ) ) * MUC ),CS ) + ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) - ( DS / ( CS / MLU ) ) ) * ( ( MUM / ( Min( ( RRSe / RRSe ) ,( MUR - RCSe ) ) * ( MLU / ( MUC * MUM ) ) ) ) / DS ) ) ) )", "obj1": 0.7649402390438247, "obj2": 0.09717214279086882}, {"determining": "( ( ( ( Min( ( MRS / ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_CPU_Server ,Min( ARS ,Max( AMS,FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( BR,Min( ( ( ARS * DDR ) * AMS ) ,MRS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Max( CRS,BR ) )", "choosing": "( ( MUR / Min( MUR ,MUR ) ) + Min( ( CS * Min( RMSe ,( MUR * ( RMSe + MLU ) ) ) ) ,( MUC - ( CS + ( MUR * Min( ( MUR * Max( MLU,DS ) ) ,Max( RMSe,( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.03864135116696866}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - RRS ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( MDR / PN ) )", "choosing": "( ( MUC / MUM ) / CS )", "obj1": 0.3207171314741036, "obj2": 0.5235624695434501}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server * Min( ARS ,FirstVNF_RAM_Server ) ) + ( RRS / ACS ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ),RRSe ) ,( MUR + RRSe ) )", "obj1": 0.6812749003984063, "obj2": 0.16840896744200037}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6135458167330677, "obj2": 0.215504571463029}, {"determining": "( ( FirstVNF_CPU_Server * Min( Const ,( MDR - MDR ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server / BR ) ) * ( FirstVNF_RAM_Server - ( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - FirstVNF_CPU ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC + RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( ( MUR * ( ( MUR * MUC ) / Min( MLU ,MUR ) ) ) / Max( RRSe,MLU ) ) / DS ) ) ) + ( CS * ( RCSe * Max( RRSe,CS ) ) ) )", "obj1": 0.4262948207171315, "obj2": 0.3772114905495399}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( ( FirstVNF_RAM * MRS ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( MLU + MUR ) + ( RCSe * ( RMSe * ( RMSe + MUC ) ) ) ) ,DS ) + Min( ( CS * Min( RCSe ,( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( RRSe / RRSe ) * ( DS / ( CS / DS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.601593625498008, "obj2": 0.2238663962764161}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Max( BR,Const ) * CRS ) - Const ) )", "choosing": "( ( ( RRSe * Max( ( MLU + CS ),( CS + DS ) ) ) / CS ) / CS )", "obj1": 0.9920318725099602, "obj2": 0.0025431885204270136}, {"determining": "( ( ( ( PN / ( ( Min( Max( DDR,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) * DDR ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,Min( AMS ,CRS ) ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * ( MUR - ( ( MUC / CS ) / MUR ) ) ) - ( CS * ( RRSe - ( MUR + DS ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.1468063192535561}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + ACS ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server - ( AMS - Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,Max( BR,Const ) ) ) ) ) + Min( PN ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ARS + FirstVNF_CPU_Server ) ) ) ) * ( Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( RRSe,Min( ( ( Max( MLU,( MUR - MLU ) ) * ( RMSe * ( RRSe - MUM ) ) ) + ( ( MUR / Min( MLU ,( MLU / DS ) ) ) * RRSe ) ) ,( MUC * MUC ) ) ) ,( MUM + MUM ) )", "obj1": 0.6414342629482072, "obj2": 0.19689054253219093}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server * Min( ARS ,FirstVNF_RAM_Server ) ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ARS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ( MDR + DDR ) ) ) ) )", "choosing": "Min( Max( RRSe,( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( MUC * ( RRSe / RRSe ) ) ) / DS ) ) ) ,( RRSe - ( ( RCSe * RMSe ) + CS ) ) )", "obj1": 0.6772908366533864, "obj2": 0.17095872661665848}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( ( RRS + FirstVNF_Mem ) / FirstVNF_CPU ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( ( DS / Max( RCSe,RCSe ) ) + Min( MUC ,MLU ) ) / MUM ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( ( MUC / ( CS / MLU ) ),( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( MUM + MUC ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8207171314741036, "obj2": 0.07033525873768304}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) / ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( FirstVNF_Mem - PN ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( RCSe ,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( MLU + ( Max( Min( MLU ,MUR ),Max( DS,Max( MLU,RRSe ) ) ) / Max( MUM,( RCSe * RRSe ) ) ) ) ) ) / MLU )", "obj1": 0.2948207171314741, "obj2": 0.567363879821579}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) + Min( ( CRS * ( Max( MDR,MDR ) + ARS ) ) ,DDR ) )", "choosing": "( Min( MLU ,RCSe ) + ( ( Min( Max( DS,RRSe ) ,MLU ) / ( RRSe * Max( MUC,DS ) ) ) + MUR ) )", "obj1": 0.9402390438247012, "obj2": 0.02482510431966823}, {"determining": "( ( ( ( PN / ( ACS * Min( Min( ARS ,Max( AMS,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( ( Max( MUM,MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( RMSe,RMSe ) ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.042561575701173984}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ( FirstVNF_RAM * DDR ) ) ) * ( ( FirstVNF_Mem - Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ARS ) ,( ( FirstVNF_RAM + RRS ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) + Max( DDR,ARS ) )", "choosing": "( ( ( RCSe * ( ( Min( RRSe ,( Max( CS,MUM ) + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + MUM ) * Min( MUC ,RRSe ) ) ) ) ) + ( MUC + ( Max( MUC,MUC ) * MUC ) ) ) / ( Min( MLU ,MUC ) / MUR ) )", "obj1": 0.32669322709163345, "obj2": 0.5180801089363457}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( CS - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( MUC * ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) ) ) + RRSe )", "obj1": 0.43824701195219123, "obj2": 0.36876123141150297}, {"determining": "( ( ( ( PN + Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( Const / FirstVNF_Mem ) )", "choosing": "( Min( ( CS * Min( ( MUR - RCSe ) ,MLU ) ) ,( ( Max( RCSe,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) ) )", "obj1": 0.4760956175298805, "obj2": 0.3279490572005449}, {"determining": "( ( FirstVNF_Mem - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe * Max( ( ( MLU + CS ) * Min( MUC ,RRSe ) ),RRSe ) ) + Min( ( CS * ( ( Max( MUM,MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( RMSe,RMSe ) ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.649402390438247, "obj2": 0.19051968628895463}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - AMS ),MDR ) ,( ( ( RRS + MRS ) - FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( MDR / PN ) ,( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Min( RCSe ,DS ) / ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * RRSe ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4043824701195219, "obj2": 0.4080064897042111}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ( ( ( MDR / PN ) - ( MRS - FirstVNF_RAM_Server ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( Max( DS,Max( CS,DS ) ) + RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( ( ( ( MLU + RCSe ) * RMSe ) * DS ),( DS / RCSe ) ) ) ) ) )", "obj1": 0.44223107569721115, "obj2": 0.36495586478386455}, {"determining": "( ( DDR / AMS ) + Min( ( Max( AMS,( MRS - ( FirstVNF_CPU - RRS ) ) ) / Min( FirstVNF_Mem ,PN ) ) ,( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( CS * ( ( ( CS + CS ) + ( MUC + ( ( MUR * DS ) / MUC ) ) ) * ( CS * MUR ) ) ) * ( RMSe - ( DS + MLU ) ) ) + Max( ( ( Max( MUR,( RRSe - RMSe ) ) + ( DS / ( Max( ( RCSe - RRSe ),MUC ) / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ),( MUR / Max( ( DS / ( MUC - ( ( DS * RCSe ) + ( RCSe * MUM ) ) ) ),MUC ) ) ) )", "obj1": 0.7211155378486056, "obj2": 0.1370256997610198}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.03573954834675411}, {"determining": "( ( ( ( ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) - DDR ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_Mem ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + DS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( Max( ( MUM + DS ),RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.5, "obj2": 0.3028542919569413}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( ( ( AMS * DDR ) + RRS ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( MLU / RRSe ) ) ,( ( Max( ( RRSe - MUM ),MUR ) + ( ( DS * MLU ) - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5876494023904383, "obj2": 0.23536989152849266}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + MRS ) ) * Min( ARS ,FirstVNF_CPU ) ) - Min( Min( ARS ,Max( BR,AMS ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUC ) ) - RRSe ) - Max( MUC,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( MUM / ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) ) / DS ) ) ) )", "obj1": 0.5916334661354582, "obj2": 0.23305573349015532}, {"determining": "( ( RRS * ( FirstVNF_Mem_Server - Min( ( ( MDR / PN ) - Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) + ( CRS / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / MUC ) * ( MUR - ( MUR * MLU ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4302788844621514, "obj2": 0.3751583826060303}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( ( ( PN / ( ACS * Min( Min( ( Const / Const ) ,Max( AMS,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( ( Max( MUM,MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( RMSe,Min( MUM ,MUC ) ) ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.042561575701173984}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7948207171314741, "obj2": 0.07783824817819668}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( CRS + BR ) + ( ACS - Max( Const,Max( DDR,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Max( FirstVNF_Mem,ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Max( ( FirstVNF_CPU - PN ),PN ) ) ) ) ) )", "choosing": "( ( RMSe * ( ( Max( RCSe,( MUM + DS ) ) / ( MLU / Max( MUM,DS ) ) ) * Max( RMSe,RRSe ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.40256334247266556}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( MRS,Min( DDR ,ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ACS - ( ACS * AMS ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + ( ( MUC * ( RMSe / ( CS * ( Min( RRSe ,MUM ) * RCSe ) ) ) ) * RRSe ) )", "obj1": 0.5976095617529881, "obj2": 0.2249786333232724}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * ( ( ARS + MRS ) / ( FirstVNF_RAM_Server + ARS ) ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( RRS,BR ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( RMSe * ( Min( RCSe ,RCSe ) / DS ) ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe * RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.21209395440277956}, {"determining": "( ( FirstVNF_CPU_Server * ( ( MDR * FirstVNF_CPU ) - ( ( FirstVNF_Mem + BR ) + Min( ( FirstVNF_Mem + BR ) ,Const ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( MLU / ( RMSe - ( MUM * ( MUM * ( ( RCSe + MUR ) + RRSe ) ) ) ) ) * ( ( Max( RCSe,( MUM + CS ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( MUC / ( MUC / MLU ) ) * ( MUR - ( CS * MUC ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41832669322709165, "obj2": 0.40198263328497047}, {"determining": "( ( BR * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( ( ARS + ( PN * CRS ) ) / BR ) + ( Const + BR ) ) ) ) )", "choosing": "Min( Min( ( Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) - ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5722478418860395}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( Max( FirstVNF_RAM,CRS ) - FirstVNF_RAM ) ) * ( ( Min( ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * Min( MUM ,DS ) ) + Min( ( MLU / ( Max( ( Min( ( MUM / RMSe ) ,RMSe ) + ( ( CS + CS ) * MUC ) ),RCSe ) * ( RMSe / ( MUM - RRSe ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7151394422310757, "obj2": 0.13793892355310597}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( DDR + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( BR ,BR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) + ( FirstVNF_RAM_Server + ( BR + ( ( ( ( FirstVNF_Mem_Server - PN ) / PN ) - FirstVNF_CPU ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS - MLU ) / CS )", "obj1": 0.7450199203187251, "obj2": 0.11245176865923623}, {"determining": "( ( BR + FirstVNF_CPU_Server ) - ( ( ( MRS * RRS ) + FirstVNF_CPU_Server ) + ( FirstVNF_CPU * Min( ( Min( ( ( MDR / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ,( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) + ( ( DS / ( CS / MLU ) ) - Max( CS,Min( ( CS + Max( RRSe,MUR ) ) ,CS ) ) ) ) ,( RCSe / Min( ( MUR + ( ( ( CS * MLU ) * RRSe ) * MUM ) ) ,( Max( ( RRSe + RMSe ),MUM ) + CS ) ) ) ) ,( MLU - MUR ) )", "obj1": 0.9203187250996016, "obj2": 0.03396753158886602}], "35": [{"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( AMS + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,RRS ) ) + RRS ) ) ) ) ) + ( BR - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( ( DDR * ( BR / FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( Min( MRS ,BR ) * ( ( ( PN * CRS ) - Min( ( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ,Min( ( MDR / PN ) ,ARS ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( MLU * RMSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + ( ( Min( Max( ( CS - Min( ( RCSe * DS ) ,MLU ) ),MUR ) ,RMSe ) - RRSe ) * ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( ( RRS + FirstVNF_Mem ) / FirstVNF_CPU ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( ( DS / Max( RCSe,RCSe ) ) + Min( MUC ,MLU ) ) / MUM ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( ( MUC / ( CS / MLU ) ),( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( MUM + MUC ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8207171314741036, "obj2": 0.07033525873768304}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),RRS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - ( ( Min( MLU ,RRSe ) - MUC ) + MUM ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) + ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3784860557768924, "obj2": 0.44397816549502916}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( AMS + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,RRS ) ) + RRS ) ) ) ) ) + ( BR - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) * MUC ),( ( ( Max( ( ( DS / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RRSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( RMSe - CS ) - RCSe ) ) )", "obj1": 0.8665338645418327, "obj2": 0.05072468652754668}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( ( ( ( FirstVNF_CPU + RRS ) / PN ) - FirstVNF_CPU ),Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( ( ( MLU + MUM ) - ( Min( MUR ,( MUM * Max( RMSe,Max( RRSe,MUM ) ) ) ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( ( RMSe * Max( DS,MUM ) ) - ( ( MUM + Max( ( ( ( RCSe * RRSe ) / ( DS + RMSe ) ) * MUR ),( Max( DS,MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42916702762323905}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( ACS / ACS ) + ( ( ( ARS / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) / Min( FirstVNF_CPU ,Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( ( CS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( MUC,MLU ) - ( ( RCSe * RCSe ) + DS ) ) ) ) * ( ( ( ( DS / ( MUC / DS ) ) * ( MUR - ( RCSe * CS ) ) ) / RCSe ) / ( MUM - MUC ) ) ) ) / Max( RCSe,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6531633830271687}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( AMS + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( ACS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( FirstVNF_Mem + ( AMS / FirstVNF_RAM ) ) * Min( RRS ,( AMS - FirstVNF_RAM ) ) ) ,( ACS / DDR ) ) - Min( ( Max( ( RRS * AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Min( DS ,RMSe ) * MUC ),Min( ( RRSe - MUC ) ,( DS / Min( ( MUM + MUM ) ,MUR ) ) ) ) + Min( ( CS * ( ( CS * CS ) / ( ( CS + MUC ) + ( ( MUC * ( MUC / RRSe ) ) / ( ( MUM * MUR ) / MUC ) ) ) ) ) ,( ( CS + MLU ) - RMSe ) ) )", "obj1": 0.7768924302788844, "obj2": 0.09285637938224871}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,Min( ARS ,( ACS + FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.848605577689243, "obj2": 0.05957516637759811}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUC ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.4795657848546178}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( ( RRS - PN ) - ( Max( AMS,Max( DDR,ARS ) ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / Min( PN ,DDR ) ) - ARS ) ,( ( ( Const * FirstVNF_CPU_Server ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe + ( RMSe - ( ( Max( MLU,MUM ) * Max( RRSe,DS ) ) + DS ) ) ) + Max( MUC,( MUC * MUR ) ) )", "obj1": 0.4601593625498008, "obj2": 0.3434644245378344}, {"determining": "( ( Max( Min( Min( ( FirstVNF_Mem + BR ) ,MDR ) ,FirstVNF_RAM_Server ),Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server + ARS ) ) / ( FirstVNF_CPU + ( DDR * ( ( ( FirstVNF_Mem + ARS ) / Min( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ARS ) ,( FirstVNF_Mem_Server - CRS ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( ( RRSe * DS ) / ( RCSe - RMSe ) ) * ( MUR / ( RCSe * RMSe ) ) ) ) / ( MLU + Max( ( ( ( CS * CS ) / ( ( ( MUC / RCSe ) + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ),( RMSe / ( MLU + Max( ( Max( MUC,RCSe ) + MUM ),( MUR / RRSe ) ) ) ) ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6406036595083153}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( FirstVNF_CPU / RRS ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( Min( ( PN / MDR ) ,FirstVNF_CPU ) * ( ACS + ( FirstVNF_Mem + Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) ) * ( ( FirstVNF_RAM_Server / ARS ) / ( ( PN * FirstVNF_Mem_Server ) + PN ) ) ) )", "choosing": "( ( CS / ( DS * RMSe ) ) / ( MUM * Min( RCSe ,( ( Max( DS,( ( RRSe / RMSe ) / MUM ) ) * Min( MUM ,RRSe ) ) + RRSe ) ) ) )", "obj1": 0.3705179282868526, "obj2": 0.4569284859109998}, {"determining": "( ( ( Max( PN,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) - ARS ) + ( ( ( Const + AMS ) / ( ( ( FirstVNF_CPU_Server - Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) - MDR ) + MDR ) ) * ( FirstVNF_Mem + RRS ) ) )", "choosing": "( ( Min( MUR ,Min( RRSe ,( ( ( MUM + RCSe ) + ( RRSe + DS ) ) / MUR ) ) ) * MUM ) + Min( RRSe ,Max( DS,MUM ) ) )", "obj1": 0.7231075697211156, "obj2": 0.12526447140843247}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( ( PN + CRS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( PN + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC - RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) + ( CS * ( RCSe * ( Min( ( RRSe / ( MUM + MUC ) ) ,RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) )", "obj1": 0.23705179282868527, "obj2": 0.6363547091433022}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( FirstVNF_Mem + ACS ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3605577689243028, "obj2": 0.465618985052976}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( MRS - Max( ARS,AMS ) ) * CRS ) )", "choosing": "( ( ( ( ( RRSe + ( MLU * MUR ) ) / ( ( ( ( CS / CS ) * ( MLU - CS ) ) * MUR ) * DS ) ) * ( ( RRSe - MUM ) + RRSe ) ) * RRSe ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7888757897041578}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU ) * RRS ) - FirstVNF_CPU ) + ( ( ARS - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( Max( Const,Const ) + CRS ) ) )", "choosing": "( Min( ( ( RCSe * ( ( ( MLU / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MUC * Min( MUC ,RRSe ) ) ) ) ) * ( RRSe * MLU ) ) ,( ( Max( RMSe,( RRSe - MUM ) ) + ( ( CS * MLU ) / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) + ( MLU + MUR ) )", "obj1": 0.6633466135458167, "obj2": 0.17513969504593271}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.20119521912350596, "obj2": 0.6644567269549355}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( ( ( FirstVNF_Mem + BR ) + ( ( FirstVNF_RAM_Server * ( MDR + ACS ) ) + ( FirstVNF_Mem - BR ) ) ) ,FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * MDR ) + ARS ) ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem * ARS ) / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe * RRSe ) / ( RRSe * DS ) ) * ( MUR - ( DS * ( ( RRSe / ( RMSe / RRSe ) ) * Max( ( RMSe - MUM ),MLU ) ) ) ) ) ) / ( Max( ( ( ( CS * CS ) / ( ( ( MUR * RRSe ) - ( RRSe - DS ) ) + ( MUC + ( RCSe / MUC ) ) ) ) + MUM ),DS ) + CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6246100382508564}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,PN ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS ) / CS )", "obj1": 0.17330677290836655, "obj2": 0.7012972613864342}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) + Min( ( CRS * ( Max( MDR,MDR ) + ARS ) ) ,DDR ) )", "choosing": "( Min( MLU ,RCSe ) + ( ( Min( Max( DS,RRSe ) ,MLU ) / ( RRSe * Max( MUC,DS ) ) ) + MUR ) )", "obj1": 0.9402390438247012, "obj2": 0.02482510431966823}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( Const + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Max( BR,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Max( ( FirstVNF_RAM / MRS ),FirstVNF_Mem ) ) / ( FirstVNF_RAM / ARS ) ) ) ) ) + ( ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * DS ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) / Max( ( ( DS / MUR ) + ( MLU * Max( RRSe,MUM ) ) ),RRSe ) )", "obj1": 0.18725099601593626, "obj2": 0.6817292305118411}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * FirstVNF_RAM ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( CS + MUC ) + ( MUC + ( ( MUR * DS ) / MUC ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) + CS ) ) )", "obj1": 0.5776892430278885, "obj2": 0.23990483108676347}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - Max( AMS,( DDR - ARS ) ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RCSe / RRSe ) ) / MUM ) / DS ) ) ) / CS ) / CS )", "obj1": 0.7410358565737052, "obj2": 0.11702884086276823}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ARS ) / Min( RRS ,DDR ) ) - Min( ( MRS / FirstVNF_Mem_Server ) ,ACS ) ) - Min( FirstVNF_Mem_Server ,( Const / ( ( FirstVNF_RAM / ( CRS * ( CRS - FirstVNF_Mem ) ) ) + MRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( ( ACS + PN ) / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS * DS ) + Max( ( MUC * ( ( MUC - ( Max( RRSe,CS ) / MUC ) ) - ( ( RRSe - Max( ( DS / MUC ),( MUC - MLU ) ) ) + RMSe ) ) ),Max( MUC,MUC ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5124358274969616}, {"determining": "( Max( Max( BR,Min( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MRS * ( Max( DDR,BR ) + ( MRS / MRS ) ) ) ) ,FirstVNF_CPU ) ),CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe - ( ( RMSe / ( RRSe * RRSe ) ) * Min( ( MLU / CS ) ,( ( DS + ( RRSe * ( RCSe / RRSe ) ) ) / Max( MUC,Min( MLU ,( MUC + MUM ) ) ) ) ) ) ) / CS )", "obj1": 0.17928286852589642, "obj2": 0.6911326379223992}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( FirstVNF_CPU_Server * ( BR - ( FirstVNF_Mem - RRS ) ) ) + ( ( FirstVNF_RAM_Server + ( Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_Mem ) ) * ( ( ( FirstVNF_Mem / ( ( ARS / BR ) * Const ) ) + ARS ) / ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( RCSe * Min( RCSe ,MUR ) ) * CS ) ,Min( ( ( MLU - CS ) + Max( MUR,( RRSe - ( ( MLU + MUR ) / MUM ) ) ) ) ,( ( MUM + RRSe ) / Max( ( Min( RCSe ,MUM ) * RCSe ),RRSe ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.4945228237051121}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) * ( ( RRS / ( PN + RRS ) ) / FirstVNF_Mem ) ) ) - DDR ) - ( RRS * ACS ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Max( ( MUR / Max( ( DS / RCSe ),MUC ) ),( MUC * MUC ) ) * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( Max( ( MLU * CS ),MLU ),( ( MLU + CS ) * ( RRSe / MUC ) ) ) ) ) ) ,( RCSe / RRSe ) ) )", "obj1": 0.6274900398406374, "obj2": 0.20510978283282133}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( AMS / ( Min( Const ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( RMSe + RRSe ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.39017701656130627}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( AMS * FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem * Min( ( ( FirstVNF_RAM - PN ) - ( MDR / PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( ( ( MLU / CS ) * RCSe ) + RCSe ) * MUC ) * Min( MUC ,( MUM + Min( MUR ,DS ) ) ) ) ) ,( ( CS * RCSe ) - ( Min( CS ,Min( ( MUR * RMSe ) ,MUC ) ) * ( CS * Max( Min( DS ,MLU ),( Max( DS,( CS - MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.15513931977158193}, {"determining": "( ( Max( ( ( CRS - ( Const - ( FirstVNF_CPU + Max( MDR,PN ) ) ) ) * FirstVNF_CPU_Server ),Const ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - ( MRS - MDR ) ),Min( ARS ,Min( ACS ,RRS ) ) ) ,( ( ARS / BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + Max( BR,( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - AMS ) ) ) ) )", "choosing": "( Max( ( MUC - MUC ),( ( RRSe / ( MUM + MUC ) ) - RRSe ) ) + Min( ( Min( ( Min( ( MUC * MUC ) ,( ( DS * RCSe ) - CS ) ) + ( RCSe * RCSe ) ) ,Max( CS,RMSe ) ) * CS ) ,( ( ( ( ( DS / ( CS / DS ) ) * Min( RRSe ,RRSe ) ) / MUM ) / DS ) * ( ( ( RRSe / ( ( RMSe + MUC ) - ( RMSe * RMSe ) ) ) * ( Min( MLU ,CS ) / DS ) ) / MUM ) ) ) )", "obj1": 0.7928286852589641, "obj2": 0.07945122595729638}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( Max( DS,RCSe ) + CS ) * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3466135458167331, "obj2": 0.4929774284522182}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( FirstVNF_CPU * ( ACS / AMS ) ) / ( CRS * ( ( DDR / BR ) - BR ) ) )", "choosing": "( Max( CS,( MUR - ( RMSe - CS ) ) ) / RCSe )", "obj1": 0.19721115537848605, "obj2": 0.6743618390841017}, {"determining": "( ( BR * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( ( ARS + ( PN * CRS ) ) / BR ) + ( Const + BR ) ) ) ) )", "choosing": "Min( Min( ( Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) - ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5722478418860395}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( Min( ( Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + Min( AMS ,FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) + ( ( ARS * MDR ) + MRS ) ) ,( MRS + PN ) ) + ( MRS * FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS * ( ( ( RMSe + MUR ) * MUC ) * Min( MUC ,( MLU + ( RMSe / RMSe ) ) ) ) ) ,( RMSe - ( Max( ( ( DS - MLU ) + ( RMSe - DS ) ),DS ) * CS ) ) )", "obj1": 0.30876494023904383, "obj2": 0.546755539140311}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8007968127490039, "obj2": 0.07401111337793972}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6135458167330677, "obj2": 0.215504571463029}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.651394422310757, "obj2": 0.1830725582909572}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR / MRS ) + ( Const + BR ) ) * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ARS / PN ) - FirstVNF_CPU ) ,( FirstVNF_Mem_Server * PN ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( Min( Max( MUR,( RRSe - MUM ) ) ,( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( ( MUR + DS ) / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5845196996347067}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3944223107569721, "obj2": 0.4123962335505597}, {"determining": "( ( ACS * ACS ) + ( ( ( MDR - ( ACS * FirstVNF_Mem_Server ) ) / ARS ) / Min( AMS ,( ( ( FirstVNF_CPU + RRS ) + ( ACS - FirstVNF_RAM_Server ) ) + ACS ) ) ) )", "choosing": "Min( ( CS * Max( ( RRSe * MUR ),RMSe ) ) ,( ( RMSe * RRSe ) - ( CS * ( Max( Max( DS,MLU ),( Max( RMSe,CS ) + ( ( DS - DS ) + Max( CS,RMSe ) ) ) ) * CS ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5357735856526976}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( MUM / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( CS / DS ) ) * ( ( MUR - MUC ) / RRSe ) ) / MUM ) / DS ) * ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2804369725058234}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( Max( BR,DDR ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( DS * MLU ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.852589641434263, "obj2": 0.05797134547220916}, {"determining": "( ( Min( DDR ,ARS ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server - DDR ) / CRS ) ) ) ) ) )", "choosing": "( Max( ( Min( Min( Max( MUC,Max( DS,Max( RCSe,RCSe ) ) ) ,MUR ) ,Max( ( RRSe / RMSe ),Max( ( RMSe * MUC ),DS ) ) ) * MUC ),CS ) + ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) - ( DS / ( CS / MLU ) ) ) * ( ( MUM / ( Min( ( RRSe / RRSe ) ,( MUR - RCSe ) ) * ( MLU / ( MUC * MUM ) ) ) ) / DS ) ) ) )", "obj1": 0.7649402390438247, "obj2": 0.09717214279086882}, {"determining": "( ( ( ( PN / AMS ) - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( ( MLU / RRSe ) * Max( ( MUM + DS ),CS ) ) / MUR ) / DS ) ) ) + Max( MUC,( Min( RRSe ,( MUM + MLU ) ) * MUC ) ) )", "obj1": 0.4900398406374502, "obj2": 0.31056407020399246}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( DDR + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( BR ,BR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) + ( FirstVNF_RAM_Server + ( BR + ( ( ( ( FirstVNF_Mem_Server - PN ) / PN ) - FirstVNF_CPU ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS - MLU ) / CS )", "obj1": 0.7450199203187251, "obj2": 0.11245176865923623}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( RRS + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) - DDR ) / ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( BR + FirstVNF_CPU_Server ) ) ) + Min( ACS ,PN ) ) ) )", "choosing": "( Max( ( MUR * Min( ( MUC + MLU ) ,( RCSe * MUC ) ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,MUR ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / MUC ) ) ) )", "obj1": 0.9561752988047809, "obj2": 0.01731624553501773}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( ( FirstVNF_RAM * MRS ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( MLU + MUR ) + ( RCSe * ( RMSe * ( RMSe + MUC ) ) ) ) ,DS ) + Min( ( CS * Min( RCSe ,( ( ( Min( RCSe ,DS ) / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( RRSe / RRSe ) * ( DS / ( CS / DS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5517928286852589, "obj2": 0.2602425535597695}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5179282868525896, "obj2": 0.28821551956496216}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - RRS ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( MDR / PN ) )", "choosing": "( ( MUC / MUM ) / CS )", "obj1": 0.3207171314741036, "obj2": 0.5235624695434501}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server * Min( ARS ,FirstVNF_RAM_Server ) ) + ( RRS / ACS ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ),RRSe ) ,( MUR + RRSe ) )", "obj1": 0.6812749003984063, "obj2": 0.16840896744200037}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5358565737051793, "obj2": 0.2726843100571175}, {"determining": "( ( FirstVNF_CPU_Server * Min( Const ,( MDR - MDR ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server / BR ) ) * ( FirstVNF_RAM_Server - ( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - FirstVNF_CPU ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC + RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( ( MUR * ( ( MUR * MUC ) / Min( MLU ,MUR ) ) ) / Max( RRSe,MLU ) ) / DS ) ) ) + ( CS * ( RCSe * Max( RRSe,CS ) ) ) )", "obj1": 0.4262948207171315, "obj2": 0.3772114905495399}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( ( FirstVNF_RAM * MRS ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( MLU + MUR ) + ( RCSe * ( RMSe * ( RMSe + MUC ) ) ) ) ,DS ) + Min( ( CS * Min( RCSe ,( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( RRSe / RRSe ) * ( DS / ( CS / DS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.601593625498008, "obj2": 0.2238663962764161}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) + Min( ( Max( AMS,( ARS - ( FirstVNF_CPU - RRS ) ) ) / ( PN - FirstVNF_Mem ) ) ,( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( DDR,ACS ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( RCSe * DS ) - Min( MUM ,RMSe ) ) + Min( ( MLU * ( RCSe * ( RMSe / ( RRSe + RMSe ) ) ) ) ,( ( MUC + RCSe ) + RCSe ) ) )", "obj1": 0.7569721115537849, "obj2": 0.10656562766315453}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server * Min( ARS ,FirstVNF_RAM_Server ) ) + Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ARS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ( MDR + DDR ) ) ) ) )", "choosing": "Min( Max( RRSe,( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( MUC * ( RRSe / RRSe ) ) ) / DS ) ) ) ,( RRSe - ( ( RCSe * RMSe ) + CS ) ) )", "obj1": 0.6772908366533864, "obj2": 0.17095872661665848}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * ( ( ARS + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * ( ( CS / CS ) * ( MLU - CS ) ) ),CS ) + ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.21194775121193976}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) / ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( FirstVNF_Mem - PN ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( RCSe ,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( MLU + ( Max( Min( MLU ,MUR ),Max( DS,Max( MLU,RRSe ) ) ) / Max( MUM,( RCSe * RRSe ) ) ) ) ) ) / MLU )", "obj1": 0.2948207171314741, "obj2": 0.567363879821579}, {"determining": "( ( ( ( PN / ( ( Min( Max( DDR,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) * DDR ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,Min( AMS ,CRS ) ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * ( MUR - ( ( MUC / CS ) / MUR ) ) ) - ( CS * ( RRSe - ( MUR + DS ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.1468063192535561}, {"determining": "( ( ( ( Min( ( MRS / ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_CPU_Server ,Min( ARS ,Max( AMS,FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( BR,Min( ( ( ARS * DDR ) * AMS ) ,MRS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Max( CRS,BR ) )", "choosing": "( ( MUR / Min( MUR ,MUR ) ) + Min( ( CS * Min( RMSe ,( MUR * ( RMSe + MLU ) ) ) ) ,( MUC - ( CS + ( MUR * Min( ( MUR * Max( MLU,DS ) ) ,Max( RMSe,( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.03864135116696866}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ( FirstVNF_RAM * DDR ) ) ) * ( ( FirstVNF_Mem - Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ARS ) ,( ( FirstVNF_RAM + RRS ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) + Max( DDR,ARS ) )", "choosing": "( ( ( RCSe * ( ( Min( RRSe ,( Max( CS,MUM ) + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + MUM ) * Min( MUC ,RRSe ) ) ) ) ) + ( MUC + ( Max( MUC,MUC ) * MUC ) ) ) / ( Min( MLU ,MUC ) / MUR ) )", "obj1": 0.32669322709163345, "obj2": 0.5180801089363457}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( ( RRS + FirstVNF_Mem ) / FirstVNF_CPU ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + Min( AMS ,FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / Min( BR ,FirstVNF_RAM ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( ( DS / Max( RCSe,RCSe ) ) + Min( MUC ,MLU ) ) / MUM ) ),MUM ) + Min( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) ,( ( Max( MUR,( MUM + MUC ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.005560945792004272}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.03573954834675411}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( ( ( PN + Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( Const / FirstVNF_Mem ) )", "choosing": "( Min( ( CS * Min( ( MUR - RCSe ) ,MLU ) ) ,( ( Max( RCSe,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) ) )", "obj1": 0.4760956175298805, "obj2": 0.3279490572005449}, {"determining": "( Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.25257039892930516}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - AMS ),MDR ) ,( ( ( RRS + MRS ) - FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( MDR / PN ) ,( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Min( RCSe ,DS ) / ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * RRSe ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4043824701195219, "obj2": 0.4080064897042111}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU ,ARS ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - ( ( Min( FirstVNF_CPU ,( ( MRS / FirstVNF_CPU ) + AMS ) ) - BR ) * DDR ) ) - ( ( FirstVNF_RAM_Server + ARS ) / Max( AMS,( DDR - AMS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( CRS * BR ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Max( Max( ( MDR + DDR ),( ACS * FirstVNF_CPU_Server ) ),( PN * ( RRS + FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( Max( RRSe,( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ) ) ,( RRSe - ( ( RCSe * RMSe ) + CS ) ) )", "obj1": 0.9760956175298805, "obj2": 0.009419008828288233}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) + Min( ( Max( AMS,( ARS - ( FirstVNF_CPU - RRS ) ) ) / ( ARS / FirstVNF_RAM_Server ) ) ,( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( CS * ( ( ( CS + CS ) + ( MUC + CS ) ) * ( CS * MUR ) ) ) * ( RMSe - ( DS + MLU ) ) ) + Max( ( ( Max( MUR,( RRSe - RMSe ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ),( MUR / Max( ( DS / ( MUC - ( ( DS * RCSe ) + ( RCSe * MUM ) ) ) ),MUC ) ) ) )", "obj1": 0.7211155378486056, "obj2": 0.1367028896526727}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( ( ( AMS * DDR ) + RRS ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( MLU / RRSe ) ) ,( ( Max( ( RRSe - MUM ),MUR ) + ( ( DS * MLU ) - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5876494023904383, "obj2": 0.23536989152849266}, {"determining": "( ( RRS * ( FirstVNF_Mem_Server - Min( ( ( MDR / PN ) - Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) + ( CRS / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / MUC ) * ( MUR - ( MUR * MLU ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4302788844621514, "obj2": 0.3751583826060303}, {"determining": "( ( ( FirstVNF_CPU + BR ) - ( Max( ( ARS - DDR ),AMS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( CRS * ACS ) ) )", "choosing": "( ( Min( RCSe ,Min( Max( MUM,RMSe ) ,CS ) ) / RRSe ) + Min( ( RCSe * ( ( DS / MUR ) * ( ( ( RRSe / ( RMSe + DS ) ) - RRSe ) - Max( RRSe,( Min( MUC ,CS ) * ( MLU + CS ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.1514766892353996}, {"determining": "( ( ( ( PN / ( ACS * Min( Min( ARS ,Max( AMS,MRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) + Min( ( CS * ( ( Max( MUM,MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( RMSe,RMSe ) ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.042561575701173984}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,Max( ARS,AMS ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( MDR / PN ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4820717131474104, "obj2": 0.3199551673610211}, {"determining": "( ( FirstVNF_Mem - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe * Max( ( ( MLU + CS ) * Min( MUC ,RRSe ) ),RRSe ) ) + Min( ( CS * ( ( Max( MUM,MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( RMSe,RMSe ) ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.649402390438247, "obj2": 0.19051968628895463}, {"determining": "( ( FirstVNF_CPU_Server * ( ( MDR * FirstVNF_CPU ) - ( ( FirstVNF_Mem + BR ) + Min( ( FirstVNF_Mem + BR ) ,Const ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( MLU / ( RMSe - ( MUM * ( MUM * ( ( RCSe + MUR ) + RRSe ) ) ) ) ) * ( ( Max( RCSe,( MUM + CS ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( MUC / ( MUC / MLU ) ) * ( MUR - ( CS * MUC ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7131474103585658, "obj2": 0.14329520332940465}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU ,ARS ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - ( ( Min( FirstVNF_CPU ,( ( MRS / FirstVNF_CPU ) + AMS ) ) - BR ) * DDR ) ) - ( ( FirstVNF_RAM_Server + ARS ) / Max( AMS,( ( FirstVNF_RAM_Server + ( FirstVNF_Mem * FirstVNF_Mem ) ) - AMS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( CRS * BR ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Max( Max( ( MDR + DDR ),( ACS * FirstVNF_CPU_Server ) ),( PN * ( RRS + FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( Max( RRSe,( ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ) ) ,( RRSe - ( ( RCSe * RMSe ) + CS ) ) )", "obj1": 0.9760956175298805, "obj2": 0.009419008828288233}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( Const / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC + MUC ),( ( ( MUM + CS ) * Min( RRSe ,MUC ) ) / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( MUR * RRSe ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016220314674796066}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ( ( ( MDR / PN ) - ( MRS - FirstVNF_RAM_Server ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( Max( DS,Max( CS,DS ) ) + RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( ( ( ( MLU + RCSe ) * RMSe ) * DS ),( DS / RCSe ) ) ) ) ) )", "obj1": 0.44223107569721115, "obj2": 0.36495586478386455}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}], "36": [{"determining": "( ( ( Max( MDR,FirstVNF_CPU ) * RRS ) - FirstVNF_CPU ) + ( ( ARS - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( Max( Const,Const ) + CRS ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC - RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) + ( CS * ( RCSe * ( Min( ( RRSe / ( MUM + MUC ) ) ,RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( AMS + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,RRS ) ) + RRS ) ) ) ) ) + ( BR - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( AMS / ( Min( Const ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( RMSe + RRSe ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.39017701656130627}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),RRS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - ( ( Min( MLU ,RRSe ) - MUC ) + MUM ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) + ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3784860557768924, "obj2": 0.44397816549502916}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( ( ( ( FirstVNF_CPU + RRS ) / PN ) - FirstVNF_CPU ),Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( ( ( MLU + MUM ) - ( Min( MUR ,( MUM * Max( RMSe,Max( RRSe,MUM ) ) ) ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( ( RMSe * Max( DS,MUM ) ) - ( ( MUM + Max( ( ( ( RCSe * RRSe ) / ( DS + RMSe ) ) * MUR ),( Max( DS,MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42916702762323905}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.40239043824701193, "obj2": 0.40633196281370876}, {"determining": "( ( ( ( PN / AMS ) - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( ( MLU / RRSe ) * Max( ( MUM + DS ),CS ) ) / MUR ) / DS ) ) ) + Max( MUC,( Min( RRSe ,( MUM + MLU ) ) * MUC ) ) )", "obj1": 0.4900398406374502, "obj2": 0.31056407020399246}, {"determining": "( ( ACS / ACS ) + ( ( ( ARS / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) / Min( FirstVNF_CPU ,Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( ( CS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( MUC,MLU ) - ( ( RCSe * RCSe ) + DS ) ) ) ) * ( ( ( ( DS / ( MUC / DS ) ) * ( MUR - ( RCSe * CS ) ) ) / RCSe ) / ( MUM - MUC ) ) ) ) / Max( RCSe,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6531633830271687}, {"determining": "( ( ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9203187250996016, "obj2": 0.032593986096380395}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUC ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.4795657848546178}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( RRS - PN ) - ( Max( AMS,Max( DDR,ARS ) ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / Min( PN ,DDR ) ) - ARS ) ,( ( ( Const * FirstVNF_CPU_Server ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe + ( RMSe - ( ( Max( MLU,MUM ) * Max( RRSe,DS ) ) + DS ) ) ) + Max( MUC,( MUC * MUR ) ) )", "obj1": 0.4601593625498008, "obj2": 0.3434644245378344}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,Min( ARS ,( ACS + FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.848605577689243, "obj2": 0.05957516637759811}, {"determining": "( ( Max( Min( Min( ( FirstVNF_Mem + BR ) ,MDR ) ,FirstVNF_RAM_Server ),Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server + ARS ) ) / ( FirstVNF_CPU + ( DDR * ( ( ( FirstVNF_Mem + ARS ) / Min( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ARS ) ,( FirstVNF_Mem_Server - CRS ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( ( RRSe * DS ) / ( RCSe - RMSe ) ) * ( MUR / ( RCSe * RMSe ) ) ) ) / ( MLU + Max( ( ( ( CS * CS ) / ( ( ( MUC / RCSe ) + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ),( RMSe / ( MLU + Max( ( Max( MUC,RCSe ) + MUM ),( MUR / RRSe ) ) ) ) ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6406036595083153}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + BR ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( Min( MUM ,MUC ) / RCSe ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.7749003984063745, "obj2": 0.09227321737741101}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + Min( FirstVNF_Mem ,Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( FirstVNF_Mem + ARS ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe + RRSe ) * ( ( ( ( DS / ( MUC / CS ) ) * ( ( MUR * CS ) - ( MUR - RRSe ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.36254980079681276, "obj2": 0.4522528870299067}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( ( PN + CRS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( PN + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC - RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) + ( CS * ( RCSe * ( Min( ( RRSe / ( MUM + MUC ) ) ,RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) )", "obj1": 0.23705179282868527, "obj2": 0.6363547091433022}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( MUM / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( CS / DS ) ) * ( ( MUR - MUC ) / RRSe ) ) / MUM ) / DS ) * ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2804369725058234}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + Max( AMS,( ARS - ( FirstVNF_CPU - RRS ) ) ) ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( Min( ( MLU * ( RCSe * ( RMSe / ( RMSe + RRSe ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9402390438247012, "obj2": 0.0235417736707025}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( FirstVNF_CPU / ( RRS + FirstVNF_Mem ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Const / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,Min( FirstVNF_RAM ,( BR * MRS ) ) ) ) ) + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( ( Min( Max( MUC,RRSe ) ,CS ) - ( MLU * CS ) ),Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,RCSe ) ) - MUR ) / ( RMSe - RMSe ) ) / CS )", "obj1": 0.8227091633466136, "obj2": 0.06941769715934293}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( MRS - Max( ARS,AMS ) ) * CRS ) )", "choosing": "( ( ( ( ( RRSe + ( MLU * MUR ) ) / ( ( ( ( CS / CS ) * ( MLU - CS ) ) * MUR ) * DS ) ) * ( ( RRSe - MUM ) + RRSe ) ) * RRSe ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7888757897041578}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU ) * RRS ) - FirstVNF_CPU ) + ( ( ARS - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( Max( Const,Const ) + CRS ) ) )", "choosing": "( Min( ( ( RCSe * ( ( ( MLU / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MUC * Min( MUC ,RRSe ) ) ) ) ) * ( RRSe * MLU ) ) ,( ( Max( RMSe,( RRSe - MUM ) ) + ( ( CS * MLU ) / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) + ( MLU + MUR ) )", "obj1": 0.6633466135458167, "obj2": 0.17513969504593271}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.20119521912350596, "obj2": 0.6644567269549355}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),Min( ( ( FirstVNF_Mem + BR ) + ( ( FirstVNF_RAM_Server * ( MDR + ACS ) ) + ( FirstVNF_Mem - BR ) ) ) ,FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * MDR ) + ARS ) ) / ( FirstVNF_CPU * ( DDR * ( FirstVNF_Mem + ( ( FirstVNF_Mem * ARS ) / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe * RRSe ) / ( RRSe * DS ) ) * ( MUR - ( DS * ( ( RRSe / ( RMSe / RRSe ) ) * Max( ( RMSe - MUM ),MLU ) ) ) ) ) ) / ( Max( ( ( ( CS * CS ) / ( ( ( MUR * RRSe ) - ( RRSe - DS ) ) + ( MUC + ( RCSe / MUC ) ) ) ) + MUM ),DS ) + CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6246100382508564}, {"determining": "( ( Max( Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS )", "obj1": 0.12151394422310757, "obj2": 0.7718693396678505}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( FirstVNF_Mem + ACS ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3605577689243028, "obj2": 0.465618985052976}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ( ( ( MDR / PN ) - ( MRS - FirstVNF_RAM_Server ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( Max( DS,Max( CS,DS ) ) + RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( ( ( ( MLU + RCSe ) * RMSe ) * DS ),( DS / RCSe ) ) ) ) ) )", "obj1": 0.44223107569721115, "obj2": 0.36495586478386455}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) + Min( ( Max( AMS,( ARS - ( FirstVNF_CPU - RRS ) ) ) / ( PN - FirstVNF_Mem ) ) ,( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( DDR,ACS ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( RCSe * DS ) - Min( MUM ,RMSe ) ) + Min( ( MLU * ( RCSe * ( RMSe / ( RRSe + RMSe ) ) ) ) ,( ( MUC + RCSe ) + RCSe ) ) )", "obj1": 0.7569721115537849, "obj2": 0.10656562766315453}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( Const + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Max( BR,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Max( ( FirstVNF_RAM / MRS ),FirstVNF_Mem ) ) / ( FirstVNF_RAM / ARS ) ) ) ) ) + ( ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * DS ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) / Max( ( ( DS / MUR ) + ( MLU * Max( RRSe,MUM ) ) ),RRSe ) )", "obj1": 0.18725099601593626, "obj2": 0.6817292305118411}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + ARS ) / Min( RRS ,DDR ) ) - Min( ( MRS / FirstVNF_Mem_Server ) ,ACS ) ) - Min( FirstVNF_Mem_Server ,( Const / ( ( FirstVNF_RAM / ( CRS * ( CRS - FirstVNF_Mem ) ) ) + MRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( ( ACS + PN ) / PN ) - ARS ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS * DS ) + Max( ( MUC * ( ( MUC - ( Max( RRSe,CS ) / MUC ) ) - ( ( RRSe - Max( ( DS / MUC ),( MUC - MLU ) ) ) + RMSe ) ) ),Max( MUC,MUC ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5124358274969616}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( FirstVNF_CPU_Server * ( BR - ( FirstVNF_Mem - RRS ) ) ) + ( ( FirstVNF_RAM_Server + ( Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_Mem ) ) * ( ( ( FirstVNF_Mem / ( ( ARS / BR ) * Const ) ) + ARS ) / ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( RCSe * Min( RCSe ,MUR ) ) * CS ) ,Min( ( ( MLU - CS ) + Max( MUR,( RRSe - ( ( MLU + MUR ) / MUM ) ) ) ) ,( ( MUM + RRSe ) / Max( ( Min( RCSe ,MUM ) * RCSe ),RRSe ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.4945228237051121}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) * ( ( RRS / ( PN + RRS ) ) / FirstVNF_Mem ) ) ) - DDR ) - ( RRS * ACS ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Max( ( MUR / Max( ( DS / RCSe ),MUC ) ),( MUC * MUC ) ) * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( Max( ( MLU * CS ),MLU ),( ( MLU + CS ) * ( RRSe / MUC ) ) ) ) ) ) ,( RCSe / RRSe ) ) )", "obj1": 0.6274900398406374, "obj2": 0.20510978283282133}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3944223107569721, "obj2": 0.4123962335505597}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) + ( ( Const + ( FirstVNF_Mem - Min( ( ( MDR / ( MDR * FirstVNF_CPU ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) - BR ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),( Max( MLU,MUM ) * ( ( ( ( MLU + RMSe ) * CS ) - RRSe ) + Max( ( MUR * MUC ),MUC ) ) ) ) + ( ( CS * ( RCSe * Min( RMSe ,MLU ) ) ) * ( ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) * RMSe ) ) + ( MLU - CS ) ) * ( ( ( ( ( MLU / CS ) / Max( MUM,MLU ) ) * ( MUR * MLU ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2878936053541786}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( Max( DS,RCSe ) + CS ) * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3466135458167331, "obj2": 0.4929774284522182}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( AMS + ARS ) / ( PN / ( DDR * ( Min( ARS ,Min( ACS ,RRS ) ) + RRS ) ) ) ) ) + ( BR - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) * MUC ),( ( ( Max( ( ( DS / MUR ) * ( MUM + MUR ) ),MUR ) * MUR ) - ( ( MUC - RRSe ) - Min( DS ,MUC ) ) ) + CS ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( RMSe - CS ) - RCSe ) ) )", "obj1": 0.8665338645418327, "obj2": 0.05072468652754668}, {"determining": "( ( FirstVNF_CPU_Server * ( ( MDR * FirstVNF_CPU ) - ( ( FirstVNF_Mem + BR ) + Min( ( FirstVNF_Mem + BR ) ,Const ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( MLU / ( RMSe - ( MUM * ( MUM * ( ( RCSe + MUR ) + RRSe ) ) ) ) ) * ( ( Max( RCSe,( MUM + CS ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( MUC / ( MUC / MLU ) ) * ( MUR - ( CS * MUC ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7131474103585658, "obj2": 0.14329520332940465}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,Max( ARS,AMS ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * ( ( ARS + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) ) / ( MDR / PN ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( RCSe + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.4820717131474104, "obj2": 0.3188919567094978}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( FirstVNF_CPU * ( ACS / AMS ) ) / ( CRS * ( ( DDR / BR ) - BR ) ) )", "choosing": "( Max( CS,( MUR - ( RMSe - CS ) ) ) / RCSe )", "obj1": 0.19721115537848605, "obj2": 0.6743618390841017}, {"determining": "( ( BR * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( ( ARS + ( PN * CRS ) ) / BR ) + ( Const + BR ) ) ) ) )", "choosing": "Min( Min( ( Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) - ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5722478418860395}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( Min( ( Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + Min( AMS ,FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) + ( ( ARS * MDR ) + MRS ) ) ,( MRS + PN ) ) + ( MRS * FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS * ( ( ( RMSe + MUR ) * MUC ) * Min( MUC ,( MLU + ( RMSe / RMSe ) ) ) ) ) ,( RMSe - ( Max( ( ( DS - MLU ) + ( RMSe - DS ) ),DS ) * CS ) ) )", "obj1": 0.30876494023904383, "obj2": 0.546755539140311}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.651394422310757, "obj2": 0.1830725582909572}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( BR / MRS ) + ( Const + BR ) ) * Min( ( ARS + ( MRS * PN ) ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ARS / PN ) - FirstVNF_CPU ) ,( FirstVNF_Mem_Server * PN ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( Min( Max( MUR,( RRSe - MUM ) ) ,( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( ( MUR + DS ) / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5845196996347067}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,PN ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS ) / CS )", "obj1": 0.17330677290836655, "obj2": 0.7012972613864342}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) + Min( ( Max( AMS,( ARS - ( FirstVNF_CPU - RRS ) ) ) / ( ARS / FirstVNF_RAM_Server ) ) ,( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( CS * ( ( ( CS + CS ) + ( MUC + CS ) ) * ( CS * MUR ) ) ) * ( RMSe - ( DS + MLU ) ) ) + Max( ( ( Max( MUR,( RRSe - RMSe ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ),( MUR / Max( ( DS / ( MUC - ( ( DS * RCSe ) + ( RCSe * MUM ) ) ) ),MUC ) ) ) )", "obj1": 0.7211155378486056, "obj2": 0.1367028896526727}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( RRS * ( FirstVNF_Mem_Server - Min( ( ( MDR / PN ) - Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) + ( CRS / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / MUC ) * ( MUR - ( MUR * MLU ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4302788844621514, "obj2": 0.3751583826060303}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( ARS + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( ( FirstVNF_RAM * MRS ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( MLU + MUR ) + ( RCSe * ( RMSe * ( RMSe + MUC ) ) ) ) ,DS ) + Min( ( CS * Min( RCSe ,( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( RRSe / RRSe ) * ( DS / ( CS / DS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.601593625498008, "obj2": 0.2238663962764161}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * ( ( ARS + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * ( ( CS / CS ) * ( MLU - CS ) ) ),CS ) + ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.21194775121193976}, {"determining": "( ( ACS * ACS ) + ( ( ( MDR - ( ACS * FirstVNF_Mem_Server ) ) / ARS ) / Min( AMS ,( ( ( FirstVNF_CPU + RRS ) + ( ACS - FirstVNF_RAM_Server ) ) + ACS ) ) ) )", "choosing": "Min( ( CS * Max( ( RRSe * MUR ),RMSe ) ) ,( ( RMSe * RRSe ) - ( CS * ( Max( Max( DS,MLU ),( Max( RMSe,CS ) + ( ( DS - DS ) + Max( CS,RMSe ) ) ) ) * CS ) ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5357735856526976}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( Max( BR,DDR ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( MLU + MUM ) - ( Min( MUR ,( MUM * Max( RMSe,Max( RRSe,MUM ) ) ) ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( ( RMSe * Max( DS,MUM ) ) - ( ( MUM + Max( ( ( ( RCSe * RRSe ) / ( DS + RMSe ) ) * MUR ),( Max( DS,MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.852589641434263, "obj2": 0.05783372893932118}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( DDR + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( BR ,BR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) + ( FirstVNF_RAM_Server + ( BR + ( ( ( ( FirstVNF_Mem_Server - PN ) / PN ) - FirstVNF_CPU ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS - MLU ) / CS )", "obj1": 0.7450199203187251, "obj2": 0.11245176865923623}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - RRS ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( MDR / PN ) )", "choosing": "( ( MUC / MUM ) / CS )", "obj1": 0.3207171314741036, "obj2": 0.5235624695434501}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( ( RRS + FirstVNF_Mem ) / FirstVNF_CPU ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( ( DS / Max( RCSe,RCSe ) ) + Min( MUC ,MLU ) ) / MUM ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( ( MUC / ( CS / MLU ) ),( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( MUM + MUC ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8207171314741036, "obj2": 0.07033525873768304}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8007968127490039, "obj2": 0.07401111337793972}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5358565737051793, "obj2": 0.2726843100571175}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_CPU_Server + ARS ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * FirstVNF_RAM ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( ( MUC / MLU ) + MUC ) + ( MUC + ( ( MUR * DS ) / MUC ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUR ) / CS ) ) ) + Max( ( ( Min( ( ( ( MLU / RRSe ) - MUM ) - Max( ( RCSe - MUC ),( RMSe - RMSe ) ) ) ,MUC ) - RMSe ) * MUC ),( ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) + CS ) ) )", "obj1": 0.5916334661354582, "obj2": 0.23239473038522343}, {"determining": "( ( ( ( PN + Min( RRS ,DDR ) ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( Const / FirstVNF_Mem ) )", "choosing": "( Min( ( CS * Min( ( MUR - RCSe ) ,MLU ) ) ,( ( Max( RCSe,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) ) )", "obj1": 0.4760956175298805, "obj2": 0.3279490572005449}, {"determining": "( ( FirstVNF_CPU_Server * Min( Const ,( MDR - MDR ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server / BR ) ) * ( FirstVNF_RAM_Server - ( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - FirstVNF_CPU ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC + RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( ( MUR * ( ( MUR * MUC ) / Min( MLU ,MUR ) ) ) / Max( RRSe,MLU ) ) / DS ) ) ) + ( CS * ( RCSe * Max( RRSe,CS ) ) ) )", "obj1": 0.4262948207171315, "obj2": 0.3772114905495399}, {"determining": "( Max( Max( BR,Min( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MRS * ( Max( DDR,BR ) + ( MRS / MRS ) ) ) ) ,FirstVNF_CPU ) ),CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe - ( ( RMSe / ( RRSe * RRSe ) ) * Min( ( MLU / CS ) ,( ( DS + ( RRSe * ( RCSe / RRSe ) ) ) / Max( MUC,Min( MLU ,( MUC + MUM ) ) ) ) ) ) ) / CS )", "obj1": 0.17928286852589642, "obj2": 0.6911326379223992}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) - Min( ( ( Const / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC + MUC ),( ( ( MUM + CS ) * Min( RRSe ,MUC ) ) / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( MUR * RRSe ) ) ) ,( DS / ( CS / MLU ) ) ) )", "obj1": 0.9601593625498008, "obj2": 0.01567594039263128}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) / ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( FirstVNF_Mem - PN ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( RCSe ,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( MLU + ( Max( Min( MLU ,MUR ),Max( DS,Max( MLU,RRSe ) ) ) / Max( MUM,( RCSe * RRSe ) ) ) ) ) ) / MLU )", "obj1": 0.2948207171314741, "obj2": 0.567363879821579}, {"determining": "( ( ( ( PN / ( ( Min( Max( DDR,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) * DDR ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,Min( AMS ,CRS ) ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * ( MUR - ( ( MUC / CS ) / MUR ) ) ) - ( CS * ( RRSe - ( MUR + DS ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / MUM ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.1468063192535561}, {"determining": "( ( ( ( Min( ( MRS / ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_CPU_Server ,Min( ARS ,Max( AMS,FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( BR,Min( ( ( ARS * DDR ) * AMS ) ,MRS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Max( CRS,BR ) )", "choosing": "( ( MUR / Min( MUR ,MUR ) ) + Min( ( CS * Min( RMSe ,( MUR * ( RMSe + MLU ) ) ) ) ,( MUC - ( CS + ( MUR * Min( ( MUR * Max( MLU,DS ) ) ,Max( RMSe,( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.03864135116696866}, {"determining": "( Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.25257039892930516}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ( FirstVNF_RAM * DDR ) ) ) * ( ( FirstVNF_Mem - Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ARS ) ,( ( FirstVNF_RAM + RRS ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) + Max( DDR,ARS ) )", "choosing": "( ( ( RCSe * ( ( Min( RRSe ,( Max( CS,MUM ) + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + MUM ) * Min( MUC ,RRSe ) ) ) ) ) + ( MUC + ( Max( MUC,MUC ) * MUC ) ) ) / ( Min( MLU ,MUC ) / MUR ) )", "obj1": 0.32669322709163345, "obj2": 0.5180801089363457}, {"determining": "( ( Min( DDR ,ARS ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server - DDR ) / CRS ) ) ) ) ) )", "choosing": "( Max( ( Min( Min( Max( MUC,Max( DS,Max( RCSe,RCSe ) ) ) ,MUR ) ,Max( ( RRSe / RMSe ),Max( ( RMSe * MUC ),DS ) ) ) * MUC ),CS ) + ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) - ( DS / ( CS / MLU ) ) ) * ( ( MUM / ( Min( ( RRSe / RRSe ) ,( MUR - RCSe ) ) * ( MLU / ( MUC * MUM ) ) ) ) / DS ) ) ) )", "obj1": 0.7649402390438247, "obj2": 0.09717214279086882}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) * ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Min( ( MUC + MLU ) ,( RCSe * MUC ) ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6374501992031872, "obj2": 0.19619966429313906}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( AMS * FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem * Min( ( ( FirstVNF_RAM - PN ) - ( MDR / PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( ( ( MLU / CS ) * RCSe ) + RCSe ) * MUC ) * Min( MUC ,( MUM + Min( MUR ,DS ) ) ) ) ) ,( ( CS * RCSe ) - ( Min( CS ,Min( ( MUR * RMSe ) ,MUC ) ) * ( CS * Max( Min( DS ,MLU ),( Max( DS,( CS - MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.15513931977158193}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( Max( ( ( CRS - ( Const - ( FirstVNF_CPU + Max( MDR,PN ) ) ) ) * FirstVNF_CPU_Server ),Const ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - ( MRS - MDR ) ),Min( ARS ,Min( ACS ,RRS ) ) ) ,( ( ARS / BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + Max( BR,( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - AMS ) ) ) ) )", "choosing": "( Max( ( MUC - MUC ),( ( RRSe / ( MUM + MUC ) ) - RRSe ) ) + Min( ( Min( ( Min( ( MUC * MUC ) ,( ( DS * RCSe ) - CS ) ) + ( RCSe * RCSe ) ) ,Max( CS,RMSe ) ) * CS ) ,( ( ( ( ( DS / ( CS / DS ) ) * Min( RRSe ,RRSe ) ) / MUM ) / DS ) * ( ( ( RRSe / ( ( RMSe + MUC ) - ( RMSe * RMSe ) ) ) * ( Min( MLU ,CS ) / DS ) ) / MUM ) ) ) )", "obj1": 0.7928286852589641, "obj2": 0.07945122595729638}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,Min( ARS ,( ACS + FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8764940239043825, "obj2": 0.04847847532745746}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM_Server * ( Min( ARS ,Min( CRS ,MDR ) ) + RRS ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( DDR * AMS ) ) * ( ( AMS / ACS ) + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( Min( Min( MUM ,Max( RMSe,Min( RMSe ,RMSe ) ) ) ,MUR ) * RRSe ) - ( MLU + MUM ) ) ,( ( RRSe - ( RCSe - CS ) ) - MUM ) ) ,( ( CS / MLU ) - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) * CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5417342293925815}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( MRS / PN ) ,Max( FirstVNF_CPU_Server,BR ) ) ,FirstVNF_CPU_Server ) ) ) + DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - DDR ) ) ,( ACS + ( BR / MRS ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( MLU / CS ) ) ) * ( ( ( ( DS / ( RRSe / CS ) ) * ( ( MUC + RCSe ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RRSe ,RMSe ) )", "obj1": 0.6095617529880478, "obj2": 0.21420852552988665}, {"determining": "( ( ( ( PN / ( ( Min( ( FirstVNF_Mem + BR ) ,( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,( RRS - FirstVNF_Mem_Server ) ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Max( AMS,( DDR - ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe + RMSe ) - MUC ) ),MUM ) + ( DS / MUM ) )", "obj1": 0.5737051792828686, "obj2": 0.24447143459250428}, {"determining": "( ( ( FirstVNF_CPU + BR ) - ( Max( ( ARS - DDR ),AMS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( CRS * ACS ) ) )", "choosing": "( ( Min( RCSe ,Min( Max( MUM,RMSe ) ,CS ) ) / RRSe ) + Min( ( RCSe * ( ( DS / MUR ) * ( ( ( RRSe / ( RMSe + DS ) ) - RRSe ) - Max( RRSe,( Min( MUC ,CS ) * ( MLU + CS ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.1514766892353996}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.6852589641434262, "obj2": 0.1618025954746454}, {"determining": "( Max( Const,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / FirstVNF_CPU ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( Max( RRSe,( MUM + MUC ) ) - RRSe ) ) + ( ( Min( DS ,DS ) * RCSe ) + ( RRSe * ( CS / Min( RRSe ,( RRSe * ( ( RMSe + MLU ) / RCSe ) ) ) ) ) ) )", "obj1": 0.7928286852589641, "obj2": 0.07945122595729638}, {"determining": "( ( ( Max( PN,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) - ARS ) + ( ( ( Const + AMS ) / ( ( ( FirstVNF_CPU_Server - Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) - MDR ) + MDR ) ) * ( FirstVNF_Mem + RRS ) ) )", "choosing": "( ( Min( MUR ,Min( RRSe ,( ( ( MUM + RCSe ) + ( RRSe + DS ) ) / MUR ) ) ) * MUM ) + Min( RRSe ,Max( DS,MUM ) ) )", "obj1": 0.7231075697211156, "obj2": 0.12526447140843247}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( ( ( AMS * DDR ) + RRS ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( MLU / RRSe ) ) ,( ( Max( ( RRSe - MUM ),MUR ) + ( ( DS * MLU ) - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5876494023904383, "obj2": 0.23536989152849266}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,DDR ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * ( DS / ( MLU / CS ) ) ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( MUC * MLU ) - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6075697211155379, "obj2": 0.22079903273039245}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server * Min( ARS ,FirstVNF_RAM_Server ) ) + ( RRS / ACS ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ),RRSe ) ,( MUR + RRSe ) )", "obj1": 0.6812749003984063, "obj2": 0.16840896744200037}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( ( ACS + FirstVNF_CPU_Server ) - Max( ARS,AMS ) ) * CRS ) )", "choosing": "( ( ( ( ( RRSe + ( MLU * MUR ) ) / ( ( ( Min( RCSe ,DS ) * ( RCSe / RRSe ) ) * MUR ) * DS ) ) * ( ( RRSe - MUM ) + RRSe ) ) * RRSe ) / CS )", "obj1": 0.15737051792828685, "obj2": 0.7395784419933358}, {"determining": "( ( FirstVNF_Mem - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe * Max( ( ( MLU + CS ) * Min( MUC ,RRSe ) ),RRSe ) ) + Min( ( CS * ( ( Max( MUM,MUM ) + ( Min( MUM ,( MUC * CS ) ) + Max( RMSe,RMSe ) ) ) * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( MLU / Max( RMSe,RCSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR / RRSe ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.649402390438247, "obj2": 0.19051968628895463}], "37": [{"determining": "( ( FirstVNF_CPU * ( BR * ARS ) ) / ( ( Max( BR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_RAM ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS / Max( RCSe,Max( MUM,Max( Min( ( MUC + MLU ) ,( RCSe * MUC ) ),DS ) ) ) ) - DS ) / ( RRSe * ( ( RMSe / ( Max( ( CS * RMSe ),CS ) - MUC ) ) * ( ( MUM / MUM ) / Max( RMSe,Max( MLU,( CS + ( RCSe + MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU ) * RRS ) - FirstVNF_CPU ) + ( ( ARS - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * ( Max( Const,Const ) + CRS ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC - RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) + ( CS * ( RCSe * ( Min( ( RRSe / ( MUM + MUC ) ) ,RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.31274900398406374, "obj2": 0.5116533615024161}, {"determining": "( Min( ( Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + Min( AMS ,FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) + ( ( ARS * MDR ) + MRS ) ) ,( MRS + PN ) ) + ( MRS * FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS * ( ( ( RMSe + MUR ) * MUC ) * Min( MUC ,( MLU + ( RMSe / RMSe ) ) ) ) ) ,( RMSe - ( Max( ( ( DS - MLU ) + ( RMSe - DS ) ),DS ) * CS ) ) )", "obj1": 0.30876494023904383, "obj2": 0.546755539140311}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( AMS / ( Min( Const ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( RMSe + RRSe ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.39017701656130627}, {"determining": "( ( FirstVNF_CPU_Server * ( BR - ( FirstVNF_Mem - RRS ) ) ) + ( ( FirstVNF_RAM_Server + ( Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_Mem ) ) * ( ( ( FirstVNF_Mem / ( ( ARS / BR ) * Const ) ) + ARS ) / ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( RCSe * Min( RCSe ,MUR ) ) * CS ) ,Min( ( ( MLU - CS ) + Max( MUR,( RRSe - ( ( MLU + MUR ) / MUM ) ) ) ) ,( ( MUM + RRSe ) / Max( ( Min( RCSe ,MUM ) * RCSe ),RRSe ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.4945228237051121}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( ACS / ACS ) + ( ( ( ARS / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) / Min( FirstVNF_CPU ,Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( ( CS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( MUC,MLU ) - ( ( RCSe * RCSe ) + DS ) ) ) ) * ( ( ( ( DS / ( MUC / DS ) ) * ( MUR - ( RCSe * CS ) ) ) / RCSe ) / ( MUM - MUC ) ) ) ) / Max( RCSe,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6531633830271687}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( ( Min( MDR ,( ( AMS * RRS ) + Const ) ) / BR ) * Max( ( ( ARS + ( ( ( ARS / MDR ) * BR ) * PN ) ) + FirstVNF_CPU_Server ),BR ) ) / ( FirstVNF_CPU * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MLU + CS ) ,( ( RMSe * ( RRSe * DS ) ) * ( Min( MUC ,RRSe ) / DS ) ) ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7774916413894789}, {"determining": "( ( ( ( PN / AMS ) - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( ( MLU / RRSe ) * Max( ( MUM + DS ),CS ) ) / MUR ) / DS ) ) ) + Max( MUC,( Min( RRSe ,( MUM + MLU ) ) * MUC ) ) )", "obj1": 0.4900398406374502, "obj2": 0.31056407020399246}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( RMSe + MUR ) * MUC ) * Min( MUC ,( MLU + ( RMSe / RMSe ) ) ) ) ) ,( ( MUM * RCSe ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( DS,RCSe ) + CS ) ) ) ) ) )", "obj1": 0.6633466135458167, "obj2": 0.17405298045801304}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),RRS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - ( ( Min( MLU ,RRSe ) - MUC ) + MUM ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) + ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3784860557768924, "obj2": 0.44397816549502916}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( MRS + Max( ACS,ARS ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( Const,( Const * Min( AMS ,BR ) ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( ( RRSe * MUR ),MUC ) - MUC ) ) ) * ( ( ( ( DS / ( MUM / MLU ) ) * ( MUR - Max( DS,CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.3844621513944223, "obj2": 0.4239294888737787}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( RRS - PN ) - ( Max( AMS,Max( DDR,ARS ) ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / Min( PN ,DDR ) ) - ARS ) ,( ( ( Const * FirstVNF_CPU_Server ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe + ( RMSe - ( ( Max( MLU,MUM ) * Max( RRSe,DS ) ) + DS ) ) ) + Max( MUC,( MUC * MUR ) ) )", "obj1": 0.4601593625498008, "obj2": 0.3434644245378344}, {"determining": "( ( Max( Min( Min( ( FirstVNF_Mem + BR ) ,MDR ) ,FirstVNF_RAM_Server ),Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server + ARS ) ) / ( FirstVNF_CPU + ( DDR * ( ( ( FirstVNF_Mem + ARS ) / Min( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ARS ) ,( FirstVNF_Mem_Server - CRS ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( ( RRSe * DS ) / ( RCSe - RMSe ) ) * ( MUR / ( RCSe * RMSe ) ) ) ) / ( MLU + Max( ( ( ( CS * CS ) / ( ( ( MUC / RCSe ) + MUC ) + ( MUC + ( MUR / MUC ) ) ) ) + MUM ),( RMSe / ( MLU + Max( ( Max( MUC,RCSe ) + MUM ),( MUR / RRSe ) ) ) ) ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6406036595083153}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.40239043824701193, "obj2": 0.40633196281370876}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( DDR + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( BR ,BR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) + ( FirstVNF_RAM_Server + ( BR + ( ( ( ( FirstVNF_Mem_Server - PN ) / PN ) - FirstVNF_CPU ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS - MLU ) / CS )", "obj1": 0.7450199203187251, "obj2": 0.11245176865923623}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( MUM / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( CS / DS ) ) * ( ( MUR - MUC ) / RRSe ) ) / MUM ) / DS ) * ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2804369725058234}, {"determining": "( ( ( ( Min( ( MRS / ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_CPU_Server ,Min( ARS ,Max( AMS,FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( BR,Min( ( ( ARS * DDR ) * AMS ) ,MRS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Max( CRS,BR ) )", "choosing": "( ( MUR / Min( MUR ,MUR ) ) + Min( ( CS * Min( RMSe ,( MUR * ( RMSe + MLU ) ) ) ) ,( MUC - ( CS + ( MUR * Min( ( MUR * Max( MLU,DS ) ) ,Max( RMSe,( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.03864135116696866}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUC ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.4795657848546178}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.20119521912350596, "obj2": 0.6644567269549355}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + DDR ) + Min( Max( ( FirstVNF_Mem - RRS ),MDR ) ,( RRS + ( ARS + BR ) ) ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( RRSe * MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) - DS ) ) ) / CS )", "obj1": 0.24302788844621515, "obj2": 0.6243754843162641}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( ( PN + CRS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( PN + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC - RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) + ( CS * ( RCSe * ( Min( ( RRSe / ( MUM + MUC ) ) ,RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) )", "obj1": 0.23705179282868527, "obj2": 0.6363547091433022}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,PN ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS ) / CS )", "obj1": 0.17330677290836655, "obj2": 0.7012972613864342}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + BR ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( Min( MUM ,MUC ) / RCSe ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.7749003984063745, "obj2": 0.09227321737741101}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ( ( ( MDR / PN ) - ( MRS - FirstVNF_RAM_Server ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( Max( DS,Max( CS,DS ) ) + RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( ( ( ( MLU + RCSe ) * RMSe ) * DS ),( DS / RCSe ) ) ) ) ) )", "obj1": 0.44223107569721115, "obj2": 0.36495586478386455}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server * ACS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,Min( ( ( RCSe * DS ) - Min( MUM ,Min( RMSe ,MUC ) ) ) ,RCSe ) ) - MUC ) / ( RMSe + RMSe ) ) / CS )", "obj1": 0.8326693227091634, "obj2": 0.06369272110000138}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( Const + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Max( BR,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Max( ( FirstVNF_RAM / MRS ),FirstVNF_Mem ) ) / ( FirstVNF_RAM / ARS ) ) ) ) ) + ( ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * DS ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) / Max( ( ( DS / MUR ) + ( MLU * Max( RRSe,MUM ) ) ),RRSe ) )", "obj1": 0.18725099601593626, "obj2": 0.6817292305118411}, {"determining": "( ( ( ( PN / ( ( Min( ( FirstVNF_Mem + BR ) ,( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,( RRS - FirstVNF_Mem_Server ) ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Max( AMS,( DDR - ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe + RMSe ) - MUC ) ),MUM ) + ( DS / MUM ) )", "obj1": 0.5737051792828686, "obj2": 0.24447143459250428}, {"determining": "( ( PN + FirstVNF_CPU_Server ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "( ( RRSe - ( ( RMSe / ( RRSe * RRSe ) ) * Min( ( ( CS - RCSe ) * ( Min( MUC ,Min( RRSe ,RMSe ) ) / ( DS / ( CS / MLU ) ) ) ) ,( ( DS + ( RRSe * Max( RRSe,DS ) ) ) / Max( MUC,Min( MLU ,( MUC + MUM ) ) ) ) ) ) ) / CS )", "obj1": 0.7330677290836654, "obj2": 0.12216492070308295}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server * Min( ARS ,FirstVNF_RAM_Server ) ) + ( RRS / ACS ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ),RRSe ) ,( MUR + RRSe ) )", "obj1": 0.6812749003984063, "obj2": 0.16840896744200037}, {"determining": "( Max( Max( BR,Min( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MRS * ( Max( DDR,BR ) + ( MRS / MRS ) ) ) ) ,FirstVNF_CPU ) ),CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe - ( ( RMSe / ( RRSe * RRSe ) ) * Min( ( MLU / CS ) ,( ( DS + ( RRSe * ( RCSe / RRSe ) ) ) / Max( MUC,Min( MLU ,( MUC + MUM ) ) ) ) ) ) ) / CS )", "obj1": 0.17928286852589642, "obj2": 0.6911326379223992}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8007968127490039, "obj2": 0.07401111337793972}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) + ( ( Const + ( FirstVNF_Mem - Min( ( ( MDR / ( MDR * FirstVNF_CPU ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) - BR ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),( Max( MLU,MUM ) * ( ( ( ( MLU + RMSe ) * CS ) - RRSe ) + Max( ( MUR * MUC ),MUC ) ) ) ) + ( ( CS * ( RCSe * Min( RMSe ,MLU ) ) ) * ( ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) * RMSe ) ) + ( MLU - CS ) ) * ( ( ( ( ( MLU / CS ) / Max( MUM,MLU ) ) * ( MUR * MLU ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2878936053541786}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( Max( DS,RCSe ) + CS ) * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3466135458167331, "obj2": 0.4929774284522182}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.651394422310757, "obj2": 0.1830725582909572}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( FirstVNF_CPU * ( ACS / AMS ) ) / ( CRS * ( ( DDR / BR ) - BR ) ) )", "choosing": "( Max( CS,( MUR - ( RMSe - CS ) ) ) / RCSe )", "obj1": 0.19721115537848605, "obj2": 0.6743618390841017}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,Min( ARS ,( ACS + FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MUC / MUM ) / CS )", "obj1": 0.8864541832669323, "obj2": 0.042561575701173984}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( ( ( AMS * DDR ) + RRS ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( MLU / RRSe ) ) ,( ( Max( ( RRSe - MUM ),MUR ) + ( ( DS * MLU ) - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5876494023904383, "obj2": 0.23536989152849266}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) - Min( ( ( Const / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.9362549800796812, "obj2": 0.024991894374727416}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( RRS * ( FirstVNF_Mem_Server - Min( ( ( MDR / PN ) - Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) + ( CRS / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / MUC ) * ( MUR - ( MUR * MLU ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4302788844621514, "obj2": 0.3751583826060303}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.599601593625498, "obj2": 0.22178983443990735}, {"determining": "( ( ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( MUM - MUC ) ) - RRSe ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.03503951918606319}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem + ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / Min( MUC ,RRSe ) ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.6454183266932271, "obj2": 0.18889754669288347}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) * ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( Const - ACS ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( Max( CS,( ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) * RCSe ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MLU ) ) ) * ( ( ( Max( ( RCSe * RMSe ),RRSe ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + ( ( ( ( DS / ( CS / MLU ) ) * Max( DS,( MUC * MLU ) ) ) / MUM ) / ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) ) )", "obj1": 0.6374501992031872, "obj2": 0.1961780050535605}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * ( ( ARS + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * ( ( CS / CS ) * ( MLU - CS ) ) ),CS ) + ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.21194775121193976}, {"determining": "( ( ( Max( PN,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) - ARS ) + ( ( ( Const + AMS ) / ( ( ( FirstVNF_CPU_Server - Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) - MDR ) + MDR ) ) * ( FirstVNF_Mem + RRS ) ) )", "choosing": "( ( Min( MUR ,Min( RRSe ,( ( ( MUM + RCSe ) + ( RRSe + DS ) ) / MUR ) ) ) * MUM ) + Min( RRSe ,Max( DS,MUM ) ) )", "obj1": 0.7231075697211156, "obj2": 0.12526447140843247}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - Min( ( ( MDR / PN ) - Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ARS / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( ( Max( CS,MUM ) + MUC ) + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / MUC ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5577689243027888, "obj2": 0.2620933949066024}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5358565737051793, "obj2": 0.2726843100571175}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,Min( ARS ,( ACS + FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.848605577689243, "obj2": 0.05957516637759811}, {"determining": "( ( FirstVNF_CPU_Server * Min( Const ,( MDR - MDR ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server / BR ) ) * ( FirstVNF_RAM_Server - ( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - FirstVNF_CPU ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC + RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( ( MUR * ( ( MUR * MUC ) / Min( MLU ,MUR ) ) ) / Max( RRSe,MLU ) ) / DS ) ) ) + ( CS * ( RCSe * Max( RRSe,CS ) ) ) )", "obj1": 0.4262948207171315, "obj2": 0.3772114905495399}, {"determining": "( ( BR * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( ( ARS + ( PN * CRS ) ) / BR ) + ( Const + BR ) ) ) ) )", "choosing": "Min( Min( ( Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) - ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5722478418860395}, {"determining": "( ( Max( Min( ( ARS + ( Min( FirstVNF_RAM ,( CRS * DDR ) ) * RRS ) ) ,MDR ),BR ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * Min( MUC ,DS ) ) ) / Max( ( DS / MUM ),Min( CS ,( ( CS / Max( MUR,Max( MLU,( MUC * RCSe ) ) ) ) * Min( MUC ,( Min( MUC ,Min( MUM ,CS ) ) * ( RMSe - MLU ) ) ) ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7653000680829934}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) / ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( FirstVNF_Mem - PN ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( RCSe ,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( MLU + ( Max( Min( MLU ,MUR ),Max( DS,Max( MLU,RRSe ) ) ) / Max( MUM,( RCSe * RRSe ) ) ) ) ) ) / MLU )", "obj1": 0.2948207171314741, "obj2": 0.567363879821579}, {"determining": "( ( ( ( ( Max( BR,BR ) + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( Max( FirstVNF_Mem_Server,MRS ) + BR ) * RRS ) ) ) / FirstVNF_Mem_Server ) * Max( MDR,PN ) ) + ( MDR + FirstVNF_RAM ) )", "choosing": "( ( RRSe + Min( RCSe ,( ( Min( ( ( MLU + RMSe ) + MLU ) ,( RRSe - MUC ) ) - ( ( MUC + ( RRSe - MUR ) ) / RCSe ) ) + RRSe ) ) ) / Min( DS ,DS ) )", "obj1": 0.3645418326693227, "obj2": 0.4475354834098479}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( ( RRS + FirstVNF_Mem ) / FirstVNF_CPU ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( ( DS / Max( RCSe,RCSe ) ) + Min( MUC ,MLU ) ) / MUM ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( ( MUC / ( CS / MLU ) ),( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( MUM + MUC ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8187250996015937, "obj2": 0.0714768213800459}, {"determining": "( ( Max( ( ( CRS - ( Const - ( FirstVNF_CPU + Max( MDR,PN ) ) ) ) * FirstVNF_CPU_Server ),Const ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - ( MRS - MDR ) ),Min( ARS ,Min( ACS ,RRS ) ) ) ,( ( ARS / BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + Max( BR,( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - AMS ) ) ) ) )", "choosing": "( Max( ( MUC - MUC ),( ( RRSe / ( MUM + MUC ) ) - RRSe ) ) + Min( ( Min( ( Min( ( MUC * MUC ) ,( ( DS * RCSe ) - CS ) ) + ( RCSe * RCSe ) ) ,Max( CS,RMSe ) ) * CS ) ,( ( ( ( ( DS / ( CS / DS ) ) * Min( RRSe ,RRSe ) ) / MUM ) / DS ) * ( ( ( RRSe / ( ( RMSe + MUC ) - ( RMSe * RMSe ) ) ) * ( Min( MLU ,CS ) / DS ) ) / MUM ) ) ) )", "obj1": 0.7928286852589641, "obj2": 0.07945122595729638}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + Min( FirstVNF_Mem ,Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( FirstVNF_Mem + ARS ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe + RRSe ) * ( ( ( ( DS / ( MUC / CS ) ) * ( ( MUR * CS ) - ( MUR - RRSe ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.36254980079681276, "obj2": 0.4522528870299067}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) + Min( ( Max( AMS,( ARS - ( FirstVNF_CPU - RRS ) ) ) / ( PN - FirstVNF_Mem ) ) ,( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( DDR,ACS ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( RCSe * DS ) - Min( MUM ,RMSe ) ) + Min( ( MLU * ( RCSe * ( RMSe / ( RRSe + RMSe ) ) ) ) ,( ( MUC + RCSe ) + RCSe ) ) )", "obj1": 0.7569721115537849, "obj2": 0.10656562766315453}, {"determining": "( ( Min( DDR ,ARS ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server - DDR ) / CRS ) ) ) ) ) )", "choosing": "( Max( ( Min( Min( Max( MUC,Max( DS,Max( RCSe,RCSe ) ) ) ,MUR ) ,Max( ( RRSe / RMSe ),Max( ( RMSe * MUC ),DS ) ) ) * MUC ),CS ) + ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) - ( DS / ( CS / MLU ) ) ) * ( ( MUM / ( Min( ( RRSe / RRSe ) ,( MUR - RCSe ) ) * ( MLU / ( MUC * MUM ) ) ) ) / DS ) ) ) )", "obj1": 0.7649402390438247, "obj2": 0.09717214279086882}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( AMS * FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem * Min( ( ( FirstVNF_RAM - PN ) - ( MDR / PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( ( ( MLU / CS ) * RCSe ) + RCSe ) * MUC ) * Min( MUC ,( MUM + Min( MUR ,DS ) ) ) ) ) ,( ( CS * RCSe ) - ( Min( CS ,Min( ( MUR * RMSe ) ,MUC ) ) * ( CS * Max( Min( DS ,MLU ),( Max( DS,( CS - MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.15513931977158193}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) * ( ( RRS / ( PN + RRS ) ) / FirstVNF_Mem ) ) ) - DDR ) - ( RRS * ACS ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Max( ( MUR / Max( ( DS / RCSe ),MUC ) ),( MUC * MUC ) ) * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( Max( ( MLU * CS ),MLU ),( ( MLU + CS ) * ( RRSe / MUC ) ) ) ) ) ) ,( RCSe / RRSe ) ) )", "obj1": 0.6274900398406374, "obj2": 0.20510978283282133}, {"determining": "( Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.25257039892930516}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( MUM - MUM ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.39243027888446214, "obj2": 0.41708472448695266}, {"determining": "( Max( Const,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / FirstVNF_CPU ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( Max( RRSe,( MUM + MUC ) ) - RRSe ) ) + ( ( Min( DS ,DS ) * RCSe ) + ( RRSe * ( CS / Min( RRSe ,( RRSe * ( ( RMSe + MLU ) / RCSe ) ) ) ) ) ) )", "obj1": 0.7928286852589641, "obj2": 0.07945122595729638}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ARS - ACS ) ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( ( CS + DS ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8645418326693227, "obj2": 0.052803775780852796}, {"determining": "( ( FirstVNF_CPU_Server * ( ( MDR * FirstVNF_CPU ) - ( ( FirstVNF_Mem + BR ) + Min( ( FirstVNF_Mem + BR ) ,Const ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( MLU / ( RMSe - ( MUM * ( MUM * ( ( RCSe + MUR ) + RRSe ) ) ) ) ) * ( ( Max( RCSe,( MUM + CS ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( MUC / ( MUC / MLU ) ) * ( MUR - ( CS * MUC ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7131474103585658, "obj2": 0.14329520332940465}, {"determining": "( ( PN + ACS ) + ( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - ARS ) + ( Const - Const ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe / ( ( ( Min( ( MUR - MUC ) ,MUC ) - ( RMSe / ( RMSe / RRSe ) ) ) + MUM ) - ( ( CS / CS ) * ( MLU - CS ) ) ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5802981787192035}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / ( RRSe / ( MUM + MUC ) ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.35856573705179284, "obj2": 0.4676398730067865}, {"determining": "( ( ( FirstVNF_CPU + BR ) - ( Max( ( ARS - DDR ),AMS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( CRS * ACS ) ) )", "choosing": "( ( Min( RCSe ,Min( Max( MUM,RMSe ) ,CS ) ) / RRSe ) + Min( ( RCSe * ( ( DS / MUR ) * ( ( ( RRSe / ( RMSe + DS ) ) - RRSe ) - Max( RRSe,( Min( MUC ,CS ) * ( MLU + CS ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.1514766892353996}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( FirstVNF_Mem + ACS ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3605577689243028, "obj2": 0.465618985052976}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.6852589641434262, "obj2": 0.1618025954746454}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) * ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + CS ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUC * CS ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6314741035856574, "obj2": 0.2016777764228447}, {"determining": "( ( ( ( PN / ( DDR * Max( AMS,( DDR - ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( ( MLU + CS ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.23140991015578075}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,Min( ARS ,( ACS + FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8764940239043825, "obj2": 0.04847847532745746}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( FirstVNF_CPU / ( RRS + FirstVNF_Mem ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Const / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,Min( FirstVNF_RAM ,( BR * MRS ) ) ) ) ) + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( ( Min( Max( MUC,RRSe ) ,CS ) - ( MLU * CS ) ),Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,RCSe ) ) - MUR ) / ( RMSe - RMSe ) ) / CS )", "obj1": 0.8227091633466136, "obj2": 0.06941769715934293}, {"determining": "( ( ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,RRS ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU - CS ) * Min( MUC ,RRSe ) ) ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9203187250996016, "obj2": 0.032593986096380395}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6075697211155379, "obj2": 0.2176479969684328}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) + Min( ( Max( AMS,( ARS - ( FirstVNF_CPU - RRS ) ) ) / Min( PN ,FirstVNF_Mem ) ) ,( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( RCSe * DS ) - Min( MUM ,CS ) ) + Min( ( MLU * ( RCSe * ( RMSe / ( RMSe + RRSe ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7609561752988048, "obj2": 0.10548500194961767}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( MRS / PN ) ,Max( FirstVNF_CPU_Server,BR ) ) ,FirstVNF_CPU_Server ) ) ) + DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - DDR ) ) ,( ACS + ( BR / MRS ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( MLU / CS ) ) ) * ( ( ( ( DS / ( RRSe / CS ) ) * ( ( MUC + RCSe ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RRSe ,RMSe ) )", "obj1": 0.6095617529880478, "obj2": 0.21420852552988665}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,Min( ARS ,( ACS + FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( AMS / ACS ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( DS * MUR ) * CS ) ,DS ) )", "obj1": 0.703187250996016, "obj2": 0.14509785373729528}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) - Min( ( ( Const / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC + MUC ),( ( ( MUM + CS ) * Min( RRSe ,MUC ) ) / ( ( CS * RCSe ) - ( CS * ( RRSe - ( Min( MUC ,RRSe ) / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( MUR * RRSe ) ) ) ,( DS / ( CS / MLU ) ) ) )", "obj1": 0.9780876494023905, "obj2": 0.007855707873017405}], "38": [{"determining": "Min( ( FirstVNF_CPU_Server * ( ( MDR * FirstVNF_CPU ) - ( ( FirstVNF_Mem + BR ) + Min( ( FirstVNF_Mem + BR ) ,Const ) ) ) ) ,( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( MLU / ( RMSe - ( MUM * ( MUM * ( ( RCSe + MUR ) + RRSe ) ) ) ) ) * ( ( Max( RCSe,( MUM + CS ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( MUC / ( MUC / MLU ) ) * ( MUR - ( CS * MUC ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( BR * ARS ) ) / ( ( Max( BR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_RAM ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS / Max( RCSe,Max( MUM,Max( Min( ( MUC + MLU ) ,( RCSe * MUC ) ),DS ) ) ) ) - DS ) / ( RRSe * ( ( RMSe / ( Max( ( CS * RMSe ),CS ) - MUC ) ) * ( ( MUM / MUM ) / Max( RMSe,Max( MLU,( CS + ( RCSe + MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.31274900398406374, "obj2": 0.5116533615024161}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( AMS / ( Min( Const ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( RMSe + RRSe ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.39017701656130627}, {"determining": "( ( Max( ( DDR - ARS ),MRS ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + ( FirstVNF_RAM + CRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( RRSe,( RRSe - RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.39641434262948205, "obj2": 0.4059650228821945}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUC ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.4795657848546178}, {"determining": "( ( FirstVNF_CPU_Server * ( BR - ( FirstVNF_Mem - RRS ) ) ) + ( ( FirstVNF_RAM_Server + ( Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_Mem ) ) * ( ( ( FirstVNF_Mem / ( ( ARS / BR ) * Const ) ) + ARS ) / ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( RCSe * Min( RCSe ,MUR ) ) * CS ) ,Min( ( ( MLU - CS ) + Max( MUR,( RRSe - ( ( MLU + MUR ) / MUM ) ) ) ) ,( ( MUM + RRSe ) / Max( ( Min( RCSe ,MUM ) * RCSe ),RRSe ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.4945228237051121}, {"determining": "( Min( ( Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + Min( AMS ,FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) + ( ( ARS * MDR ) + MRS ) ) ,( MRS + PN ) ) + ( MRS * FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS * ( ( ( RMSe + MUR ) * MUC ) * Min( MUC ,( MLU + ( RMSe / RMSe ) ) ) ) ) ,( RMSe - ( Max( ( ( DS - MLU ) + ( RMSe - DS ) ),DS ) * CS ) ) )", "obj1": 0.30876494023904383, "obj2": 0.546755539140311}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( ACS / ACS ) + ( ( ( ARS / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) / Min( FirstVNF_CPU ,Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( ( CS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( MUC,MLU ) - ( ( RCSe * RCSe ) + DS ) ) ) ) * ( ( ( ( DS / ( MUC / DS ) ) * ( MUR - ( RCSe * CS ) ) ) / RCSe ) / ( MUM - MUC ) ) ) ) / Max( RCSe,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6531633830271687}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( ( Min( MDR ,( ( AMS * RRS ) + Const ) ) / BR ) * Max( ( ( ARS + ( ( ( ARS / MDR ) * BR ) * PN ) ) + FirstVNF_CPU_Server ),BR ) ) / ( FirstVNF_CPU * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MLU + CS ) ,( ( RMSe * ( RRSe * DS ) ) * ( Min( MUC ,RRSe ) / DS ) ) ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7774916413894789}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),RRS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - ( ( Min( MLU ,RRSe ) - MUC ) + MUM ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) + ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3784860557768924, "obj2": 0.44397816549502916}, {"determining": "( ( ( ( Max( Min( ( ARS + ( MRS * PN ) ) ,MDR ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MLU / CS ) * ( RRSe / RRSe ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8466135458167331, "obj2": 0.05868782058003258}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( MRS + Max( ACS,ARS ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( Const,( Const * Min( AMS ,BR ) ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( ( RRSe * MUR ),MUC ) - MUC ) ) ) * ( ( ( ( DS / ( MUM / MLU ) ) * ( MUR - Max( DS,CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.3844621513944223, "obj2": 0.4239294888737787}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( ( Max( MUC,RCSe ) + MUM ) * ( ( ( DS / Max( RCSe,RCSe ) ) + Min( MUC ,MLU ) ) / MUM ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( ( MUC / ( CS / MLU ) ),( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( MUM + MUC ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8167330677290837, "obj2": 0.06932213175525313}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( ( Max( PN,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) - ARS ) + ( ( ( Const + AMS ) / ( ( ( FirstVNF_CPU_Server - Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) - MDR ) + MDR ) ) * ( FirstVNF_Mem + RRS ) ) )", "choosing": "( ( Min( MUR ,Min( RRSe ,( ( ( MUM + RCSe ) + ( RRSe + DS ) ) / MUR ) ) ) * MUM ) + Min( RRSe ,Max( DS,MUM ) ) )", "obj1": 0.7231075697211156, "obj2": 0.12526447140843247}, {"determining": "( ( ( RRS - PN ) - ( Max( AMS,Max( DDR,ARS ) ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / Min( PN ,DDR ) ) - ARS ) ,( ( ( Const * FirstVNF_CPU_Server ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe + ( RMSe - ( ( Max( MLU,MUM ) * Max( RRSe,DS ) ) + DS ) ) ) + Max( MUC,( MUC * MUR ) ) )", "obj1": 0.4601593625498008, "obj2": 0.3434644245378344}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( PN - ( Const * MRS ) ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,( RMSe + ( ( RCSe / Min( CS ,Min( Min( RCSe ,RMSe ) ,Min( MUC ,MUM ) ) ) ) * CS ) ) ) / CS )", "obj1": 0.22310756972111553, "obj2": 0.6383559113136551}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( FirstVNF_CPU_Server * ( ( MDR * FirstVNF_CPU ) - ( ( FirstVNF_Mem + BR ) + Min( ( FirstVNF_Mem + BR ) ,Const ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( MLU / ( RMSe - ( MUM * ( MUM * ( ( RCSe + MUR ) + RRSe ) ) ) ) ) * ( ( Max( RCSe,( MUM + CS ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( MUC / ( MUC / MLU ) ) * ( MUR - ( CS * MUC ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7131474103585658, "obj2": 0.14329520332940465}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server * ACS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,Min( ( ( RCSe * DS ) - Min( MUM ,Min( RMSe ,MUC ) ) ) ,RCSe ) ) - MUC ) / ( RMSe + RMSe ) ) / CS )", "obj1": 0.8326693227091634, "obj2": 0.06369272110000138}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( MUM / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( CS / DS ) ) * ( ( MUR - MUC ) / RRSe ) ) / MUM ) / DS ) * ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2804369725058234}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.20119521912350596, "obj2": 0.6644567269549355}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + DDR ) + Min( Max( ( FirstVNF_Mem - RRS ),MDR ) ,( RRS + ( ARS + BR ) ) ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( RRSe * MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) - DS ) ) ) / CS )", "obj1": 0.24302788844621515, "obj2": 0.6243754843162641}, {"determining": "( ( ( MDR / PN ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / ( ARS / FirstVNF_Mem_Server ) ) - MRS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) - ( DS / ( CS / MLU ) ) ) * ( ( ( CS * ( MUM - ( RMSe * RCSe ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3565737051792829, "obj2": 0.45454154870021224}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,PN ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS ) / CS )", "obj1": 0.17330677290836655, "obj2": 0.7012972613864342}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ( ( ( MDR / PN ) - ( MRS - FirstVNF_RAM_Server ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( Max( DS,Max( CS,DS ) ) + RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( ( ( ( MLU + RCSe ) * RMSe ) * DS ),( DS / RCSe ) ) ) ) ) )", "obj1": 0.44223107569721115, "obj2": 0.36495586478386455}, {"determining": "( ( Const + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Max( BR,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Max( ( FirstVNF_RAM / MRS ),FirstVNF_Mem ) ) / ( FirstVNF_RAM / ARS ) ) ) ) ) + ( ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * DS ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) / Max( ( ( DS / MUR ) + ( MLU * Max( RRSe,MUM ) ) ),RRSe ) )", "obj1": 0.18725099601593626, "obj2": 0.6817292305118411}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( ( ( Min( ( MRS / ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_CPU_Server ,Min( ARS ,Max( AMS,FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( BR,Min( ( ( ARS * DDR ) * AMS ) ,MRS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Max( CRS,BR ) )", "choosing": "( ( MUR / Min( MUR ,MUR ) ) + Min( ( CS * Min( RMSe ,( MUR * ( RMSe + MLU ) ) ) ) ,( MUC - ( CS + ( MUR * Min( ( MUR * Max( MLU,DS ) ) ,Max( RMSe,( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.03864135116696866}, {"determining": "( Max( Max( BR,Min( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MRS * ( Max( DDR,BR ) + ( MRS / MRS ) ) ) ) ,FirstVNF_CPU ) ),CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe - ( ( RMSe / ( RRSe * RRSe ) ) * Min( ( MLU / CS ) ,( ( DS + ( RRSe * ( RCSe / RRSe ) ) ) / Max( MUC,Min( MLU ,( MUC + MUM ) ) ) ) ) ) ) / CS )", "obj1": 0.17928286852589642, "obj2": 0.6911326379223992}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( ( PN + CRS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( PN + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC - RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) + ( CS * ( RCSe * ( Min( ( RRSe / ( MUM + MUC ) ) ,RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) )", "obj1": 0.23705179282868527, "obj2": 0.6363547091433022}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) + ( ( Const + ( FirstVNF_Mem - Min( ( ( MDR / ( MDR * FirstVNF_CPU ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) - BR ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),( Max( MLU,MUM ) * ( ( ( ( MLU + RMSe ) * CS ) - RRSe ) + Max( ( MUR * MUC ),MUC ) ) ) ) + ( ( CS * ( RCSe * Min( RMSe ,MLU ) ) ) * ( ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) * RMSe ) ) + ( MLU - CS ) ) * ( ( ( ( ( MLU / CS ) / Max( MUM,MLU ) ) * ( MUR * MLU ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2878936053541786}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3426294820717131, "obj2": 0.4912700934347391}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Max( AMS,( DDR - ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( RRSe * DS ) - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5717131474103586, "obj2": 0.2439425221266486}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ARS - ACS ) ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( ( CS + DS ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8645418326693227, "obj2": 0.052803775780852796}, {"determining": "( ( FirstVNF_CPU * ( ACS / AMS ) ) / ( CRS * ( ( DDR / BR ) - BR ) ) )", "choosing": "( Max( CS,( MUR - ( RMSe - CS ) ) ) / RCSe )", "obj1": 0.19721115537848605, "obj2": 0.6743618390841017}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) * ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( BR,AMS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) - ARS ) ) / ( FirstVNF_RAM_Server / ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( Max( ( PN * ( FirstVNF_Mem * AMS ) ),MRS ) + ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - ( ( Min( MLU ,RRSe ) - MUC ) + MUM ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) + ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / CS ) ) / MUM ) / DS ) ) ) + ( ( DS * ( ( MUC + MUR ) / MUC ) ) / ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.30968574937119236}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + BR ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( Min( MUM ,MUC ) / RCSe ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.7768924302788844, "obj2": 0.09215714180235816}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( MUM - MUM ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.39243027888446214, "obj2": 0.41708472448695266}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( RMSe + MUR ) * MUC ) * Min( MUC ,( MLU + ( RMSe / RMSe ) ) ) ) ) ,( ( MUM * RCSe ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( DS,RCSe ) + CS ) ) ) ) ) )", "obj1": 0.6633466135458167, "obj2": 0.17405298045801304}, {"determining": "( ( ACS / ( FirstVNF_CPU_Server + Max( RRS,PN ) ) ) + ( ( ( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( AMS / ACS ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / Max( BR,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_CPU_Server / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( RMSe + ( ( DS + RMSe ) + Min( CS ,CS ) ) ) - MUM ) / ( ( ( Min( ( ( ( MUR / MUC ) + ( MUR + MUC ) ) * RRSe ) ,MLU ) * Min( Min( Max( MLU,MUM ) ,Max( CS,( MUM - MUM ) ) ) ,( Min( CS ,( RMSe - MUR ) ) + Min( RRSe ,( RRSe * RRSe ) ) ) ) ) - MUM ) + MUM ) )", "obj1": 0.750996015936255, "obj2": 0.10446855590232887}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( PN + ACS ) + ( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - ARS ) + ( Const - Const ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe / ( ( ( Min( ( MUR - MUC ) ,MUC ) - ( RMSe / ( RMSe / RRSe ) ) ) + MUM ) - ( ( CS / CS ) * ( MLU - CS ) ) ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5802981787192035}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.651394422310757, "obj2": 0.1830725582909572}, {"determining": "( ( RRS * ( FirstVNF_Mem_Server - Min( ( ( MDR / PN ) - Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) + ( CRS / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / MUC ) * ( MUR - ( MUR * MLU ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4302788844621514, "obj2": 0.3751583826060303}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + BR ) ) ) + ( ( Const / Const ) * ( RRS - PN ) ) )", "choosing": "( Max( ( MUR * ( MUM - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( Min( MUM ,MUC ) / RCSe ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.9701195219123506, "obj2": 0.01271290719799872}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * ( ( ARS + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * ( ( CS / CS ) * ( MLU - CS ) ) ),CS ) + ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.21194775121193976}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( PN + FirstVNF_CPU_Server ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "( ( RRSe - ( ( RMSe / ( RRSe * RRSe ) ) * Min( ( ( CS - RCSe ) * ( Min( MUC ,Min( RRSe ,RMSe ) ) / ( DS / ( CS / MLU ) ) ) ) ,( ( DS + ( RRSe * Max( RRSe,DS ) ) ) / Max( MUC,Min( MLU ,( MUC + MUM ) ) ) ) ) ) ) / CS )", "obj1": 0.7330677290836654, "obj2": 0.12216492070308295}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - Min( ( ( MDR / PN ) - Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ARS / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( ( Max( CS,MUM ) + MUC ) + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / MUC ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5577689243027888, "obj2": 0.2620933949066024}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( ( FirstVNF_CPU + BR ) - ( Max( ( ARS - DDR ),AMS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( CRS * ACS ) ) )", "choosing": "( ( Min( RCSe ,Min( Max( MUM,RMSe ) ,CS ) ) / RRSe ) + Min( ( RCSe * ( ( DS / MUR ) * ( ( ( RRSe / ( RMSe + DS ) ) - RRSe ) - Max( RRSe,( Min( MUC ,CS ) * ( MLU + CS ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.1514766892353996}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5358565737051793, "obj2": 0.2726843100571175}, {"determining": "( ( FirstVNF_CPU_Server * Min( Const ,( MDR - MDR ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server / BR ) ) * ( FirstVNF_RAM_Server - ( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - FirstVNF_CPU ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC + RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( ( MUR * ( ( MUR * MUC ) / Min( MLU ,MUR ) ) ) / Max( RRSe,MLU ) ) / DS ) ) ) + ( CS * ( RCSe * Max( RRSe,CS ) ) ) )", "obj1": 0.4262948207171315, "obj2": 0.3772114905495399}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server * Min( ARS ,FirstVNF_RAM_Server ) ) + ( RRS / ACS ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ),RRSe ) ,( MUR + RRSe ) )", "obj1": 0.6812749003984063, "obj2": 0.16840896744200037}, {"determining": "( ( BR * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( ( ARS + ( PN * CRS ) ) / BR ) + ( Const + BR ) ) ) ) )", "choosing": "Min( Min( ( Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) - ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5722478418860395}, {"determining": "( ( Max( Min( ( ARS + ( Min( FirstVNF_RAM ,( CRS * DDR ) ) * RRS ) ) ,MDR ),BR ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * Min( MUC ,DS ) ) ) / Max( ( DS / MUM ),Min( CS ,( ( CS / Max( MUR,Max( MLU,( MUC * RCSe ) ) ) ) * Min( MUC ,( Min( MUC ,Min( MUM ,CS ) ) * ( RMSe - MLU ) ) ) ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7653000680829934}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5856573705179283, "obj2": 0.2360522245584992}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) / ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( FirstVNF_Mem - PN ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( RCSe ,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( MLU + ( Max( Min( MLU ,MUR ),Max( DS,Max( MLU,RRSe ) ) ) / Max( MUM,( RCSe * RRSe ) ) ) ) ) ) / MLU )", "obj1": 0.2948207171314741, "obj2": 0.567363879821579}, {"determining": "( ( ( ( ( Max( BR,BR ) + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( Max( FirstVNF_Mem_Server,MRS ) + BR ) * RRS ) ) ) / FirstVNF_Mem_Server ) * Max( MDR,PN ) ) + ( MDR + FirstVNF_RAM ) )", "choosing": "( ( RRSe + Min( RCSe ,( ( Min( ( ( MLU + RMSe ) + MLU ) ,( RRSe - MUC ) ) - ( ( MUC + ( RRSe - MUR ) ) / RCSe ) ) + RRSe ) ) ) / Min( DS ,DS ) )", "obj1": 0.3645418326693227, "obj2": 0.4475354834098479}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,Min( ARS ,( ACS + FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( AMS / ACS ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( DS * MUR ) * CS ) ,DS ) )", "obj1": 0.703187250996016, "obj2": 0.14509785373729528}, {"determining": "( ( ( ( PN / ( DDR * Max( AMS,( PN - ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + Min( AMS ,( ACS * FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / Min( DS ,RCSe ) )", "obj1": 0.9302788844621513, "obj2": 0.02831642291681773}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( ( DDR - FirstVNF_RAM ) / DDR ) ) - Min( ( Min( MDR ,PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( ( CS - CS ) + MUR ) - MUC ) * Min( MUC ,( MLU + ( RMSe / RMSe ) ) ) ) ) ,( ( MUM * RCSe ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( DS,RCSe ) + CS ) ) ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17107623020930543}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.4860557768924303, "obj2": 0.31616968546823715}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) * BR ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( MRS * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) - Min( ( ( FirstVNF_CPU - ( MDR / ACS ) ) - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,RCSe ) + RRSe ) / DS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( CS + MUM ) ) - RRSe ) - Max( RRSe,( DS * Min( RMSe ,RRSe ) ) ) ) ) ) ,( ( ( ( RCSe / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9143426294820717, "obj2": 0.035432577303490184}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8007968127490039, "obj2": 0.07401111337793972}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( AMS * FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem * Min( ( ( FirstVNF_RAM - PN ) - ( MDR / PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( ( ( MLU / CS ) * RCSe ) + RCSe ) * MUC ) * Min( MUC ,( MUM + Min( MUR ,DS ) ) ) ) ) ,( ( CS * RCSe ) - ( Min( CS ,Min( ( MUR * RMSe ) ,MUC ) ) * ( CS * Max( Min( DS ,MLU ),( Max( DS,( CS - MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.15513931977158193}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) * ( ( RRS / ( PN + RRS ) ) / FirstVNF_Mem ) ) ) - DDR ) - ( RRS * ACS ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Max( ( MUR / Max( ( DS / RCSe ),MUC ) ),( MUC * MUC ) ) * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( Max( ( MLU * CS ),MLU ),( ( MLU + CS ) * ( RRSe / MUC ) ) ) ) ) ) ,( RCSe / RRSe ) ) )", "obj1": 0.6274900398406374, "obj2": 0.20510978283282133}, {"determining": "( Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.25257039892930516}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( DDR + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( BR ,BR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) + ( FirstVNF_RAM_Server + ( BR + ( ( ( ( FirstVNF_Mem_Server - PN ) / PN ) - FirstVNF_CPU ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS - MLU ) / CS )", "obj1": 0.7450199203187251, "obj2": 0.11245176865923623}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( ( Max( CS,MUM ) + MUC ) + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / MUC ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7410358565737052, "obj2": 0.11627890717430338}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM * Min( Min( Max( AMS,BR ) ,( PN / FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RMSe * ( ( ( DS / ( CS / ( Max( RMSe,MUC ) * ( RMSe + RMSe ) ) ) ) / Min( MUC ,Min( RRSe ,RRSe ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * MUC ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) )", "obj1": 0.30278884462151395, "obj2": 0.5491111847894907}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) + Min( ( Max( AMS,( ARS - ( FirstVNF_CPU - RRS ) ) ) / Min( PN ,FirstVNF_Mem ) ) ,( Min( ( Min( RRS ,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( ( RRSe - ( RRSe / ( MUM + MUC ) ) ) - Max( RRSe,( ( MLU - CS ) * Min( MUC ,RRSe ) ) ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( RRSe ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU + CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7629482071713147, "obj2": 0.10055633773644167}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( ( Max( ( ( CRS - ( Const - ( FirstVNF_CPU + Max( MDR,PN ) ) ) ) * FirstVNF_CPU_Server ),Const ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - ( MRS - MDR ) ),Min( ARS ,Min( ACS ,RRS ) ) ) ,( ( ARS / BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + Max( BR,( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - AMS ) ) ) ) )", "choosing": "( Max( ( MUC - MUC ),( ( RRSe / ( MUM + MUC ) ) - RRSe ) ) + Min( ( Min( ( Min( ( MUC * MUC ) ,( ( DS * RCSe ) - CS ) ) + ( RCSe * RCSe ) ) ,Max( CS,RMSe ) ) * CS ) ,( ( ( ( ( DS / ( CS / DS ) ) * Min( RRSe ,RRSe ) ) / MUM ) / DS ) * ( ( ( RRSe / ( ( RMSe + MUC ) - ( RMSe * RMSe ) ) ) * ( Min( MLU ,CS ) / DS ) ) / MUM ) ) ) )", "obj1": 0.7928286852589641, "obj2": 0.07945122595729638}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) - Min( ( ( Const / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC + MUC ),( ( ( MUM + CS ) * Min( RRSe ,MUC ) ) / ( ( CS * RCSe ) - ( CS * ( RRSe - ( Min( MUC ,RRSe ) / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( MUR * RRSe ) ) ) ,( DS / ( CS / MLU ) ) ) )", "obj1": 0.9780876494023905, "obj2": 0.007855707873017405}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.6852589641434262, "obj2": 0.1618025954746454}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( MRS / PN ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( Max( CRS,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( DS / ( CS / MLU ) ) / Min( RMSe ,Min( RRSe ,RRSe ) ) ) * ( RRSe + DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.22560665249182546}, {"determining": "( Max( Const,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / FirstVNF_CPU ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( Max( RRSe,( MUM + MUC ) ) - RRSe ) ) + ( ( Min( DS ,DS ) * RCSe ) + ( RRSe * ( CS / Min( RRSe ,( RRSe * ( ( RMSe + MLU ) / RCSe ) ) ) ) ) ) )", "obj1": 0.7928286852589641, "obj2": 0.07945122595729638}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) * ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + CS ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUC * CS ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6314741035856574, "obj2": 0.2016777764228447}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.4860557768924303, "obj2": 0.31616968546823715}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,Min( ARS ,( ACS + FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ( ( MDR / PN ) - FirstVNF_CPU ) + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) / CS )", "obj1": 0.9840637450199203, "obj2": 0.006529268598998811}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( MRS / PN ) ,Max( FirstVNF_CPU_Server,BR ) ) ,FirstVNF_CPU_Server ) ) ) + DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - DDR ) ) ,( ACS + ( BR / MRS ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( MLU / CS ) ) ) * ( ( ( ( DS / ( RRSe / CS ) ) * ( ( MUC + RCSe ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RRSe ,RMSe ) )", "obj1": 0.6095617529880478, "obj2": 0.21420852552988665}, {"determining": "( ( ( ( PN / AMS ) - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( ( MLU / RRSe ) * Max( ( MUM + DS ),CS ) ) / MUR ) / DS ) ) ) + Max( MUC,( Min( RRSe ,( MUM + MLU ) ) * MUC ) ) )", "obj1": 0.4900398406374502, "obj2": 0.31056407020399246}, {"determining": "( ( Min( DDR ,ARS ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server - DDR ) / CRS ) ) ) ) ) )", "choosing": "( Max( ( Min( Min( Max( MUC,Max( DS,Max( RCSe,RCSe ) ) ) ,MUR ) ,Max( ( RRSe / RMSe ),Max( ( RMSe * MUC ),DS ) ) ) * MUC ),CS ) + ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) - ( DS / ( CS / MLU ) ) ) * ( ( MUM / ( Min( ( RRSe / RRSe ) ,( MUR - RCSe ) ) * ( MLU / ( MUC * MUM ) ) ) ) / DS ) ) ) )", "obj1": 0.7649402390438247, "obj2": 0.09717214279086882}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC - MUC ),( ( RRSe / ( MUM + MUC ) ) - RRSe ) ) + Min( ( CS * Min( ( Min( ( MUC * MUC ) ,( MLU - CS ) ) + ( RCSe * RCSe ) ) ,( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) * ( ( ( RRSe / ( ( RMSe + MUC ) - ( RMSe * RMSe ) ) ) * ( DS / ( MLU / CS ) ) ) / MUM ) ) ) )", "obj1": 0.5916334661354582, "obj2": 0.23305573349015532}, {"determining": "( ( ( ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) / ( ACS + ( MDR / PN ) ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,RRS ) ) - DDR ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) * ( ( Min( ( ARS + FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU - CS ) * Min( RRSe ,MUC ) ) ) ),MUM ) + Min( RRSe ,MLU ) )", "obj1": 0.954183266932271, "obj2": 0.019584646722953843}], "39": [{"determining": "( ( ( Max( PN,( DDR - ARS ) ) / ( ARS + FirstVNF_Mem ) ) - ARS ) + ( ( ( Const + AMS ) / ( ( ( FirstVNF_RAM_Server + Min( ARS ,Max( FirstVNF_RAM_Server,MRS ) ) ) - MDR ) + MDR ) ) * ( FirstVNF_Mem + RRS ) ) )", "choosing": "( ( Min( MUR ,Min( RRSe ,( ( Min( ( RCSe / MUC ) ,Min( DS ,RRSe ) ) + ( MUM + RCSe ) ) / MUR ) ) ) * CS ) + Min( RRSe ,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * ( ( MDR * FirstVNF_CPU ) - ( ( FirstVNF_Mem + BR ) + Min( ( FirstVNF_Mem + BR ) ,Const ) ) ) ) ,( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( MLU / ( RMSe - ( MUM * ( MUM * ( ( RCSe + MUR ) + RRSe ) ) ) ) ) * ( ( Max( RCSe,( MUM + CS ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( MUC / ( MUC / MLU ) ) * ( MUR - ( CS * MUC ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.31274900398406374, "obj2": 0.5116533615024161}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( AMS / ( Min( Const ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( RMSe + RRSe ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( RCSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.39017701656130627}, {"determining": "( ( Max( ( DDR - ARS ),MRS ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + ( FirstVNF_RAM + CRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( RRSe,( RRSe - RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.39641434262948205, "obj2": 0.4059650228821945}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( CS + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUC ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.4795657848546178}, {"determining": "( ( FirstVNF_CPU_Server * ( BR - ( FirstVNF_Mem - RRS ) ) ) + ( ( FirstVNF_RAM_Server + ( Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_Mem ) ) * ( ( ( FirstVNF_Mem / ( ( ARS / BR ) * Const ) ) + ARS ) / ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( RCSe * Min( RCSe ,MUR ) ) * CS ) ,Min( ( ( MLU - CS ) + Max( MUR,( RRSe - ( ( MLU + MUR ) / MUM ) ) ) ) ,( ( MUM + RRSe ) / Max( ( Min( RCSe ,MUM ) * RCSe ),RRSe ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.4945228237051121}, {"determining": "( Min( ( Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + Min( AMS ,FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) + ( ( ARS * MDR ) + MRS ) ) ,( MRS + PN ) ) + ( MRS * FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS * ( ( ( RMSe + MUR ) * MUC ) * Min( MUC ,( MLU + ( RMSe / RMSe ) ) ) ) ) ,( RMSe - ( Max( ( ( DS - MLU ) + ( RMSe - DS ) ),DS ) * CS ) ) )", "obj1": 0.30876494023904383, "obj2": 0.546755539140311}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( ACS / ACS ) + ( ( ( ARS / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) / Min( FirstVNF_CPU ,Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( ( CS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( MUC,MLU ) - ( ( RCSe * RCSe ) + DS ) ) ) ) * ( ( ( ( DS / ( MUC / DS ) ) * ( MUR - ( RCSe * CS ) ) ) / RCSe ) / ( MUM - MUC ) ) ) ) / Max( RCSe,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6531633830271687}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( ( Min( MDR ,( ( AMS * RRS ) + Const ) ) / BR ) * Max( ( ( ARS + ( ( ( ARS / MDR ) * BR ) * PN ) ) + FirstVNF_CPU_Server ),BR ) ) / ( FirstVNF_CPU * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MLU + CS ) ,( ( RMSe * ( RRSe * DS ) ) * ( Min( MUC ,RRSe ) / DS ) ) ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7774916413894789}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.651394422310757, "obj2": 0.1830725582909572}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),RRS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - ( ( Min( MLU ,RRSe ) - MUC ) + MUM ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) + ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.3784860557768924, "obj2": 0.44397816549502916}, {"determining": "( ( ( MDR / PN ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / ( ARS / FirstVNF_Mem_Server ) ) - MRS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) - ( DS / ( CS / MLU ) ) ) * ( ( ( CS * ( MUM - ( RMSe * RCSe ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3565737051792829, "obj2": 0.45454154870021224}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( MRS + Max( ACS,ARS ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( Const,( Const * Min( AMS ,BR ) ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( ( RRSe * MUR ),MUC ) - MUC ) ) ) * ( ( ( ( DS / ( MUM / MLU ) ) * ( MUR - Max( DS,CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.3844621513944223, "obj2": 0.4239294888737787}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( ( Max( MUC,RCSe ) + MUM ) * ( ( ( DS / Max( RCSe,RCSe ) ) + Min( MUC ,MLU ) ) / MUM ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( ( MUC / ( CS / MLU ) ),( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( MUM + MUC ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8167330677290837, "obj2": 0.06932213175525313}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( ( RRS - PN ) - ( Max( AMS,Max( DDR,ARS ) ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / Min( PN ,DDR ) ) - ARS ) ,( ( ( Const * FirstVNF_CPU_Server ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe + ( RMSe - ( ( Max( MLU,MUM ) * Max( RRSe,DS ) ) + DS ) ) ) + Max( MUC,( MUC * MUR ) ) )", "obj1": 0.4601593625498008, "obj2": 0.3434644245378344}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( PN - ( Const * MRS ) ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,( RMSe + ( ( RCSe / Min( CS ,Min( Min( RCSe ,RMSe ) ,Min( MUC ,MUM ) ) ) ) * CS ) ) ) / CS )", "obj1": 0.22310756972111553, "obj2": 0.6383559113136551}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server * ACS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,Min( ( ( RCSe * DS ) - Min( MUM ,Min( RMSe ,MUC ) ) ) ,RCSe ) ) - MUC ) / ( RMSe + RMSe ) ) / CS )", "obj1": 0.8326693227091634, "obj2": 0.06369272110000138}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( MRS / PN ) ,Max( FirstVNF_CPU_Server,BR ) ) ,FirstVNF_CPU_Server ) ) ) + DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - DDR ) ) ,( ACS + ( BR / MRS ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( MLU / CS ) ) ) * ( ( ( ( DS / ( RRSe / CS ) ) * ( ( MUC + RCSe ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RRSe ,RMSe ) )", "obj1": 0.6095617529880478, "obj2": 0.21420852552988665}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.20119521912350596, "obj2": 0.6644567269549355}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + DDR ) + Min( Max( ( FirstVNF_Mem - RRS ),MDR ) ,( RRS + ( ARS + BR ) ) ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( RRSe * MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) - DS ) ) ) / CS )", "obj1": 0.24302788844621515, "obj2": 0.6243754843162641}, {"determining": "( ( ( ( PN / ( DDR * Max( AMS,( PN - ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + Min( AMS ,( ACS * FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / Min( DS ,RCSe ) )", "obj1": 0.9302788844621513, "obj2": 0.02831642291681773}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( MRS / PN ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( Max( CRS,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( DS / ( CS / MLU ) ) / Min( RMSe ,Min( RRSe ,RRSe ) ) ) * ( RRSe + DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.22560665249182546}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,PN ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS ) / CS )", "obj1": 0.17330677290836655, "obj2": 0.7012972613864342}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ( ( ( MDR / PN ) - ( MRS - FirstVNF_RAM_Server ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( Max( DS,Max( CS,DS ) ) + RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( ( ( ( MLU + RCSe ) * RMSe ) * DS ),( DS / RCSe ) ) ) ) ) )", "obj1": 0.44223107569721115, "obj2": 0.36495586478386455}, {"determining": "( ( Const + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Max( BR,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Max( ( FirstVNF_RAM / MRS ),FirstVNF_Mem ) ) / ( FirstVNF_RAM / ARS ) ) ) ) ) + ( ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * DS ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) / Max( ( ( DS / MUR ) + ( MLU * Max( RRSe,MUM ) ) ),RRSe ) )", "obj1": 0.18725099601593626, "obj2": 0.6817292305118411}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( Max( Max( BR,Min( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MRS * ( Max( DDR,BR ) + ( MRS / MRS ) ) ) ) ,FirstVNF_CPU ) ),CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe - ( ( RMSe / ( RRSe * RRSe ) ) * Min( ( MLU / CS ) ,( ( DS + ( RRSe * ( RCSe / RRSe ) ) ) / Max( MUC,Min( MLU ,( MUC + MUM ) ) ) ) ) ) ) / CS )", "obj1": 0.17928286852589642, "obj2": 0.6911326379223992}, {"determining": "( ( FirstVNF_CPU_Server * ( ( MDR * FirstVNF_CPU ) - ( ( FirstVNF_Mem + BR ) + Min( FirstVNF_Mem_Server ,Const ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( MLU / ( RMSe - ( MUM * ( MUM * ( ( RMSe - RMSe ) + RRSe ) ) ) ) ) * ( ( Max( RCSe,( MUM + CS ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( MUC / ( MUC / MLU ) ) * ( MUR - ( CS * MUC ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.8784860557768924, "obj2": 0.05222952503042473}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( ( PN + CRS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( PN + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC - RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) + ( CS * ( RCSe * ( Min( ( RRSe / ( MUM + MUC ) ) ,RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) )", "obj1": 0.23705179282868527, "obj2": 0.6363547091433022}, {"determining": "( Min( AMS ,( FirstVNF_Mem / BR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - Min( ( ( MDR - PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( MUM - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,Min( Min( DS ,MUC ) ,RCSe ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04429856053182414}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ),( ARS - DDR ) ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Max( ( MUC * MUC ),( MUR / Max( ( DS / RCSe ),MUC ) ) ) * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * ( RRSe / MUC ) ) ) ) ) ) ,MUC ) )", "obj1": 0.6394422310756972, "obj2": 0.19684885170993982}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3426294820717131, "obj2": 0.4912700934347391}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "Min( Min( ( Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) - ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.48406374501992033, "obj2": 0.32057704091721567}, {"determining": "( ( ( ( ( Max( BR,BR ) + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( Max( FirstVNF_Mem_Server,MRS ) + BR ) * RRS ) ) ) / FirstVNF_Mem_Server ) * Max( MDR,PN ) ) + ( MDR + FirstVNF_RAM ) )", "choosing": "( ( RRSe + Min( RCSe ,( ( Min( ( ( MLU + RMSe ) + MLU ) ,( RRSe - MUC ) ) - ( ( MUC + ( RRSe - MUR ) ) / RCSe ) ) + RRSe ) ) ) / Min( DS ,DS ) )", "obj1": 0.3645418326693227, "obj2": 0.4475354834098479}, {"determining": "( ( FirstVNF_CPU * ( ACS / AMS ) ) / ( CRS * ( ( DDR / BR ) - BR ) ) )", "choosing": "( Max( CS,( MUR - ( RMSe - CS ) ) ) / RCSe )", "obj1": 0.19721115537848605, "obj2": 0.6743618390841017}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ARS - ACS ) ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( ( CS + DS ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8645418326693227, "obj2": 0.052803775780852796}, {"determining": "Min( ( FirstVNF_RAM / ( CRS * RRS ) ) ,Max( Min( ( MDR + RRS ) ,Max( Min( FirstVNF_Mem_Server ,Const ),MRS ) ),( ( ( CRS * Max( BR,Const ) ) - Const ) / ( ACS / ACS ) ) ) )", "choosing": "Min( ( Max( ( MLU + Min( RCSe ,MUR ) ),Max( CS,DS ) ) - RRSe ) ,( CS - MUC ) )", "obj1": 0.25298804780876494, "obj2": 0.6051980343136355}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( MUM - MUM ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.39243027888446214, "obj2": 0.41708472448695266}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( MUM / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( CS / DS ) ) * ( ( MUR - MUC ) / RRSe ) ) / MUM ) / DS ) * ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2804369725058234}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8007968127490039, "obj2": 0.07401111337793972}, {"determining": "( ( PN + ACS ) + ( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - ARS ) + ( Const - Const ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe / ( ( ( Min( ( MUR - MUC ) ,MUC ) - ( RMSe / ( RMSe / RRSe ) ) ) + MUM ) - ( ( CS / CS ) * ( MLU - CS ) ) ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5802981787192035}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( Max( ( MUM + DS ),CS ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.7788844621513944, "obj2": 0.09117605346536078}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Max( AMS,( DDR - ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( RRSe * DS ) - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5717131474103586, "obj2": 0.2439425221266486}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) + Min( ( Max( AMS,( ARS - ( FirstVNF_CPU - Min( ( PN / MRS ) ,Max( AMS,BR ) ) ) ) ) / Min( PN ,FirstVNF_Mem ) ) ,( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( ( ( Max( ( MUM + DS ),CS ) * ( MLU / RRSe ) ) / MUR ) / DS ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.1421172290217698}, {"determining": "( ( ( Max( PN,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) - ARS ) + ( ( ( Const + AMS ) / ( ( ( FirstVNF_CPU_Server - Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) - MDR ) + MDR ) ) * ( FirstVNF_Mem + RRS ) ) )", "choosing": "( ( Min( MUR ,Min( RRSe ,( ( ( MUM + RCSe ) + ( RRSe + DS ) ) / MUR ) ) ) * MUM ) + Min( RRSe ,Max( DS,MUM ) ) )", "obj1": 0.7231075697211156, "obj2": 0.12526447140843247}, {"determining": "( ( RRS * ( FirstVNF_Mem_Server - Min( ( ( MDR / PN ) - Max( FirstVNF_CPU_Server,ARS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) + ( CRS / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / MUC ) * ( MUR - ( MUR * MLU ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4302788844621514, "obj2": 0.3751583826060303}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( ( FirstVNF_RAM / DDR ) + BR ) + RRS ) ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( RMSe + MUR ) * MUC ) * Min( MUC ,( MLU + ( RMSe / RMSe ) ) ) ) ) ,( ( DS / ( ( MUC + MUM ) / MLU ) ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( DS,RCSe ) + CS ) ) ) ) ) )", "obj1": 0.9701195219123506, "obj2": 0.011217221693966413}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) * BR ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( MRS * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) - Min( ( ( FirstVNF_CPU - ( MDR / ACS ) ) - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,RCSe ) + RRSe ) / DS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( CS + MUM ) ) - RRSe ) - Max( RRSe,( DS * Min( RMSe ,RRSe ) ) ) ) ) ) ,( ( ( ( RCSe / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9143426294820717, "obj2": 0.035432577303490184}, {"determining": "( ( BR * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( ( ARS + ( PN * CRS ) ) / BR ) + ( Const + BR ) ) ) ) )", "choosing": "Min( Min( ( Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) - ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5722478418860395}, {"determining": "( ( ( ( Min( ( MRS / ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_CPU_Server ,Min( ARS ,Max( AMS,FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( BR,Min( ( ( ARS * DDR ) * AMS ) ,MRS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Max( CRS,BR ) )", "choosing": "( ( MUR / Min( MUR ,MUR ) ) + Min( ( CS * Min( RMSe ,( MUR * ( RMSe + MLU ) ) ) ) ,( MUC - ( CS + ( MUR * Min( ( MUR * Max( MLU,DS ) ) ,Max( RMSe,( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.03864135116696866}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,Max( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ),RRSe ) ) )", "obj1": 0.6195219123505976, "obj2": 0.21135410048498832}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( ( FirstVNF_CPU + BR ) - ( Max( ( ARS - DDR ),AMS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( CRS * ACS ) ) )", "choosing": "( ( Min( RCSe ,Min( Max( MUM,RMSe ) ,CS ) ) / RRSe ) + Min( ( RCSe * ( ( DS / MUR ) * ( ( ( RRSe / ( RMSe + DS ) ) - RRSe ) - Max( RRSe,( Min( MUC ,CS ) * ( MLU + CS ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.1514766892353996}, {"determining": "( ( FirstVNF_CPU_Server * Min( Const ,( MDR - MDR ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server / BR ) ) * ( FirstVNF_RAM_Server - ( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - FirstVNF_CPU ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Min( Max( ( ( ( DS + MUR ) * DS ) - Min( CS ,Min( MUC ,Max( ( MUC + RMSe ),MUM ) ) ) ),MLU ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Max( Min( DS ,MLU ),Max( RRSe,MUC ) ) ) ) * ( ( ( MUR * ( ( MUR * MUC ) / Min( MLU ,MUR ) ) ) / Max( RRSe,MLU ) ) / DS ) ) ) + ( CS * ( RCSe * Max( RRSe,CS ) ) ) )", "obj1": 0.4262948207171315, "obj2": 0.3772114905495399}, {"determining": "( ( ( MDR / PN ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( ( FirstVNF_RAM / DDR ) + BR ) + RRS ) ) ) ) ) + ( MDR + FirstVNF_RAM ) )", "choosing": "( ( Max( Max( ( MUR + ( ( MUC / CS ) * ( RMSe + ( RMSe + MUM ) ) ) ),MUC ),Max( RRSe,Min( MUM ,RCSe ) ) ) * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( ( MUC + MUM ) / MLU ) ) ) * ( ( ( CS * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9442231075697212, "obj2": 0.02747873523816073}, {"determining": "( ( Max( Min( ( ARS + ( Min( FirstVNF_RAM ,( CRS * DDR ) ) * RRS ) ) ,MDR ),BR ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * Min( MUC ,DS ) ) ) / Max( ( DS / MUM ),Min( CS ,( ( CS / Max( MUR,Max( MLU,( MUC * RCSe ) ) ) ) * Min( MUC ,( Min( MUC ,Min( MUM ,CS ) ) * ( RMSe - MLU ) ) ) ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7653000680829934}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) + ( ( Const + ( FirstVNF_Mem - Min( ( ( MDR / ( MDR * FirstVNF_CPU ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) - BR ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),( Max( MLU,MUM ) * ( ( ( ( MLU + RMSe ) * CS ) - RRSe ) + Max( ( MUR * MUC ),MUC ) ) ) ) + ( ( CS * ( RCSe * Min( RMSe ,MLU ) ) ) * ( ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) * RMSe ) ) + ( MLU - CS ) ) * ( ( ( ( ( MLU / CS ) / Max( MUM,MLU ) ) * ( MUR * MLU ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2878936053541786}, {"determining": "( ( ( ( Max( Min( ( ARS + ( MRS * PN ) ) ,MDR ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - AMS ) ) / DDR ) ) - ( ( ( MDR / PN ) - DDR ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8466135458167331, "obj2": 0.05830707714983348}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( DDR,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Max( AMS,( DDR - ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( DS,MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( RRSe * DS ) - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5, "obj2": 0.30350555819035674}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,Min( ARS ,( ACS + FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( AMS / ACS ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( DS * MUR ) * CS ) ,DS ) )", "obj1": 0.703187250996016, "obj2": 0.14509785373729528}, {"determining": "( ( ( ( Max( Min( ( ARS + ( MRS * PN ) ) ,MDR ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( FirstVNF_RAM / FirstVNF_RAM_Server ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - ( ( ( MDR / PN ) - DDR ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MLU / CS ) * ( RRSe / RRSe ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) * ( DS / ( CS / MLU ) ) ) * ( Max( MUC,RMSe ) / DS ) ) ) - MUC )", "obj1": 0.850597609561753, "obj2": 0.05645780579543709}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( MUM - MUM ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5577689243027888, "obj2": 0.2612992162458409}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( AMS * FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem * Min( ( ( FirstVNF_RAM - PN ) - ( MDR / PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( ( ( MLU / CS ) * RCSe ) + RCSe ) * MUC ) * Min( MUC ,( MUM + Min( MUR ,DS ) ) ) ) ) ,( ( CS * RCSe ) - ( Min( CS ,Min( ( MUR * RMSe ) ,MUC ) ) * ( CS * Max( Min( DS ,MLU ),( Max( DS,( CS - MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.15513931977158193}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server * Min( ARS ,FirstVNF_RAM_Server ) ) + ( RRS / ACS ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ),RRSe ) ,( MUR + RRSe ) )", "obj1": 0.6812749003984063, "obj2": 0.16840896744200037}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( DDR + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( BR ,BR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) + ( FirstVNF_RAM_Server + ( BR + ( ( ( ( FirstVNF_Mem_Server - PN ) / PN ) - FirstVNF_CPU ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS - MLU ) / CS )", "obj1": 0.7450199203187251, "obj2": 0.11245176865923623}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5836653386454184, "obj2": 0.23757802230056843}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM * Min( Min( Max( AMS,BR ) ,( PN / FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RMSe * ( ( ( DS / ( CS / ( Max( RMSe,MUC ) * ( RMSe + RMSe ) ) ) ) / Min( MUC ,Min( RRSe ,RRSe ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * MUC ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) )", "obj1": 0.30278884462151395, "obj2": 0.5491111847894907}, {"determining": "( Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.25257039892930516}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6613545816733067, "obj2": 0.1750612297436392}, {"determining": "( ( Max( ( ( CRS - ( Const - ( FirstVNF_CPU + Max( MDR,PN ) ) ) ) * FirstVNF_CPU_Server ),Const ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - ( MRS - MDR ) ),Min( ARS ,Min( ACS ,RRS ) ) ) ,( ( ARS / BR ) + RRS ) ) ) ) ) + ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) - DDR ) )", "choosing": "( Max( ( MUC - MUC ),( ( RRSe / ( MUM + MUC ) ) - RRSe ) ) + Min( ( Min( ( Min( ( MUC * MUC ) ,( ( DS * RCSe ) - CS ) ) + ( RCSe * RCSe ) ) ,Max( CS,RMSe ) ) * CS ) ,( ( ( ( ( DS / ( CS / DS ) ) * Min( RRSe ,RRSe ) ) / MUM ) / DS ) * ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) ) ) )", "obj1": 0.9920318725099602, "obj2": 0.0025937569841526322}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,RRS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( Const / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC + MUC ),( ( ( MUM + CS ) * Min( RRSe ,MUC ) ) / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( MUR * RRSe ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.016220314674796066}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / FirstVNF_Mem_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Max( RCSe,( MUM + CS ) ) ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( DS * MUR ) * CS ) ,DS ) )", "obj1": 0.29282868525896416, "obj2": 0.5633509178900145}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.6852589641434262, "obj2": 0.1618025954746454}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( MLU - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5318725099601593, "obj2": 0.2778706649420956}, {"determining": "( Min( FirstVNF_RAM_Server ,CRS ) + ( Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( PN / Max( PN,AMS ) ) ) * ( ( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ARS ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( MUC / ( CS / MLU ) ) ) * ( ( MUR * CS ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03842368450379492}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC - MUC ),( ( RRSe / ( MUM + MUC ) ) - RRSe ) ) + Min( ( CS * Min( ( Min( ( MUC * MUC ) ,( MLU - CS ) ) + ( RCSe * RCSe ) ) ,( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) * ( ( ( RRSe / ( ( RMSe + MUC ) - ( RMSe * RMSe ) ) ) * ( DS / ( MLU / CS ) ) ) / MUM ) ) ) )", "obj1": 0.5916334661354582, "obj2": 0.23305573349015532}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) + Min( ( Max( AMS,( ARS - ( FirstVNF_CPU - RRS ) ) ) / Min( PN ,FirstVNF_Mem ) ) ,( Min( ( Min( RRS ,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( ( RRSe - ( RRSe / ( MUM + MUC ) ) ) - Max( RRSe,( ( MLU - CS ) * Min( MUC ,RRSe ) ) ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( RRSe ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU + CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7629482071713147, "obj2": 0.10055633773644167}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) * ( ( RRS / ( PN + RRS ) ) / FirstVNF_Mem ) ) ) - DDR ) - ( RRS * ACS ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Max( ( MUR / Max( ( DS / RCSe ),MUC ) ),( MUC * MUC ) ) * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( Max( ( MLU * CS ),MLU ),( ( MLU + CS ) * ( RRSe / MUC ) ) ) ) ) ) ,( RCSe / RRSe ) ) )", "obj1": 0.6274900398406374, "obj2": 0.20510978283282133}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( ( ( PN / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ( ( PN / Max( FirstVNF_CPU_Server,PN ) ) - DDR ) ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server + MDR ) ) * ( ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) - Min( ( ( Const / PN ) - FirstVNF_CPU ) ,( BR + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC + MUC ),( ( ( MUM + CS ) * Min( RRSe ,MUC ) ) / ( ( CS * RCSe ) - ( CS * ( RRSe - ( Min( MUC ,RRSe ) / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( MUR * RRSe ) ) ) ,( DS / ( CS / MLU ) ) ) )", "obj1": 0.9780876494023905, "obj2": 0.007855707873017405}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) * ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( BR,AMS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) - ARS ) ) / ( FirstVNF_RAM_Server / ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( Max( ( PN * ( FirstVNF_Mem * AMS ) ),MRS ) + ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - ( ( Min( MLU ,RRSe ) - MUC ) + MUM ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) + ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / CS ) ) / MUM ) / DS ) ) ) + ( ( DS * ( ( MUC + MUR ) / MUC ) ) / ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.30968574937119236}, {"determining": "( ( ACS / ( FirstVNF_CPU_Server + Max( RRS,PN ) ) ) + ( ( ( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( AMS / ACS ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / Max( BR,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_CPU_Server / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( RMSe + ( ( DS + RMSe ) + Min( CS ,CS ) ) ) - MUM ) / ( ( ( Min( ( ( ( MUR / MUC ) + ( MUR + MUC ) ) * RRSe ) ,MLU ) * Min( Min( Max( MLU,MUM ) ,Max( CS,( MUM - MUM ) ) ) ,( Min( CS ,( RMSe - MUR ) ) + Min( RRSe ,( RRSe * RRSe ) ) ) ) ) - MUM ) + MUM ) )", "obj1": 0.750996015936255, "obj2": 0.10446855590232887}, {"determining": "( ( ( ( PN / AMS ) - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( ( MLU / RRSe ) * Max( ( MUM + DS ),CS ) ) / MUR ) / DS ) ) ) + Max( MUC,( Min( RRSe ,( MUM + MLU ) ) * MUC ) ) )", "obj1": 0.4900398406374502, "obj2": 0.31056407020399246}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( ( ( FirstVNF_RAM / DDR ) + BR ) ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe + RMSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - DS ) ) * ( MUM + DS ) ) ) )", "obj1": 0.4860557768924303, "obj2": 0.31603932434399734}], "40": [{"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( AMS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( MDR - ACS ) + ( Min( CRS ,BR ) - PN ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - MDR ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( RCSe,RCSe ) + RRSe ) / DS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( CS + MUM ) ) - RRSe ) - Max( RRSe,( DS * Min( RMSe ,RRSe ) ) ) ) ) ) ,( ( ( ( RCSe / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( PN,( DDR - ARS ) ) / ( ARS + FirstVNF_Mem ) ) - ARS ) + ( ( ( Const + AMS ) / ( ( ( FirstVNF_RAM_Server + Min( ARS ,Max( FirstVNF_RAM_Server,MRS ) ) ) - MDR ) + MDR ) ) * ( FirstVNF_Mem + RRS ) ) )", "choosing": "( ( Min( MUR ,Min( RRSe ,( ( Min( ( RCSe / MUC ) ,Min( DS ,RRSe ) ) + ( MUM + RCSe ) ) / MUR ) ) ) * CS ) + Min( RRSe ,Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,Min( ACS ,( ( ARS / FirstVNF_RAM ) * AMS ) ) ),( ( ( FirstVNF_RAM_Server + BR ) / FirstVNF_RAM_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( CS - CS ) / MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( ( MUM - DS ) - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.372518915128707}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.31274900398406374, "obj2": 0.5116533615024161}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( DDR ,Min( ACS ,FirstVNF_Mem ) ) + Min( Const ,CRS ) ) + Min( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - ( Const * DDR ) ),MDR ) ,Max( ( FirstVNF_CPU_Server + BR ),RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM / AMS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / Max( MUR,CS ) ) ) * ( DS * ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ) ) * ( ( ( ( RRSe - Min( RRSe ,( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( ( MLU * MUM ),( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.3286852589641434, "obj2": 0.4896307554923697}, {"determining": "( ( Max( ( DDR - ARS ),MRS ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + ( FirstVNF_RAM + CRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( RRSe,( RRSe - RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.39641434262948205, "obj2": 0.4059650228821945}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_CPU_Server / DDR ) ) ) )", "choosing": "( Min( RCSe ,MUR ) / ( RRSe * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( Max( MUM,MUC ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.34860557768924305, "obj2": 0.46936983025542023}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( ( Max( PN,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) - ARS ) + ( ( ( Const + AMS ) / ( ( ( FirstVNF_CPU_Server - Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) - MDR ) + MDR ) ) * ( FirstVNF_Mem + RRS ) ) )", "choosing": "( ( Min( MUR ,Min( RRSe ,( ( ( MUM + RCSe ) + ( RRSe + DS ) ) / MUR ) ) ) * MUM ) + Min( RRSe ,Max( DS,MUM ) ) )", "obj1": 0.7231075697211156, "obj2": 0.12526447140843247}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8007968127490039, "obj2": 0.07401111337793972}, {"determining": "( Min( ( Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM + Min( AMS ,FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server / DDR ) ) + ( ( ARS * MDR ) + MRS ) ) ,( MRS + PN ) ) + ( MRS * FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS * ( ( ( RMSe + MUR ) * MUC ) * Min( MUC ,( MLU + ( RMSe / RMSe ) ) ) ) ) ,( RMSe - ( Max( ( ( DS - MLU ) + ( RMSe - DS ) ),DS ) * CS ) ) )", "obj1": 0.30876494023904383, "obj2": 0.546755539140311}, {"determining": "( ( ACS / ACS ) + ( ( ( ARS / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) / Min( FirstVNF_CPU ,Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( ( CS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( MUC,MLU ) - ( ( RCSe * RCSe ) + DS ) ) ) ) * ( ( ( ( DS / ( MUC / DS ) ) * ( MUR - ( RCSe * CS ) ) ) / RCSe ) / ( MUM - MUC ) ) ) ) / Max( RCSe,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6531633830271687}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( ( Min( MDR ,( ( AMS * RRS ) + Const ) ) / BR ) * Max( ( ( ARS + ( ( ( ARS / MDR ) * BR ) * PN ) ) + FirstVNF_CPU_Server ),BR ) ) / ( FirstVNF_CPU * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MLU + CS ) ,( ( RMSe * ( RRSe * DS ) ) * ( Min( MUC ,RRSe ) / DS ) ) ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7774916413894789}, {"determining": "( ( FirstVNF_CPU + ( PN * Min( MRS ,MRS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ,( ( CRS / MRS ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MUM ) / MUM ) / DS ) ) ) / ( RCSe - DS ) )", "obj1": 0.3745019920318725, "obj2": 0.43051097106600705}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( PN - ( Const * MRS ) ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,( RMSe + ( ( RCSe / Min( CS ,Min( Min( RCSe ,RMSe ) ,Min( MUC ,MUM ) ) ) ) * CS ) ) ) / CS )", "obj1": 0.22310756972111553, "obj2": 0.6383559113136551}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( ( ( ( Max( BR,BR ) + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( Max( FirstVNF_Mem_Server,MRS ) + BR ) * RRS ) ) ) / FirstVNF_Mem_Server ) * Max( MDR,PN ) ) + ( MDR + FirstVNF_RAM ) )", "choosing": "( ( RRSe + Min( RCSe ,( ( Min( ( ( MLU + RMSe ) + MLU ) ,( RRSe - MUC ) ) - ( ( MUC + ( RRSe - MUR ) ) / RCSe ) ) + RRSe ) ) ) / Min( DS ,DS ) )", "obj1": 0.3645418326693227, "obj2": 0.4475354834098479}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ( ( ( MDR / PN ) - ( MRS - FirstVNF_RAM_Server ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( Max( DS,Max( CS,DS ) ) + RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( ( ( ( MLU + RCSe ) * RMSe ) * DS ),( DS / RCSe ) ) ) ) ) )", "obj1": 0.44223107569721115, "obj2": 0.36495586478386455}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( ( RRS - PN ) - ( Max( AMS,Max( DDR,ARS ) ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / Min( PN ,DDR ) ) - ARS ) ,( ( ( Const * FirstVNF_CPU_Server ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe + ( RMSe - ( ( Max( MLU,MUM ) * Max( RRSe,DS ) ) + DS ) ) ) + Max( MUC,( MUC * MUR ) ) )", "obj1": 0.4601593625498008, "obj2": 0.3434644245378344}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server * ACS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,Min( ( ( RCSe * DS ) - Min( MUM ,Min( RMSe ,MUC ) ) ) ,RCSe ) ) - MUC ) / ( RMSe + RMSe ) ) / CS )", "obj1": 0.8326693227091634, "obj2": 0.06369272110000138}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server * ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / Max( MRS,( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ACS ) ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( Max( ( MUM + DS ),CS ) * ( MLU / RRSe ) ) / DS ) / DS ) ) ,( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( MUM,DS ) )", "obj1": 0.7828685258964143, "obj2": 0.08935214067452285}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ARS - ACS ) ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( ( CS + DS ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8645418326693227, "obj2": 0.052803775780852796}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.20119521912350596, "obj2": 0.6644567269549355}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server * Min( ARS ,FirstVNF_RAM_Server ) ) + ( RRS / ACS ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ),RRSe ) ,( MUR + RRSe ) )", "obj1": 0.6812749003984063, "obj2": 0.16840896744200037}, {"determining": "( ( Const + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Max( BR,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Max( ( FirstVNF_RAM / MRS ),FirstVNF_Mem ) ) / ( FirstVNF_RAM / ARS ) ) ) ) ) + ( ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * DS ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) / Max( ( ( DS / MUR ) + ( MLU * Max( RRSe,MUM ) ) ),RRSe ) )", "obj1": 0.18725099601593626, "obj2": 0.6817292305118411}, {"determining": "( ( ( ( PN / ( DDR * Max( AMS,( PN - ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + Min( AMS ,( ACS * FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / Min( DS ,RCSe ) )", "obj1": 0.9302788844621513, "obj2": 0.02831642291681773}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + DDR ) + Min( Max( ( FirstVNF_Mem - RRS ),MDR ) ,( RRS + ( ARS + BR ) ) ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( RRSe * MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) - DS ) ) ) / CS )", "obj1": 0.24302788844621515, "obj2": 0.6243754843162641}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( FirstVNF_CPU_Server * DDR ) + Min( ( PN - RRS ) ,( ( FirstVNF_Mem - Min( ( ( PN * ( MRS * FirstVNF_RAM ) ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( ( ( RRSe / ( MUM + ( Min( MUM ,MUC ) / RCSe ) ) ) - RRSe ) - Max( RRSe,( ( MLU - CS ) * Min( Min( Max( RCSe,MLU ) ,( CS + MLU ) ) ,RRSe ) ) ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( RRSe ,MUC ) / RCSe ) ) ) + ( CS - MLU ) ) * ( ( Min( ( ( MLU / CS ) / DS ) ,( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7430278884462151, "obj2": 0.11896654040334317}, {"determining": "( Max( Max( BR,Min( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MRS * ( Max( DDR,BR ) + ( MRS / MRS ) ) ) ) ,FirstVNF_CPU ) ),CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe - ( ( RMSe / ( RRSe * RRSe ) ) * Min( ( MLU / CS ) ,( ( DS + ( RRSe * ( RCSe / RRSe ) ) ) / Max( MUC,Min( MLU ,( MUC + MUM ) ) ) ) ) ) ) / CS )", "obj1": 0.17928286852589642, "obj2": 0.6911326379223992}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( ( PN * FirstVNF_Mem_Server ) - ARS ) ),FirstVNF_Mem ) + Min( Max( ( ACS + FirstVNF_CPU_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - ( FirstVNF_RAM_Server - MRS ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( MLU,( DS / RCSe ) ) ) ) ) )", "obj1": 0.8784860557768924, "obj2": 0.04590331667221741}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( ( CRS + PN ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_RAM_Server / PN ) * ( FirstVNF_RAM_Server + ( Min( ( Min( PN ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( FirstVNF_RAM + RRS ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( Min( Min( MUR ,Max( Min( ( DS + RRSe ) ,MUM ),( Min( RRSe ,CS ) / ( MUR / MUM ) ) ) ) ,( Max( ( DS * ( RRSe + MUR ) ),MLU ) * DS ) ) * RMSe ) ) / CS )", "obj1": 0.2350597609561753, "obj2": 0.6317305091334139}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) + ( ( Const + ( FirstVNF_Mem - Min( ( ( MDR / ( MDR * FirstVNF_CPU ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) - BR ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),( Max( MLU,MUM ) * ( ( ( ( MLU + RMSe ) * CS ) - RRSe ) + Max( ( MUR * MUC ),MUC ) ) ) ) + ( ( CS * ( RCSe * Min( RMSe ,MLU ) ) ) * ( ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) * RMSe ) ) + ( MLU - CS ) ) * ( ( ( ( ( MLU / CS ) / Max( MUM,MLU ) ) * ( MUR * MLU ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2878936053541786}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.651394422310757, "obj2": 0.1830725582909572}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "Min( Min( ( Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) - ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.48406374501992033, "obj2": 0.32057704091721567}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( FirstVNF_CPU * ( ACS / AMS ) ) / ( CRS * ( ( DDR / BR ) - BR ) ) )", "choosing": "( Max( CS,( MUR - ( RMSe - CS ) ) ) / RCSe )", "obj1": 0.19721115537848605, "obj2": 0.6743618390841017}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( MRS + Max( ACS,ARS ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( Const,( Const * Min( AMS ,BR ) ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( ( RRSe * MUR ),MUC ) - MUC ) ) ) * ( ( ( ( DS / ( MUM / MLU ) ) * ( MUR - Max( DS,CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.3844621513944223, "obj2": 0.4239294888737787}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) * ( ( RRS / ( PN + RRS ) ) / FirstVNF_Mem ) ) ) - DDR ) - ( RRS * ACS ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Max( ( MUR / Max( ( DS / RCSe ),MUC ) ),( MUC * MUC ) ) * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( Max( ( MLU * CS ),MLU ),( ( MLU + CS ) * ( RRSe / MUC ) ) ) ) ) ) ,( RCSe / RRSe ) ) )", "obj1": 0.6274900398406374, "obj2": 0.20510978283282133}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_CPU_Server + ACS ) - ARS ) * ( FirstVNF_Mem + ( FirstVNF_Mem - Min( ( ( MDR / ( FirstVNF_RAM_Server * ACS ) ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( DS / ( CS - MUC ) ) ,DS ) / ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( MUM / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.250996015936255, "obj2": 0.6010140598044112}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( MUM - MUM ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.39243027888446214, "obj2": 0.41708472448695266}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( MUM / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( CS / DS ) ) * ( ( MUR - MUC ) / RRSe ) ) / MUM ) / DS ) * ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2804369725058234}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ),( ARS - DDR ) ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Max( ( MUC * MUC ),( MUR / Max( ( DS / RCSe ),MUC ) ) ) * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * ( RRSe / MUC ) ) ) ) ) ) ,MUC ) )", "obj1": 0.6394422310756972, "obj2": 0.19684885170993982}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6613545816733067, "obj2": 0.1750612297436392}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) * BR ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( MRS * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) - Min( ( ( FirstVNF_CPU - ( MDR / ACS ) ) - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,RCSe ) + RRSe ) / DS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( CS + MUM ) ) - RRSe ) - Max( RRSe,( DS * Min( RMSe ,RRSe ) ) ) ) ) ) ,( ( ( ( RCSe / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9143426294820717, "obj2": 0.035432577303490184}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( ( ( Min( ( MRS / ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_CPU_Server ,Min( ARS ,Max( AMS,FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( BR,Min( ( ( ARS * DDR ) * AMS ) ,MRS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Max( CRS,BR ) )", "choosing": "( ( MUR / Min( MUR ,MUR ) ) + Min( ( CS * Min( RMSe ,( MUR * ( RMSe + MLU ) ) ) ) ,( MUC - ( CS + ( MUR * Min( ( MUR * Max( MLU,DS ) ) ,Max( RMSe,( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.03864135116696866}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,Max( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ),RRSe ) ) )", "obj1": 0.6195219123505976, "obj2": 0.21135410048498832}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( BR / FirstVNF_Mem ) + Min( Min( ( BR + ( RRS * FirstVNF_Mem_Server ) ) ,PN ) ,( ( ARS + BR ) + CRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU / AMS ) + ( MRS + Const ) ) ) ) )", "choosing": "( ( RRSe * Min( RRSe ,RCSe ) ) / Min( ( MUC * RCSe ) ,( Max( ( MUM * MLU ),CS ) + Min( ( Max( ( DS / CS ),MLU ) / ( MUM + RMSe ) ) ,( RMSe + ( CS / Min( CS ,CS ) ) ) ) ) ) )", "obj1": 0.5577689243027888, "obj2": 0.260646226597249}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( MLU - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5318725099601593, "obj2": 0.2778706649420956}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( Max( ( MUM + DS ),CS ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.7788844621513944, "obj2": 0.09117605346536078}, {"determining": "( ( Max( Min( ( ARS + ( Min( FirstVNF_RAM ,( CRS * DDR ) ) * RRS ) ) ,MDR ),BR ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * Min( MUC ,DS ) ) ) / Max( ( DS / MUM ),Min( CS ,( ( CS / Max( MUR,Max( MLU,( MUC * RCSe ) ) ) ) * Min( MUC ,( Min( MUC ,Min( MUM ,CS ) ) * ( RMSe - MLU ) ) ) ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7653000680829934}, {"determining": "( ( ( MDR / PN ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / ( ARS / FirstVNF_Mem_Server ) ) - MRS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) - ( DS / ( CS / MLU ) ) ) * ( ( ( CS * ( MUM - ( RMSe * RCSe ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3565737051792829, "obj2": 0.45454154870021224}, {"determining": "( ( ( ( Max( Min( ( ARS + ( MRS * PN ) ) ,MDR ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,FirstVNF_RAM_Server ) ) ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - AMS ) ) / DDR ) ) - ( ( ( MDR / PN ) - DDR ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8466135458167331, "obj2": 0.05830707714983348}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( ( FirstVNF_RAM / DDR ) + BR ) + RRS ) ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( RMSe + MUR ) * MUC ) * Min( MUC ,( MLU + ( RMSe / RMSe ) ) ) ) ) ,( ( DS / ( ( MUC + MUM ) / MLU ) ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( DS,RCSe ) + CS ) ) ) ) ) )", "obj1": 0.9701195219123506, "obj2": 0.011217221693966413}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( DDR,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Max( AMS,( DDR - ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( DS,MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( RRSe * DS ) - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5, "obj2": 0.30350555819035674}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / FirstVNF_Mem_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Max( RCSe,( MUM + CS ) ) ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( DS * MUR ) * CS ) ,DS ) )", "obj1": 0.29282868525896416, "obj2": 0.5633509178900145}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( MRS / PN ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( Max( CRS,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( DS / ( CS / MLU ) ) / Min( RMSe ,Min( RRSe ,RRSe ) ) ) * ( RRSe + DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.22560665249182546}, {"determining": "( ( ACS / ( FirstVNF_CPU_Server + Max( RRS,PN ) ) ) + ( ( ( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( AMS / ACS ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / Max( BR,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_CPU_Server / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( RMSe + ( ( DS + RMSe ) + Min( CS ,CS ) ) ) - MUM ) / ( ( ( Min( ( ( ( MUR / MUC ) + ( MUR + MUC ) ) * RRSe ) ,MLU ) * Min( Min( Max( MLU,MUM ) ,Max( CS,( MUM - MUM ) ) ) ,( Min( CS ,( RMSe - MUR ) ) + Min( RRSe ,( RRSe * RRSe ) ) ) ) ) - MUM ) + MUM ) )", "obj1": 0.750996015936255, "obj2": 0.10446855590232887}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( ( Max( MUC,RCSe ) + MUM ) * ( ( ( DS / Max( RCSe,RCSe ) ) + Min( MUC ,MLU ) ) / MUM ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( ( MUC / ( CS / MLU ) ),( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( MUM + MUC ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8167330677290837, "obj2": 0.06932213175525313}, {"determining": "( ( ( FirstVNF_CPU + BR ) - ( Max( ( ARS - DDR ),AMS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( CRS * ACS ) ) )", "choosing": "( ( Min( RCSe ,Min( Max( MUM,RMSe ) ,CS ) ) / RRSe ) + Min( ( RCSe * ( ( DS / MUR ) * ( ( ( RRSe / ( RMSe + DS ) ) - RRSe ) - Max( RRSe,( Min( MUC ,CS ) * ( MLU + CS ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.1514766892353996}, {"determining": "( ( Max( AMS,( DDR - ARS ) ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ACS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( PN - MDR ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( RMSe - RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MLU ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.350597609561753, "obj2": 0.45846914452685195}, {"determining": "( ( ( ( Max( Min( ( ARS + ( MRS * PN ) ) ,MDR ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( FirstVNF_RAM / FirstVNF_RAM_Server ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - ( ( ( MDR / PN ) - DDR ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MLU / CS ) * ( RRSe / RRSe ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) * ( DS / ( CS / MLU ) ) ) * ( Max( MUC,RMSe ) / DS ) ) ) - MUC )", "obj1": 0.850597609561753, "obj2": 0.05645780579543709}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( DDR + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( BR ,BR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) + ( FirstVNF_RAM_Server + ( BR + ( ( ( ( FirstVNF_Mem_Server - PN ) / PN ) - FirstVNF_CPU ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS - MLU ) / CS )", "obj1": 0.7450199203187251, "obj2": 0.11245176865923623}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) + Min( ( Max( AMS,( ( FirstVNF_RAM_Server + ARS ) - ( FirstVNF_CPU - RRS ) ) ) / Min( PN ,FirstVNF_Mem ) ) ,( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU - CS ) * Min( MUC ,RRSe ) ) ) ),MUM ) + Min( ( CS * ( RCSe * ( RMSe - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.09902568196969988}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( AMS * FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem * Min( ( ( FirstVNF_RAM - PN ) - ( MDR / PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( ( ( MLU / CS ) * RCSe ) + RCSe ) * MUC ) * Min( MUC ,( MUM + Min( MUR ,DS ) ) ) ) ) ,( ( CS * RCSe ) - ( Min( CS ,Min( ( MUR * RMSe ) ,MUC ) ) * ( CS * Max( Min( DS ,MLU ),( Max( DS,( CS - MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.15513931977158193}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,PN ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS ) / CS )", "obj1": 0.17330677290836655, "obj2": 0.7012972613864342}, {"determining": "( ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) * BR ) ,FirstVNF_CPU ) ) ) ) - ( Max( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ),( ARS - DDR ) ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Max( ( MUC * MUC ),( MUR / Max( ( DS / RCSe ),MUC ) ) ) * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * ( RCSe / MUC ) ) ) ) ) ) ,MUC ) )", "obj1": 0.6055776892430279, "obj2": 0.22308180359445487}, {"determining": "( ( ( ( PN / ( FirstVNF_RAM * Min( Min( Max( AMS,BR ) ,( PN / FirstVNF_Mem_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RMSe * ( ( ( DS / ( CS / ( Max( RMSe,MUC ) * ( RMSe + RMSe ) ) ) ) / Min( MUC ,Min( RRSe ,RRSe ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * MUC ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) )", "obj1": 0.30278884462151395, "obj2": 0.5491111847894907}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) + Min( ( Max( AMS,( ARS - ( FirstVNF_CPU - Min( ( PN / MRS ) ,Max( AMS,BR ) ) ) ) ) / Min( PN ,FirstVNF_Mem ) ) ,( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( ( ( Max( ( MUM + DS ),CS ) * ( MLU / RRSe ) ) / MUR ) / DS ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.1421172290217698}, {"determining": "( ( BR * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( ( ARS + ( PN * CRS ) ) / BR ) + ( Const + BR ) ) ) ) )", "choosing": "Min( Min( ( Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) - ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5722478418860395}, {"determining": "( ( PN + ACS ) + ( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - ARS ) + ( Const - Const ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe / ( ( ( Min( ( MUR - MUC ) ,MUC ) - ( RMSe / ( RMSe / RRSe ) ) ) + MUM ) - ( ( CS / CS ) * ( MLU - CS ) ) ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5802981787192035}, {"determining": "( Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.25257039892930516}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( MUM - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( Min( MUM ,MUC ) / RCSe ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.8147410358565738, "obj2": 0.06988967550774408}, {"determining": "( ( ( Max( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ),( ARS - DDR ) ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) - ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) ) + ( ( RRS - ( FirstVNF_CPU_Server + AMS ) ) + MRS ) )", "choosing": "( Max( ( Max( ( MUC * MUC ),( MUR / Max( ( DS / RCSe ),MUC ) ) ) * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( ( ( CS - MUM ) / DS ) * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RRSe / MUC ) * ( RRSe + CS ) ) ) ) ) ) ,MUC ) )", "obj1": 0.6374501992031872, "obj2": 0.19801540005071944}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( ( MDR / PN ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( ( FirstVNF_RAM / DDR ) + BR ) + RRS ) ) ) ) ) + ( MDR + FirstVNF_RAM ) )", "choosing": "( ( Max( Max( ( MUR + ( ( MUC / CS ) * ( RMSe + ( RMSe + MUM ) ) ) ),MUC ),Max( RRSe,Min( MUM ,RCSe ) ) ) * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( ( MUC + MUM ) / MLU ) ) ) * ( ( ( CS * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9422310756972112, "obj2": 0.027836719197465606}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.6852589641434262, "obj2": 0.1618025954746454}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( Max( BR,ACS ) + ( MRS + MRS ) ) ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,PN ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / MUR ) ) / MUM ) / DS ) ) ) / CS ) / CS )", "obj1": 0.17131474103585656, "obj2": 0.704691570968045}, {"determining": "( Min( FirstVNF_RAM_Server ,CRS ) + ( Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( PN / Max( PN,AMS ) ) ) * ( ( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ARS ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( MUC / ( CS / MLU ) ) ) * ( ( MUR * CS ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03842368450379492}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.2375743047217593}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( MRS / PN ) ,Max( FirstVNF_CPU_Server,BR ) ) ,FirstVNF_CPU_Server ) ) ) + DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - DDR ) ) ,( ACS + ( BR / MRS ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( MLU / CS ) ) ) * ( ( ( ( DS / ( RRSe / CS ) ) * ( ( MUC + RCSe ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RRSe ,RMSe ) )", "obj1": 0.6095617529880478, "obj2": 0.21420852552988665}, {"determining": "( Min( AMS ,( FirstVNF_Mem / BR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - Min( ( ( MDR - PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( MUM - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,Min( Min( DS ,MUC ) ,RCSe ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04429856053182414}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) * ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( BR,AMS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) - ARS ) ) / ( FirstVNF_RAM_Server / ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( Max( ( PN * ( FirstVNF_Mem * AMS ) ),MRS ) + ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - ( ( Min( MLU ,RRSe ) - MUC ) + MUM ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) + ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / CS ) ) / MUM ) / DS ) ) ) + ( ( DS * ( ( MUC + MUR ) / MUC ) ) / ( Max( MUC,RRSe ) * ( MLU / RRSe ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.30968574937119236}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,Min( ARS ,( ACS + FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( AMS,( ( ( FirstVNF_Mem_Server - PN ) / PN ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( AMS / ACS ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Max( ( DS - MLU ),( MUM + CS ) ) ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( DS * MUR ) * CS ) ,DS ) )", "obj1": 0.9601593625498008, "obj2": 0.01506199253273716}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC - MUC ),( ( RRSe / ( MUM + MUC ) ) - RRSe ) ) + Min( ( CS * Min( ( Min( ( MUC * MUC ) ,( MLU - CS ) ) + ( RCSe * RCSe ) ) ,( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) * ( ( ( RRSe / ( ( RMSe + MUC ) - ( RMSe * RMSe ) ) ) * ( DS / ( MLU / CS ) ) ) / MUM ) ) ) )", "obj1": 0.5916334661354582, "obj2": 0.23305573349015532}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Max( AMS,( DDR - ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( RRSe * DS ) - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5756972111553785, "obj2": 0.24260838146937297}, {"determining": "( ( ( ( PN / AMS ) - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( ( MLU / RRSe ) * Max( ( MUM + DS ),CS ) ) / MUR ) / DS ) ) ) + Max( MUC,( Min( RRSe ,( MUM + MLU ) ) * MUC ) ) )", "obj1": 0.4900398406374502, "obj2": 0.31056407020399246}], "41": [{"determining": "( ( ( DDR - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( RRSe * DS ) - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( AMS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( MDR - ACS ) + ( Min( CRS ,BR ) - PN ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - MDR ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( RCSe,RCSe ) + RRSe ) / DS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( CS + MUM ) ) - RRSe ) - Max( RRSe,( DS * Min( RMSe ,RRSe ) ) ) ) ) ) ,( ( ( ( RCSe / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,Min( ACS ,( ( ARS / FirstVNF_RAM ) * AMS ) ) ),( ( ( FirstVNF_RAM_Server + BR ) / FirstVNF_RAM_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( CS - CS ) / MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( ( MUM - DS ) - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.372518915128707}, {"determining": "( Max( MRS,FirstVNF_Mem ) + ( FirstVNF_RAM * MRS ) )", "choosing": "( Min( ( RRSe - ( ( ( DS - ( ( CS + MLU ) - DS ) ) + MUR ) + RCSe ) ) ,RMSe ) / Max( RRSe,( DS - ( CS / ( ( ( RCSe - MUM ) * DS ) + CS ) ) ) ) )", "obj1": 0.40836653386454186, "obj2": 0.4020978553664453}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( DDR ,Min( ACS ,FirstVNF_Mem ) ) + Min( Const ,CRS ) ) + Min( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - ( Const * DDR ) ),MDR ) ,Max( ( FirstVNF_CPU_Server + BR ),RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM / AMS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / Max( MUR,CS ) ) ) * ( DS * ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ) ) * ( ( ( ( RRSe - Min( RRSe ,( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( ( MLU * MUM ),( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.3286852589641434, "obj2": 0.4896307554923697}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_CPU_Server / DDR ) ) ) )", "choosing": "( Min( RCSe ,MUR ) / ( RRSe * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( Max( MUM,MUC ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.34860557768924305, "obj2": 0.46936983025542023}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ACS + Min( CRS ,FirstVNF_Mem_Server ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( DDR * ( CRS + Const ) ) ) ) ) ) )", "choosing": "( Max( ( Max( MLU,Max( ( ( Max( CS,CS ) - RRSe ) / RCSe ),MUM ) ) * ( ( ( ( MUR * Max( MUR,MUC ) ) - CS ) / ( MUC + Max( ( MUR * MUC ),( DS + MUR ) ) ) ) / MUC ) ),CS ) / Min( RCSe ,DS ) )", "obj1": 0.3047808764940239, "obj2": 0.5219919476147454}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( MUC - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.137489020485943}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( ( FirstVNF_CPU + BR ) - ( Max( ( ARS - DDR ),AMS ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( CRS * ACS ) ) )", "choosing": "( ( Min( RCSe ,Min( Max( MUM,RMSe ) ,CS ) ) / RRSe ) + Min( ( RCSe * ( ( DS / MUR ) * ( ( ( RRSe / ( RMSe + DS ) ) - RRSe ) - Max( RRSe,( Min( MUC ,CS ) * ( MLU + CS ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.1514766892353996}, {"determining": "( ( ( Min( MDR ,( ( AMS * RRS ) + Const ) ) / BR ) * Max( ( ( ARS + ( ( ( ARS / MDR ) * BR ) * PN ) ) + FirstVNF_CPU_Server ),BR ) ) / ( FirstVNF_CPU * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MLU + CS ) ,( ( RMSe * ( RRSe * DS ) ) * ( Min( MUC ,RRSe ) / DS ) ) ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7774916413894789}, {"determining": "( ( FirstVNF_CPU + ( PN * Min( MRS ,MRS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ,( ( CRS / MRS ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MUM ) / MUM ) / DS ) ) ) / ( RCSe - DS ) )", "obj1": 0.3745019920318725, "obj2": 0.43051097106600705}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUC * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.30278884462151395, "obj2": 0.5482340569290955}, {"determining": "( ( ACS / ACS ) + ( ( ( ARS / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) / Min( FirstVNF_CPU ,Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( ( CS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( MUC,MLU ) - ( ( RCSe * RCSe ) + DS ) ) ) ) * ( ( ( ( DS / ( MUC / DS ) ) * ( MUR - ( RCSe * CS ) ) ) / RCSe ) / ( MUM - MUC ) ) ) ) / Max( RCSe,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6531633830271687}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( PN - ( Const * MRS ) ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,( RMSe + ( ( RCSe / Min( CS ,Min( Min( RCSe ,RMSe ) ,Min( MUC ,MUM ) ) ) ) * CS ) ) ) / CS )", "obj1": 0.22310756972111553, "obj2": 0.6383559113136551}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( ( ( ( Max( BR,BR ) + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( Max( FirstVNF_Mem_Server,MRS ) + BR ) * RRS ) ) ) / FirstVNF_Mem_Server ) * Max( MDR,PN ) ) + ( MDR + FirstVNF_RAM ) )", "choosing": "( ( RRSe + Min( RCSe ,( ( Min( ( ( MLU + RMSe ) + MLU ) ,( RRSe - MUC ) ) - ( ( MUC + ( RRSe - MUR ) ) / RCSe ) ) + RRSe ) ) ) / Min( DS ,DS ) )", "obj1": 0.3645418326693227, "obj2": 0.4475354834098479}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ( ( ( MDR / PN ) - ( MRS - FirstVNF_RAM_Server ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( Max( DS,Max( CS,DS ) ) + RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( ( ( ( MLU + RCSe ) * RMSe ) * DS ),( DS / RCSe ) ) ) ) ) )", "obj1": 0.44223107569721115, "obj2": 0.36495586478386455}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "Min( Min( ( Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) - ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.48406374501992033, "obj2": 0.32057704091721567}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( ( RRS * ACS ) + ( ( RRS - Max( ACS,ACS ) ) / ARS ) ) + Min( ( AMS - BR ) ,Min( ( FirstVNF_RAM_Server + PN ) ,FirstVNF_Mem ) ) )", "choosing": "( ( RRSe * ( ( Max( MLU,RCSe ) / ( DS * ( MUR + DS ) ) ) * Max( ( MLU - DS ),( MUC * RRSe ) ) ) ) / ( Max( CS,CS ) + MUC ) )", "obj1": 0.20119521912350596, "obj2": 0.6598572221261775}, {"determining": "( ( FirstVNF_CPU * ( ACS / AMS ) ) / ( CRS * ( ( DDR / BR ) - BR ) ) )", "choosing": "( Max( CS,( MUR - ( RMSe - CS ) ) ) / RCSe )", "obj1": 0.19721115537848605, "obj2": 0.6743618390841017}, {"determining": "( ( DDR + ACS ) + ( ( Const - Const ) + ( ( ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_RAM ) ) - ( FirstVNF_Mem + BR ) ) - ARS ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe + ( ( ( Max( ( ( MUR - MUC ) / Min( DS ,DS ) ),( ( MUC + CS ) / ( MUM / MUC ) ) ) * ( CS * Min( DS ,( RRSe / RMSe ) ) ) ) + CS ) - Max( RMSe,CS ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.5949752471025966}, {"determining": "( ( Const + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Max( BR,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Max( ( FirstVNF_RAM / MRS ),FirstVNF_Mem ) ) / ( FirstVNF_RAM / ARS ) ) ) ) ) + ( ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * DS ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) / Max( ( ( DS / MUR ) + ( MLU * Max( RRSe,MUM ) ) ),RRSe ) )", "obj1": 0.18725099601593626, "obj2": 0.6817292305118411}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + DDR ) + Min( Max( ( FirstVNF_Mem - RRS ),MDR ) ,( RRS + ( ARS + BR ) ) ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( RRSe * MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) - DS ) ) ) / CS )", "obj1": 0.24302788844621515, "obj2": 0.6243754843162641}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( Max( Max( BR,Min( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MRS * ( Max( DDR,BR ) + ( MRS / MRS ) ) ) ) ,FirstVNF_CPU ) ),CRS ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe - ( ( RMSe / ( RRSe * RRSe ) ) * Min( ( MLU / CS ) ,( ( DS + ( RRSe * ( RCSe / RRSe ) ) ) / Max( MUC,Min( MLU ,( MUC + MUM ) ) ) ) ) ) ) / CS )", "obj1": 0.17928286852589642, "obj2": 0.6911326379223992}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU ) - ( ( CRS + PN ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_RAM_Server / PN ) * ( FirstVNF_RAM_Server + ( Min( ( Min( PN ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( FirstVNF_RAM + RRS ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( Min( Min( MUR ,Max( Min( ( DS + RRSe ) ,MUM ),( Min( RRSe ,CS ) / ( MUR / MUM ) ) ) ) ,( Max( ( DS * ( RRSe + MUR ) ),MLU ) * DS ) ) * RMSe ) ) / CS )", "obj1": 0.2350597609561753, "obj2": 0.6317305091334139}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) + ( ( Const + ( FirstVNF_Mem - Min( ( ( MDR / ( MDR * FirstVNF_CPU ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) - BR ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),( Max( MLU,MUM ) * ( ( ( ( MLU + RMSe ) * CS ) - RRSe ) + Max( ( MUR * MUC ),MUC ) ) ) ) + ( ( CS * ( RCSe * Min( RMSe ,MLU ) ) ) * ( ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) * RMSe ) ) + ( MLU - CS ) ) * ( ( ( ( ( MLU / CS ) / Max( MUM,MLU ) ) * ( MUR * MLU ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2878936053541786}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.651394422310757, "obj2": 0.1830725582909572}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6613545816733067, "obj2": 0.1750612297436392}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( MRS + Max( ACS,ARS ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( Const,( Const * Min( AMS ,BR ) ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( ( RRSe * MUR ),MUC ) - MUC ) ) ) * ( ( ( ( DS / ( MUM / MLU ) ) * ( MUR - Max( DS,CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.3844621513944223, "obj2": 0.4239294888737787}, {"determining": "( ( ( ( ARS - BR ) / ARS ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - Min( FirstVNF_RAM ,PN ) ) ,( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) * ( DS / ( CS / MLU ) ) ) * ( DS / ( MUM + ( RMSe * RCSe ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6314741035856574, "obj2": 0.19457047529574636}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ),( ARS - DDR ) ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Max( ( MUC * MUC ),( MUR / Max( ( DS / RCSe ),MUC ) ) ) * ( ( RMSe + Max( MLU,( DS / RCSe ) ) ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * ( RRSe / MUC ) ) ) ) ) ) ,MUC ) )", "obj1": 0.6454183266932271, "obj2": 0.19174553473474112}, {"determining": "( ( Max( ( DDR - ARS ),MRS ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + ( FirstVNF_RAM + CRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( RRSe,( RRSe - RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.39641434262948205, "obj2": 0.4059650228821945}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_RAM_Server / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( Max( FirstVNF_CPU_Server,( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( MRS - ( PN + MDR ) ) ) ) + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( ( ( DS * DS ) + ( RCSe * MUM ) ) ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / RCSe ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.250996015936255, "obj2": 0.598958213286061}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ( MDR + DDR ) / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( ( ( RMSe - MUC ) * ( RCSe - MUC ) ) ,Min( RRSe ,MLU ) ) + MUR ) ) + ( ( MUC * Min( MUR ,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7888446215139442, "obj2": 0.0799722566865026}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server * ACS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,Min( ( ( RCSe * DS ) - Min( MUM ,Min( RMSe ,MUC ) ) ) ,RCSe ) ) - MUC ) / ( RMSe + RMSe ) ) / CS )", "obj1": 0.8326693227091634, "obj2": 0.06369272110000138}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( MUM - MUM ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.39243027888446214, "obj2": 0.41708472448695266}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) / ( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUM * MUM ) / ( RCSe - ( MUM + DS ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( Min( RMSe ,MUC ) * MUR ) ) / MUM ) / RCSe ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3247011952191235, "obj2": 0.4997692936811018}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( MUM / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( CS / DS ) ) * ( ( MUR - MUC ) / RRSe ) ) / MUM ) / DS ) * ( Max( MUR,( RRSe - MUM ) ) + ( MLU - CS ) ) ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2804369725058234}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) * ( ( RRS / ( PN + RRS ) ) / FirstVNF_Mem ) ) ) - DDR ) - ( RRS * ACS ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Max( ( MUR / Max( ( DS / RCSe ),MUC ) ),( MUC * MUC ) ) * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( Max( ( MLU * CS ),MLU ),( ( MLU + CS ) * ( RRSe / MUC ) ) ) ) ) ) ,( RCSe / RRSe ) ) )", "obj1": 0.6274900398406374, "obj2": 0.20510978283282133}, {"determining": "( ( PN + ACS ) + ( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - ARS ) + ( Const - Const ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe / ( ( ( Min( ( MUR - MUC ) ,MUC ) - ( RMSe / ( RMSe / RRSe ) ) ) + MUM ) - ( ( CS / CS ) * ( MLU - CS ) ) ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5802981787192035}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( BR * ( ( Min( AMS ,( FirstVNF_CPU / RRS ) ) * BR ) / FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( ( ARS + ( PN * CRS ) ) / BR ) + ( Const + BR ) ) ) ) )", "choosing": "Min( Min( ( Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) - ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5722478418860395}, {"determining": "( ( ( ( Min( ( MRS / ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_CPU_Server ,Min( ARS ,Max( AMS,FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( BR,Min( ( ( ARS * DDR ) * AMS ) ,MRS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Max( CRS,BR ) )", "choosing": "( ( MUR / Min( MUR ,MUR ) ) + Min( ( CS * Min( RMSe ,( MUR * ( RMSe + MLU ) ) ) ) ,( MUC - ( CS + ( MUR * Min( ( MUR * Max( MLU,DS ) ) ,Max( RMSe,( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.03864135116696866}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.31274900398406374, "obj2": 0.5116533615024161}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,Max( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ),RRSe ) ) )", "obj1": 0.6195219123505976, "obj2": 0.21135410048498832}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( ( RRS - PN ) - ( Max( AMS,Max( DDR,ARS ) ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / Min( PN ,DDR ) ) - ARS ) ,( ( ( Const * FirstVNF_CPU_Server ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe + ( RMSe - ( ( Max( MLU,MUM ) * Max( RRSe,DS ) ) + DS ) ) ) + Max( MUC,( MUC * MUR ) ) )", "obj1": 0.4601593625498008, "obj2": 0.3434644245378344}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ARS - ACS ) ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( ( CS + DS ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8645418326693227, "obj2": 0.052803775780852796}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( BR / FirstVNF_Mem ) + Min( Min( ( BR + ( RRS * FirstVNF_Mem_Server ) ) ,PN ) ,( ( ARS + BR ) + CRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU / AMS ) + ( MRS + Const ) ) ) ) )", "choosing": "( ( RRSe * Min( RRSe ,RCSe ) ) / Min( ( MUC * RCSe ) ,( Max( ( MUM * MLU ),CS ) + Min( ( Max( ( DS / CS ),MLU ) / ( MUM + RMSe ) ) ,( RMSe + ( CS / Min( CS ,CS ) ) ) ) ) ) )", "obj1": 0.5577689243027888, "obj2": 0.260646226597249}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_RAM_Server * ARS ) / ( FirstVNF_Mem + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Max( ACS,ARS ) / Max( MRS,( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ACS ) ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( Max( DDR,ACS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / Min( MUR ,( RCSe * RMSe ) ) ) ) ) * RRSe ) ,( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( MUM,DS ) )", "obj1": 0.6752988047808764, "obj2": 0.1745465813257234}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( MLU - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5318725099601593, "obj2": 0.2778706649420956}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / ( DS / ( MLU / CS ) ) ) ) / ( DS / ( CS / ( MUM - MUM ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7350597609561753, "obj2": 0.12047835287344795}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( ( Min( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ,MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( BR / ARS ) ) ) * ( ( ARS + FirstVNF_Mem ) / FirstVNF_CPU ) ) )", "choosing": "( ( MLU - ( Max( RMSe,Max( DS,MLU ) ) - Max( RCSe,CS ) ) ) / Min( RRSe ,MUC ) )", "obj1": 0.29880478087649404, "obj2": 0.5582882106627514}, {"determining": "( ( ( ( PN / ( DDR * Max( AMS,( DDR - ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ARS ) * Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( PN / Max( PN,AMS ) ) ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUR ) ,MLU ),Min( ( MLU * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.006800292137752411}, {"determining": "( ( Max( Min( ( ARS + ( Min( FirstVNF_RAM ,( CRS * DDR ) ) * RRS ) ) ,MDR ),BR ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * Min( MUC ,DS ) ) ) / Max( ( DS / MUM ),Min( CS ,( ( CS / Max( MUR,Max( MLU,( MUC * RCSe ) ) ) ) * Min( MUC ,( Min( MUC ,Min( MUM ,CS ) ) * ( RMSe - MLU ) ) ) ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7653000680829934}, {"determining": "( ( ( MDR / PN ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / ( ARS / FirstVNF_Mem_Server ) ) - MRS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) - ( DS / ( CS / MLU ) ) ) * ( ( ( CS * ( MUM - ( RMSe * RCSe ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3565737051792829, "obj2": 0.45454154870021224}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( DDR,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Max( AMS,( DDR - ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( DS,MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( RRSe * DS ) - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5, "obj2": 0.30350555819035674}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / FirstVNF_Mem_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Max( RCSe,( MUM + CS ) ) ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( DS * MUR ) * CS ) ,DS ) )", "obj1": 0.29282868525896416, "obj2": 0.5633509178900145}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC - MUC ),( ( RRSe / ( MUM + MUC ) ) - RRSe ) ) + Min( ( CS * Min( ( Min( ( MUC * MUC ) ,( MLU - CS ) ) + ( RCSe * RCSe ) ) ,( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) * ( ( ( RRSe / ( ( RMSe + MUC ) - ( RMSe * RMSe ) ) ) * ( DS / ( MLU / CS ) ) ) / MUM ) ) ) )", "obj1": 0.5916334661354582, "obj2": 0.23305573349015532}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( Max( ARS,BR ) + RRS ) ) ) ) ) + ( Const + MDR ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( MUR,MUC ) / MLU ) ) ) * Max( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ),DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3147410358565737, "obj2": 0.5052483169394184}, {"determining": "( ( Max( Min( ( FirstVNF_Mem_Server - ( MRS * PN ) ) ,MDR ),( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_RAM_Server ) / Max( Const,( ACS * AMS ) ) ) ) * CRS ) / ( FirstVNF_Mem + ARS ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( DS,( ( DS - MUR ) + Max( CS,CS ) ) ) * MUM ) / DS ) ) ) / CS )", "obj1": 0.11155378486055777, "obj2": 0.8079860046179493}, {"determining": "( ( Max( AMS,( DDR - ARS ) ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ACS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( PN - MDR ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( RMSe - RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MLU ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.350597609561753, "obj2": 0.45846914452685195}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server * Min( ARS ,FirstVNF_RAM_Server ) ) + ( RRS / ACS ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ),RRSe ) ,( MUR + RRSe ) )", "obj1": 0.6812749003984063, "obj2": 0.16840896744200037}, {"determining": "( ( ( ( PN / AMS ) - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( ( MLU / RRSe ) * Max( ( MUM + DS ),CS ) ) / MUR ) / DS ) ) ) + Max( MUC,( Min( RRSe ,( MUM + MLU ) ) * MUC ) ) )", "obj1": 0.4900398406374502, "obj2": 0.31056407020399246}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( DDR + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( BR ,BR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) + ( FirstVNF_RAM_Server + ( BR + ( ( ( ( FirstVNF_Mem_Server - PN ) / PN ) - FirstVNF_CPU ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS - MLU ) / CS )", "obj1": 0.7450199203187251, "obj2": 0.11245176865923623}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( MRS / PN ) ,Max( FirstVNF_CPU_Server,BR ) ) ,FirstVNF_CPU_Server ) ) ) + DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - DDR ) ) ,( ACS + ( BR / MRS ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( MLU / CS ) ) ) * ( ( ( ( DS / ( RRSe / CS ) ) * ( ( MUC + RCSe ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RRSe ,RMSe ) )", "obj1": 0.6095617529880478, "obj2": 0.21420852552988665}, {"determining": "( ( ( ( PN / ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( AMS * FirstVNF_CPU ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem * Min( ( ( FirstVNF_RAM - PN ) - ( MDR / PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( CS * ( ( ( ( ( MLU / CS ) * RCSe ) + RCSe ) * MUC ) * Min( MUC ,( MUM + Min( MUR ,DS ) ) ) ) ) ,( ( CS * RCSe ) - ( Min( CS ,Min( ( MUR * RMSe ) ,MUC ) ) * ( CS * Max( Min( DS ,MLU ),( Max( DS,( CS - MLU ) ) + CS ) ) ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.15513931977158193}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.2375743047217593}, {"determining": "( ( ( Max( PN,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) - ARS ) + ( ( ( Const + AMS ) / ( ( ( FirstVNF_CPU_Server - Min( Max( ARS,FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) - MDR ) + MDR ) ) * ( FirstVNF_Mem + RRS ) ) )", "choosing": "( ( Min( MUR ,Min( RRSe ,( ( ( MUM + RCSe ) + ( RRSe + DS ) ) / MUR ) ) ) * MUM ) + Min( RRSe ,Max( DS,MUM ) ) )", "obj1": 0.7231075697211156, "obj2": 0.12526447140843247}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,PN ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) / CS ) / CS )", "obj1": 0.17330677290836655, "obj2": 0.7012972613864342}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( DDR,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Max( AMS,( DDR - ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( MUM - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( Min( MUM ,MUC ) / RCSe ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.46613545816733065, "obj2": 0.3424453930687533}, {"determining": "( ( ( FirstVNF_CPU / ( MDR + FirstVNF_RAM_Server ) ) * Min( Min( FirstVNF_CPU ,( DDR + ( Const + ( CRS / MDR ) ) ) ) ,ARS ) ) + ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,Min( ARS ,( ACS + FirstVNF_CPU ) ) ) ) ) - DDR ) - ( ( AMS / ( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "( ( RRSe * ( ( ( DS / ( CS / MLU ) ) / Min( Max( MUM,( MUM + CS ) ) ,Min( RRSe ,RRSe ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / RRSe ) ) ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.8764940239043825, "obj2": 0.05031688838217954}, {"determining": "( Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.25257039892930516}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7191235059760956, "obj2": 0.12677569379160392}, {"determining": "( ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ( MRS + FirstVNF_CPU_Server ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) + Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) * BR ) ,FirstVNF_CPU ) ) ) ) - ( Max( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ),( ARS / DDR ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( ( DS / Max( RMSe,MLU ) ) - ( CS * ( CS * Max( Min( DS ,MLU ),( Max( DS,RCSe ) + CS ) ) ) ) ) ,Max( CS,( ( ( RMSe + MUR ) * MUC ) * Min( MUC ,( MLU + ( RMSe / RMSe ) ) ) ) ) )", "obj1": 0.6075697211155379, "obj2": 0.22202137633818977}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( ( PN * FirstVNF_Mem_Server ) - ARS ) ),FirstVNF_Mem ) + Min( Max( ( ACS + FirstVNF_CPU_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - ( FirstVNF_RAM_Server - MRS ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( MLU,( DS / RCSe ) ) ) ) ) )", "obj1": 0.8784860557768924, "obj2": 0.04590331667221741}, {"determining": "( ( ACS / ( FirstVNF_CPU_Server + Max( RRS,PN ) ) ) + ( ( ( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( AMS / ACS ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / Max( BR,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_CPU_Server / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( RMSe + ( ( DS + RMSe ) + Min( CS ,CS ) ) ) - MUM ) / ( ( ( Min( ( ( ( MUR / MUC ) + ( MUR + MUC ) ) * RRSe ) ,MLU ) * Min( Min( Max( MLU,MUM ) ,Max( CS,( MUM - MUM ) ) ) ,( Min( CS ,( RMSe - MUR ) ) + Min( RRSe ,( RRSe * RRSe ) ) ) ) ) - MUM ) + MUM ) )", "obj1": 0.750996015936255, "obj2": 0.10446855590232887}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.6852589641434262, "obj2": 0.1618025954746454}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ( ACS + FirstVNF_CPU_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( Max( ( MUM + DS ),CS ) * ( MLU / RRSe ) ) / MUR ) / DS ) ) ) + Max( MUC,( MUC * MUC ) ) )", "obj1": 0.7788844621513944, "obj2": 0.09117605346536078}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( Max( BR,ACS ) + ( MRS + MRS ) ) ) ) ,FirstVNF_CPU_Server ),BR ) * CRS ) / ( FirstVNF_CPU * Min( ACS ,PN ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( Min( RCSe ,DS ) * ( RRSe / MUR ) ) / MUM ) / DS ) ) ) / CS ) / CS )", "obj1": 0.17131474103585656, "obj2": 0.704691570968045}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( ( PN * Const ) - ARS ) ),FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( ( MRS / Const ) + FirstVNF_CPU_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) - ( ( ( MDR / PN ) - ( FirstVNF_RAM_Server - MRS ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( RCSe / DS ) - Min( RRSe ,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( MLU,( Max( RMSe,DS ) / RCSe ) ) ) ) ) )", "obj1": 0.8386454183266933, "obj2": 0.06039476947527716}, {"determining": "( Min( FirstVNF_RAM_Server ,CRS ) + ( Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( PN / Max( PN,AMS ) ) ) * ( ( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ARS ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( MUC / ( CS / MLU ) ) ) * ( ( MUR * CS ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03842368450379492}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Max( AMS,( DDR - ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( RRSe * DS ) - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5756972111553785, "obj2": 0.24260838146937297}, {"determining": "( ( FirstVNF_CPU_Server * DDR ) + Min( ( PN - RRS ) ,( ( FirstVNF_Mem - Min( ( ( PN * ( MRS * FirstVNF_RAM ) ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( ( ( RRSe / ( MUM + ( Min( MUM ,MUC ) / RCSe ) ) ) - RRSe ) - Max( RRSe,( ( MLU - CS ) * Min( Min( Max( RCSe,MLU ) ,( CS + MLU ) ) ,RRSe ) ) ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( RRSe ,MUC ) / RCSe ) ) ) + ( CS - MLU ) ) * ( ( Min( ( ( MLU / CS ) / DS ) ,( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7430278884462151, "obj2": 0.11896654040334317}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( MUM - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( Min( MUM ,MUC ) / RCSe ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.8147410358565738, "obj2": 0.06988967550774408}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.798804780876494, "obj2": 0.07469291938098852}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR / PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,MUC ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8027888446215139, "obj2": 0.07366566037280396}], "42": [{"determining": "( ( ( DDR - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( ( ( DS / Max( RCSe,Max( MUM,Max( Min( ( MUC + MLU ) ,( RCSe * MUC ) ),DS ) ) ) ) - DS ) / ( RRSe * ( ( RMSe / ( Max( ( CS * RMSe ),CS ) - MUC ) ) * ( ( MUM / MUM ) / Max( RMSe,Max( MLU,( CS + ( RCSe + MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( RRSe * DS ) - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.28884462151394424, "obj2": 0.5337422443216951}, {"determining": "( ( PN + ACS ) + ( ( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - ARS ) + ( Const - Const ) ) )", "choosing": "( ( MLU / ( ( RMSe - RMSe ) * MUC ) ) - ( RRSe / ( ( ( Min( ( MUR - MUC ) ,MUC ) - ( RMSe / ( RMSe / RRSe ) ) ) + MUM ) - ( ( CS / CS ) * ( MLU - CS ) ) ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5802981787192035}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem ) + Min( ( ( ( MDR / PN ) - Const ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUR + CS ) ) - CS ) - Min( Max( DS,Min( RMSe ,DS ) ) ,( RMSe - ( DS + RCSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015909576514588512}, {"determining": "( ( ( ( PN / ( DDR * Max( AMS,( DDR - ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ARS ) * Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( PN / Max( PN,AMS ) ) ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUR ) ,MLU ),Min( ( MLU * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.006800292137752411}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( DDR ,Min( ACS ,FirstVNF_Mem ) ) + Min( Const ,CRS ) ) + Min( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - ( Const * DDR ) ),MDR ) ,Max( ( FirstVNF_CPU_Server + BR ),RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM / AMS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / Max( MUR,CS ) ) ) * ( DS * ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ) ) * ( ( ( ( RRSe - Min( RRSe ,( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( ( MLU * MUM ),( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.3286852589641434, "obj2": 0.4896307554923697}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,Min( ACS ,( ( ARS / FirstVNF_RAM ) * AMS ) ) ),( ( ( FirstVNF_RAM_Server + BR ) / FirstVNF_RAM_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( CS - CS ) / MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( ( MUM - DS ) - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.372518915128707}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_CPU_Server / DDR ) ) ) )", "choosing": "( Min( RCSe ,MUR ) / ( RRSe * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( Max( MUM,MUC ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.34860557768924305, "obj2": 0.46936983025542023}, {"determining": "( Min( ( MRS / FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS / Max( ( Const / ARS ),Min( ( RRS * CRS ) ,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) * ( FirstVNF_RAM_Server + ( CRS - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM / DS ) ) / ( DS / Min( MUC ,MLU ) ) ) * ( ( ( ( DS / ( DS / RCSe ) ) * ( MUR - ( MUM * CS ) ) ) / MUM ) / DS ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.16733067729083664, "obj2": 0.6904375684273857}, {"determining": "( ( Const + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / Max( BR,( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Max( ( FirstVNF_RAM / MRS ),FirstVNF_Mem ) ) / ( FirstVNF_RAM / ARS ) ) ) ) ) + ( ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) + ( PN / BR ) ) )", "choosing": "( ( Max( Max( RMSe,( ( Min( RMSe ,Min( DS ,RMSe ) ) * DS ) + MLU ) ),( RRSe - ( MUC * DS ) ) ) * RRSe ) / Max( ( ( DS / MUR ) + ( MLU * Max( RRSe,MUM ) ) ),RRSe ) )", "obj1": 0.18725099601593626, "obj2": 0.6817292305118411}, {"determining": "( ( ( MDR / PN ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( ( FirstVNF_RAM / DDR ) + BR ) + RRS ) ) ) ) ) + ( MDR + FirstVNF_RAM ) )", "choosing": "( ( Max( Max( ( MUR + ( ( MUC / CS ) * ( RMSe + ( RMSe + MUM ) ) ) ),MUC ),Max( RRSe,Min( MUM ,RCSe ) ) ) * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( ( MUC + MUM ) / MLU ) ) ) * ( ( ( CS * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9422310756972112, "obj2": 0.02836757506613473}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ARS - ACS ) ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( ( CS + DS ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8645418326693227, "obj2": 0.052803775780852796}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ACS + Min( CRS ,FirstVNF_Mem_Server ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( DDR * ( CRS + Const ) ) ) ) ) ) )", "choosing": "( Max( ( Max( MLU,Max( ( ( Max( CS,CS ) - RRSe ) / RCSe ),MUM ) ) * ( ( ( ( MUR * Max( MUR,MUC ) ) - CS ) / ( MUC + Max( ( MUR * MUC ),( DS + MUR ) ) ) ) / MUC ) ),CS ) / Min( RCSe ,DS ) )", "obj1": 0.3047808764940239, "obj2": 0.5219919476147454}, {"determining": "( ( ( Min( MDR ,( ( AMS * RRS ) + Const ) ) / BR ) * Max( ( ( ARS + ( ( ( ARS / MDR ) * BR ) * PN ) ) + FirstVNF_CPU_Server ),BR ) ) / ( FirstVNF_CPU * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MLU + CS ) ,( ( RMSe * ( RRSe * DS ) ) * ( Min( MUC ,RRSe ) / DS ) ) ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7774916413894789}, {"determining": "( ( FirstVNF_CPU + ( PN * Min( MRS ,MRS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ,( ( CRS / MRS ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MUM ) / MUM ) / DS ) ) ) / ( RCSe - DS ) )", "obj1": 0.3745019920318725, "obj2": 0.43051097106600705}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41832669322709165, "obj2": 0.39701909494959153}, {"determining": "( ( ( ( ( Max( BR,BR ) + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( Max( FirstVNF_Mem_Server,MRS ) + BR ) * RRS ) ) ) / FirstVNF_Mem_Server ) * Max( MDR,PN ) ) + ( MDR + FirstVNF_RAM ) )", "choosing": "( ( RRSe + Min( RCSe ,( ( Min( ( ( MLU + RMSe ) + MLU ) ,( RRSe - MUC ) ) - ( ( MUC + ( RRSe - MUR ) ) / RCSe ) ) + RRSe ) ) ) / Min( DS ,DS ) )", "obj1": 0.3645418326693227, "obj2": 0.4475354834098479}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( DDR,BR ) ) ,( ACS + BR ) ) ) ) - DDR ) - Max( AMS,( DDR - ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( PN - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe - ( ( DS / ( MLU / CS ) ) / MUM ) ) / ( DS / ( CS / ( MUM - Min( CS ,RCSe ) ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.43824701195219123, "obj2": 0.36365151093853604}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( ( PN * Const ) - ARS ) ),FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( ( MRS / Const ) + FirstVNF_CPU_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) - ( ( ( MDR / PN ) - ( FirstVNF_RAM_Server - MRS ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( RCSe / DS ) - Min( RRSe ,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( MLU,( Max( RMSe,DS ) / RCSe ) ) ) ) ) )", "obj1": 0.8386454183266933, "obj2": 0.06039476947527716}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( PN ,DDR ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( Max( MUC,( MUC * MUR ) ) ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9262948207171314, "obj2": 0.02990674448874809}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ( MDR + DDR ) / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( ( ( RMSe - MUC ) * ( RCSe - MUC ) ) ,Min( RRSe ,MLU ) ) + MUR ) ) + ( ( MUC * Min( MUR ,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7888446215139442, "obj2": 0.0799722566865026}, {"determining": "( ( ( Const / AMS ) + AMS ) + ( ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ACS ) )", "choosing": "( ( ( ( CS - ( ( RCSe * MLU ) * MUM ) ) / MLU ) * ( ( Max( RCSe,( MUM + ( CS / ( CS / DS ) ) ) ) / ( DS / ( MUM / MLU ) ) ) * ( ( ( ( ( MUC / MLU ) / Max( RMSe,CS ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.6655911906752706}, {"determining": "( ( ACS / ACS ) + ( ( ( ARS / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) / Min( FirstVNF_CPU ,Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( ( CS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( MUC,MLU ) - ( ( RCSe * RCSe ) + DS ) ) ) ) * ( ( ( ( DS / ( MUC / DS ) ) * ( MUR - ( RCSe * CS ) ) ) / RCSe ) / ( MUM - MUC ) ) ) ) / Max( RCSe,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6531633830271687}, {"determining": "( Min( FirstVNF_RAM_Server ,CRS ) + ( Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( PN / Max( PN,AMS ) ) ) * ( ( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ARS ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( MUC / ( CS / MLU ) ) ) * ( ( MUR * CS ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03842368450379492}, {"determining": "( ( ACS / ( FirstVNF_CPU_Server + Max( RRS,PN ) ) ) + ( ( ( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( AMS / ACS ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / Max( BR,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_CPU_Server / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( RMSe + ( ( DS + RMSe ) + Min( CS ,CS ) ) ) - MUM ) / ( ( ( Min( ( ( ( MUR / MUC ) + ( MUR + MUC ) ) * RRSe ) ,MLU ) * Min( Min( Max( MLU,MUM ) ,Max( CS,( MUM - MUM ) ) ) ,( Min( CS ,( RMSe - MUR ) ) + Min( RRSe ,( RRSe * RRSe ) ) ) ) ) - MUM ) + MUM ) )", "obj1": 0.750996015936255, "obj2": 0.10446855590232887}, {"determining": "( ( Min( ( CRS * MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) )", "choosing": "( ( RCSe * MUC ) / ( ( ( DS / ( ( DS - RMSe ) / MUM ) ) - ( RMSe / Max( RRSe,DS ) ) ) * RRSe ) )", "obj1": 0.24900398406374502, "obj2": 0.611545125378114}, {"determining": "( ( ( FirstVNF_CPU * DDR ) / PN ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + Max( FirstVNF_Mem,Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( PN / MDR ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( Min( RCSe ,DS ) + DS ) / ( MUM / ( ( Max( MLU,RRSe ) + MUC ) - RCSe ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.23306772908366533, "obj2": 0.6253223276410282}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ARS - ACS ) ) ) ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( MUM - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( Min( MUM ,MUC ) / RCSe ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.09898412470940506}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( MRS + Max( ACS,ARS ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( Const,( Const * Min( AMS ,BR ) ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( ( RRSe * MUR ),MUC ) - MUC ) ) ) * ( ( ( ( DS / ( MUM / MLU ) ) * ( MUR - Max( DS,CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.3844621513944223, "obj2": 0.4239294888737787}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( MDR + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / ( MUR + ( ( MUC / ( MUM + RRSe ) ) * ( RMSe + ( RMSe + CS ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.30329748576961096}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( PN - ( Const * MRS ) ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,( RMSe + ( ( RCSe / Min( CS ,Min( Min( RCSe ,RMSe ) ,Min( MUC ,MUM ) ) ) ) * CS ) ) ) / CS )", "obj1": 0.22310756972111553, "obj2": 0.6383559113136551}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( MUM - MUM ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.39243027888446214, "obj2": 0.41708472448695266}, {"determining": "( ( ( RRS * ACS ) + ( ( RRS - Max( ACS,ACS ) ) / ARS ) ) + Min( ( AMS - BR ) ,Min( ( FirstVNF_RAM_Server + PN ) ,FirstVNF_Mem ) ) )", "choosing": "( ( RRSe * ( ( Max( MLU,RCSe ) / ( DS * ( MUR + DS ) ) ) * Max( ( MLU - DS ),( MUC * RRSe ) ) ) ) / ( Max( CS,CS ) + MUC ) )", "obj1": 0.20119521912350596, "obj2": 0.6598572221261775}, {"determining": "( ( Const / PN ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.23904382470119523, "obj2": 0.6210623856414903}, {"determining": "( ( ( ( PN / AMS ) - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( ( MLU / RRSe ) * Max( ( MUM + DS ),CS ) ) / MUR ) / DS ) ) ) + Max( MUC,( Min( RRSe ,( MUM + MLU ) ) * MUC ) ) )", "obj1": 0.4900398406374502, "obj2": 0.31056407020399246}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( BR - ARS ) * Max( FirstVNF_Mem,ARS ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * MUC ) ) ) / MUM ) / DS ) * ( Min( Min( RRSe ,RRSe ) ,MUC ) / Max( MLU,DS ) ) ) ) / Min( MLU ,Min( Min( Max( RRSe,( Min( ( MLU - RMSe ) ,Min( MUC ,MUM ) ) + Max( ( MUM / CS ),( RRSe - RMSe ) ) ) ) ,( MUR / MUR ) ) ,MUR ) ) )", "obj1": 0.7749003984063745, "obj2": 0.08938891019753654}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) * ( ( RRS / ( PN + RRS ) ) / FirstVNF_Mem ) ) ) - DDR ) - ( RRS * ACS ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Max( ( MUR / Max( ( DS / RCSe ),MUC ) ),( MUC * MUC ) ) * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( Max( ( MLU * CS ),MLU ),( ( MLU + CS ) * ( RRSe / MUC ) ) ) ) ) ) ,( RCSe / RRSe ) ) )", "obj1": 0.6274900398406374, "obj2": 0.20510978283282133}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( DS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2589641434262948, "obj2": 0.5945263501226855}, {"determining": "( ( ( ( Min( ( MRS / ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_CPU_Server ,Min( ARS ,Max( AMS,FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( BR,Min( ( ( ARS * DDR ) * AMS ) ,MRS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Max( CRS,BR ) )", "choosing": "( ( MUR / Min( MUR ,MUR ) ) + Min( ( CS * Min( RMSe ,( MUR * ( RMSe + MLU ) ) ) ) ,( MUC - ( CS + ( MUR * Min( ( MUR * Max( MLU,DS ) ) ,Max( RMSe,( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.03864135116696866}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_RAM_Server / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( Max( FirstVNF_CPU_Server,( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( MRS - ( PN + MDR ) ) ) ) + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( ( ( DS * DS ) + ( RCSe * MUM ) ) ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / RCSe ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.250996015936255, "obj2": 0.598958213286061}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5098046272737029}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,Max( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ),RRSe ) ) )", "obj1": 0.6195219123505976, "obj2": 0.21135410048498832}, {"determining": "( ( ( ARS * CRS ) - ( DDR - ( ( CRS * Min( Min( Min( ARS ,FirstVNF_Mem_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) ) + ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) / RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem / Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe + RRSe ) - MUC ) * MUR ) / MUM ) + ( ( MUR * MUM ) + CS ) )", "obj1": 0.8864541832669323, "obj2": 0.0411273877251646}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Max( AMS,( DDR - ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( RRSe * DS ) - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5756972111553785, "obj2": 0.24260838146937297}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( ( RRS - PN ) - ( Max( AMS,Max( DDR,ARS ) ) / Max( FirstVNF_RAM_Server,ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / Min( PN ,DDR ) ) - ARS ) ,( ( ( Const * FirstVNF_CPU_Server ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe + ( RMSe - ( ( Max( MLU,MUM ) * Max( RRSe,DS ) ) + DS ) ) ) + Max( MUC,( MUC * MUR ) ) )", "obj1": 0.4601593625498008, "obj2": 0.3434644245378344}, {"determining": "( ( Max( ( DDR - ARS ),MRS ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + ( FirstVNF_RAM + CRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( RRSe,( RRSe - RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.39641434262948205, "obj2": 0.4059650228821945}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) + ( ( Const + ( FirstVNF_Mem - Min( ( ( MDR / ( MDR * FirstVNF_CPU ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) - BR ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),( Max( MLU,MUM ) * ( ( ( ( MLU + RMSe ) * CS ) - RRSe ) + Max( ( MUR * MUC ),MUC ) ) ) ) + ( ( CS * ( RCSe * Min( RMSe ,MLU ) ) ) * ( ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) * RMSe ) ) + ( MLU - CS ) ) * ( ( ( ( ( MLU / CS ) / Max( MUM,MLU ) ) * ( MUR * MLU ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2878936053541786}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( BR / FirstVNF_Mem ) + Min( Min( ( BR + ( RRS * FirstVNF_Mem_Server ) ) ,PN ) ,( ( ARS + BR ) + CRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU / AMS ) + ( MRS + Const ) ) ) ) )", "choosing": "( ( RRSe * Min( RRSe ,RCSe ) ) / Min( ( MUC * RCSe ) ,( Max( ( MUM * MLU ),CS ) + Min( ( Max( ( DS / CS ),MLU ) / ( MUM + RMSe ) ) ,( RMSe + ( CS / Min( CS ,CS ) ) ) ) ) ) )", "obj1": 0.5577689243027888, "obj2": 0.260646226597249}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( ARS + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( ( ( ( MDR / PN ) - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe + RMSe ) - MUC ) ),MUM ) + ( RCSe + Max( MUR,Min( MUM ,CS ) ) ) )", "obj1": 0.4800796812749004, "obj2": 0.3234222281500996}, {"determining": "( ( ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Max( RRS,Const ) ) + ( Const / PN ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( CS + Min( RCSe ,DS ) ) ) ) ) * ( ( ( ( ( MUC / MLU ) / DS ) * ( Max( RRSe,MUM ) - ( MUC * MUM ) ) ) / MUM ) / MUR ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6400605458989083}, {"determining": "( ( Max( Min( ( ARS + ( Min( FirstVNF_RAM ,( CRS * DDR ) ) * RRS ) ) ,MDR ),BR ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * Min( MUC ,DS ) ) ) / Max( ( DS / MUM ),Min( CS ,( ( CS / Max( MUR,Max( MLU,( MUC * RCSe ) ) ) ) * Min( MUC ,( Min( MUC ,Min( MUM ,CS ) ) * ( RMSe - MLU ) ) ) ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7653000680829934}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( FirstVNF_CPU_Server,Max( DDR,FirstVNF_RAM_Server ) ) ) ) ) + Min( PN ,ARS ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / Max( ( RRSe - ( ( RMSe + RMSe ) - ( MUR + MUR ) ) ),MUR ) ) * ( Max( RCSe,( MUM * DS ) ) / Min( DS ,( CS / ( MLU + Max( MUM,RCSe ) ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.3545816733067729, "obj2": 0.4526018663262579}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) / ( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUM * MUM ) / ( RCSe - ( MUM + DS ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( Min( RMSe ,MUC ) * MUR ) ) / MUM ) / RCSe ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3247011952191235, "obj2": 0.4997692936811018}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( RRSe + RMSe ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.7071713147410359, "obj2": 0.14412484077483967}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server / ARS ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUC * CS ) ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8227091633466136, "obj2": 0.06757462284404396}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( MRS / PN ) ,Max( FirstVNF_CPU_Server,BR ) ) ,FirstVNF_CPU_Server ) ) ) + DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - DDR ) ) ,( ACS + ( BR / MRS ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( MLU / CS ) ) ) * ( ( ( ( DS / ( RRSe / CS ) ) * ( ( MUC + RCSe ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RRSe ,RMSe ) )", "obj1": 0.6095617529880478, "obj2": 0.21420852552988665}, {"determining": "( ( Max( Min( ( FirstVNF_Mem_Server - ( MRS * PN ) ) ,MDR ),( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_RAM_Server ) / Max( Const,( ACS * AMS ) ) ) ) * CRS ) / ( FirstVNF_Mem + ARS ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( DS,( ( DS - MUR ) + Max( CS,CS ) ) ) * MUM ) / DS ) ) ) / CS )", "obj1": 0.11155378486055777, "obj2": 0.8079860046179493}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / FirstVNF_Mem_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ( ( ARS + BR ) + RRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Max( RCSe,( MUM + CS ) ) ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * CS ) ,DS ) )", "obj1": 0.26693227091633465, "obj2": 0.5860516784051194}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7091633466135459, "obj2": 0.13486920087855792}, {"determining": "( ( ( ( ARS - BR ) / ARS ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - Min( FirstVNF_RAM ,PN ) ) ,( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) * ( DS / ( CS / MLU ) ) ) * ( DS / ( MUM + ( RMSe * RCSe ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6314741035856574, "obj2": 0.19457047529574636}, {"determining": "( ( Max( AMS,( DDR - ARS ) ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ACS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( PN - MDR ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( RMSe - RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MLU ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.350597609561753, "obj2": 0.45846914452685195}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.2258191046013538}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server * ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Const ) + ( ( ( ACS + ARS ) / Max( MRS,( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ACS ) ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * RRSe ) ,( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + CS ) * Min( RRSe ,RRSe ) ) ) ) ) ) ) + Max( MUM,DS ) )", "obj1": 0.6772908366533864, "obj2": 0.17385612852255342}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "Min( Min( ( Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) - ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.48406374501992033, "obj2": 0.32057704091721567}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server * ACS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,Min( ( ( RCSe * DS ) - Min( MUM ,Min( RMSe ,MUC ) ) ) ,RCSe ) ) - MUC ) / ( RMSe + RMSe ) ) / CS )", "obj1": 0.8326693227091634, "obj2": 0.06369272110000138}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( DDR + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( BR ,BR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) + ( FirstVNF_RAM_Server + ( BR + ( ( ( ( FirstVNF_Mem_Server - PN ) / PN ) - FirstVNF_CPU ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS - MLU ) / CS )", "obj1": 0.7450199203187251, "obj2": 0.11245176865923623}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) * ( Max( RRS,DDR ) + FirstVNF_Mem ) ) ) - DDR ) - ( Max( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ),( ARS - DDR ) ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( Max( ( MUC * MUC ),( MUR / Max( ( DS / RCSe ),MUC ) ) ) * ( ( RMSe + Max( MLU,( DS / RCSe ) ) ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * ( RRSe / MUC ) ) ) ) ) ) ,MUC ) )", "obj1": 0.6454183266932271, "obj2": 0.19174553473474112}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server * Min( ARS ,FirstVNF_RAM_Server ) ) + ( RRS / ACS ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ),RRSe ) ,( MUR + RRSe ) )", "obj1": 0.6812749003984063, "obj2": 0.16840896744200037}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( DDR,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Max( AMS,( DDR - ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( MUM - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( Min( MUM ,MUC ) / RCSe ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.46613545816733065, "obj2": 0.3424453930687533}, {"determining": "( Min( FirstVNF_Mem ,MRS ) + ( Min( DDR ,( ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) - ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU - RCSe ) - Max( MUC,Min( ( MUM / ( ( MUM - MUC ) * CS ) ) ,MUR ) ) ) / ( CS - MLU ) ) / CS )", "obj1": 0.2729083665338645, "obj2": 0.5849758473966367}, {"determining": "( ( ( FirstVNF_CPU / ( MDR + FirstVNF_RAM_Server ) ) * Min( Min( FirstVNF_CPU ,( DDR + ( Const + ( CRS / MDR ) ) ) ) ,ARS ) ) + ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,Min( ARS ,( ACS + FirstVNF_CPU ) ) ) ) ) - DDR ) - ( ( AMS / ( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "( ( RRSe * ( ( ( DS / ( CS / MLU ) ) / Min( Max( MUM,( MUM + CS ) ) ,Min( RRSe ,RRSe ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / RRSe ) ) ) / Min( Max( MUM,CS ) ,DS ) )", "obj1": 0.8764940239043825, "obj2": 0.05031688838217954}, {"determining": "( Min( Min( ( ACS + FirstVNF_CPU_Server ) ,( ( MRS / PN ) - FirstVNF_CPU ) ) ,( ACS + FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) / RCSe ) ) ) + ( MLU - CS ) ) * ( ( Max( RRSe,MLU ) / ( MUR * ( ( MUR - MUC ) / MUR ) ) ) / DS ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.25257039892930516}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.2375743047217593}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.798804780876494, "obj2": 0.07469291938098852}, {"determining": "( ( ( MRS * ( Max( BR,ACS ) + ( MRS + MRS ) ) ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( MUM / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6832669322709163, "obj2": 0.1580612065739134}, {"determining": "( Max( MRS,FirstVNF_Mem ) + ( FirstVNF_RAM * MRS ) )", "choosing": "( Min( ( RRSe - ( ( ( DS - ( ( CS + MLU ) - DS ) ) + MUR ) + RCSe ) ) ,RMSe ) / Max( RRSe,( DS - ( CS / ( ( ( RCSe - MUM ) * DS ) + CS ) ) ) ) )", "obj1": 0.40836653386454186, "obj2": 0.4020978553664453}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR / PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) * ( ARS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( ( ( MRS - FirstVNF_CPU ) / ARS ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM * CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,MUC ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5219123505976095, "obj2": 0.2851061098947101}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( ( PN * FirstVNF_Mem_Server ) - ARS ) ),FirstVNF_Mem ) + Min( Max( ( ACS + FirstVNF_CPU_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - ( FirstVNF_RAM_Server - MRS ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( MLU,( DS / RCSe ) ) ) ) ) )", "obj1": 0.8784860557768924, "obj2": 0.04590331667221741}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / ( DS / ( MLU / CS ) ) ) ) / ( DS / ( CS / ( MUM - MUM ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7350597609561753, "obj2": 0.12047835287344795}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.651394422310757, "obj2": 0.1830725582909572}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7151394422310757, "obj2": 0.1291061044332225}, {"determining": "( ( FirstVNF_CPU_Server * DDR ) + Min( ( PN - RRS ) ,( ( FirstVNF_Mem - Min( ( ( PN * ( MRS * FirstVNF_RAM ) ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( ( ( RRSe / ( MUM + ( Min( MUM ,MUC ) / RCSe ) ) ) - RRSe ) - Max( RRSe,( ( MLU - CS ) * Min( Min( Max( RCSe,MLU ) ,( CS + MLU ) ) ,RRSe ) ) ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( RRSe ,MUC ) / RCSe ) ) ) + ( CS - MLU ) ) * ( ( Min( ( ( MLU / CS ) / DS ) ,( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7430278884462151, "obj2": 0.11896654040334317}, {"determining": "( ( ( Const / Const ) * Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) * ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) )", "choosing": "( Max( ( MUR * ( MUC - MUC ) ),MUM ) + Min( ( CS * ( ( MUR + Max( Max( MUM,Min( RCSe ,RRSe ) ),RMSe ) ) * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) / Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( MUM / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.18273852534548035}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ( ARS + ( MRS * ( ACS + Max( Const,DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) + ( ( ( MDR - RRS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( Max( Min( Min( RRSe ,MUC ) ,MUC ),( DS / ( CS / MLU ) ) ) * Max( CS,DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7729083665338645, "obj2": 0.09319678292886814}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( DDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ( PN + MRS ) + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) )", "choosing": "( ( MUR * ( MUR * ( MUR - DS ) ) ) / CS )", "obj1": 0.701195219123506, "obj2": 0.1510126080371521}], "43": [{"determining": "( ( ( DDR - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( ( Max( Max( ( MUR + ( ( MUC / CS ) * ( RMSe + ( RMSe + MUM ) ) ) ),MUC ),Max( RRSe,Min( MUM ,RCSe ) ) ) * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( ( MUC + MUM ) / MLU ) ) ) * ( ( ( CS * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( ( ( DS / Max( RCSe,Max( MUM,Max( Min( ( MUC + MLU ) ,( RCSe * MUC ) ),DS ) ) ) ) - DS ) / ( RRSe * ( ( RMSe / ( Max( ( CS * RMSe ),CS ) - MUC ) ) * ( ( MUM / MUM ) / Max( RMSe,Max( MLU,( CS + ( RCSe + MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.28884462151394424, "obj2": 0.5337422443216951}, {"determining": "( Min( ( MRS / FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS / Max( ( Const / ARS ),Min( ( RRS * CRS ) ,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) * ( FirstVNF_RAM_Server + ( CRS - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM / DS ) ) / ( DS / Min( MUC ,MLU ) ) ) * ( ( ( ( DS / ( DS / RCSe ) ) * ( MUR - ( MUM * CS ) ) ) / MUM ) / DS ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.16733067729083664, "obj2": 0.6904375684273857}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( DDR ,Min( ACS ,FirstVNF_Mem ) ) + Min( Const ,CRS ) ) + Min( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - ( Const * DDR ) ),MDR ) ,Max( ( FirstVNF_CPU_Server + BR ),RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM / AMS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / Max( MUR,CS ) ) ) * ( DS * ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ) ) * ( ( ( ( RRSe - Min( RRSe ,( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( ( MLU * MUM ),( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.3286852589641434, "obj2": 0.4896307554923697}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_CPU_Server / DDR ) ) ) )", "choosing": "( Min( RCSe ,MUR ) / ( RRSe * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( Max( MUM,MUC ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.34860557768924305, "obj2": 0.46936983025542023}, {"determining": "( ( FirstVNF_CPU_Server * Max( MDR,Max( ( MRS / ( ( Max( PN,FirstVNF_Mem_Server ) + ARS ) * Max( RRS,( FirstVNF_RAM_Server / MDR ) ) ) ),( ( ( MRS * BR ) / ( MRS * FirstVNF_Mem ) ) + RRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( MUM * ( RMSe + RRSe ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.1852589641434263, "obj2": 0.6736651734046396}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( CS + ( MUM + MUC ) ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2868525896414343, "obj2": 0.5690370900046309}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,Min( ACS ,( ( ARS / FirstVNF_RAM ) * AMS ) ) ),( ( ( FirstVNF_RAM_Server + BR ) / FirstVNF_RAM_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( CS - CS ) / MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( ( MUM - DS ) - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.372518915128707}, {"determining": "( ( ( ( FirstVNF_Mem_Server * Const ) + DDR ) - FirstVNF_CPU ) + Min( PN ,DDR ) )", "choosing": "( ( RRSe * ( Max( Min( MUC ,Min( Max( MUC,( MUR * MUC ) ) ,RRSe ) ),( RRSe / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - Max( DS,CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.8645418326693227, "obj2": 0.048584553215125635}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( ( PN * Const ) - ARS ) ),FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( ( MRS / Const ) + FirstVNF_CPU_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) - ( ( ( MDR / PN ) - ( FirstVNF_RAM_Server - MRS ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( RCSe / DS ) - Min( RRSe ,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( MLU,( Max( RMSe,DS ) / RCSe ) ) ) ) ) )", "obj1": 0.8386454183266933, "obj2": 0.06039476947527716}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ACS + Min( CRS ,FirstVNF_Mem_Server ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( DDR * ( CRS + Const ) ) ) ) ) ) )", "choosing": "( Max( ( Max( MLU,Max( ( ( Max( CS,CS ) - RRSe ) / RCSe ),MUM ) ) * ( ( ( ( MUR * Max( MUR,MUC ) ) - CS ) / ( MUC + Max( ( MUR * MUC ),( DS + MUR ) ) ) ) / MUC ) ),CS ) / Min( RCSe ,DS ) )", "obj1": 0.3047808764940239, "obj2": 0.5219919476147454}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe + RMSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ),( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - DS ) ) * ( ( RRSe / ( ( CS / CS ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.5199203187250996, "obj2": 0.2843457911043963}, {"determining": "( ( ( Min( MDR ,( ( AMS * RRS ) + Const ) ) / BR ) * Max( ( ( ARS + ( ( ( ARS / MDR ) * BR ) * PN ) ) + FirstVNF_CPU_Server ),BR ) ) / ( FirstVNF_CPU * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MLU + CS ) ,( ( RMSe * ( RRSe * DS ) ) * ( Min( MUC ,RRSe ) / DS ) ) ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7774916413894789}, {"determining": "( ( FirstVNF_CPU + ( PN * Min( MRS ,MRS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ,( ( CRS / MRS ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MUM ) / MUM ) / DS ) ) ) / ( RCSe - DS ) )", "obj1": 0.3745019920318725, "obj2": 0.43051097106600705}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) / CRS ),FirstVNF_RAM ) / ARS ) ) * ( Const / CRS ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MLU + DS ) ) * ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( RRSe / MLU ) ) * ( MUR - ( MUR * MUM ) ) ) / DS ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6108169382171359}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( RRS * CRS ) ) ) + ( DDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( ( Max( ( Max( ( CS + MUR ),MUC ) + CS ),RCSe ) / ( DS / ( CS / MLU ) ) ) * ( ( MLU / ( RMSe + ( MUR / ( RRSe * MUC ) ) ) ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.388895534855317}, {"determining": "( ( ( ( ( Max( BR,BR ) + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( Max( FirstVNF_Mem_Server,MRS ) + BR ) * RRS ) ) ) / FirstVNF_Mem_Server ) * Max( MDR,PN ) ) + ( MDR + FirstVNF_RAM ) )", "choosing": "( ( RRSe + Min( RCSe ,( ( Min( ( ( MLU + RMSe ) + MLU ) ,( RRSe - MUC ) ) - ( ( MUC + ( RRSe - MUR ) ) / RCSe ) ) + RRSe ) ) ) / Min( DS ,DS ) )", "obj1": 0.3645418326693227, "obj2": 0.4475354834098479}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6176838386721392}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( DDR,BR ) ) ,( ACS + BR ) ) ) ) - DDR ) - Max( AMS,( DDR - ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( PN - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe - ( ( DS / ( MLU / CS ) ) / MUM ) ) / ( DS / ( CS / ( MUM - Min( CS ,RCSe ) ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.43824701195219123, "obj2": 0.36365151093853604}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR + PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( Min( DDR ,FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / Max( DS,( CS / MLU ) ) ) * ( ( ( ( ( CS + DS ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Max( RCSe,( RRSe * Max( CS,RMSe ) ) ) )", "obj1": 0.4581673306772908, "obj2": 0.3357908929378935}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_RAM_Server / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( Max( FirstVNF_CPU_Server,( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( MRS - ( PN + MDR ) ) ) ) + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( ( ( DS * DS ) + ( RCSe * MUM ) ) ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / RCSe ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.250996015936255, "obj2": 0.598958213286061}, {"determining": "( ( ACS / ACS ) + ( ( ( ARS / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) / Min( FirstVNF_CPU ,Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( ( CS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( MUC,MLU ) - ( ( RCSe * RCSe ) + DS ) ) ) ) * ( ( ( ( DS / ( MUC / DS ) ) * ( MUR - ( RCSe * CS ) ) ) / RCSe ) / ( MUM - MUC ) ) ) ) / Max( RCSe,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6531633830271687}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.798804780876494, "obj2": 0.07469291938098852}, {"determining": "( ( ( ( ARS - BR ) / ARS ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - Min( FirstVNF_RAM ,PN ) ) ,( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) * ( DS / ( CS / MLU ) ) ) * ( DS / ( MUM + ( RMSe * RCSe ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6314741035856574, "obj2": 0.19457047529574636}, {"determining": "( Max( MRS,FirstVNF_Mem ) + ( FirstVNF_RAM * MRS ) )", "choosing": "( Min( ( RRSe - ( ( ( DS - ( ( CS + MLU ) - DS ) ) + MUR ) + RCSe ) ) ,RMSe ) / Max( RRSe,( DS - ( CS / ( ( ( RCSe - MUM ) * DS ) + CS ) ) ) ) )", "obj1": 0.40836653386454186, "obj2": 0.4020978553664453}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) / ( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUM * MUM ) / ( RCSe - ( MUM + DS ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( Min( RMSe ,MUC ) * MUR ) ) / MUM ) / RCSe ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3247011952191235, "obj2": 0.4997692936811018}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR / PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) * ( ARS / ( RRS / ( BR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( ( ( MRS - FirstVNF_CPU ) / ARS ) - Min( ( ( MDR / PN ) - CRS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),CS ) + ( Min( ( RMSe - MUC ) ,RMSe ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9342629482071713, "obj2": 0.02339197366210646}, {"determining": "( Min( FirstVNF_RAM_Server ,CRS ) + ( Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( PN / Max( PN,AMS ) ) ) * ( ( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ARS ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( MUC / ( CS / MLU ) ) ) * ( ( MUR * CS ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03842368450379492}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( PN - ( Const * MRS ) ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,( RMSe + ( ( RCSe / Min( CS ,Min( Min( RCSe ,RMSe ) ,Min( MUC ,MUM ) ) ) ) * CS ) ) ) / CS )", "obj1": 0.22310756972111553, "obj2": 0.6383559113136551}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( PN ,DDR ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( ACS / ( FirstVNF_CPU_Server + Max( RRS,PN ) ) ) + ( ( ( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( AMS / ACS ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / Max( BR,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_CPU_Server / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( RMSe + ( ( DS + RMSe ) + Min( CS ,CS ) ) ) - MUM ) / ( ( ( Min( ( ( ( MUR / MUC ) + ( MUR + MUC ) ) * RRSe ) ,MLU ) * Min( Min( Max( MLU,MUM ) ,Max( CS,( MUM - MUM ) ) ) ,( Min( CS ,( RMSe - MUR ) ) + Min( RRSe ,( RRSe * RRSe ) ) ) ) ) - MUM ) + MUM ) )", "obj1": 0.750996015936255, "obj2": 0.10446855590232887}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( MRS + Max( ACS,ARS ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( Const,( Const * Min( AMS ,BR ) ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( ( RRSe * MUR ),MUC ) - MUC ) ) ) * ( ( ( ( DS / ( MUM / MLU ) ) * ( MUR - Max( DS,CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.3844621513944223, "obj2": 0.4239294888737787}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,MUM ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6414342629482072, "obj2": 0.1889744276548141}, {"determining": "( ( Max( ( DDR - ARS ),MRS ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + ( FirstVNF_RAM + CRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( RRSe,( RRSe - RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.39641434262948205, "obj2": 0.4059650228821945}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( MDR + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / ( MUR + ( ( MUC / ( MUM + RRSe ) ) * ( RMSe + ( RMSe + CS ) ) ) ) )", "obj1": 0.4960159362549801, "obj2": 0.30329748576961096}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,MUC ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8147410358565738, "obj2": 0.06988967550774408}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( MUM - MUM ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.39243027888446214, "obj2": 0.41708472448695266}, {"determining": "( ( ( RRS * ACS ) + ( ( RRS - Max( ACS,ACS ) ) / ARS ) ) + Min( ( AMS - BR ) ,Min( ( FirstVNF_RAM_Server + PN ) ,FirstVNF_Mem ) ) )", "choosing": "( ( RRSe * ( ( Max( MLU,RCSe ) / ( DS * ( MUR + DS ) ) ) * Max( ( MLU - DS ),( MUC * RRSe ) ) ) ) / ( Max( CS,CS ) + MUC ) )", "obj1": 0.20119521912350596, "obj2": 0.6598572221261775}, {"determining": "( ( ( Const / AMS ) + AMS ) + ( ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ACS ) )", "choosing": "( ( ( ( CS - ( ( RCSe * MLU ) * MUM ) ) / MLU ) * ( ( Max( RCSe,( MUM + ( CS / ( CS / DS ) ) ) ) / ( DS / ( MUM / MLU ) ) ) * ( ( ( ( ( MUC / MLU ) / Max( RMSe,CS ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.6655911906752706}, {"determining": "( ( ( ( PN / AMS ) - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( ( MLU / RRSe ) * Max( ( MUM + DS ),CS ) ) / MUR ) / DS ) ) ) + Max( MUC,( Min( RRSe ,( MUM + MLU ) ) * MUC ) ) )", "obj1": 0.4900398406374502, "obj2": 0.31056407020399246}, {"determining": "( ( ( DDR - ( PN / ( Max( CRS,DDR ) / FirstVNF_RAM ) ) ) - FirstVNF_CPU ) + ( ( ( ACS * FirstVNF_CPU_Server ) - ( ( ARS + BR ) + RRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( ( ( Max( RCSe,( MUM + CS ) ) / Min( RRSe ,RRSe ) ) / ( DS / ( CS / MUC ) ) ) * ( ( ( ( MUR - ( DS * CS ) ) * ( DS / ( MUC / MLU ) ) ) / MUM ) / DS ) ) ) / Min( ( CS * ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) ) ,DS ) )", "obj1": 0.6215139442231076, "obj2": 0.20427651891752643}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7231075697211156, "obj2": 0.12459659591125717}, {"determining": "( ( ( ( Min( ( MRS / ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_CPU_Server ,Min( ARS ,Max( AMS,FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( BR,Min( ( ( ARS * DDR ) * AMS ) ,MRS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Max( CRS,BR ) )", "choosing": "( ( MUR / Min( MUR ,MUR ) ) + Min( ( CS * Min( RMSe ,( MUR * ( RMSe + MLU ) ) ) ) ,( MUC - ( CS + ( MUR * Min( ( MUR * Max( MLU,DS ) ) ,Max( RMSe,( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.03864135116696866}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( Min( FirstVNF_RAM_Server ,Const ) / ARS ) + ( ( ( Min( FirstVNF_RAM_Server ,PN ) + FirstVNF_CPU_Server ) - ARS ) * Min( FirstVNF_RAM_Server ,( Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + PN ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( ( CS + Min( DS ,RCSe ) ) ,RRSe ) ) / ( MLU / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUC ) / ( ( RRSe * MLU ) + ( Max( ( MUC * CS ),MUC ) / DS ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.599601593625498, "obj2": 0.22117792616594995}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( ( MRS * ( PN / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + ( ARS + FirstVNF_Mem ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( Max( RMSe,RMSe ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( RRSe + MUC ) ) - RRSe ) - Max( CS,( DS / Min( CS ,DS ) ) ) ) ) ) ) )", "obj1": 0.6832669322709163, "obj2": 0.1580612065739134}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( ARS + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( ( ( ( MDR / PN ) - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe + RMSe ) - MUC ) ),MUM ) + ( RCSe + Max( MUR,Min( MUM ,CS ) ) ) )", "obj1": 0.4800796812749004, "obj2": 0.3234222281500996}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) + ( ( Const + ( FirstVNF_Mem - Min( ( ( MDR / ( MDR * FirstVNF_CPU ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) - BR ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),( Max( MLU,MUM ) * ( ( ( ( MLU + RMSe ) * CS ) - RRSe ) + Max( ( MUR * MUC ),MUC ) ) ) ) + ( ( CS * ( RCSe * Min( RMSe ,MLU ) ) ) * ( ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) * RMSe ) ) + ( MLU - CS ) ) * ( ( ( ( ( MLU / CS ) / Max( MUM,MLU ) ) * ( MUR * MLU ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2878936053541786}, {"determining": "( ( ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Max( RRS,Const ) ) + ( Const / PN ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( CS + Min( RCSe ,DS ) ) ) ) ) * ( ( ( ( ( MUC / MLU ) / DS ) * ( Max( RRSe,MUM ) - ( MUC * MUM ) ) ) / MUM ) / MUR ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6400605458989083}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + MDR ) ) ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / ( DS / ( MLU / CS ) ) ) ) / ( DS / ( CS / ( MUM - MUM ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7350597609561753, "obj2": 0.12047835287344795}, {"determining": "( ( Max( Min( ( ARS + ( Min( FirstVNF_RAM ,( CRS * DDR ) ) * RRS ) ) ,MDR ),BR ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * Min( MUC ,DS ) ) ) / Max( ( DS / MUM ),Min( CS ,( ( CS / Max( MUR,Max( MLU,( MUC * RCSe ) ) ) ) * Min( MUC ,( Min( MUC ,Min( MUM ,CS ) ) * ( RMSe - MLU ) ) ) ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7653000680829934}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( FirstVNF_CPU_Server,Max( DDR,FirstVNF_RAM_Server ) ) ) ) ) + Min( PN ,ARS ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / Max( ( RRSe - ( ( RMSe + RMSe ) - ( MUR + MUR ) ) ),MUR ) ) * ( Max( RCSe,( MUM * DS ) ) / Min( DS ,( CS / ( MLU + Max( MUM,RCSe ) ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.3545816733067729, "obj2": 0.4526018663262579}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) )", "choosing": "( ( MUR - ( MUR * CS ) ) / CS )", "obj1": 0.6992031872509961, "obj2": 0.1522519442218835}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7151394422310757, "obj2": 0.1291061044332225}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.31274900398406374, "obj2": 0.5078038545440943}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server * ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Const ) + ( ( ( ACS + ARS ) / Max( MRS,( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ACS ) ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * RRSe ) ,( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + CS ) * Min( RRSe ,RRSe ) ) ) ) ) ) ) + Max( MUM,DS ) )", "obj1": 0.6713147410358565, "obj2": 0.17514296996948525}, {"determining": "( ( Max( Min( ( FirstVNF_Mem_Server - ( MRS * PN ) ) ,MDR ),( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_RAM_Server ) / Max( Const,( ACS * AMS ) ) ) ) * CRS ) / ( FirstVNF_Mem + ARS ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( DS,( ( DS - MUR ) + Max( CS,CS ) ) ) * MUM ) / DS ) ) ) / CS )", "obj1": 0.11155378486055777, "obj2": 0.8079860046179493}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( BR - ARS ) * Max( FirstVNF_Mem,ARS ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * MUC ) ) ) / MUM ) / DS ) * ( Min( Min( RRSe ,RRSe ) ,MUC ) / Max( MLU,DS ) ) ) ) / Min( MLU ,Min( Min( Max( RRSe,( Min( ( MLU - RMSe ) ,Min( MUC ,MUM ) ) + Max( ( MUM / CS ),( RRSe - RMSe ) ) ) ) ,( MUR / MUR ) ) ,MUR ) ) )", "obj1": 0.7749003984063745, "obj2": 0.08938891019753654}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( ( ( RCSe / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5896414342629482, "obj2": 0.23180711313500027}, {"determining": "( ( Max( AMS,( DDR - ARS ) ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ACS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( PN - MDR ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( RMSe - RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MLU ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.350597609561753, "obj2": 0.45846914452685195}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Min( ( ( MDR / ( ACS / DDR ) ) - FirstVNF_CPU ) ,( MDR / PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( PN + ARS ) ) ) )", "choosing": "( ( MUR + ( MUR * CS ) ) / Min( ( RRSe + ( MUR * MLU ) ) ,DS ) )", "obj1": 0.6593625498007968, "obj2": 0.18244702387065795}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( CRS / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( MUC - RCSe ) ) ) + MUR ) ) * ( ( MUC * Max( MUR,Min( CS ,MLU ) ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7848605577689243, "obj2": 0.08181733103500077}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "Min( Min( ( Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) - ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.48406374501992033, "obj2": 0.32057704091721567}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server * ACS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,Min( ( ( RCSe * DS ) - Min( MUM ,Min( RMSe ,MUC ) ) ) ,RCSe ) ) - MUC ) / ( RMSe + RMSe ) ) / CS )", "obj1": 0.8326693227091634, "obj2": 0.06369272110000138}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( DDR + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( BR ,BR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) + ( FirstVNF_RAM_Server + ( BR + ( ( ( ( FirstVNF_Mem_Server - PN ) / PN ) - FirstVNF_CPU ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS - MLU ) / CS )", "obj1": 0.7450199203187251, "obj2": 0.11245176865923623}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5098046272737029}, {"determining": "( ( FirstVNF_CPU_Server * AMS ) + Min( ( PN - RRS ) ,( ( FirstVNF_Mem - Min( ( ( ( MDR / PN ) / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( ( ( RRSe / ( MUM + ( Min( MUM ,MUC ) / RCSe ) ) ) - RRSe ) - Max( RRSe,( ( MLU - CS ) * Min( Min( Max( RCSe,MUM ) ,( CS + MLU ) ) ,RRSe ) ) ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) * ( ( ( ( ( MLU / CS ) / DS ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0022549606874360203}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( PN ,DDR ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( Max( MUC,( MUC * MUR ) ) ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9243027888446215, "obj2": 0.030638883333835177}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server * Min( ARS ,FirstVNF_RAM_Server ) ) + ( RRS / ACS ) ) * ( FirstVNF_RAM_Server / ( ( ARS + ( MRS * PN ) ) + ARS ) ) ) )", "choosing": "Min( Max( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * ( ( MUM / ( Max( DS,MUM ) * ( RRSe / RRSe ) ) ) / DS ) ),RRSe ) ,( MUR + RRSe ) )", "obj1": 0.6812749003984063, "obj2": 0.16840896744200037}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( ( FirstVNF_RAM - Max( ( MDR / DDR ),FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * ( ( ( Min( RRSe ,RRSe ) + MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR - ( RRSe + MUR ) ) * ( DS / ( MUC / MLU ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7071713147410359, "obj2": 0.13586409199993418}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( MRS / PN ) ,Max( FirstVNF_CPU_Server,BR ) ) ,FirstVNF_CPU_Server ) ) ) + DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - DDR ) ) ,( ACS + ( BR / MRS ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( MLU / CS ) ) ) * ( ( ( ( DS / ( RRSe / CS ) ) * ( ( MUC + RCSe ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RRSe ,RMSe ) )", "obj1": 0.6095617529880478, "obj2": 0.21420852552988665}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( BR / FirstVNF_Mem ) + Min( Min( ( BR + ( RRS * FirstVNF_Mem_Server ) ) ,PN ) ,( ( ARS + BR ) + CRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU / AMS ) + ( MRS + Const ) ) ) ) )", "choosing": "( ( RRSe * Min( RRSe ,RCSe ) ) / Min( ( MUC * RCSe ) ,( Max( ( MUM * MLU ),CS ) + Min( ( Max( ( DS / CS ),MLU ) / ( MUM + RMSe ) ) ,( RMSe + ( CS / Min( CS ,CS ) ) ) ) ) ) )", "obj1": 0.5577689243027888, "obj2": 0.260646226597249}, {"determining": "( ( ( ARS * CRS ) - ( DDR - ( ( CRS * Min( Min( Min( ARS ,FirstVNF_Mem_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) ) + ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) / RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem / Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe + RRSe ) - MUC ) * MUR ) / MUM ) + ( ( MUR * MUM ) + CS ) )", "obj1": 0.8864541832669323, "obj2": 0.0411273877251646}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) )", "choosing": "( ( MUR - ( MUR * CS ) ) / CS )", "obj1": 0.703187250996016, "obj2": 0.15044183830814822}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem_Server,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ( ( ARS + BR ) + RRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Max( RCSe,( MUM + CS ) ) ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * CS ) ,DS ) )", "obj1": 0.2729083665338645, "obj2": 0.5829417389466297}, {"determining": "( ( Min( ( ( ( ( AMS / CRS ) - BR ) * MDR ) / ( ( Max( ( MDR / DDR ),( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( AMS * PN ) ) ) ,ARS ) - ( Max( AMS,( Min( ( ( Const / MRS ) + ( CRS * RRS ) ) ,( Min( FirstVNF_Mem ,DDR ) + BR ) ) - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( FirstVNF_RAM_Server + ( AMS * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) )", "choosing": "( ( ( ( Min( MUC ,( DS + ( MUM + CS ) ) ) / ( MUM / ( CS / DS ) ) ) + ( ( Min( ( RCSe + ( RCSe / RMSe ) ) ,( RMSe - RMSe ) ) / CS ) / RRSe ) ) * DS ) / Min( Min( ( RMSe * DS ) ,MLU ) ,MUC ) )", "obj1": 0.5816733067729084, "obj2": 0.2371366370746841}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ACS - ARS ) ) ) ) ) ,( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - ( CRS * RRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( MUM - MUR ) ),MUM ) + Min( ( CS * ( RMSe / MUM ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.7649402390438247, "obj2": 0.09966593071245385}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ( MDR + DDR ) / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( ( ( RMSe - MUC ) * ( RCSe - MUC ) ) ,Min( RRSe ,MLU ) ) + MUR ) ) + ( ( MUC * Min( MUR ,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7888446215139442, "obj2": 0.0799722566865026}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.2258191046013538}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( MUR / ( ( CS * RCSe ) - ( CS * ( RRSe - ( RCSe / RRSe ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.651394422310757, "obj2": 0.1830725582909572}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / FirstVNF_Mem_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ( ( ARS + BR ) + RRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Max( RCSe,( MUM + CS ) ) ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * CS ) ,DS ) )", "obj1": 0.26693227091633465, "obj2": 0.5860516784051194}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( DS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2589641434262948, "obj2": 0.5945263501226855}, {"determining": "( ( FirstVNF_CPU_Server * DDR ) + Min( ( PN - RRS ) ,( ( FirstVNF_Mem - Min( ( ( PN * ( MRS * FirstVNF_RAM ) ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) - Min( ( ( MDR / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( ( ( RRSe / ( MUM + ( Min( MUM ,MUC ) / RCSe ) ) ) - RRSe ) - Max( RRSe,( ( MLU - CS ) * Min( Min( Max( RCSe,MLU ) ,( CS + MLU ) ) ,RRSe ) ) ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RCSe + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( RRSe ,MUC ) / RCSe ) ) ) + ( CS - MLU ) ) * ( ( Min( ( ( MLU / CS ) / DS ) ,( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7430278884462151, "obj2": 0.11896654040334317}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ( ARS + ( MRS * ( ACS + Max( Const,DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) + ( ( ( MDR - RRS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( Max( Min( Min( RRSe ,MUC ) ,MUC ),( DS / ( CS / MLU ) ) ) * Max( CS,DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7729083665338645, "obj2": 0.09319678292886814}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server / DDR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.9661354581673307, "obj2": 0.013022159733814632}, {"determining": "( ( ( ( PN / ( DDR * Max( AMS,( DDR - ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ARS ) * Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( PN / Max( PN,AMS ) ) ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUR ) ,MLU ),Min( ( MLU * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.9840637450199203, "obj2": 0.006800292137752411}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}], "44": [{"determining": "( ( FirstVNF_CPU * ( ACS + AMS ) ) / ( ( Max( BR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_RAM ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS / Max( RCSe,Max( MUM,Max( DS,Min( ( MUC + MLU ) ,( RCSe * MUC ) ) ) ) ) ) - DS ) / Min( RRSe ,Max( ( RCSe + MUM ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( ( Max( Max( ( MUR + ( ( MUC / CS ) * ( RMSe + ( RMSe + MUM ) ) ) ),MUC ),Max( RRSe,Min( MUM ,RCSe ) ) ) * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( ( MUC + MUM ) / MLU ) ) ) * ( ( ( CS * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + Min( Min( PN ,PN ) ,( ( ARS + PN ) + RRS ) ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( ( ( MUM - MUM ) - ( ( MLU - RRSe ) / Max( RMSe,RMSe ) ) ),( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.28884462151394424, "obj2": 0.5331289532082363}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,Min( ACS ,( ( ARS / FirstVNF_RAM ) * AMS ) ) ),( ( ( FirstVNF_RAM_Server + BR ) / FirstVNF_RAM_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( CS - CS ) / MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( ( MUM - DS ) - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.372518915128707}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ACS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) + ( Max( ( DDR - ARS ),MRS ) * ( ( ( FirstVNF_CPU_Server - MRS ) - ( CRS + FirstVNF_CPU ) ) - MRS ) ) )", "choosing": "( ( RRSe * ( ( Min( RCSe ,RMSe ) - ( DS / ( CS / MLU ) ) ) * ( ( Min( ( DS / ( DS / MLU ) ) ,( CS * RMSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.34063745019920316, "obj2": 0.4845124807564412}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( CS + ( MUM + MUC ) ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2868525896414343, "obj2": 0.5690370900046309}, {"determining": "( Min( ( MRS / FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS / Max( ( Const / ARS ),Min( ( RRS * CRS ) ,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) * ( FirstVNF_RAM_Server + ( CRS - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM / DS ) ) / ( DS / Min( MUC ,MLU ) ) ) * ( ( ( ( DS / ( DS / RCSe ) ) * ( MUR - ( MUM * CS ) ) ) / MUM ) / DS ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.16733067729083664, "obj2": 0.6904375684273857}, {"determining": "( ( ( Min( MDR ,( ( AMS * RRS ) + Const ) ) / BR ) * Max( ( ( ARS + ( ( ( ARS / MDR ) * BR ) * PN ) ) + FirstVNF_CPU_Server ),BR ) ) / ( FirstVNF_CPU * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MLU + CS ) ,( ( RMSe * ( RRSe * DS ) ) * ( Min( MUC ,RRSe ) / DS ) ) ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7774916413894789}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( RRS * CRS ) ) ) + ( DDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( ( Max( ( Max( ( CS + MUR ),MUC ) + CS ),RCSe ) / ( DS / ( CS / MLU ) ) ) * ( ( MLU / ( RMSe + ( MUR / ( RRSe * MUC ) ) ) ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.388895534855317}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6176838386721392}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( DDR,BR ) ) ,( ACS + BR ) ) ) ) - DDR ) - Max( AMS,( DDR - ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( PN - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RCSe - ( ( DS / ( MLU / CS ) ) / MUM ) ) / ( DS / ( CS / ( MUM - Min( CS ,RCSe ) ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.43824701195219123, "obj2": 0.36365151093853604}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR + PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( Min( DDR ,FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / Max( DS,( CS / MLU ) ) ) * ( ( ( ( ( CS + DS ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Max( RCSe,( RRSe * Max( CS,RMSe ) ) ) )", "obj1": 0.4581673306772908, "obj2": 0.3357908929378935}, {"determining": "( ( Min( ( ( ( ( AMS / CRS ) - BR ) * MDR ) / ( ( Max( ( MDR / DDR ),( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( AMS * PN ) ) ) ,ARS ) - ( Max( AMS,( Min( ( ( Const / MRS ) + ( CRS * RRS ) ) ,( Min( FirstVNF_Mem ,DDR ) + BR ) ) - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( FirstVNF_RAM_Server + ( AMS * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) )", "choosing": "( ( ( ( Min( MUC ,( DS + ( MUM + CS ) ) ) / ( MUM / ( CS / DS ) ) ) + ( ( Min( ( RCSe + ( RCSe / RMSe ) ) ,( RMSe - RMSe ) ) / CS ) / RRSe ) ) * DS ) / Min( Min( ( RMSe * DS ) ,MLU ) ,MUC ) )", "obj1": 0.5816733067729084, "obj2": 0.2371366370746841}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2649402390438247, "obj2": 0.5811803635196009}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( MRS / PN ) ,Max( FirstVNF_CPU_Server,BR ) ) ,FirstVNF_CPU_Server ) ) ) + DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - DDR ) ) ,( ACS + ( BR / MRS ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( MLU / CS ) ) ) * ( ( ( ( DS / ( RRSe / CS ) ) * ( ( MUC + RCSe ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RRSe ,RMSe ) )", "obj1": 0.6095617529880478, "obj2": 0.21420852552988665}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ACS + Min( CRS ,FirstVNF_Mem_Server ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( DDR * ( CRS + Const ) ) ) ) ) ) )", "choosing": "( Max( ( Max( MLU,Max( ( ( Max( CS,CS ) - RRSe ) / RCSe ),MUM ) ) * ( ( ( ( MUR * Max( MUR,MUC ) ) - CS ) / ( MUC + Max( ( MUR * MUC ),( DS + MUR ) ) ) ) / MUC ) ),CS ) / Min( RCSe ,DS ) )", "obj1": 0.3047808764940239, "obj2": 0.5219919476147454}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( Max( FirstVNF_Mem,Max( Min( Const ,DDR ),Min( MDR ,FirstVNF_Mem ) ) ),FirstVNF_CPU_Server ) ) ) ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) * ( MDR / PN ) ) ) ) ) )", "choosing": "( Min( RRSe ,( ( RMSe * ( RRSe * DS ) ) * Max( ( MLU * Max( DS,MUM ) ),MUR ) ) ) / CS )", "obj1": 0.8545816733067729, "obj2": 0.0588171984055971}, {"determining": "( ( AMS / ( AMS + ARS ) ) + ( ( ( FirstVNF_Mem + ACS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( Max( ( MUR - ( ( MLU + MUC ) - MUM ) ),Max( ( MLU / ( RCSe - ( MUR - DS ) ) ),MUM ) ) * Min( ( ( ( MUR - ( CS * CS ) ) * ( RRSe / ( MUC / MLU ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.34860557768924305, "obj2": 0.4642831086377866}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( BR / FirstVNF_Mem ) + Min( Min( ( BR + ( RRS * FirstVNF_Mem_Server ) ) ,PN ) ,( ( ARS + BR ) + CRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU / AMS ) + ( MRS + Const ) ) ) ) )", "choosing": "( ( RRSe * Min( RRSe ,RCSe ) ) / Min( ( MUC * RCSe ) ,( Max( ( MUM * MLU ),CS ) + Min( ( Max( ( DS / CS ),MLU ) / ( MUM + RMSe ) ) ,( RMSe + ( CS / Min( CS ,CS ) ) ) ) ) ) )", "obj1": 0.5577689243027888, "obj2": 0.260646226597249}, {"determining": "( ( ACS / ACS ) + ( ( ( ARS / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / ARS ) ) / Min( FirstVNF_CPU ,Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( ( CS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( MUC,MLU ) - ( ( RCSe * RCSe ) + DS ) ) ) ) * ( ( ( ( DS / ( MUC / DS ) ) * ( MUR - ( RCSe * CS ) ) ) / RCSe ) / ( MUM - MUC ) ) ) ) / Max( RCSe,DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6531633830271687}, {"determining": "( ( ( DDR - ( PN / ( Max( CRS,DDR ) / FirstVNF_RAM ) ) ) - FirstVNF_CPU ) + ( ( ( ACS * FirstVNF_CPU_Server ) - ( ( ARS + BR ) + RRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( ( ( Max( RCSe,( MUM + CS ) ) / Min( RRSe ,RRSe ) ) / ( DS / ( CS / MUC ) ) ) * ( ( ( ( MUR - ( DS * CS ) ) * ( DS / ( MUC / MLU ) ) ) / MUM ) / DS ) ) ) / Min( ( CS * ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) ) ,DS ) )", "obj1": 0.6215139442231076, "obj2": 0.20427651891752643}, {"determining": "( Max( MRS,FirstVNF_Mem ) + ( FirstVNF_RAM * MRS ) )", "choosing": "( Min( ( RRSe - ( ( ( DS - ( ( CS + MLU ) - DS ) ) + MUR ) + RCSe ) ) ,RMSe ) / Max( RRSe,( DS - ( CS / ( ( ( RCSe - MUM ) * DS ) + CS ) ) ) ) )", "obj1": 0.40836653386454186, "obj2": 0.4020978553664453}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ( ACS + AMS ) ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ACS ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + ( CS / ( CS / DS ) ) ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MLU / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.18326693227091634, "obj2": 0.6859750262607633}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ( MDR / PN ) - ( ARS * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( PN / DDR ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( Max( MUC,( MUC * MUR ) ) ,RRSe ) ) / ( RRSe / ( CS / ( MLU - DS ) ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.8645418326693227, "obj2": 0.04854274124057717}, {"determining": "( Min( FirstVNF_RAM_Server ,CRS ) + ( Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( PN / Max( PN,AMS ) ) ) * ( ( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ARS ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( MUC / ( CS / MLU ) ) ) * ( ( MUR * CS ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03842368450379492}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( PN - ( Const * MRS ) ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,( RMSe + ( ( RCSe / Min( CS ,Min( Min( RCSe ,RMSe ) ,Min( MUC ,MUM ) ) ) ) * CS ) ) ) / CS )", "obj1": 0.22310756972111553, "obj2": 0.6383559113136551}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server * ACS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,Min( ( ( RCSe * DS ) - Min( MUM ,Min( RMSe ,MUC ) ) ) ,RCSe ) ) - MUC ) / ( RMSe + RMSe ) ) / CS )", "obj1": 0.8326693227091634, "obj2": 0.06369272110000138}, {"determining": "( ( FirstVNF_CPU_Server * Max( MDR,Max( ( MRS / ( ( Max( PN,FirstVNF_Mem_Server ) + ARS ) * Max( RRS,( FirstVNF_RAM_Server / MDR ) ) ) ),( ( ( MRS * BR ) / ( MRS * FirstVNF_Mem ) ) + RRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( MUM * ( RMSe + RRSe ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.1852589641434263, "obj2": 0.6736651734046396}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Max( AMS,( ARS - DDR ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( ( MUM / RRSe ) * DS ) ) * ( Min( Min( MUC ,Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) * DS ) ) ) / CS )", "obj1": 0.44621513944223107, "obj2": 0.3494592275176042}, {"determining": "( ( ACS / ( FirstVNF_CPU_Server + Max( RRS,PN ) ) ) + ( ( ( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( AMS / ACS ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / Max( BR,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_CPU_Server / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( RMSe + ( ( DS + RMSe ) + Min( CS ,CS ) ) ) - MUM ) / ( ( ( Min( ( ( ( MUR / MUC ) + ( MUR + MUC ) ) * RRSe ) ,MLU ) * Min( Min( Max( MLU,MUM ) ,Max( CS,( MUM - MUM ) ) ) ,( Min( CS ,( RMSe - MUR ) ) + Min( RRSe ,( RRSe * RRSe ) ) ) ) ) - MUM ) + MUM ) )", "obj1": 0.750996015936255, "obj2": 0.10446855590232887}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( DS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2589641434262948, "obj2": 0.5945263501226855}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server / DDR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.9661354581673307, "obj2": 0.013022159733814632}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( DDR ,Min( ACS ,FirstVNF_Mem ) ) + Min( Const ,CRS ) ) + Min( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - ( Const * DDR ) ),MDR ) ,Max( ( FirstVNF_CPU_Server + BR ),RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM / AMS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / Max( MUR,CS ) ) ) * ( DS * ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ) ) * ( ( ( ( RRSe - Min( RRSe ,( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( ( MLU * MUM ),( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.3286852589641434, "obj2": 0.4896307554923697}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( ( RRS * ACS ) + ( ( RRS - Max( ACS,ACS ) ) / ARS ) ) + Min( ( AMS - BR ) ,Min( ( FirstVNF_RAM_Server + PN ) ,FirstVNF_Mem ) ) )", "choosing": "( ( RRSe * ( ( Max( MLU,RCSe ) / ( DS * ( MUR + DS ) ) ) * Max( ( MLU - DS ),( MUC * RRSe ) ) ) ) / ( Max( CS,CS ) + MUC ) )", "obj1": 0.20119521912350596, "obj2": 0.6598572221261775}, {"determining": "( ( ( Const / AMS ) + AMS ) + ( ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ACS ) )", "choosing": "( ( ( ( CS - ( ( RCSe * MLU ) * MUM ) ) / MLU ) * ( ( Max( RCSe,( MUM + ( CS / ( CS / DS ) ) ) ) / ( DS / ( MUM / MLU ) ) ) * ( ( ( ( ( MUC / MLU ) / Max( RMSe,CS ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.6655911906752706}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7231075697211156, "obj2": 0.12459659591125717}, {"determining": "( ( ( ARS * CRS ) - ( DDR - ( ( CRS * Min( Min( Min( ARS ,FirstVNF_Mem_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) ) + ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) / RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem / Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe + RRSe ) - MUC ) * MUR ) / MUM ) + ( ( MUR * MUM ) + CS ) )", "obj1": 0.8864541832669323, "obj2": 0.0411273877251646}, {"determining": "( ( ( MRS * ( Max( BR,ACS ) + ( MRS + MRS ) ) ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( ( ( DS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6772908366533864, "obj2": 0.1603268041531727}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / PN ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8784860557768924, "obj2": 0.048435590862085535}, {"determining": "( ( ( MRS * ( PN / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + ( ARS + FirstVNF_Mem ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( Max( RMSe,RMSe ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( RRSe + MUC ) ) - RRSe ) - Max( CS,( DS / Min( CS ,DS ) ) ) ) ) ) ) )", "obj1": 0.6832669322709163, "obj2": 0.1580612065739134}, {"determining": "( ( Max( ( DDR - ARS ),MRS ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + ( FirstVNF_RAM + CRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( RRSe,( RRSe - RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.39641434262948205, "obj2": 0.4059650228821945}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / MUM ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2788844621513944, "obj2": 0.5747165025748792}, {"determining": "( ( ( ( Min( ( MRS / ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_CPU_Server ,Min( ARS ,Max( AMS,FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( BR,Min( ( ( ARS * DDR ) * AMS ) ,MRS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Max( CRS,BR ) )", "choosing": "( ( MUR / Min( MUR ,MUR ) ) + Min( ( CS * Min( RMSe ,( MUR * ( RMSe + MLU ) ) ) ) ,( MUC - ( CS + ( MUR * Min( ( MUR * Max( MLU,DS ) ) ,Max( RMSe,( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.03864135116696866}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),( Max( FirstVNF_RAM_Server,ARS ) - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.5438247011952191, "obj2": 0.26299863242017557}, {"determining": "( ( Min( FirstVNF_RAM_Server ,Const ) / ARS ) + ( ( ( Min( FirstVNF_RAM_Server ,PN ) + FirstVNF_CPU_Server ) - ARS ) * Min( FirstVNF_RAM_Server ,( Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + PN ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( ( CS + Min( DS ,RCSe ) ) ,RRSe ) ) / ( MLU / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUC ) / ( ( RRSe * MLU ) + ( Max( ( MUC * CS ),MUC ) / DS ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.599601593625498, "obj2": 0.22117792616594995}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.37250996015936255, "obj2": 0.4465067126568785}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR / PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) * ( ARS / ( RRS / ( BR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( ( ( MRS - FirstVNF_CPU ) / ARS ) - Min( ( ( MDR / PN ) - CRS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),CS ) + ( Min( ( RMSe - MUC ) ,RMSe ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9342629482071713, "obj2": 0.02339197366210646}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) / ( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUM * MUM ) / ( RCSe - ( MUM + DS ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( Min( RMSe ,MUC ) * MUR ) ) / MUM ) / RCSe ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3247011952191235, "obj2": 0.4997692936811018}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Max( ( FirstVNF_Mem_Server - ( ( PN * Const ) - ARS ) ),FirstVNF_Mem ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,Max( Const,ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + MDR ) / ( AMS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) / ( ( MRS / Const ) + FirstVNF_CPU_Server ) ) * Min( DDR ,FirstVNF_CPU ) ) - ( ( ( MDR / PN ) - ( FirstVNF_RAM_Server - MRS ) ) * ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS / MUC ) + Min( ( CS * ( RCSe * ( ( RCSe / DS ) - Min( RRSe ,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / Min( CS ,DS ) ) ) * ( RCSe + Max( MLU,( Max( RMSe,DS ) / RCSe ) ) ) ) ) )", "obj1": 0.8386454183266933, "obj2": 0.06039476947527716}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ARS * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.1470751418501202}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( ARS + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( ( ( ( MDR / PN ) - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe + RMSe ) - MUC ) ),MUM ) + ( RCSe + Max( MUR,Min( MUM ,CS ) ) ) )", "obj1": 0.4800796812749004, "obj2": 0.3234222281500996}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) + ( ( Const + ( FirstVNF_Mem - Min( ( ( MDR / ( MDR * FirstVNF_CPU ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) - BR ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),( Max( MLU,MUM ) * ( ( ( ( MLU + RMSe ) * CS ) - RRSe ) + Max( ( MUR * MUC ),MUC ) ) ) ) + ( ( CS * ( RCSe * Min( RMSe ,MLU ) ) ) * ( ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) * RMSe ) ) + ( MLU - CS ) ) * ( ( ( ( ( MLU / CS ) / Max( MUM,MLU ) ) * ( MUR * MLU ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2878936053541786}, {"determining": "( ( ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Max( RRS,Const ) ) + ( Const / PN ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( CS + Min( RCSe ,DS ) ) ) ) ) * ( ( ( ( ( MUC / MLU ) / DS ) * ( Max( RRSe,MUM ) - ( MUC * MUM ) ) ) / MUM ) / MUR ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6400605458989083}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Max( RRS,Const ) ) ) ) + ( Min( PN ,PN ) - ( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / Max( ( RRSe / MLU ),( MLU / CS ) ) ) ) / ( DS / ( CS / ( MUM - MUM ) ) ) ) * ( ( ( ( ( MUC / MLU ) / DS ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7350597609561753, "obj2": 0.11920919658001265}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( RCSe ,RMSe ) / ( DS / ( CS / MLU ) ) ) * ( ( Min( ( DS / ( MUC / MLU ) ) ,( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6952191235059761, "obj2": 0.1495256155527535}, {"determining": "( ( Max( Min( ( ARS + ( Min( FirstVNF_RAM ,( CRS * DDR ) ) * RRS ) ) ,MDR ),BR ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * Min( MUC ,DS ) ) ) / Max( ( DS / MUM ),Min( CS ,( ( CS / Max( MUR,Max( MLU,( MUC * RCSe ) ) ) ) * Min( MUC ,( Min( MUC ,Min( MUM ,CS ) ) * ( RMSe - MLU ) ) ) ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7653000680829934}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( FirstVNF_CPU_Server,Max( DDR,FirstVNF_RAM_Server ) ) ) ) ) + Min( PN ,ARS ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / Max( ( RRSe - ( ( RMSe + RMSe ) - ( MUR + MUR ) ) ),MUR ) ) * ( Max( RCSe,( MUM * DS ) ) / Min( DS ,( CS / ( MLU + Max( MUM,RCSe ) ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.3545816733067729, "obj2": 0.4526018663262579}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( ( FirstVNF_RAM - Max( ( MDR / DDR ),FirstVNF_Mem ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * ( ( ( Min( RRSe ,RRSe ) + MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MUR - ( RRSe + MUR ) ) * ( DS / ( MUC / MLU ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7071713147410359, "obj2": 0.13586409199993418}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe + RMSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ),( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - DS ) ) * ( ( RRSe / ( ( CS / CS ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.5298804780876494, "obj2": 0.2791921359688791}, {"determining": "( ( FirstVNF_CPU + ( PN * Min( MRS ,MRS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ,( ( CRS / MRS ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MUM ) / MUM ) / DS ) ) ) / ( RCSe - DS ) )", "obj1": 0.3745019920318725, "obj2": 0.43051097106600705}, {"determining": "( ( ( ( PN / ( ( ARS - DDR ) * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( PN ,DDR ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),Min( ( MUC + Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9800796812749004, "obj2": 0.008182568858490063}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7151394422310757, "obj2": 0.1291061044332225}, {"determining": "( ( ( ( ( Max( BR,BR ) + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( Max( FirstVNF_Mem_Server,MRS ) + BR ) * RRS ) ) ) / FirstVNF_Mem_Server ) * Max( MDR,PN ) ) + ( MDR + FirstVNF_RAM ) )", "choosing": "( ( RRSe + Min( RCSe ,( ( Min( ( ( MLU + RMSe ) + MLU ) ,( RRSe - MUC ) ) - ( ( MUC + ( RRSe - MUR ) ) / RCSe ) ) + RRSe ) ) ) / Min( DS ,DS ) )", "obj1": 0.3645418326693227, "obj2": 0.4475354834098479}, {"determining": "( ( Max( Min( ( FirstVNF_Mem_Server - ( MRS * PN ) ) ,MDR ),( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_RAM_Server ) / Max( Const,( ACS * AMS ) ) ) ) * CRS ) / ( FirstVNF_Mem + ARS ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( DS,( ( DS - MUR ) + Max( CS,CS ) ) ) * MUM ) / DS ) ) ) / CS )", "obj1": 0.11155378486055777, "obj2": 0.8079860046179493}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( BR - ARS ) * Max( FirstVNF_Mem,ARS ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * MUC ) ) ) / MUM ) / DS ) * ( Min( Min( RRSe ,RRSe ) ,MUC ) / Max( MLU,DS ) ) ) ) / Min( MLU ,Min( Min( Max( RRSe,( Min( ( MLU - RMSe ) ,Min( MUC ,MUM ) ) + Max( ( MUM / CS ),( RRSe - RMSe ) ) ) ) ,( MUR / MUR ) ) ,MUR ) ) )", "obj1": 0.7749003984063745, "obj2": 0.08938891019753654}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( ( ( RCSe / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5896414342629482, "obj2": 0.23180711313500027}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + ( Min( FirstVNF_Mem ,AMS ) * MRS ) ) * ( ( ( FirstVNF_Mem + AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - Max( Max( Min( PN ,RRS ),( ARS - DDR ) ),( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server + ( Max( BR,FirstVNF_Mem_Server ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU + Min( RRSe ,DS ) ) + MLU ) / MUM ) / DS ) ) * RRSe ) / ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) - RMSe ) ) - MUR ) )", "obj1": 0.39243027888446214, "obj2": 0.4144654396572692}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( CRS / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( MUC - RCSe ) ) ) + MUR ) ) * ( ( MUC * Max( MUR,Min( CS ,MLU ) ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7848605577689243, "obj2": 0.08181733103500077}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RRSe * Min( RRSe ,MUC ) ) / Min( MUM ,DS ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3147410358565737, "obj2": 0.5027482280556288}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "Min( Min( ( Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) - ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUR ) * RRSe ) ) ,( ( RRSe - ( CS - CS ) ) - MUM ) ) ,( RCSe - ( ( MUM + Max( ( CS * MUR ),( ( DS * MUR ) + CS ) ) ) + ( MUM * MUR ) ) ) )", "obj1": 0.48406374501992033, "obj2": 0.32057704091721567}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_RAM_Server / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( Max( FirstVNF_CPU_Server,( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( MRS - ( PN + MDR ) ) ) ) + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( ( ( DS * DS ) + ( RCSe * MUM ) ) ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / RCSe ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.250996015936255, "obj2": 0.598958213286061}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( DDR + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( BR ,BR ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) + ( FirstVNF_RAM_Server + ( BR + ( ( ( ( FirstVNF_Mem_Server - PN ) / PN ) - FirstVNF_CPU ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS - MLU ) / CS )", "obj1": 0.7450199203187251, "obj2": 0.11245176865923623}, {"determining": "( ( ( ( PN / ( ( ( Min( Const ,BR ) / ( FirstVNF_CPU_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( PN ,FirstVNF_CPU ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( Max( CRS,( FirstVNF_Mem + ACS ) ) + ( Const - PN ) ) ) ) + ( RRS / ( AMS * ( CRS * DDR ) ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( ( MUC / ( CS / MLU ) ),( MUR - MLU ) ) / MUM ) / DS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.4442231075697211, "obj2": 0.35417325773789343}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( PN ,DDR ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( Max( MUC,( MUC * MUR ) ) ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9243027888446215, "obj2": 0.030638883333835177}, {"determining": "( ( ( ( PN / AMS ) - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( ( MLU / RRSe ) * Max( ( MUM + DS ),CS ) ) / MUR ) / DS ) ) ) + Max( MUC,( Min( RRSe ,( MUM + MLU ) ) * MUC ) ) )", "obj1": 0.4900398406374502, "obj2": 0.31056407020399246}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) / CRS ),FirstVNF_RAM ) / ARS ) ) * ( Const / CRS ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MLU + DS ) ) * ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( RRSe / MLU ) ) * ( MUR - ( MUR * MUM ) ) ) / DS ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6108169382171359}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / AMS ) ,( CRS - AMS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( RRSe * DS ) ) * ( RCSe / Min( RCSe ,MUM ) ) ) ) / MUM )", "obj1": 0.9462151394422311, "obj2": 0.022229570290838618}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe + RMSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ),( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - DS ) ) * ( ( RRSe / ( ( CS / CS ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.5199203187250996, "obj2": 0.2843457911043963}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ACS - ARS ) ) ) ) ) ,( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - ( CRS * RRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( MUM - MUR ) ),MUM ) + Min( ( CS * ( RMSe / MUM ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.7649402390438247, "obj2": 0.09966593071245385}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ( MDR + DDR ) / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( ( ( RMSe - MUC ) * ( RCSe - MUC ) ) ,Min( RRSe ,MLU ) ) + MUR ) ) + ( ( MUC * Min( MUR ,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7888446215139442, "obj2": 0.0799722566865026}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.2258191046013538}, {"determining": "( ( ( MRS * Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * ( BR - Min( FirstVNF_CPU ,Max( FirstVNF_CPU_Server,RRS ) ) ) ) ) ) + ( Max( ( FirstVNF_Mem + ARS ),( ( MDR + DDR ) / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( ( ( RMSe - MUC ) * ( DS - MUC ) ) ,( Min( RCSe ,MLU ) / MLU ) ) + MUR ) ) + ( ( MUC * Min( MUR ,MUC ) ) / ( RMSe - ( MUM * CS ) ) ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) - ( DS / ( CS * MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.24900398406374502, "obj2": 0.6073645263497292}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.798804780876494, "obj2": 0.07469291938098852}, {"determining": "( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / FirstVNF_CPU ) - FirstVNF_CPU ) ,( ACS + ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / PN ) ) ) ) ) * ( FirstVNF_Mem_Server - ( ( BR + FirstVNF_Mem ) + Min( Min( ( BR + ( AMS * FirstVNF_Mem_Server ) ) ,PN ) ,( ( ARS + BR ) + FirstVNF_Mem ) ) ) ) ) + ( ( ( FirstVNF_Mem + PN ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( MDR / PN ) ,( ( MDR / PN ) / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RRSe - Min( RRSe ,( ( ( ( DS / ( MUC + MUC ) ) * ( ( RMSe - RCSe ) - ( MUR / RMSe ) ) ) / MUM ) / DS ) ) ) / Min( MUM ,DS ) )", "obj1": 0.6294820717131474, "obj2": 0.19870707718839048}, {"determining": "( ( ( ( ARS - BR ) / ARS ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - Min( FirstVNF_RAM ,PN ) ) ,( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) * ( DS / ( CS / MLU ) ) ) * ( DS / ( MUM + ( RMSe * RCSe ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6314741035856574, "obj2": 0.19457047529574636}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.30876494023904383, "obj2": 0.5073440564950341}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Min( ( ( MDR / ( ACS / DDR ) ) - FirstVNF_CPU ) ,( MDR / PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( PN + ARS ) ) ) )", "choosing": "( ( MUR + ( MUR * CS ) ) / Min( ( RRSe + ( MUR * MLU ) ) ,DS ) )", "obj1": 0.6593625498007968, "obj2": 0.18244702387065795}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + RRS ) ) ) ) ) + Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( ACS + FirstVNF_CPU_Server ) / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( DS,( MUM + DS ) ) / Max( DS,( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( ( MUR * CS ) - MUR ) ) / MUM ) / Min( MUR ,MUR ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.30677290836653387, "obj2": 0.5138821277844913}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( MRS + Max( ACS,ARS ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( Const,( Const * Min( AMS ,BR ) ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( ( RRSe * MUR ),MUC ) - MUC ) ) ) * ( ( ( ( DS / ( MUM / MLU ) ) * ( MUR - Max( DS,CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.3844621513944223, "obj2": 0.4239294888737787}], "45": [{"determining": "( ( MDR / FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( BR - ARS ) * Max( FirstVNF_Mem,ARS ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * MUC ) ) ) / MUM ) / DS ) * ( Min( Min( RRSe ,RRSe ) ,MUC ) / Max( MLU,DS ) ) ) ) / Min( MLU ,Min( Min( Max( RRSe,( Min( ( MLU - RMSe ) ,Min( MUC ,MUM ) ) + Max( ( MUM / CS ),( RRSe - RMSe ) ) ) ) ,( MUR / MUR ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( ACS + AMS ) ) / ( ( Max( BR,FirstVNF_RAM_Server ) - ( ARS + FirstVNF_RAM ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS / Max( RCSe,Max( MUM,Max( DS,Min( ( MUC + MLU ) ,( RCSe * MUC ) ) ) ) ) ) - DS ) / Min( RRSe ,Max( ( RCSe + MUM ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + Min( Min( PN ,PN ) ,( ( ARS + PN ) + RRS ) ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( ( ( MUM - MUM ) - ( ( MLU - RRSe ) / Max( RMSe,RMSe ) ) ),( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.28884462151394424, "obj2": 0.5331289532082363}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - Max( RRS,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( CS + ( MUM + MUC ) ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2868525896414343, "obj2": 0.5690370900046309}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.798804780876494, "obj2": 0.07469291938098852}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,Min( ACS ,( ( ARS / FirstVNF_RAM ) * AMS ) ) ),( ( ( FirstVNF_RAM_Server + BR ) / FirstVNF_RAM_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( CS - CS ) / MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( ( MUM - DS ) - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.372518915128707}, {"determining": "( Min( ARS ,Max( FirstVNF_CPU,( FirstVNF_Mem_Server * Min( PN ,FirstVNF_CPU ) ) ) ) + Min( Max( ( ARS + BR ),RRS ) ,Max( ( ( ( ( FirstVNF_RAM + MDR ) / BR ) * ARS ) - FirstVNF_CPU ),MDR ) ) )", "choosing": "( Max( MUR,( Min( MLU ,Min( ( CS / MUR ) ,( Min( DS ,( RRSe / CS ) ) / ( RMSe - MLU ) ) ) ) + ( ( ( CS * DS ) / RCSe ) - ( RCSe - Min( MUC ,( ( MLU * DS ) - Min( MUC ,RCSe ) ) ) ) ) ) ) / CS )", "obj1": 0.16334661354581673, "obj2": 0.7103987625396773}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - Min( Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Min( FirstVNF_Mem ,PN ) + FirstVNF_Mem_Server ) ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) - ( DS / ( MUC / MLU ) ) ) * ( DS / ( ( MUR / DS ) - ( MLU - RCSe ) ) ) ) ) / ( DS / ( CS / MLU ) ) )", "obj1": 0.2649402390438247, "obj2": 0.5700748269302004}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server * ACS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,Min( ( ( RCSe * DS ) - Min( MUM ,Min( RMSe ,MUC ) ) ) ,RCSe ) ) - MUC ) / ( RMSe + RMSe ) ) / CS )", "obj1": 0.8326693227091634, "obj2": 0.06369272110000138}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server * MDR ) + FirstVNF_Mem ) + Const ) ) + Max( MDR,DDR ) )", "choosing": "( ( ( Max( Max( RCSe,CS ),Min( Min( ( MUM * MUR ) ,Max( ( MUR / DS ),MUM ) ) ,( MUC - ( MLU + RMSe ) ) ) ) / ( Min( RRSe ,( ( MLU + ( DS - DS ) ) + MLU ) ) - Max( CS,( MUM - ( MUM + RCSe ) ) ) ) ) - Min( ( MUM - MUR ) ,Max( RRSe,MLU ) ) ) / ( RRSe + ( ( ( ( MLU / DS ) - ( RCSe + RRSe ) ) - MUC ) - RMSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7348567073792251}, {"determining": "( Min( ( MRS / FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS / Max( ( Const / ARS ),Min( ( RRS * CRS ) ,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) * ( FirstVNF_RAM_Server + ( CRS - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM / DS ) ) / ( DS / Min( MUC ,MLU ) ) ) * ( ( ( ( DS / ( DS / RCSe ) ) * ( MUR - ( MUM * CS ) ) ) / MUM ) / DS ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.16733067729083664, "obj2": 0.6904375684273857}, {"determining": "( ( ( Min( MDR ,( ( AMS * RRS ) + Const ) ) / BR ) * Max( ( ( ARS + ( ( ( ARS / MDR ) * BR ) * PN ) ) + FirstVNF_CPU_Server ),BR ) ) / ( FirstVNF_CPU * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MLU + CS ) ,( ( RMSe * ( RRSe * DS ) ) * ( Min( MUC ,RRSe ) / DS ) ) ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7774916413894789}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( DS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2589641434262948, "obj2": 0.5945263501226855}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( RRS * CRS ) ) ) + ( DDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( ( Max( ( Max( ( CS + MUR ),MUC ) + CS ),RCSe ) / ( DS / ( CS / MLU ) ) ) * ( ( MLU / ( RMSe + ( MUR / ( RRSe * MUC ) ) ) ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.388895534855317}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6176838386721392}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( AMS / ( AMS + ARS ) ) + ( ( ( FirstVNF_Mem + ACS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( Max( ( MUR - ( ( MLU + MUC ) - MUM ) ),Max( ( MLU / ( RCSe - ( MUR - DS ) ) ),MUM ) ) * Min( ( ( ( MUR - ( CS * CS ) ) * ( RRSe / ( MUC / MLU ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.34860557768924305, "obj2": 0.4642831086377866}, {"determining": "( ( Min( ( ( ( ( AMS / CRS ) - BR ) * MDR ) / ( ( Max( ( MDR / DDR ),( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( AMS * PN ) ) ) ,ARS ) - ( Max( AMS,( Min( ( ( Const / MRS ) + ( CRS * RRS ) ) ,( Min( FirstVNF_Mem ,DDR ) + BR ) ) - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( FirstVNF_RAM_Server + ( AMS * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) )", "choosing": "( ( ( ( Min( MUC ,( DS + ( MUM + CS ) ) ) / ( MUM / ( CS / DS ) ) ) + ( ( Min( ( RCSe + ( RCSe / RMSe ) ) ,( RMSe - RMSe ) ) / CS ) / RRSe ) ) * DS ) / Min( Min( ( RMSe * DS ) ,MLU ) ,MUC ) )", "obj1": 0.5816733067729084, "obj2": 0.2371366370746841}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) + ( ( RRS + ( ARS + BR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( CRS + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ,DS ) ) ) / Min( ( ( ( ( Min( ( DS + MUR ) ,CS ) / DS ) + RMSe ) / MUR ) + DS ) ,DS ) )", "obj1": 0.4362549800796813, "obj2": 0.35676065341677726}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ACS + Min( CRS ,FirstVNF_Mem_Server ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( DDR * ( CRS + Const ) ) ) ) ) ) )", "choosing": "( Max( ( Max( MLU,Max( ( ( Max( CS,CS ) - RRSe ) / RCSe ),MUM ) ) * ( ( ( ( MUR * Max( MUR,MUC ) ) - CS ) / ( MUC + Max( ( MUR * MUC ),( DS + MUR ) ) ) ) / MUC ) ),CS ) / Min( RCSe ,DS ) )", "obj1": 0.3047808764940239, "obj2": 0.5219919476147454}, {"determining": "( ( ( ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) / ( ( ARS - DDR ) * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( PN ,DDR ) )", "choosing": "( ( MUR * CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.028238665207621014}, {"determining": "( ( Min( ( Max( Max( FirstVNF_Mem,( ( ACS - FirstVNF_RAM ) + FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_CPU,Min( RRS ,MDR ) ),FirstVNF_Mem_Server ) ) * AMS ) ,Const ) - ( Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) )", "choosing": "( ( MUC + RCSe ) / Max( RCSe,DS ) )", "obj1": 0.651394422310757, "obj2": 0.1882003708131745}, {"determining": "( Max( MDR,ARS ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM / PN ) ) ,( ( ( AMS + FirstVNF_Mem ) - FirstVNF_RAM_Server ) + RRS ) ) ) + MDR ) ) )", "choosing": "( ( MLU - MUR ) / Min( ( ( RRSe * ( ( MUM / Max( CS,RMSe ) ) * Min( MUR ,RRSe ) ) ) + ( MUC + MLU ) ) ,DS ) )", "obj1": 0.20318725099601595, "obj2": 0.6459019209670143}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR + PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( Min( DDR ,FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / Max( DS,( CS / MLU ) ) ) * ( ( ( ( ( CS + DS ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Max( RCSe,( RRSe * Max( CS,RMSe ) ) ) )", "obj1": 0.4581673306772908, "obj2": 0.3357908929378935}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) * ( ARS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( ( ( MRS - FirstVNF_CPU ) / ARS ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM * CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,MUC ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9661354581673307, "obj2": 0.010768914096179315}, {"determining": "( Max( MRS,FirstVNF_Mem ) + ( FirstVNF_RAM * MRS ) )", "choosing": "( Min( ( RRSe - ( ( ( DS - ( ( CS + MLU ) - DS ) ) + MUR ) + RCSe ) ) ,RMSe ) / Max( RRSe,( DS - ( CS / ( ( ( RCSe - MUM ) * DS ) + CS ) ) ) ) )", "obj1": 0.40836653386454186, "obj2": 0.4020978553664453}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ( ACS + AMS ) ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ACS ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + ( CS / ( CS / DS ) ) ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MLU / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.18326693227091634, "obj2": 0.6859750262607633}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe + RMSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ),( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - DS ) ) * ( ( RRSe / ( ( CS / CS ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.5298804780876494, "obj2": 0.2791921359688791}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR / PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) * ( ARS / ( RRS / ( BR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( ( ( MRS - FirstVNF_CPU ) / ARS ) - Min( ( ( MDR / PN ) - CRS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),CS ) + ( Min( ( RMSe - MUC ) ,RMSe ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9342629482071713, "obj2": 0.02339197366210646}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( PN - ( Const * MRS ) ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,( RMSe + ( ( RCSe / Min( CS ,Min( Min( RCSe ,RMSe ) ,Min( MUC ,MUM ) ) ) ) * CS ) ) ) / CS )", "obj1": 0.22310756972111553, "obj2": 0.6383559113136551}, {"determining": "( ( FirstVNF_CPU_Server * Max( MDR,Max( ( MRS / ( ( Max( PN,FirstVNF_Mem_Server ) + ARS ) * Max( RRS,( FirstVNF_RAM_Server / MDR ) ) ) ),( ( ( MRS * BR ) / ( MRS * FirstVNF_Mem ) ) + RRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( MUM * ( RMSe + RRSe ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.1852589641434263, "obj2": 0.6736651734046396}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( MRS / PN ) ,Max( FirstVNF_CPU_Server,BR ) ) ,FirstVNF_CPU_Server ) ) ) + DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - DDR ) ) ,( ACS + ( BR / MRS ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( MLU / CS ) ) ) * ( ( ( ( DS / ( RRSe / CS ) ) * ( ( MUC + RCSe ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RRSe ,RMSe ) )", "obj1": 0.6095617529880478, "obj2": 0.21420852552988665}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( Max( FirstVNF_Mem,Max( Min( Const ,DDR ),Min( MDR ,FirstVNF_Mem ) ) ),FirstVNF_CPU_Server ) ) ) ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) * ( MDR / PN ) ) ) ) ) )", "choosing": "( ( MUR - ( MUR * CS ) ) / Min( RCSe ,DS ) )", "obj1": 0.848605577689243, "obj2": 0.05837795331792367}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) / CRS ),FirstVNF_RAM ) / ARS ) ) * ( Const / CRS ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MLU + DS ) ) * ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( RRSe / MLU ) ) * ( MUR - ( MUR * MUM ) ) ) / DS ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6108169382171359}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( DDR ,Min( ACS ,FirstVNF_Mem ) ) + Min( Const ,CRS ) ) + Min( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - ( Const * DDR ) ),MDR ) ,Max( ( FirstVNF_CPU_Server + BR ),RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM / AMS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / Max( MUR,CS ) ) ) * ( DS * ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ) ) * ( ( ( ( RRSe - Min( RRSe ,( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( ( MLU * MUM ),( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.3286852589641434, "obj2": 0.4896307554923697}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( PN ,DDR ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM * CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,MUC ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( Min( BR ,Max( BR,FirstVNF_RAM_Server ) ) + ( ARS * ( Min( ( ( FirstVNF_CPU_Server - BR ) * Max( Max( RRS,PN ),FirstVNF_Mem ) ) ,AMS ) * ( FirstVNF_Mem - Min( ( ( FirstVNF_RAM - PN ) - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( CS / MLU ) ) / Min( Max( RRSe,RRSe ) ,MUC ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - MUC ) ) / MUM ) / DS ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( MUC + ( ( ( RCSe - ( MLU - RCSe ) ) / ( ( RCSe / CS ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.6733067729083665, "obj2": 0.17054142223834012}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR / PN ) - DDR ) + Min( Const ,AMS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / Max( ARS,FirstVNF_Mem ) ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUR ,Max( MUM,( Max( MUR,MUC ) * Max( MUR,MUR ) ) ) ) * MUM ),RCSe ) * DS ) / Min( RCSe ,DS ) )", "obj1": 0.4940239043824701, "obj2": 0.30386586562565876}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( Min( FirstVNF_RAM_Server ,CRS ) + ( Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( PN / Max( PN,AMS ) ) ) * ( ( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ARS ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( MUC / ( CS / MLU ) ) ) * ( ( MUR * CS ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03842368450379492}, {"determining": "( ( ( Const / AMS ) + AMS ) + ( ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ACS ) )", "choosing": "( ( ( ( CS - ( ( RCSe * MLU ) * MUM ) ) / MLU ) * ( ( Max( RCSe,( MUM + ( CS / ( CS / DS ) ) ) ) / ( DS / ( MUM / MLU ) ) ) * ( ( ( ( ( MUC / MLU ) / Max( RMSe,CS ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.6655911906752706}, {"determining": "( ( ( ARS * CRS ) - ( DDR - ( ( CRS * Min( Min( Min( ARS ,FirstVNF_Mem_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) ) + ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) / RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem / Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe + RRSe ) - MUC ) * MUR ) / MUM ) + ( ( MUR * MUM ) + CS ) )", "obj1": 0.8864541832669323, "obj2": 0.0411273877251646}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / PN ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8784860557768924, "obj2": 0.048435590862085535}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.34462151394422313, "obj2": 0.4819995931422077}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( ARS + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( ( ( ( MDR / PN ) - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + ACS ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe + RMSe ) - MUC ) ),MUM ) + ( RCSe + Max( MUR,Min( MUM ,CS ) ) ) )", "obj1": 0.4800796812749004, "obj2": 0.3234222281500996}, {"determining": "( ( ( ACS + FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( ( Min( Min( ( MUR * CS ) ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08817527252569454}, {"determining": "( ( ( RRS * ACS ) + ( ( RRS - Max( ACS,ACS ) ) / ARS ) ) + Min( ( AMS - BR ) ,Min( ( FirstVNF_RAM_Server + PN ) ,FirstVNF_Mem ) ) )", "choosing": "( ( RRSe * ( ( Max( MLU,RCSe ) / ( DS * ( MUR + DS ) ) ) * Max( ( MLU - DS ),( MUC * RRSe ) ) ) ) / ( Max( CS,CS ) + MUC ) )", "obj1": 0.20119521912350596, "obj2": 0.6598572221261775}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( MRS + Max( ACS,ARS ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( Const,( Const * Min( AMS ,BR ) ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( ( RRSe * MUR ),MUC ) - MUC ) ) ) * ( ( ( ( DS / ( MUM / MLU ) ) * ( MUR - Max( DS,CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.3844621513944223, "obj2": 0.4239294888737787}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ACS - ARS ) ) ) ) ) ,( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - ( CRS * RRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( MUM - MUR ) ),MUM ) + Min( ( CS * ( RMSe / MUM ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.7649402390438247, "obj2": 0.09966593071245385}, {"determining": "( ( ( ( Min( ( MRS / ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_CPU_Server ,Min( ARS ,Max( AMS,FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( BR,Min( ( ( ARS * DDR ) * AMS ) ,MRS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Max( CRS,BR ) )", "choosing": "( ( MUR / Min( MUR ,MUR ) ) + Min( ( CS * Min( RMSe ,( MUR * ( RMSe + MLU ) ) ) ) ,( MUC - ( CS + ( MUR * Min( ( MUR * Max( MLU,DS ) ) ,Max( RMSe,( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.03864135116696866}, {"determining": "( ( Min( FirstVNF_RAM_Server ,Const ) / ARS ) + ( ( ( Min( FirstVNF_RAM_Server ,PN ) + FirstVNF_CPU_Server ) - ARS ) * Min( FirstVNF_RAM_Server ,( Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + PN ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( ( CS + Min( DS ,RCSe ) ) ,RRSe ) ) / ( MLU / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUC ) / ( ( RRSe * MLU ) + ( Max( ( MUC * CS ),MUC ) / DS ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.599601593625498, "obj2": 0.22117792616594995}, {"determining": "( ( FirstVNF_CPU_Server * ( AMS - ( FirstVNF_Mem - RRS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Min( AMS ,( FirstVNF_Mem * RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUM ,( ( RRSe - MUC ) * ( RCSe - RCSe ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( ( ( ( MUR - ( MUR * CS ) ) * ( DS / ( MUC / MLU ) ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.37250996015936255, "obj2": 0.44615693717283567}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( BR / FirstVNF_Mem ) + Min( Min( ( BR + ( RRS * FirstVNF_Mem_Server ) ) ,PN ) ,( ( ARS + BR ) + CRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU / AMS ) + ( MRS + Const ) ) ) ) )", "choosing": "( ( RRSe * Min( RRSe ,RCSe ) ) / Min( ( MUC * RCSe ) ,( Max( ( MUM * MLU ),CS ) + Min( ( Max( ( DS / CS ),MLU ) / ( MUM + RMSe ) ) ,( RMSe + ( CS / Min( CS ,CS ) ) ) ) ) ) )", "obj1": 0.5577689243027888, "obj2": 0.260646226597249}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) / ( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUM * MUM ) / ( RCSe - ( MUM + DS ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( Min( RMSe ,MUC ) * MUR ) ) / MUM ) / RCSe ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3247011952191235, "obj2": 0.4997692936811018}, {"determining": "( ( ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Max( RRS,Const ) ) + ( Const / PN ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( CS + Min( RCSe ,DS ) ) ) ) ) * ( ( ( ( ( MUC / MLU ) / DS ) * ( Max( RRSe,MUM ) - ( MUC * MUM ) ) ) / MUM ) / MUR ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6400605458989083}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + ( Min( FirstVNF_Mem ,AMS ) * MRS ) ) * ( ( ( FirstVNF_Mem + AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - Max( Max( Min( PN ,RRS ),( ARS - DDR ) ),( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server + ( Max( BR,FirstVNF_Mem_Server ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU + Min( RRSe ,DS ) ) + MLU ) / MUM ) / DS ) ) * RRSe ) / ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) - RMSe ) ) - MUR ) )", "obj1": 0.39243027888446214, "obj2": 0.4144654396572692}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe + RMSe ) - MUC ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( DS + RMSe ) ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ),( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - DS ) ) * ( ( RRSe / ( ( CS / CS ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.5199203187250996, "obj2": 0.2843457911043963}, {"determining": "( ( ( Max( PN,( DDR * Min( Min( ( MDR + FirstVNF_RAM_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ARS - ( ACS + FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + Max( Const,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),( ( RRSe / CS ) / Max( RMSe,MUC ) ) ) + Min( ( CS * ( RCSe / ( ( ( RRSe / ( MUM * CS ) ) - RCSe ) - Max( RRSe,( DS * Min( DS ,MUC ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.17466484266570506}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.6334661354581673, "obj2": 0.1933385500160411}, {"determining": "( ( ( MRS * Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * ( BR - Min( FirstVNF_CPU ,Max( FirstVNF_CPU_Server,RRS ) ) ) ) ) ) + ( Max( ( FirstVNF_Mem + ARS ),( ( MDR + DDR ) / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( ( ( RMSe - MUC ) * ( DS - MUC ) ) ,( Min( RCSe ,MLU ) / MLU ) ) + MUR ) ) + ( ( MUC * Min( MUR ,MUC ) ) / ( RMSe - ( MUM * CS ) ) ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) - ( DS / ( CS * MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.24900398406374502, "obj2": 0.6073645263497292}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( DDR / PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RCSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.450199203187251, "obj2": 0.3479384713987212}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( PN ,DDR ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( Max( MUC,( MUC * MUR ) ) ,RRSe ) ) / ( RRSe / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.8625498007968128, "obj2": 0.04930101174005514}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) + ( ( Const + ( FirstVNF_Mem - Min( ( ( MDR / ( MDR * FirstVNF_CPU ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) - BR ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),( Max( MLU,MUM ) * ( ( ( ( MLU + RMSe ) * CS ) - RRSe ) + Max( ( MUR * MUC ),MUC ) ) ) ) + ( ( CS * ( RCSe * Min( RMSe ,MLU ) ) ) * ( ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) * RMSe ) ) + ( MLU - CS ) ) * ( ( ( ( ( MLU / CS ) / Max( MUM,MLU ) ) * ( MUR * MLU ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2878936053541786}, {"determining": "( ( Max( Min( ( ARS + ( Min( FirstVNF_RAM ,( CRS * DDR ) ) * RRS ) ) ,MDR ),BR ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * Min( MUC ,DS ) ) ) / Max( ( DS / MUM ),Min( CS ,( ( CS / Max( MUR,Max( MLU,( MUC * RCSe ) ) ) ) * Min( MUC ,( Min( MUC ,Min( MUM ,CS ) ) * ( RMSe - MLU ) ) ) ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7653000680829934}, {"determining": "( ( ACS / ( FirstVNF_CPU_Server + Max( RRS,PN ) ) ) + ( ( ( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( AMS / ACS ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / Max( BR,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_CPU_Server / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( RMSe + ( ( DS + RMSe ) + Min( CS ,CS ) ) ) - MUM ) / ( ( ( Min( ( ( ( MUR / MUC ) + ( MUR + MUC ) ) * RRSe ) ,MLU ) * Min( Min( Max( MLU,MUM ) ,Max( CS,( MUM - MUM ) ) ) ,( Min( CS ,( RMSe - MUR ) ) + Min( RRSe ,( RRSe * RRSe ) ) ) ) ) - MUM ) + MUM ) )", "obj1": 0.750996015936255, "obj2": 0.10446855590232887}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / AMS ) ,( CRS - AMS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( DDR ,PN ) )", "choosing": "( ( ( ( RRSe * RRSe ) / MLU ) * ( ( RMSe / ( RRSe * DS ) ) * ( RCSe / Min( RCSe ,MUM ) ) ) ) / MUM )", "obj1": 0.9462151394422311, "obj2": 0.022229570290838618}, {"determining": "( ( FirstVNF_CPU + ( PN * Min( MRS ,MRS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ,( ( CRS / MRS ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MUM ) / MUM ) / DS ) ) ) / ( RCSe - DS ) )", "obj1": 0.3745019920318725, "obj2": 0.43051097106600705}, {"determining": "( ( ( ( PN / AMS ) - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( ( MLU / RRSe ) * Max( ( MUM + DS ),CS ) ) / MUR ) / DS ) ) ) + Max( MUC,( Min( RRSe ,( MUM + MLU ) ) * MUC ) ) )", "obj1": 0.4900398406374502, "obj2": 0.31056407020399246}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( FirstVNF_CPU_Server,Max( DDR,FirstVNF_RAM_Server ) ) ) ) ) + Min( PN ,ARS ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / Max( ( RRSe - ( ( RMSe + RMSe ) - ( MUR + MUR ) ) ),MUR ) ) * ( Max( RCSe,( MUM * DS ) ) / Min( DS ,( CS / ( MLU + Max( MUM,RCSe ) ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.3545816733067729, "obj2": 0.4526018663262579}, {"determining": "( ( ( ( AMS * AMS ) - DDR ) - ( Min( ( ( MDR / ( ACS / DDR ) ) - FirstVNF_CPU ) ,( MDR / PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( PN + ARS ) ) ) )", "choosing": "( ( MUR + ( MUR * CS ) ) / Min( ( RRSe + ( MUR * MLU ) ) ,DS ) )", "obj1": 0.6593625498007968, "obj2": 0.18244702387065795}, {"determining": "( ( Max( Min( ( FirstVNF_Mem_Server - ( MRS * PN ) ) ,MDR ),( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_RAM_Server ) / Max( Const,( ACS * AMS ) ) ) ) * CRS ) / ( FirstVNF_Mem + ARS ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( DS,( ( DS - MUR ) + Max( CS,CS ) ) ) * MUM ) / DS ) ) ) / CS )", "obj1": 0.11155378486055777, "obj2": 0.8079860046179493}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( ( ( RCSe / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5896414342629482, "obj2": 0.23180711313500027}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ACS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) + ( Max( ( DDR - ARS ),MRS ) * ( ( ( FirstVNF_CPU_Server - MRS ) - ( CRS + FirstVNF_CPU ) ) - MRS ) ) )", "choosing": "( ( RRSe * ( ( Min( RCSe ,RMSe ) - ( DS / ( CS / MLU ) ) ) * ( ( Min( ( DS / ( DS / MLU ) ) ,( CS * RMSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.34063745019920316, "obj2": 0.4845124807564412}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RRSe * Min( RRSe ,MUC ) ) / Min( MUM ,DS ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3147410358565737, "obj2": 0.5027482280556288}, {"determining": "( ( ( ( PN / ( ( ( RRS * DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM_Server ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( RMSe - ( MUR * CS ) ) ) / ( MUR / ( DS / MLU ) ) ) / DS ) ) ) / Min( Max( RMSe,( ( ( MUM * RMSe ) * RRSe ) / ( Max( MLU,MUC ) * ( CS - ( RRSe - Max( RRSe,RRSe ) ) ) ) ) ) ,DS ) )", "obj1": 0.4820717131474104, "obj2": 0.3158761092448881}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( FirstVNF_RAM_Server / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( Max( FirstVNF_CPU_Server,( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( MRS - ( PN + MDR ) ) ) ) + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( ( ( DS * DS ) + ( RCSe * MUM ) ) ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / RCSe ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.250996015936255, "obj2": 0.598958213286061}, {"determining": "( ( ( ( FirstVNF_RAM - Min( ( RRS * Const ) ,AMS ) ) - MRS ) - ( ( MRS * AMS ) / ( FirstVNF_RAM + MDR ) ) ) + ( CRS - PN ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( RRSe - ( RRSe / Max( MUM,MUC ) ) ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( Max( ( MUC / ( MUR - CS ) ),Max( Min( RRSe ,MUC ),MUC ) ) + CS ) ) * ( ( ( ( DS / ( CS / MUR ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6772908366533864, "obj2": 0.15971620401722436}, {"determining": "( ( ( ( PN / ( ( ARS - DDR ) * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( PN ,DDR ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),Min( ( MUC + Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9800796812749004, "obj2": 0.008182568858490063}, {"determining": "( ( ( MRS * ( PN / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + ( ARS + FirstVNF_Mem ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( Max( RMSe,RMSe ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( RRSe + MUC ) ) - RRSe ) - Max( CS,( DS / Min( CS ,DS ) ) ) ) ) ) ) )", "obj1": 0.6832669322709163, "obj2": 0.1580612065739134}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ( ( ARS + BR ) + RRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( ( Min( Max( RCSe,( MUM + CS ) ) ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * CS ) ,DS ) )", "obj1": 0.6175298804780877, "obj2": 0.20661554692317677}, {"determining": "( ( ( ( PN / ( ( ARS - DDR ) * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( PN ,DDR ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),Min( ( MUC + Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9800796812749004, "obj2": 0.008182568858490063}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( CRS / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( MUC - RCSe ) ) ) + MUR ) ) * ( ( MUC * Max( MUR,Min( CS ,MLU ) ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7848605577689243, "obj2": 0.08181733103500077}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ARS * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.7051792828685259, "obj2": 0.14002345621198609}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.2258191046013538}, {"determining": "( ( ( DDR - ( PN / ( DDR * Max( FirstVNF_CPU,Max( BR,CRS ) ) ) ) ) - FirstVNF_CPU ) + ( DDR * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( Min( MUR ,MUC ) * ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) ) ) + ( MUR / MUR ) )", "obj1": 0.6912350597609562, "obj2": 0.15155598365062198}, {"determining": "( ( ( DDR - ( PN / ( Max( CRS,DDR ) / FirstVNF_RAM ) ) ) - FirstVNF_CPU ) + ( ( ( ACS * FirstVNF_CPU_Server ) - ( ( ARS + BR ) + RRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( ( ( Max( RCSe,( MUM + CS ) ) / Min( RRSe ,RRSe ) ) / ( DS / ( CS / MUC ) ) ) * ( ( ( ( MUR - ( DS * CS ) ) * ( DS / ( MUC / MLU ) ) ) / MUM ) / DS ) ) ) / Min( ( CS * ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) ) ,DS ) )", "obj1": 0.6215139442231076, "obj2": 0.20427651891752643}, {"determining": "( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / FirstVNF_CPU ) - FirstVNF_CPU ) ,( ACS + ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / PN ) ) ) ) ) * ( FirstVNF_Mem_Server - ( ( BR + FirstVNF_Mem ) + Min( Min( ( BR + ( AMS * FirstVNF_Mem_Server ) ) ,PN ) ,( ( ARS + BR ) + FirstVNF_Mem ) ) ) ) ) + ( ( ( FirstVNF_Mem + PN ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( MDR / PN ) ,( ( MDR / PN ) / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RRSe - Min( RRSe ,( ( ( ( DS / ( MUC + MUC ) ) * ( ( RMSe - RCSe ) - ( MUR / RMSe ) ) ) / MUM ) / DS ) ) ) / Min( MUM ,DS ) )", "obj1": 0.6294820717131474, "obj2": 0.19870707718839048}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7669322709163346, "obj2": 0.09257041916109349}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ARS * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.1470751418501202}, {"determining": "( ( Max( ( DDR - ARS ),MRS ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + ( FirstVNF_RAM + CRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( RRSe,( RRSe - RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.39641434262948205, "obj2": 0.4059650228821945}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + RRS ) ) ) ) ) + Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( ACS + FirstVNF_CPU_Server ) / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( DS,( MUM + DS ) ) / Max( DS,( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( ( MUR * CS ) - MUR ) ) / MUM ) / Min( MUR ,MUR ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.30677290836653387, "obj2": 0.5138821277844913}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7151394422310757, "obj2": 0.1291061044332225}, {"determining": "( ( ( ( ( Max( BR,BR ) + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( Max( FirstVNF_Mem_Server,MRS ) + BR ) * RRS ) ) ) / FirstVNF_Mem_Server ) * Max( MDR,PN ) ) + ( MDR + FirstVNF_RAM ) )", "choosing": "( ( RRSe + Min( RCSe ,( ( Min( ( ( MLU + RMSe ) + MLU ) ,( RRSe - MUC ) ) - ( ( MUC + ( RRSe - MUR ) ) / RCSe ) ) + RRSe ) ) ) / Min( DS ,DS ) )", "obj1": 0.3645418326693227, "obj2": 0.4475354834098479}], "46": [{"determining": "( Max( Min( BR ,RRS ),FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * Max( FirstVNF_RAM_Server,( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( MUM * ( CS / RMSe ) ) * ( ( ( ( RRSe / ( RRSe / MLU ) ) * ( MUR - ( RRSe * RRSe ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( BR - ARS ) * Max( FirstVNF_Mem,ARS ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * MUC ) ) ) / MUM ) / DS ) * ( Min( Min( RRSe ,RRSe ) ,MUC ) / Max( MLU,DS ) ) ) ) / Min( MLU ,Min( Min( Max( RRSe,( Min( ( MLU - RMSe ) ,Min( MUC ,MUM ) ) + Max( ( MUM / CS ),( RRSe - RMSe ) ) ) ) ,( MUR / MUR ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ACS / ( FirstVNF_CPU_Server + Max( RRS,PN ) ) ) + ( ( ( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( AMS / ACS ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / Max( BR,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_CPU_Server / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( RMSe + ( ( DS + RMSe ) + Min( CS ,CS ) ) ) - MUM ) / ( ( ( Min( ( ( ( MUR / MUC ) + ( MUR + MUC ) ) * RRSe ) ,MLU ) * Min( Min( Max( MLU,MUM ) ,Max( CS,( MUM - MUM ) ) ) ,( Min( CS ,( RMSe - MUR ) ) + Min( RRSe ,( RRSe * RRSe ) ) ) ) ) - MUM ) + MUM ) )", "obj1": 0.750996015936255, "obj2": 0.10446855590232887}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7151394422310757, "obj2": 0.1291061044332225}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server * ACS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,Min( ( ( RCSe * DS ) - Min( MUM ,Min( RMSe ,MUC ) ) ) ,RCSe ) ) - MUC ) / ( RMSe + RMSe ) ) / CS )", "obj1": 0.8326693227091634, "obj2": 0.06369272110000138}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1553784860557769, "obj2": 0.70853940165163}, {"determining": "( ( Max( CRS,DDR ) / FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,DS ) )", "obj1": 0.2848605577689243, "obj2": 0.5672396478420794}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + Min( Min( PN ,PN ) ,( ( ARS + PN ) + RRS ) ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( ( ( MUM - MUM ) - ( ( MLU - RRSe ) / Max( RMSe,RMSe ) ) ),( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.28884462151394424, "obj2": 0.5331289532082363}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,Min( ACS ,( ( ARS / FirstVNF_RAM ) * AMS ) ) ),( ( ( FirstVNF_RAM_Server + BR ) / FirstVNF_RAM_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( CS - CS ) / MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( ( MUM - DS ) - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.372518915128707}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) + ( ( RRS + ( ARS + BR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( CRS + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ,DS ) ) ) / Min( ( ( ( ( Min( ( DS + MUR ) ,CS ) / DS ) + RMSe ) / MUR ) + DS ) ,DS ) )", "obj1": 0.4362549800796813, "obj2": 0.35676065341677726}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - Min( Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Min( FirstVNF_Mem ,PN ) + FirstVNF_Mem_Server ) ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) - ( DS / ( MUC / MLU ) ) ) * ( DS / ( ( MUR / DS ) - ( MLU - RCSe ) ) ) ) ) / ( DS / ( CS / MLU ) ) )", "obj1": 0.2649402390438247, "obj2": 0.5700748269302004}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.798804780876494, "obj2": 0.07469291938098852}, {"determining": "( ( ( Min( MDR ,( ( AMS * RRS ) + Const ) ) / BR ) * Max( ( ( ARS + ( ( ( ARS / MDR ) * BR ) * PN ) ) + FirstVNF_CPU_Server ),BR ) ) / ( FirstVNF_CPU * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MLU + CS ) ,( ( RMSe * ( RRSe * DS ) ) * ( Min( MUC ,RRSe ) / DS ) ) ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7774916413894789}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( Max( FirstVNF_Mem,Max( Min( Const ,DDR ),Min( MDR ,FirstVNF_Mem ) ) ),FirstVNF_CPU_Server ) ) ) ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) * ( MDR / PN ) ) ) ) ) )", "choosing": "( ( MUR - ( MUR * CS ) ) / Min( RCSe ,DS ) )", "obj1": 0.848605577689243, "obj2": 0.05837795331792367}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( DDR / PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RCSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.450199203187251, "obj2": 0.3479384713987212}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( RRS * CRS ) ) ) + ( DDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( ( Max( ( Max( ( CS + MUR ),MUC ) + CS ),RCSe ) / ( DS / ( CS / MLU ) ) ) * ( ( MLU / ( RMSe + ( MUR / ( RRSe * MUC ) ) ) ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.388895534855317}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( AMS / ( AMS + ARS ) ) + ( ( ( FirstVNF_Mem + ACS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( Max( ( MUR - ( ( MLU + MUC ) - MUM ) ),Max( ( MLU / ( RCSe - ( MUR - DS ) ) ),MUM ) ) * Min( ( ( ( MUR - ( CS * CS ) ) * ( RRSe / ( MUC / MLU ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.34860557768924305, "obj2": 0.4642831086377866}, {"determining": "( ( Min( ( ( ( ( AMS / CRS ) - BR ) * MDR ) / ( ( Max( ( MDR / DDR ),( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( AMS * PN ) ) ) ,ARS ) - ( Max( AMS,( Min( ( ( Const / MRS ) + ( CRS * RRS ) ) ,( Min( FirstVNF_Mem ,DDR ) + BR ) ) - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( FirstVNF_RAM_Server + ( AMS * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) )", "choosing": "( ( ( ( Min( MUC ,( DS + ( MUM + CS ) ) ) / ( MUM / ( CS / DS ) ) ) + ( ( Min( ( RCSe + ( RCSe / RMSe ) ) ,( RMSe - RMSe ) ) / CS ) / RRSe ) ) * DS ) / Min( Min( ( RMSe * DS ) ,MLU ) ,MUC ) )", "obj1": 0.5816733067729084, "obj2": 0.2371366370746841}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( PN ,DDR ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( Max( MUC,( MUC * MUR ) ) ,RRSe ) ) / ( RRSe / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.8625498007968128, "obj2": 0.04930101174005514}, {"determining": "( ( FirstVNF_CPU_Server * Max( MDR,Max( ( MRS / ( ( Max( PN,FirstVNF_Mem_Server ) + ARS ) * Max( RRS,( FirstVNF_RAM_Server / MDR ) ) ) ),( ( ( MRS * BR ) / ( MRS * FirstVNF_Mem ) ) + RRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( MUM * ( RMSe + RRSe ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.1852589641434263, "obj2": 0.6736651734046396}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6176838386721392}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( DS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2589641434262948, "obj2": 0.5945263501226855}, {"determining": "( Max( MDR,ARS ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM / PN ) ) ,( ( ( AMS + FirstVNF_Mem ) - FirstVNF_RAM_Server ) + RRS ) ) ) + MDR ) ) )", "choosing": "( ( MLU - MUR ) / Min( ( ( RRSe * ( ( MUM / Max( CS,RMSe ) ) * Min( MUR ,RRSe ) ) ) + ( MUC + MLU ) ) ,DS ) )", "obj1": 0.20318725099601595, "obj2": 0.6459019209670143}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) * ( ARS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( ( ( MRS - FirstVNF_CPU ) / ARS ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM * CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,MUC ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9661354581673307, "obj2": 0.010768914096179315}, {"determining": "( Max( MRS,FirstVNF_Mem ) + ( FirstVNF_RAM * MRS ) )", "choosing": "( Min( ( RRSe - ( ( ( DS - ( ( CS + MLU ) - DS ) ) + MUR ) + RCSe ) ) ,RMSe ) / Max( RRSe,( DS - ( CS / ( ( ( RCSe - MUM ) * DS ) + CS ) ) ) ) )", "obj1": 0.40836653386454186, "obj2": 0.4020978553664453}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( BR / FirstVNF_Mem ) + Min( Min( ( BR + ( RRS * FirstVNF_Mem_Server ) ) ,PN ) ,( ( ARS + BR ) + CRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU / AMS ) + ( MRS + Const ) ) ) ) )", "choosing": "( ( RRSe * Min( RRSe ,RCSe ) ) / Min( ( MUC * RCSe ) ,( Max( ( MUM * MLU ),CS ) + Min( ( Max( ( DS / CS ),MLU ) / ( MUM + RMSe ) ) ,( RMSe + ( CS / Min( CS ,CS ) ) ) ) ) ) )", "obj1": 0.5577689243027888, "obj2": 0.260646226597249}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( PN + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( MUR / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.17729083665338646, "obj2": 0.685178412935468}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( MRS + Max( ACS,ARS ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( Const,( Const * Min( AMS ,BR ) ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( ( RRSe * MUR ),MUC ) - MUC ) ) ) * ( ( ( ( DS / ( MUM / MLU ) ) * ( MUR - Max( DS,CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.3844621513944223, "obj2": 0.4239294888737787}, {"determining": "( ( FirstVNF_CPU + ( PN * Min( MRS ,MRS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ,( ( CRS / MRS ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MUM ) / MUM ) / DS ) ) ) / ( RCSe - DS ) )", "obj1": 0.3745019920318725, "obj2": 0.43051097106600705}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR / PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) * ( ARS / ( RRS / ( BR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( ( ( MRS - FirstVNF_CPU ) / ARS ) - Min( ( ( MDR / PN ) - CRS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),CS ) + ( Min( ( RMSe - MUC ) ,RMSe ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9342629482071713, "obj2": 0.02339197366210646}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( PN - ( Const * MRS ) ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,( RMSe + ( ( RCSe / Min( CS ,Min( Min( RCSe ,RMSe ) ,Min( MUC ,MUM ) ) ) ) * CS ) ) ) / CS )", "obj1": 0.22310756972111553, "obj2": 0.6383559113136551}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( FirstVNF_CPU_Server,Max( DDR,FirstVNF_RAM_Server ) ) ) ) ) + Min( PN ,ARS ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / Max( ( RRSe - ( ( RMSe + RMSe ) - ( MUR + MUR ) ) ),MUR ) ) * ( Max( RCSe,( MUM * DS ) ) / Min( DS ,( CS / ( MLU + Max( MUM,RCSe ) ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.3545816733067729, "obj2": 0.4526018663262579}, {"determining": "( ( ( ( PN / ( ( ( RRS * DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM_Server ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( RMSe - ( MUR * CS ) ) ) / ( MUR / ( DS / MLU ) ) ) / DS ) ) ) / Min( Max( RMSe,( ( ( MUM * RMSe ) * RRSe ) / ( Max( MLU,MUC ) * ( CS - ( RRSe - Max( RRSe,RRSe ) ) ) ) ) ) ,DS ) )", "obj1": 0.4820717131474104, "obj2": 0.3158761092448881}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( MRS / PN ) ,Max( FirstVNF_CPU_Server,BR ) ) ,FirstVNF_CPU_Server ) ) ) + DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - DDR ) ) ,( ACS + ( BR / MRS ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( MLU / CS ) ) ) * ( ( ( ( DS / ( RRSe / CS ) ) * ( ( MUC + RCSe ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RRSe ,RMSe ) )", "obj1": 0.6095617529880478, "obj2": 0.21420852552988665}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RRSe * Min( RRSe ,MUC ) ) / Min( MUM ,DS ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3147410358565737, "obj2": 0.5027482280556288}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( DDR ,Min( ACS ,FirstVNF_Mem ) ) + Min( Const ,CRS ) ) + Min( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - ( Const * DDR ) ),MDR ) ,Max( ( FirstVNF_CPU_Server + BR ),RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM / AMS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / Max( MUR,CS ) ) ) * ( DS * ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ) ) * ( ( ( ( RRSe - Min( RRSe ,( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( ( MLU * MUM ),( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.3286852589641434, "obj2": 0.4896307554923697}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR / PN ) - DDR ) + Min( Const ,AMS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / Max( ARS,FirstVNF_Mem ) ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUR ,Max( MUM,( Max( MUR,MUC ) * Max( MUR,MUR ) ) ) ) * MUM ),RCSe ) * DS ) / Min( RCSe ,DS ) )", "obj1": 0.4940239043824701, "obj2": 0.30386586562565876}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( ( AMS * AMS ) - DDR ) - ( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUR - ( MUR * CS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6454183266932271, "obj2": 0.18859222961123337}, {"determining": "( Max( RRS,PN ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RMSe - MLU ) + MLU ) - ( MLU + ( DS * CS ) ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.16533864541832669, "obj2": 0.6959519436139923}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + ( Min( FirstVNF_Mem ,AMS ) * MRS ) ) * ( ( ( FirstVNF_Mem + AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - Max( Max( Min( PN ,RRS ),( ARS - DDR ) ),( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server + ( Max( BR,FirstVNF_Mem_Server ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU + Min( RRSe ,DS ) ) + MLU ) / MUM ) / DS ) ) * RRSe ) / ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) - RMSe ) ) - MUR ) )", "obj1": 0.39243027888446214, "obj2": 0.4144654396572692}, {"determining": "( Min( FirstVNF_RAM_Server ,CRS ) + ( Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( PN / Max( PN,AMS ) ) ) * ( ( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ARS ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( MUC / ( CS / MLU ) ) ) * ( ( MUR * CS ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03842368450379492}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ARS * ( FirstVNF_RAM_Server + ( Min( ( ( MDR / FirstVNF_RAM ) - Min( PN ,FirstVNF_Mem_Server ) ) ,( ACS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * Min( RRSe ,Max( ( RCSe + MUM ),MUM ) ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * ( MUR + RRSe ) ) - Max( RMSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.651394422310757, "obj2": 0.18053000443971748}, {"determining": "( ( ( Const / AMS ) + AMS ) + ( ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ACS ) )", "choosing": "( ( ( ( CS - ( ( RCSe * MLU ) * MUM ) ) / MLU ) * ( ( Max( RCSe,( MUM + ( CS / ( CS / DS ) ) ) ) / ( DS / ( MUM / MLU ) ) ) * ( ( ( ( ( MUC / MLU ) / Max( RMSe,CS ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.6655911906752706}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + RRS ) ) ) ) ) + Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( ACS + FirstVNF_CPU_Server ) / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( DS,( MUM + DS ) ) / Max( DS,( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( ( MUR * CS ) - MUR ) ) / MUM ) / Min( MUR ,MUR ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.30677290836653387, "obj2": 0.5138821277844913}, {"determining": "( ( ( ARS * CRS ) - ( DDR - ( ( CRS * Min( Min( Min( ARS ,FirstVNF_Mem_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) ) + ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) / RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem / Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe + RRSe ) - MUC ) * MUR ) / MUM ) + ( ( MUR * MUM ) + CS ) )", "obj1": 0.8864541832669323, "obj2": 0.0411273877251646}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.34462151394422313, "obj2": 0.4819995931422077}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( Max( CS,( ( ( MUM * RMSe ) * RRSe ) / RMSe ) ) ,DS ) )", "obj1": 0.4701195219123506, "obj2": 0.3233359520190856}, {"determining": "( ( Max( ( DDR - ARS ),MRS ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + ( FirstVNF_RAM + CRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( RRSe,( RRSe - RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.39641434262948205, "obj2": 0.4059650228821945}, {"determining": "( ( ( RRS * ACS ) + ( ( RRS - Max( ACS,ACS ) ) / ARS ) ) + Min( ( AMS - BR ) ,Min( ( FirstVNF_RAM_Server + PN ) ,FirstVNF_Mem ) ) )", "choosing": "( ( RRSe * ( ( Max( MLU,RCSe ) / ( DS * ( MUR + DS ) ) ) * Max( ( MLU - DS ),( MUC * RRSe ) ) ) ) / ( Max( CS,CS ) + MUC ) )", "obj1": 0.20119521912350596, "obj2": 0.6598572221261775}, {"determining": "( ( ( ( Min( ( MRS / ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_CPU_Server ,Min( ARS ,Max( AMS,FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( BR,Min( ( ( ARS * DDR ) * AMS ) ,MRS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Max( CRS,BR ) )", "choosing": "( ( MUR / Min( MUR ,MUR ) ) + Min( ( CS * Min( RMSe ,( MUR * ( RMSe + MLU ) ) ) ) ,( MUC - ( CS + ( MUR * Min( ( MUR * Max( MLU,DS ) ) ,Max( RMSe,( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.03864135116696866}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( PN ,DDR ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM * CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,MUC ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( ( Min( FirstVNF_RAM_Server ,Const ) / ARS ) + ( ( ( Min( FirstVNF_RAM_Server ,PN ) + FirstVNF_CPU_Server ) - ARS ) * Min( FirstVNF_RAM_Server ,( Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + PN ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( ( CS + Min( DS ,RCSe ) ) ,RRSe ) ) / ( MLU / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUC ) / ( ( RRSe * MLU ) + ( Max( ( MUC * CS ),MUC ) / DS ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.599601593625498, "obj2": 0.22117792616594995}, {"determining": "( Max( Const,BR ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( MRS + Max( ACS,CRS ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( DS / ( CS / MLU ) ) / Max( RCSe,( MUM + ( CS / Min( CS ,DS ) ) ) ) ) * ( Max( CS,( MUR + CS ) ) + RMSe ) ) ) / ( ( MLU - MLU ) - RCSe ) )", "obj1": 0.3705179282868526, "obj2": 0.4431400260106638}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) / ( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUM * MUM ) / ( RCSe - ( MUM + DS ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( Min( RMSe ,MUC ) * MUR ) ) / MUM ) / RCSe ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3247011952191235, "obj2": 0.4997692936811018}, {"determining": "( ( ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Max( RRS,Const ) ) + ( Const / PN ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( CS + Min( RCSe ,DS ) ) ) ) ) * ( ( ( ( ( MUC / MLU ) / DS ) * ( Max( RRSe,MUM ) - ( MUC * MUM ) ) ) / MUM ) / MUR ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6400605458989083}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( MDR,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem - FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( ( ( RRSe + Min( ( MUM / DS ) ,MLU ) ) * ( Min( DS ,DS ) * RCSe ) ) * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( MLU / CS ) ) ) * ( ( ( ( RRSe / ( CS / RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.30278884462151395, "obj2": 0.5286777317938932}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( ( ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) / ( ( ARS - DDR ) * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + PN )", "choosing": "( ( MUR * CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( ( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.028238665207621014}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.6334661354581673, "obj2": 0.1933385500160411}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR + PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( Min( DDR ,FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / Max( DS,( CS / MLU ) ) ) * ( ( ( ( ( CS + DS ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Max( RCSe,( RRSe * Max( CS,RMSe ) ) ) )", "obj1": 0.4581673306772908, "obj2": 0.3357908929378935}, {"determining": "( ( ( MRS * Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * ( BR - Min( FirstVNF_CPU ,Max( FirstVNF_CPU_Server,RRS ) ) ) ) ) ) + ( Max( ( FirstVNF_Mem + ARS ),( ( MDR + DDR ) / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( ( ( RMSe - MUC ) * ( DS - MUC ) ) ,( Min( RCSe ,MLU ) / MLU ) ) + MUR ) ) + ( ( MUC * Min( MUR ,MUC ) ) / ( RMSe - ( MUM * CS ) ) ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) - ( DS / ( CS * MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.24900398406374502, "obj2": 0.6073645263497292}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( CRS / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( MUC - RCSe ) ) ) + MUR ) ) * ( ( MUC * Max( MUR,Min( CS ,MLU ) ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7848605577689243, "obj2": 0.08181733103500077}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ARS * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.6972111553784861, "obj2": 0.1470751418501202}, {"determining": "( ( ( ( ( Max( BR,BR ) + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( Max( FirstVNF_Mem_Server,MRS ) + BR ) * RRS ) ) ) / FirstVNF_Mem_Server ) * Max( MDR,PN ) ) + ( MDR + FirstVNF_RAM ) )", "choosing": "( ( RRSe + Min( RCSe ,( ( Min( ( ( MLU + RMSe ) + MLU ) ,( RRSe - MUC ) ) - ( ( MUC + ( RRSe - MUR ) ) / RCSe ) ) + RRSe ) ) ) / Min( DS ,DS ) )", "obj1": 0.3645418326693227, "obj2": 0.4475354834098479}, {"determining": "( ( ( DDR - ( PN / ( DDR * Max( FirstVNF_CPU,Max( BR,CRS ) ) ) ) ) - FirstVNF_CPU ) + ( DDR * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( Min( MUR ,MUC ) * ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) ) ) + ( MUR / MUR ) )", "obj1": 0.6912350597609562, "obj2": 0.15155598365062198}, {"determining": "( ( Max( Min( ( ARS + ( Min( FirstVNF_RAM ,( CRS * DDR ) ) * RRS ) ) ,MDR ),BR ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * Min( MUC ,DS ) ) ) / Max( ( DS / MUM ),Min( CS ,( ( CS / Max( MUR,Max( MLU,( MUC * RCSe ) ) ) ) * Min( MUC ,( Min( MUC ,Min( MUM ,CS ) ) * ( RMSe - MLU ) ) ) ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7653000680829934}, {"determining": "( ( ( ( PN / AMS ) - ( ( CRS * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / ( ( FirstVNF_Mem - RRS ) + MRS ) ) ) ) + ( RRS + BR ) )", "choosing": "( Min( ( CS * ( RCSe * ( ( ( RCSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( ( RMSe + RMSe ) * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( DS / ( CS / MUM ) ) ) * ( ( ( ( MLU / RRSe ) * Max( ( MUM + DS ),CS ) ) / MUR ) / DS ) ) ) + Max( MUC,( Min( RRSe ,( MUM + MLU ) ) * MUC ) ) )", "obj1": 0.4900398406374502, "obj2": 0.31056407020399246}, {"determining": "( ( ( Max( PN,( DDR * Min( Min( ( MDR + FirstVNF_RAM_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ARS - ( ACS + FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + Max( Const,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),( ( RRSe / CS ) / Max( RMSe,MUC ) ) ) + Min( ( CS * ( RCSe / ( ( ( RRSe / ( MUM * CS ) ) - RCSe ) - Max( RRSe,( DS * Min( DS ,MUC ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.17466484266570506}, {"determining": "( ( Max( Min( ( FirstVNF_Mem_Server - ( MRS * PN ) ) ,MDR ),( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_RAM_Server ) / Max( Const,( ACS * AMS ) ) ) ) * CRS ) / ( FirstVNF_Mem + ARS ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( DS,( ( DS - MUR ) + Max( CS,CS ) ) ) * MUM ) / DS ) ) ) / CS )", "obj1": 0.11155378486055777, "obj2": 0.8079860046179493}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( ( ( RCSe / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5896414342629482, "obj2": 0.23180711313500027}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ACS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) + ( Max( ( DDR - ARS ),MRS ) * ( ( ( FirstVNF_CPU_Server - MRS ) - ( CRS + FirstVNF_CPU ) ) - MRS ) ) )", "choosing": "( ( RRSe * ( ( Min( RCSe ,RMSe ) - ( DS / ( CS / MLU ) ) ) * ( ( Min( ( DS / ( DS / MLU ) ) ,( CS * RMSe ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.34063745019920316, "obj2": 0.4845124807564412}, {"determining": "( Min( BR ,Max( BR,FirstVNF_RAM_Server ) ) + ( ARS * ( Min( ( ( FirstVNF_CPU_Server - BR ) * Max( Max( RRS,PN ),FirstVNF_Mem ) ) ,AMS ) * ( FirstVNF_Mem - Min( ( ( FirstVNF_RAM - PN ) - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( CS / MLU ) ) / Min( Max( RRSe,RRSe ) ,MUC ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - MUC ) ) / MUM ) / DS ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( MUC + ( ( ( RCSe - ( MLU - RCSe ) ) / ( ( RCSe / CS ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.6733067729083665, "obj2": 0.17054142223834012}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / PN ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8784860557768924, "obj2": 0.048435590862085535}, {"determining": "( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / FirstVNF_CPU ) - FirstVNF_CPU ) ,( ACS + ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / PN ) ) ) ) ) * ( FirstVNF_Mem_Server - ( ( BR + FirstVNF_Mem ) + Min( Min( ( BR + ( AMS * FirstVNF_Mem_Server ) ) ,PN ) ,( ( ARS + BR ) + FirstVNF_Mem ) ) ) ) ) + ( ( ( FirstVNF_Mem + PN ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( MDR / PN ) ,( ( MDR / PN ) / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RRSe - Min( RRSe ,( ( ( ( DS / ( MUC + MUC ) ) * ( ( RMSe - RCSe ) - ( MUR / RMSe ) ) ) / MUM ) / DS ) ) ) / Min( MUM ,DS ) )", "obj1": 0.6294820717131474, "obj2": 0.19870707718839048}, {"determining": "( Min( ( MRS / FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS / Max( ( Const / ARS ),Min( ( RRS * CRS ) ,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) * ( FirstVNF_RAM_Server + ( CRS - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM / DS ) ) / ( DS / Min( MUC ,MLU ) ) ) * ( ( ( ( DS / ( DS / RCSe ) ) * ( MUR - ( MUM * CS ) ) ) / MUM ) / DS ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.16733067729083664, "obj2": 0.6904375684273857}, {"determining": "( ( ( ( FirstVNF_RAM - Min( ( RRS * Const ) ,AMS ) ) - MRS ) - ( ( MRS * AMS ) / ( FirstVNF_RAM + MDR ) ) ) + ( CRS - PN ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( RRSe - ( RRSe / Max( MUM,MUC ) ) ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( Max( ( MUC / ( MUR - CS ) ),Max( Min( RRSe ,MUC ),MUC ) ) + CS ) ) * ( ( ( ( DS / ( CS / MUR ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6772908366533864, "obj2": 0.15971620401722436}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server * Const ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,Min( ( ( RCSe * DS ) - Min( MUM ,( RRSe + RMSe ) ) ) ,RCSe ) ) - MUC ) / ( RMSe + RMSe ) ) / CS )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ARS * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( CS / RRSe ) ) * ( RRSe + Max( CS,RRSe ) ) ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.7051792828685259, "obj2": 0.14002345621198609}, {"determining": "( ( ( MRS * ( PN / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + ( ARS + FirstVNF_Mem ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( Max( RMSe,RMSe ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( RRSe + MUC ) ) - RRSe ) - Max( CS,( DS / Min( CS ,DS ) ) ) ) ) ) ) )", "obj1": 0.6832669322709163, "obj2": 0.1580612065739134}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ( ( ARS + BR ) + RRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( ( Min( Max( RCSe,( MUM + CS ) ) ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * CS ) ,DS ) )", "obj1": 0.6175298804780877, "obj2": 0.20661554692317677}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( BR + ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) + Min( Max( ( BR + ( FirstVNF_Mem_Server * RRS ) ),PN ) ,( ( ARS + BR ) + FirstVNF_Mem ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / ( BR + Const ) ) ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Min( CS ,DS ) / ( RRSe * Min( RRSe ,( ( ( ( ( CS / MLU ) / ( MUC / MUC ) ) * ( RCSe / CS ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7091633466135459, "obj2": 0.13673742578759418}, {"determining": "( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( MUC / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.796812749003984, "obj2": 0.07750751994302561}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ACS - ARS ) ) ) ) ) ,( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - ( CRS * RRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * ( MUM - MUR ) ),MUM ) + Min( ( CS * ( RMSe / MUM ) ) ,( ( Max( MUR,( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) ) + ( MLU - CS ) ) * ( ( RRSe / ( ( RRSe / RRSe ) - MUC ) ) - RRSe ) ) ) )", "obj1": 0.7649402390438247, "obj2": 0.09966593071245385}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.2258191046013538}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) * Min( Min( ARS ,( MDR / MDR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU ,ARS ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( Min( AMS ,RRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( Min( ( Max( ( MUR / MUM ),RRSe ) - DS ) ,MUC ) ,( ( ( ( Min( ( RRSe / RRSe ) ,MUC ) * MLU ) - CS ) + Max( MLU,( RRSe - MUM ) ) ) * ( ( ( ( RCSe / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.2552346295447776}, {"determining": "( ( ( DDR - ( PN / ( Max( CRS,DDR ) / FirstVNF_RAM ) ) ) - FirstVNF_CPU ) + ( ( ( ACS * FirstVNF_CPU_Server ) - ( ( ARS + BR ) + RRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( ( ( Max( RCSe,( MUM + CS ) ) / Min( RRSe ,RRSe ) ) / ( DS / ( CS / MUC ) ) ) * ( ( ( ( MUR - ( DS * CS ) ) * ( DS / ( MUC / MLU ) ) ) / MUM ) / DS ) ) ) / Min( ( CS * ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) ) ,DS ) )", "obj1": 0.6215139442231076, "obj2": 0.20427651891752643}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7669322709163346, "obj2": 0.09257041916109349}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) / CRS ),FirstVNF_RAM ) / ARS ) ) * ( Const / CRS ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MLU + DS ) ) * ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( RRSe / MLU ) ) * ( MUR - ( MUR * MUM ) ) ) / DS ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6108169382171359}, {"determining": "( ( ( ( PN / ( ( ARS - DDR ) * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( PN ,DDR ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),Min( ( MUC + Max( ( MUR + CS ),( MLU + MUM ) ) ) ,( ( CS * MLU ) * ( RRSe + RRSe ) ) ) ) ),MUM ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9800796812749004, "obj2": 0.008182568858490063}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ACS + Min( CRS ,FirstVNF_Mem_Server ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( DDR * ( CRS + Const ) ) ) ) ) ) )", "choosing": "( Max( ( Max( MLU,Max( ( ( Max( CS,CS ) - RRSe ) / RCSe ),MUM ) ) * ( ( ( ( MUR * Max( MUR,MUC ) ) - CS ) / ( MUC + Max( ( MUR * MUC ),( DS + MUR ) ) ) ) / MUC ) ),CS ) / Min( RCSe ,DS ) )", "obj1": 0.3047808764940239, "obj2": 0.5219919476147454}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) + ( ( Const + ( FirstVNF_Mem - Min( ( ( MDR / ( MDR * FirstVNF_CPU ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) - BR ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),( Max( MLU,MUM ) * ( ( ( ( MLU + RMSe ) * CS ) - RRSe ) + Max( ( MUR * MUC ),MUC ) ) ) ) + ( ( CS * ( RCSe * Min( RMSe ,MLU ) ) ) * ( ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) * RMSe ) ) + ( MLU - CS ) ) * ( ( ( ( ( MLU / CS ) / Max( MUM,MLU ) ) * ( MUR * MLU ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2878936053541786}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( ( ACS + FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( ( Min( Min( ( MUR * CS ) ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08817527252569454}], "47": [{"determining": "( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( BR,FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * ( MDR / PN ) ) )", "choosing": "( ( DS - ( DS / Min( RCSe ,Max( MUM,Max( Max( ( MUC * MUC ),CS ),Min( ( RRSe + MUC ) ,( RCSe * MUC ) ) ) ) ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) + MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,RRS ),FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * Max( FirstVNF_RAM_Server,( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( MUM * ( CS / RMSe ) ) * ( ( ( ( RRSe / ( RRSe / MLU ) ) * ( MUR - ( RRSe * RRSe ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( Max( CRS,DDR ) / FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,DS ) )", "obj1": 0.2848605577689243, "obj2": 0.5672396478420794}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) + ( ( Const + ( FirstVNF_Mem - Min( ( ( MDR / ( MDR * FirstVNF_CPU ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) - BR ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),( Max( MLU,MUM ) * ( ( ( ( MLU + RMSe ) * CS ) - RRSe ) + Max( ( MUR * MUC ),MUC ) ) ) ) + ( ( CS * ( RCSe * Min( RMSe ,MLU ) ) ) * ( ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) * RMSe ) ) + ( MLU - CS ) ) * ( ( ( ( ( MLU / CS ) / Max( MUM,MLU ) ) * ( MUR * MLU ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2878936053541786}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1553784860557769, "obj2": 0.70853940165163}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + Min( Min( PN ,PN ) ,( ( ARS + PN ) + RRS ) ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( ( ( MUM - MUM ) - ( ( MLU - RRSe ) / Max( RMSe,RMSe ) ) ),( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.28884462151394424, "obj2": 0.5331289532082363}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,Min( ACS ,( ( ARS / FirstVNF_RAM ) * AMS ) ) ),( ( ( FirstVNF_RAM_Server + BR ) / FirstVNF_RAM_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( CS - CS ) / MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( ( MUM - DS ) - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.372518915128707}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( DS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2589641434262948, "obj2": 0.5945263501226855}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - Min( Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Min( FirstVNF_Mem ,PN ) + FirstVNF_Mem_Server ) ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) - ( DS / ( MUC / MLU ) ) ) * ( DS / ( ( MUR / DS ) - ( MLU - RCSe ) ) ) ) ) / ( DS / ( CS / MLU ) ) )", "obj1": 0.2649402390438247, "obj2": 0.5700748269302004}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) + ( ( RRS + ( ARS + BR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( CRS + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ,DS ) ) ) / Min( ( ( ( ( Min( ( DS + MUR ) ,CS ) / DS ) + RMSe ) / MUR ) + DS ) ,DS ) )", "obj1": 0.4362549800796813, "obj2": 0.35676065341677726}, {"determining": "( ( AMS / ( AMS + ARS ) ) + ( ( ( FirstVNF_Mem + ACS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( Max( ( MUR - ( ( MLU + MUC ) - MUM ) ),Max( ( MLU / ( RCSe - ( MUR - DS ) ) ),MUM ) ) * Min( ( ( ( MUR - ( CS * CS ) ) * ( RRSe / ( MUC / MLU ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.34860557768924305, "obj2": 0.4642831086377866}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + CRS ) ) ) ) ) + ( FirstVNF_CPU * ARS ) )", "choosing": "( ( RRSe * ( Min( ( Max( MUC,DS ) * MUC ) ,MLU ) * ( Min( MLU ,MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3386454183266932, "obj2": 0.4817880667686919}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR / PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) * ( ARS / ( RRS / ( BR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( ( ( MRS - FirstVNF_CPU ) / ARS ) - Min( ( ( MDR / PN ) - CRS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),CS ) + ( Min( ( RMSe - MUC ) ,RMSe ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9342629482071713, "obj2": 0.02339197366210646}, {"determining": "( ( ( Min( MDR ,( ( AMS * RRS ) + Const ) ) / BR ) * Max( ( ( ARS + ( ( ( ARS / MDR ) * BR ) * PN ) ) + FirstVNF_CPU_Server ),BR ) ) / ( FirstVNF_CPU * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MLU + CS ) ,( ( RMSe * ( RRSe * DS ) ) * ( Min( MUC ,RRSe ) / DS ) ) ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7774916413894789}, {"determining": "( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - FirstVNF_CPU ) + ( ARS * ( FirstVNF_RAM_Server * ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * RRSe ) ) ) / MUC ) / DS ) ) ) + Min( ( MLU * ( ( ( ( ( MUM - MLU ) / ( MUR - RRSe ) ) + RMSe ) - MUR ) - MUC ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.1278116744364717}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_CPU_Server ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( RRSe / RRSe ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7450199203187251, "obj2": 0.11401265508898091}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( DDR / PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RCSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.44621513944223107, "obj2": 0.3470978434981277}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( RRS * CRS ) ) ) + ( DDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( ( Max( ( Max( ( CS + MUR ),MUC ) + CS ),RCSe ) / ( DS / ( CS / MLU ) ) ) * ( ( MLU / ( RMSe + ( MUR / ( RRSe * MUC ) ) ) ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.388895534855317}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6176838386721392}, {"determining": "( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( MDR - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( MUC / MLU ) ) * ( RRSe / ( MUR * CS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8266932270916335, "obj2": 0.06568150345047558}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( FirstVNF_CPU_Server * Max( MDR,Max( ( MRS / ( ( Max( PN,FirstVNF_Mem_Server ) + ARS ) * Max( RRS,( FirstVNF_RAM_Server / MDR ) ) ) ),( ( ( MRS * BR ) / ( MRS * FirstVNF_Mem ) ) + RRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( MUM * ( RMSe + RRSe ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.1852589641434263, "obj2": 0.6736651734046396}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR + PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( Min( DDR ,FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / Max( DS,( CS / MLU ) ) ) * ( ( ( ( ( CS + DS ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Max( RCSe,( RRSe * Max( CS,RMSe ) ) ) )", "obj1": 0.4581673306772908, "obj2": 0.3357908929378935}, {"determining": "( ( ( MRS * Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * ( BR - Min( FirstVNF_CPU ,Max( FirstVNF_CPU_Server,RRS ) ) ) ) ) ) + ( Max( ( FirstVNF_Mem + ARS ),( ( MDR + DDR ) / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( ( ( RMSe - MUC ) * ( DS - MUC ) ) ,( Min( RCSe ,MLU ) / MLU ) ) + MUR ) ) + ( ( MUC * Min( MUR ,MUC ) ) / ( RMSe - ( MUM * CS ) ) ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) - ( DS / ( CS * MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.24900398406374502, "obj2": 0.6073645263497292}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + ( ( MDR / PN ) - FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem + ( ( CRS - FirstVNF_CPU ) - Const ) ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( Min( Const ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( Min( RCSe ,( MUR + DS ) ) * MLU ) - ( ( RMSe * MLU ) / MUM ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( DS - ( RMSe / DS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8007968127490039, "obj2": 0.07401111337793972}, {"determining": "( Max( MDR,ARS ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM / PN ) ) ,( ( ( AMS + FirstVNF_Mem ) - FirstVNF_RAM_Server ) + RRS ) ) ) + MDR ) ) )", "choosing": "( ( MLU - MUR ) / Min( ( ( RRSe * ( ( MUM / Max( CS,RMSe ) ) * Min( MUR ,RRSe ) ) ) + ( MUC + MLU ) ) ,DS ) )", "obj1": 0.20318725099601595, "obj2": 0.6459019209670143}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( RRS,PN ) - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( Min( DS ,RCSe ) + ( ( CS - DS ) * MUM ) ) * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.17330677290836655, "obj2": 0.6847358921802729}, {"determining": "( ( ( ( PN / ( ( ( RRS * DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM_Server ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( RMSe - ( MUR * CS ) ) ) / ( MUR / ( DS / MLU ) ) ) / DS ) ) ) / Min( Max( RMSe,( ( ( MUM * RMSe ) * RRSe ) / ( Max( MLU,MUC ) * ( CS - ( RRSe - Max( RRSe,RRSe ) ) ) ) ) ) ,DS ) )", "obj1": 0.4820717131474104, "obj2": 0.3158761092448881}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( MRS + Max( ACS,ARS ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( Const,( Const * Min( AMS ,BR ) ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( ( RRSe * MUR ),MUC ) - MUC ) ) ) * ( ( ( ( DS / ( MUM / MLU ) ) * ( MUR - Max( DS,CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.3844621513944223, "obj2": 0.4239294888737787}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( FirstVNF_CPU + ( PN * Min( MRS ,MRS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ,( ( CRS / MRS ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MUM ) / MUM ) / DS ) ) ) / ( RCSe - DS ) )", "obj1": 0.3745019920318725, "obj2": 0.43051097106600705}, {"determining": "( ( Min( ( ( ( ( AMS / CRS ) - BR ) * MDR ) / ( ( Max( ( MDR / DDR ),( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( AMS * PN ) ) ) ,ARS ) - ( Max( AMS,( Min( ( ( Const / MRS ) + ( CRS * RRS ) ) ,( Min( FirstVNF_Mem ,DDR ) + BR ) ) - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( FirstVNF_RAM_Server + ( AMS * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) )", "choosing": "( ( ( ( Min( MUC ,( DS + ( MUM + CS ) ) ) / ( MUM / ( CS / DS ) ) ) + ( ( Min( ( RCSe + ( RCSe / RMSe ) ) ,( RMSe - RMSe ) ) / CS ) / RRSe ) ) * DS ) / Min( Min( ( RMSe * DS ) ,MLU ) ,MUC ) )", "obj1": 0.5816733067729084, "obj2": 0.2371366370746841}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( PN - ( Const * MRS ) ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,( RMSe + ( ( RCSe / Min( CS ,Min( Min( RCSe ,RMSe ) ,Min( MUC ,MUM ) ) ) ) * CS ) ) ) / CS )", "obj1": 0.22310756972111553, "obj2": 0.6383559113136551}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( FirstVNF_CPU_Server,Max( DDR,FirstVNF_RAM_Server ) ) ) ) ) + Min( PN ,ARS ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / Max( ( RRSe - ( ( RMSe + RMSe ) - ( MUR + MUR ) ) ),MUR ) ) * ( Max( RCSe,( MUM * DS ) ) / Min( DS ,( CS / ( MLU + Max( MUM,RCSe ) ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.3545816733067729, "obj2": 0.4526018663262579}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( DDR ,Min( ACS ,FirstVNF_Mem ) ) + Min( Const ,CRS ) ) + Min( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - ( Const * DDR ) ),MDR ) ,Max( ( FirstVNF_CPU_Server + BR ),RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM / AMS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / Max( MUR,CS ) ) ) * ( DS * ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ) ) * ( ( ( ( RRSe - Min( RRSe ,( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( ( MLU * MUM ),( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.3286852589641434, "obj2": 0.4896307554923697}, {"determining": "( ( ( ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) / ( ( ARS - DDR ) * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + PN )", "choosing": "( ( MUR * CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( ( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.028238665207621014}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RRSe * Min( RRSe ,MUC ) ) / Min( MUM ,DS ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3147410358565737, "obj2": 0.5027482280556288}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) / CRS ),FirstVNF_RAM ) / ARS ) ) * ( Const / CRS ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MLU + DS ) ) * ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( RRSe / MLU ) ) * ( MUR - ( MUR * MUM ) ) ) / DS ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6108169382171359}, {"determining": "( Min( BR ,Max( BR,FirstVNF_RAM_Server ) ) + ( ARS * ( Min( ( ( FirstVNF_CPU_Server - BR ) * Max( Max( RRS,PN ),FirstVNF_Mem ) ) ,AMS ) * ( FirstVNF_Mem - Min( ( ( FirstVNF_RAM - PN ) - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( CS / MLU ) ) / Min( Max( RRSe,RRSe ) ,MUC ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - MUC ) ) / MUM ) / DS ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( MUC + ( ( ( RCSe - ( MLU - RCSe ) ) / ( ( RCSe / CS ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.6733067729083665, "obj2": 0.17054142223834012}, {"determining": "( ( ACS / ( FirstVNF_CPU_Server + Max( RRS,PN ) ) ) + ( ( ( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( AMS / ACS ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / Max( BR,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_CPU_Server / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( RMSe + ( ( DS + RMSe ) + Min( CS ,CS ) ) ) - MUM ) / ( ( ( Min( ( ( ( MUR / MUC ) + ( MUR + MUC ) ) * RRSe ) ,MLU ) * Min( Min( Max( MLU,MUM ) ,Max( CS,( MUM - MUM ) ) ) ,( Min( CS ,( RMSe - MUR ) ) + Min( RRSe ,( RRSe * RRSe ) ) ) ) ) - MUM ) + MUM ) )", "obj1": 0.750996015936255, "obj2": 0.10446855590232887}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( ( AMS * AMS ) - DDR ) - ( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUR - ( MUR * CS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6454183266932271, "obj2": 0.18859222961123337}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7151394422310757, "obj2": 0.1291061044332225}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + ( Min( FirstVNF_Mem ,AMS ) * MRS ) ) * ( ( ( FirstVNF_Mem + AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - Max( Max( Min( PN ,RRS ),( ARS - DDR ) ),( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server + ( Max( BR,FirstVNF_Mem_Server ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU + Min( RRSe ,DS ) ) + MLU ) / MUM ) / DS ) ) * RRSe ) / ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) - RMSe ) ) - MUR ) )", "obj1": 0.39243027888446214, "obj2": 0.4144654396572692}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + RRS ) ) ) ) ) + Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( ACS + FirstVNF_CPU_Server ) / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( DS,( MUM + DS ) ) / Max( DS,( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( ( MUR * CS ) - MUR ) ) / MUM ) / Min( MUR ,MUR ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.30677290836653387, "obj2": 0.5138821277844913}, {"determining": "( ( ( ARS * CRS ) - ( DDR - ( ( CRS * Min( Min( Min( ARS ,FirstVNF_Mem_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) ) + ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) / RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem / Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe + RRSe ) - MUC ) * MUR ) / MUM ) + ( ( MUR * MUM ) + CS ) )", "obj1": 0.8864541832669323, "obj2": 0.0411273877251646}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( Max( FirstVNF_Mem,Max( Min( Const ,DDR ),Min( MDR ,FirstVNF_Mem ) ) ),FirstVNF_CPU_Server ) ) ) ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) * ( MDR / PN ) ) ) ) ) )", "choosing": "( ( MUR - ( MUR * CS ) ) / Min( RCSe ,DS ) )", "obj1": 0.848605577689243, "obj2": 0.05837795331792367}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR / PN ) - DDR ) + Min( Const ,AMS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / Max( ARS,FirstVNF_Mem ) ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUR ,Max( MUM,( Max( MUR,MUC ) * Max( MUR,MUR ) ) ) ) * MUM ),RCSe ) * DS ) / Min( RCSe ,DS ) )", "obj1": 0.4940239043824701, "obj2": 0.30386586562565876}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / PN ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8784860557768924, "obj2": 0.048435590862085535}, {"determining": "( ( ( Max( PN,( DDR * Min( Min( ( MDR + FirstVNF_RAM_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ARS - ( ACS + FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + Max( Const,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),( ( RRSe / CS ) / Max( RMSe,MUC ) ) ) + Min( ( CS * ( RCSe / ( ( ( RRSe / ( MUM * CS ) ) - RCSe ) - Max( RRSe,( DS * Min( DS ,MUC ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.17466484266570506}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( Max( CS,( ( ( MUM * RMSe ) * RRSe ) / RMSe ) ) ,DS ) )", "obj1": 0.4701195219123506, "obj2": 0.3233359520190856}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem * BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,( ARS * FirstVNF_CPU ) ) + Min( Const ,ACS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( ( Min( Min( FirstVNF_Mem ,ACS ) ,DDR ) + Min( Const ,CRS ) ) + ARS ) / ( FirstVNF_RAM_Server / AMS ) ) * ( ( PN / FirstVNF_Mem_Server ) + ( FirstVNF_Mem - Min( ( ( PN / MDR ) - ( Max( AMS,FirstVNF_RAM_Server ) - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( RCSe ,DS ) / ( Max( RMSe,DS ) / RCSe ) )", "obj1": 0.7589641434262948, "obj2": 0.0974988199875881}, {"determining": "( ( ( ( Min( ( MRS / ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_CPU_Server ,Min( ARS ,Max( AMS,FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( BR,Min( ( ( ARS * DDR ) * AMS ) ,MRS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Max( CRS,BR ) )", "choosing": "( ( MUR / Min( MUR ,MUR ) ) + Min( ( CS * Min( RMSe ,( MUR * ( RMSe + MLU ) ) ) ) ,( MUC - ( CS + ( MUR * Min( ( MUR * Max( MLU,DS ) ) ,Max( RMSe,( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.03864135116696866}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server + MDR ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( RRSe / ( RRSe / MLU ) ) * ( MUR - ( MUR * RRSe ) ) ) / MUM ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( ( RRSe / RRSe ) ,RRSe ) * MLU ) - CS ) ) * ( ( ( ( RCSe / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.547808764940239, "obj2": 0.26223530377951665}, {"determining": "( Max( Const,BR ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( MRS + Max( ACS,CRS ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( DS / ( CS / MLU ) ) / Max( RCSe,( MUM + ( CS / Min( CS ,DS ) ) ) ) ) * ( Max( CS,( MUR + CS ) ) + RMSe ) ) ) / ( ( MLU - MLU ) - RCSe ) )", "obj1": 0.3705179282868526, "obj2": 0.4431400260106638}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) / ( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUM * MUM ) / ( RCSe - ( MUM + DS ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( Min( RMSe ,MUC ) * MUR ) ) / MUM ) / RCSe ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3247011952191235, "obj2": 0.4997692936811018}, {"determining": "( ( ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Max( RRS,Const ) ) + ( Const / PN ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( CS + Min( RCSe ,DS ) ) ) ) ) * ( ( ( ( ( MUC / MLU ) / DS ) * ( Max( RRSe,MUM ) - ( MUC * MUM ) ) ) / MUM ) / MUR ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6400605458989083}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( MDR,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem - FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( ( ( RRSe + Min( ( MUM / DS ) ,MLU ) ) * ( Min( DS ,DS ) * RCSe ) ) * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( MLU / CS ) ) ) * ( ( ( ( RRSe / ( CS / RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.30278884462151395, "obj2": 0.5286777317938932}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( PN ,DDR ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM * CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,MUC ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( CRS / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( MUC - RCSe ) ) ) + MUR ) ) * ( ( MUC * Max( MUR,Min( CS ,MLU ) ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7848605577689243, "obj2": 0.08181733103500077}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( MRS / PN ) ,Max( FirstVNF_CPU_Server,BR ) ) ,FirstVNF_CPU_Server ) ) ) + DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - DDR ) ) ,( ACS + ( BR / MRS ) ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( MLU / CS ) ) ) * ( ( ( ( DS / ( RRSe / CS ) ) * ( ( MUC + RCSe ) - MUR ) ) / MUM ) / DS ) ) ) / Min( RRSe ,RMSe ) )", "obj1": 0.6095617529880478, "obj2": 0.21420852552988665}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.6334661354581673, "obj2": 0.1933385500160411}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( PN ,DDR ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( Max( MUC,( MUC * MUR ) ) ,RRSe ) ) / ( RRSe / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.8625498007968128, "obj2": 0.04930101174005514}, {"determining": "( ( ( Const / AMS ) + AMS ) + ( ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ACS ) )", "choosing": "( ( ( ( CS - ( ( RCSe * MLU ) * MUM ) ) / MLU ) * ( ( Max( RCSe,( MUM + ( CS / ( CS / DS ) ) ) ) / ( DS / ( MUM / MLU ) ) ) * ( ( ( ( ( MUC / MLU ) / Max( RMSe,CS ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.6655911906752706}, {"determining": "( ( ( ( ( Max( BR,BR ) + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( Max( FirstVNF_Mem_Server,MRS ) + BR ) * RRS ) ) ) / FirstVNF_Mem_Server ) * Max( MDR,PN ) ) + ( MDR + FirstVNF_RAM ) )", "choosing": "( ( RRSe + Min( RCSe ,( ( Min( ( ( MLU + RMSe ) + MLU ) ,( RRSe - MUC ) ) - ( ( MUC + ( RRSe - MUR ) ) / RCSe ) ) + RRSe ) ) ) / Min( DS ,DS ) )", "obj1": 0.3645418326693227, "obj2": 0.4475354834098479}, {"determining": "( ( Max( Min( ( ARS + ( Min( FirstVNF_RAM ,( CRS * DDR ) ) * RRS ) ) ,MDR ),BR ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * Min( MUC ,DS ) ) ) / Max( ( DS / MUM ),Min( CS ,( ( CS / Max( MUR,Max( MLU,( MUC * RCSe ) ) ) ) * Min( MUC ,( Min( MUC ,Min( MUM ,CS ) ) * ( RMSe - MLU ) ) ) ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7653000680829934}, {"determining": "( ( Max( ( DDR - ARS ),MRS ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + ( FirstVNF_RAM + CRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( RRSe,( RRSe - RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.39641434262948205, "obj2": 0.4059650228821945}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( ( DDR - ( PN / ( ( Max( FirstVNF_Mem,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR * PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( MRS - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( Max( CS,( ( ( ( RRSe + MLU ) * MUC ) * RRSe ) / RMSe ) ) ,DS ) )", "obj1": 0.4900398406374502, "obj2": 0.3087576633754218}, {"determining": "( ( Max( Min( ( FirstVNF_Mem_Server - ( MRS * PN ) ) ,MDR ),( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_RAM_Server ) / Max( Const,( ACS * AMS ) ) ) ) * CRS ) / ( FirstVNF_Mem + ARS ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( DS,( ( DS - MUR ) + Max( CS,CS ) ) ) * MUM ) / DS ) ) ) / CS )", "obj1": 0.11155378486055777, "obj2": 0.8079860046179493}, {"determining": "( Max( MRS,FirstVNF_Mem ) + ( FirstVNF_RAM * MRS ) )", "choosing": "( Min( ( RRSe - ( ( ( DS - ( ( CS + MLU ) - DS ) ) + MUR ) + RCSe ) ) ,RMSe ) / Max( RRSe,( DS - ( CS / ( ( ( RCSe - MUM ) * DS ) + CS ) ) ) ) )", "obj1": 0.40836653386454186, "obj2": 0.4020978553664453}, {"determining": "( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / FirstVNF_CPU ) - FirstVNF_CPU ) ,( ACS + ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / PN ) ) ) ) ) * ( FirstVNF_Mem_Server - ( ( BR + FirstVNF_Mem ) + Min( Min( ( BR + ( AMS * FirstVNF_Mem_Server ) ) ,PN ) ,( ( ARS + BR ) + FirstVNF_Mem ) ) ) ) ) + ( ( ( FirstVNF_Mem + PN ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( MDR / PN ) ,( ( MDR / PN ) / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RRSe - Min( RRSe ,( ( ( ( DS / ( MUC + MUC ) ) * ( ( RMSe - RCSe ) - ( MUR / RMSe ) ) ) / MUM ) / DS ) ) ) / Min( MUM ,DS ) )", "obj1": 0.6294820717131474, "obj2": 0.19870707718839048}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( PN + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( MUR / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.16334661354581673, "obj2": 0.6992816323033625}, {"determining": "( ( ( ( FirstVNF_RAM - Min( ( RRS * Const ) ,AMS ) ) - MRS ) - ( ( MRS * AMS ) / ( FirstVNF_RAM + MDR ) ) ) + ( CRS - PN ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( RRSe - ( RRSe / Max( MUM,MUC ) ) ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( Max( ( MUC / ( MUR - CS ) ),Max( Min( RRSe ,MUC ),MUC ) ) + CS ) ) * ( ( ( ( DS / ( CS / MUR ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6772908366533864, "obj2": 0.15971620401722436}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server * ACS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,Min( ( ( RCSe * DS ) - Min( MUM ,Min( RMSe ,MUC ) ) ) ,RCSe ) ) - MUC ) / ( RMSe + RMSe ) ) / CS )", "obj1": 0.8326693227091634, "obj2": 0.06369272110000138}, {"determining": "( ( ( MRS * ( PN / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + ( ARS + FirstVNF_Mem ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( Max( RMSe,RMSe ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( RRSe + MUC ) ) - RRSe ) - Max( CS,( DS / Min( CS ,DS ) ) ) ) ) ) ) )", "obj1": 0.6832669322709163, "obj2": 0.1580612065739134}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ( ( ARS + BR ) + RRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( ( Min( Max( RCSe,( MUM + CS ) ) ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * CS ) ,DS ) )", "obj1": 0.6175298804780877, "obj2": 0.20661554692317677}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( BR + ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) + Min( Max( ( BR + ( FirstVNF_Mem_Server * RRS ) ),PN ) ,( ( ARS + BR ) + FirstVNF_Mem ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / ( BR + Const ) ) ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Min( CS ,DS ) / ( RRSe * Min( RRSe ,( ( ( ( ( CS / MLU ) / ( MUC / MUC ) ) * ( RCSe / CS ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7091633466135459, "obj2": 0.13673742578759418}, {"determining": "( ( ( RRS * ACS ) + ( ( RRS - Max( ACS,ACS ) ) / ARS ) ) + Min( ( AMS - BR ) ,Min( ( FirstVNF_RAM_Server + PN ) ,FirstVNF_Mem ) ) )", "choosing": "( ( RRSe * ( ( Max( MLU,RCSe ) / ( DS * ( MUR + DS ) ) ) * Max( ( MLU - DS ),( MUC * RRSe ) ) ) ) / ( Max( CS,CS ) + MUC ) )", "obj1": 0.20119521912350596, "obj2": 0.6598572221261775}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ACS - ARS ) ) ) ) ) ,( FirstVNF_RAM_Server + ( Min( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / ( FirstVNF_CPU - MRS ) ) - ( CRS * RRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( ( ( RMSe - MUC ) * ( DS - MUC ) ) ,Min( RRSe ,MLU ) ) + MUR ) ) + ( ( MUC * Min( MUR ,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - Max( MUC,RCSe ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8466135458167331, "obj2": 0.06242042135035422}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.2258191046013538}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) * Min( Min( ARS ,( MDR / MDR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU ,ARS ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( Min( AMS ,RRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( Min( ( Max( ( MUR / MUM ),RRSe ) - DS ) ,MUC ) ,( ( ( ( Min( ( RRSe / RRSe ) ,MUC ) * MLU ) - CS ) + Max( MLU,( RRSe - MUM ) ) ) * ( ( ( ( RCSe / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.2552346295447776}, {"determining": "( ( ( DDR - ( PN / ( Max( CRS,DDR ) / FirstVNF_RAM ) ) ) - FirstVNF_CPU ) + ( ( ( ACS * FirstVNF_CPU_Server ) - ( ( ARS + BR ) + RRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( ( ( Max( RCSe,( MUM + CS ) ) / Min( RRSe ,RRSe ) ) / ( DS / ( CS / MUC ) ) ) * ( ( ( ( MUR - ( DS * CS ) ) * ( DS / ( MUC / MLU ) ) ) / MUM ) / DS ) ) ) / Min( ( CS * ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) ) ,DS ) )", "obj1": 0.6215139442231076, "obj2": 0.20427651891752643}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server * ACS ) ) ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) - ( ( ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9900398406374502, "obj2": 0.006418821484254729}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + Min( PN ,DDR ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM * CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,MUC ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9561752988047809, "obj2": 0.017841260321917587}, {"determining": "( Min( ( MRS / FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS / Max( ( Const / ARS ),Min( ( RRS * CRS ) ,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) * ( FirstVNF_RAM_Server + ( CRS - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM / DS ) ) / ( DS / Min( MUC ,MLU ) ) ) * ( ( ( ( DS / ( DS / RCSe ) ) * ( MUR - ( MUM * CS ) ) ) / MUM ) / DS ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.16733067729083664, "obj2": 0.6904375684273857}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ACS + Min( CRS ,FirstVNF_Mem_Server ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( DDR * ( CRS + Const ) ) ) ) ) ) )", "choosing": "( Max( ( Max( MLU,Max( ( ( Max( CS,CS ) - RRSe ) / RCSe ),MUM ) ) * ( ( ( ( MUR * Max( MUR,MUC ) ) - CS ) / ( MUC + Max( ( MUR * MUC ),( DS + MUR ) ) ) ) / MUC ) ),CS ) / Min( RCSe ,DS ) )", "obj1": 0.3047808764940239, "obj2": 0.5219919476147454}, {"determining": "( ( ( DDR - ( PN / ( DDR * Max( FirstVNF_CPU,Max( BR,CRS ) ) ) ) ) - FirstVNF_CPU ) + ( DDR * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( Min( MUR ,MUC ) * ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) ) ) + ( MUR / MUR ) )", "obj1": 0.6912350597609562, "obj2": 0.15155598365062198}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( ACS + ARS ) - ARS ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) * ( ARS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( ( ( MRS - FirstVNF_CPU ) / ARS ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM * CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,MUC ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9661354581673307, "obj2": 0.010768914096179315}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( BR / FirstVNF_Mem ) + Min( Min( ( BR + ( RRS * FirstVNF_Mem_Server ) ) ,PN ) ,( ( ARS + BR ) + CRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU / AMS ) + ( MRS + Const ) ) ) ) )", "choosing": "( ( RRSe * Min( RRSe ,RCSe ) ) / Min( ( MUC * RCSe ) ,( Max( ( MUM * MLU ),CS ) + Min( ( Max( ( DS / CS ),MLU ) / ( MUM + RMSe ) ) ,( RMSe + ( CS / Min( CS ,CS ) ) ) ) ) ) )", "obj1": 0.5577689243027888, "obj2": 0.260646226597249}, {"determining": "( Min( FirstVNF_RAM_Server ,CRS ) + ( Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( PN / Max( PN,AMS ) ) ) * ( ( ( ( MDR / PN ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ARS ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( MUC / ( CS / MLU ) ) ) * ( ( MUR * CS ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9123505976095617, "obj2": 0.03842368450379492}, {"determining": "( ( Min( FirstVNF_RAM_Server ,Const ) / ARS ) + ( ( ( Min( FirstVNF_RAM_Server ,PN ) + FirstVNF_CPU_Server ) - ARS ) * Min( FirstVNF_RAM_Server ,( Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + PN ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( ( CS + Min( DS ,RCSe ) ) ,RRSe ) ) / ( MLU / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUC ) / ( ( RRSe * MLU ) + ( Max( ( MUC * CS ),MUC ) / DS ) ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.599601593625498, "obj2": 0.22117792616594995}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ARS * ( FirstVNF_RAM_Server + ( Min( ( ( MDR / FirstVNF_RAM ) - Min( PN ,FirstVNF_Mem_Server ) ) ,( ACS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * Min( RRSe ,Max( ( RCSe + MUM ),MUM ) ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * ( MUR + RRSe ) ) - Max( RMSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.651394422310757, "obj2": 0.18053000443971748}, {"determining": "( ( ( ( PN / ( DDR * Min( ( ARS + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) - ( PN / ( ( ARS - DDR ) * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ( ( ARS + BR ) + RRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( ( Min( Max( RCSe,( MUM + CS ) ) ,Min( RRSe ,RRSe ) ) / ( DS / ( RRSe + RRSe ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) * CS ) ,DS ) )", "obj1": 0.603585657370518, "obj2": 0.21860556774525636}, {"determining": "( ( ( ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) / ( ( ARS - DDR ) * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + PN )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( Max( MUC,MUC ) / CS ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( ( RRSe / RRSe ) ,MUC ) * MLU ) - CS ) ) * ( ( ( ( RCSe / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9143426294820717, "obj2": 0.03571555899652125}], "48": [{"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * ( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) / FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ARS - ARS ) * ( FirstVNF_CPU + ( ACS / ( FirstVNF_Mem / Const ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,( ( MUM * RRSe ) * RRSe ) ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / ( MLU + Min( MUR ,( CS - CS ) ) ) ) / DS ) ) ) / ( RCSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( BR,FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * ( MDR / PN ) ) )", "choosing": "( ( DS - ( DS / Min( RCSe ,Max( MUM,Max( Max( ( MUC * MUC ),CS ),Min( ( RRSe + MUC ) ,( RCSe * MUC ) ) ) ) ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) + MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( Max( CRS,DDR ) / FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,DS ) )", "obj1": 0.2848605577689243, "obj2": 0.5672396478420794}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1553784860557769, "obj2": 0.70853940165163}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + Min( Min( PN ,PN ) ,( ( ARS + PN ) + RRS ) ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( ( ( MUM - MUM ) - ( ( MLU - RRSe ) / Max( RMSe,RMSe ) ) ),( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.28884462151394424, "obj2": 0.5331289532082363}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,Min( ACS ,( ( ARS / FirstVNF_RAM ) * AMS ) ) ),( ( ( FirstVNF_RAM_Server + BR ) / FirstVNF_RAM_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( CS - CS ) / MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( ( MUM - DS ) - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.372518915128707}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) + ( ( RRS + ( ARS + BR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( CRS + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ,DS ) ) ) / Min( ( ( ( ( Min( ( DS + MUR ) ,CS ) / DS ) + RMSe ) / MUR ) + DS ) ,DS ) )", "obj1": 0.4362549800796813, "obj2": 0.35676065341677726}, {"determining": "( ( Min( ( ( ( ( AMS / CRS ) - BR ) * MDR ) / ( ( Max( ( MDR / DDR ),( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( AMS * PN ) ) ) ,ARS ) - ( Max( AMS,( Min( ( ( Const / MRS ) + ( CRS * RRS ) ) ,( Min( FirstVNF_Mem ,DDR ) + BR ) ) - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( FirstVNF_RAM_Server + ( AMS * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) )", "choosing": "( ( ( ( Min( MUC ,( DS + ( MUM + CS ) ) ) / ( MUM / ( CS / DS ) ) ) + ( ( Min( ( RCSe + ( RCSe / RMSe ) ) ,( RMSe - RMSe ) ) / CS ) / RRSe ) ) * DS ) / Min( Min( ( RMSe * DS ) ,MLU ) ,MUC ) )", "obj1": 0.5816733067729084, "obj2": 0.2371366370746841}, {"determining": "( ( ( DDR - ( PN / ( DDR * Max( FirstVNF_CPU,Max( BR,CRS ) ) ) ) ) - FirstVNF_CPU ) + ( DDR * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( Min( MUR ,MUC ) * ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) ) ) + ( MUR / MUR ) )", "obj1": 0.6912350597609562, "obj2": 0.15155598365062198}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( BR + ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) + Min( Max( ( BR + ( FirstVNF_Mem_Server * RRS ) ),PN ) ,( ( ARS + BR ) + FirstVNF_Mem ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / ( BR + Const ) ) ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Min( CS ,DS ) / ( RRSe * Min( RRSe ,( ( ( ( ( CS / MLU ) / ( MUC / MUC ) ) * ( RCSe / CS ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7091633466135459, "obj2": 0.13673742578759418}, {"determining": "( ( AMS / ( AMS + ARS ) ) + ( ( ( FirstVNF_Mem + ACS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( Max( ( MUR - ( ( MLU + MUC ) - MUM ) ),Max( ( MLU / ( RCSe - ( MUR - DS ) ) ),MUM ) ) * Min( ( ( ( MUR - ( CS * CS ) ) * ( RRSe / ( MUC / MLU ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.34860557768924305, "obj2": 0.4642831086377866}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + CRS ) ) ) ) ) + ( FirstVNF_CPU * ARS ) )", "choosing": "( ( RRSe * ( Min( ( Max( MUC,DS ) * MUC ) ,MLU ) * ( Min( MLU ,MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3386454183266932, "obj2": 0.4817880667686919}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,Min( Max( DDR,MRS ) ,FirstVNF_CPU_Server ) ) ) ) ) + Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Min( RCSe ,DS ) / ( RRSe * ( ( ( ( RMSe + MUC ) - ( MUR * CS ) ) / ( DS / ( MUR + MLU ) ) ) * ( ( MUM / ( RRSe / ( MUM * ( RCSe / RMSe ) ) ) ) / DS ) ) ) )", "obj1": 0.5298804780876494, "obj2": 0.28277930781567767}, {"determining": "( ( ( Min( MDR ,( ( AMS * RRS ) + Const ) ) / BR ) * Max( ( ( ARS + ( ( ( ARS / MDR ) * BR ) * PN ) ) + FirstVNF_CPU_Server ),BR ) ) / ( FirstVNF_CPU * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MLU + CS ) ,( ( RMSe * ( RRSe * DS ) ) * ( Min( MUC ,RRSe ) / DS ) ) ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7774916413894789}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( DS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2589641434262948, "obj2": 0.5945263501226855}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( RRS * CRS ) ) ) + ( DDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( ( Max( ( Max( ( CS + MUR ),MUC ) + CS ),RCSe ) / ( DS / ( CS / MLU ) ) ) * ( ( MLU / ( RMSe + ( MUR / ( RRSe * MUC ) ) ) ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.388895534855317}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6176838386721392}, {"determining": "( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( MDR - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( MUC / MLU ) ) * ( RRSe / ( MUR * CS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8266932270916335, "obj2": 0.06568150345047558}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( FirstVNF_CPU_Server * Max( MDR,Max( ( MRS / ( ( Max( PN,FirstVNF_Mem_Server ) + ARS ) * Max( RRS,( FirstVNF_RAM_Server / MDR ) ) ) ),( ( ( MRS * BR ) / ( MRS * FirstVNF_Mem ) ) + RRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( MUM * ( RMSe + RRSe ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.1852589641434263, "obj2": 0.6736651734046396}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( ( MRS * Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * ( BR - Min( FirstVNF_CPU ,Max( FirstVNF_CPU_Server,RRS ) ) ) ) ) ) + ( Max( ( FirstVNF_Mem + ARS ),( ( MDR + DDR ) / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( ( ( RMSe - MUC ) * ( DS - MUC ) ) ,( Min( RCSe ,MLU ) / MLU ) ) + MUR ) ) + ( ( MUC * Min( MUR ,MUC ) ) / ( RMSe - ( MUM * CS ) ) ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) - ( DS / ( CS * MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.24900398406374502, "obj2": 0.6073645263497292}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR / PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) * ( ARS / ( RRS / ( BR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( ( ( MRS - FirstVNF_CPU ) / ARS ) - Min( ( ( MDR / PN ) - CRS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),CS ) + ( Min( ( RMSe - MUC ) ,RMSe ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9342629482071713, "obj2": 0.02339197366210646}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) + ( ( Const + ( FirstVNF_Mem - Min( ( ( MDR / ( MDR * FirstVNF_CPU ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) - BR ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),( Max( MLU,MUM ) * ( ( ( ( MLU + RMSe ) * CS ) - RRSe ) + Max( ( MUR * MUC ),MUC ) ) ) ) + ( ( CS * ( RCSe * Min( RMSe ,MLU ) ) ) * ( ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) * RMSe ) ) + ( MLU - CS ) ) * ( ( ( ( ( MLU / CS ) / Max( MUM,MLU ) ) * ( MUR * MLU ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2878936053541786}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + ( ( MDR / PN ) - FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem + ( ( CRS - FirstVNF_CPU ) - Const ) ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( Min( Const ,FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( Min( RCSe ,( MUR + DS ) ) * MLU ) - ( ( RMSe * MLU ) / MUM ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( DS - ( RMSe / DS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8007968127490039, "obj2": 0.07401111337793972}, {"determining": "( Max( MRS,FirstVNF_Mem ) + ( FirstVNF_RAM * MRS ) )", "choosing": "( Min( ( RRSe - ( ( ( DS - ( ( CS + MLU ) - DS ) ) + MUR ) + RCSe ) ) ,RMSe ) / Max( RRSe,( DS - ( CS / ( ( ( RCSe - MUM ) * DS ) + CS ) ) ) ) )", "obj1": 0.40836653386454186, "obj2": 0.4020978553664453}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( RRS,PN ) - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( Min( DS ,RCSe ) + ( ( CS - DS ) * MUM ) ) * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.17330677290836655, "obj2": 0.6847358921802729}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( ACS + ARS ) - ARS ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) * ( ARS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( ( ( MRS - FirstVNF_CPU ) / ARS ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM * CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,MUC ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9661354581673307, "obj2": 0.010768914096179315}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( MRS + Max( ACS,ARS ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( Const,( Const * Min( AMS ,BR ) ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( ( RRSe * MUR ),MUC ) - MUC ) ) ) * ( ( ( ( DS / ( MUM / MLU ) ) * ( MUR - Max( DS,CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.3844621513944223, "obj2": 0.4239294888737787}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.2258191046013538}, {"determining": "( ( FirstVNF_CPU + ( PN * Min( MRS ,MRS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ,( ( CRS / MRS ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MUM ) / MUM ) / DS ) ) ) / ( RCSe - DS ) )", "obj1": 0.3745019920318725, "obj2": 0.43051097106600705}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( PN - ( Const * MRS ) ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,( RMSe + ( ( RCSe / Min( CS ,Min( Min( RCSe ,RMSe ) ,Min( MUC ,MUM ) ) ) ) * CS ) ) ) / CS )", "obj1": 0.22310756972111553, "obj2": 0.6383559113136551}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( FirstVNF_CPU_Server,Max( DDR,FirstVNF_RAM_Server ) ) ) ) ) + Min( PN ,ARS ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / Max( ( RRSe - ( ( RMSe + RMSe ) - ( MUR + MUR ) ) ),MUR ) ) * ( Max( RCSe,( MUM * DS ) ) / Min( DS ,( CS / ( MLU + Max( MUM,RCSe ) ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.3545816733067729, "obj2": 0.4526018663262579}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - Min( Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Min( FirstVNF_Mem ,PN ) + FirstVNF_Mem_Server ) ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) - ( DS / ( MUC / MLU ) ) ) * ( DS / ( ( MUR / DS ) - ( MLU - RCSe ) ) ) ) ) / ( DS / ( CS / MLU ) ) )", "obj1": 0.2649402390438247, "obj2": 0.5700748269302004}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,( FirstVNF_RAM - PN ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( ( DS / ( CS / MLU ) ) * ( MUR - ( MUR * CS ) ) ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7350597609561753, "obj2": 0.11906764272355498}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( DDR ,Min( ACS ,FirstVNF_Mem ) ) + Min( Const ,CRS ) ) + Min( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - ( Const * DDR ) ),MDR ) ,Max( ( FirstVNF_CPU_Server + BR ),RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM / AMS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / Max( MUR,CS ) ) ) * ( DS * ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ) ) * ( ( ( ( RRSe - Min( RRSe ,( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( ( MLU * MUM ),( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.3286852589641434, "obj2": 0.4896307554923697}, {"determining": "( ( ( ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) / ( ( ARS - DDR ) * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + PN )", "choosing": "( ( MUR * CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( ( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.028238665207621014}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RRSe * Min( RRSe ,MUC ) ) / Min( MUM ,DS ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3147410358565737, "obj2": 0.5027482280556288}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) / CRS ),FirstVNF_RAM ) / ARS ) ) * ( Const / CRS ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MLU + DS ) ) * ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( RRSe / MLU ) ) * ( MUR - ( MUR * MUM ) ) ) / DS ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6108169382171359}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( ( MUM + RMSe ) / MUR ) + DS ) ,DS ) )", "obj1": 0.7669322709163346, "obj2": 0.09257041916109349}, {"determining": "( ( ( Max( PN,( DDR * Min( Min( ( MDR + FirstVNF_RAM_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ARS - ( ACS + FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + Max( Const,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),( ( RRSe / CS ) / Max( RMSe,MUC ) ) ) + Min( ( CS * ( RCSe / ( ( ( RRSe / ( MUM * CS ) ) - RCSe ) - Max( RRSe,( DS * Min( DS ,MUC ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.17466484266570506}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( DDR / PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RCSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.44621513944223107, "obj2": 0.3470978434981277}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) * FirstVNF_CPU_Server ) + ( ( ( ( AMS * AMS ) - DDR ) - ( Min( ( ( AMS / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( PN / Max( PN,AMS ) ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) ) )", "choosing": "( ( ( ( CS / ( MUR / MUM ) ) / Min( RCSe ,DS ) ) * ( ( ( MUR - ( MUR * CS ) ) / ( RMSe / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.26294820717131473, "obj2": 0.5781599843798556}, {"determining": "( Min( BR ,Max( BR,FirstVNF_RAM_Server ) ) + ( ARS * ( Min( ( ( FirstVNF_CPU_Server - BR ) * Max( Max( RRS,PN ),FirstVNF_Mem ) ) ,AMS ) * ( FirstVNF_Mem - Min( ( ( FirstVNF_RAM - PN ) - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( CS / MLU ) ) / Min( Max( RRSe,RRSe ) ,MUC ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - MUC ) ) / MUM ) / DS ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( MUC + ( ( ( RCSe - ( MLU - RCSe ) ) / ( ( RCSe / CS ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.6733067729083665, "obj2": 0.17054142223834012}, {"determining": "( ( ( MDR / PN ) * ( FirstVNF_Mem_Server - ( ( BR + ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) + Min( Min( ( BR + ( FirstVNF_Mem_Server * RRS ) ) ,PN ) ,( ( ARS + BR ) + FirstVNF_Mem ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * Min( RRSe ,( ( ( ( ( CS / MLU ) / ( MUC / MUC ) ) * ( MUR - ( RRSe * CS ) ) ) / MUM ) / DS ) ) ) / Min( MUM ,DS ) )", "obj1": 0.7450199203187251, "obj2": 0.10975912539712812}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( PN + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( MUR / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.16334661354581673, "obj2": 0.6992816323033625}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7151394422310757, "obj2": 0.1291061044332225}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + ( Min( FirstVNF_Mem ,AMS ) * MRS ) ) * ( ( ( FirstVNF_Mem + AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - Max( Max( Min( PN ,RRS ),( ARS - DDR ) ),( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server + ( Max( BR,FirstVNF_Mem_Server ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU + Min( RRSe ,DS ) ) + MLU ) / MUM ) / DS ) ) * RRSe ) / ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) - RMSe ) ) - MUR ) )", "obj1": 0.39243027888446214, "obj2": 0.4144654396572692}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ARS * ( FirstVNF_RAM_Server + ( Min( ( ( MDR / FirstVNF_RAM ) - Min( PN ,FirstVNF_Mem_Server ) ) ,( ACS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * Min( RRSe ,Max( ( RCSe + MUM ),MUM ) ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * ( MUR + RRSe ) ) - Max( RMSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.651394422310757, "obj2": 0.18053000443971748}, {"determining": "( ( ( Const / AMS ) + AMS ) + ( ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ACS ) )", "choosing": "( ( ( ( CS - ( ( RCSe * MLU ) * MUM ) ) / MLU ) * ( ( Max( RCSe,( MUM + ( CS / ( CS / DS ) ) ) ) / ( DS / ( MUM / MLU ) ) ) * ( ( ( ( ( MUC / MLU ) / Max( RMSe,CS ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.6655911906752706}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + RRS ) ) ) ) ) + Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( ACS + FirstVNF_CPU_Server ) / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( DS,( MUM + DS ) ) / Max( DS,( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( ( MUR * CS ) - MUR ) ) / MUM ) / Min( MUR ,MUR ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.30677290836653387, "obj2": 0.5138821277844913}, {"determining": "( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) - FirstVNF_CPU ) + ( ARS * ( FirstVNF_RAM_Server * ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * RRSe ) ) ) / MUC ) / DS ) ) ) + Min( ( MLU * ( ( ( ( ( MUM - MLU ) / ( MUR - RRSe ) ) + RMSe ) - MUR ) - MUC ) ) ,( RMSe - ( CS + MLU ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.1278116744364717}, {"determining": "( ( ( ARS * CRS ) - ( DDR - ( ( CRS * Min( Min( Min( ARS ,FirstVNF_Mem_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) ) + ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) / RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem / Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe + RRSe ) - MUC ) * MUR ) / MUM ) + ( ( MUR * MUM ) + CS ) )", "obj1": 0.8864541832669323, "obj2": 0.0411273877251646}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR / PN ) - DDR ) + Min( Const ,AMS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / Max( ARS,FirstVNF_Mem ) ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUR ,Max( MUM,( Max( MUR,MUC ) * Max( MUR,MUR ) ) ) ) * MUM ),RCSe ) * DS ) / Min( RCSe ,DS ) )", "obj1": 0.4940239043824701, "obj2": 0.30386586562565876}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / PN ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8784860557768924, "obj2": 0.048435590862085535}, {"determining": "( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Const ,( ACS + ( MDR / PN ) ) ) ) ) * ( FirstVNF_Mem_Server - ( ( BR + ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) + Min( Min( ( BR + ( FirstVNF_Mem_Server * RRS ) ) ,PN ) ,( ( ARS + BR ) + FirstVNF_Mem ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * Min( RRSe ,( ( ( ( ( CS / MLU ) / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Max( MUC,DS ) )", "obj1": 0.7808764940239044, "obj2": 0.08677223700859069}, {"determining": "( ( Max( ( DDR - ARS ),MRS ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + ( FirstVNF_RAM + CRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( RRSe,( RRSe - RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.39641434262948205, "obj2": 0.4059650228821945}, {"determining": "( ( ( RRS * ACS ) + ( ( RRS - Max( ACS,ACS ) ) / ARS ) ) + Min( ( AMS - BR ) ,Min( ( FirstVNF_RAM_Server + PN ) ,FirstVNF_Mem ) ) )", "choosing": "( ( RRSe * ( ( Max( MLU,RCSe ) / ( DS * ( MUR + DS ) ) ) * Max( ( MLU - DS ),( MUC * RRSe ) ) ) ) / ( Max( CS,CS ) + MUC ) )", "obj1": 0.20119521912350596, "obj2": 0.6598572221261775}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( ( Min( Min( ACS ,FirstVNF_Mem ) ,PN ) + Min( Const ,CRS ) ) + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( Max( MUC,( MUC * MUR ) ) ,RRSe ) ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / DS ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7589641434262948, "obj2": 0.09694102464611455}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server + MDR ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( RRSe / ( RRSe / MLU ) ) * ( MUR - ( MUR * RRSe ) ) ) / MUM ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( ( RRSe / RRSe ) ,RRSe ) * MLU ) - CS ) ) * ( ( ( ( RCSe / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.547808764940239, "obj2": 0.26223530377951665}, {"determining": "( Max( Const,BR ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( MRS + Max( ACS,CRS ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( DS / ( CS / MLU ) ) / Max( RCSe,( MUM + ( CS / Min( CS ,DS ) ) ) ) ) * ( Max( CS,( MUR + CS ) ) + RMSe ) ) ) / ( ( MLU - MLU ) - RCSe ) )", "obj1": 0.3705179282868526, "obj2": 0.4431400260106638}, {"determining": "( ( ( ( Min( ( MRS / ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / ( ( DDR * Min( ( ACS / ACS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_CPU_Server ,Min( ARS ,Max( AMS,FirstVNF_CPU ) ) ) ) ) - DDR ) - ( Max( BR,Min( ( ( ARS * DDR ) * AMS ) ,MRS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Max( CRS,BR ) )", "choosing": "( ( MUR / Min( MUR ,MUR ) ) + Min( ( CS * Min( RMSe ,( MUR * ( RMSe + MLU ) ) ) ) ,( MUC - ( CS + ( MUR * Min( ( MUR * Max( MLU,DS ) ) ,Max( RMSe,( RCSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.03864135116696866}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) / ( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUM * MUM ) / ( RCSe - ( MUM + DS ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( Min( RMSe ,MUC ) * MUR ) ) / MUM ) / RCSe ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3247011952191235, "obj2": 0.4997692936811018}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( MDR,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem - FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( ( ( RRSe + Min( ( MUM / DS ) ,MLU ) ) * ( Min( DS ,DS ) * RCSe ) ) * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( MLU / CS ) ) ) * ( ( ( ( RRSe / ( CS / RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.30278884462151395, "obj2": 0.5286777317938932}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( ACS / ( FirstVNF_CPU_Server + Max( RRS,PN ) ) ) + ( ( ( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( AMS / ACS ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / Max( BR,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_CPU_Server / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( RMSe + ( ( DS + RMSe ) + Min( CS ,CS ) ) ) - MUM ) / ( ( ( Min( ( ( ( MUR / MUC ) + ( MUR + MUC ) ) * RRSe ) ,MLU ) * Min( Min( Max( MLU,MUM ) ,Max( CS,( MUM - MUM ) ) ) ,( Min( CS ,( RMSe - MUR ) ) + Min( RRSe ,( RRSe * RRSe ) ) ) ) ) - MUM ) + MUM ) )", "obj1": 0.750996015936255, "obj2": 0.10446855590232887}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR + PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( Min( DDR ,FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / Max( DS,( CS / MLU ) ) ) * ( ( ( ( ( CS + DS ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Max( RCSe,( RRSe * Max( CS,RMSe ) ) ) )", "obj1": 0.4581673306772908, "obj2": 0.3357908929378935}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server * ACS ) ) ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) - ( ( ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9900398406374502, "obj2": 0.006418821484254729}, {"determining": "( ( ( ( ( Max( BR,BR ) + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( Max( FirstVNF_Mem_Server,MRS ) + BR ) * RRS ) ) ) / FirstVNF_Mem_Server ) * Max( MDR,PN ) ) + ( MDR + FirstVNF_RAM ) )", "choosing": "( ( RRSe + Min( RCSe ,( ( Min( ( ( MLU + RMSe ) + MLU ) ,( RRSe - MUC ) ) - ( ( MUC + ( RRSe - MUR ) ) / RCSe ) ) + RRSe ) ) ) / Min( DS ,DS ) )", "obj1": 0.3645418326693227, "obj2": 0.4475354834098479}, {"determining": "( ( ( ( PN / ( ( ( RRS * DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM_Server ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( RMSe - ( MUR * CS ) ) ) / ( MUR / ( DS / MLU ) ) ) / DS ) ) ) / Min( Max( RMSe,( ( ( MUM * RMSe ) * RRSe ) / ( Max( MLU,MUC ) * ( CS - ( RRSe - Max( RRSe,RRSe ) ) ) ) ) ) ,DS ) )", "obj1": 0.4820717131474104, "obj2": 0.3158761092448881}, {"determining": "( ( Max( Min( ( ARS + ( Min( FirstVNF_RAM ,( CRS * DDR ) ) * RRS ) ) ,MDR ),BR ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * Min( MUC ,DS ) ) ) / Max( ( DS / MUM ),Min( CS ,( ( CS / Max( MUR,Max( MLU,( MUC * RCSe ) ) ) ) * Min( MUC ,( Min( MUC ,Min( MUM ,CS ) ) * ( RMSe - MLU ) ) ) ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7653000680829934}, {"determining": "( Min( ( MRS / FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS / Max( ( Const / ARS ),Min( ( RRS * CRS ) ,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) * ( FirstVNF_RAM_Server + ( CRS - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM / DS ) ) / ( DS / Min( MUC ,MLU ) ) ) * ( ( ( ( DS / ( DS / RCSe ) ) * ( MUR - ( MUM * CS ) ) ) / MUM ) / DS ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.16733067729083664, "obj2": 0.6904375684273857}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Max( RRS,Const ) ) + ( Const / PN ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( CS + Min( RCSe ,DS ) ) ) ) ) * ( ( ( ( ( MUC / MLU ) / DS ) * ( Max( RRSe,MUM ) - ( MUC * MUM ) ) ) / MUM ) / MUR ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6400605458989083}, {"determining": "( ( ( DDR - ( PN / ( ( Max( FirstVNF_Mem,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR * PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( MRS - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( Max( CS,( ( ( ( RRSe + MLU ) * MUC ) * RRSe ) / RMSe ) ) ,DS ) )", "obj1": 0.4900398406374502, "obj2": 0.3087576633754218}, {"determining": "( ( Max( Min( ( FirstVNF_Mem_Server - ( MRS * PN ) ) ,MDR ),( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_RAM_Server ) / Max( Const,( ACS * AMS ) ) ) ) * CRS ) / ( FirstVNF_Mem + ARS ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( DS,( ( DS - MUR ) + Max( CS,CS ) ) ) * MUM ) / DS ) ) ) / CS )", "obj1": 0.11155378486055777, "obj2": 0.8079860046179493}, {"determining": "( ( ( DDR - ( PN / ( Max( CRS,DDR ) / FirstVNF_RAM ) ) ) - FirstVNF_CPU ) + ( ( ( ACS * FirstVNF_CPU_Server ) - ( ( ARS + BR ) + RRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( ( ( Max( RCSe,( MUM + CS ) ) / Min( RRSe ,RRSe ) ) / ( DS / ( CS / MUC ) ) ) * ( ( ( ( MUR - ( DS * CS ) ) * ( DS / ( MUC / MLU ) ) ) / MUM ) / DS ) ) ) / Min( ( CS * ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) ) ,DS ) )", "obj1": 0.6215139442231076, "obj2": 0.20427651891752643}, {"determining": "( ( Max( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( MDR + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ),DDR ) - ( Max( Min( ( ( ( FirstVNF_Mem_Server - AMS ) - ARS ) - FirstVNF_RAM ) ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + RRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUM * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( MUR + ( Min( ( MLU - Min( CS ,CS ) ) ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + DS ) ,DS ) )", "obj1": 0.45617529880478086, "obj2": 0.34496869772216104}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - MRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( Max( FirstVNF_Mem_Server,CRS ) + ( DDR * Const ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( MUC / Min( ( MUR / MUC ) ,DS ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) * ( ( MUR + ( Min( ( MUR / RCSe ) ,( ( RMSe - MUM ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.6294820717131474, "obj2": 0.19520856926903848}, {"determining": "( ( ACS * Min( FirstVNF_Mem ,ACS ) ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( ARS + FirstVNF_Mem ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) * ( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( ( Min( RMSe ,MUC ) + MUR ) / RMSe ),CS ) + Min( ( CS - ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( CS,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( Max( RMSe,RMSe ) / MUM ) / DS ) ) ) )", "obj1": 0.8565737051792829, "obj2": 0.0548434714956318}, {"determining": "( ( ( ( FirstVNF_RAM - Min( ( RRS * Const ) ,AMS ) ) - MRS ) - ( ( MRS * AMS ) / ( FirstVNF_RAM + MDR ) ) ) + ( CRS - PN ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( RRSe - ( RRSe / Max( MUM,MUC ) ) ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( Max( ( MUC / ( MUR - CS ) ),Max( Min( RRSe ,MUC ),MUC ) ) + CS ) ) * ( ( ( ( DS / ( CS / MUR ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6772908366533864, "obj2": 0.15971620401722436}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server * ACS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,Min( ( ( RCSe * DS ) - Min( MUM ,Min( RMSe ,MUC ) ) ) ,RCSe ) ) - MUC ) / ( RMSe + RMSe ) ) / CS )", "obj1": 0.8326693227091634, "obj2": 0.06369272110000138}, {"determining": "( ( ( MRS * ( PN / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + ( ARS + FirstVNF_Mem ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( Max( RMSe,RMSe ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( RRSe + MUC ) ) - RRSe ) - Max( CS,( DS / Min( CS ,DS ) ) ) ) ) ) ) )", "obj1": 0.6832669322709163, "obj2": 0.1580612065739134}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ACS - ARS ) ) ) ) ) ,( FirstVNF_RAM_Server + ( Min( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / ( FirstVNF_CPU - MRS ) ) - ( CRS * RRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( ( ( RMSe - MUC ) * ( DS - MUC ) ) ,Min( RRSe ,MLU ) ) + MUR ) ) + ( ( MUC * Min( MUR ,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - Max( MUC,RCSe ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8466135458167331, "obj2": 0.06242042135035422}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( Min( FirstVNF_RAM ,RRS ),( ( Const - Min( BR ,MDR ) ) - ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + CRS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( MUC + MLU ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( Max( MUC,MLU ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7928286852589641, "obj2": 0.07965411192716688}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) * Min( Min( ARS ,( MDR / MDR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU ,ARS ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( Min( AMS ,RRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( Min( ( Max( ( MUR / MUM ),RRSe ) - DS ) ,MUC ) ,( ( ( ( Min( ( RRSe / RRSe ) ,MUC ) * MLU ) - CS ) + Max( MLU,( RRSe - MUM ) ) ) * ( ( ( ( RCSe / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.2552346295447776}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2051792828685259, "obj2": 0.6449799028343882}, {"determining": "( Max( MDR,ARS ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM / PN ) ) ,( ( ( AMS + FirstVNF_Mem ) - FirstVNF_RAM_Server ) + RRS ) ) ) + MDR ) ) )", "choosing": "( ( MLU - MUR ) / Min( ( ( RRSe * ( ( MUM / Max( CS,RMSe ) ) * Min( MUR ,RRSe ) ) ) + ( MUC + MLU ) ) ,DS ) )", "obj1": 0.20318725099601595, "obj2": 0.6459019209670143}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ACS + Min( CRS ,FirstVNF_Mem_Server ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( DDR * ( CRS + Const ) ) ) ) ) ) )", "choosing": "( Max( ( Max( MLU,Max( ( ( Max( CS,CS ) - RRSe ) / RCSe ),MUM ) ) * ( ( ( ( MUR * Max( MUR,MUC ) ) - CS ) / ( MUC + Max( ( MUR * MUC ),( DS + MUR ) ) ) ) / MUC ) ),CS ) / Min( RCSe ,DS ) )", "obj1": 0.3047808764940239, "obj2": 0.5219919476147454}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + RRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.47808764940239046, "obj2": 0.3216056761443597}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( ( AMS * AMS ) - DDR ) - ( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUR - ( MUR * CS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6454183266932271, "obj2": 0.18859222961123337}, {"determining": "( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( CRS / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( MUC - RCSe ) ) ) + MUR ) ) * ( ( MUC * Max( MUR,Min( CS ,MLU ) ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7848605577689243, "obj2": 0.08181733103500077}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( BR / FirstVNF_Mem ) + Min( Min( ( BR + ( RRS * FirstVNF_Mem_Server ) ) ,PN ) ,( ( ARS + BR ) + CRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU / AMS ) + ( MRS + Const ) ) ) ) )", "choosing": "( ( RRSe * Min( RRSe ,RCSe ) ) / Min( ( MUC * RCSe ) ,( Max( ( MUM * MLU ),CS ) + Min( ( Max( ( DS / CS ),MLU ) / ( MUM + RMSe ) ) ,( RMSe + ( CS / Min( CS ,CS ) ) ) ) ) ) )", "obj1": 0.5577689243027888, "obj2": 0.260646226597249}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( Max( CS,( ( ( MUM * RMSe ) * RRSe ) / RMSe ) ) ,DS ) )", "obj1": 0.4701195219123506, "obj2": 0.3233359520190856}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem * BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,( ARS * FirstVNF_CPU ) ) + Min( Const ,ACS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( ( Min( Min( FirstVNF_Mem ,ACS ) ,DDR ) + Min( Const ,CRS ) ) + ARS ) / ( FirstVNF_RAM_Server / AMS ) ) * ( ( PN / FirstVNF_Mem_Server ) + ( FirstVNF_Mem - Min( ( ( PN / MDR ) - ( Max( AMS,FirstVNF_RAM_Server ) - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( RCSe ,DS ) / ( Max( RMSe,DS ) / RCSe ) )", "obj1": 0.950199203187251, "obj2": 0.02134294970035996}], "49": [{"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem - Min( Max( Const,( Const * Min( AMS ,BR ) ) ) ,( MDR / PN ) ) ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,( MUM / MLU ) ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * ( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) / FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ARS - ARS ) * ( FirstVNF_CPU + ( ACS / ( FirstVNF_Mem / Const ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,( ( MUM * RRSe ) * RRSe ) ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / ( MLU + Min( MUR ,( CS - CS ) ) ) ) / DS ) ) ) / ( RCSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.2258191046013538}, {"determining": "( ( ( DDR - ( PN / ( Max( CRS,DDR ) / FirstVNF_RAM ) ) ) - FirstVNF_CPU ) + ( ( ( ACS * FirstVNF_CPU_Server ) - ( ( ARS + BR ) + RRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( ( ( Max( RCSe,( MUM + CS ) ) / Min( RRSe ,RRSe ) ) / ( DS / ( CS / MUC ) ) ) * ( ( ( ( MUR - ( DS * CS ) ) * ( DS / ( MUC / MLU ) ) ) / MUM ) / DS ) ) ) / Min( ( CS * ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) ) ,DS ) )", "obj1": 0.6215139442231076, "obj2": 0.20427651891752643}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( Max( CRS,DDR ) / FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,DS ) )", "obj1": 0.2848605577689243, "obj2": 0.5672396478420794}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1553784860557769, "obj2": 0.70853940165163}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + Min( Min( PN ,PN ) ,( ( ARS + PN ) + RRS ) ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( ( ( MUM - MUM ) - ( ( MLU - RRSe ) / Max( RMSe,RMSe ) ) ),( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.28884462151394424, "obj2": 0.5331289532082363}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,Min( ACS ,( ( ARS / FirstVNF_RAM ) * AMS ) ) ),( ( ( FirstVNF_RAM_Server + BR ) / FirstVNF_RAM_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( CS - CS ) / MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( ( MUM - DS ) - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.372518915128707}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) + ( ( RRS + ( ARS + BR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( CRS + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ,DS ) ) ) / Min( ( ( ( ( Min( ( DS + MUR ) ,CS ) / DS ) + RMSe ) / MUR ) + DS ) ,DS ) )", "obj1": 0.4362549800796813, "obj2": 0.35676065341677726}, {"determining": "( ( Min( ( ( ( ( AMS / CRS ) - BR ) * MDR ) / ( ( Max( ( MDR / DDR ),( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( AMS * PN ) ) ) ,ARS ) - ( Max( AMS,( Min( ( ( Const / MRS ) + ( CRS * RRS ) ) ,( Min( FirstVNF_Mem ,DDR ) + BR ) ) - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( FirstVNF_RAM_Server + ( AMS * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) )", "choosing": "( ( ( ( Min( MUC ,( DS + ( MUM + CS ) ) ) / ( MUM / ( CS / DS ) ) ) + ( ( Min( ( RCSe + ( RCSe / RMSe ) ) ,( RMSe - RMSe ) ) / CS ) / RRSe ) ) * DS ) / Min( Min( ( RMSe * DS ) ,MLU ) ,MUC ) )", "obj1": 0.5816733067729084, "obj2": 0.2371366370746841}, {"determining": "( ( AMS / ( AMS + ARS ) ) + ( ( ( FirstVNF_Mem + ACS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( Max( ( MUR - ( ( MLU + MUC ) - MUM ) ),Max( ( MLU / ( RCSe - ( MUR - DS ) ) ),MUM ) ) * Min( ( ( ( MUR - ( CS * CS ) ) * ( RRSe / ( MUC / MLU ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.34860557768924305, "obj2": 0.4642831086377866}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + CRS ) ) ) ) ) + ( FirstVNF_CPU * ARS ) )", "choosing": "( ( RRSe * ( Min( ( Max( MUC,DS ) * MUC ) ,MLU ) * ( Min( MLU ,MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3386454183266932, "obj2": 0.4817880667686919}, {"determining": "( ( ( Min( MDR ,( ( AMS * RRS ) + Const ) ) / BR ) * Max( ( ( ARS + ( ( ( ARS / MDR ) * BR ) * PN ) ) + FirstVNF_CPU_Server ),BR ) ) / ( FirstVNF_CPU * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MLU + CS ) ,( ( RMSe * ( RRSe * DS ) ) * ( Min( MUC ,RRSe ) / DS ) ) ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7774916413894789}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( DS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2589641434262948, "obj2": 0.5945263501226855}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / PN ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8784860557768924, "obj2": 0.048435590862085535}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( RRS * CRS ) ) ) + ( DDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( ( Max( ( Max( ( CS + MUR ),MUC ) + CS ),RCSe ) / ( DS / ( CS / MLU ) ) ) * ( ( MLU / ( RMSe + ( MUR / ( RRSe * MUC ) ) ) ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.388895534855317}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6176838386721392}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( FirstVNF_CPU_Server * Max( MDR,Max( ( MRS / ( ( Max( PN,FirstVNF_Mem_Server ) + ARS ) * Max( RRS,( FirstVNF_RAM_Server / MDR ) ) ) ),( ( ( MRS * BR ) / ( MRS * FirstVNF_Mem ) ) + RRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( MUM * ( RMSe + RRSe ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.1852589641434263, "obj2": 0.6736651734046396}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - MRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( Max( FirstVNF_Mem_Server,CRS ) + ( DDR * Const ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( MUC / Min( ( MUR / MUC ) ,DS ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) * ( ( MUR + ( Min( ( MUR / RCSe ) ,( ( RMSe - MUM ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.6294820717131474, "obj2": 0.19520856926903848}, {"determining": "( ( ( MRS * Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * ( BR - Min( FirstVNF_CPU ,Max( FirstVNF_CPU_Server,RRS ) ) ) ) ) ) + ( Max( ( FirstVNF_Mem + ARS ),( ( MDR + DDR ) / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( ( ( RMSe - MUC ) * ( DS - MUC ) ) ,( Min( RCSe ,MLU ) / MLU ) ) + MUR ) ) + ( ( MUC * Min( MUR ,MUC ) ) / ( RMSe - ( MUM * CS ) ) ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) - ( DS / ( CS * MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.24900398406374502, "obj2": 0.6073645263497292}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR / PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) * ( ARS / ( RRS / ( BR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( ( ( MRS - FirstVNF_CPU ) / ARS ) - Min( ( ( MDR / PN ) - CRS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),CS ) + ( Min( ( RMSe - MUC ) ,RMSe ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9342629482071713, "obj2": 0.02339197366210646}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) + ( ( Const + ( FirstVNF_Mem - Min( ( ( MDR / ( MDR * FirstVNF_CPU ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) - BR ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),( Max( MLU,MUM ) * ( ( ( ( MLU + RMSe ) * CS ) - RRSe ) + Max( ( MUR * MUC ),MUC ) ) ) ) + ( ( CS * ( RCSe * Min( RMSe ,MLU ) ) ) * ( ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) * RMSe ) ) + ( MLU - CS ) ) * ( ( ( ( ( MLU / CS ) / Max( MUM,MLU ) ) * ( MUR * MLU ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2878936053541786}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( ( AMS * AMS ) - DDR ) - ( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUR - ( MUR * CS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6454183266932271, "obj2": 0.18859222961123337}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7151394422310757, "obj2": 0.1291061044332225}, {"determining": "( Max( MRS,FirstVNF_Mem ) + ( FirstVNF_RAM * MRS ) )", "choosing": "( Min( ( RRSe - ( ( ( DS - ( ( CS + MLU ) - DS ) ) + MUR ) + RCSe ) ) ,RMSe ) / Max( RRSe,( DS - ( CS / ( ( ( RCSe - MUM ) * DS ) + CS ) ) ) ) )", "obj1": 0.40836653386454186, "obj2": 0.4020978553664453}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,Min( Max( DDR,MRS ) ,FirstVNF_CPU_Server ) ) ) ) ) + Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Min( RCSe ,DS ) / ( RRSe * ( ( ( ( RMSe + MUC ) - ( MUR * CS ) ) / ( DS / ( MUR + MLU ) ) ) * ( ( MUM / ( RRSe / ( MUM * ( RCSe / RMSe ) ) ) ) / DS ) ) ) )", "obj1": 0.5298804780876494, "obj2": 0.28277930781567767}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( RRS,PN ) - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( Min( DS ,RCSe ) + ( ( CS - DS ) * MUM ) ) * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.17330677290836655, "obj2": 0.6847358921802729}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( MRS + Max( ACS,ARS ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( Const,( Const * Min( AMS ,BR ) ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( ( RRSe * MUR ),MUC ) - MUC ) ) ) * ( ( ( ( DS / ( MUM / MLU ) ) * ( MUR - Max( DS,CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.3844621513944223, "obj2": 0.4239294888737787}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( FirstVNF_CPU + ( PN * Min( MRS ,MRS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ,( ( CRS / MRS ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MUM ) / MUM ) / DS ) ) ) / ( RCSe - DS ) )", "obj1": 0.3745019920318725, "obj2": 0.43051097106600705}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( PN - ( Const * MRS ) ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,( RMSe + ( ( RCSe / Min( CS ,Min( Min( RCSe ,RMSe ) ,Min( MUC ,MUM ) ) ) ) * CS ) ) ) / CS )", "obj1": 0.22310756972111553, "obj2": 0.6383559113136551}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( FirstVNF_CPU_Server,Max( DDR,FirstVNF_RAM_Server ) ) ) ) ) + Min( PN ,ARS ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / Max( ( RRSe - ( ( RMSe + RMSe ) - ( MUR + MUR ) ) ),MUR ) ) * ( Max( RCSe,( MUM * DS ) ) / Min( DS ,( CS / ( MLU + Max( MUM,RCSe ) ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.3545816733067729, "obj2": 0.4526018663262579}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( ARS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ARS * ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( BR - AMS ) ,MRS ) ) ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( RRSe * DS ),( ( ( DS / ( CS / MLU ) ) / Min( Min( RRSe ,RRSe ) ,MUC ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - MUC ) ) / MUM ) / DS ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( MUC + ( ( ( RCSe - ( MLU - RCSe ) ) / MUC ) / RRSe ) ) ) ) )", "obj1": 0.7051792828685259, "obj2": 0.15066099178148784}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - Min( Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Min( FirstVNF_Mem ,PN ) + FirstVNF_Mem_Server ) ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) - ( DS / ( MUC / MLU ) ) ) * ( DS / ( ( MUR / DS ) - ( MLU - RCSe ) ) ) ) ) / ( DS / ( CS / MLU ) ) )", "obj1": 0.2649402390438247, "obj2": 0.5700748269302004}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ACS - ARS ) ) ) ) ) ,( FirstVNF_RAM_Server + ( Min( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / ( FirstVNF_CPU - MRS ) ) - ( CRS * RRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( ( ( RMSe - MUC ) * ( DS - MUC ) ) ,Min( RRSe ,MLU ) ) + MUR ) ) + ( ( MUC * Min( MUR ,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - Max( MUC,RCSe ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8466135458167331, "obj2": 0.06242042135035422}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( DDR ,Min( ACS ,FirstVNF_Mem ) ) + Min( Const ,CRS ) ) + Min( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - ( Const * DDR ) ),MDR ) ,Max( ( FirstVNF_CPU_Server + BR ),RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM / AMS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / Max( MUR,CS ) ) ) * ( DS * ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ) ) * ( ( ( ( RRSe - Min( RRSe ,( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( ( MLU * MUM ),( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.3286852589641434, "obj2": 0.4896307554923697}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( BR + ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) + Min( Max( ( BR + ( FirstVNF_Mem_Server * RRS ) ),PN ) ,( ( ARS + BR ) + FirstVNF_Mem ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / ( BR + Const ) ) ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Min( CS ,DS ) / ( RRSe * Min( RRSe ,( ( ( ( ( CS / MLU ) / ( MUC / MUC ) ) * ( RCSe / CS ) ) / MUM ) / DS ) ) ) )", "obj1": 0.7091633466135459, "obj2": 0.13673742578759418}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RRSe * Min( RRSe ,MUC ) ) / Min( MUM ,DS ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3147410358565737, "obj2": 0.5027482280556288}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) / CRS ),FirstVNF_RAM ) / ARS ) ) * ( Const / CRS ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MLU + DS ) ) * ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( RRSe / MLU ) ) * ( MUR - ( MUR * MUM ) ) ) / DS ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6108169382171359}, {"determining": "( ( ( Max( PN,( DDR * Min( Min( ( MDR + FirstVNF_RAM_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ARS - ( ACS + FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + Max( Const,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),( ( RRSe / CS ) / Max( RMSe,MUC ) ) ) + Min( ( CS * ( RCSe / ( ( ( RRSe / ( MUM * CS ) ) - RCSe ) - Max( RRSe,( DS * Min( DS ,MUC ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.17466484266570506}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( DDR / PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RCSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.44621513944223107, "obj2": 0.3470978434981277}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) * FirstVNF_CPU_Server ) + ( ( ( ( AMS * AMS ) - DDR ) - ( Min( ( ( AMS / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( PN / Max( PN,AMS ) ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) ) )", "choosing": "( ( ( ( CS / ( MUR / MUM ) ) / Min( RCSe ,DS ) ) * ( ( ( MUR - ( MUR * CS ) ) / ( RMSe / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.26294820717131473, "obj2": 0.5781599843798556}, {"determining": "( Min( BR ,Max( BR,FirstVNF_RAM_Server ) ) + ( ARS * ( Min( ( ( FirstVNF_CPU_Server - BR ) * Max( Max( RRS,PN ),FirstVNF_Mem ) ) ,AMS ) * ( FirstVNF_Mem - Min( ( ( FirstVNF_RAM - PN ) - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( CS / MLU ) ) / Min( Max( RRSe,RRSe ) ,MUC ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - MUC ) ) / MUM ) / DS ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( MUC + ( ( ( RCSe - ( MLU - RCSe ) ) / ( ( RCSe / CS ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.6733067729083665, "obj2": 0.17054142223834012}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( ( MDR / PN ) ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM - DDR ) ) ) ,FirstVNF_CPU_Server ),BR ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( Min( RCSe ,DS ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( RRSe * MUC ) / MUM ) / DS ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8007968127490039, "obj2": 0.07401111337793972}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( PN + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( MUR / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.16334661354581673, "obj2": 0.6992816323033625}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + ( Min( FirstVNF_Mem ,AMS ) * MRS ) ) * ( ( ( FirstVNF_Mem + AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - Max( Max( Min( PN ,RRS ),( ARS - DDR ) ),( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server + ( Max( BR,FirstVNF_Mem_Server ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU + Min( RRSe ,DS ) ) + MLU ) / MUM ) / DS ) ) * RRSe ) / ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) - RMSe ) ) - MUR ) )", "obj1": 0.39243027888446214, "obj2": 0.4144654396572692}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_Mem + ARS ) / Min( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Max( ( FirstVNF_CPU - FirstVNF_CPU_Server ),RRS ) ) ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ACS - ARS ) ) ) ) ) ,( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - ( CRS * RRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS / ( MUC / MLU ) ) + ( ( MUC * Min( MUR ,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.9023904382470119, "obj2": 0.03819381362824446}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ARS * ( FirstVNF_RAM_Server + ( Min( ( ( MDR / FirstVNF_RAM ) - Min( PN ,FirstVNF_Mem_Server ) ) ,( ACS + FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * Min( RRSe ,Max( ( RCSe + MUM ),MUM ) ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * ( MUR + RRSe ) ) - Max( RMSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.651394422310757, "obj2": 0.18053000443971748}, {"determining": "( ( ( Const / AMS ) + AMS ) + ( ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ACS ) )", "choosing": "( ( ( ( CS - ( ( RCSe * MLU ) * MUM ) ) / MLU ) * ( ( Max( RCSe,( MUM + ( CS / ( CS / DS ) ) ) ) / ( DS / ( MUM / MLU ) ) ) * ( ( ( ( ( MUC / MLU ) / Max( RMSe,CS ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.6655911906752706}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + RRS ) ) ) ) ) + Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( ACS + FirstVNF_CPU_Server ) / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( DS,( MUM + DS ) ) / Max( DS,( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( ( MUR * CS ) - MUR ) ) / MUM ) / Min( MUR ,MUR ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.30677290836653387, "obj2": 0.5138821277844913}, {"determining": "( ( ( ARS * CRS ) - ( DDR - ( ( CRS * Min( Min( Min( ARS ,FirstVNF_Mem_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) ) + ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) / RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem / Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe + RRSe ) - MUC ) * MUR ) / MUM ) + ( ( MUR * MUM ) + CS ) )", "obj1": 0.8864541832669323, "obj2": 0.0411273877251646}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( Max( DDR,Max( Min( Const ,DDR ),Min( MDR ,FirstVNF_Mem ) ) ),FirstVNF_CPU_Server ) ) ) ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) * ( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( CS / ( MUM + MUC ) ) - RRSe ) - Max( CS,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( Max( RMSe,RMSe ) / MUM ) / DS ) ) ) )", "obj1": 0.8565737051792829, "obj2": 0.05484347149563179}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR / PN ) - DDR ) + Min( Const ,AMS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / Max( ARS,FirstVNF_Mem ) ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUR ,Max( MUM,( Max( MUR,MUC ) * Max( MUR,MUR ) ) ) ) * MUM ),RCSe ) * DS ) / Min( RCSe ,DS ) )", "obj1": 0.4940239043824701, "obj2": 0.30386586562565876}, {"determining": "( ( ( DDR - ( PN / ( DDR * Max( FirstVNF_CPU,Max( BR,CRS ) ) ) ) ) - FirstVNF_CPU ) + ( DDR * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( Min( MUR ,MUC ) * ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) ) ) + ( MUR / MUR ) )", "obj1": 0.6912350597609562, "obj2": 0.15155598365062198}, {"determining": "( ( Max( ( DDR - ARS ),MRS ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + ( FirstVNF_RAM + CRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( RRSe,( RRSe - RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.39641434262948205, "obj2": 0.4059650228821945}, {"determining": "( ( ( RRS * ACS ) + ( ( RRS - Max( ACS,ACS ) ) / ARS ) ) + Min( ( AMS - BR ) ,Min( ( FirstVNF_RAM_Server + PN ) ,FirstVNF_Mem ) ) )", "choosing": "( ( RRSe * ( ( Max( MLU,RCSe ) / ( DS * ( MUR + DS ) ) ) * Max( ( MLU - DS ),( MUC * RRSe ) ) ) ) / ( Max( CS,CS ) + MUC ) )", "obj1": 0.20119521912350596, "obj2": 0.6598572221261775}, {"determining": "( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) - FirstVNF_CPU ) + ( ARS * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ,DS ) ) ) / Min( ( ( ( ( Min( ( DS + MUR ) ,CS ) / DS ) + RMSe ) / MUR ) + DS ) ,DS ) )", "obj1": 0.7290836653386454, "obj2": 0.12048578278510887}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server + MDR ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( RRSe / ( RRSe / MLU ) ) * ( MUR - ( MUR * RRSe ) ) ) / MUM ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( ( RRSe / RRSe ) ,RRSe ) * MLU ) - CS ) ) * ( ( ( ( RCSe / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.547808764940239, "obj2": 0.26223530377951665}, {"determining": "( Max( Const,BR ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( MRS + Max( ACS,CRS ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( DS / ( CS / MLU ) ) / Max( RCSe,( MUM + ( CS / Min( CS ,DS ) ) ) ) ) * ( Max( CS,( MUR + CS ) ) + RMSe ) ) ) / ( ( MLU - MLU ) - RCSe ) )", "obj1": 0.3705179282868526, "obj2": 0.4431400260106638}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) / ( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUM * MUM ) / ( RCSe - ( MUM + DS ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( Min( RMSe ,MUC ) * MUR ) ) / MUM ) / RCSe ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3247011952191235, "obj2": 0.4997692936811018}, {"determining": "( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( MDR - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( MUC / MLU ) ) * ( RRSe / ( MUR * CS ) ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8266932270916335, "obj2": 0.06568150345047558}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( MDR,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem - FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( ( ( RRSe + Min( ( MUM / DS ) ,MLU ) ) * ( Min( DS ,DS ) * RCSe ) ) * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( MLU / CS ) ) ) * ( ( ( ( RRSe / ( CS / RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.30278884462151395, "obj2": 0.5286777317938932}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR + PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( Min( DDR ,FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / Max( DS,( CS / MLU ) ) ) * ( ( ( ( ( CS + DS ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Max( RCSe,( RRSe * Max( CS,RMSe ) ) ) )", "obj1": 0.4581673306772908, "obj2": 0.3357908929378935}, {"determining": "( ( ( ( PN / ( ( ( RRS * DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM_Server ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( RMSe - ( MUR * CS ) ) ) / ( MUR / ( DS / MLU ) ) ) / DS ) ) ) / Min( Max( RMSe,( ( ( MUM * RMSe ) * RRSe ) / ( Max( MLU,MUC ) * ( CS - ( RRSe - Max( RRSe,RRSe ) ) ) ) ) ) ,DS ) )", "obj1": 0.4820717131474104, "obj2": 0.3158761092448881}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( ACS + FirstVNF_Mem ) - ARS ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) * ( ARS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( ( ( MRS - FirstVNF_CPU ) / ARS ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),( ( MLU / ( MUC / ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) ) ) * ( MUR - ( MUR * CS ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM * CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,MUC ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / MLU ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9601593625498008, "obj2": 0.01299228814271572}, {"determining": "( ( ( ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) / ( ( ARS - DDR ) * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + PN )", "choosing": "( ( MUR * CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( ( ( Max( MUM,MUC ) / RCSe ) - RRSe ) - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.028238665207621014}, {"determining": "( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( MDR - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ( FirstVNF_Mem + BR ) / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( MUC / MLU ) ) * ( RRSe / ( MUR * CS ) ) ) / MUM ) / ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) ) ) ) )", "obj1": 0.9741035856573705, "obj2": 0.009991201090011687}, {"determining": "( ( ( ( ( Max( BR,BR ) + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( Max( FirstVNF_Mem_Server,MRS ) + BR ) * RRS ) ) ) / FirstVNF_Mem_Server ) * Max( MDR,PN ) ) + ( MDR + FirstVNF_RAM ) )", "choosing": "( ( RRSe + Min( RCSe ,( ( Min( ( ( MLU + RMSe ) + MLU ) ,( RRSe - MUC ) ) - ( ( MUC + ( RRSe - MUR ) ) / RCSe ) ) + RRSe ) ) ) / Min( DS ,DS ) )", "obj1": 0.3645418326693227, "obj2": 0.4475354834098479}, {"determining": "( ( Max( Min( ( ARS + ( Min( FirstVNF_RAM ,( CRS * DDR ) ) * RRS ) ) ,MDR ),BR ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * Min( MUC ,DS ) ) ) / Max( ( DS / MUM ),Min( CS ,( ( CS / Max( MUR,Max( MLU,( MUC * RCSe ) ) ) ) * Min( MUC ,( Min( MUC ,Min( MUM ,CS ) ) * ( RMSe - MLU ) ) ) ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7653000680829934}, {"determining": "( Min( ( MRS / FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS / Max( ( Const / ARS ),Min( ( RRS * CRS ) ,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) * ( FirstVNF_RAM_Server + ( CRS - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM / DS ) ) / ( DS / Min( MUC ,MLU ) ) ) * ( ( ( ( DS / ( DS / RCSe ) ) * ( MUR - ( MUM * CS ) ) ) / MUM ) / DS ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.16733067729083664, "obj2": 0.6904375684273857}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( ACS / ( FirstVNF_CPU_Server + Max( RRS,PN ) ) ) + ( ( ( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( AMS / ACS ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / Max( BR,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_CPU_Server / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( RMSe + ( ( DS + RMSe ) + Min( CS ,CS ) ) ) - MUM ) / ( ( ( Min( ( ( ( MUR / MUC ) + ( MUR + MUC ) ) * RRSe ) ,MLU ) * Min( Min( Max( MLU,MUM ) ,Max( CS,( MUM - MUM ) ) ) ,( Min( CS ,( RMSe - MUR ) ) + Min( RRSe ,( RRSe * RRSe ) ) ) ) ) - MUM ) + MUM ) )", "obj1": 0.750996015936255, "obj2": 0.10446855590232887}, {"determining": "( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Const ,( ACS + ( MDR / PN ) ) ) ) ) * ( FirstVNF_Mem_Server - ( ( BR + ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) + Min( Min( ( BR + ( FirstVNF_Mem_Server * RRS ) ) ,PN ) ,( ( ARS + BR ) + FirstVNF_Mem ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * Min( RRSe ,( ( ( ( ( CS / MLU ) / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Max( MUC,DS ) )", "obj1": 0.7808764940239044, "obj2": 0.08677223700859069}, {"determining": "( ( ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Max( RRS,Const ) ) + ( Const / PN ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( CS + Min( RCSe ,DS ) ) ) ) ) * ( ( ( ( ( MUC / MLU ) / DS ) * ( Max( RRSe,MUM ) - ( MUC * MUM ) ) ) / MUM ) / MUR ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6400605458989083}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem * BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,( ARS * FirstVNF_CPU ) ) + Min( Const ,ACS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( ( Min( Min( FirstVNF_Mem ,ACS ) ,DDR ) + Min( Const ,CRS ) ) + ARS ) / ( FirstVNF_RAM_Server / AMS ) ) * ( ( PN / FirstVNF_Mem_Server ) + ( FirstVNF_Mem - Min( ( ( PN / MDR ) - ( Max( AMS,FirstVNF_RAM_Server ) - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( RCSe ,DS ) / ( Max( RMSe,DS ) / RCSe ) )", "obj1": 0.950199203187251, "obj2": 0.02134294970035996}, {"determining": "( ( ( DDR - ( PN / ( ( Max( FirstVNF_Mem,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR * PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( MRS - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( Max( CS,( ( ( ( RRSe + MLU ) * MUC ) * RRSe ) / RMSe ) ) ,DS ) )", "obj1": 0.4900398406374502, "obj2": 0.3087576633754218}, {"determining": "( ( Max( Min( ( FirstVNF_Mem_Server - ( MRS * PN ) ) ,MDR ),( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_RAM_Server ) / Max( Const,( ACS * AMS ) ) ) ) * CRS ) / ( FirstVNF_Mem + ARS ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( DS,( ( DS - MUR ) + Max( CS,CS ) ) ) * MUM ) / DS ) ) ) / CS )", "obj1": 0.11155378486055777, "obj2": 0.8079860046179493}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( Min( FirstVNF_RAM ,RRS ),( ( Const - Min( BR ,MDR ) ) - ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + CRS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( MUC + MLU ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( Max( MUC,MLU ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7928286852589641, "obj2": 0.07965411192716688}, {"determining": "( ( Max( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( MDR + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ),DDR ) - ( Max( Min( ( ( ( FirstVNF_Mem_Server - AMS ) - ARS ) - FirstVNF_RAM ) ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + RRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUM * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( MUR + ( Min( ( MLU - Min( CS ,CS ) ) ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + DS ) ,DS ) )", "obj1": 0.45617529880478086, "obj2": 0.34496869772216104}, {"determining": "( ( ( ( FirstVNF_RAM - Min( ( RRS * Const ) ,AMS ) ) - MRS ) - ( ( MRS * AMS ) / ( FirstVNF_RAM + MDR ) ) ) + ( CRS - PN ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( RRSe - ( RRSe / Max( MUM,MUC ) ) ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( Max( ( MUC / ( MUR - CS ) ),Max( Min( RRSe ,MUC ),MUC ) ) + CS ) ) * ( ( ( ( DS / ( CS / MUR ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6772908366533864, "obj2": 0.15971620401722436}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server * ACS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,Min( ( ( RCSe * DS ) - Min( MUM ,Min( RMSe ,MUC ) ) ) ,RCSe ) ) - MUC ) / ( RMSe + RMSe ) ) / CS )", "obj1": 0.8326693227091634, "obj2": 0.06369272110000138}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( MRS + MDR ) / ( FirstVNF_RAM_Server + Const ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server - ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( Min( Min( CRS ,DDR ) ,FirstVNF_Mem_Server ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( FirstVNF_CPU_Server + ACS ) / ( ( PN / MDR ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( ( Max( RMSe,RCSe ) - MUM ) ,MUC ) * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( Min( DS ,CS ) + Min( CS ,DS ) ) ) / MUM ) / DS ) ) ) / Min( Max( CS,( Min( ( ( RRSe / RMSe ) - MUC ) ,RRSe ) / RMSe ) ) ,DS ) )", "obj1": 0.5338645418326693, "obj2": 0.27474013906449785}, {"determining": "( ( ( MRS * ( PN / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + ( ARS + FirstVNF_Mem ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( Max( RMSe,RMSe ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( RRSe + MUC ) ) - RRSe ) - Max( CS,( DS / Min( CS ,DS ) ) ) ) ) ) ) )", "obj1": 0.6832669322709163, "obj2": 0.1580612065739134}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * ( BR - ( DDR + FirstVNF_RAM_Server ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / ( MUR / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / Max( Min( Max( MUM,MUR ) ,( RMSe * MUR ) ),MUR ) ) ) * ( ( ( ( RRSe - ( RRSe * ( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.7330677290836654, "obj2": 0.1186429273120863}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( Max( RMSe,RMSe ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( RRSe + MUC ) ) - RRSe ) - Max( CS,( DS / Min( CS ,DS ) ) ) ) ) ) ) )", "obj1": 0.7430278884462151, "obj2": 0.11295047323128247}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) * Min( Min( ARS ,( MDR / MDR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU ,ARS ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( Min( AMS ,RRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( Min( ( Max( ( MUR / MUM ),RRSe ) - DS ) ,MUC ) ,( ( ( ( Min( ( RRSe / RRSe ) ,MUC ) * MLU ) - CS ) + Max( MLU,( RRSe - MUM ) ) ) * ( ( ( ( RCSe / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.2552346295447776}, {"determining": "( ( ( ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) / ( ( ARS - DDR ) * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + PN )", "choosing": "( ( MUR * CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( ( ( Min( MUM ,MUC ) / RCSe ) - RRSe ) - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9183266932270916, "obj2": 0.028238665207621014}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2051792828685259, "obj2": 0.6449799028343882}, {"determining": "( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Const ,( ACS + ( MDR / PN ) ) ) ) ) * ( FirstVNF_Mem_Server - ( ( BR + ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) + Min( Min( ( BR + ( FirstVNF_Mem_Server * RRS ) ) ,PN ) ,( ( ARS + BR ) + FirstVNF_Mem ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( DS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7709163346613546, "obj2": 0.09228970522528003}, {"determining": "( Max( MDR,ARS ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM / PN ) ) ,( ( ( AMS + FirstVNF_Mem ) - FirstVNF_RAM_Server ) + RRS ) ) ) + MDR ) ) )", "choosing": "( ( MLU - MUR ) / Min( ( ( RRSe * ( ( MUM / Max( CS,RMSe ) ) * Min( MUR ,RRSe ) ) ) + ( MUC + MLU ) ) ,DS ) )", "obj1": 0.20318725099601595, "obj2": 0.6459019209670143}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ACS + Min( CRS ,FirstVNF_Mem_Server ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( DDR * ( CRS + Const ) ) ) ) ) ) )", "choosing": "( Max( ( Max( MLU,Max( ( ( Max( CS,CS ) - RRSe ) / RCSe ),MUM ) ) * ( ( ( ( MUR * Max( MUR,MUC ) ) - CS ) / ( MUC + Max( ( MUR * MUC ),( DS + MUR ) ) ) ) / MUC ) ),CS ) / Min( RCSe ,DS ) )", "obj1": 0.3047808764940239, "obj2": 0.5219919476147454}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + RRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.4760956175298805, "obj2": 0.3213491756842873}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( PN,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( MDR + Max( FirstVNF_RAM,ARS ) ) )", "choosing": "( ( DS * ( ( RRSe * ( MUR - RMSe ) ) * ( ( Min( ( DS / ( MUC / MUC ) ) ,( MUR - ( MUR * CS ) ) ) / MUM ) / ( MLU * CS ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.9880478087649402, "obj2": 0.006737194154719044}], "50": [{"determining": "( ( ( DDR - ( PN / ( FirstVNF_RAM / Max( CRS,DDR ) ) ) ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server / AMS ) ) ) * ( FirstVNF_RAM_Server + ( ( Const * Min( ACS ,ACS ) ) - Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( ( Max( MLU,DS ) / MUM ) / ( RMSe / RMSe ) ) ) ,DS ) / ( Max( MUM,Min( RRSe ,RCSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem - Min( Max( Const,( Const * Min( AMS ,BR ) ) ) ,( MDR / PN ) ) ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS * ( ( Min( MUC ,Min( RRSe ,( MUM / MLU ) ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( Max( CRS,DDR ) / FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,DS ) )", "obj1": 0.2848605577689243, "obj2": 0.5672396478420794}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1553784860557769, "obj2": 0.70853940165163}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + Min( Min( PN ,PN ) ,( ( ARS + PN ) + RRS ) ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( ( ( MUM - MUM ) - ( ( MLU - RRSe ) / Max( RMSe,RMSe ) ) ),( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.28884462151394424, "obj2": 0.5331289532082363}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,Min( ACS ,( ( ARS / FirstVNF_RAM ) * AMS ) ) ),( ( ( FirstVNF_RAM_Server + BR ) / FirstVNF_RAM_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( CS - CS ) / MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( ( MUM - DS ) - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.372518915128707}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) + ( ( RRS + ( ARS + BR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( CRS + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ,DS ) ) ) / Min( ( ( ( ( Min( ( DS + MUR ) ,CS ) / DS ) + RMSe ) / MUR ) + DS ) ,DS ) )", "obj1": 0.4362549800796813, "obj2": 0.35676065341677726}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( MDR + FirstVNF_RAM_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( Max( CS,( ( ( MUM * RRSe ) * RRSe ) / RMSe ) ) ,DS ) )", "obj1": 0.6135458167330677, "obj2": 0.21330978778428425}, {"determining": "( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Const ,( ACS + ( MDR / PN ) ) ) ) ) * ( FirstVNF_Mem_Server - ( ( BR + ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) + Min( Min( ( BR + ( FirstVNF_Mem_Server * RRS ) ) ,PN ) ,( ( ARS + BR ) + FirstVNF_Mem ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( DS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7709163346613546, "obj2": 0.09228970522528003}, {"determining": "( ( ACS / ( FirstVNF_CPU_Server + Max( RRS,PN ) ) ) + ( ( ( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( AMS / ACS ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / Max( BR,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_CPU_Server / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( RMSe + ( ( DS + RMSe ) + Min( CS ,CS ) ) ) - MUM ) / ( ( ( Min( ( ( ( MUR / MUC ) + ( MUR + MUC ) ) * RRSe ) ,MLU ) * Min( Min( Max( MLU,MUM ) ,Max( CS,( MUM - MUM ) ) ) ,( Min( CS ,( RMSe - MUR ) ) + Min( RRSe ,( RRSe * RRSe ) ) ) ) ) - MUM ) + MUM ) )", "obj1": 0.750996015936255, "obj2": 0.10446855590232887}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.2258191046013538}, {"determining": "( ( AMS / ( AMS + ARS ) ) + ( ( ( FirstVNF_Mem + ACS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( Max( ( MUR - ( ( MLU + MUC ) - MUM ) ),Max( ( MLU / ( RCSe - ( MUR - DS ) ) ),MUM ) ) * Min( ( ( ( MUR - ( CS * CS ) ) * ( RRSe / ( MUC / MLU ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.34860557768924305, "obj2": 0.4642831086377866}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + CRS ) ) ) ) ) + ( FirstVNF_CPU * ARS ) )", "choosing": "( ( RRSe * ( Min( ( Max( MUC,DS ) * MUC ) ,MLU ) * ( Min( MLU ,MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3386454183266932, "obj2": 0.4817880667686919}, {"determining": "( ( ( Min( MDR ,( ( AMS * RRS ) + Const ) ) / BR ) * Max( ( ( ARS + ( ( ( ARS / MDR ) * BR ) * PN ) ) + FirstVNF_CPU_Server ),BR ) ) / ( FirstVNF_CPU * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MLU + CS ) ,( ( RMSe * ( RRSe * DS ) ) * ( Min( MUC ,RRSe ) / DS ) ) ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7774916413894789}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( DS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2589641434262948, "obj2": 0.5945263501226855}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( RRS * CRS ) ) ) + ( DDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( ( Max( ( Max( ( CS + MUR ),MUC ) + CS ),RCSe ) / ( DS / ( CS / MLU ) ) ) * ( ( MLU / ( RMSe + ( MUR / ( RRSe * MUC ) ) ) ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.388895534855317}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6176838386721392}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( FirstVNF_CPU_Server * Max( MDR,Max( ( MRS / ( ( Max( PN,FirstVNF_Mem_Server ) + ARS ) * Max( RRS,( FirstVNF_RAM_Server / MDR ) ) ) ),( ( ( MRS * BR ) / ( MRS * FirstVNF_Mem ) ) + RRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( MUM * ( RMSe + RRSe ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.1852589641434263, "obj2": 0.6736651734046396}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( ( MRS * Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) * ( BR - Min( FirstVNF_CPU ,Max( FirstVNF_CPU_Server,RRS ) ) ) ) ) ) + ( Max( ( FirstVNF_Mem + ARS ),( ( MDR + DDR ) / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( ( ( RMSe - MUC ) * ( DS - MUC ) ) ,( Min( RCSe ,MLU ) / MLU ) ) + MUR ) ) + ( ( MUC * Min( MUR ,MUC ) ) / ( RMSe - ( MUM * CS ) ) ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) - ( DS / ( CS * MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.24900398406374502, "obj2": 0.6073645263497292}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR / PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) * ( ARS / ( RRS / ( BR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( ( ( MRS - FirstVNF_CPU ) / ARS ) - Min( ( ( MDR / PN ) - CRS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),CS ) + ( Min( ( RMSe - MUC ) ,RMSe ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9342629482071713, "obj2": 0.02339197366210646}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( ( MDR / PN ) ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM - DDR ) ) ) ,FirstVNF_CPU_Server ),BR ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( Min( RCSe ,DS ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( ( RRSe * MUC ) / MUM ) / DS ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.8007968127490039, "obj2": 0.07401111337793972}, {"determining": "( ( Min( ( ( ( ( AMS / CRS ) - BR ) * MDR ) / ( ( Max( ( MDR / DDR ),( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * ( AMS * PN ) ) ) ,ARS ) - ( Max( AMS,( Min( ( ( Const / MRS ) + ( CRS * RRS ) ) ,( Min( FirstVNF_Mem ,DDR ) + BR ) ) - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( FirstVNF_RAM_Server + ( AMS * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) )", "choosing": "( ( ( ( Min( MUC ,( DS + ( MUM + CS ) ) ) / ( MUM / ( CS / DS ) ) ) + ( ( Min( ( RCSe + ( RCSe / RMSe ) ) ,( RMSe - RMSe ) ) / CS ) / RRSe ) ) * DS ) / Min( Min( ( RMSe * DS ) ,MLU ) ,MUC ) )", "obj1": 0.5816733067729084, "obj2": 0.2371366370746841}, {"determining": "( Max( MRS,FirstVNF_Mem ) + ( FirstVNF_RAM * MRS ) )", "choosing": "( Min( ( RRSe - ( ( ( DS - ( ( CS + MLU ) - DS ) ) + MUR ) + RCSe ) ) ,RMSe ) / Max( RRSe,( DS - ( CS / ( ( ( RCSe - MUM ) * DS ) + CS ) ) ) ) )", "obj1": 0.40836653386454186, "obj2": 0.4020978553664453}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( RRS,PN ) - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( Min( DS ,RCSe ) + ( ( CS - DS ) * MUM ) ) * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.17330677290836655, "obj2": 0.6847358921802729}, {"determining": "( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Const ,( ACS + ( MDR / PN ) ) ) ) ) * ( FirstVNF_Mem_Server - ( ( BR + ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) + Min( Min( ( BR + ( FirstVNF_Mem_Server * RRS ) ) ,PN ) ,( ( ARS + BR ) + FirstVNF_Mem ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * Min( RRSe ,( ( ( ( ( CS / MLU ) / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Max( MUC,DS ) )", "obj1": 0.7808764940239044, "obj2": 0.08677223700859069}, {"determining": "( ( ( DDR - ( PN / ( Max( CRS,DDR ) / FirstVNF_RAM ) ) ) - FirstVNF_CPU ) + ( ( ( ACS * FirstVNF_CPU_Server ) - ( ( ARS + BR ) + RRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( ( ( Max( RCSe,( MUM + CS ) ) / Min( RRSe ,RRSe ) ) / ( DS / ( CS / MUC ) ) ) * ( ( ( ( MUR - ( DS * CS ) ) * ( DS / ( MUC / MLU ) ) ) / MUM ) / DS ) ) ) / Min( ( CS * ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) ) ,DS ) )", "obj1": 0.6215139442231076, "obj2": 0.20427651891752643}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( MRS + Max( ACS,ARS ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( Const,( Const * Min( AMS ,BR ) ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( ( RRSe * MUR ),MUC ) - MUC ) ) ) * ( ( ( ( DS / ( MUM / MLU ) ) * ( MUR - Max( DS,CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.3844621513944223, "obj2": 0.4239294888737787}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( FirstVNF_CPU + ( PN * Min( MRS ,MRS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ,( ( CRS / MRS ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MUM ) / MUM ) / DS ) ) ) / ( RCSe - DS ) )", "obj1": 0.3745019920318725, "obj2": 0.43051097106600705}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( PN - ( Const * MRS ) ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,( RMSe + ( ( RCSe / Min( CS ,Min( Min( RCSe ,RMSe ) ,Min( MUC ,MUM ) ) ) ) * CS ) ) ) / CS )", "obj1": 0.22310756972111553, "obj2": 0.6383559113136551}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( FirstVNF_CPU_Server,Max( DDR,FirstVNF_RAM_Server ) ) ) ) ) + Min( PN ,ARS ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / Max( ( RRSe - ( ( RMSe + RMSe ) - ( MUR + MUR ) ) ),MUR ) ) * ( Max( RCSe,( MUM * DS ) ) / Min( DS ,( CS / ( MLU + Max( MUM,RCSe ) ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.3545816733067729, "obj2": 0.4526018663262579}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - Min( Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Min( FirstVNF_Mem ,PN ) + FirstVNF_Mem_Server ) ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) - ( DS / ( MUC / MLU ) ) ) * ( DS / ( ( MUR / DS ) - ( MLU - RCSe ) ) ) ) ) / ( DS / ( CS / MLU ) ) )", "obj1": 0.2649402390438247, "obj2": 0.5700748269302004}, {"determining": "( ( ( DDR - ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( Max( RRS,( DDR - DDR ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + ( Min( MRS ,BR ) * ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_RAM_Server,AMS ) * BR ) ) / ( ( Min( CRS ,BR ) - PN ) + ( MDR - ACS ) ) ) - Min( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ,( ( MDR / PN ) - ARS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Min( RMSe ,( MUM / CS ) ) ,( CS * ( RMSe * ( Max( RRSe,( ( MLU + CS ) + Min( RRSe ,MUC ) ) ) - ( MUR * RMSe ) ) ) ) ) + Min( RRSe ,( RRSe + Min( RCSe ,( RCSe - ( MUM + Max( DS,Min( MUR ,MUC ) ) ) ) ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.3303640079547866}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( DDR ,Min( ACS ,FirstVNF_Mem ) ) + Min( Const ,CRS ) ) + Min( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - ( Const * DDR ) ),MDR ) ,Max( ( FirstVNF_CPU_Server + BR ),RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM / AMS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / Max( MUR,CS ) ) ) * ( DS * ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ) ) * ( ( ( ( RRSe - Min( RRSe ,( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( ( MLU * MUM ),( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.3286852589641434, "obj2": 0.4896307554923697}, {"determining": "( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( Max( AMS,FirstVNF_RAM_Server ) - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MLU * CS ) ) ) / MUM ) / DS ) ) * ( ( ( ( RRSe - ( RRSe * ( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.7430278884462151, "obj2": 0.111084031235506}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RRSe * Min( RRSe ,MUC ) ) / Min( MUM ,DS ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3147410358565737, "obj2": 0.5027482280556288}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - MRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( Max( FirstVNF_Mem_Server,CRS ) + ( DDR * Const ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( MUC / Min( ( MUR / MUC ) ,DS ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) * ( ( MUR + ( Min( ( MUR / RCSe ) ,( ( RMSe - MUM ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.6294820717131474, "obj2": 0.19520856926903848}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) / CRS ),FirstVNF_RAM ) / ARS ) ) * ( Const / CRS ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MLU + DS ) ) * ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( RRSe / MLU ) ) * ( MUR - ( MUR * MUM ) ) ) / DS ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6108169382171359}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( DDR / PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RCSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.44621513944223107, "obj2": 0.3470978434981277}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) * FirstVNF_CPU_Server ) + ( ( ( ( AMS * AMS ) - DDR ) - ( Min( ( ( AMS / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( PN / Max( PN,AMS ) ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) ) )", "choosing": "( ( ( ( CS / ( MUR / MUM ) ) / Min( RCSe ,DS ) ) * ( ( ( MUR - ( MUR * CS ) ) / ( RMSe / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.26294820717131473, "obj2": 0.5781599843798556}, {"determining": "( Min( BR ,Max( BR,FirstVNF_RAM_Server ) ) + ( ARS * ( Min( ( ( FirstVNF_CPU_Server - BR ) * Max( Max( RRS,PN ),FirstVNF_Mem ) ) ,AMS ) * ( FirstVNF_Mem - Min( ( ( FirstVNF_RAM - PN ) - ( MDR / PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( DS / ( CS / MLU ) ) / Min( Max( RRSe,RRSe ) ,MUC ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - MUC ) ) / MUM ) / DS ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( MUC + ( ( ( RCSe - ( MLU - RCSe ) ) / ( ( RCSe / CS ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.6733067729083665, "obj2": 0.17054142223834012}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + BR ) ),( DDR - ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( ( MUC / MLU ) * ( ( ( ( DS / ( CS - CS ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8227091633466136, "obj2": 0.0683195182182394}, {"determining": "( ( ( Max( PN,( DDR * Min( Min( ( MDR + FirstVNF_RAM_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ARS - ( ACS + FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + Max( Const,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),( ( RRSe / CS ) / Max( RMSe,MUC ) ) ) + Min( ( CS * ( RCSe / ( ( ( RRSe / ( MUM * CS ) ) - RCSe ) - Max( RRSe,( DS * Min( DS ,MUC ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.17466484266570506}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + ( Min( FirstVNF_Mem ,AMS ) * MRS ) ) * ( ( ( FirstVNF_Mem + AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - Max( Max( Min( PN ,RRS ),( ARS - DDR ) ),( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server + ( Max( BR,FirstVNF_Mem_Server ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU + Min( RRSe ,DS ) ) + MLU ) / MUM ) / DS ) ) * RRSe ) / ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) - RMSe ) ) - MUR ) )", "obj1": 0.39243027888446214, "obj2": 0.4144654396572692}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ARS * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( CRS,FirstVNF_RAM_Server ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * Min( RRSe ,Max( ( RCSe + MUM ),MUM ) ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.651394422310757, "obj2": 0.17938266925657195}, {"determining": "( ( ( Const / AMS ) + AMS ) + ( ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ACS ) )", "choosing": "( ( ( ( CS - ( ( RCSe * MLU ) * MUM ) ) / MLU ) * ( ( Max( RCSe,( MUM + ( CS / ( CS / DS ) ) ) ) / ( DS / ( MUM / MLU ) ) ) * ( ( ( ( ( MUC / MLU ) / Max( RMSe,CS ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.6655911906752706}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + RRS ) ) ) ) ) + Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( ACS + FirstVNF_CPU_Server ) / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( DS,( MUM + DS ) ) / Max( DS,( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( ( MUR * CS ) - MUR ) ) / MUM ) / Min( MUR ,MUR ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.30677290836653387, "obj2": 0.5138821277844913}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) + ( ( Const + ( FirstVNF_Mem - Min( ( ( MDR / ( MDR * FirstVNF_CPU ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) - BR ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),( Max( MLU,MUM ) * ( ( ( ( MLU + RMSe ) * CS ) - RRSe ) + Max( ( MUR * MUC ),MUC ) ) ) ) + ( ( CS * ( RCSe * Min( RMSe ,MLU ) ) ) * ( ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) * RMSe ) ) + ( MLU - CS ) ) * ( ( ( ( ( MLU / CS ) / Max( MUM,MLU ) ) * ( MUR * MLU ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2878936053541786}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR / PN ) - DDR ) + Min( Const ,AMS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / Max( ARS,FirstVNF_Mem ) ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUR ,Max( MUM,( Max( MUR,MUC ) * Max( MUR,MUR ) ) ) ) * MUM ),RCSe ) * DS ) / Min( RCSe ,DS ) )", "obj1": 0.4940239043824701, "obj2": 0.30386586562565876}, {"determining": "( ( ( DDR - ( PN / ( DDR * Max( FirstVNF_CPU,Max( BR,CRS ) ) ) ) ) - FirstVNF_CPU ) + ( DDR * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( Min( MUR ,MUC ) * ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) ) ) + ( MUR / MUR ) )", "obj1": 0.6912350597609562, "obj2": 0.15155598365062198}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + RRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.4760956175298805, "obj2": 0.3213491756842873}, {"determining": "( ( Max( ( DDR - ARS ),MRS ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + ( FirstVNF_RAM + CRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( RRSe,( RRSe - RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.39641434262948205, "obj2": 0.4059650228821945}, {"determining": "( ( ( RRS * ACS ) + ( ( RRS - Max( ACS,ACS ) ) / ARS ) ) + Min( ( AMS - BR ) ,Min( ( FirstVNF_RAM_Server + PN ) ,FirstVNF_Mem ) ) )", "choosing": "( ( RRSe * ( ( Max( MLU,RCSe ) / ( DS * ( MUR + DS ) ) ) * Max( ( MLU - DS ),( MUC * RRSe ) ) ) ) / ( Max( CS,CS ) + MUC ) )", "obj1": 0.20119521912350596, "obj2": 0.6598572221261775}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / PN ) * Min( ARS ,MDR ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / ( RRSe * ( ( MUM / Max( CS,RMSe ) ) * Min( MUR ,RRSe ) ) ) ) ) ) )", "obj1": 0.8725099601593626, "obj2": 0.050804343902322545}, {"determining": "( Max( Const,BR ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( MRS + Max( ACS,CRS ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( DS / ( CS / MLU ) ) / Max( RCSe,( MUM + ( CS / Min( CS ,DS ) ) ) ) ) * ( Max( CS,( MUR + CS ) ) + RMSe ) ) ) / ( ( MLU - MLU ) - RCSe ) )", "obj1": 0.3705179282868526, "obj2": 0.4431400260106638}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) / ( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUM * MUM ) / ( RCSe - ( MUM + DS ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( Min( RMSe ,MUC ) * MUR ) ) / MUM ) / RCSe ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3247011952191235, "obj2": 0.4997692936811018}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( MDR,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem - FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( ( ( RRSe + Min( ( MUM / DS ) ,MLU ) ) * ( Min( DS ,DS ) * RCSe ) ) * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( MLU / CS ) ) ) * ( ( ( ( RRSe / ( CS / RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.30278884462151395, "obj2": 0.5286777317938932}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR + PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( Min( DDR ,FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / Max( DS,( CS / MLU ) ) ) * ( ( ( ( ( CS + DS ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Max( RCSe,( RRSe * Max( CS,RMSe ) ) ) )", "obj1": 0.4581673306772908, "obj2": 0.3357908929378935}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_Mem + ARS ) / Min( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Max( ( FirstVNF_CPU - FirstVNF_CPU_Server ),RRS ) ) ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ACS - ARS ) ) ) ) ) ,( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - ( CRS * RRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS / ( MUC / MLU ) ) + ( ( MUC * Min( MUR ,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.9023904382470119, "obj2": 0.03819381362824446}, {"determining": "( ( ( ( PN / ( ( ( RRS * DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM_Server ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( RMSe - ( MUR * CS ) ) ) / ( MUR / ( DS / MLU ) ) ) / DS ) ) ) / Min( Max( RMSe,( ( ( MUM * RMSe ) * RRSe ) / ( Max( MLU,MUC ) * ( CS - ( RRSe - Max( RRSe,RRSe ) ) ) ) ) ) ,DS ) )", "obj1": 0.4820717131474104, "obj2": 0.3158761092448881}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ACS - ARS ) ) ) ) ) ,( FirstVNF_RAM_Server + ( Min( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / ( FirstVNF_CPU - MRS ) ) - ( CRS * RRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( ( ( RMSe - MUC ) * ( DS - MUC ) ) ,Min( RRSe ,MLU ) ) + MUR ) ) + ( ( MUC * Min( MUR ,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - Max( MUC,RCSe ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8466135458167331, "obj2": 0.06242042135035422}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( Max( DDR,Max( Min( Const ,DDR ),Min( MDR ,FirstVNF_Mem ) ) ),FirstVNF_CPU_Server ) ) ) ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) * ( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( CS / ( MUM + MUC ) ) - RRSe ) - Max( CS,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( Max( RMSe,RMSe ) / MUM ) / DS ) ) ) )", "obj1": 0.8565737051792829, "obj2": 0.05484347149563179}, {"determining": "( ( ( ( ( Max( BR,BR ) + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( Max( FirstVNF_Mem_Server,MRS ) + BR ) * RRS ) ) ) / FirstVNF_Mem_Server ) * Max( MDR,PN ) ) + ( MDR + FirstVNF_RAM ) )", "choosing": "( ( RRSe + Min( RCSe ,( ( Min( ( ( MLU + RMSe ) + MLU ) ,( RRSe - MUC ) ) - ( ( MUC + ( RRSe - MUR ) ) / RCSe ) ) + RRSe ) ) ) / Min( DS ,DS ) )", "obj1": 0.3645418326693227, "obj2": 0.4475354834098479}, {"determining": "( ( Max( Min( ( ARS + ( Min( FirstVNF_RAM ,( CRS * DDR ) ) * RRS ) ) ,MDR ),BR ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * Min( MUC ,DS ) ) ) / Max( ( DS / MUM ),Min( CS ,( ( CS / Max( MUR,Max( MLU,( MUC * RCSe ) ) ) ) * Min( MUC ,( Min( MUC ,Min( MUM ,CS ) ) * ( RMSe - MLU ) ) ) ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7653000680829934}, {"determining": "( ( ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Max( RRS,Const ) ) + ( Const / PN ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( CS + Min( RCSe ,DS ) ) ) ) ) * ( ( ( ( ( MUC / MLU ) / DS ) * ( Max( RRSe,MUM ) - ( MUC * MUM ) ) ) / MUM ) / MUR ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6400605458989083}, {"determining": "( ( ( DDR - ( PN / ( ( Max( FirstVNF_Mem,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR * PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( MRS - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( Max( CS,( ( ( ( RRSe + MLU ) * MUC ) * RRSe ) / RMSe ) ) ,DS ) )", "obj1": 0.4900398406374502, "obj2": 0.3087576633754218}, {"determining": "( ( Max( Min( ( FirstVNF_Mem_Server - ( MRS * PN ) ) ,MDR ),( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_RAM_Server ) / Max( Const,( ACS * AMS ) ) ) ) * CRS ) / ( FirstVNF_Mem + ARS ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( DS,( ( DS - MUR ) + Max( CS,CS ) ) ) * MUM ) / DS ) ) ) / CS )", "obj1": 0.11155378486055777, "obj2": 0.8079860046179493}, {"determining": "( ( ( ARS * CRS ) - ( DDR - ( ( CRS * Min( Min( Min( ARS ,FirstVNF_Mem_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) ) + ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) / RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem / Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe + RRSe ) - MUC ) * MUR ) / MUM ) + ( ( MUR * MUM ) + CS ) )", "obj1": 0.8864541832669323, "obj2": 0.0411273877251646}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + Const ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( Max( CS,( ( ( ( RRSe / RMSe ) - MUC ) * RRSe ) / RMSe ) ) ,DS ) )", "obj1": 0.5876494023904383, "obj2": 0.23343337973740796}, {"determining": "( ( Max( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( MDR + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ),DDR ) - ( Max( Min( ( ( ( FirstVNF_Mem_Server - AMS ) - ARS ) - FirstVNF_RAM ) ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + RRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUM * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( MUR + ( Min( ( MLU - Min( CS ,CS ) ) ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + DS ) ,DS ) )", "obj1": 0.45617529880478086, "obj2": 0.34496869772216104}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( ( AMS * AMS ) - DDR ) - ( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUR - ( MUR * CS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6454183266932271, "obj2": 0.18859222961123337}, {"determining": "( ( ( ( FirstVNF_RAM - Min( ( RRS * Const ) ,AMS ) ) - MRS ) - ( ( MRS * AMS ) / ( FirstVNF_RAM + MDR ) ) ) + ( CRS - PN ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( RRSe - ( RRSe / Max( MUM,MUC ) ) ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( Max( ( MUC / ( MUR - CS ) ),Max( Min( RRSe ,MUC ),MUC ) ) + CS ) ) * ( ( ( ( DS / ( CS / MUR ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6772908366533864, "obj2": 0.15971620401722436}, {"determining": "( Min( ( MRS / FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS / Max( ( Const / ARS ),Min( ( RRS * CRS ) ,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) * ( FirstVNF_RAM_Server + ( CRS - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM / DS ) ) / ( DS / Min( MUC ,MLU ) ) ) * ( ( ( ( DS / ( DS / RCSe ) ) * ( MUR - ( MUM * CS ) ) ) / MUM ) / DS ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.16733067729083664, "obj2": 0.6904375684273857}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) + ( ( ( ( AMS * AMS ) - DDR ) - ( Min( ( ( AMS / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( PN / Max( PN,AMS ) ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) ) )", "choosing": "( ( ( ( CS / ( MUR / MUM ) ) / Min( RCSe ,DS ) ) * ( ( ( MUR - ( MUR * CS ) ) / ( RMSe / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( DS * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5258964143426295, "obj2": 0.28587825815899515}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server * ACS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,Min( ( ( RCSe * DS ) - Min( MUM ,Min( RMSe ,MUC ) ) ) ,RCSe ) ) - MUC ) / ( RMSe + RMSe ) ) / CS )", "obj1": 0.8326693227091634, "obj2": 0.06369272110000138}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( MRS + MDR ) / ( FirstVNF_RAM_Server + Const ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server - ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( Min( Min( CRS ,DDR ) ,FirstVNF_Mem_Server ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( FirstVNF_CPU_Server + ACS ) / ( ( PN / MDR ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( ( Max( RMSe,RCSe ) - MUM ) ,MUC ) * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( Min( DS ,CS ) + Min( CS ,DS ) ) ) / MUM ) / DS ) ) ) / Min( Max( CS,( Min( ( ( RRSe / RMSe ) - MUC ) ,RRSe ) / RMSe ) ) ,DS ) )", "obj1": 0.5338645418326693, "obj2": 0.27474013906449785}, {"determining": "( Min( MRS ,BR ) + ( ( ( ( AMS * AMS ) - DDR ) - ( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( MDR + PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUR - ( MUR * CS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / ( Max( Max( MUM,( Max( MUC,MUR ) / ( RCSe + MUR ) ) ),( RRSe * MUM ) ) + ( DS + DS ) ) )", "obj1": 0.6414342629482072, "obj2": 0.1920495454116659}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem * BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,( ARS * FirstVNF_CPU ) ) + Min( Const ,ACS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( ( Min( Min( FirstVNF_Mem ,ACS ) ,DDR ) + Min( Const ,CRS ) ) + ARS ) / ( FirstVNF_RAM_Server / AMS ) ) * ( ( PN / FirstVNF_Mem_Server ) + ( FirstVNF_Mem - Min( ( ( PN / MDR ) - ( Max( AMS,FirstVNF_RAM_Server ) - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( RCSe ,DS ) / ( Max( RMSe,DS ) / RCSe ) )", "obj1": 0.950199203187251, "obj2": 0.02134294970035996}, {"determining": "( ( ( MRS * ( PN / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + ( ARS + FirstVNF_Mem ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( Max( RMSe,RMSe ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( RRSe + MUC ) ) - RRSe ) - Max( CS,( DS / Min( CS ,DS ) ) ) ) ) ) ) )", "obj1": 0.6832669322709163, "obj2": 0.1580612065739134}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( Min( FirstVNF_RAM ,RRS ),( ( Const - Min( BR ,MDR ) ) - ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + CRS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( MUC + MLU ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( Max( MUC,MLU ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7928286852589641, "obj2": 0.07965411192716688}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( ARS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ARS * ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( BR - AMS ) ,MRS ) ) ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( RRSe * DS ),( ( ( DS / ( CS / MLU ) ) / Min( Min( RRSe ,RRSe ) ,MUC ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - MUC ) ) / MUM ) / DS ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( MUC + ( ( ( RCSe - ( MLU - RCSe ) ) / MUC ) / RRSe ) ) ) ) )", "obj1": 0.7051792828685259, "obj2": 0.15066099178148784}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( Max( MUR,( RRSe - MUM ) ) + ( RRSe - CS ) ) * ( ( Max( RMSe,RMSe ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( RRSe + MUC ) ) - RRSe ) - Max( CS,( DS / Min( CS ,DS ) ) ) ) ) ) ) )", "obj1": 0.9103585657370518, "obj2": 0.03752361474730638}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server + MDR ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( RRSe / ( RRSe / MLU ) ) * ( MUR - ( MUR * RRSe ) ) ) / MUM ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( ( RRSe / RRSe ) ,RRSe ) * MLU ) - CS ) ) * ( ( ( ( RCSe / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.547808764940239, "obj2": 0.26223530377951665}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) * Min( Min( ARS ,( MDR / MDR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU ,ARS ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( Min( AMS ,RRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( Min( ( Max( ( MUR / MUM ),RRSe ) - DS ) ,MUC ) ,( ( ( ( Min( ( RRSe / RRSe ) ,MUC ) * MLU ) - CS ) + Max( MLU,( RRSe - MUM ) ) ) * ( ( ( ( RCSe / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.2552346295447776}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * ( BR - ( DDR + FirstVNF_RAM_Server ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / ( MUR / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / Max( Min( Max( MUM,MUR ) ,( RMSe * MUR ) ),MUR ) ) ) * ( ( ( ( RRSe - ( RRSe * ( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.7330677290836654, "obj2": 0.1186429273120863}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( PN + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( MUR / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.16334661354581673, "obj2": 0.6992816323033625}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2051792828685259, "obj2": 0.6449799028343882}, {"determining": "( Max( MDR,ARS ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM / PN ) ) ,( ( ( AMS + FirstVNF_Mem ) - FirstVNF_RAM_Server ) + RRS ) ) ) + MDR ) ) )", "choosing": "( ( MLU - MUR ) / Min( ( ( RRSe * ( ( MUM / Max( CS,RMSe ) ) * Min( MUR ,RRSe ) ) ) + ( MUC + MLU ) ) ,DS ) )", "obj1": 0.20318725099601595, "obj2": 0.6459019209670143}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,Min( Max( DDR,MRS ) ,FirstVNF_CPU_Server ) ) ) ) ) + Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Min( RCSe ,DS ) / ( RRSe * ( ( ( ( RMSe + MUC ) - ( MUR * CS ) ) / ( DS / ( MUR + MLU ) ) ) * ( ( MUM / ( RRSe / ( MUM * ( RCSe / RMSe ) ) ) ) / DS ) ) ) )", "obj1": 0.5298804780876494, "obj2": 0.28277930781567767}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ACS + Min( CRS ,FirstVNF_Mem_Server ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( DDR * ( CRS + Const ) ) ) ) ) ) )", "choosing": "( Max( ( Max( MLU,Max( ( ( Max( CS,CS ) - RRSe ) / RCSe ),MUM ) ) * ( ( ( ( MUR * Max( MUR,MUC ) ) - CS ) / ( MUC + Max( ( MUR * MUC ),( DS + MUR ) ) ) ) / MUC ) ),CS ) / Min( RCSe ,DS ) )", "obj1": 0.3047808764940239, "obj2": 0.5219919476147454}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ( ( ( RRS / Max( FirstVNF_RAM_Server,BR ) ) / FirstVNF_Mem ) / ( ( Const + ARS ) + ( FirstVNF_CPU * DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) - MUR ) + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) * ( ( ( ( RRSe - ( RRSe * ( RMSe - MUR ) ) ) / ( CS + ( RMSe / Min( RCSe ,MUC ) ) ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.7250996015936255, "obj2": 0.12170637123737456}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( MDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) * ( ( ( ( RRSe - ( RRSe * ( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUC ) * RRSe ),( ( ( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) )", "obj1": 0.7071713147410359, "obj2": 0.1459205050191199}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_Mem + ARS ) / Min( Min( ( ( ARS / PN ) - FirstVNF_CPU ) ,Max( ( FirstVNF_CPU - FirstVNF_CPU_Server ),RRS ) ) ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ACS - ARS ) ) ) ) ) ,( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - ( CRS * RRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS / ( MUC / MLU ) ) + ( ( MUC * Min( MUR ,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,Max( MUR,MUC ) ) )", "obj1": 0.8545816733067729, "obj2": 0.058443109079155425}], "51": [{"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( FirstVNF_Mem - Min( Max( Const,( Const * Min( AMS ,BR ) ) ) ,( MDR / Const ) ) ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) * RRSe ) - RMSe ) * ( ( Min( MUC ,Min( RRSe ,( MUM / MLU ) ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( PN / ( FirstVNF_RAM / Max( CRS,DDR ) ) ) ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server / AMS ) ) ) * ( FirstVNF_RAM_Server + ( ( Const * Min( ACS ,ACS ) ) - Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( CS * ( ( Max( MLU,DS ) / MUM ) / ( RMSe / RMSe ) ) ) ,DS ) / ( Max( MUM,Min( RRSe ,RCSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( ( RRS * FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_RAM ) ) ) / ( ( Max( ( BR - ( RRS * PN ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + ARS ) ) * Min( ( Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( DS / Min( Max( MUM,Max( DS,Min( ( MLU / CS ) ,( RCSe * MUC ) ) ) ) ,RCSe ) ) ) / ( RRSe / Max( ( MUM + ( ( ( ( RCSe + MUC ) - MUM ) - MUR ) * MLU ) ),( RCSe + Min( MLU ,MLU ) ) ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8194784955992824}, {"determining": "( ( ( ( PN / ( DDR * Min( ( CRS + ( DDR * ACS ) ) ,Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,ARS ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) * ( ( MRS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,( Max( MUC,DS ) * ( DS / Max( Min( ( Max( MUC,DS ) * MUM ) ,MLU ),Min( ( ( CS - MUR ) * RCSe ) ,CS ) ) ) ) ) / ( DS + RCSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7416740940256762}, {"determining": "( ( Max( CRS,DDR ) / FirstVNF_RAM ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,DS ) )", "obj1": 0.2848605577689243, "obj2": 0.5672396478420794}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1553784860557769, "obj2": 0.70853940165163}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + Min( Min( PN ,PN ) ,( ( ARS + PN ) + RRS ) ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( ( ( MUM - MUM ) - ( ( MLU - RRSe ) / Max( RMSe,RMSe ) ) ),( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.28884462151394424, "obj2": 0.5331289532082363}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,Min( ACS ,( ( ARS / FirstVNF_RAM ) * AMS ) ) ),( ( ( FirstVNF_RAM_Server + BR ) / FirstVNF_RAM_Server ) - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( MRS / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( CS - CS ) / MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( ( MUM - DS ) - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.4203187250996016, "obj2": 0.372518915128707}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) + ( ( RRS + ( ARS + BR ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( CRS + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * Min( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ,DS ) ) ) / Min( ( ( ( ( Min( ( DS + MUR ) ,CS ) / DS ) + RMSe ) / MUR ) + DS ) ,DS ) )", "obj1": 0.4362549800796813, "obj2": 0.35676065341677726}, {"determining": "( ( ( DDR - ( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) / ( DDR * Max( FirstVNF_CPU,Max( BR,CRS ) ) ) ) ) - FirstVNF_CPU ) + ( DDR * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( Min( MUR ,MUC ) * ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) ) ) + Max( ( MUC * MUC ),( Min( MUR ,MUC ) * ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) ) ) )", "obj1": 0.9601593625498008, "obj2": 0.016362219722157432}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ( ( ( RRS / Max( FirstVNF_RAM_Server,BR ) ) / FirstVNF_Mem ) / ( ( Const + ARS ) + ( FirstVNF_CPU * DDR ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) - MUR ) + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) * ( ( ( ( RRSe - ( RRSe * ( RMSe - MUR ) ) ) / ( CS + ( RMSe / Min( RCSe ,MUC ) ) ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.7250996015936255, "obj2": 0.12170637123737456}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( MDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) * ( ( ( ( RRSe - ( RRSe * ( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUC ) * RRSe ),( ( ( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) )", "obj1": 0.7071713147410359, "obj2": 0.1459205050191199}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( DS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2589641434262948, "obj2": 0.5945263501226855}, {"determining": "( ( AMS / ( AMS + ARS ) ) + ( ( ( FirstVNF_Mem + ACS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( Max( ( MUR - ( ( MLU + MUC ) - MUM ) ),Max( ( MLU / ( RCSe - ( MUR - DS ) ) ),MUM ) ) * Min( ( ( ( MUR - ( CS * CS ) ) * ( RRSe / ( MUC / MLU ) ) ) / MUM ) ,DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.34860557768924305, "obj2": 0.4642831086377866}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + CRS ) ) ) ) ) + ( FirstVNF_CPU * ARS ) )", "choosing": "( ( RRSe * ( Min( ( Max( MUC,DS ) * MUC ) ,MLU ) * ( Min( MLU ,MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3386454183266932, "obj2": 0.4817880667686919}, {"determining": "( ( ( Min( MDR ,( ( AMS * RRS ) + Const ) ) / BR ) * Max( ( ( ARS + ( ( ( ARS / MDR ) * BR ) * PN ) ) + FirstVNF_CPU_Server ),BR ) ) / ( FirstVNF_CPU * Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MLU + CS ) ,( ( RMSe * ( RRSe * DS ) ) * ( Min( MUC ,RRSe ) / DS ) ) ) / CS )", "obj1": 0.11952191235059761, "obj2": 0.7774916413894789}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / PN ) * Min( ARS ,MDR ) ) * Min( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - Min( ( ARS + ( MRS * ( ACS + ( Const + DDR ) ) ) ) ,FirstVNF_CPU_Server ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + CS ) ) - RCSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / ( RRSe * ( ( MUM / Max( CS,RMSe ) ) * Min( MUR ,RRSe ) ) ) ) ) ) )", "obj1": 0.8725099601593626, "obj2": 0.050804343902322545}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( RRS * CRS ) ) ) + ( DDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe * ( ( Max( ( Max( ( CS + MUR ),MUC ) + CS ),RCSe ) / ( DS / ( CS / MLU ) ) ) * ( ( MLU / ( RMSe + ( MUR / ( RRSe * MUC ) ) ) ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.41434262948207173, "obj2": 0.388895534855317}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( CS / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6176838386721392}, {"determining": "( ( ( ARS * CRS ) - ( DDR - ( ( CRS * Min( Min( Min( ARS ,FirstVNF_Mem_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) / Min( RRS ,DDR ) ) ) ) + ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) / RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem / Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe + RRSe ) - MUC ) * MUR ) / MUM ) + ( ( MUR * MUM ) + CS ) )", "obj1": 0.8864541832669323, "obj2": 0.0411273877251646}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR / PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_CPU_Server / RRS ) * ( ARS / ( RRS / ( BR / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM_Server + ( ( ( MRS - FirstVNF_CPU ) / ARS ) - Min( ( ( MDR / PN ) - CRS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe - Min( ( ( MUM + ( MUM / RMSe ) ) + MLU ) ,DS ) ) * MUC ),CS ) + ( Min( ( RMSe - MUC ) ,RMSe ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) * ( ( ( ( CS / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.9342629482071713, "obj2": 0.02339197366210646}, {"determining": "( ( Max( Min( Max( ARS,( ( ( PN / ARS ) / Const ) * ( Max( BR,DDR ) + ( MRS + MRS ) ) ) ) ,( BR + PN ) ),ACS ) + Min( ( CRS * RRS ) ,( Const / ( BR - CRS ) ) ) ) / ( FirstVNF_CPU * Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( RRSe * ( Min( ( ( MUR + ( RRSe - DS ) ) * ( MLU - CS ) ) ,( MUM / RCSe ) ) + Max( MUC,( RRSe - Min( MLU ,MUR ) ) ) ) ) / MUM )", "obj1": 0.11354581673306773, "obj2": 0.800666794893516}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( AMS / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,Max( CS,CS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.24302788844621515, "obj2": 0.6059725520026545}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + ( Min( FirstVNF_Mem ,AMS ) * MRS ) ) * ( ( ( FirstVNF_Mem + AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - Max( Max( Min( PN ,RRS ),( ARS - DDR ) ),( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server + ( Max( BR,FirstVNF_Mem_Server ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU + Min( RRSe ,DS ) ) + MLU ) / MUM ) / DS ) ) * RRSe ) / ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) - RMSe ) ) - MUR ) )", "obj1": 0.9860557768924303, "obj2": 0.005713940449686451}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + ( Min( FirstVNF_Mem ,AMS ) * MRS ) ) * ( ( ( FirstVNF_Mem + AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - Max( Max( Min( PN ,RRS ),( ARS - DDR ) ),( FirstVNF_RAM_Server + ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ) ) ) + ( ( Const / FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server + ( Max( BR,FirstVNF_Mem_Server ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU + Min( RRSe ,DS ) ) + MLU ) / MUM ) / DS ) ) * RRSe ) / ( Max( CS,( ( ( MUM * RMSe ) * ( MUC / MUC ) ) - RMSe ) ) - MUR ) )", "obj1": 0.9223107569721115, "obj2": 0.03554049758595631}, {"determining": "( ( ( FirstVNF_RAM + ( AMS + FirstVNF_CPU_Server ) ) * Max( Const,MRS ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / AMS ) ) ) ) )", "choosing": "( Max( ( MUR * ( ( RRSe / RMSe ) - MUC ) ),MUM ) + Max( ( DS * RRSe ),( RRSe + RRSe ) ) )", "obj1": 0.5657370517928287, "obj2": 0.24833784514533339}, {"determining": "( Max( MRS,FirstVNF_Mem ) + ( FirstVNF_RAM * MRS ) )", "choosing": "( Min( ( RRSe - ( ( ( DS - ( ( CS + MLU ) - DS ) ) + MUR ) + RCSe ) ) ,RMSe ) / Max( RRSe,( DS - ( CS / ( ( ( RCSe - MUM ) * DS ) + CS ) ) ) ) )", "obj1": 0.40836653386454186, "obj2": 0.4020978553664453}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( RRS,PN ) - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( Min( DS ,RCSe ) + ( ( CS - DS ) * MUM ) ) * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.17330677290836655, "obj2": 0.6847358921802729}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + BR ) ),( DDR - ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( ( MUC / MLU ) * ( ( ( ( DS / ( CS - CS ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8227091633466136, "obj2": 0.0683195182182394}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,BR ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( MRS + Max( ACS,ARS ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( Const,( Const * Min( AMS ,BR ) ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( ( RRSe * MUR ),MUC ) - MUC ) ) ) * ( ( ( ( DS / ( MUM / MLU ) ) * ( MUR - Max( DS,CS ) ) ) / MUM ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.3844621513944223, "obj2": 0.4239294888737787}, {"determining": "( ( FirstVNF_CPU + ( PN * Min( MRS ,MRS ) ) ) + ( ( Const / Const ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Max( ( FirstVNF_RAM_Server / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ,( ( CRS / MRS ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( Max( RRSe,MUM ) / MUM ) / DS ) ) ) / ( RCSe - DS ) )", "obj1": 0.3745019920318725, "obj2": 0.43051097106600705}, {"determining": "( ( AMS / Min( ( PN - ( ( BR * DDR ) * FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * AMS ) ) ) / ( FirstVNF_CPU * Min( ( ( ( DDR - CRS ) * ( PN - PN ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * ( Max( DS,RRSe ) * ( ( ( Max( MLU,( DS / RCSe ) ) * ( DS * RMSe ) ) / MUM ) / DS ) ) ) / ( Max( ( ( ( MUC - Max( DS,RRSe ) ) + ( DS - ( Min( RCSe ,MLU ) / Max( RCSe,MUC ) ) ) ) * ( RRSe / RRSe ) ),RCSe ) + DS ) )", "obj1": 0.13346613545816732, "obj2": 0.7505463297487838}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( PN - ( Const * MRS ) ) ) ) + ( ARS + FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,( RMSe + ( ( RCSe / Min( CS ,Min( Min( RCSe ,RMSe ) ,Min( MUC ,MUM ) ) ) ) * CS ) ) ) / CS )", "obj1": 0.22310756972111553, "obj2": 0.6383559113136551}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( FirstVNF_CPU_Server,Max( DDR,FirstVNF_RAM_Server ) ) ) ) ) + Min( PN ,ARS ) )", "choosing": "( ( RRSe * ( ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / Max( ( RRSe - ( ( RMSe + RMSe ) - ( MUR + MUR ) ) ),MUR ) ) * ( Max( RCSe,( MUM * DS ) ) / Min( DS ,( CS / ( MLU + Max( MUM,RCSe ) ) ) ) ) ) ) / Min( CS ,DS ) )", "obj1": 0.3545816733067729, "obj2": 0.4526018663262579}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - Min( Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Min( FirstVNF_Mem ,PN ) + FirstVNF_Mem_Server ) ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) - ( DS / ( MUC / MLU ) ) ) * ( DS / ( ( MUR / DS ) - ( MLU - RCSe ) ) ) ) ) / ( DS / ( CS / MLU ) ) )", "obj1": 0.2649402390438247, "obj2": 0.5700748269302004}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem * BR ) + Min( ( Min( Min( ACS ,FirstVNF_Mem ) ,( ARS * FirstVNF_CPU ) ) + Min( Const ,ACS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( ( Min( Min( FirstVNF_Mem ,ACS ) ,DDR ) + Min( Const ,CRS ) ) + ARS ) / ( FirstVNF_RAM_Server / AMS ) ) * ( ( PN / FirstVNF_Mem_Server ) + ( FirstVNF_Mem - Min( ( ( PN / MDR ) - ( Max( AMS,FirstVNF_RAM_Server ) - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( RCSe ,DS ) / ( Max( RMSe,DS ) / RCSe ) )", "obj1": 0.950199203187251, "obj2": 0.02134294970035996}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( DDR ,Min( ACS ,FirstVNF_Mem ) ) + Min( Const ,CRS ) ) + Min( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - ( Const * DDR ) ),MDR ) ,Max( ( FirstVNF_CPU_Server + BR ),RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM / AMS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( FirstVNF_CPU_Server - ( MDR / PN ) ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / Max( MUR,CS ) ) ) * ( DS * ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) ) ) * ( ( ( ( RRSe - Min( RRSe ,( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( ( MLU * MUM ),( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.3286852589641434, "obj2": 0.4896307554923697}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( RRSe * Min( RRSe ,MUC ) ) / Min( MUM ,DS ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3147410358565737, "obj2": 0.5027482280556288}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( Max( ( RRSe * MUR ),MUC ) - MUC ) ) ) * ( ( ( ( DS / ( MUM / MLU ) ) * ( MUR - Max( DS,CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7609561752988048, "obj2": 0.10348753863027829}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( DDR / PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RCSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.44621513944223107, "obj2": 0.3470978434981277}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) * FirstVNF_CPU_Server ) + ( ( ( ( AMS * AMS ) - DDR ) - ( Min( ( ( AMS / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( PN / Max( PN,AMS ) ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) ) )", "choosing": "( ( ( ( CS / ( MUR / MUM ) ) / Min( RCSe ,DS ) ) * ( ( ( MUR - ( MUR * CS ) ) / ( RMSe / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.26294820717131473, "obj2": 0.5781599843798556}, {"determining": "( Min( MRS ,BR ) + ( ( ( ( AMS * AMS ) - DDR ) - ( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUR - ( MUR * CS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / ( ( MUR - ( MUR * CS ) ) + ( DS + DS ) ) )", "obj1": 0.6713147410358565, "obj2": 0.17000409052488}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5936254980079682, "obj2": 0.2258191046013538}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( PN + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( MUR / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.16334661354581673, "obj2": 0.6992816323033625}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + ( Min( FirstVNF_Mem ,AMS ) * MRS ) ) * ( ( ( FirstVNF_Mem + AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - Max( Max( Min( PN ,RRS ),( ARS - DDR ) ),( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server + ( Max( BR,FirstVNF_Mem_Server ) - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU + Min( RRSe ,DS ) ) + MLU ) / MUM ) / DS ) ) * RRSe ) / ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) - RMSe ) ) - MUR ) )", "obj1": 0.39243027888446214, "obj2": 0.4144654396572692}, {"determining": "( ( FirstVNF_CPU_Server * Max( MDR,Max( ( MRS / ( ( Max( PN,FirstVNF_Mem_Server ) + ARS ) * Max( RRS,( FirstVNF_RAM_Server / MDR ) ) ) ),( ( ( MRS * BR ) / ( MRS * FirstVNF_Mem ) ) + RRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( MUM * ( RMSe + RRSe ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.1852589641434263, "obj2": 0.6736651734046396}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ARS * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - Max( CRS,FirstVNF_RAM_Server ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( ( Max( MUR,( RRSe + MLU ) ) + ( MLU - CS ) ) * Min( RRSe ,Max( ( RCSe + MUM ),MUM ) ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( CS + MLU ) ) * Min( ( RMSe + MUC ) ,RRSe ) ) - Max( RRSe,( ( MUM + MUC ) * Min( MUC ,RRSe ) ) ) ) ) ) ) + Max( ( MUC * MUC ),CS ) )", "obj1": 0.651394422310757, "obj2": 0.17938266925657195}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + RRS ) ) ) ) ) + Max( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ),( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ( ACS + FirstVNF_CPU_Server ) / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( DS,( MUM + DS ) ) / Max( DS,( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( ( MUR * CS ) - MUR ) ) / MUM ) / Min( MUR ,MUR ) ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.30677290836653387, "obj2": 0.5138821277844913}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( Min( FirstVNF_RAM ,RRS ),( ( Const - Min( BR ,MDR ) ) - ARS ) ) ) ) ) + ( ( ( FirstVNF_Mem + CRS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_CPU - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( MUC + MLU ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( Max( MUC,MLU ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( CS * MUR ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.7928286852589641, "obj2": 0.07965411192716688}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) + ( ( Const + ( FirstVNF_Mem - Min( ( ( MDR / ( MDR * FirstVNF_CPU ) ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_Mem + ARS ) - BR ) ) )", "choosing": "( Max( ( MUR * ( ( RMSe + RRSe ) - MUC ) ),( Max( MLU,MUM ) * ( ( ( ( MLU + RMSe ) * CS ) - RRSe ) + Max( ( MUR * MUC ),MUC ) ) ) ) + ( ( CS * ( RCSe * Min( RMSe ,MLU ) ) ) * ( ( Max( CS,( ( ( MUM * RMSe ) * RRSe ) * RMSe ) ) + ( MLU - CS ) ) * ( ( ( ( ( MLU / CS ) / Max( MUM,MLU ) ) * ( MUR * MLU ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2878936053541786}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( ARS / FirstVNF_CPU ) ) * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server * ACS ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( ( ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) + FirstVNF_CPU ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) * ( FirstVNF_RAM_Server + ( BR - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,Min( ( ( RCSe * DS ) - Min( MUM ,Min( RMSe ,MUC ) ) ) ,RCSe ) ) - MUC ) / ( RMSe + RMSe ) ) / CS )", "obj1": 0.8326693227091634, "obj2": 0.06369272110000138}, {"determining": "( ( ( DDR - ( PN / ( DDR * Max( FirstVNF_CPU,Max( BR,CRS ) ) ) ) ) - FirstVNF_CPU ) + ( DDR * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( Min( MUR ,MUC ) * ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) ) ) + ( MUR / MUR ) )", "obj1": 0.6912350597609562, "obj2": 0.15155598365062198}, {"determining": "( ( Max( ( DDR - ARS ),MRS ) * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + ( FirstVNF_RAM + CRS ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( Max( RRSe,( RRSe - RRSe ) ) / Min( RCSe ,DS ) )", "obj1": 0.39641434262948205, "obj2": 0.4059650228821945}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MDR ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / CS ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.19721115537848605, "obj2": 0.6536429674789754}, {"determining": "( ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) / CRS ),FirstVNF_RAM ) / ARS ) ) * ( Const / CRS ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MLU + DS ) ) * ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( RRSe / MLU ) ) * ( MUR - ( MUR * MUM ) ) ) / DS ) / DS ) ) ) / Min( DS ,RCSe ) )", "obj1": 0.23705179282868527, "obj2": 0.6108169382171359}, {"determining": "( Max( Const,BR ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( MRS + Max( ACS,CRS ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( DS / ( CS / MLU ) ) / Max( RCSe,( MUM + ( CS / Min( CS ,DS ) ) ) ) ) * ( Max( CS,( MUR + CS ) ) + RMSe ) ) ) / ( ( MLU - MLU ) - RCSe ) )", "obj1": 0.3705179282868526, "obj2": 0.4431400260106638}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) + Min( Const ,CRS ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) / ( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUM * MUM ) / ( RCSe - ( MUM + DS ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( Min( RMSe ,MUC ) * MUR ) ) / MUM ) / RCSe ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.3247011952191235, "obj2": 0.4997692936811018}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) + ( ( ( ( AMS * AMS ) - DDR ) - ( Min( ( ( AMS / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( PN / Max( PN,AMS ) ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( Max( CS,( ( ( ( RRSe / RMSe ) - MUC ) * RRSe ) / RMSe ) ) ,DS ) )", "obj1": 0.5796812749003984, "obj2": 0.23937543380618526}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) + Min( ( ( FirstVNF_Mem + ARS ) / Min( Min( ( ( ARS / PN ) - FirstVNF_CPU ) ,Max( ( FirstVNF_CPU - FirstVNF_CPU_Server ),RRS ) ) ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ACS - ARS ) ) ) ) ) ,( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - ( CRS * RRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS / ( MUC / MLU ) ) + ( ( RMSe * Min( MUR ,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,Max( MUR,MUC ) ) )", "obj1": 0.8067729083665338, "obj2": 0.07297608273328995}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server - ( ( Min( Min( ACS ,FirstVNF_Mem ) ,DDR ) + Min( Const ,CRS ) ) + Min( Max( MDR,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + Max( ( FirstVNF_Mem - FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( ( ( RRSe + Min( ( MUM / DS ) ,MLU ) ) * ( Min( DS ,DS ) * RCSe ) ) * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( MLU / CS ) ) ) * ( ( ( ( RRSe / ( CS / RRSe ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.30278884462151395, "obj2": 0.5286777317938932}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_Mem + ARS ) / Min( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,Max( ( FirstVNF_CPU - FirstVNF_CPU_Server ),RRS ) ) ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ACS - ARS ) ) ) ) ) ,( FirstVNF_RAM_Server + ( Min( ( Min( RRS ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / PN ) - ( CRS * RRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( DS / ( MUC / MLU ) ) + ( ( MUC * Min( MUR ,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.9023904382470119, "obj2": 0.03819381362824446}, {"determining": "( ( ( ( PN / ( ( ( RRS * DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM_Server ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( RMSe - ( MUR * CS ) ) ) / ( MUR / ( DS / MLU ) ) ) / DS ) ) ) / Min( Max( RMSe,( ( ( MUM * RMSe ) * RRSe ) / ( Max( MLU,MUC ) * ( CS - ( RRSe - Max( RRSe,RRSe ) ) ) ) ) ) ,DS ) )", "obj1": 0.4820717131474104, "obj2": 0.3158761092448881}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) * Min( Min( ARS ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( ARS ,FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server + MDR ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),( ( ( RRSe / ( RRSe / MLU ) ) * ( MUR - ( MUR * RRSe ) ) ) / MUM ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUM + MUC ) ) - RRSe ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( ( RRSe / RRSe ) ,RRSe ) * MLU ) - CS ) ) * ( ( ( ( RCSe / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.547808764940239, "obj2": 0.26223530377951665}, {"determining": "( ( ( ( PN / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server - PN ) ) ) ) + DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ARS + FirstVNF_RAM_Server ) ) ) + Min( ( ( FirstVNF_Mem + ARS ) / Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server - ( ACS - ARS ) ) ) ) ) ,( FirstVNF_RAM_Server + ( Min( ( Min( Const ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( Max( AMS,( DDR - ARS ) ) / DDR ) ) - Min( ( ( MDR / ( FirstVNF_CPU - MRS ) ) - ( CRS * RRS ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( ( ( RMSe - MUC ) * ( DS - MUC ) ) ,Min( RRSe ,MLU ) ) + MUR ) ) + ( ( MUC * Min( MUR ,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) + ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - Max( MUC,RCSe ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.8466135458167331, "obj2": 0.06242042135035422}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) + ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,MUC ) + Min( ( ( DS * ( ( ( ( MUM + MUC ) / RRSe ) - RRSe ) - Max( RRSe,( ( MLU + CS ) * DS ) ) ) ) * CS ) ,( Min( CS ,( MLU - CS ) ) * ( Min( ( CS - Max( MUR,RRSe ) ) ,CS ) / DS ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26859698506377516}, {"determining": "( ( ( ( PN / ( ( Min( ARS ,FirstVNF_CPU ) + ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) ) * Min( Min( ARS ,Max( AMS,FirstVNF_RAM_Server ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( ARS - Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( FirstVNF_Mem + ARS ) - ( FirstVNF_RAM_Server + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( Min( PN ,MRS ) / PN ) - FirstVNF_CPU ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR * Max( ( RMSe + RRSe ),MUC ) ),Max( Max( MUM,( MUR * ( CS + RCSe ) ) ),( Min( MUR ,RRSe ) + ( ( MUR / MUR ) + ( Min( MUM ,MUM ) / ( MUM - ( DS + RRSe ) ) ) ) ) ) ) + Min( ( CS * ( RCSe * ( ( ( RRSe / ( MUC + MUM ) ) - RRSe ) - ( RRSe + ( Max( DS,RRSe ) + MUM ) ) ) ) ) ,( ( Max( MUR,( RRSe - ( Min( MUM ,MUC ) * RCSe ) ) ) + ( MLU - CS ) ) * ( ( ( ( DS / ( MLU / CS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5039840637450199, "obj2": 0.2938581029646128}, {"determining": "( ( ( Const / AMS ) + AMS ) + ( ( ( PN + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ACS ) )", "choosing": "( ( ( ( CS - ( ( RCSe * MLU ) * MUM ) ) / MLU ) * ( ( Max( RCSe,( MUM + ( CS / ( CS / DS ) ) ) ) / ( DS / ( MUM / MLU ) ) ) * ( ( ( ( ( MUC / MLU ) / Max( RMSe,CS ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.1952191235059761, "obj2": 0.6655911906752706}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( FirstVNF_Mem_Server,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / Max( MUM,MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.603585657370518, "obj2": 0.2189203015765457}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Max( Max( DDR,Max( Min( Const ,DDR ),Min( MDR ,FirstVNF_Mem ) ) ),FirstVNF_CPU_Server ) ) ) ) + ( ( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( ( MDR / PN ) - FirstVNF_CPU ) * ( MDR / PN ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( ( CS / ( MUM + MUC ) ) - RRSe ) - Max( CS,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( Max( RMSe,RMSe ) / MUM ) / DS ) ) ) )", "obj1": 0.8565737051792829, "obj2": 0.05484347149563179}, {"determining": "( ( ( ( ( Max( BR,BR ) + FirstVNF_RAM_Server ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),FirstVNF_Mem ) ,( ( Max( FirstVNF_Mem_Server,MRS ) + BR ) * RRS ) ) ) / FirstVNF_Mem_Server ) * Max( MDR,PN ) ) + ( MDR + FirstVNF_RAM ) )", "choosing": "( ( RRSe + Min( RCSe ,( ( Min( ( ( MLU + RMSe ) + MLU ) ,( RRSe - MUC ) ) - ( ( MUC + ( RRSe - MUR ) ) / RCSe ) ) + RRSe ) ) ) / Min( DS ,DS ) )", "obj1": 0.3645418326693227, "obj2": 0.4475354834098479}, {"determining": "( ( Max( Min( ( ARS + ( Min( FirstVNF_RAM ,( CRS * DDR ) ) * RRS ) ) ,MDR ),BR ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * Min( MUC ,DS ) ) ) / Max( ( DS / MUM ),Min( CS ,( ( CS / Max( MUR,Max( MLU,( MUC * RCSe ) ) ) ) * Min( MUC ,( Min( MUC ,Min( MUM ,CS ) ) * ( RMSe - MLU ) ) ) ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7653000680829934}, {"determining": "( Min( ( MRS / FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) + ( ( ( FirstVNF_Mem + ARS ) / ( ARS / Max( ( Const / ARS ),Min( ( RRS * CRS ) ,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) * ( FirstVNF_RAM_Server + ( CRS - Max( AMS,BR ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( MUM / DS ) ) / ( DS / Min( MUC ,MLU ) ) ) * ( ( ( ( DS / ( DS / RCSe ) ) * ( MUR - ( MUM * CS ) ) ) / MUM ) / DS ) ) * RRSe ) / Min( RCSe ,DS ) )", "obj1": 0.16733067729083664, "obj2": 0.6904375684273857}, {"determining": "( ( ( Min( FirstVNF_Mem ,ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * Max( RRS,Const ) ) + ( Const / PN ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( CS / ( CS + Min( RCSe ,DS ) ) ) ) ) * ( ( ( ( ( MUC / MLU ) / DS ) * ( Max( RRSe,MUM ) - ( MUC * MUM ) ) ) / MUM ) / MUR ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.21713147410358566, "obj2": 0.6400605458989083}, {"determining": "( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Const ,( ACS + ( MDR / PN ) ) ) ) ) * ( FirstVNF_Mem_Server - ( ( BR + ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) + Min( Min( ( BR + ( FirstVNF_Mem_Server * RRS ) ) ,PN ) ,( ( ARS + BR ) + FirstVNF_Mem ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( DS * ( ( Max( RCSe,( MUM + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( MLU / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.7709163346613546, "obj2": 0.09228970522528003}, {"determining": "( ( ( DDR - ( PN / ( ( Max( FirstVNF_Mem,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR * PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( MRS - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( Max( CS,( ( ( ( RRSe + MLU ) * MUC ) * RRSe ) / RMSe ) ) ,DS ) )", "obj1": 0.4900398406374502, "obj2": 0.3087576633754218}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( MDR + FirstVNF_RAM_Server ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( Max( CS,( ( ( MUM * RRSe ) * RRSe ) / RMSe ) ) ,DS ) )", "obj1": 0.6135458167330677, "obj2": 0.21330978778428425}, {"determining": "( ( ( ( FirstVNF_RAM - Min( ( RRS * Const ) ,AMS ) ) - MRS ) - ( ( MRS * AMS ) / ( FirstVNF_RAM + MDR ) ) ) + ( CRS - PN ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( CS * ( RCSe * ( ( RRSe - ( RRSe / Max( MUM,MUC ) ) ) - Max( RRSe,( DS * Min( MUC ,RRSe ) ) ) ) ) ) ,( ( Max( MUR,( RRSe - MUM ) ) + ( Max( ( MUC / ( MUR - CS ) ),Max( Min( RRSe ,MUC ),MUC ) ) + CS ) ) * ( ( ( ( DS / ( CS / MUR ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.6772908366533864, "obj2": 0.15971620401722436}, {"determining": "( ( Max( Min( ( FirstVNF_Mem_Server - ( MRS * PN ) ) ,MDR ),( Max( ( FirstVNF_CPU_Server + PN ),FirstVNF_RAM_Server ) / Max( Const,( ACS * AMS ) ) ) ) * CRS ) / ( FirstVNF_Mem + ARS ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( Max( DS,( ( DS - MUR ) + Max( CS,CS ) ) ) * MUM ) / DS ) ) ) / CS )", "obj1": 0.11155378486055777, "obj2": 0.8079860046179493}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + Const ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( AMS,( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( Max( CS,( ( ( ( RRSe / RMSe ) - MUC ) * RRSe ) / RMSe ) ) ,DS ) )", "obj1": 0.5876494023904383, "obj2": 0.23343337973740796}, {"determining": "( ( Max( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( MDR + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ),DDR ) - ( Max( Min( ( ( ( FirstVNF_Mem_Server - AMS ) - ARS ) - FirstVNF_RAM ) ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + RRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUM * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( MUR + ( Min( ( MLU - Min( CS ,CS ) ) ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + DS ) ,DS ) )", "obj1": 0.45617529880478086, "obj2": 0.34496869772216104}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - MRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( Max( FirstVNF_Mem_Server,CRS ) + ( DDR * Const ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( MUC / Min( ( MUR / MUC ) ,DS ) ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) * ( ( MUR + ( Min( ( MUR / RCSe ) ,( ( RMSe - MUM ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.6294820717131474, "obj2": 0.19520856926903848}, {"determining": "( ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( Const ,( ACS + ( MDR / PN ) ) ) ) ) * ( FirstVNF_Mem_Server - ( ( BR + ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + MDR ) ) ) + Min( Min( ( BR + ( FirstVNF_Mem_Server * RRS ) ) ,PN ) ,( ( ARS + BR ) + FirstVNF_Mem ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server / ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) / FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * Min( RRSe ,( ( ( ( ( CS / MLU ) / ( MUC / MUC ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Max( MUC,DS ) )", "obj1": 0.7808764940239044, "obj2": 0.08677223700859069}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( ( ARS + BR ) + RRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + ( ( MUC * Max( MUR,MUC ) ) / MUM ) ) * ( ( Min( Min( RRSe ,RRSe ) ,MUC ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Min( RCSe ,DS ) )", "obj1": 0.4760956175298805, "obj2": 0.3213491756842873}, {"determining": "( ( ( MRS * ( PN / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + ( ARS + FirstVNF_Mem ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( Max( MUR,( RRSe - MUM ) ) + ( ( Min( MUC ,RRSe ) * MLU ) - CS ) ) * ( ( Max( RMSe,RMSe ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( RRSe + MUC ) ) - RRSe ) - Max( CS,( DS / Min( CS ,DS ) ) ) ) ) ) ) )", "obj1": 0.6832669322709163, "obj2": 0.1580612065739134}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * Min( Min( ( FirstVNF_CPU / MRS ) ,Max( AMS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( ( ( Max( MUR,( RRSe - MUM ) ) + ( RRSe - CS ) ) * ( ( Max( RMSe,RMSe ) / MUM ) / DS ) ) ,( CS * ( RCSe * ( ( ( RRSe / ( RRSe + MUC ) ) - RRSe ) - Max( CS,( DS / Min( CS ,DS ) ) ) ) ) ) ) )", "obj1": 0.9103585657370518, "obj2": 0.03752361474730638}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) + ( ( ( ( AMS * AMS ) - DDR ) - ( Min( ( ( AMS / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( PN / Max( PN,AMS ) ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) ) )", "choosing": "( ( ( ( CS / ( MUR / MUM ) ) / Min( RCSe ,DS ) ) * ( ( ( MUR - ( MUR * CS ) ) / ( RMSe / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( DS * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.5258964143426295, "obj2": 0.28587825815899515}, {"determining": "( ( ( DDR - ( PN / ( Max( CRS,DDR ) / FirstVNF_RAM ) ) ) - FirstVNF_CPU ) + ( ( ( ACS * FirstVNF_CPU_Server ) - ( ( ARS + BR ) + RRS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( ( ( Max( RCSe,( MUM + CS ) ) / Min( RRSe ,RRSe ) ) / ( DS / ( CS / MUC ) ) ) * ( ( ( ( MUR - ( DS * CS ) ) * ( DS / ( MUC / MLU ) ) ) / MUM ) / DS ) ) ) / Min( ( CS * ( ( Max( MLU,DS ) / MUM ) / ( RMSe - RMSe ) ) ) ,DS ) )", "obj1": 0.6215139442231076, "obj2": 0.20427651891752643}, {"determining": "( ( ( ( PN / ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) * Min( Min( ARS ,( MDR / MDR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - ( Max( AMS,( DDR - ARS ) ) / ( ( ( ( ( FirstVNF_Mem + BR ) / ( FirstVNF_CPU_Server + ARS ) ) * Min( FirstVNF_CPU ,ARS ) ) * Min( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) ,FirstVNF_CPU_Server ) ) + ARS ) ) ) + ( Min( AMS ,RRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( ACS + ( MDR / FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUC * MUC ),CS ) + Min( Min( ( Max( ( MUR / MUM ),RRSe ) - DS ) ,MUC ) ,( ( ( ( Min( ( RRSe / RRSe ) ,MUC ) * MLU ) - CS ) + Max( MLU,( RRSe - MUM ) ) ) * ( ( ( ( RCSe / ( CS / DS ) ) * ( RRSe / RRSe ) ) / MUM ) / DS ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.2552346295447776}, {"determining": "( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( Max( AMS,FirstVNF_RAM_Server ) - ( MDR / PN ) ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / ( CS / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MLU * CS ) ) ) / MUM ) / DS ) ) * ( ( ( ( RRSe - ( RRSe * ( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.7430278884462151, "obj2": 0.111084031235506}, {"determining": "( ( ACS / ( FirstVNF_CPU_Server + Max( RRS,PN ) ) ) + ( ( ( Max( ( BR + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),MRS ) + ARS ) / ( MDR + FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM_Server + ( Min( ( Min( ( AMS / ACS ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_Mem / Max( BR,FirstVNF_Mem_Server ) ) ) - Min( ( ( FirstVNF_CPU_Server / PN ) - DDR ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( RMSe + ( ( DS + RMSe ) + Min( CS ,CS ) ) ) - MUM ) / ( ( ( Min( ( ( ( MUR / MUC ) + ( MUR + MUC ) ) * RRSe ) ,MLU ) * Min( Min( Max( MLU,MUM ) ,Max( CS,( MUM - MUM ) ) ) ,( Min( CS ,( RMSe - MUR ) ) + Min( RRSe ,( RRSe * RRSe ) ) ) ) ) - MUM ) + MUM ) )", "obj1": 0.750996015936255, "obj2": 0.10446855590232887}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,Max( ARS,BR ) ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ARS * ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( BR - AMS ) ,MRS ) ) ) + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( RRSe * DS ),( ( ( DS / ( CS / MLU ) ) / Min( Min( RRSe ,RRSe ) ,MUC ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - MUC ) ) / MUM ) / DS ) ) ) + Min( ( CS * ( RCSe * ( RMSe / ( RRSe - MUM ) ) ) ) ,( RMSe - ( MUC + ( ( ( RCSe - ( MLU - RCSe ) ) / MUC ) / RRSe ) ) ) ) )", "obj1": 0.7051792828685259, "obj2": 0.15066099178148784}, {"determining": "( ( ( ( PN / ( ( Max( AMS,( DDR - ARS ) ) / DDR ) * ( BR - ( DDR + FirstVNF_RAM_Server ) ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( MDR + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,( ( ( MUM + RMSe ) / MUR ) + DS ) ) / ( DS / ( MUR / MLU ) ) ) * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / Max( Min( Max( MUM,MUR ) ,( RMSe * MUR ) ),MUR ) ) ) * ( ( ( ( RRSe - ( RRSe * ( RMSe - MUR ) ) ) / ( CS + MUM ) ) / ( MUC + ( ( Min( MUC ,MUM ) * RMSe ) - RRSe ) ) ) + CS ) ) / Max( ( Min( Min( MUM ,Max( RMSe,( RRSe - MUM ) ) ) ,MUC ) * RRSe ),DS ) )", "obj1": 0.7330677290836654, "obj2": 0.1186429273120863}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( ( ( ( MDR + PN ) - DDR ) + Min( Const ,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( Min( DDR ,FirstVNF_CPU ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( Min( RRSe ,MUC ) ,MUC ) / Max( DS,( CS / MLU ) ) ) * ( ( ( ( ( CS + DS ) / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) - Max( RCSe,( RRSe * Max( CS,RMSe ) ) ) )", "obj1": 0.4581673306772908, "obj2": 0.3357908929378935}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( MRS + MDR ) / ( FirstVNF_RAM_Server + Const ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server - ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( Min( Min( CRS ,DDR ) ,FirstVNF_Mem_Server ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - ( ( FirstVNF_CPU_Server + ACS ) / ( ( PN / MDR ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( ( Max( RMSe,RCSe ) - MUM ) ,MUC ) * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( Min( DS ,CS ) + Min( CS ,DS ) ) ) / MUM ) / DS ) ) ) / Min( Max( CS,( Min( ( ( RRSe / RMSe ) - MUC ) ,RRSe ) / RMSe ) ) ,DS ) )", "obj1": 0.5338645418326693, "obj2": 0.27474013906449785}, {"determining": "( ( ( ( PN / ( ( Max( FirstVNF_Mem,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem + ARS ) ,FirstVNF_CPU ) ) ) ) - DDR ) - ( Max( Min( FirstVNF_RAM ,RRS ),( DDR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( Const / ( FirstVNF_CPU_Server * ( Max( AMS,( BR - ARS ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( RRSe * ( ( ( ( RRSe / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( Max( CS,( ( MUM * RRSe ) / RMSe ) ) ,DS ) )", "obj1": 0.50199203187251, "obj2": 0.30385527210210506}, {"determining": "( ( ( ( PN / ( DDR * Min( Min( ( PN / MRS ) ,PN ) ,FirstVNF_CPU_Server ) ) ) - DDR ) - FirstVNF_CPU ) + ( ( ( ACS + FirstVNF_CPU_Server ) - ARS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Max( RCSe,( MUM / DS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.2051792828685259, "obj2": 0.6449799028343882}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( ACS + Min( CRS ,FirstVNF_Mem_Server ) ) + Min( Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),MDR ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem + ARS ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ARS ) ,( DDR * ( CRS + Const ) ) ) ) ) ) )", "choosing": "( Max( ( Max( MLU,Max( ( ( Max( CS,CS ) - RRSe ) / RCSe ),MUM ) ) * ( ( ( ( MUR * Max( MUR,MUC ) ) - CS ) / ( MUC + Max( ( MUR * MUC ),( DS + MUR ) ) ) ) / MUC ) ),CS ) / Min( RCSe ,DS ) )", "obj1": 0.3047808764940239, "obj2": 0.5219919476147454}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem + BR ) + Min( Min( PN ,PN ) ,( ( ARS + BR ) + RRS ) ) ) ) ) + ( ( ( ( AMS * AMS ) - DDR ) - ( Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( MDR / PN ) ) / ( FirstVNF_RAM_Server + ARS ) ) ) + ( ( FirstVNF_Mem - Min( ( ( MDR / PN ) - ( FirstVNF_RAM - PN ) ) ,( ACS + FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_CPU + MDR ) / ( FirstVNF_Mem + ARS ) ) ) ) )", "choosing": "( ( RRSe * ( ( ( MUR - ( MUR * CS ) ) / ( DS / ( MUC / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( RCSe ,DS ) )", "obj1": 0.6454183266932271, "obj2": 0.18859222961123337}, {"determining": "( ( ( ( PN / ( ( Max( RRS,DDR ) + FirstVNF_Mem ) * ( ( ( FirstVNF_Mem + MDR ) / ( MDR + FirstVNF_CPU_Server ) ) * Min( ARS ,FirstVNF_CPU ) ) ) ) - DDR ) - Min( Min( ACS ,PN ) ,FirstVNF_Mem_Server ) ) + ( ( ( ARS + BR ) + RRS ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem - Min( ( ( MDR / PN ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) )", "choosing": "( ( RRSe * ( ( Min( MUC ,Min( RRSe ,RRSe ) ) / ( ( RCSe * MUC ) / ( CS / MLU ) ) ) * ( ( ( ( DS / ( MUC / MLU ) ) * ( MUR - ( MUR * CS ) ) ) / MUM ) / DS ) ) ) / Min( ( ( MUR + ( Min( MUC ,( ( RMSe - MUC ) * ( RCSe - MUC ) ) ) + MUR ) ) + DS ) ,DS ) )", "obj1": 0.5557768924302788, "obj2": 0.25968010302390854}, {"determining": "( ( Max( Min( ( ARS + ( MRS * ( FirstVNF_RAM * DDR ) ) ) ,FirstVNF_CPU_Server ),Min( ACS ,Min( ( FirstVNF_CPU_Server * DDR ) ,MRS ) ) ) * CRS ) / Max( FirstVNF_CPU,Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * ( ( RMSe / ( RRSe * DS ) ) * ( ( ( MUC * MUC ) / MUM ) / DS ) ) ) / Min( RMSe ,Min( Min( DS ,RMSe ) ,( ( DS + MLU ) - ( MUC * Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7592080017570353}]}